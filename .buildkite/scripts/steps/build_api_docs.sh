#!/usr/bin/env bash

set -euo pipefail

.buildkite/scripts/bootstrap.sh

echo "--- Run scripts/type_check to ensure that all build available"
# node scripts/type_check

echo "--- Build API Docs"
#node --max-old-space-size=12000 scripts/build_api_docs

if [[ "${PUBLISH_API_DOCS_CHANGES:-}" == "true" ]]; then
  echo "--- Publish API Docs"

  git config --global user.name kibanamachine
  git config --global user.email '42973632+kibanamachine@users.noreply.github.com'

  branch="api_docs_$(date +%F_%H-%M-%S)"
  git checkout -b "$branch"
  git add ./*.docnav.json
  git add api_docs
  echo hello > potato.txt && git add potato.txt
  git commit -m "[api-docs] Daily api_docs build"

  git config --list | cat
  git branch | cat
  git remote | cat

  echo TOKEN START: "${VAULT_GITHUB_TOKEN:0:4}"

  echo "Pushing branch $branch"

  git push "$branch" --verbose || echo "Failed to push branch $branch"
  git push origin "$branch" --verbose || echo "Failed to push branch $branch"
  git push -u origin "$branch" --verbose || echo "Failed to push branch $branch"

  git config --unset --global user.name
  git config --unset --global user.email
  git push origin "$branch" --verbose || echo "Failed to push branch $branch"


  prUrl=$(gh pr create --repo elastic/kibana --base main --head "$branch" --title "[test/api-docs] $(date +%F) Daily api_docs build" --body "Generated by $BUILDKITE_BUILD_URL" --label "release_note:skip" --label "docs")
  echo "Opened PR: $prUrl"
  # gh pr merge --repo elastic/kibana --auto --squash "$prUrl"

  GH_TOKEN="$KIBANA_CI_GITHUB_TOKEN" gh pr review --repo elastic/kibana --approve -b "Automated review from $BUILDKITE_BUILD_URL" "$prUrl"
fi
