# yaml-language-server: $schema=https://gist.githubusercontent.com/elasticmachine/988b80dae436cafea07d9a4a460a011d/raw/rre.schema.json
apiVersion: backstage.io/v1alpha1
kind: Resource
metadata:
  name: bk-kibana-vm-images
  description: Build CI agent VM images for Kibana
  links:
    - url: 'https://buildkite.com/elastic/kibana-vm-images'
      title: Pipeline link
spec:
  type: buildkite-pipeline
  owner: group:kibana-operations
  system: buildkite
  implementation:
    apiVersion: buildkite.elastic.dev/v1
    kind: Pipeline
    metadata:
      name: kibana / vm images
      description: Build CI agent VM images for Kibana
    spec:
      env:
        SLACK_NOTIFICATIONS_CHANNEL: '#kibana-operations-alerts'
        ELASTIC_SLACK_NOTIFICATIONS_ENABLED: 'true'
      default_branch: main
      repository: elastic/ci-agent-images
      pipeline_file: vm-images/.buildkite/pipeline.yml
      provider_settings:
        trigger_mode: none
      schedules:
        "[ubuntu20.04] daily kibana base image build":
          branch: main
          cronline: '0 0 * * *'
          env:
            IMAGES_CONFIG: kibana/base_image.yml
          message: Builds Kibana VM base image daily (20.04)
        "[ubuntu20.04] daily kibana cache layer build":
          branch: main
          cronline: '0 1 * * *' # make sure this runs after the daily kibana base image build
          env:
            IMAGES_CONFIG: kibana/image_cache.yml
            BASE_IMAGES_CONFIG: 'core/images.yml,kibana/base_image.yml'
          message: Builds Kibana VM cache warmup daily (20.04)
        "[ubuntu20.04] daily kibana fips image build":
          branch: main
          cronline: '0 4 * * *' # make sure this runs after the daily kibana cache image build
          env:
            BASE_IMAGES_CONFIG: 'core/images.yml,kibana/base_image.yml,kibana/image_cache.yml'
            IMAGES_CONFIG: kibana/fips.yml
          message: Builds Kibana FIPS VM image daily (20.04)
        "[ubuntu24.04] weekly kibana base image build":
          branch: kibana-upgrade-ubuntu
          cronline: '0 0 * * 0' # Sunday at midnight
          env:
            IMAGES_CONFIG: kibana/base_image.yml
            FORCE_PROMOTE: "true"
          message: Builds Kibana VM base image daily (24.04)
        "[ubuntu24.04] weekly kibana packages layer build":
          branch: kibana-upgrade-ubuntu
          cronline: '0 1 * * 0' # make sure this runs after the weekly kibana base image build
          env:
            IMAGES_CONFIG: kibana/packages_layer.yml
            BASE_IMAGES_CONFIG: 'core/images.yml,kibana/base_image.yml'
            KIBANA_BRANCH: 'adopt-moon-clean'
            FORCE_PROMOTE: "true"
          message: Builds Kibana Packages Layer Weekly (24.04)
        "[ubuntu24.04] daily kibana cache image build":
          branch: kibana-upgrade-ubuntu
          cronline: '0 2 * * *' # Daily at 2AM UTC
          env:
            IMAGES_CONFIG: kibana/image_cache.tpl.yml
            BASE_IMAGES_CONFIG: 'core/images.yml,kibana/base_image.yml,kibana/packages_layer.yml'
            KIBANA_BRANCH: 'adopt-moon-clean'
            FORCE_PROMOTE: "true"
          message: Builds Kibana VM base image daily (24.04)
        "[ubuntu24.04] daily kibana fips image build":
          branch: kibana-upgrade-ubuntu
          cronline: '0 4 * * *'
          env:
            BASE_IMAGES_CONFIG: 'core/images.yml,kibana/base_image.yml,kibana/packages_layer.yml,kibana/image_cache.tpl.yml'
            IMAGES_CONFIG: kibana/fips.yml
            KIBANA_BRANCH: 'adopt-moon-clean'
            FORCE_PROMOTE: "true"
          message: Builds Kibana FIPS VM image daily (24.04)
      teams:
        kibana-operations:
          access_level: MANAGE_BUILD_AND_READ
        everyone:
          access_level: BUILD_AND_READ
