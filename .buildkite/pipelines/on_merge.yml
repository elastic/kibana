env:
  GITHUB_COMMIT_STATUS_ENABLED: 'true'
  GITHUB_COMMIT_STATUS_CONTEXT: 'buildkite/on-merge'
steps:
  - command: .buildkite/scripts/lifecycle/pre_build.sh
    label: Pre-Build
    timeout_in_minutes: 10
    agents:
      queue: kibana-default
    retry:
      automatic:
        - exit_status: '*'
          limit: 1
  - wait

  - label: 'Triggering changes-based pipelines'
    branches: main
    agents:
      queue: kibana-default
    plugins:
      - chronotc/monorepo-diff#v2.0.4:
          watch:
            - path:
                - 'versions.json'
              config:
                command: 'ts-node .buildkite/scripts/steps/trigger_pipeline.ts kibana-buildkite-pipelines-deploy main'
                label: 'Trigger pipeline deploy'
                agents:
                  queue: 'kibana-default'

  - command: .buildkite/scripts/steps/on_merge_build_and_metrics.sh
    label: Build Kibana Distribution and Plugins
    agents:
      queue: n2-16-spot
    key: build
    timeout_in_minutes: 60
    retry:
      automatic:
        - exit_status: '*'
          limit: 1

  - command: .buildkite/scripts/steps/on_merge_api_docs.sh
    label: Check Public API Docs
    key: public-api-docs
    agents:
      queue: n2-4-spot
    timeout_in_minutes: 80
    retry:
      automatic:
        - exit_status: '-1'
          limit: 3
        - exit_status: '*'
          limit: 1

  - command: .buildkite/scripts/steps/ci_stats_ready.sh
    label: Mark CI Stats as ready
    agents:
      queue: kibana-default
    timeout_in_minutes: 10
    depends_on:
      - build
      - public-api-docs
    retry:
      automatic:
        - exit_status: '*'
          limit: 1

  - command: .buildkite/scripts/steps/test/pick_test_group_run_order.sh
    label: 'Pick Test Group Run Order'
    agents:
      queue: kibana-default
    env:
      JEST_UNIT_SCRIPT: '.buildkite/scripts/steps/test/jest.sh'
      JEST_INTEGRATION_SCRIPT: '.buildkite/scripts/steps/test/jest_integration.sh'
      FTR_CONFIGS_SCRIPT: '.buildkite/scripts/steps/test/ftr_configs.sh'
    retry:
      automatic:
        - exit_status: '*'
          limit: 1

  - command: .buildkite/scripts/steps/lint.sh
    label: 'Linting'
    agents:
      queue: n2-8-spot
    key: linting
    timeout_in_minutes: 60
    retry:
      automatic:
        - exit_status: '-1'
          limit: 3

  - command: .buildkite/scripts/steps/lint_with_types.sh
    label: 'Linting (with types)'
    agents:
      queue: n2-16-spot
    key: linting_with_types
    timeout_in_minutes: 90
    retry:
      automatic:
        - exit_status: '-1'
          limit: 3

  - command: .buildkite/scripts/steps/checks.sh
    label: 'Checks'
    agents:
      queue: n2-2-spot
    timeout_in_minutes: 60
    retry:
      automatic:
        - exit_status: '-1'
          limit: 3

  - command: .buildkite/scripts/steps/check_types.sh
    label: 'Check Types'
    agents:
      queue: n2-16-spot
    timeout_in_minutes: 60
    retry:
      automatic:
        - exit_status: '-1'
          limit: 3

  - command: .buildkite/scripts/steps/storybooks/build_and_upload.sh
    label: 'Build Storybooks'
    agents:
      queue: n2-4-spot
    key: storybooks
    timeout_in_minutes: 60
    retry:
      automatic:
        - exit_status: '-1'
          limit: 3

  - command: .buildkite/scripts/steps/bazel_cache/bootstrap_linux.sh
    label: 'Populate local dev bazel cache (Linux)'
    agents:
      queue: n2-4-spot
    timeout_in_minutes: 30
    retry:
      automatic:
        - exit_status: '-1'
          limit: 3

  - wait: ~
    continue_on_failure: true

  - command: .buildkite/scripts/lifecycle/post_build.sh
    label: Post-Build
    timeout_in_minutes: 10
    agents:
      queue: kibana-default

  - wait

  - command: '.buildkite/scripts/steps/artifacts/docker_image_trigger.sh'
    label: Trigger container image build
    timeout_in_minutes: 10
    agents:
      queue: 'kibana-default'
