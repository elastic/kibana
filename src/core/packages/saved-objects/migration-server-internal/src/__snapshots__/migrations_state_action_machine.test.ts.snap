// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`migrationsStateActionMachine logs state transitions, messages in state.logs and action responses when reaching DONE 1`] = `
Object {
  "debug": Array [
    Array [
      "[.my-so-index] INIT RESPONSE",
    ],
    Array [
      "[.my-so-index] INIT -> LEGACY_REINDEX. took: 0ms.",
      Object {
        "kibana": Object {
          "migrations": Object {
            "duration": 0,
            "state": Object {
              "batchSize": 1000,
              "bulkOperationBatches": Array [
                Array [],
              ],
              "controlState": "LEGACY_REINDEX",
              "currentAlias": ".my-so-index",
              "discardCorruptObjects": false,
              "discardUnknownObjects": false,
              "esCapabilities": Object {
                "serverless": false,
              },
              "excludeFromUpgradeFilterHooks": Object {},
              "excludeOnUpgradeQuery": Object {
                "bool": Object {
                  "must_not": Array [
                    Object {
                      "term": Object {
                        "type": "deprecated_type_1",
                      },
                    },
                    Object {
                      "term": Object {
                        "type": "deprecatedType2",
                      },
                    },
                    Object {
                      "term": Object {
                        "type": "deprecated-type-3",
                      },
                    },
                  ],
                },
              },
              "hashToVersionMap": Object {
                "task|someHash": "10.1.0",
                "typeA|someHash": "10.1.0",
                "typeB|someHash": "10.1.0",
                "typeC|someHash": "10.1.0",
                "typeD|someHash": "10.1.0",
                "typeE|someHash": "10.1.0",
              },
              "indexPrefix": ".my-so-index",
              "indexTypes": Array [
                "typeA",
                "typeB",
                "typeC",
              ],
              "indexTypesMap": Object {
                ".kibana": Array [
                  "typeA",
                  "typeB",
                  "typeC",
                ],
                ".kibana_cases": Array [
                  "typeD",
                  "typeE",
                ],
                ".kibana_task_manager": Array [
                  "task",
                ],
              },
              "kibanaVersion": "7.11.0",
              "knownTypes": Array [],
              "latestMappingsVersions": Object {},
              "legacyIndex": ".my-so-index",
              "logs": Array [
                Object {
                  "level": "info",
                  "message": "Log from LEGACY_REINDEX control state",
                },
              ],
              "maxBatchSize": 1000,
              "maxBatchSizeBytes": 100000000,
              "maxReadBatchSizeBytes": 536870888,
              "migrationDocLinks": Object {
                "clusterShardLimitExceeded": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#cluster-shard-limit-exceeded",
                "repeatedTimeoutRequests": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#_repeated_time_out_requests_that_eventually_fail",
                "resolveMigrationFailures": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures",
                "routingAllocationDisabled": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#routing-allocation-disabled",
              },
              "mustRelocateDocuments": true,
              "outdatedDocuments": Array [],
              "outdatedDocumentsQuery": Object {
                "bool": Object {
                  "should": Array [],
                },
              },
              "preMigrationScript": Object {
                "_tag": "None",
              },
              "retryAttempts": 5,
              "retryCount": 0,
              "retryDelay": 0,
              "skipRetryReset": false,
              "targetIndexMappings": Object {
                "properties": Object {},
              },
              "tempIndex": ".my-so-index_7.11.0_reindex_temp",
              "tempIndexAlias": ".my-so-index_7.11.0_reindex_temp_alias",
              "tempIndexMappings": Object {
                "dynamic": false,
                "properties": Object {
                  "type": Object {
                    "type": "keyword",
                  },
                  "typeMigrationVersion": Object {
                    "type": "version",
                  },
                },
              },
              "versionAlias": ".my-so-index_7.11.0",
              "versionIndex": ".my-so-index_7.11.0_001",
              "waitForMigrationCompletion": false,
            },
          },
        },
      },
    ],
    Array [
      "[.my-so-index] LEGACY_REINDEX RESPONSE",
    ],
    Array [
      "[.my-so-index] LEGACY_REINDEX -> LEGACY_DELETE. took: 0ms.",
      Object {
        "kibana": Object {
          "migrations": Object {
            "duration": 0,
            "state": Object {
              "batchSize": 1000,
              "bulkOperationBatches": Array [
                Array [],
              ],
              "controlState": "LEGACY_DELETE",
              "currentAlias": ".my-so-index",
              "discardCorruptObjects": false,
              "discardUnknownObjects": false,
              "esCapabilities": Object {
                "serverless": false,
              },
              "excludeFromUpgradeFilterHooks": Object {},
              "excludeOnUpgradeQuery": Object {
                "bool": Object {
                  "must_not": Array [
                    Object {
                      "term": Object {
                        "type": "deprecated_type_1",
                      },
                    },
                    Object {
                      "term": Object {
                        "type": "deprecatedType2",
                      },
                    },
                    Object {
                      "term": Object {
                        "type": "deprecated-type-3",
                      },
                    },
                  ],
                },
              },
              "hashToVersionMap": Object {
                "task|someHash": "10.1.0",
                "typeA|someHash": "10.1.0",
                "typeB|someHash": "10.1.0",
                "typeC|someHash": "10.1.0",
                "typeD|someHash": "10.1.0",
                "typeE|someHash": "10.1.0",
              },
              "indexPrefix": ".my-so-index",
              "indexTypes": Array [
                "typeA",
                "typeB",
                "typeC",
              ],
              "indexTypesMap": Object {
                ".kibana": Array [
                  "typeA",
                  "typeB",
                  "typeC",
                ],
                ".kibana_cases": Array [
                  "typeD",
                  "typeE",
                ],
                ".kibana_task_manager": Array [
                  "task",
                ],
              },
              "kibanaVersion": "7.11.0",
              "knownTypes": Array [],
              "latestMappingsVersions": Object {},
              "legacyIndex": ".my-so-index",
              "logs": Array [
                Object {
                  "level": "info",
                  "message": "Log from LEGACY_REINDEX control state",
                },
                Object {
                  "level": "info",
                  "message": "Log from LEGACY_DELETE control state",
                },
              ],
              "maxBatchSize": 1000,
              "maxBatchSizeBytes": 100000000,
              "maxReadBatchSizeBytes": 536870888,
              "migrationDocLinks": Object {
                "clusterShardLimitExceeded": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#cluster-shard-limit-exceeded",
                "repeatedTimeoutRequests": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#_repeated_time_out_requests_that_eventually_fail",
                "resolveMigrationFailures": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures",
                "routingAllocationDisabled": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#routing-allocation-disabled",
              },
              "mustRelocateDocuments": true,
              "outdatedDocuments": Array [],
              "outdatedDocumentsQuery": Object {
                "bool": Object {
                  "should": Array [],
                },
              },
              "preMigrationScript": Object {
                "_tag": "None",
              },
              "retryAttempts": 5,
              "retryCount": 0,
              "retryDelay": 0,
              "skipRetryReset": false,
              "targetIndexMappings": Object {
                "properties": Object {},
              },
              "tempIndex": ".my-so-index_7.11.0_reindex_temp",
              "tempIndexAlias": ".my-so-index_7.11.0_reindex_temp_alias",
              "tempIndexMappings": Object {
                "dynamic": false,
                "properties": Object {
                  "type": Object {
                    "type": "keyword",
                  },
                  "typeMigrationVersion": Object {
                    "type": "version",
                  },
                },
              },
              "versionAlias": ".my-so-index_7.11.0",
              "versionIndex": ".my-so-index_7.11.0_001",
              "waitForMigrationCompletion": false,
            },
          },
        },
      },
    ],
    Array [
      "[.my-so-index] LEGACY_DELETE RESPONSE",
    ],
    Array [
      "[.my-so-index] LEGACY_DELETE -> LEGACY_DELETE. took: 0ms.",
      Object {
        "kibana": Object {
          "migrations": Object {
            "duration": 0,
            "state": Object {
              "batchSize": 1000,
              "bulkOperationBatches": Array [
                Array [],
              ],
              "controlState": "LEGACY_DELETE",
              "currentAlias": ".my-so-index",
              "discardCorruptObjects": false,
              "discardUnknownObjects": false,
              "esCapabilities": Object {
                "serverless": false,
              },
              "excludeFromUpgradeFilterHooks": Object {},
              "excludeOnUpgradeQuery": Object {
                "bool": Object {
                  "must_not": Array [
                    Object {
                      "term": Object {
                        "type": "deprecated_type_1",
                      },
                    },
                    Object {
                      "term": Object {
                        "type": "deprecatedType2",
                      },
                    },
                    Object {
                      "term": Object {
                        "type": "deprecated-type-3",
                      },
                    },
                  ],
                },
              },
              "hashToVersionMap": Object {
                "task|someHash": "10.1.0",
                "typeA|someHash": "10.1.0",
                "typeB|someHash": "10.1.0",
                "typeC|someHash": "10.1.0",
                "typeD|someHash": "10.1.0",
                "typeE|someHash": "10.1.0",
              },
              "indexPrefix": ".my-so-index",
              "indexTypes": Array [
                "typeA",
                "typeB",
                "typeC",
              ],
              "indexTypesMap": Object {
                ".kibana": Array [
                  "typeA",
                  "typeB",
                  "typeC",
                ],
                ".kibana_cases": Array [
                  "typeD",
                  "typeE",
                ],
                ".kibana_task_manager": Array [
                  "task",
                ],
              },
              "kibanaVersion": "7.11.0",
              "knownTypes": Array [],
              "latestMappingsVersions": Object {},
              "legacyIndex": ".my-so-index",
              "logs": Array [
                Object {
                  "level": "info",
                  "message": "Log from LEGACY_REINDEX control state",
                },
                Object {
                  "level": "info",
                  "message": "Log from LEGACY_DELETE control state",
                },
                Object {
                  "level": "info",
                  "message": "Log from LEGACY_DELETE control state",
                },
              ],
              "maxBatchSize": 1000,
              "maxBatchSizeBytes": 100000000,
              "maxReadBatchSizeBytes": 536870888,
              "migrationDocLinks": Object {
                "clusterShardLimitExceeded": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#cluster-shard-limit-exceeded",
                "repeatedTimeoutRequests": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#_repeated_time_out_requests_that_eventually_fail",
                "resolveMigrationFailures": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures",
                "routingAllocationDisabled": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#routing-allocation-disabled",
              },
              "mustRelocateDocuments": true,
              "outdatedDocuments": Array [],
              "outdatedDocumentsQuery": Object {
                "bool": Object {
                  "should": Array [],
                },
              },
              "preMigrationScript": Object {
                "_tag": "None",
              },
              "retryAttempts": 5,
              "retryCount": 0,
              "retryDelay": 0,
              "skipRetryReset": false,
              "targetIndexMappings": Object {
                "properties": Object {},
              },
              "tempIndex": ".my-so-index_7.11.0_reindex_temp",
              "tempIndexAlias": ".my-so-index_7.11.0_reindex_temp_alias",
              "tempIndexMappings": Object {
                "dynamic": false,
                "properties": Object {
                  "type": Object {
                    "type": "keyword",
                  },
                  "typeMigrationVersion": Object {
                    "type": "version",
                  },
                },
              },
              "versionAlias": ".my-so-index_7.11.0",
              "versionIndex": ".my-so-index_7.11.0_001",
              "waitForMigrationCompletion": false,
            },
          },
        },
      },
    ],
    Array [
      "[.my-so-index] LEGACY_DELETE RESPONSE",
    ],
    Array [
      "[.my-so-index] LEGACY_DELETE -> DONE. took: 0ms.",
      Object {
        "kibana": Object {
          "migrations": Object {
            "duration": 0,
            "state": Object {
              "batchSize": 1000,
              "bulkOperationBatches": Array [
                Array [],
              ],
              "controlState": "DONE",
              "currentAlias": ".my-so-index",
              "discardCorruptObjects": false,
              "discardUnknownObjects": false,
              "esCapabilities": Object {
                "serverless": false,
              },
              "excludeFromUpgradeFilterHooks": Object {},
              "excludeOnUpgradeQuery": Object {
                "bool": Object {
                  "must_not": Array [
                    Object {
                      "term": Object {
                        "type": "deprecated_type_1",
                      },
                    },
                    Object {
                      "term": Object {
                        "type": "deprecatedType2",
                      },
                    },
                    Object {
                      "term": Object {
                        "type": "deprecated-type-3",
                      },
                    },
                  ],
                },
              },
              "hashToVersionMap": Object {
                "task|someHash": "10.1.0",
                "typeA|someHash": "10.1.0",
                "typeB|someHash": "10.1.0",
                "typeC|someHash": "10.1.0",
                "typeD|someHash": "10.1.0",
                "typeE|someHash": "10.1.0",
              },
              "indexPrefix": ".my-so-index",
              "indexTypes": Array [
                "typeA",
                "typeB",
                "typeC",
              ],
              "indexTypesMap": Object {
                ".kibana": Array [
                  "typeA",
                  "typeB",
                  "typeC",
                ],
                ".kibana_cases": Array [
                  "typeD",
                  "typeE",
                ],
                ".kibana_task_manager": Array [
                  "task",
                ],
              },
              "kibanaVersion": "7.11.0",
              "knownTypes": Array [],
              "latestMappingsVersions": Object {},
              "legacyIndex": ".my-so-index",
              "logs": Array [
                Object {
                  "level": "info",
                  "message": "Log from LEGACY_REINDEX control state",
                },
                Object {
                  "level": "info",
                  "message": "Log from LEGACY_DELETE control state",
                },
                Object {
                  "level": "info",
                  "message": "Log from LEGACY_DELETE control state",
                },
                Object {
                  "level": "info",
                  "message": "Log from DONE control state",
                },
              ],
              "maxBatchSize": 1000,
              "maxBatchSizeBytes": 100000000,
              "maxReadBatchSizeBytes": 536870888,
              "migrationDocLinks": Object {
                "clusterShardLimitExceeded": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#cluster-shard-limit-exceeded",
                "repeatedTimeoutRequests": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#_repeated_time_out_requests_that_eventually_fail",
                "resolveMigrationFailures": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures",
                "routingAllocationDisabled": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#routing-allocation-disabled",
              },
              "mustRelocateDocuments": true,
              "outdatedDocuments": Array [],
              "outdatedDocumentsQuery": Object {
                "bool": Object {
                  "should": Array [],
                },
              },
              "preMigrationScript": Object {
                "_tag": "None",
              },
              "retryAttempts": 5,
              "retryCount": 0,
              "retryDelay": 0,
              "skipRetryReset": false,
              "targetIndexMappings": Object {
                "properties": Object {},
              },
              "tempIndex": ".my-so-index_7.11.0_reindex_temp",
              "tempIndexAlias": ".my-so-index_7.11.0_reindex_temp_alias",
              "tempIndexMappings": Object {
                "dynamic": false,
                "properties": Object {
                  "type": Object {
                    "type": "keyword",
                  },
                  "typeMigrationVersion": Object {
                    "type": "version",
                  },
                },
              },
              "versionAlias": ".my-so-index_7.11.0",
              "versionIndex": ".my-so-index_7.11.0_001",
              "waitForMigrationCompletion": false,
            },
          },
        },
      },
    ],
  ],
  "error": Array [],
  "fatal": Array [],
  "info": Array [
    Array [
      "[.my-so-index] Log from LEGACY_REINDEX control state",
    ],
    Array [
      "[.my-so-index] Log from LEGACY_DELETE control state",
    ],
    Array [
      "[.my-so-index] Log from LEGACY_DELETE control state",
    ],
    Array [
      "[.my-so-index] Log from DONE control state",
    ],
  ],
  "log": Array [],
  "trace": Array [],
  "warn": Array [],
}
`;

exports[`migrationsStateActionMachine logs state transitions, messages in state.logs and action responses when reaching FATAL 1`] = `
Object {
  "debug": Array [
    Array [
      "[.my-so-index] INIT RESPONSE",
    ],
    Array [
      "[.my-so-index] INIT -> LEGACY_DELETE. took: 0ms.",
      Object {
        "kibana": Object {
          "migrations": Object {
            "duration": 0,
            "state": Object {
              "batchSize": 1000,
              "bulkOperationBatches": Array [
                Array [
                  Object {
                    "index": Object {
                      "_id": "1234",
                    },
                  },
                ],
              ],
              "controlState": "LEGACY_DELETE",
              "currentAlias": ".my-so-index",
              "discardCorruptObjects": false,
              "discardUnknownObjects": false,
              "esCapabilities": Object {
                "serverless": false,
              },
              "excludeFromUpgradeFilterHooks": Object {},
              "excludeOnUpgradeQuery": Object {
                "bool": Object {
                  "must_not": Array [
                    Object {
                      "term": Object {
                        "type": "deprecated_type_1",
                      },
                    },
                    Object {
                      "term": Object {
                        "type": "deprecatedType2",
                      },
                    },
                    Object {
                      "term": Object {
                        "type": "deprecated-type-3",
                      },
                    },
                  ],
                },
              },
              "hashToVersionMap": Object {
                "task|someHash": "10.1.0",
                "typeA|someHash": "10.1.0",
                "typeB|someHash": "10.1.0",
                "typeC|someHash": "10.1.0",
                "typeD|someHash": "10.1.0",
                "typeE|someHash": "10.1.0",
              },
              "indexPrefix": ".my-so-index",
              "indexTypes": Array [
                "typeA",
                "typeB",
                "typeC",
              ],
              "indexTypesMap": Object {
                ".kibana": Array [
                  "typeA",
                  "typeB",
                  "typeC",
                ],
                ".kibana_cases": Array [
                  "typeD",
                  "typeE",
                ],
                ".kibana_task_manager": Array [
                  "task",
                ],
              },
              "kibanaVersion": "7.11.0",
              "knownTypes": Array [],
              "latestMappingsVersions": Object {},
              "legacyIndex": ".my-so-index",
              "logs": Array [
                Object {
                  "level": "info",
                  "message": "Log from LEGACY_DELETE control state",
                },
              ],
              "maxBatchSize": 1000,
              "maxBatchSizeBytes": 100000000,
              "maxReadBatchSizeBytes": 536870888,
              "migrationDocLinks": Object {
                "clusterShardLimitExceeded": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#cluster-shard-limit-exceeded",
                "repeatedTimeoutRequests": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#_repeated_time_out_requests_that_eventually_fail",
                "resolveMigrationFailures": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures",
                "routingAllocationDisabled": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#routing-allocation-disabled",
              },
              "mustRelocateDocuments": true,
              "outdatedDocuments": Array [
                Object {
                  "_id": "1234",
                },
              ],
              "outdatedDocumentsQuery": Object {
                "bool": Object {
                  "should": Array [],
                },
              },
              "preMigrationScript": Object {
                "_tag": "None",
              },
              "reason": "the fatal reason",
              "retryAttempts": 5,
              "retryCount": 0,
              "retryDelay": 0,
              "skipRetryReset": false,
              "targetIndexMappings": Object {
                "properties": Object {},
              },
              "tempIndex": ".my-so-index_7.11.0_reindex_temp",
              "tempIndexAlias": ".my-so-index_7.11.0_reindex_temp_alias",
              "tempIndexMappings": Object {
                "dynamic": false,
                "properties": Object {
                  "type": Object {
                    "type": "keyword",
                  },
                  "typeMigrationVersion": Object {
                    "type": "version",
                  },
                },
              },
              "versionAlias": ".my-so-index_7.11.0",
              "versionIndex": ".my-so-index_7.11.0_001",
              "waitForMigrationCompletion": false,
            },
          },
        },
      },
    ],
    Array [
      "[.my-so-index] LEGACY_DELETE RESPONSE",
    ],
    Array [
      "[.my-so-index] LEGACY_DELETE -> FATAL. took: 0ms.",
      Object {
        "kibana": Object {
          "migrations": Object {
            "duration": 0,
            "state": Object {
              "batchSize": 1000,
              "bulkOperationBatches": Array [
                Array [
                  Object {
                    "index": Object {
                      "_id": "1234",
                    },
                  },
                ],
              ],
              "controlState": "FATAL",
              "currentAlias": ".my-so-index",
              "discardCorruptObjects": false,
              "discardUnknownObjects": false,
              "esCapabilities": Object {
                "serverless": false,
              },
              "excludeFromUpgradeFilterHooks": Object {},
              "excludeOnUpgradeQuery": Object {
                "bool": Object {
                  "must_not": Array [
                    Object {
                      "term": Object {
                        "type": "deprecated_type_1",
                      },
                    },
                    Object {
                      "term": Object {
                        "type": "deprecatedType2",
                      },
                    },
                    Object {
                      "term": Object {
                        "type": "deprecated-type-3",
                      },
                    },
                  ],
                },
              },
              "hashToVersionMap": Object {
                "task|someHash": "10.1.0",
                "typeA|someHash": "10.1.0",
                "typeB|someHash": "10.1.0",
                "typeC|someHash": "10.1.0",
                "typeD|someHash": "10.1.0",
                "typeE|someHash": "10.1.0",
              },
              "indexPrefix": ".my-so-index",
              "indexTypes": Array [
                "typeA",
                "typeB",
                "typeC",
              ],
              "indexTypesMap": Object {
                ".kibana": Array [
                  "typeA",
                  "typeB",
                  "typeC",
                ],
                ".kibana_cases": Array [
                  "typeD",
                  "typeE",
                ],
                ".kibana_task_manager": Array [
                  "task",
                ],
              },
              "kibanaVersion": "7.11.0",
              "knownTypes": Array [],
              "latestMappingsVersions": Object {},
              "legacyIndex": ".my-so-index",
              "logs": Array [
                Object {
                  "level": "info",
                  "message": "Log from LEGACY_DELETE control state",
                },
                Object {
                  "level": "info",
                  "message": "Log from FATAL control state",
                },
              ],
              "maxBatchSize": 1000,
              "maxBatchSizeBytes": 100000000,
              "maxReadBatchSizeBytes": 536870888,
              "migrationDocLinks": Object {
                "clusterShardLimitExceeded": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#cluster-shard-limit-exceeded",
                "repeatedTimeoutRequests": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#_repeated_time_out_requests_that_eventually_fail",
                "resolveMigrationFailures": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures",
                "routingAllocationDisabled": "https://www.elastic.co/docs/troubleshoot/kibana/migration-failures#routing-allocation-disabled",
              },
              "mustRelocateDocuments": true,
              "outdatedDocuments": Array [
                Object {
                  "_id": "1234",
                },
              ],
              "outdatedDocumentsQuery": Object {
                "bool": Object {
                  "should": Array [],
                },
              },
              "preMigrationScript": Object {
                "_tag": "None",
              },
              "reason": "the fatal reason",
              "retryAttempts": 5,
              "retryCount": 0,
              "retryDelay": 0,
              "skipRetryReset": false,
              "targetIndexMappings": Object {
                "properties": Object {},
              },
              "tempIndex": ".my-so-index_7.11.0_reindex_temp",
              "tempIndexAlias": ".my-so-index_7.11.0_reindex_temp_alias",
              "tempIndexMappings": Object {
                "dynamic": false,
                "properties": Object {
                  "type": Object {
                    "type": "keyword",
                  },
                  "typeMigrationVersion": Object {
                    "type": "version",
                  },
                },
              },
              "versionAlias": ".my-so-index_7.11.0",
              "versionIndex": ".my-so-index_7.11.0_001",
              "waitForMigrationCompletion": false,
            },
          },
        },
      },
    ],
  ],
  "error": Array [],
  "fatal": Array [],
  "info": Array [
    Array [
      "[.my-so-index] Log from LEGACY_DELETE control state",
    ],
    Array [
      "[.my-so-index] Log from FATAL control state",
    ],
  ],
  "log": Array [],
  "trace": Array [],
  "warn": Array [],
}
`;
