// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#defaultValue can be a moment.Duration 1`] = `"PT1H"`;

exports[`#defaultValue can be a number 1`] = `"PT0.6S"`;

exports[`#defaultValue can be a string 1`] = `"PT1H"`;

exports[`includes namespace in failure 1`] = `"[foo-namespace]: expected value of type [moment.Duration] but got [undefined]"`;

exports[`is required by default 1`] = `"expected value of type [moment.Duration] but got [undefined]"`;

exports[`returns error when not string or non-safe positive integer 1`] = `"Failed to parse [-123] as time value. Value should be a safe positive integer number."`;

exports[`returns error when not string or non-safe positive integer 2`] = `"Failed to parse [NaN] as time value. Value should be a safe positive integer number."`;

exports[`returns error when not string or non-safe positive integer 3`] = `"Failed to parse [Infinity] as time value. Value should be a safe positive integer number."`;

exports[`returns error when not string or non-safe positive integer 4`] = `"Failed to parse [9007199254740992] as time value. Value should be a safe positive integer number."`;

exports[`returns error when not string or non-safe positive integer 5`] = `"expected value of type [moment.Duration] but got [Array]"`;

exports[`returns error when not string or non-safe positive integer 6`] = `"expected value of type [moment.Duration] but got [RegExp]"`;

exports[`returns value by default 1`] = `"PT2M3S"`;
