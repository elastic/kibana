// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`accepts valid hostnames 1`] = `
Object {
  "host": "www.example.com",
}
`;

exports[`accepts valid hostnames 2`] = `
Object {
  "host": "8.8.8.8",
}
`;

exports[`accepts valid hostnames 3`] = `
Object {
  "host": "::1",
}
`;

exports[`accepts valid hostnames 4`] = `
Object {
  "host": "localhost",
}
`;

exports[`accepts valid hostnames 5`] = `
Object {
  "host": "0.0.0.0",
}
`;

exports[`basePath throws if appends a slash 1`] = `"[basePath]: must start with a slash, don't end with one"`;

exports[`basePath throws if is an empty string 1`] = `"[basePath]: must start with a slash, don't end with one"`;

exports[`basePath throws if missing prepended slash 1`] = `"[basePath]: must start with a slash, don't end with one"`;

exports[`basePath throws if not specified, but rewriteBasePath is set 1`] = `"cannot use [rewriteBasePath] when [basePath] is not specified"`;

exports[`has defaults for config 1`] = `
Object {
  "autoListen": true,
  "compression": Object {
    "enabled": true,
  },
  "cors": Object {
    "allowCredentials": false,
    "allowOrigin": Array [
      "*",
    ],
    "enabled": false,
  },
  "customResponseHeaders": Object {},
  "host": "localhost",
  "keepaliveTimeout": 120000,
  "maxPayload": ByteSizeValue {
    "valueInBytes": 1048576,
  },
  "name": "kibana-hostname",
  "port": 5601,
  "requestId": Object {
    "allowFromAnyIp": false,
    "ipAllowlist": Array [],
  },
  "rewriteBasePath": false,
  "securityResponseHeaders": Object {
    "disableEmbedding": false,
    "permissionsPolicy": null,
    "referrerPolicy": "no-referrer-when-downgrade",
    "strictTransportSecurity": null,
    "xContentTypeOptions": "nosniff",
  },
  "socketTimeout": 120000,
  "ssl": Object {
    "cipherSuites": Array [
      "TLS_AES_256_GCM_SHA384",
      "TLS_CHACHA20_POLY1305_SHA256",
      "TLS_AES_128_GCM_SHA256",
      "ECDHE-RSA-AES128-GCM-SHA256",
      "ECDHE-ECDSA-AES128-GCM-SHA256",
      "ECDHE-RSA-AES256-GCM-SHA384",
      "ECDHE-ECDSA-AES256-GCM-SHA384",
      "DHE-RSA-AES128-GCM-SHA256",
      "ECDHE-RSA-AES128-SHA256",
      "DHE-RSA-AES128-SHA256",
      "ECDHE-RSA-AES256-SHA384",
      "DHE-RSA-AES256-SHA384",
      "ECDHE-RSA-AES256-SHA256",
      "DHE-RSA-AES256-SHA256",
      "HIGH",
      "!aNULL",
      "!eNULL",
      "!EXPORT",
      "!DES",
      "!RC4",
      "!MD5",
      "!PSK",
      "!SRP",
      "!CAMELLIA",
    ],
    "clientAuthentication": "none",
    "enabled": false,
    "keystore": Object {},
    "supportedProtocols": Array [
      "TLSv1.1",
      "TLSv1.2",
      "TLSv1.3",
    ],
    "truststore": Object {},
  },
  "xsrf": Object {
    "allowlist": Array [],
    "disableProtection": false,
  },
}
`;

exports[`throws if invalid hostname 1`] = `"[host]: value must be a valid hostname (see RFC 1123)."`;

exports[`throws if invalid hostname 2`] = `"[host]: value 0 is not a valid hostname (use \\"0.0.0.0\\" to bind to all interfaces)"`;

exports[`with TLS throws if TLS is enabled but \`redirectHttpFromPort\` is equal to \`port\` 1`] = `"Kibana does not accept http traffic to [port] when ssl is enabled (only https is allowed), so [ssl.redirectHttpFromPort] cannot be configured to the same value. Both are [1234]."`;

exports[`with compression accepts valid referrer whitelist 1`] = `
Array [
  "www.example.com",
  "8.8.8.8",
  "::1",
  "localhost",
  "0.0.0.0",
]
`;

exports[`with compression throws if invalid referrer whitelist 1`] = `"[compression.referrerWhitelist.0]: value must be a valid hostname (see RFC 1123)."`;

exports[`with compression throws if invalid referrer whitelist 2`] = `"[compression.referrerWhitelist]: array size is [0], but cannot be smaller than [1]"`;

exports[`with compression throws if referrer whitelist is specified and compression is disabled 1`] = `"cannot use [compression.referrerWhitelist] when [compression.enabled] is set to false"`;
