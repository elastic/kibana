@import '@elastic/eui/src/components/collapsible_nav/variables';
// Application Layout

// chrome-context
// TODO #64541
// Delete this block
.chrHeaderWrapper:not(.headerWrapper) .content {
  display: flex;
  flex-flow: row nowrap;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.application,
.app-container {
  > * {
    position: relative;
  }
}

.application {
  position: relative;
  z-index: 0;
  display: flex;
  flex-grow: 1;
  flex-shrink: 0;
  flex-basis: auto;
  flex-direction: column;

  > * {
    flex-shrink: 0;
  }
}

// We apply brute force focus states to anything not coming from Eui
// which has focus states designed at the component level.
// You can also use "kbn-resetFocusState" to not apply the default focus
// state. This is useful when you've already hand crafted your own
// focus states in Kibana.
:focus {
  &:not([class^='eui']):not(.kbn-resetFocusState) {
    @include euiFocusRing;
  }
}

// A necessary hack so that the above focus policy doesn't pollute some EUI
// entrenched inputs.
.euiComboBox {
  // :not() specificity needed to override the above
  input:not([class^='eui']):focus {
    animation: none !important;
  }
}

.euiBody--collapsibleNavIsDocked .euiBottomBar {
  margin-left: $euiCollapsibleNavWidth;
}
