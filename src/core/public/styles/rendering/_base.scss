@import '../../mixins';

/**
 * Stretch the root element of the Kibana application to set the base-size that
 * flexed children should keep. Only works when paired with root styles applied
 * by core service from new platform
 */

#kibana-body {
  // DO NOT ADD ANY OVERFLOW BEHAVIORS HERE
  // It will break the sticky navigation
  min-height: 100%;
  display: flex;
  flex-direction: column;
}

// Affixes a div to restrict the position of charts tooltip to the visible viewport minus the header
#app-fixed-viewport {
  pointer-events: none;
  visibility: hidden;
  position: fixed;
  top: var(--kbnAppHeadersOffset, var(--euiFixedHeadersOffset, 0));
  right: 0;
  bottom: 0;
  left: 0;
}

.kbnAppWrapper {
  // DO NOT ADD ANY OTHER STYLES TO THIS SELECTOR
  // This a very nested dependency happnening in "all" apps
  display: flex;
  flex-flow: column nowrap;
  flex-grow: 1;
  z-index: 0; // This effectively puts every high z-index inside the scope of this wrapper to it doesn't interfere with the header and/or overlay mask
  position: relative; // This is temporary for apps that relied on this being present on `.application`
}

.kbnBody {
  padding-top: var(--euiFixedHeadersOffset, 0);
}

// Conditionally override :root CSS fixed header variable. Updating `--euiFixedHeadersOffset`
// on the body will cause all child EUI components to automatically update their offsets
.kbnBody--hasHeaderBanner {
  --euiFixedHeadersOffset: var(--kbnHeaderOffsetWithBanner);

  // Offset fixed EuiHeaders by the top banner
  .euiHeader[data-fixed-header] {
    margin-top: var(--kbnHeaderBannerHeight);
  }

  // Prevent banners from covering full screen data grids
  .euiDataGrid--fullScreen {
    height: calc(100vh - var(--kbnHeaderBannerHeight));
    top: var(--kbnHeaderBannerHeight);
  }
}

// Set a body CSS variable for the app container to use - calculates the total
// height of all fixed headers + the sticky action menu toolbar
.kbnBody--hasProjectActionMenu {
  --kbnAppHeadersOffset: calc(var(--kbnHeaderOffset) + var(--kbnProjectHeaderAppActionMenuHeight));

  &.kbnBody--hasHeaderBanner {
    --kbnAppHeadersOffset: calc(var(--kbnHeaderOffsetWithBanner) + var(--kbnProjectHeaderAppActionMenuHeight));
  }
}

.kbnBody--chromeHidden {
  --euiFixedHeadersOffset: 0;

  &.kbnBody--hasHeaderBanner {
    --euiFixedHeadersOffset: var(--kbnHeaderBannerHeight);
  }

  &.kbnBody--hasProjectActionMenu {
    --kbnAppHeadersOffset: var(--euiFixedHeadersOffset, 0);
  }
}
