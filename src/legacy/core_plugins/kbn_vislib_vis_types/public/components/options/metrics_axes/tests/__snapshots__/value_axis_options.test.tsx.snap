// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ValueAxisOptions component should init with the default set of props 1`] = `
<Fragment>
  <SelectOption
    label="Position"
    options={
      Array [
        Object {
          "disabled": false,
          "text": "Top",
          "value": "top",
        },
        Object {
          "disabled": true,
          "text": "Left",
          "value": "left",
        },
        Object {
          "disabled": true,
          "text": "Right",
          "value": "right",
        },
        Object {
          "disabled": false,
          "text": "Bottom",
          "value": "bottom",
        },
      ]
    }
    paramName="position"
    setValue={[Function]}
    value="left"
  />
  <SelectOption
    id="valueAxisMode0"
    label="Mode"
    options={
      Array [
        Object {
          "text": "Normal",
          "value": "normal",
        },
        Object {
          "text": "Percentage",
          "value": "percentage",
        },
        Object {
          "text": "Wiggle",
          "value": "wiggle",
        },
        Object {
          "text": "Silhouette",
          "value": "silhouette",
        },
      ]
    }
    paramName="mode"
    setValue={[Function]}
    value="normal"
  />
  <SelectOption
    id="scaleSelectYAxis-ValueAxis-1"
    label="Scale type"
    options={
      Array [
        Object {
          "text": "Linear",
          "value": "linear",
        },
        Object {
          "text": "Log",
          "value": "log",
        },
        Object {
          "text": "Square root",
          "value": "square root",
        },
      ]
    }
    paramName="type"
    setValue={[Function]}
    value="linear"
  />
  <EuiHorizontalRule
    margin="m"
  />
  <SwitchOption
    label="Show axis lines and labels"
    noStyle={true}
    paramName="show"
    setValue={[Function]}
    value={true}
  />
  <EuiSpacer
    size="m"
  />
  <TextInputOption
    data-test-subj="valueAxisTitle0"
    label="Title"
    paramName="text"
    setValue={[Function]}
  />
  <LabelOptions
    axesName="valueAxes"
    axis={
      Object {
        "id": "ValueAxis-1",
        "position": "left",
        "scale": Object {
          "mode": "normal",
          "type": "linear",
        },
        "show": true,
        "title": Object {},
      }
    }
    index={0}
    isCategoryAxisHorizontal={false}
    onValueAxisPositionChanged={[MockFunction]}
    setParamByIndex={[MockFunction]}
    stateParams={
      Object {
        "categoryAxes": Array [
          Object {
            "id": "ValueAxis-1",
            "position": "left",
            "scale": Object {
              "mode": "normal",
              "type": "linear",
            },
            "show": true,
            "title": Object {},
          },
        ],
        "valueAxes": Array [
          Object {
            "id": "ValueAxis-1",
            "position": "left",
            "scale": Object {
              "mode": "normal",
              "type": "linear",
            },
            "show": true,
            "title": Object {},
          },
        ],
      }
    }
    vis={
      Object {
        "type": Object {
          "editorConfig": Object {
            "collections": Object {
              "axisModes": Array [
                Object {
                  "text": "Normal",
                  "value": "normal",
                },
                Object {
                  "text": "Percentage",
                  "value": "percentage",
                },
                Object {
                  "text": "Wiggle",
                  "value": "wiggle",
                },
                Object {
                  "text": "Silhouette",
                  "value": "silhouette",
                },
              ],
              "positions": Array [
                Object {
                  "text": "Top",
                  "value": "top",
                },
                Object {
                  "text": "Left",
                  "value": "left",
                },
                Object {
                  "text": "Right",
                  "value": "right",
                },
                Object {
                  "text": "Bottom",
                  "value": "bottom",
                },
              ],
              "scaleTypes": Array [
                Object {
                  "text": "Linear",
                  "value": "linear",
                },
                Object {
                  "text": "Log",
                  "value": "log",
                },
                Object {
                  "text": "Square root",
                  "value": "square root",
                },
              ],
            },
          },
        },
      }
    }
  />
  <EuiHorizontalRule
    margin="s"
  />
  <EuiAccordion
    aria-label="Toggle custom extents"
    buttonContent="Custom extents"
    buttonContentClassName="euiText euiText--small"
    className="visEditorSidebar__section visEditorSidebar__collapsible"
    id="yAxisOptionsAccordionValueAxis-1"
    initialIsOpen={false}
    paddingSize="none"
  >
    <EuiSpacer
      size="s"
    />
    <CustomExtentsOptions
      axis={
        Object {
          "id": "ValueAxis-1",
          "position": "left",
          "scale": Object {
            "mode": "normal",
            "type": "linear",
          },
          "show": true,
          "title": Object {},
        }
      }
      index={0}
      isCategoryAxisHorizontal={false}
      onValueAxisPositionChanged={[MockFunction]}
      setParamByIndex={[MockFunction]}
      setValueAxis={[Function]}
      setValueAxisScale={[Function]}
      stateParams={
        Object {
          "categoryAxes": Array [
            Object {
              "id": "ValueAxis-1",
              "position": "left",
              "scale": Object {
                "mode": "normal",
                "type": "linear",
              },
              "show": true,
              "title": Object {},
            },
          ],
          "valueAxes": Array [
            Object {
              "id": "ValueAxis-1",
              "position": "left",
              "scale": Object {
                "mode": "normal",
                "type": "linear",
              },
              "show": true,
              "title": Object {},
            },
          ],
        }
      }
      vis={
        Object {
          "type": Object {
            "editorConfig": Object {
              "collections": Object {
                "axisModes": Array [
                  Object {
                    "text": "Normal",
                    "value": "normal",
                  },
                  Object {
                    "text": "Percentage",
                    "value": "percentage",
                  },
                  Object {
                    "text": "Wiggle",
                    "value": "wiggle",
                  },
                  Object {
                    "text": "Silhouette",
                    "value": "silhouette",
                  },
                ],
                "positions": Array [
                  Object {
                    "text": "Top",
                    "value": "top",
                  },
                  Object {
                    "text": "Left",
                    "value": "left",
                  },
                  Object {
                    "text": "Right",
                    "value": "right",
                  },
                  Object {
                    "text": "Bottom",
                    "value": "bottom",
                  },
                ],
                "scaleTypes": Array [
                  Object {
                    "text": "Linear",
                    "value": "linear",
                  },
                  Object {
                    "text": "Log",
                    "value": "log",
                  },
                  Object {
                    "text": "Square root",
                    "value": "square root",
                  },
                ],
              },
            },
          },
        }
      }
    />
  </EuiAccordion>
</Fragment>
`;
