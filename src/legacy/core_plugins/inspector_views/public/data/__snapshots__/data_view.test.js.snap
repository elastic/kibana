// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Inspector Data View component should render empty state 1`] = `
<DataViewComponent
  adapters={
    Object {
      "data": DataAdapter {
        "_events": Object {
          "change": [Function],
        },
        "_eventsCount": 1,
        "_maxListeners": undefined,
        "tabular": [Function],
        "tabularOptions": Object {},
      },
    }
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  title="Test Data"
>
  <InspectorView
    useFlex={true}
  >
    <EuiFlyoutBody
      className="kbnInspectorView--flex"
    >
      <div
        className="euiFlyoutBody kbnInspectorView--flex"
      >
        <EuiEmptyPrompt
          body={
            <React.Fragment>
              <p>
                <FormattedMessage
                  defaultMessage="The element did not provide any data."
                  id="inspectorViews.data.noDataAvailableDescription"
                  values={Object {}}
                />
              </p>
            </React.Fragment>
          }
          iconColor="subdued"
          title={
            <h2>
              <FormattedMessage
                defaultMessage="No data available"
                id="inspectorViews.data.noDataAvailableTitle"
                values={Object {}}
              />
            </h2>
          }
        >
          <div
            className="euiEmptyPrompt"
          >
            <EuiTextColor
              color="subdued"
              component="span"
            >
              <span
                className="euiTextColor euiTextColor--subdued"
              >
                <EuiTitle
                  size="m"
                  textTransform="none"
                >
                  <h2
                    className="euiTitle euiTitle--medium"
                  >
                    <FormattedMessage
                      defaultMessage="No data available"
                      id="inspectorViews.data.noDataAvailableTitle"
                      values={Object {}}
                    >
                      No data available
                    </FormattedMessage>
                  </h2>
                </EuiTitle>
                <EuiSpacer
                  size="m"
                >
                  <div
                    className="euiSpacer euiSpacer--m"
                  />
                </EuiSpacer>
                <EuiText
                  grow={true}
                  size="m"
                >
                  <div
                    className="euiText euiText--medium"
                  >
                    <p>
                      <FormattedMessage
                        defaultMessage="The element did not provide any data."
                        id="inspectorViews.data.noDataAvailableDescription"
                        values={Object {}}
                      >
                        The element did not provide any data.
                      </FormattedMessage>
                    </p>
                  </div>
                </EuiText>
              </span>
            </EuiTextColor>
          </div>
        </EuiEmptyPrompt>
      </div>
    </EuiFlyoutBody>
  </InspectorView>
</DataViewComponent>
`;

exports[`Inspector Data View component should render loading state 1`] = `
<DataViewComponent
  adapters={
    Object {
      "data": DataAdapter {
        "_events": Object {
          "change": [Function],
        },
        "_eventsCount": 1,
        "_maxListeners": undefined,
        "tabular": undefined,
        "tabularOptions": undefined,
      },
    }
  }
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  title="Test Data"
>
  <InspectorView
    useFlex={true}
  >
    <EuiFlyoutBody
      className="kbnInspectorView--flex"
    >
      <div
        className="euiFlyoutBody kbnInspectorView--flex"
      >
        <EuiFlexGroup
          alignItems="center"
          justifyContent="center"
        >
          <div
            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
          >
            <EuiFlexItem
              grow={false}
            >
              <div
                className="euiFlexItem euiFlexItem--flexGrowZero"
              >
                <EuiPanel
                  className="eui-textCenter"
                  grow={true}
                  hasShadow={false}
                  paddingSize="m"
                >
                  <div
                    className="euiPanel euiPanel--paddingMedium eui-textCenter"
                  >
                    <EuiLoadingChart
                      size="m"
                    >
                      <div
                        className="euiLoadingChart euiLoadingChart--medium"
                      >
                        <div
                          className="euiLoadingChart__bar"
                        />
                        <div
                          className="euiLoadingChart__bar"
                        />
                        <div
                          className="euiLoadingChart__bar"
                        />
                        <div
                          className="euiLoadingChart__bar"
                        />
                      </div>
                    </EuiLoadingChart>
                    <EuiSpacer
                      size="s"
                    >
                      <div
                        className="euiSpacer euiSpacer--s"
                      />
                    </EuiSpacer>
                    <EuiText
                      grow={true}
                      size="m"
                    >
                      <div
                        className="euiText euiText--medium"
                      >
                        <p>
                          <FormattedMessage
                            defaultMessage="Gathering data"
                            id="inspectorViews.data.gatheringDataLabel"
                            values={Object {}}
                          >
                            Gathering data
                          </FormattedMessage>
                        </p>
                      </div>
                    </EuiText>
                  </div>
                </EuiPanel>
              </div>
            </EuiFlexItem>
          </div>
        </EuiFlexGroup>
      </div>
    </EuiFlyoutBody>
  </InspectorView>
</DataViewComponent>
`;
