/**
  * EDITING MODE
  * Use .dshLayout--editing to target editing state because
  * .dshPanel--editing doesn't get updating without a hard refresh
  */

.dshPanel {
  z-index: auto;
  flex: 1;
  display: flex;
  flex-direction: column;
  height: 100%;
  position: relative;

  // SASSTODO: The inheritence factor stemming from embeddables makes this class hard to change
  .panel-content {
    display: flex;
    flex: 1 1 100%;
    height: auto;
    z-index: 1;
    min-height: 0; // Absolute must for Firefox to scroll contents
  }

  // SASSTODO: Pretty sure this doesn't do anything since the flex-basis 100%,
  // but it MIGHT be fixing IE
  .panel-content--fullWidth {
    width: 100%;
  }

  .panel-content-isLoading {
    // completely center the loading indicator
    justify-content: center;
    align-items: center;
  }

  /**
   * 1. We want the kbnDocTable__container to scroll only when embedded in a dashboard panel
   * 2. Fix overflow of vis's specifically for inside dashboard panels, lets the panel decide the overflow
   * 3. Force a better looking scrollbar
   */
  .kbnDocTable__container {
    @include euiScrollBar; /* 3 */
    flex: 1 1 0; /* 1 */
    overflow: auto; /* 1 */
  }

  .visualization {
    @include euiScrollBar; /* 3 */
  }

  .visualization .visChart__container {
    overflow: visible; /* 2 */
  }

  .visLegend__toggle {
    border-bottom-right-radius: 0;
    border-top-left-radius: 0;
  }
}

.dshLayout--editing .dshPanel {
  border-style: dashed;
  border-color: $euiColorMediumShade;
  transition: all $euiAnimSpeedFast $euiAnimSlightResistance;

  &:hover,
  &:focus {
    @include euiSlightShadowHover;
  }
}

// LAYOUT MODES

// Adjust borders/etc... for non-spaced out and expanded panels
.dshLayout-withoutMargins,
.dshDashboardGrid__item--expanded {
  .dshPanel {
    box-shadow: none;
    border-radius: 0;
  }
}

// Remove border color unless in editing mode
.dshLayout-withoutMargins:not(.dshLayout--editing),
.dshDashboardGrid__item--expanded {
  .dshPanel {
    border-color: transparent;
  }
}

// HEADER

.dshPanel__header {
  flex: 0 0 auto;
  display: flex;
  // ensure menu button is on the right even if the title doesn't exist
  justify-content: flex-end;
}

.dshPanel__title {
  @include euiTextTruncate;
  @include euiTitle('xxxs');
  line-height: 1.5;
  flex-grow: 1;

  &:not(:empty) {
    padding: ($euiSizeXS * 1.5) $euiSizeS 0;
  }
}

.dshLayout--editing {
  .dshPanel__dragger {
    transition: background-color $euiAnimSpeedFast $euiAnimSlightResistance;
  }

  .dshPanel__dragger:hover {
    background-color: $dshEditingModeHoverColor;
    cursor: move;
  }
}

.dshPanel__dragger:not(.dshPanel__title) {
  flex-grow: 1;
}

.dshPanel__header--floater {
  position: absolute;
  right: 0;
  top: 0;
  left: 0;
  z-index: $euiZLevel1;
}

// OPTIONS MENU

/**
  * 1. Use opacity to make this element accessible to screen readers and keyboard.
  * 2. Show on focus to enable keyboard accessibility.
  * 3. Always show in editing mode
  */

.dshPanel_optionsMenuButton {
  background-color: transparentize($euiColorDarkestShade, .9);
  border-bottom-right-radius: 0;
  border-top-left-radius: 0;

  &:focus {
    background-color: $euiFocusBackgroundColor;
  }
}

.dshPanel .visLegend__toggle,
.dshPanel_optionsMenuButton {
  opacity: 0; /* 1 */

  &:focus {
    opacity: 1; /* 2 */
  }
}

.dshPanel_optionsMenuPopover[class*="-isOpen"],
.dshPanel:hover  {
  .dshPanel_optionsMenuButton,
  .visLegend__toggle {
    opacity: 1;
  }
}

.dshLayout--editing {
  .dshPanel_optionsMenuButton,
  .dshPanel .visLegend__toggle {
    opacity: 1; /* 3 */
  }
}


// ERROR

.dshPanel__error {
  text-align: center;
  justify-content: center;
  flex-direction: column;
  overflow: auto;
  text-align: center;

  .fa-exclamation-triangle {
    font-size: $euiFontSizeXL;
    color: $euiColorDanger;
  }
}
