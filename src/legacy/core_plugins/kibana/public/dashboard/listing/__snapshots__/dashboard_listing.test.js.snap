// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`after fetch hideWriteControls 1`] = `
<InjectIntl(TableListViewUi)
  createItem={null}
  deleteItems={null}
  editItem={null}
  entityName="dashboard"
  entityNamePlural="dashboards"
  findItems={[Function]}
  initialFilter=""
  listingLimit={1}
  noItemsFragment={
    <div>
      <EuiEmptyPrompt
        iconColor="subdued"
        iconType="visualizeApp"
        title={
          <h2>
            <FormattedMessage
              defaultMessage="Looks like you don't have any dashboards."
              id="kbn.dashboard.listing.noItemsMessage"
              values={Object {}}
            />
          </h2>
        }
      />
    </div>
  }
  tableColumns={
    Array [
      Object {
        "field": "title",
        "name": "Title",
        "render": [Function],
        "sortable": true,
      },
      Object {
        "dataType": "string",
        "field": "description",
        "name": "Description",
        "sortable": true,
      },
    ]
  }
  tableListTitle="Dashboards"
/>
`;

exports[`after fetch initialFilter 1`] = `
<InjectIntl(TableListViewUi)
  createItem={[Function]}
  deleteItems={[Function]}
  editItem={[Function]}
  entityName="dashboard"
  entityNamePlural="dashboards"
  findItems={[Function]}
  initialFilter="my dashboard"
  listingLimit={1000}
  noItemsFragment={
    <div>
      <EuiEmptyPrompt
        actions={
          <EuiButton
            color="primary"
            data-test-subj="createDashboardPromptButton"
            fill={true}
            iconSide="left"
            iconType="plusInCircle"
            onClick={[Function]}
            size="m"
            type="button"
          >
            <FormattedMessage
              defaultMessage="Create new dashboard"
              id="kbn.dashboard.listing.createNewDashboard.createButtonLabel"
              values={Object {}}
            />
          </EuiButton>
        }
        body={
          <React.Fragment>
            <p>
              <FormattedMessage
                defaultMessage="You can combine data views from any Kibana app into one dashboard and see everything in one place."
                id="kbn.dashboard.listing.createNewDashboard.combineDataViewFromKibanaAppDescription"
                values={Object {}}
              />
            </p>
            <p>
              <FormattedMessage
                defaultMessage="New to Kibana? {sampleDataInstallLink} to take a test drive."
                id="kbn.dashboard.listing.createNewDashboard.newToKibanaDescription"
                values={
                  Object {
                    "sampleDataInstallLink": <EuiLink
                      color="primary"
                      href="#/home/tutorial_directory/sampleData"
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Install some sample data"
                        id="kbn.dashboard.listing.createNewDashboard.sampleDataInstallLinkText"
                        values={Object {}}
                      />
                    </EuiLink>,
                  }
                }
              />
            </p>
          </React.Fragment>
        }
        iconColor="subdued"
        iconType="dashboardApp"
        title={
          <h2>
            <FormattedMessage
              defaultMessage="Create your first dashboard"
              id="kbn.dashboard.listing.createNewDashboard.title"
              values={Object {}}
            />
          </h2>
        }
      />
    </div>
  }
  tableColumns={
    Array [
      Object {
        "field": "title",
        "name": "Title",
        "render": [Function],
        "sortable": true,
      },
      Object {
        "dataType": "string",
        "field": "description",
        "name": "Description",
        "sortable": true,
      },
    ]
  }
  tableListTitle="Dashboards"
/>
`;

exports[`after fetch renders call to action when no dashboards exist 1`] = `
<InjectIntl(TableListViewUi)
  createItem={[Function]}
  deleteItems={[Function]}
  editItem={[Function]}
  entityName="dashboard"
  entityNamePlural="dashboards"
  findItems={[Function]}
  initialFilter=""
  listingLimit={1}
  noItemsFragment={
    <div>
      <EuiEmptyPrompt
        actions={
          <EuiButton
            color="primary"
            data-test-subj="createDashboardPromptButton"
            fill={true}
            iconSide="left"
            iconType="plusInCircle"
            onClick={[Function]}
            size="m"
            type="button"
          >
            <FormattedMessage
              defaultMessage="Create new dashboard"
              id="kbn.dashboard.listing.createNewDashboard.createButtonLabel"
              values={Object {}}
            />
          </EuiButton>
        }
        body={
          <React.Fragment>
            <p>
              <FormattedMessage
                defaultMessage="You can combine data views from any Kibana app into one dashboard and see everything in one place."
                id="kbn.dashboard.listing.createNewDashboard.combineDataViewFromKibanaAppDescription"
                values={Object {}}
              />
            </p>
            <p>
              <FormattedMessage
                defaultMessage="New to Kibana? {sampleDataInstallLink} to take a test drive."
                id="kbn.dashboard.listing.createNewDashboard.newToKibanaDescription"
                values={
                  Object {
                    "sampleDataInstallLink": <EuiLink
                      color="primary"
                      href="#/home/tutorial_directory/sampleData"
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Install some sample data"
                        id="kbn.dashboard.listing.createNewDashboard.sampleDataInstallLinkText"
                        values={Object {}}
                      />
                    </EuiLink>,
                  }
                }
              />
            </p>
          </React.Fragment>
        }
        iconColor="subdued"
        iconType="dashboardApp"
        title={
          <h2>
            <FormattedMessage
              defaultMessage="Create your first dashboard"
              id="kbn.dashboard.listing.createNewDashboard.title"
              values={Object {}}
            />
          </h2>
        }
      />
    </div>
  }
  tableColumns={
    Array [
      Object {
        "field": "title",
        "name": "Title",
        "render": [Function],
        "sortable": true,
      },
      Object {
        "dataType": "string",
        "field": "description",
        "name": "Description",
        "sortable": true,
      },
    ]
  }
  tableListTitle="Dashboards"
/>
`;

exports[`after fetch renders table rows 1`] = `
<InjectIntl(TableListViewUi)
  createItem={[Function]}
  deleteItems={[Function]}
  editItem={[Function]}
  entityName="dashboard"
  entityNamePlural="dashboards"
  findItems={[Function]}
  initialFilter=""
  listingLimit={1000}
  noItemsFragment={
    <div>
      <EuiEmptyPrompt
        actions={
          <EuiButton
            color="primary"
            data-test-subj="createDashboardPromptButton"
            fill={true}
            iconSide="left"
            iconType="plusInCircle"
            onClick={[Function]}
            size="m"
            type="button"
          >
            <FormattedMessage
              defaultMessage="Create new dashboard"
              id="kbn.dashboard.listing.createNewDashboard.createButtonLabel"
              values={Object {}}
            />
          </EuiButton>
        }
        body={
          <React.Fragment>
            <p>
              <FormattedMessage
                defaultMessage="You can combine data views from any Kibana app into one dashboard and see everything in one place."
                id="kbn.dashboard.listing.createNewDashboard.combineDataViewFromKibanaAppDescription"
                values={Object {}}
              />
            </p>
            <p>
              <FormattedMessage
                defaultMessage="New to Kibana? {sampleDataInstallLink} to take a test drive."
                id="kbn.dashboard.listing.createNewDashboard.newToKibanaDescription"
                values={
                  Object {
                    "sampleDataInstallLink": <EuiLink
                      color="primary"
                      href="#/home/tutorial_directory/sampleData"
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Install some sample data"
                        id="kbn.dashboard.listing.createNewDashboard.sampleDataInstallLinkText"
                        values={Object {}}
                      />
                    </EuiLink>,
                  }
                }
              />
            </p>
          </React.Fragment>
        }
        iconColor="subdued"
        iconType="dashboardApp"
        title={
          <h2>
            <FormattedMessage
              defaultMessage="Create your first dashboard"
              id="kbn.dashboard.listing.createNewDashboard.title"
              values={Object {}}
            />
          </h2>
        }
      />
    </div>
  }
  tableColumns={
    Array [
      Object {
        "field": "title",
        "name": "Title",
        "render": [Function],
        "sortable": true,
      },
      Object {
        "dataType": "string",
        "field": "description",
        "name": "Description",
        "sortable": true,
      },
    ]
  }
  tableListTitle="Dashboards"
/>
`;

exports[`after fetch renders warning when listingLimit is exceeded 1`] = `
<InjectIntl(TableListViewUi)
  createItem={[Function]}
  deleteItems={[Function]}
  editItem={[Function]}
  entityName="dashboard"
  entityNamePlural="dashboards"
  findItems={[Function]}
  initialFilter=""
  listingLimit={1}
  noItemsFragment={
    <div>
      <EuiEmptyPrompt
        actions={
          <EuiButton
            color="primary"
            data-test-subj="createDashboardPromptButton"
            fill={true}
            iconSide="left"
            iconType="plusInCircle"
            onClick={[Function]}
            size="m"
            type="button"
          >
            <FormattedMessage
              defaultMessage="Create new dashboard"
              id="kbn.dashboard.listing.createNewDashboard.createButtonLabel"
              values={Object {}}
            />
          </EuiButton>
        }
        body={
          <React.Fragment>
            <p>
              <FormattedMessage
                defaultMessage="You can combine data views from any Kibana app into one dashboard and see everything in one place."
                id="kbn.dashboard.listing.createNewDashboard.combineDataViewFromKibanaAppDescription"
                values={Object {}}
              />
            </p>
            <p>
              <FormattedMessage
                defaultMessage="New to Kibana? {sampleDataInstallLink} to take a test drive."
                id="kbn.dashboard.listing.createNewDashboard.newToKibanaDescription"
                values={
                  Object {
                    "sampleDataInstallLink": <EuiLink
                      color="primary"
                      href="#/home/tutorial_directory/sampleData"
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Install some sample data"
                        id="kbn.dashboard.listing.createNewDashboard.sampleDataInstallLinkText"
                        values={Object {}}
                      />
                    </EuiLink>,
                  }
                }
              />
            </p>
          </React.Fragment>
        }
        iconColor="subdued"
        iconType="dashboardApp"
        title={
          <h2>
            <FormattedMessage
              defaultMessage="Create your first dashboard"
              id="kbn.dashboard.listing.createNewDashboard.title"
              values={Object {}}
            />
          </h2>
        }
      />
    </div>
  }
  tableColumns={
    Array [
      Object {
        "field": "title",
        "name": "Title",
        "render": [Function],
        "sortable": true,
      },
      Object {
        "dataType": "string",
        "field": "description",
        "name": "Description",
        "sortable": true,
      },
    ]
  }
  tableListTitle="Dashboards"
/>
`;

exports[`renders empty page in before initial fetch to avoid flickering 1`] = `
<InjectIntl(TableListViewUi)
  createItem={[Function]}
  deleteItems={[Function]}
  editItem={[Function]}
  entityName="dashboard"
  entityNamePlural="dashboards"
  findItems={[Function]}
  initialFilter=""
  listingLimit={1000}
  noItemsFragment={
    <div>
      <EuiEmptyPrompt
        actions={
          <EuiButton
            color="primary"
            data-test-subj="createDashboardPromptButton"
            fill={true}
            iconSide="left"
            iconType="plusInCircle"
            onClick={[Function]}
            size="m"
            type="button"
          >
            <FormattedMessage
              defaultMessage="Create new dashboard"
              id="kbn.dashboard.listing.createNewDashboard.createButtonLabel"
              values={Object {}}
            />
          </EuiButton>
        }
        body={
          <React.Fragment>
            <p>
              <FormattedMessage
                defaultMessage="You can combine data views from any Kibana app into one dashboard and see everything in one place."
                id="kbn.dashboard.listing.createNewDashboard.combineDataViewFromKibanaAppDescription"
                values={Object {}}
              />
            </p>
            <p>
              <FormattedMessage
                defaultMessage="New to Kibana? {sampleDataInstallLink} to take a test drive."
                id="kbn.dashboard.listing.createNewDashboard.newToKibanaDescription"
                values={
                  Object {
                    "sampleDataInstallLink": <EuiLink
                      color="primary"
                      href="#/home/tutorial_directory/sampleData"
                      type="button"
                    >
                      <FormattedMessage
                        defaultMessage="Install some sample data"
                        id="kbn.dashboard.listing.createNewDashboard.sampleDataInstallLinkText"
                        values={Object {}}
                      />
                    </EuiLink>,
                  }
                }
              />
            </p>
          </React.Fragment>
        }
        iconColor="subdued"
        iconType="dashboardApp"
        title={
          <h2>
            <FormattedMessage
              defaultMessage="Create your first dashboard"
              id="kbn.dashboard.listing.createNewDashboard.title"
              values={Object {}}
            />
          </h2>
        }
      />
    </div>
  }
  tableColumns={
    Array [
      Object {
        "field": "title",
        "name": "Title",
        "render": [Function],
        "sortable": true,
      },
      Object {
        "dataType": "string",
        "field": "description",
        "name": "Description",
        "sortable": true,
      },
    ]
  }
  tableListTitle="Dashboards"
/>
`;
