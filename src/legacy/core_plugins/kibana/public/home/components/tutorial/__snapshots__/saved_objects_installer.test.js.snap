// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`bulkCreate should display error message when bulkCreate request fails 1`] = `
<SavedObjectsInstallerUi
  bulkCreate={[Function]}
  intl={
    Object {
      "defaultFormats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  savedObjects={
    Array [
      Object {
        "attributes": Object {},
        "id": "1",
        "type": "index-pattern",
      },
    ]
  }
>
  <EuiSteps
    firstStepNumber={1}
    headingElement="p"
    steps={
      Array [
        Object {
          "children": <React.Fragment>
            <EuiFlexGroup
              alignItems="center"
              component="div"
              direction="row"
              gutterSize="l"
              justifyContent="spaceBetween"
              responsive={true}
              wrap={false}
            >
              <EuiFlexItem
                component="div"
                grow={true}
              >
                <EuiText
                  grow={true}
                  size="m"
                >
                  <p>
                    Imports index pattern, visualizations and pre-defined dashboards.
                  </p>
                </EuiText>
              </EuiFlexItem>
              <EuiFlexItem
                component="div"
                grow={false}
              >
                <EuiButton
                  color="primary"
                  data-test-subj="loadSavedObjects"
                  fill={false}
                  iconSide="left"
                  isLoading={false}
                  onClick={[Function]}
                  type="button"
                >
                  Load Kibana objects
                </EuiButton>
              </EuiFlexItem>
            </EuiFlexGroup>
            <EuiSpacer
              size="s"
            />
            <EuiCallOut
              color="warning"
              data-test-subj="loadSavedObjects_failed"
              size="m"
              title="Request failed, Error: simulated bulkRequest error"
            />
          </React.Fragment>,
          "key": "installStep",
          "status": "incomplete",
          "title": "Load Kibana objects",
        },
      ]
    }
  >
    <div
      className="euiSteps"
    >
      <EuiStep
        headingElement="p"
        key="installStep"
        status="incomplete"
        step={1}
        title="Load Kibana objects"
      >
        <div
          className="euiStep"
        >
          <EuiScreenReaderOnly>
            <span
              className="euiScreenReaderOnly"
            >
              Incomplete
               Step 
            </span>
          </EuiScreenReaderOnly>
          <EuiStepNumber
            className="euiStep__circle"
            isHollow={true}
            number={1}
            status="incomplete"
          >
            <div
              className="euiStepNumber euiStepNumber--incomplete euiStepNumber-isHollow euiStep__circle"
            />
          </EuiStepNumber>
          <EuiTitle
            className="euiStep__title"
            size="s"
            textTransform="none"
          >
            <p
              className="euiTitle euiTitle--small euiStep__title"
            >
              Load Kibana objects
            </p>
          </EuiTitle>
          <div
            className="euiStep__content"
          >
            <EuiFlexGroup
              alignItems="center"
              component="div"
              direction="row"
              gutterSize="l"
              justifyContent="spaceBetween"
              responsive={true}
              wrap={false}
            >
              <div
                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
              >
                <EuiFlexItem
                  component="div"
                  grow={true}
                >
                  <div
                    className="euiFlexItem"
                  >
                    <EuiText
                      grow={true}
                      size="m"
                    >
                      <div
                        className="euiText euiText--medium"
                      >
                        <p>
                          Imports index pattern, visualizations and pre-defined dashboards.
                        </p>
                      </div>
                    </EuiText>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  component="div"
                  grow={false}
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <EuiButton
                      color="primary"
                      data-test-subj="loadSavedObjects"
                      fill={false}
                      iconSide="left"
                      isLoading={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <button
                        className="euiButton euiButton--primary"
                        data-test-subj="loadSavedObjects"
                        onClick={[Function]}
                        type="button"
                      >
                        <span
                          className="euiButton__content"
                        >
                          <span
                            className="euiButton__text"
                          >
                            Load Kibana objects
                          </span>
                        </span>
                      </button>
                    </EuiButton>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
            <EuiSpacer
              size="s"
            >
              <div
                className="euiSpacer euiSpacer--s"
              />
            </EuiSpacer>
            <EuiCallOut
              color="warning"
              data-test-subj="loadSavedObjects_failed"
              size="m"
              title="Request failed, Error: simulated bulkRequest error"
            >
              <div
                className="euiCallOut euiCallOut--warning"
                data-test-subj="loadSavedObjects_failed"
              >
                <div
                  className="euiCallOutHeader"
                >
                  <span
                    className="euiCallOutHeader__title"
                  >
                    Request failed, Error: simulated bulkRequest error
                  </span>
                </div>
              </div>
            </EuiCallOut>
          </div>
        </div>
      </EuiStep>
    </div>
  </EuiSteps>
</SavedObjectsInstallerUi>
`;

exports[`bulkCreate should display success message when bulkCreate is successful 1`] = `
<SavedObjectsInstallerUi
  bulkCreate={[Function]}
  intl={
    Object {
      "defaultFormats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  savedObjects={
    Array [
      Object {
        "attributes": Object {},
        "id": "1",
        "type": "index-pattern",
      },
    ]
  }
>
  <EuiSteps
    firstStepNumber={1}
    headingElement="p"
    steps={
      Array [
        Object {
          "children": <React.Fragment>
            <EuiFlexGroup
              alignItems="center"
              component="div"
              direction="row"
              gutterSize="l"
              justifyContent="spaceBetween"
              responsive={true}
              wrap={false}
            >
              <EuiFlexItem
                component="div"
                grow={true}
              >
                <EuiText
                  grow={true}
                  size="m"
                >
                  <p>
                    Imports index pattern, visualizations and pre-defined dashboards.
                  </p>
                </EuiText>
              </EuiFlexItem>
              <EuiFlexItem
                component="div"
                grow={false}
              >
                <EuiButton
                  color="primary"
                  data-test-subj="loadSavedObjects"
                  fill={false}
                  iconSide="left"
                  isLoading={false}
                  onClick={[Function]}
                  type="button"
                >
                  Load Kibana objects
                </EuiButton>
              </EuiFlexItem>
            </EuiFlexGroup>
            <EuiSpacer
              size="s"
            />
            <EuiCallOut
              color="success"
              data-test-subj="loadSavedObjects_success"
              size="m"
              title="1 saved objects successfully added"
            />
          </React.Fragment>,
          "key": "installStep",
          "status": "complete",
          "title": "Load Kibana objects",
        },
      ]
    }
  >
    <div
      className="euiSteps"
    >
      <EuiStep
        headingElement="p"
        key="installStep"
        status="complete"
        step={1}
        title="Load Kibana objects"
      >
        <div
          className="euiStep"
        >
          <EuiScreenReaderOnly>
            <span
              className="euiScreenReaderOnly"
            >
               Step 
            </span>
          </EuiScreenReaderOnly>
          <EuiStepNumber
            className="euiStep__circle"
            isHollow={false}
            number={1}
            status="complete"
          >
            <div
              className="euiStepNumber euiStepNumber--complete euiStep__circle"
            >
              <EuiIcon
                className="euiStepNumber__icon"
                size="m"
                title="complete"
                type="check"
              >
                <check
                  className="euiIcon euiIcon--medium euiStepNumber__icon"
                  focusable="false"
                  height="16"
                  style={
                    Object {
                      "fill": undefined,
                    }
                  }
                  title="complete"
                  viewBox="0 0 16 16"
                  width="16"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <svg
                    className="euiIcon euiIcon--medium euiStepNumber__icon"
                    focusable="false"
                    height="16"
                    style={
                      Object {
                        "fill": undefined,
                      }
                    }
                    title="complete"
                    viewBox="0 0 16 16"
                    width="16"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M6.5 12a.502.502 0 0 1-.354-.146l-4-4a.502.502 0 0 1 .708-.708L6.5 10.793l6.646-6.647a.502.502 0 0 1 .708.708l-7 7A.502.502 0 0 1 6.5 12"
                    />
                  </svg>
                </check>
              </EuiIcon>
            </div>
          </EuiStepNumber>
          <EuiTitle
            className="euiStep__title"
            size="s"
            textTransform="none"
          >
            <p
              className="euiTitle euiTitle--small euiStep__title"
            >
              Load Kibana objects
            </p>
          </EuiTitle>
          <div
            className="euiStep__content"
          >
            <EuiFlexGroup
              alignItems="center"
              component="div"
              direction="row"
              gutterSize="l"
              justifyContent="spaceBetween"
              responsive={true}
              wrap={false}
            >
              <div
                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
              >
                <EuiFlexItem
                  component="div"
                  grow={true}
                >
                  <div
                    className="euiFlexItem"
                  >
                    <EuiText
                      grow={true}
                      size="m"
                    >
                      <div
                        className="euiText euiText--medium"
                      >
                        <p>
                          Imports index pattern, visualizations and pre-defined dashboards.
                        </p>
                      </div>
                    </EuiText>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  component="div"
                  grow={false}
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <EuiButton
                      color="primary"
                      data-test-subj="loadSavedObjects"
                      fill={false}
                      iconSide="left"
                      isLoading={false}
                      onClick={[Function]}
                      type="button"
                    >
                      <button
                        className="euiButton euiButton--primary"
                        data-test-subj="loadSavedObjects"
                        onClick={[Function]}
                        type="button"
                      >
                        <span
                          className="euiButton__content"
                        >
                          <span
                            className="euiButton__text"
                          >
                            Load Kibana objects
                          </span>
                        </span>
                      </button>
                    </EuiButton>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
            <EuiSpacer
              size="s"
            >
              <div
                className="euiSpacer euiSpacer--s"
              />
            </EuiSpacer>
            <EuiCallOut
              color="success"
              data-test-subj="loadSavedObjects_success"
              size="m"
              title="1 saved objects successfully added"
            >
              <div
                className="euiCallOut euiCallOut--success"
                data-test-subj="loadSavedObjects_success"
              >
                <div
                  className="euiCallOutHeader"
                >
                  <span
                    className="euiCallOutHeader__title"
                  >
                    1 saved objects successfully added
                  </span>
                </div>
              </div>
            </EuiCallOut>
          </div>
        </div>
      </EuiStep>
    </div>
  </EuiSteps>
</SavedObjectsInstallerUi>
`;

exports[`renders 1`] = `
<EuiSteps
  firstStepNumber={1}
  headingElement="p"
  steps={
    Array [
      Object {
        "children": <React.Fragment>
          <EuiFlexGroup
            alignItems="center"
            component="div"
            direction="row"
            gutterSize="l"
            justifyContent="spaceBetween"
            responsive={true}
            wrap={false}
          >
            <EuiFlexItem
              component="div"
              grow={true}
            >
              <EuiText
                grow={true}
                size="m"
              >
                <p>
                  Imports index pattern, visualizations and pre-defined dashboards.
                </p>
              </EuiText>
            </EuiFlexItem>
            <EuiFlexItem
              component="div"
              grow={false}
            >
              <EuiButton
                color="primary"
                data-test-subj="loadSavedObjects"
                fill={false}
                iconSide="left"
                isLoading={false}
                onClick={[Function]}
                type="button"
              >
                Load Kibana objects
              </EuiButton>
            </EuiFlexItem>
          </EuiFlexGroup>
          <EuiSpacer
            size="s"
          />
        </React.Fragment>,
        "key": "installStep",
        "status": "incomplete",
        "title": "Load Kibana objects",
      },
    ]
  }
/>
`;
