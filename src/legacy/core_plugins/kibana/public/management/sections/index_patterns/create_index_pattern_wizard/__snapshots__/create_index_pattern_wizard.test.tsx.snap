// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreateIndexPatternWizard defaults to the loading state 1`] = `
<Fragment>
  <div>
    <Header
      indexPatternName="name"
      isBeta={false}
      isIncludingSystemIndices={false}
      onChangeIncludingSystemIndices={[Function]}
      prompt={null}
      showSystemIndices={true}
    />
    <LoadingState />
  </div>
  <EuiGlobalToastList
    dismissToast={[Function]}
    toastLifeTimeMs={6000}
    toasts={Array []}
  />
</Fragment>
`;

exports[`CreateIndexPatternWizard renders index pattern step when there are indices 1`] = `
<Fragment>
  <div>
    <Header
      indexPatternName="name"
      isBeta={false}
      isIncludingSystemIndices={false}
      onChangeIncludingSystemIndices={[Function]}
      prompt={null}
      showSystemIndices={true}
    />
    <StepIndexPattern
      allIndices={
        Array [
          Object {
            "name": "myIndexPattern",
          },
        ]
      }
      esService={
        Object {
          "msearch": [MockFunction],
          "search": [MockFunction],
        }
      }
      goToNextStep={[Function]}
      indexPatternCreationType={
        IndexPatternCreationConfig {
          "httpClient": null,
          "isBeta": false,
          "key": "default",
          "name": "name",
          "showSystemIndices": true,
          "type": "default",
        }
      }
      initialQuery=""
      isIncludingSystemIndices={false}
      savedObjectsClient={
        Object {
          "bulkCreate": [MockFunction],
          "bulkGet": [MockFunction],
          "bulkUpdate": [MockFunction],
          "create": [MockFunction],
          "delete": [MockFunction],
          "find": [MockFunction],
          "get": [MockFunction],
          "update": [MockFunction],
        }
      }
      uiSettings={
        Object {
          "get": [MockFunction],
          "get$": [MockFunction],
          "getAll": [MockFunction],
          "getSaved$": [MockFunction],
          "getUpdate$": [MockFunction],
          "getUpdateErrors$": [MockFunction],
          "isCustom": [MockFunction],
          "isDeclared": [MockFunction],
          "isDefault": [MockFunction],
          "isOverridden": [MockFunction],
          "overrideLocalDefault": [MockFunction],
          "remove": [MockFunction],
          "set": [MockFunction],
        }
      }
    />
  </div>
  <EuiGlobalToastList
    dismissToast={[Function]}
    toastLifeTimeMs={6000}
    toasts={Array []}
  />
</Fragment>
`;

exports[`CreateIndexPatternWizard renders the empty state when there are no indices 1`] = `
<Fragment>
  <div>
    <Header
      indexPatternName="name"
      isBeta={false}
      isIncludingSystemIndices={false}
      onChangeIncludingSystemIndices={[Function]}
      prompt={null}
      showSystemIndices={true}
    />
    <EmptyState
      onRefresh={[Function]}
    />
  </div>
  <EuiGlobalToastList
    dismissToast={[Function]}
    toastLifeTimeMs={6000}
    toasts={Array []}
  />
</Fragment>
`;

exports[`CreateIndexPatternWizard renders time field step when step is set to 2 1`] = `
<Fragment>
  <div>
    <Header
      indexPatternName="name"
      isBeta={false}
      isIncludingSystemIndices={false}
      onChangeIncludingSystemIndices={[Function]}
      prompt={null}
      showSystemIndices={true}
    />
    <StepTimeField
      createIndexPattern={[Function]}
      goToPreviousStep={[Function]}
      indexPattern=""
      indexPatternCreationType={
        IndexPatternCreationConfig {
          "httpClient": null,
          "isBeta": false,
          "key": "default",
          "name": "name",
          "showSystemIndices": true,
          "type": "default",
        }
      }
      indexPatternsService={
        Object {
          "clearCache": [MockFunction],
          "get": [MockFunction],
          "make": [Function],
        }
      }
    />
  </div>
  <EuiGlobalToastList
    dismissToast={[Function]}
    toastLifeTimeMs={6000}
    toasts={Array []}
  />
</Fragment>
`;

exports[`CreateIndexPatternWizard renders when there are no indices but there are remote clusters 1`] = `
<Fragment>
  <div>
    <Header
      indexPatternName="name"
      isBeta={false}
      isIncludingSystemIndices={false}
      onChangeIncludingSystemIndices={[Function]}
      prompt={null}
      showSystemIndices={true}
    />
    <StepIndexPattern
      allIndices={Array []}
      esService={
        Object {
          "msearch": [MockFunction],
          "search": [MockFunction],
        }
      }
      goToNextStep={[Function]}
      indexPatternCreationType={
        IndexPatternCreationConfig {
          "httpClient": null,
          "isBeta": false,
          "key": "default",
          "name": "name",
          "showSystemIndices": true,
          "type": "default",
        }
      }
      initialQuery=""
      isIncludingSystemIndices={false}
      savedObjectsClient={
        Object {
          "bulkCreate": [MockFunction],
          "bulkGet": [MockFunction],
          "bulkUpdate": [MockFunction],
          "create": [MockFunction],
          "delete": [MockFunction],
          "find": [MockFunction],
          "get": [MockFunction],
          "update": [MockFunction],
        }
      }
      uiSettings={
        Object {
          "get": [MockFunction],
          "get$": [MockFunction],
          "getAll": [MockFunction],
          "getSaved$": [MockFunction],
          "getUpdate$": [MockFunction],
          "getUpdateErrors$": [MockFunction],
          "isCustom": [MockFunction],
          "isDeclared": [MockFunction],
          "isDefault": [MockFunction],
          "isOverridden": [MockFunction],
          "overrideLocalDefault": [MockFunction],
          "remove": [MockFunction],
          "set": [MockFunction],
        }
      }
    />
  </div>
  <EuiGlobalToastList
    dismissToast={[Function]}
    toastLifeTimeMs={6000}
    toasts={Array []}
  />
</Fragment>
`;

exports[`CreateIndexPatternWizard shows system indices even if there are no other indices if the include system indices is toggled 1`] = `
<Fragment>
  <div>
    <Header
      indexPatternName="name"
      isBeta={false}
      isIncludingSystemIndices={true}
      onChangeIncludingSystemIndices={[Function]}
      prompt={null}
      showSystemIndices={true}
    />
    <StepIndexPattern
      allIndices={
        Array [
          Object {
            "name": ".kibana ",
          },
        ]
      }
      esService={
        Object {
          "msearch": [MockFunction],
          "search": [MockFunction],
        }
      }
      goToNextStep={[Function]}
      indexPatternCreationType={
        IndexPatternCreationConfig {
          "httpClient": null,
          "isBeta": false,
          "key": "default",
          "name": "name",
          "showSystemIndices": true,
          "type": "default",
        }
      }
      initialQuery=""
      isIncludingSystemIndices={true}
      savedObjectsClient={
        Object {
          "bulkCreate": [MockFunction],
          "bulkGet": [MockFunction],
          "bulkUpdate": [MockFunction],
          "create": [MockFunction],
          "delete": [MockFunction],
          "find": [MockFunction],
          "get": [MockFunction],
          "update": [MockFunction],
        }
      }
      uiSettings={
        Object {
          "get": [MockFunction],
          "get$": [MockFunction],
          "getAll": [MockFunction],
          "getSaved$": [MockFunction],
          "getUpdate$": [MockFunction],
          "getUpdateErrors$": [MockFunction],
          "isCustom": [MockFunction],
          "isDeclared": [MockFunction],
          "isDefault": [MockFunction],
          "isOverridden": [MockFunction],
          "overrideLocalDefault": [MockFunction],
          "remove": [MockFunction],
          "set": [MockFunction],
        }
      }
    />
  </div>
  <EuiGlobalToastList
    dismissToast={[Function]}
    toastLifeTimeMs={6000}
    toasts={Array []}
  />
</Fragment>
`;
