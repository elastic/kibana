// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders DashboardSaveModal 1`] = `
<Component
  description="dash description"
  initialCopyOnSave={true}
  objectType="dashboard"
  onClose={[MockFunction]}
  onSave={[Function]}
  options={
    <React.Fragment>
      <EuiFormRow>
        <EuiFlexGroup
          alignItems="center"
          gutterSize="s"
          responsive={false}
        >
          <EuiFlexItem
            grow={false}
          >
            <EuiSwitch
              checked={true}
              data-test-subj="storeTimeWithDashboard"
              label={
                <Memo(MemoizedFormattedMessage)
                  defaultMessage="Store time with dashboard"
                  id="dashboard.topNav.saveModal.storeTimeWithDashboardFormRowLabel"
                />
              }
              onChange={[Function]}
            />
          </EuiFlexItem>
          <EuiFlexItem
            grow={false}
          >
            <EuiIconTip
              content={
                <Memo(MemoizedFormattedMessage)
                  defaultMessage="This changes the time filter to the currently selected time each time this dashboard is loaded."
                  id="dashboard.topNav.saveModal.storeTimeWithDashboardFormRowHelpText"
                />
              }
              position="top"
            />
          </EuiFlexItem>
        </EuiFlexGroup>
      </EuiFormRow>
      <React.Fragment>
        <EuiSpacer
          size="l"
        />
        <AccessModeContainer
          accessControlClient={
            AccessControlClient {
              "deps": Object {
                "http": Object {
                  "addLoadingCountSource": [MockFunction],
                  "anonymousPaths": Object {
                    "isAnonymous": [MockFunction],
                    "register": [MockFunction],
                  },
                  "basePath": BasePath {
                    "assetsHrefBase": "",
                    "basePath": "",
                    "get": [Function],
                    "prepend": [Function],
                    "publicBaseUrl": undefined,
                    "remove": [Function],
                    "serverBasePath": "",
                  },
                  "delete": [MockFunction],
                  "externalUrl": Object {
                    "isInternalUrl": [MockFunction],
                    "validateUrl": [MockFunction],
                  },
                  "fetch": [MockFunction],
                  "get": [MockFunction],
                  "getLoadingCount$": [MockFunction],
                  "head": [MockFunction],
                  "intercept": [MockFunction],
                  "options": [MockFunction],
                  "patch": [MockFunction],
                  "post": [MockFunction],
                  "put": [MockFunction],
                  "staticAssets": Object {
                    "getPluginAssetHref": [MockFunction],
                  },
                },
              },
            }
          }
          contentTypeId="dashboard"
          getActiveSpace={[MockFunction]}
          getCurrentUser={[MockFunction]}
          onChangeAccessMode={[Function]}
        />
      </React.Fragment>
    </React.Fragment>
  }
  showCopyOnSave={true}
  showDescription={true}
  title="dash title"
/>
`;
