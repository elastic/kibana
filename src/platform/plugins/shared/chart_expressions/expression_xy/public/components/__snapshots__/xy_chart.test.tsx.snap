// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`XYChart component annotations should render basic line annotation 1`] = `
<LineAnnotation
  customTooltip={[Function]}
  dataValues={
    Array [
      Object {
        "dataValue": 1647591917140,
        "details": "Annotation",
      },
    ]
  }
  domainType="xDomain"
  id="annotation_2022_03_18_t_08_25_17_140_z"
  key="annotation_2022_03_18_t_08_25_17_140_z"
  marker={
    <Marker
      config={
        Object {
          "customTooltip": [Function],
          "icon": "triangle",
          "id": "annotation",
          "isGrouped": false,
          "label": "Annotation",
          "position": "bottom",
          "time": "2022-03-18T08:25:17.140Z",
          "timebucket": 1647591917100,
          "type": "point",
        }
      }
      hasReducedPadding={true}
      isHorizontal={true}
      label="Annotation"
    />
  }
  markerBody={
    <MarkerBody
      isHorizontal={true}
    />
  }
  markerPosition="top"
  placement="bottom"
  style={
    Object {
      "line": Object {
        "dash": undefined,
        "opacity": 1,
        "stroke": "#f04e98",
        "strokeWidth": 1,
      },
    }
  }
/>
`;

exports[`XYChart component annotations should render basic range annotation 1`] = `
Array [
  <RectAnnotation
    customTooltipDetails={[Function]}
    dataValues={Array []}
    hideTooltips={false}
    id="__endzones__"
    style={
      Object {
        "fill": "#69707d",
        "opacity": 0.2,
        "stroke": "#69707d",
        "strokeWidth": 0,
      }
    }
    zIndex={2}
  />,
  <RectAnnotation
    customTooltip={[Function]}
    dataValues={
      Array [
        Object {
          "coordinates": Object {
            "x0": 1647591917140,
            "x1": 1648715117140,
          },
          "details": "Event range",
        },
      ]
    }
    id="range_annotation"
    key="range_annotation"
    outside={false}
    outsideDimension={14}
    style={
      Object {
        "fill": "#F04E981A",
        "opacity": 1,
      }
    }
  />,
]
`;

exports[`XYChart component annotations should render grouped line annotations preserving the shared styles 1`] = `
<LineAnnotation
  customTooltip={[Function]}
  dataValues={
    Array [
      Object {
        "dataValue": 1647591917125,
        "details": "",
      },
    ]
  }
  domainType="xDomain"
  id="event_1_2022_03_18_t_08_25_00_000_z"
  key="event_1_2022_03_18_t_08_25_00_000_z"
  marker={
    <Marker
      config={
        Object {
          "color": "red",
          "customTooltip": [Function],
          "icon": "3",
          "id": "event1",
          "isGrouped": true,
          "label": "",
          "lineStyle": "dashed",
          "lineWidth": 3,
          "position": "bottom",
          "textVisibility": undefined,
          "time": "2022-03-18T08:25:00.000Z",
          "timebucket": 1647591917100,
          "type": "point",
        }
      }
      hasReducedPadding={true}
      isHorizontal={true}
    />
  }
  markerBody={
    <MarkerBody
      isHorizontal={true}
    />
  }
  markerPosition="top"
  placement="bottom"
  style={
    Object {
      "line": Object {
        "dash": Array [
          9,
          3,
        ],
        "opacity": 1,
        "stroke": "red",
        "strokeWidth": 3,
      },
    }
  }
/>
`;

exports[`XYChart component annotations should render grouped line annotations with default styles 1`] = `
<LineAnnotation
  customTooltip={[Function]}
  dataValues={
    Array [
      Object {
        "dataValue": 1647591917125,
        "details": "",
      },
    ]
  }
  domainType="xDomain"
  id="event_1_2022_03_18_t_08_25_00_000_z"
  key="event_1_2022_03_18_t_08_25_00_000_z"
  marker={
    <Marker
      config={
        Object {
          "color": "#f04e98",
          "customTooltip": [Function],
          "icon": "2",
          "id": "event1",
          "isGrouped": true,
          "label": "",
          "lineStyle": "solid",
          "lineWidth": 1,
          "position": "bottom",
          "textVisibility": undefined,
          "time": "2022-03-18T08:25:00.000Z",
          "timebucket": 1647591917100,
          "type": "point",
        }
      }
      hasReducedPadding={true}
      isHorizontal={true}
    />
  }
  markerBody={
    <MarkerBody
      isHorizontal={true}
    />
  }
  markerPosition="top"
  placement="bottom"
  style={
    Object {
      "line": Object {
        "dash": undefined,
        "opacity": 1,
        "stroke": "#f04e98",
        "strokeWidth": 1,
      },
    }
  }
/>
`;

exports[`XYChart component annotations should render simplified annotations when simpleView is true 1`] = `
<LineAnnotation
  customTooltip={[Function]}
  dataValues={
    Array [
      Object {
        "dataValue": 1647591917140,
        "details": "Annotation",
      },
    ]
  }
  domainType="xDomain"
  id="annotation_2022_03_18_t_08_25_17_140_z"
  key="annotation_2022_03_18_t_08_25_17_140_z"
  markerPosition="top"
  placement="bottom"
  style={
    Object {
      "line": Object {
        "dash": undefined,
        "opacity": 1,
        "stroke": "#f04e98",
        "strokeWidth": 1,
      },
    }
  }
/>
`;

exports[`XYChart component annotations should render simplified annotations when simpleView is true 2`] = `
Array [
  <RectAnnotation
    customTooltipDetails={[Function]}
    dataValues={Array []}
    hideTooltips={false}
    id="__endzones__"
    style={
      Object {
        "fill": "#69707d",
        "opacity": 0.2,
        "stroke": "#69707d",
        "strokeWidth": 0,
      }
    }
    zIndex={2}
  />,
  <RectAnnotation
    customTooltip={[Function]}
    dataValues={
      Array [
        Object {
          "coordinates": Object {
            "x0": 1647591917140,
            "x1": 1648715117140,
          },
          "details": "Event range",
        },
      ]
    }
    id="range_annotation"
    key="range_annotation"
    outside={false}
    outsideDimension={2}
    style={
      Object {
        "fill": "#F04E981A",
        "opacity": 1,
      }
    }
  />,
]
`;

exports[`XYChart component it renders area 1`] = `
<Fragment>
  <GlobalXYChartStyles />
  <div
    css="unknown styles"
  >
    <ContextProvider
      value={
        Object {
          "dataLayers": Array [
            Object {
              "accessors": Array [
                "a",
                "b",
              ],
              "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
              "isHistogram": false,
              "isHorizontal": false,
              "isPercentage": false,
              "isStacked": false,
              "layerId": "first",
              "layerType": "data",
              "palette": Object {
                "name": "mock",
                "params": Object {},
                "type": "palette",
              },
              "seriesType": "area",
              "showLines": true,
              "splitAccessors": Array [
                "d",
              ],
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
              "type": "dataLayer",
              "xAccessor": "c",
              "xScaleType": "ordinal",
            },
          ],
          "fieldFormats": Object {
            "first": Object {
              "splitColumnAccessors": Object {},
              "splitRowAccessors": Object {},
              "splitSeriesAccessors": Object {
                "d": Object {
                  "format": Object {
                    "id": "string",
                  },
                  "formatter": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              },
              "xAccessors": Object {
                "c": Object {
                  "id": "string",
                },
              },
              "yAccessors": Object {
                "a": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "0,0.000",
                  },
                },
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
            },
          },
          "formattedDatatables": Object {
            "first": Object {
              "formattedColumns": Object {
                "c": true,
              },
              "invertedRawValueMap": Map {
                "a" => Map {},
                "b" => Map {},
                "c" => Map {
                  1652034840000 => 1652034840000,
                  1652122440000 => 1652122440000,
                },
                "d" => Map {},
              },
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
            },
          },
          "legendPosition": "top",
          "setColor": [Function],
          "singleTable": undefined,
          "titles": Object {
            "first": Object {
              "markSizeTitles": Object {},
              "splitColumnTitles": Object {},
              "splitRowTitles": Object {},
              "splitSeriesTitles": Object {
                "d": "ColD",
              },
              "xTitles": Object {
                "c": "c",
              },
              "yTitles": Object {
                "a": "a",
                "b": "b",
              },
            },
          },
          "uiState": undefined,
        }
      }
    >
      <Chart
        renderer="canvas"
      >
        <Tooltip
          actions={
            Array [
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
            ]
          }
          headerFormatter={[Function]}
          type="vertical"
        />
        <Settings
          allowBrushingLastHistogramBin={false}
          ariaUseDefaultSummary={true}
          baseTheme={
            Object {
              "arcSeriesStyle": Object {
                "arc": Object {
                  "opacity": 1,
                  "stroke": "black",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "areaSeriesStyle": Object {
                "area": Object {
                  "opacity": 0.3,
                  "visible": true,
                },
                "fit": Object {
                  "area": Object {
                    "fill": "__use__series__color__",
                    "opacity": 0.15,
                    "visible": true,
                  },
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "never",
                },
                "pointVisibilityMinDistance": 20,
              },
              "axes": Object {
                "axisLine": Object {
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "axisPanelTitle": Object {
                  "fill": "#333",
                  "fontFamily": "sans-serif",
                  "fontSize": 10,
                  "padding": Object {
                    "inner": 8,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "axisTitle": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "padding": Object {
                    "inner": 10,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "gridLine": Object {
                  "horizontal": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                  "vertical": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                },
                "tickLabel": Object {
                  "alignment": Object {
                    "horizontal": "near",
                    "vertical": "near",
                  },
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offset": Object {
                    "reference": "local",
                    "x": 0,
                    "y": 0,
                  },
                  "padding": Object {
                    "inner": 10,
                    "outer": 8,
                  },
                  "rotation": 0,
                  "visible": true,
                },
                "tickLine": Object {
                  "padding": 10,
                  "size": 10,
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "background": Object {
                "color": "#FFF",
                "fallbackColor": "#FFF",
              },
              "barSeriesStyle": Object {
                "displayValue": Object {
                  "alignment": Object {
                    "horizontal": "center",
                    "vertical": "middle",
                  },
                  "fill": Object {
                    "textBorder": 0,
                  },
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offsetX": 0,
                  "offsetY": 0,
                  "padding": 0,
                },
                "rect": Object {
                  "opacity": 1,
                },
                "rectBorder": Object {
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "bubbleSeriesStyle": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 2,
                  "strokeWidth": 0,
                  "visible": "always",
                },
              },
              "bulletGraph": Object {
                "angularTickLabelPadding": 10,
                "barBackground": "#343741",
                "border": "#EDF0F5",
                "colorBands": Array [
                  "#AA87D1",
                  "#D9C6EF",
                ],
                "fallbackBandColor": "#98A2B3",
                "minHeight": 64,
                "nonFiniteText": "N/A",
                "textColor": "#343741",
              },
              "chartMargins": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "chartPaddings": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "colors": Object {
                "defaultVizColor": "#6092C0",
                "vizColors": Array [
                  "#54B399",
                  "#6092C0",
                  "#9170B8",
                  "#CA8EAE",
                  "#D36086",
                  "#E7664C",
                  "#AA6556",
                  "#DA8B45",
                  "#B9A888",
                  "#D6BF57",
                ],
              },
              "crosshair": Object {
                "band": Object {
                  "fill": "#F1F4FA",
                  "visible": true,
                },
                "crossLine": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "line": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "flamegraph": Object {
                "minimapFocusBorder": "magenta",
                "navigation": Object {
                  "buttonBackgroundColor": "#CCE4F5",
                  "buttonDisabledBackgroundColor": "#D3DAE626",
                  "buttonDisabledTextColor": "#A2ABBA",
                  "buttonTextColor": "#0061A6",
                  "textColor": "#343741",
                },
                "scrollbarThumb": "#343741",
                "scrollbarTrack": "#D3DAE6",
              },
              "goal": Object {
                "arcBoxSamplePitch": 0.08726646259971647,
                "barThicknessMinSizeRatio": 0.1,
                "baselineArcThickness": 32,
                "baselineBarThickness": 32,
                "capturePad": 16,
                "majorCenterLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "majorLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "marginRatio": 0.05,
                "maxBulletSize": 500,
                "maxCentralFontSize": 38,
                "maxCircularSize": 360,
                "maxFontSize": 64,
                "maxLabelFontSize": 32,
                "maxTickFontSize": 24,
                "minFontSize": 8,
                "minorCenterLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "minorLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "progressLine": Object {
                  "stroke": "#343741",
                },
                "targetLine": Object {
                  "stroke": "#343741",
                },
                "tickLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "tickLine": Object {
                  "stroke": "#98A2B3",
                },
              },
              "heatmap": Object {
                "brushArea": Object {
                  "stroke": "#69707D",
                  "strokeWidth": 2,
                  "visible": true,
                },
                "brushMask": Object {
                  "fill": "#73737380",
                  "visible": true,
                },
                "brushTool": Object {
                  "fill": "gray",
                  "visible": false,
                },
                "cell": Object {
                  "align": "center",
                  "border": Object {
                    "stroke": "gray",
                    "strokeWidth": 0,
                  },
                  "label": Object {
                    "fontFamily": "Sans-Serif",
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": "normal",
                    "maxFontSize": 12,
                    "maxWidth": "fill",
                    "minFontSize": 8,
                    "textColor": "black",
                    "useGlobalMinFontSize": true,
                    "visible": true,
                  },
                  "maxHeight": "fill",
                  "maxWidth": "fill",
                },
                "grid": Object {
                  "stroke": Object {
                    "color": "gray",
                    "width": 1,
                  },
                },
                "xAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "rotation": 0,
                  "textColor": "black",
                  "visible": true,
                },
                "yAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "textColor": "black",
                  "visible": true,
                  "width": "auto",
                },
              },
              "highlighter": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 0.5,
                  "radius": 5,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                },
              },
              "legend": Object {
                "horizontalHeight": 64,
                "labelOptions": Object {
                  "maxLines": 1,
                },
                "margin": 0,
                "spacingBuffer": 10,
                "verticalWidth": 200,
              },
              "lineAnnotation": Object {
                "line": Object {
                  "opacity": 1,
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                },
              },
              "lineSeriesStyle": Object {
                "fit": Object {
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 1,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "pointVisibilityMinDistance": 40,
              },
              "metric": Object {
                "barBackground": "#EDF0F5",
                "border": "#EDF0F5",
                "emptyBackground": "transparent",
                "iconAlign": "right",
                "minHeight": 64,
                "minValueFontSize": 12,
                "nonFiniteText": "N/A",
                "textDarkColor": "#343741",
                "textLightColor": "#E0E5EE",
                "titlesTextAlign": "left",
                "valueFontSize": "default",
                "valuesTextAlign": "right",
              },
              "partition": Object {
                "circlePadding": 4,
                "emptySizeRatio": 0,
                "fillLabel": Object {
                  "clipText": false,
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "padding": 2,
                  "textColor": "__use__adaptive__color__",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 700,
                  },
                },
                "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                "horizontalTextAngleThreshold": 0.5235987755982988,
                "horizontalTextEnforcer": 1,
                "idealFontSizeJump": 1.05,
                "linkLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 11,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "gap": 10,
                  "horizontalStemLength": 10,
                  "lineWidth": 1,
                  "maxCount": 5,
                  "maxTextLength": 100,
                  "maximumSection": 10,
                  "minimumStemLength": 0,
                  "padding": 0,
                  "radiusPadding": 10,
                  "spacing": 2,
                  "stemAngle": 0.7853981633974483,
                  "textColor": "#343741",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 400,
                  },
                },
                "maxFontSize": 16,
                "maximizeFontSize": false,
                "minFontSize": 8,
                "outerSizeRatio": 1,
                "radialPadding": 0.017453292519943295,
                "sectorLineStroke": "#FFF",
                "sectorLineWidth": 1.5,
              },
              "rectAnnotation": Object {
                "fill": "#69707D",
                "opacity": 0.25,
                "stroke": "#69707D",
                "strokeWidth": 0,
              },
              "scales": Object {
                "barsPadding": 0.25,
                "histogramPadding": 0.05,
              },
              "sharedStyle": Object {
                "default": Object {
                  "opacity": 1,
                },
                "highlighted": Object {
                  "opacity": 1,
                },
                "unhighlighted": Object {
                  "opacity": 0.25,
                },
              },
              "tooltip": Object {
                "defaultDotColor": "black",
                "maxTableHeight": 120,
                "maxWidth": 500,
              },
            }
          }
          debugState={false}
          externalPointerEvents={
            Object {
              "tooltip": Object {
                "placement": "right",
                "visible": false,
              },
            }
          }
          legendAction={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": [Function],
            }
          }
          legendPosition="top"
          legendSize={130}
          legendValues={Array []}
          locale="en"
          noResults={
            <EmptyPlaceholder
              css="unknown styles"
              icon={[Function]}
              renderComplete={[Function]}
            />
          }
          onBrushEnd={[Function]}
          onElementClick={[Function]}
          onPointerUpdate={[Function]}
          onRenderChange={[Function]}
          pointerUpdateDebounce={0}
          rotation={0}
          showLegend={false}
          theme={
            Array [
              Object {
                "background": Object {
                  "color": undefined,
                },
                "barSeriesStyle": Object {},
                "chartMargins": Object {
                  "bottom": 10,
                  "left": 10,
                  "right": 10,
                  "top": 10,
                },
                "legend": Object {
                  "labelOptions": Object {
                    "maxLines": 0,
                  },
                },
                "markSizeRatio": undefined,
              },
              Object {},
            ]
          }
        />
        <XYCurrentTime
          enabled={false}
          isDarkMode={false}
        />
        <Component
          gridLine={
            Object {
              "strokeWidth": 1,
              "visible": true,
            }
          }
          hide={false}
          id="x"
          position="bottom"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": 0,
                "visible": true,
              },
            }
          }
          tickFormat={[Function]}
          timeAxisLayerCount={0}
          title="c"
        />
        <Component
          domain={
            Object {
              "fit": false,
              "includeDataFromIds": Array [],
              "max": NaN,
              "min": NaN,
              "padding": undefined,
            }
          }
          gridLine={
            Object {
              "visible": false,
            }
          }
          groupId="left"
          id="left"
          key="left"
          position="left"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": -90,
                "visible": false,
              },
            }
          }
          tickFormat={[Function]}
          title="a"
        />
        <XyEndzones
          darkMode={false}
          histogramMode={false}
        />
        <DataLayers
          chartHasMoreThanOneBarSeries={false}
          defaultXScaleType="ordinal"
          fieldFormats={
            Object {
              "first": Object {
                "splitColumnAccessors": Object {},
                "splitRowAccessors": Object {},
                "splitSeriesAccessors": Object {
                  "d": Object {
                    "format": Object {
                      "id": "string",
                    },
                    "formatter": Object {
                      "convert": [MockFunction] {
                        "calls": Array [
                          Array [
                            1652034840000,
                          ],
                          Array [
                            1652122440000,
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": 1652034840000,
                          },
                          Object {
                            "type": "return",
                            "value": 1652122440000,
                          },
                        ],
                      },
                    },
                  },
                },
                "xAccessors": Object {
                  "c": Object {
                    "id": "string",
                  },
                },
                "yAccessors": Object {
                  "a": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
              },
            }
          }
          formatFactory={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              ],
            }
          }
          formattedDatatables={
            Object {
              "first": Object {
                "formattedColumns": Object {
                  "c": true,
                },
                "invertedRawValueMap": Map {
                  "a" => Map {},
                  "b" => Map {},
                  "c" => Map {
                    1652034840000 => 1652034840000,
                    1652122440000 => 1652122440000,
                  },
                  "d" => Map {},
                },
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
              },
            }
          }
          isDarkMode={false}
          layers={
            Array [
              Object {
                "accessors": Array [
                  "a",
                  "b",
                ],
                "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
                "isHistogram": false,
                "isHorizontal": false,
                "isPercentage": false,
                "isStacked": false,
                "layerId": "first",
                "layerType": "data",
                "palette": Object {
                  "name": "mock",
                  "params": Object {},
                  "type": "palette",
                },
                "seriesType": "area",
                "showLines": true,
                "splitAccessors": Array [
                  "d",
                ],
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
                "type": "dataLayer",
                "xAccessor": "c",
                "xScaleType": "ordinal",
              },
            ]
          }
          minBarHeight={1}
          paletteService={
            Object {
              "get": [MockFunction],
              "getAll": [MockFunction],
            }
          }
          palettes={
            KbnPalettes {
              "_aliasMappings": Map {
                "default" => "eui_amsterdam",
                "eui_amsterdam_color_blind" => "eui_amsterdam",
                "kibana_palette" => "kibana_v7_legacy",
                "complimentary" => "complementary",
                "positive" => "green",
                "negative" => "red",
              },
              "_defaultPalette": KbnColorFnPalette {
                "_colorFn": [Function],
                "_defaultNumberOfColors": 30,
                "aliases": Array [
                  "default",
                  "eui_amsterdam_color_blind",
                ],
                "colorCount": 10,
                "colors": [Function],
                "getColor": [Function],
                "id": "eui_amsterdam",
                "legacy": false,
                "name": "Kibana 7.0",
                "standalone": false,
                "type": "categorical",
              },
              "_palettes": Map {
                "eui_amsterdam" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [
                    "default",
                    "eui_amsterdam_color_blind",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "eui_amsterdam",
                  "legacy": false,
                  "name": "Kibana 7.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "kibana_v7_legacy" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#00a69b",
                    "#57c17b",
                    "#6f87d8",
                    "#663db8",
                    "#bc52bc",
                    "#9e3533",
                    "#daa05d",
                    "#bfaf40",
                    "#4050bf",
                    "#bf5040",
                    "#40afbf",
                    "#70bf40",
                    "#8f40bf",
                    "#bf40a7",
                    "#40bf58",
                    "#bf9740",
                    "#4068bf",
                    "#bf4048",
                    "#40bfb7",
                    "#87bf40",
                  ],
                  "aliases": Array [
                    "kibana_palette",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "kibana_v7_legacy",
                  "legacy": false,
                  "name": "Kibana 4.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "behind_text" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "behind_text",
                  "legacy": false,
                  "name": "Kibana 7.0 (behind text)",
                  "standalone": true,
                  "type": "categorical",
                },
                "neutral" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#f2f4fb",
                    "#d4d9e5",
                    "#98a2b3",
                    "#696f7d",
                    "#353642",
                  ],
                  "aliases": Array [],
                  "colorCount": 5,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "neutral",
                  "legacy": false,
                  "name": "Neutral",
                  "standalone": true,
                  "type": "categorical",
                },
                "complementary" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "complimentary",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "complementary",
                  "legacy": false,
                  "name": "Complementary",
                  "standalone": false,
                  "type": "gradient",
                },
                "cool" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "cool",
                  "legacy": false,
                  "name": "Cool",
                  "standalone": false,
                  "type": "gradient",
                },
                "gray" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "gray",
                  "legacy": false,
                  "name": "Gray",
                  "standalone": false,
                  "type": "gradient",
                },
                "green" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "positive",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "green",
                  "legacy": false,
                  "name": "Positive",
                  "standalone": false,
                  "type": "gradient",
                },
                "red" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "negative",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "red",
                  "legacy": false,
                  "name": "Negative",
                  "standalone": false,
                  "type": "gradient",
                },
                "status" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "status",
                  "legacy": false,
                  "name": "Status",
                  "standalone": false,
                  "type": "gradient",
                },
                "temperature" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "temperature",
                  "legacy": false,
                  "name": "Temperature",
                  "standalone": false,
                  "type": "gradient",
                },
                "warm" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "warm",
                  "legacy": false,
                  "name": "Warm",
                  "standalone": false,
                  "type": "gradient",
                },
                "elastic_brand_2023" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#20377d",
                    "#7de2d1",
                    "#ff957d",
                    "#f04e98",
                    "#0077cc",
                    "#fec514",
                  ],
                  "aliases": Array [],
                  "colorCount": 6,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "elastic_brand_2023",
                  "legacy": false,
                  "name": "Elastic classic",
                  "standalone": false,
                  "type": "categorical",
                },
                "compare_to" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "compare_to",
                  "legacy": false,
                  "name": "Trend",
                  "standalone": true,
                  "type": "gradient",
                },
              },
              "get": [Function],
              "getAll": [Function],
              "query": [Function],
            }
          }
          shouldShowValueLabels={true}
          syncColors={false}
          timeZone="UTC"
          titles={
            Object {
              "first": Object {
                "markSizeTitles": Object {},
                "splitColumnTitles": Object {},
                "splitRowTitles": Object {},
                "splitSeriesTitles": Object {
                  "d": "ColD",
                },
                "xTitles": Object {
                  "c": "c",
                },
                "yTitles": Object {
                  "a": "a",
                  "b": "b",
                },
              },
            }
          }
          valueLabels="hide"
          xAxisConfiguration={
            Object {
              "groupId": "bottom",
              "labelsOrientation": 0,
              "position": "bottom",
              "series": Array [],
              "showGridLines": true,
              "showLabels": true,
              "showTitle": true,
              "title": "",
              "type": "xAxisConfig",
            }
          }
          yAxesConfiguration={
            Array [
              Object {
                "extent": Object {
                  "mode": "full",
                  "type": "axisExtentConfig",
                },
                "formatter": Object {
                  "convert": [MockFunction] {
                    "calls": Array [
                      Array [
                        1652034840000,
                      ],
                      Array [
                        1652122440000,
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": 1652034840000,
                      },
                      Object {
                        "type": "return",
                        "value": 1652122440000,
                      },
                    ],
                  },
                },
                "groupId": "left",
                "labelsOrientation": -90,
                "position": "left",
                "series": Array [
                  Object {
                    "accessor": "a",
                    "layer": "first",
                  },
                  Object {
                    "accessor": "b",
                    "layer": "first",
                  },
                ],
                "showGridLines": false,
                "showLabels": false,
                "showTitle": true,
                "title": "",
                "type": "yAxisConfig",
              },
            ]
          }
        />
      </Chart>
    </ContextProvider>
  </div>
</Fragment>
`;

exports[`XYChart component it renders bar 1`] = `
<Fragment>
  <GlobalXYChartStyles />
  <div
    css="unknown styles"
  >
    <ContextProvider
      value={
        Object {
          "dataLayers": Array [
            Object {
              "accessors": Array [
                "a",
                "b",
              ],
              "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
              "isHistogram": false,
              "isHorizontal": false,
              "isPercentage": false,
              "isStacked": false,
              "layerId": "first",
              "layerType": "data",
              "palette": Object {
                "name": "mock",
                "params": Object {},
                "type": "palette",
              },
              "seriesType": "bar",
              "showLines": true,
              "splitAccessors": Array [
                "d",
              ],
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
              "type": "dataLayer",
              "xAccessor": "c",
              "xScaleType": "ordinal",
            },
          ],
          "fieldFormats": Object {
            "first": Object {
              "splitColumnAccessors": Object {},
              "splitRowAccessors": Object {},
              "splitSeriesAccessors": Object {
                "d": Object {
                  "format": Object {
                    "id": "string",
                  },
                  "formatter": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              },
              "xAccessors": Object {
                "c": Object {
                  "id": "string",
                },
              },
              "yAccessors": Object {
                "a": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "0,0.000",
                  },
                },
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
            },
          },
          "formattedDatatables": Object {
            "first": Object {
              "formattedColumns": Object {
                "c": true,
              },
              "invertedRawValueMap": Map {
                "a" => Map {},
                "b" => Map {},
                "c" => Map {
                  1652034840000 => 1652034840000,
                  1652122440000 => 1652122440000,
                },
                "d" => Map {},
              },
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
            },
          },
          "legendPosition": "top",
          "setColor": [Function],
          "singleTable": undefined,
          "titles": Object {
            "first": Object {
              "markSizeTitles": Object {},
              "splitColumnTitles": Object {},
              "splitRowTitles": Object {},
              "splitSeriesTitles": Object {
                "d": "ColD",
              },
              "xTitles": Object {
                "c": "c",
              },
              "yTitles": Object {
                "a": "a",
                "b": "b",
              },
            },
          },
          "uiState": undefined,
        }
      }
    >
      <Chart
        renderer="canvas"
      >
        <Tooltip
          actions={
            Array [
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
            ]
          }
          headerFormatter={[Function]}
          type="vertical"
        />
        <Settings
          allowBrushingLastHistogramBin={false}
          ariaUseDefaultSummary={true}
          baseTheme={
            Object {
              "arcSeriesStyle": Object {
                "arc": Object {
                  "opacity": 1,
                  "stroke": "black",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "areaSeriesStyle": Object {
                "area": Object {
                  "opacity": 0.3,
                  "visible": true,
                },
                "fit": Object {
                  "area": Object {
                    "fill": "__use__series__color__",
                    "opacity": 0.15,
                    "visible": true,
                  },
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "never",
                },
                "pointVisibilityMinDistance": 20,
              },
              "axes": Object {
                "axisLine": Object {
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "axisPanelTitle": Object {
                  "fill": "#333",
                  "fontFamily": "sans-serif",
                  "fontSize": 10,
                  "padding": Object {
                    "inner": 8,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "axisTitle": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "padding": Object {
                    "inner": 10,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "gridLine": Object {
                  "horizontal": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                  "vertical": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                },
                "tickLabel": Object {
                  "alignment": Object {
                    "horizontal": "near",
                    "vertical": "near",
                  },
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offset": Object {
                    "reference": "local",
                    "x": 0,
                    "y": 0,
                  },
                  "padding": Object {
                    "inner": 10,
                    "outer": 8,
                  },
                  "rotation": 0,
                  "visible": true,
                },
                "tickLine": Object {
                  "padding": 10,
                  "size": 10,
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "background": Object {
                "color": "#FFF",
                "fallbackColor": "#FFF",
              },
              "barSeriesStyle": Object {
                "displayValue": Object {
                  "alignment": Object {
                    "horizontal": "center",
                    "vertical": "middle",
                  },
                  "fill": Object {
                    "textBorder": 0,
                  },
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offsetX": 0,
                  "offsetY": 0,
                  "padding": 0,
                },
                "rect": Object {
                  "opacity": 1,
                },
                "rectBorder": Object {
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "bubbleSeriesStyle": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 2,
                  "strokeWidth": 0,
                  "visible": "always",
                },
              },
              "bulletGraph": Object {
                "angularTickLabelPadding": 10,
                "barBackground": "#343741",
                "border": "#EDF0F5",
                "colorBands": Array [
                  "#AA87D1",
                  "#D9C6EF",
                ],
                "fallbackBandColor": "#98A2B3",
                "minHeight": 64,
                "nonFiniteText": "N/A",
                "textColor": "#343741",
              },
              "chartMargins": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "chartPaddings": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "colors": Object {
                "defaultVizColor": "#6092C0",
                "vizColors": Array [
                  "#54B399",
                  "#6092C0",
                  "#9170B8",
                  "#CA8EAE",
                  "#D36086",
                  "#E7664C",
                  "#AA6556",
                  "#DA8B45",
                  "#B9A888",
                  "#D6BF57",
                ],
              },
              "crosshair": Object {
                "band": Object {
                  "fill": "#F1F4FA",
                  "visible": true,
                },
                "crossLine": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "line": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "flamegraph": Object {
                "minimapFocusBorder": "magenta",
                "navigation": Object {
                  "buttonBackgroundColor": "#CCE4F5",
                  "buttonDisabledBackgroundColor": "#D3DAE626",
                  "buttonDisabledTextColor": "#A2ABBA",
                  "buttonTextColor": "#0061A6",
                  "textColor": "#343741",
                },
                "scrollbarThumb": "#343741",
                "scrollbarTrack": "#D3DAE6",
              },
              "goal": Object {
                "arcBoxSamplePitch": 0.08726646259971647,
                "barThicknessMinSizeRatio": 0.1,
                "baselineArcThickness": 32,
                "baselineBarThickness": 32,
                "capturePad": 16,
                "majorCenterLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "majorLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "marginRatio": 0.05,
                "maxBulletSize": 500,
                "maxCentralFontSize": 38,
                "maxCircularSize": 360,
                "maxFontSize": 64,
                "maxLabelFontSize": 32,
                "maxTickFontSize": 24,
                "minFontSize": 8,
                "minorCenterLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "minorLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "progressLine": Object {
                  "stroke": "#343741",
                },
                "targetLine": Object {
                  "stroke": "#343741",
                },
                "tickLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "tickLine": Object {
                  "stroke": "#98A2B3",
                },
              },
              "heatmap": Object {
                "brushArea": Object {
                  "stroke": "#69707D",
                  "strokeWidth": 2,
                  "visible": true,
                },
                "brushMask": Object {
                  "fill": "#73737380",
                  "visible": true,
                },
                "brushTool": Object {
                  "fill": "gray",
                  "visible": false,
                },
                "cell": Object {
                  "align": "center",
                  "border": Object {
                    "stroke": "gray",
                    "strokeWidth": 0,
                  },
                  "label": Object {
                    "fontFamily": "Sans-Serif",
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": "normal",
                    "maxFontSize": 12,
                    "maxWidth": "fill",
                    "minFontSize": 8,
                    "textColor": "black",
                    "useGlobalMinFontSize": true,
                    "visible": true,
                  },
                  "maxHeight": "fill",
                  "maxWidth": "fill",
                },
                "grid": Object {
                  "stroke": Object {
                    "color": "gray",
                    "width": 1,
                  },
                },
                "xAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "rotation": 0,
                  "textColor": "black",
                  "visible": true,
                },
                "yAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "textColor": "black",
                  "visible": true,
                  "width": "auto",
                },
              },
              "highlighter": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 0.5,
                  "radius": 5,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                },
              },
              "legend": Object {
                "horizontalHeight": 64,
                "labelOptions": Object {
                  "maxLines": 1,
                },
                "margin": 0,
                "spacingBuffer": 10,
                "verticalWidth": 200,
              },
              "lineAnnotation": Object {
                "line": Object {
                  "opacity": 1,
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                },
              },
              "lineSeriesStyle": Object {
                "fit": Object {
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 1,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "pointVisibilityMinDistance": 40,
              },
              "metric": Object {
                "barBackground": "#EDF0F5",
                "border": "#EDF0F5",
                "emptyBackground": "transparent",
                "iconAlign": "right",
                "minHeight": 64,
                "minValueFontSize": 12,
                "nonFiniteText": "N/A",
                "textDarkColor": "#343741",
                "textLightColor": "#E0E5EE",
                "titlesTextAlign": "left",
                "valueFontSize": "default",
                "valuesTextAlign": "right",
              },
              "partition": Object {
                "circlePadding": 4,
                "emptySizeRatio": 0,
                "fillLabel": Object {
                  "clipText": false,
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "padding": 2,
                  "textColor": "__use__adaptive__color__",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 700,
                  },
                },
                "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                "horizontalTextAngleThreshold": 0.5235987755982988,
                "horizontalTextEnforcer": 1,
                "idealFontSizeJump": 1.05,
                "linkLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 11,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "gap": 10,
                  "horizontalStemLength": 10,
                  "lineWidth": 1,
                  "maxCount": 5,
                  "maxTextLength": 100,
                  "maximumSection": 10,
                  "minimumStemLength": 0,
                  "padding": 0,
                  "radiusPadding": 10,
                  "spacing": 2,
                  "stemAngle": 0.7853981633974483,
                  "textColor": "#343741",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 400,
                  },
                },
                "maxFontSize": 16,
                "maximizeFontSize": false,
                "minFontSize": 8,
                "outerSizeRatio": 1,
                "radialPadding": 0.017453292519943295,
                "sectorLineStroke": "#FFF",
                "sectorLineWidth": 1.5,
              },
              "rectAnnotation": Object {
                "fill": "#69707D",
                "opacity": 0.25,
                "stroke": "#69707D",
                "strokeWidth": 0,
              },
              "scales": Object {
                "barsPadding": 0.25,
                "histogramPadding": 0.05,
              },
              "sharedStyle": Object {
                "default": Object {
                  "opacity": 1,
                },
                "highlighted": Object {
                  "opacity": 1,
                },
                "unhighlighted": Object {
                  "opacity": 0.25,
                },
              },
              "tooltip": Object {
                "defaultDotColor": "black",
                "maxTableHeight": 120,
                "maxWidth": 500,
              },
            }
          }
          debugState={false}
          externalPointerEvents={
            Object {
              "tooltip": Object {
                "placement": "right",
                "visible": false,
              },
            }
          }
          legendAction={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": [Function],
            }
          }
          legendPosition="top"
          legendSize={130}
          legendValues={Array []}
          locale="en"
          noResults={
            <EmptyPlaceholder
              css="unknown styles"
              icon={[Function]}
              renderComplete={[Function]}
            />
          }
          onBrushEnd={[Function]}
          onElementClick={[Function]}
          onPointerUpdate={[Function]}
          onRenderChange={[Function]}
          pointerUpdateDebounce={0}
          rotation={0}
          showLegend={false}
          theme={
            Array [
              Object {
                "background": Object {
                  "color": undefined,
                },
                "barSeriesStyle": Object {},
                "chartMargins": Object {
                  "bottom": 10,
                  "left": 10,
                  "right": 10,
                  "top": 10,
                },
                "legend": Object {
                  "labelOptions": Object {
                    "maxLines": 0,
                  },
                },
                "markSizeRatio": undefined,
              },
              Object {},
            ]
          }
        />
        <XYCurrentTime
          enabled={false}
          isDarkMode={false}
        />
        <Component
          gridLine={
            Object {
              "strokeWidth": 1,
              "visible": true,
            }
          }
          hide={false}
          id="x"
          position="bottom"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": 0,
                "visible": true,
              },
            }
          }
          tickFormat={[Function]}
          timeAxisLayerCount={0}
          title="c"
        />
        <Component
          domain={
            Object {
              "fit": false,
              "includeDataFromIds": Array [],
              "max": NaN,
              "min": NaN,
              "padding": undefined,
            }
          }
          gridLine={
            Object {
              "visible": false,
            }
          }
          groupId="left"
          id="left"
          key="left"
          position="left"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": -90,
                "visible": false,
              },
            }
          }
          tickFormat={[Function]}
          title="a"
        />
        <XyEndzones
          darkMode={false}
          histogramMode={false}
        />
        <DataLayers
          chartHasMoreThanOneBarSeries={true}
          defaultXScaleType="ordinal"
          fieldFormats={
            Object {
              "first": Object {
                "splitColumnAccessors": Object {},
                "splitRowAccessors": Object {},
                "splitSeriesAccessors": Object {
                  "d": Object {
                    "format": Object {
                      "id": "string",
                    },
                    "formatter": Object {
                      "convert": [MockFunction] {
                        "calls": Array [
                          Array [
                            1652034840000,
                          ],
                          Array [
                            1652122440000,
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": 1652034840000,
                          },
                          Object {
                            "type": "return",
                            "value": 1652122440000,
                          },
                        ],
                      },
                    },
                  },
                },
                "xAccessors": Object {
                  "c": Object {
                    "id": "string",
                  },
                },
                "yAccessors": Object {
                  "a": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
              },
            }
          }
          formatFactory={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              ],
            }
          }
          formattedDatatables={
            Object {
              "first": Object {
                "formattedColumns": Object {
                  "c": true,
                },
                "invertedRawValueMap": Map {
                  "a" => Map {},
                  "b" => Map {},
                  "c" => Map {
                    1652034840000 => 1652034840000,
                    1652122440000 => 1652122440000,
                  },
                  "d" => Map {},
                },
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
              },
            }
          }
          isDarkMode={false}
          layers={
            Array [
              Object {
                "accessors": Array [
                  "a",
                  "b",
                ],
                "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
                "isHistogram": false,
                "isHorizontal": false,
                "isPercentage": false,
                "isStacked": false,
                "layerId": "first",
                "layerType": "data",
                "palette": Object {
                  "name": "mock",
                  "params": Object {},
                  "type": "palette",
                },
                "seriesType": "bar",
                "showLines": true,
                "splitAccessors": Array [
                  "d",
                ],
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
                "type": "dataLayer",
                "xAccessor": "c",
                "xScaleType": "ordinal",
              },
            ]
          }
          minBarHeight={1}
          paletteService={
            Object {
              "get": [MockFunction],
              "getAll": [MockFunction],
            }
          }
          palettes={
            KbnPalettes {
              "_aliasMappings": Map {
                "default" => "eui_amsterdam",
                "eui_amsterdam_color_blind" => "eui_amsterdam",
                "kibana_palette" => "kibana_v7_legacy",
                "complimentary" => "complementary",
                "positive" => "green",
                "negative" => "red",
              },
              "_defaultPalette": KbnColorFnPalette {
                "_colorFn": [Function],
                "_defaultNumberOfColors": 30,
                "aliases": Array [
                  "default",
                  "eui_amsterdam_color_blind",
                ],
                "colorCount": 10,
                "colors": [Function],
                "getColor": [Function],
                "id": "eui_amsterdam",
                "legacy": false,
                "name": "Kibana 7.0",
                "standalone": false,
                "type": "categorical",
              },
              "_palettes": Map {
                "eui_amsterdam" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [
                    "default",
                    "eui_amsterdam_color_blind",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "eui_amsterdam",
                  "legacy": false,
                  "name": "Kibana 7.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "kibana_v7_legacy" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#00a69b",
                    "#57c17b",
                    "#6f87d8",
                    "#663db8",
                    "#bc52bc",
                    "#9e3533",
                    "#daa05d",
                    "#bfaf40",
                    "#4050bf",
                    "#bf5040",
                    "#40afbf",
                    "#70bf40",
                    "#8f40bf",
                    "#bf40a7",
                    "#40bf58",
                    "#bf9740",
                    "#4068bf",
                    "#bf4048",
                    "#40bfb7",
                    "#87bf40",
                  ],
                  "aliases": Array [
                    "kibana_palette",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "kibana_v7_legacy",
                  "legacy": false,
                  "name": "Kibana 4.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "behind_text" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "behind_text",
                  "legacy": false,
                  "name": "Kibana 7.0 (behind text)",
                  "standalone": true,
                  "type": "categorical",
                },
                "neutral" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#f2f4fb",
                    "#d4d9e5",
                    "#98a2b3",
                    "#696f7d",
                    "#353642",
                  ],
                  "aliases": Array [],
                  "colorCount": 5,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "neutral",
                  "legacy": false,
                  "name": "Neutral",
                  "standalone": true,
                  "type": "categorical",
                },
                "complementary" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "complimentary",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "complementary",
                  "legacy": false,
                  "name": "Complementary",
                  "standalone": false,
                  "type": "gradient",
                },
                "cool" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "cool",
                  "legacy": false,
                  "name": "Cool",
                  "standalone": false,
                  "type": "gradient",
                },
                "gray" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "gray",
                  "legacy": false,
                  "name": "Gray",
                  "standalone": false,
                  "type": "gradient",
                },
                "green" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "positive",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "green",
                  "legacy": false,
                  "name": "Positive",
                  "standalone": false,
                  "type": "gradient",
                },
                "red" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "negative",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "red",
                  "legacy": false,
                  "name": "Negative",
                  "standalone": false,
                  "type": "gradient",
                },
                "status" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "status",
                  "legacy": false,
                  "name": "Status",
                  "standalone": false,
                  "type": "gradient",
                },
                "temperature" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "temperature",
                  "legacy": false,
                  "name": "Temperature",
                  "standalone": false,
                  "type": "gradient",
                },
                "warm" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "warm",
                  "legacy": false,
                  "name": "Warm",
                  "standalone": false,
                  "type": "gradient",
                },
                "elastic_brand_2023" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#20377d",
                    "#7de2d1",
                    "#ff957d",
                    "#f04e98",
                    "#0077cc",
                    "#fec514",
                  ],
                  "aliases": Array [],
                  "colorCount": 6,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "elastic_brand_2023",
                  "legacy": false,
                  "name": "Elastic classic",
                  "standalone": false,
                  "type": "categorical",
                },
                "compare_to" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "compare_to",
                  "legacy": false,
                  "name": "Trend",
                  "standalone": true,
                  "type": "gradient",
                },
              },
              "get": [Function],
              "getAll": [Function],
              "query": [Function],
            }
          }
          shouldShowValueLabels={true}
          syncColors={false}
          timeZone="UTC"
          titles={
            Object {
              "first": Object {
                "markSizeTitles": Object {},
                "splitColumnTitles": Object {},
                "splitRowTitles": Object {},
                "splitSeriesTitles": Object {
                  "d": "ColD",
                },
                "xTitles": Object {
                  "c": "c",
                },
                "yTitles": Object {
                  "a": "a",
                  "b": "b",
                },
              },
            }
          }
          valueLabels="hide"
          xAxisConfiguration={
            Object {
              "groupId": "bottom",
              "labelsOrientation": 0,
              "position": "bottom",
              "series": Array [],
              "showGridLines": true,
              "showLabels": true,
              "showTitle": true,
              "title": "",
              "type": "xAxisConfig",
            }
          }
          yAxesConfiguration={
            Array [
              Object {
                "extent": Object {
                  "mode": "full",
                  "type": "axisExtentConfig",
                },
                "formatter": Object {
                  "convert": [MockFunction] {
                    "calls": Array [
                      Array [
                        1652034840000,
                      ],
                      Array [
                        1652122440000,
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": 1652034840000,
                      },
                      Object {
                        "type": "return",
                        "value": 1652122440000,
                      },
                    ],
                  },
                },
                "groupId": "left",
                "labelsOrientation": -90,
                "position": "left",
                "series": Array [
                  Object {
                    "accessor": "a",
                    "layer": "first",
                  },
                  Object {
                    "accessor": "b",
                    "layer": "first",
                  },
                ],
                "showGridLines": false,
                "showLabels": false,
                "showTitle": true,
                "title": "",
                "type": "yAxisConfig",
              },
            ]
          }
        />
      </Chart>
    </ContextProvider>
  </div>
</Fragment>
`;

exports[`XYChart component it renders horizontal bar 1`] = `
<Fragment>
  <GlobalXYChartStyles />
  <div
    css="unknown styles"
  >
    <ContextProvider
      value={
        Object {
          "dataLayers": Array [
            Object {
              "accessors": Array [
                "a",
                "b",
              ],
              "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
              "isHistogram": false,
              "isHorizontal": true,
              "isPercentage": false,
              "isStacked": false,
              "layerId": "first",
              "layerType": "data",
              "palette": Object {
                "name": "mock",
                "params": Object {},
                "type": "palette",
              },
              "seriesType": "bar",
              "showLines": true,
              "splitAccessors": Array [
                "d",
              ],
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
              "type": "dataLayer",
              "xAccessor": "c",
              "xScaleType": "ordinal",
            },
          ],
          "fieldFormats": Object {
            "first": Object {
              "splitColumnAccessors": Object {},
              "splitRowAccessors": Object {},
              "splitSeriesAccessors": Object {
                "d": Object {
                  "format": Object {
                    "id": "string",
                  },
                  "formatter": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              },
              "xAccessors": Object {
                "c": Object {
                  "id": "string",
                },
              },
              "yAccessors": Object {
                "a": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "0,0.000",
                  },
                },
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
            },
          },
          "formattedDatatables": Object {
            "first": Object {
              "formattedColumns": Object {
                "c": true,
              },
              "invertedRawValueMap": Map {
                "a" => Map {},
                "b" => Map {},
                "c" => Map {
                  1652034840000 => 1652034840000,
                  1652122440000 => 1652122440000,
                },
                "d" => Map {},
              },
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
            },
          },
          "legendPosition": "top",
          "setColor": [Function],
          "singleTable": undefined,
          "titles": Object {
            "first": Object {
              "markSizeTitles": Object {},
              "splitColumnTitles": Object {},
              "splitRowTitles": Object {},
              "splitSeriesTitles": Object {
                "d": "ColD",
              },
              "xTitles": Object {
                "c": "c",
              },
              "yTitles": Object {
                "a": "a",
                "b": "b",
              },
            },
          },
          "uiState": undefined,
        }
      }
    >
      <Chart
        renderer="canvas"
      >
        <Tooltip
          actions={
            Array [
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
            ]
          }
          headerFormatter={[Function]}
          type="vertical"
        />
        <Settings
          allowBrushingLastHistogramBin={false}
          ariaUseDefaultSummary={true}
          baseTheme={
            Object {
              "arcSeriesStyle": Object {
                "arc": Object {
                  "opacity": 1,
                  "stroke": "black",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "areaSeriesStyle": Object {
                "area": Object {
                  "opacity": 0.3,
                  "visible": true,
                },
                "fit": Object {
                  "area": Object {
                    "fill": "__use__series__color__",
                    "opacity": 0.15,
                    "visible": true,
                  },
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "never",
                },
                "pointVisibilityMinDistance": 20,
              },
              "axes": Object {
                "axisLine": Object {
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "axisPanelTitle": Object {
                  "fill": "#333",
                  "fontFamily": "sans-serif",
                  "fontSize": 10,
                  "padding": Object {
                    "inner": 8,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "axisTitle": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "padding": Object {
                    "inner": 10,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "gridLine": Object {
                  "horizontal": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                  "vertical": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                },
                "tickLabel": Object {
                  "alignment": Object {
                    "horizontal": "near",
                    "vertical": "near",
                  },
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offset": Object {
                    "reference": "local",
                    "x": 0,
                    "y": 0,
                  },
                  "padding": Object {
                    "inner": 10,
                    "outer": 8,
                  },
                  "rotation": 0,
                  "visible": true,
                },
                "tickLine": Object {
                  "padding": 10,
                  "size": 10,
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "background": Object {
                "color": "#FFF",
                "fallbackColor": "#FFF",
              },
              "barSeriesStyle": Object {
                "displayValue": Object {
                  "alignment": Object {
                    "horizontal": "center",
                    "vertical": "middle",
                  },
                  "fill": Object {
                    "textBorder": 0,
                  },
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offsetX": 0,
                  "offsetY": 0,
                  "padding": 0,
                },
                "rect": Object {
                  "opacity": 1,
                },
                "rectBorder": Object {
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "bubbleSeriesStyle": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 2,
                  "strokeWidth": 0,
                  "visible": "always",
                },
              },
              "bulletGraph": Object {
                "angularTickLabelPadding": 10,
                "barBackground": "#343741",
                "border": "#EDF0F5",
                "colorBands": Array [
                  "#AA87D1",
                  "#D9C6EF",
                ],
                "fallbackBandColor": "#98A2B3",
                "minHeight": 64,
                "nonFiniteText": "N/A",
                "textColor": "#343741",
              },
              "chartMargins": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "chartPaddings": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "colors": Object {
                "defaultVizColor": "#6092C0",
                "vizColors": Array [
                  "#54B399",
                  "#6092C0",
                  "#9170B8",
                  "#CA8EAE",
                  "#D36086",
                  "#E7664C",
                  "#AA6556",
                  "#DA8B45",
                  "#B9A888",
                  "#D6BF57",
                ],
              },
              "crosshair": Object {
                "band": Object {
                  "fill": "#F1F4FA",
                  "visible": true,
                },
                "crossLine": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "line": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "flamegraph": Object {
                "minimapFocusBorder": "magenta",
                "navigation": Object {
                  "buttonBackgroundColor": "#CCE4F5",
                  "buttonDisabledBackgroundColor": "#D3DAE626",
                  "buttonDisabledTextColor": "#A2ABBA",
                  "buttonTextColor": "#0061A6",
                  "textColor": "#343741",
                },
                "scrollbarThumb": "#343741",
                "scrollbarTrack": "#D3DAE6",
              },
              "goal": Object {
                "arcBoxSamplePitch": 0.08726646259971647,
                "barThicknessMinSizeRatio": 0.1,
                "baselineArcThickness": 32,
                "baselineBarThickness": 32,
                "capturePad": 16,
                "majorCenterLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "majorLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "marginRatio": 0.05,
                "maxBulletSize": 500,
                "maxCentralFontSize": 38,
                "maxCircularSize": 360,
                "maxFontSize": 64,
                "maxLabelFontSize": 32,
                "maxTickFontSize": 24,
                "minFontSize": 8,
                "minorCenterLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "minorLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "progressLine": Object {
                  "stroke": "#343741",
                },
                "targetLine": Object {
                  "stroke": "#343741",
                },
                "tickLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "tickLine": Object {
                  "stroke": "#98A2B3",
                },
              },
              "heatmap": Object {
                "brushArea": Object {
                  "stroke": "#69707D",
                  "strokeWidth": 2,
                  "visible": true,
                },
                "brushMask": Object {
                  "fill": "#73737380",
                  "visible": true,
                },
                "brushTool": Object {
                  "fill": "gray",
                  "visible": false,
                },
                "cell": Object {
                  "align": "center",
                  "border": Object {
                    "stroke": "gray",
                    "strokeWidth": 0,
                  },
                  "label": Object {
                    "fontFamily": "Sans-Serif",
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": "normal",
                    "maxFontSize": 12,
                    "maxWidth": "fill",
                    "minFontSize": 8,
                    "textColor": "black",
                    "useGlobalMinFontSize": true,
                    "visible": true,
                  },
                  "maxHeight": "fill",
                  "maxWidth": "fill",
                },
                "grid": Object {
                  "stroke": Object {
                    "color": "gray",
                    "width": 1,
                  },
                },
                "xAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "rotation": 0,
                  "textColor": "black",
                  "visible": true,
                },
                "yAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "textColor": "black",
                  "visible": true,
                  "width": "auto",
                },
              },
              "highlighter": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 0.5,
                  "radius": 5,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                },
              },
              "legend": Object {
                "horizontalHeight": 64,
                "labelOptions": Object {
                  "maxLines": 1,
                },
                "margin": 0,
                "spacingBuffer": 10,
                "verticalWidth": 200,
              },
              "lineAnnotation": Object {
                "line": Object {
                  "opacity": 1,
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                },
              },
              "lineSeriesStyle": Object {
                "fit": Object {
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 1,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "pointVisibilityMinDistance": 40,
              },
              "metric": Object {
                "barBackground": "#EDF0F5",
                "border": "#EDF0F5",
                "emptyBackground": "transparent",
                "iconAlign": "right",
                "minHeight": 64,
                "minValueFontSize": 12,
                "nonFiniteText": "N/A",
                "textDarkColor": "#343741",
                "textLightColor": "#E0E5EE",
                "titlesTextAlign": "left",
                "valueFontSize": "default",
                "valuesTextAlign": "right",
              },
              "partition": Object {
                "circlePadding": 4,
                "emptySizeRatio": 0,
                "fillLabel": Object {
                  "clipText": false,
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "padding": 2,
                  "textColor": "__use__adaptive__color__",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 700,
                  },
                },
                "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                "horizontalTextAngleThreshold": 0.5235987755982988,
                "horizontalTextEnforcer": 1,
                "idealFontSizeJump": 1.05,
                "linkLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 11,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "gap": 10,
                  "horizontalStemLength": 10,
                  "lineWidth": 1,
                  "maxCount": 5,
                  "maxTextLength": 100,
                  "maximumSection": 10,
                  "minimumStemLength": 0,
                  "padding": 0,
                  "radiusPadding": 10,
                  "spacing": 2,
                  "stemAngle": 0.7853981633974483,
                  "textColor": "#343741",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 400,
                  },
                },
                "maxFontSize": 16,
                "maximizeFontSize": false,
                "minFontSize": 8,
                "outerSizeRatio": 1,
                "radialPadding": 0.017453292519943295,
                "sectorLineStroke": "#FFF",
                "sectorLineWidth": 1.5,
              },
              "rectAnnotation": Object {
                "fill": "#69707D",
                "opacity": 0.25,
                "stroke": "#69707D",
                "strokeWidth": 0,
              },
              "scales": Object {
                "barsPadding": 0.25,
                "histogramPadding": 0.05,
              },
              "sharedStyle": Object {
                "default": Object {
                  "opacity": 1,
                },
                "highlighted": Object {
                  "opacity": 1,
                },
                "unhighlighted": Object {
                  "opacity": 0.25,
                },
              },
              "tooltip": Object {
                "defaultDotColor": "black",
                "maxTableHeight": 120,
                "maxWidth": 500,
              },
            }
          }
          debugState={false}
          externalPointerEvents={
            Object {
              "tooltip": Object {
                "placement": "right",
                "visible": false,
              },
            }
          }
          legendAction={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": [Function],
            }
          }
          legendPosition="top"
          legendSize={130}
          legendValues={Array []}
          locale="en"
          noResults={
            <EmptyPlaceholder
              css="unknown styles"
              icon={[Function]}
              renderComplete={[Function]}
            />
          }
          onBrushEnd={[Function]}
          onElementClick={[Function]}
          onPointerUpdate={[Function]}
          onRenderChange={[Function]}
          pointerUpdateDebounce={0}
          rotation={90}
          showLegend={false}
          theme={
            Array [
              Object {
                "background": Object {
                  "color": undefined,
                },
                "barSeriesStyle": Object {},
                "chartMargins": Object {
                  "bottom": 10,
                  "left": 10,
                  "right": 10,
                  "top": 10,
                },
                "legend": Object {
                  "labelOptions": Object {
                    "maxLines": 0,
                  },
                },
                "markSizeRatio": undefined,
              },
              Object {},
            ]
          }
        />
        <XYCurrentTime
          enabled={false}
          isDarkMode={false}
        />
        <Component
          gridLine={
            Object {
              "strokeWidth": 1,
              "visible": true,
            }
          }
          hide={false}
          id="x"
          position="left"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": 0,
                "visible": true,
              },
            }
          }
          tickFormat={[Function]}
          timeAxisLayerCount={0}
          title="c"
        />
        <Component
          domain={
            Object {
              "fit": false,
              "includeDataFromIds": Array [],
              "max": NaN,
              "min": NaN,
              "padding": undefined,
            }
          }
          gridLine={
            Object {
              "visible": false,
            }
          }
          groupId="left"
          id="left"
          key="left"
          position="bottom"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": -90,
                "visible": false,
              },
            }
          }
          tickFormat={[Function]}
          title="a"
        />
        <XyEndzones
          darkMode={false}
          histogramMode={false}
        />
        <DataLayers
          chartHasMoreThanOneBarSeries={true}
          defaultXScaleType="ordinal"
          fieldFormats={
            Object {
              "first": Object {
                "splitColumnAccessors": Object {},
                "splitRowAccessors": Object {},
                "splitSeriesAccessors": Object {
                  "d": Object {
                    "format": Object {
                      "id": "string",
                    },
                    "formatter": Object {
                      "convert": [MockFunction] {
                        "calls": Array [
                          Array [
                            1652034840000,
                          ],
                          Array [
                            1652122440000,
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": 1652034840000,
                          },
                          Object {
                            "type": "return",
                            "value": 1652122440000,
                          },
                        ],
                      },
                    },
                  },
                },
                "xAccessors": Object {
                  "c": Object {
                    "id": "string",
                  },
                },
                "yAccessors": Object {
                  "a": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
              },
            }
          }
          formatFactory={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              ],
            }
          }
          formattedDatatables={
            Object {
              "first": Object {
                "formattedColumns": Object {
                  "c": true,
                },
                "invertedRawValueMap": Map {
                  "a" => Map {},
                  "b" => Map {},
                  "c" => Map {
                    1652034840000 => 1652034840000,
                    1652122440000 => 1652122440000,
                  },
                  "d" => Map {},
                },
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
              },
            }
          }
          isDarkMode={false}
          layers={
            Array [
              Object {
                "accessors": Array [
                  "a",
                  "b",
                ],
                "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
                "isHistogram": false,
                "isHorizontal": true,
                "isPercentage": false,
                "isStacked": false,
                "layerId": "first",
                "layerType": "data",
                "palette": Object {
                  "name": "mock",
                  "params": Object {},
                  "type": "palette",
                },
                "seriesType": "bar",
                "showLines": true,
                "splitAccessors": Array [
                  "d",
                ],
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
                "type": "dataLayer",
                "xAccessor": "c",
                "xScaleType": "ordinal",
              },
            ]
          }
          minBarHeight={1}
          paletteService={
            Object {
              "get": [MockFunction],
              "getAll": [MockFunction],
            }
          }
          palettes={
            KbnPalettes {
              "_aliasMappings": Map {
                "default" => "eui_amsterdam",
                "eui_amsterdam_color_blind" => "eui_amsterdam",
                "kibana_palette" => "kibana_v7_legacy",
                "complimentary" => "complementary",
                "positive" => "green",
                "negative" => "red",
              },
              "_defaultPalette": KbnColorFnPalette {
                "_colorFn": [Function],
                "_defaultNumberOfColors": 30,
                "aliases": Array [
                  "default",
                  "eui_amsterdam_color_blind",
                ],
                "colorCount": 10,
                "colors": [Function],
                "getColor": [Function],
                "id": "eui_amsterdam",
                "legacy": false,
                "name": "Kibana 7.0",
                "standalone": false,
                "type": "categorical",
              },
              "_palettes": Map {
                "eui_amsterdam" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [
                    "default",
                    "eui_amsterdam_color_blind",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "eui_amsterdam",
                  "legacy": false,
                  "name": "Kibana 7.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "kibana_v7_legacy" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#00a69b",
                    "#57c17b",
                    "#6f87d8",
                    "#663db8",
                    "#bc52bc",
                    "#9e3533",
                    "#daa05d",
                    "#bfaf40",
                    "#4050bf",
                    "#bf5040",
                    "#40afbf",
                    "#70bf40",
                    "#8f40bf",
                    "#bf40a7",
                    "#40bf58",
                    "#bf9740",
                    "#4068bf",
                    "#bf4048",
                    "#40bfb7",
                    "#87bf40",
                  ],
                  "aliases": Array [
                    "kibana_palette",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "kibana_v7_legacy",
                  "legacy": false,
                  "name": "Kibana 4.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "behind_text" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "behind_text",
                  "legacy": false,
                  "name": "Kibana 7.0 (behind text)",
                  "standalone": true,
                  "type": "categorical",
                },
                "neutral" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#f2f4fb",
                    "#d4d9e5",
                    "#98a2b3",
                    "#696f7d",
                    "#353642",
                  ],
                  "aliases": Array [],
                  "colorCount": 5,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "neutral",
                  "legacy": false,
                  "name": "Neutral",
                  "standalone": true,
                  "type": "categorical",
                },
                "complementary" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "complimentary",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "complementary",
                  "legacy": false,
                  "name": "Complementary",
                  "standalone": false,
                  "type": "gradient",
                },
                "cool" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "cool",
                  "legacy": false,
                  "name": "Cool",
                  "standalone": false,
                  "type": "gradient",
                },
                "gray" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "gray",
                  "legacy": false,
                  "name": "Gray",
                  "standalone": false,
                  "type": "gradient",
                },
                "green" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "positive",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "green",
                  "legacy": false,
                  "name": "Positive",
                  "standalone": false,
                  "type": "gradient",
                },
                "red" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "negative",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "red",
                  "legacy": false,
                  "name": "Negative",
                  "standalone": false,
                  "type": "gradient",
                },
                "status" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "status",
                  "legacy": false,
                  "name": "Status",
                  "standalone": false,
                  "type": "gradient",
                },
                "temperature" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "temperature",
                  "legacy": false,
                  "name": "Temperature",
                  "standalone": false,
                  "type": "gradient",
                },
                "warm" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "warm",
                  "legacy": false,
                  "name": "Warm",
                  "standalone": false,
                  "type": "gradient",
                },
                "elastic_brand_2023" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#20377d",
                    "#7de2d1",
                    "#ff957d",
                    "#f04e98",
                    "#0077cc",
                    "#fec514",
                  ],
                  "aliases": Array [],
                  "colorCount": 6,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "elastic_brand_2023",
                  "legacy": false,
                  "name": "Elastic classic",
                  "standalone": false,
                  "type": "categorical",
                },
                "compare_to" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "compare_to",
                  "legacy": false,
                  "name": "Trend",
                  "standalone": true,
                  "type": "gradient",
                },
              },
              "get": [Function],
              "getAll": [Function],
              "query": [Function],
            }
          }
          shouldShowValueLabels={true}
          syncColors={false}
          timeZone="UTC"
          titles={
            Object {
              "first": Object {
                "markSizeTitles": Object {},
                "splitColumnTitles": Object {},
                "splitRowTitles": Object {},
                "splitSeriesTitles": Object {
                  "d": "ColD",
                },
                "xTitles": Object {
                  "c": "c",
                },
                "yTitles": Object {
                  "a": "a",
                  "b": "b",
                },
              },
            }
          }
          valueLabels="hide"
          xAxisConfiguration={
            Object {
              "groupId": "bottom",
              "labelsOrientation": 0,
              "position": "right",
              "series": Array [],
              "showGridLines": true,
              "showLabels": true,
              "showTitle": true,
              "title": "",
              "type": "xAxisConfig",
            }
          }
          yAxesConfiguration={
            Array [
              Object {
                "extent": Object {
                  "mode": "full",
                  "type": "axisExtentConfig",
                },
                "formatter": Object {
                  "convert": [MockFunction] {
                    "calls": Array [
                      Array [
                        1652034840000,
                      ],
                      Array [
                        1652122440000,
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": 1652034840000,
                      },
                      Object {
                        "type": "return",
                        "value": 1652122440000,
                      },
                    ],
                  },
                },
                "groupId": "left",
                "labelsOrientation": -90,
                "position": "bottom",
                "series": Array [
                  Object {
                    "accessor": "a",
                    "layer": "first",
                  },
                  Object {
                    "accessor": "b",
                    "layer": "first",
                  },
                ],
                "showGridLines": false,
                "showLabels": false,
                "showTitle": true,
                "title": "",
                "type": "yAxisConfig",
              },
            ]
          }
        />
      </Chart>
    </ContextProvider>
  </div>
</Fragment>
`;

exports[`XYChart component it renders line 1`] = `
<Fragment>
  <GlobalXYChartStyles />
  <div
    css="unknown styles"
  >
    <ContextProvider
      value={
        Object {
          "dataLayers": Array [
            Object {
              "accessors": Array [
                "a",
                "b",
              ],
              "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
              "isHistogram": false,
              "isHorizontal": false,
              "isPercentage": false,
              "isStacked": false,
              "layerId": "first",
              "layerType": "data",
              "palette": Object {
                "name": "mock",
                "params": Object {},
                "type": "palette",
              },
              "seriesType": "line",
              "showLines": true,
              "splitAccessors": Array [
                "d",
              ],
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
              "type": "dataLayer",
              "xAccessor": "c",
              "xScaleType": "ordinal",
            },
          ],
          "fieldFormats": Object {
            "first": Object {
              "splitColumnAccessors": Object {},
              "splitRowAccessors": Object {},
              "splitSeriesAccessors": Object {
                "d": Object {
                  "format": Object {
                    "id": "string",
                  },
                  "formatter": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              },
              "xAccessors": Object {
                "c": Object {
                  "id": "string",
                },
              },
              "yAccessors": Object {
                "a": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "0,0.000",
                  },
                },
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
            },
          },
          "formattedDatatables": Object {
            "first": Object {
              "formattedColumns": Object {
                "c": true,
              },
              "invertedRawValueMap": Map {
                "a" => Map {},
                "b" => Map {},
                "c" => Map {
                  1652034840000 => 1652034840000,
                  1652122440000 => 1652122440000,
                },
                "d" => Map {},
              },
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
            },
          },
          "legendPosition": "top",
          "setColor": [Function],
          "singleTable": undefined,
          "titles": Object {
            "first": Object {
              "markSizeTitles": Object {},
              "splitColumnTitles": Object {},
              "splitRowTitles": Object {},
              "splitSeriesTitles": Object {
                "d": "ColD",
              },
              "xTitles": Object {
                "c": "c",
              },
              "yTitles": Object {
                "a": "a",
                "b": "b",
              },
            },
          },
          "uiState": undefined,
        }
      }
    >
      <Chart
        renderer="canvas"
      >
        <Tooltip
          actions={
            Array [
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
            ]
          }
          headerFormatter={[Function]}
          type="vertical"
        />
        <Settings
          allowBrushingLastHistogramBin={false}
          ariaUseDefaultSummary={true}
          baseTheme={
            Object {
              "arcSeriesStyle": Object {
                "arc": Object {
                  "opacity": 1,
                  "stroke": "black",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "areaSeriesStyle": Object {
                "area": Object {
                  "opacity": 0.3,
                  "visible": true,
                },
                "fit": Object {
                  "area": Object {
                    "fill": "__use__series__color__",
                    "opacity": 0.15,
                    "visible": true,
                  },
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "never",
                },
                "pointVisibilityMinDistance": 20,
              },
              "axes": Object {
                "axisLine": Object {
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "axisPanelTitle": Object {
                  "fill": "#333",
                  "fontFamily": "sans-serif",
                  "fontSize": 10,
                  "padding": Object {
                    "inner": 8,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "axisTitle": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "padding": Object {
                    "inner": 10,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "gridLine": Object {
                  "horizontal": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                  "vertical": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                },
                "tickLabel": Object {
                  "alignment": Object {
                    "horizontal": "near",
                    "vertical": "near",
                  },
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offset": Object {
                    "reference": "local",
                    "x": 0,
                    "y": 0,
                  },
                  "padding": Object {
                    "inner": 10,
                    "outer": 8,
                  },
                  "rotation": 0,
                  "visible": true,
                },
                "tickLine": Object {
                  "padding": 10,
                  "size": 10,
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "background": Object {
                "color": "#FFF",
                "fallbackColor": "#FFF",
              },
              "barSeriesStyle": Object {
                "displayValue": Object {
                  "alignment": Object {
                    "horizontal": "center",
                    "vertical": "middle",
                  },
                  "fill": Object {
                    "textBorder": 0,
                  },
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offsetX": 0,
                  "offsetY": 0,
                  "padding": 0,
                },
                "rect": Object {
                  "opacity": 1,
                },
                "rectBorder": Object {
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "bubbleSeriesStyle": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 2,
                  "strokeWidth": 0,
                  "visible": "always",
                },
              },
              "bulletGraph": Object {
                "angularTickLabelPadding": 10,
                "barBackground": "#343741",
                "border": "#EDF0F5",
                "colorBands": Array [
                  "#AA87D1",
                  "#D9C6EF",
                ],
                "fallbackBandColor": "#98A2B3",
                "minHeight": 64,
                "nonFiniteText": "N/A",
                "textColor": "#343741",
              },
              "chartMargins": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "chartPaddings": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "colors": Object {
                "defaultVizColor": "#6092C0",
                "vizColors": Array [
                  "#54B399",
                  "#6092C0",
                  "#9170B8",
                  "#CA8EAE",
                  "#D36086",
                  "#E7664C",
                  "#AA6556",
                  "#DA8B45",
                  "#B9A888",
                  "#D6BF57",
                ],
              },
              "crosshair": Object {
                "band": Object {
                  "fill": "#F1F4FA",
                  "visible": true,
                },
                "crossLine": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "line": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "flamegraph": Object {
                "minimapFocusBorder": "magenta",
                "navigation": Object {
                  "buttonBackgroundColor": "#CCE4F5",
                  "buttonDisabledBackgroundColor": "#D3DAE626",
                  "buttonDisabledTextColor": "#A2ABBA",
                  "buttonTextColor": "#0061A6",
                  "textColor": "#343741",
                },
                "scrollbarThumb": "#343741",
                "scrollbarTrack": "#D3DAE6",
              },
              "goal": Object {
                "arcBoxSamplePitch": 0.08726646259971647,
                "barThicknessMinSizeRatio": 0.1,
                "baselineArcThickness": 32,
                "baselineBarThickness": 32,
                "capturePad": 16,
                "majorCenterLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "majorLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "marginRatio": 0.05,
                "maxBulletSize": 500,
                "maxCentralFontSize": 38,
                "maxCircularSize": 360,
                "maxFontSize": 64,
                "maxLabelFontSize": 32,
                "maxTickFontSize": 24,
                "minFontSize": 8,
                "minorCenterLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "minorLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "progressLine": Object {
                  "stroke": "#343741",
                },
                "targetLine": Object {
                  "stroke": "#343741",
                },
                "tickLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "tickLine": Object {
                  "stroke": "#98A2B3",
                },
              },
              "heatmap": Object {
                "brushArea": Object {
                  "stroke": "#69707D",
                  "strokeWidth": 2,
                  "visible": true,
                },
                "brushMask": Object {
                  "fill": "#73737380",
                  "visible": true,
                },
                "brushTool": Object {
                  "fill": "gray",
                  "visible": false,
                },
                "cell": Object {
                  "align": "center",
                  "border": Object {
                    "stroke": "gray",
                    "strokeWidth": 0,
                  },
                  "label": Object {
                    "fontFamily": "Sans-Serif",
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": "normal",
                    "maxFontSize": 12,
                    "maxWidth": "fill",
                    "minFontSize": 8,
                    "textColor": "black",
                    "useGlobalMinFontSize": true,
                    "visible": true,
                  },
                  "maxHeight": "fill",
                  "maxWidth": "fill",
                },
                "grid": Object {
                  "stroke": Object {
                    "color": "gray",
                    "width": 1,
                  },
                },
                "xAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "rotation": 0,
                  "textColor": "black",
                  "visible": true,
                },
                "yAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "textColor": "black",
                  "visible": true,
                  "width": "auto",
                },
              },
              "highlighter": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 0.5,
                  "radius": 5,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                },
              },
              "legend": Object {
                "horizontalHeight": 64,
                "labelOptions": Object {
                  "maxLines": 1,
                },
                "margin": 0,
                "spacingBuffer": 10,
                "verticalWidth": 200,
              },
              "lineAnnotation": Object {
                "line": Object {
                  "opacity": 1,
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                },
              },
              "lineSeriesStyle": Object {
                "fit": Object {
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 1,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "pointVisibilityMinDistance": 40,
              },
              "metric": Object {
                "barBackground": "#EDF0F5",
                "border": "#EDF0F5",
                "emptyBackground": "transparent",
                "iconAlign": "right",
                "minHeight": 64,
                "minValueFontSize": 12,
                "nonFiniteText": "N/A",
                "textDarkColor": "#343741",
                "textLightColor": "#E0E5EE",
                "titlesTextAlign": "left",
                "valueFontSize": "default",
                "valuesTextAlign": "right",
              },
              "partition": Object {
                "circlePadding": 4,
                "emptySizeRatio": 0,
                "fillLabel": Object {
                  "clipText": false,
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "padding": 2,
                  "textColor": "__use__adaptive__color__",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 700,
                  },
                },
                "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                "horizontalTextAngleThreshold": 0.5235987755982988,
                "horizontalTextEnforcer": 1,
                "idealFontSizeJump": 1.05,
                "linkLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 11,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "gap": 10,
                  "horizontalStemLength": 10,
                  "lineWidth": 1,
                  "maxCount": 5,
                  "maxTextLength": 100,
                  "maximumSection": 10,
                  "minimumStemLength": 0,
                  "padding": 0,
                  "radiusPadding": 10,
                  "spacing": 2,
                  "stemAngle": 0.7853981633974483,
                  "textColor": "#343741",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 400,
                  },
                },
                "maxFontSize": 16,
                "maximizeFontSize": false,
                "minFontSize": 8,
                "outerSizeRatio": 1,
                "radialPadding": 0.017453292519943295,
                "sectorLineStroke": "#FFF",
                "sectorLineWidth": 1.5,
              },
              "rectAnnotation": Object {
                "fill": "#69707D",
                "opacity": 0.25,
                "stroke": "#69707D",
                "strokeWidth": 0,
              },
              "scales": Object {
                "barsPadding": 0.25,
                "histogramPadding": 0.05,
              },
              "sharedStyle": Object {
                "default": Object {
                  "opacity": 1,
                },
                "highlighted": Object {
                  "opacity": 1,
                },
                "unhighlighted": Object {
                  "opacity": 0.25,
                },
              },
              "tooltip": Object {
                "defaultDotColor": "black",
                "maxTableHeight": 120,
                "maxWidth": 500,
              },
            }
          }
          debugState={false}
          externalPointerEvents={
            Object {
              "tooltip": Object {
                "placement": "right",
                "visible": false,
              },
            }
          }
          legendAction={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": [Function],
            }
          }
          legendPosition="top"
          legendSize={130}
          legendValues={Array []}
          locale="en"
          noResults={
            <EmptyPlaceholder
              css="unknown styles"
              icon={[Function]}
              renderComplete={[Function]}
            />
          }
          onBrushEnd={[Function]}
          onElementClick={[Function]}
          onPointerUpdate={[Function]}
          onRenderChange={[Function]}
          pointerUpdateDebounce={0}
          rotation={0}
          showLegend={false}
          theme={
            Array [
              Object {
                "background": Object {
                  "color": undefined,
                },
                "barSeriesStyle": Object {},
                "chartMargins": Object {
                  "bottom": 10,
                  "left": 10,
                  "right": 10,
                  "top": 10,
                },
                "legend": Object {
                  "labelOptions": Object {
                    "maxLines": 0,
                  },
                },
                "markSizeRatio": undefined,
              },
              Object {},
            ]
          }
        />
        <XYCurrentTime
          enabled={false}
          isDarkMode={false}
        />
        <Component
          gridLine={
            Object {
              "strokeWidth": 1,
              "visible": true,
            }
          }
          hide={false}
          id="x"
          position="bottom"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": 0,
                "visible": true,
              },
            }
          }
          tickFormat={[Function]}
          timeAxisLayerCount={0}
          title="c"
        />
        <Component
          domain={
            Object {
              "fit": false,
              "includeDataFromIds": Array [],
              "max": NaN,
              "min": NaN,
              "padding": undefined,
            }
          }
          gridLine={
            Object {
              "visible": false,
            }
          }
          groupId="left"
          id="left"
          key="left"
          position="left"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": -90,
                "visible": false,
              },
            }
          }
          tickFormat={[Function]}
          title="a"
        />
        <XyEndzones
          darkMode={false}
          histogramMode={false}
        />
        <DataLayers
          chartHasMoreThanOneBarSeries={false}
          defaultXScaleType="ordinal"
          fieldFormats={
            Object {
              "first": Object {
                "splitColumnAccessors": Object {},
                "splitRowAccessors": Object {},
                "splitSeriesAccessors": Object {
                  "d": Object {
                    "format": Object {
                      "id": "string",
                    },
                    "formatter": Object {
                      "convert": [MockFunction] {
                        "calls": Array [
                          Array [
                            1652034840000,
                          ],
                          Array [
                            1652122440000,
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": 1652034840000,
                          },
                          Object {
                            "type": "return",
                            "value": 1652122440000,
                          },
                        ],
                      },
                    },
                  },
                },
                "xAccessors": Object {
                  "c": Object {
                    "id": "string",
                  },
                },
                "yAccessors": Object {
                  "a": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
              },
            }
          }
          formatFactory={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              ],
            }
          }
          formattedDatatables={
            Object {
              "first": Object {
                "formattedColumns": Object {
                  "c": true,
                },
                "invertedRawValueMap": Map {
                  "a" => Map {},
                  "b" => Map {},
                  "c" => Map {
                    1652034840000 => 1652034840000,
                    1652122440000 => 1652122440000,
                  },
                  "d" => Map {},
                },
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
              },
            }
          }
          isDarkMode={false}
          layers={
            Array [
              Object {
                "accessors": Array [
                  "a",
                  "b",
                ],
                "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
                "isHistogram": false,
                "isHorizontal": false,
                "isPercentage": false,
                "isStacked": false,
                "layerId": "first",
                "layerType": "data",
                "palette": Object {
                  "name": "mock",
                  "params": Object {},
                  "type": "palette",
                },
                "seriesType": "line",
                "showLines": true,
                "splitAccessors": Array [
                  "d",
                ],
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
                "type": "dataLayer",
                "xAccessor": "c",
                "xScaleType": "ordinal",
              },
            ]
          }
          minBarHeight={1}
          paletteService={
            Object {
              "get": [MockFunction],
              "getAll": [MockFunction],
            }
          }
          palettes={
            KbnPalettes {
              "_aliasMappings": Map {
                "default" => "eui_amsterdam",
                "eui_amsterdam_color_blind" => "eui_amsterdam",
                "kibana_palette" => "kibana_v7_legacy",
                "complimentary" => "complementary",
                "positive" => "green",
                "negative" => "red",
              },
              "_defaultPalette": KbnColorFnPalette {
                "_colorFn": [Function],
                "_defaultNumberOfColors": 30,
                "aliases": Array [
                  "default",
                  "eui_amsterdam_color_blind",
                ],
                "colorCount": 10,
                "colors": [Function],
                "getColor": [Function],
                "id": "eui_amsterdam",
                "legacy": false,
                "name": "Kibana 7.0",
                "standalone": false,
                "type": "categorical",
              },
              "_palettes": Map {
                "eui_amsterdam" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [
                    "default",
                    "eui_amsterdam_color_blind",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "eui_amsterdam",
                  "legacy": false,
                  "name": "Kibana 7.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "kibana_v7_legacy" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#00a69b",
                    "#57c17b",
                    "#6f87d8",
                    "#663db8",
                    "#bc52bc",
                    "#9e3533",
                    "#daa05d",
                    "#bfaf40",
                    "#4050bf",
                    "#bf5040",
                    "#40afbf",
                    "#70bf40",
                    "#8f40bf",
                    "#bf40a7",
                    "#40bf58",
                    "#bf9740",
                    "#4068bf",
                    "#bf4048",
                    "#40bfb7",
                    "#87bf40",
                  ],
                  "aliases": Array [
                    "kibana_palette",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "kibana_v7_legacy",
                  "legacy": false,
                  "name": "Kibana 4.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "behind_text" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "behind_text",
                  "legacy": false,
                  "name": "Kibana 7.0 (behind text)",
                  "standalone": true,
                  "type": "categorical",
                },
                "neutral" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#f2f4fb",
                    "#d4d9e5",
                    "#98a2b3",
                    "#696f7d",
                    "#353642",
                  ],
                  "aliases": Array [],
                  "colorCount": 5,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "neutral",
                  "legacy": false,
                  "name": "Neutral",
                  "standalone": true,
                  "type": "categorical",
                },
                "complementary" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "complimentary",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "complementary",
                  "legacy": false,
                  "name": "Complementary",
                  "standalone": false,
                  "type": "gradient",
                },
                "cool" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "cool",
                  "legacy": false,
                  "name": "Cool",
                  "standalone": false,
                  "type": "gradient",
                },
                "gray" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "gray",
                  "legacy": false,
                  "name": "Gray",
                  "standalone": false,
                  "type": "gradient",
                },
                "green" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "positive",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "green",
                  "legacy": false,
                  "name": "Positive",
                  "standalone": false,
                  "type": "gradient",
                },
                "red" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "negative",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "red",
                  "legacy": false,
                  "name": "Negative",
                  "standalone": false,
                  "type": "gradient",
                },
                "status" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "status",
                  "legacy": false,
                  "name": "Status",
                  "standalone": false,
                  "type": "gradient",
                },
                "temperature" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "temperature",
                  "legacy": false,
                  "name": "Temperature",
                  "standalone": false,
                  "type": "gradient",
                },
                "warm" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "warm",
                  "legacy": false,
                  "name": "Warm",
                  "standalone": false,
                  "type": "gradient",
                },
                "elastic_brand_2023" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#20377d",
                    "#7de2d1",
                    "#ff957d",
                    "#f04e98",
                    "#0077cc",
                    "#fec514",
                  ],
                  "aliases": Array [],
                  "colorCount": 6,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "elastic_brand_2023",
                  "legacy": false,
                  "name": "Elastic classic",
                  "standalone": false,
                  "type": "categorical",
                },
                "compare_to" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "compare_to",
                  "legacy": false,
                  "name": "Trend",
                  "standalone": true,
                  "type": "gradient",
                },
              },
              "get": [Function],
              "getAll": [Function],
              "query": [Function],
            }
          }
          shouldShowValueLabels={true}
          syncColors={false}
          timeZone="UTC"
          titles={
            Object {
              "first": Object {
                "markSizeTitles": Object {},
                "splitColumnTitles": Object {},
                "splitRowTitles": Object {},
                "splitSeriesTitles": Object {
                  "d": "ColD",
                },
                "xTitles": Object {
                  "c": "c",
                },
                "yTitles": Object {
                  "a": "a",
                  "b": "b",
                },
              },
            }
          }
          valueLabels="hide"
          xAxisConfiguration={
            Object {
              "groupId": "bottom",
              "labelsOrientation": 0,
              "position": "bottom",
              "series": Array [],
              "showGridLines": true,
              "showLabels": true,
              "showTitle": true,
              "title": "",
              "type": "xAxisConfig",
            }
          }
          yAxesConfiguration={
            Array [
              Object {
                "extent": Object {
                  "mode": "full",
                  "type": "axisExtentConfig",
                },
                "formatter": Object {
                  "convert": [MockFunction] {
                    "calls": Array [
                      Array [
                        1652034840000,
                      ],
                      Array [
                        1652122440000,
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": 1652034840000,
                      },
                      Object {
                        "type": "return",
                        "value": 1652122440000,
                      },
                    ],
                  },
                },
                "groupId": "left",
                "labelsOrientation": -90,
                "position": "left",
                "series": Array [
                  Object {
                    "accessor": "a",
                    "layer": "first",
                  },
                  Object {
                    "accessor": "b",
                    "layer": "first",
                  },
                ],
                "showGridLines": false,
                "showLabels": false,
                "showTitle": true,
                "title": "",
                "type": "yAxisConfig",
              },
            ]
          }
        />
      </Chart>
    </ContextProvider>
  </div>
</Fragment>
`;

exports[`XYChart component it renders stacked area 1`] = `
<Fragment>
  <GlobalXYChartStyles />
  <div
    css="unknown styles"
  >
    <ContextProvider
      value={
        Object {
          "dataLayers": Array [
            Object {
              "accessors": Array [
                "a",
                "b",
              ],
              "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
              "isHistogram": false,
              "isHorizontal": false,
              "isPercentage": false,
              "isStacked": true,
              "layerId": "first",
              "layerType": "data",
              "palette": Object {
                "name": "mock",
                "params": Object {},
                "type": "palette",
              },
              "seriesType": "area",
              "showLines": true,
              "splitAccessors": Array [
                "d",
              ],
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
              "type": "dataLayer",
              "xAccessor": "c",
              "xScaleType": "ordinal",
            },
          ],
          "fieldFormats": Object {
            "first": Object {
              "splitColumnAccessors": Object {},
              "splitRowAccessors": Object {},
              "splitSeriesAccessors": Object {
                "d": Object {
                  "format": Object {
                    "id": "string",
                  },
                  "formatter": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              },
              "xAccessors": Object {
                "c": Object {
                  "id": "string",
                },
              },
              "yAccessors": Object {
                "a": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "0,0.000",
                  },
                },
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
            },
          },
          "formattedDatatables": Object {
            "first": Object {
              "formattedColumns": Object {
                "c": true,
              },
              "invertedRawValueMap": Map {
                "a" => Map {},
                "b" => Map {},
                "c" => Map {
                  1652034840000 => 1652034840000,
                  1652122440000 => 1652122440000,
                },
                "d" => Map {},
              },
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
            },
          },
          "legendPosition": "top",
          "setColor": [Function],
          "singleTable": undefined,
          "titles": Object {
            "first": Object {
              "markSizeTitles": Object {},
              "splitColumnTitles": Object {},
              "splitRowTitles": Object {},
              "splitSeriesTitles": Object {
                "d": "ColD",
              },
              "xTitles": Object {
                "c": "c",
              },
              "yTitles": Object {
                "a": "a",
                "b": "b",
              },
            },
          },
          "uiState": undefined,
        }
      }
    >
      <Chart
        renderer="canvas"
      >
        <Tooltip
          actions={
            Array [
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
            ]
          }
          headerFormatter={[Function]}
          type="vertical"
        />
        <Settings
          allowBrushingLastHistogramBin={false}
          ariaUseDefaultSummary={true}
          baseTheme={
            Object {
              "arcSeriesStyle": Object {
                "arc": Object {
                  "opacity": 1,
                  "stroke": "black",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "areaSeriesStyle": Object {
                "area": Object {
                  "opacity": 0.3,
                  "visible": true,
                },
                "fit": Object {
                  "area": Object {
                    "fill": "__use__series__color__",
                    "opacity": 0.15,
                    "visible": true,
                  },
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "never",
                },
                "pointVisibilityMinDistance": 20,
              },
              "axes": Object {
                "axisLine": Object {
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "axisPanelTitle": Object {
                  "fill": "#333",
                  "fontFamily": "sans-serif",
                  "fontSize": 10,
                  "padding": Object {
                    "inner": 8,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "axisTitle": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "padding": Object {
                    "inner": 10,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "gridLine": Object {
                  "horizontal": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                  "vertical": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                },
                "tickLabel": Object {
                  "alignment": Object {
                    "horizontal": "near",
                    "vertical": "near",
                  },
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offset": Object {
                    "reference": "local",
                    "x": 0,
                    "y": 0,
                  },
                  "padding": Object {
                    "inner": 10,
                    "outer": 8,
                  },
                  "rotation": 0,
                  "visible": true,
                },
                "tickLine": Object {
                  "padding": 10,
                  "size": 10,
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "background": Object {
                "color": "#FFF",
                "fallbackColor": "#FFF",
              },
              "barSeriesStyle": Object {
                "displayValue": Object {
                  "alignment": Object {
                    "horizontal": "center",
                    "vertical": "middle",
                  },
                  "fill": Object {
                    "textBorder": 0,
                  },
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offsetX": 0,
                  "offsetY": 0,
                  "padding": 0,
                },
                "rect": Object {
                  "opacity": 1,
                },
                "rectBorder": Object {
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "bubbleSeriesStyle": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 2,
                  "strokeWidth": 0,
                  "visible": "always",
                },
              },
              "bulletGraph": Object {
                "angularTickLabelPadding": 10,
                "barBackground": "#343741",
                "border": "#EDF0F5",
                "colorBands": Array [
                  "#AA87D1",
                  "#D9C6EF",
                ],
                "fallbackBandColor": "#98A2B3",
                "minHeight": 64,
                "nonFiniteText": "N/A",
                "textColor": "#343741",
              },
              "chartMargins": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "chartPaddings": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "colors": Object {
                "defaultVizColor": "#6092C0",
                "vizColors": Array [
                  "#54B399",
                  "#6092C0",
                  "#9170B8",
                  "#CA8EAE",
                  "#D36086",
                  "#E7664C",
                  "#AA6556",
                  "#DA8B45",
                  "#B9A888",
                  "#D6BF57",
                ],
              },
              "crosshair": Object {
                "band": Object {
                  "fill": "#F1F4FA",
                  "visible": true,
                },
                "crossLine": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "line": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "flamegraph": Object {
                "minimapFocusBorder": "magenta",
                "navigation": Object {
                  "buttonBackgroundColor": "#CCE4F5",
                  "buttonDisabledBackgroundColor": "#D3DAE626",
                  "buttonDisabledTextColor": "#A2ABBA",
                  "buttonTextColor": "#0061A6",
                  "textColor": "#343741",
                },
                "scrollbarThumb": "#343741",
                "scrollbarTrack": "#D3DAE6",
              },
              "goal": Object {
                "arcBoxSamplePitch": 0.08726646259971647,
                "barThicknessMinSizeRatio": 0.1,
                "baselineArcThickness": 32,
                "baselineBarThickness": 32,
                "capturePad": 16,
                "majorCenterLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "majorLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "marginRatio": 0.05,
                "maxBulletSize": 500,
                "maxCentralFontSize": 38,
                "maxCircularSize": 360,
                "maxFontSize": 64,
                "maxLabelFontSize": 32,
                "maxTickFontSize": 24,
                "minFontSize": 8,
                "minorCenterLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "minorLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "progressLine": Object {
                  "stroke": "#343741",
                },
                "targetLine": Object {
                  "stroke": "#343741",
                },
                "tickLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "tickLine": Object {
                  "stroke": "#98A2B3",
                },
              },
              "heatmap": Object {
                "brushArea": Object {
                  "stroke": "#69707D",
                  "strokeWidth": 2,
                  "visible": true,
                },
                "brushMask": Object {
                  "fill": "#73737380",
                  "visible": true,
                },
                "brushTool": Object {
                  "fill": "gray",
                  "visible": false,
                },
                "cell": Object {
                  "align": "center",
                  "border": Object {
                    "stroke": "gray",
                    "strokeWidth": 0,
                  },
                  "label": Object {
                    "fontFamily": "Sans-Serif",
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": "normal",
                    "maxFontSize": 12,
                    "maxWidth": "fill",
                    "minFontSize": 8,
                    "textColor": "black",
                    "useGlobalMinFontSize": true,
                    "visible": true,
                  },
                  "maxHeight": "fill",
                  "maxWidth": "fill",
                },
                "grid": Object {
                  "stroke": Object {
                    "color": "gray",
                    "width": 1,
                  },
                },
                "xAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "rotation": 0,
                  "textColor": "black",
                  "visible": true,
                },
                "yAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "textColor": "black",
                  "visible": true,
                  "width": "auto",
                },
              },
              "highlighter": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 0.5,
                  "radius": 5,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                },
              },
              "legend": Object {
                "horizontalHeight": 64,
                "labelOptions": Object {
                  "maxLines": 1,
                },
                "margin": 0,
                "spacingBuffer": 10,
                "verticalWidth": 200,
              },
              "lineAnnotation": Object {
                "line": Object {
                  "opacity": 1,
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                },
              },
              "lineSeriesStyle": Object {
                "fit": Object {
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 1,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "pointVisibilityMinDistance": 40,
              },
              "metric": Object {
                "barBackground": "#EDF0F5",
                "border": "#EDF0F5",
                "emptyBackground": "transparent",
                "iconAlign": "right",
                "minHeight": 64,
                "minValueFontSize": 12,
                "nonFiniteText": "N/A",
                "textDarkColor": "#343741",
                "textLightColor": "#E0E5EE",
                "titlesTextAlign": "left",
                "valueFontSize": "default",
                "valuesTextAlign": "right",
              },
              "partition": Object {
                "circlePadding": 4,
                "emptySizeRatio": 0,
                "fillLabel": Object {
                  "clipText": false,
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "padding": 2,
                  "textColor": "__use__adaptive__color__",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 700,
                  },
                },
                "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                "horizontalTextAngleThreshold": 0.5235987755982988,
                "horizontalTextEnforcer": 1,
                "idealFontSizeJump": 1.05,
                "linkLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 11,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "gap": 10,
                  "horizontalStemLength": 10,
                  "lineWidth": 1,
                  "maxCount": 5,
                  "maxTextLength": 100,
                  "maximumSection": 10,
                  "minimumStemLength": 0,
                  "padding": 0,
                  "radiusPadding": 10,
                  "spacing": 2,
                  "stemAngle": 0.7853981633974483,
                  "textColor": "#343741",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 400,
                  },
                },
                "maxFontSize": 16,
                "maximizeFontSize": false,
                "minFontSize": 8,
                "outerSizeRatio": 1,
                "radialPadding": 0.017453292519943295,
                "sectorLineStroke": "#FFF",
                "sectorLineWidth": 1.5,
              },
              "rectAnnotation": Object {
                "fill": "#69707D",
                "opacity": 0.25,
                "stroke": "#69707D",
                "strokeWidth": 0,
              },
              "scales": Object {
                "barsPadding": 0.25,
                "histogramPadding": 0.05,
              },
              "sharedStyle": Object {
                "default": Object {
                  "opacity": 1,
                },
                "highlighted": Object {
                  "opacity": 1,
                },
                "unhighlighted": Object {
                  "opacity": 0.25,
                },
              },
              "tooltip": Object {
                "defaultDotColor": "black",
                "maxTableHeight": 120,
                "maxWidth": 500,
              },
            }
          }
          debugState={false}
          externalPointerEvents={
            Object {
              "tooltip": Object {
                "placement": "right",
                "visible": false,
              },
            }
          }
          legendAction={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": [Function],
            }
          }
          legendPosition="top"
          legendSize={130}
          legendValues={Array []}
          locale="en"
          noResults={
            <EmptyPlaceholder
              css="unknown styles"
              icon={[Function]}
              renderComplete={[Function]}
            />
          }
          onBrushEnd={[Function]}
          onElementClick={[Function]}
          onPointerUpdate={[Function]}
          onRenderChange={[Function]}
          pointerUpdateDebounce={0}
          rotation={0}
          showLegend={false}
          theme={
            Array [
              Object {
                "background": Object {
                  "color": undefined,
                },
                "barSeriesStyle": Object {},
                "chartMargins": Object {
                  "bottom": 10,
                  "left": 10,
                  "right": 10,
                  "top": 10,
                },
                "legend": Object {
                  "labelOptions": Object {
                    "maxLines": 0,
                  },
                },
                "markSizeRatio": undefined,
              },
              Object {},
            ]
          }
        />
        <XYCurrentTime
          enabled={false}
          isDarkMode={false}
        />
        <Component
          gridLine={
            Object {
              "strokeWidth": 1,
              "visible": true,
            }
          }
          hide={false}
          id="x"
          position="bottom"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": 0,
                "visible": true,
              },
            }
          }
          tickFormat={[Function]}
          timeAxisLayerCount={0}
          title="c"
        />
        <Component
          domain={
            Object {
              "fit": false,
              "includeDataFromIds": Array [],
              "max": NaN,
              "min": NaN,
              "padding": undefined,
            }
          }
          gridLine={
            Object {
              "visible": false,
            }
          }
          groupId="left"
          id="left"
          key="left"
          position="left"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": -90,
                "visible": false,
              },
            }
          }
          tickFormat={[Function]}
          title="a"
        />
        <XyEndzones
          darkMode={false}
          histogramMode={false}
        />
        <DataLayers
          chartHasMoreThanOneBarSeries={false}
          defaultXScaleType="ordinal"
          fieldFormats={
            Object {
              "first": Object {
                "splitColumnAccessors": Object {},
                "splitRowAccessors": Object {},
                "splitSeriesAccessors": Object {
                  "d": Object {
                    "format": Object {
                      "id": "string",
                    },
                    "formatter": Object {
                      "convert": [MockFunction] {
                        "calls": Array [
                          Array [
                            1652034840000,
                          ],
                          Array [
                            1652122440000,
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": 1652034840000,
                          },
                          Object {
                            "type": "return",
                            "value": 1652122440000,
                          },
                        ],
                      },
                    },
                  },
                },
                "xAccessors": Object {
                  "c": Object {
                    "id": "string",
                  },
                },
                "yAccessors": Object {
                  "a": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
              },
            }
          }
          formatFactory={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              ],
            }
          }
          formattedDatatables={
            Object {
              "first": Object {
                "formattedColumns": Object {
                  "c": true,
                },
                "invertedRawValueMap": Map {
                  "a" => Map {},
                  "b" => Map {},
                  "c" => Map {
                    1652034840000 => 1652034840000,
                    1652122440000 => 1652122440000,
                  },
                  "d" => Map {},
                },
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
              },
            }
          }
          isDarkMode={false}
          layers={
            Array [
              Object {
                "accessors": Array [
                  "a",
                  "b",
                ],
                "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
                "isHistogram": false,
                "isHorizontal": false,
                "isPercentage": false,
                "isStacked": true,
                "layerId": "first",
                "layerType": "data",
                "palette": Object {
                  "name": "mock",
                  "params": Object {},
                  "type": "palette",
                },
                "seriesType": "area",
                "showLines": true,
                "splitAccessors": Array [
                  "d",
                ],
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
                "type": "dataLayer",
                "xAccessor": "c",
                "xScaleType": "ordinal",
              },
            ]
          }
          minBarHeight={1}
          paletteService={
            Object {
              "get": [MockFunction],
              "getAll": [MockFunction],
            }
          }
          palettes={
            KbnPalettes {
              "_aliasMappings": Map {
                "default" => "eui_amsterdam",
                "eui_amsterdam_color_blind" => "eui_amsterdam",
                "kibana_palette" => "kibana_v7_legacy",
                "complimentary" => "complementary",
                "positive" => "green",
                "negative" => "red",
              },
              "_defaultPalette": KbnColorFnPalette {
                "_colorFn": [Function],
                "_defaultNumberOfColors": 30,
                "aliases": Array [
                  "default",
                  "eui_amsterdam_color_blind",
                ],
                "colorCount": 10,
                "colors": [Function],
                "getColor": [Function],
                "id": "eui_amsterdam",
                "legacy": false,
                "name": "Kibana 7.0",
                "standalone": false,
                "type": "categorical",
              },
              "_palettes": Map {
                "eui_amsterdam" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [
                    "default",
                    "eui_amsterdam_color_blind",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "eui_amsterdam",
                  "legacy": false,
                  "name": "Kibana 7.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "kibana_v7_legacy" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#00a69b",
                    "#57c17b",
                    "#6f87d8",
                    "#663db8",
                    "#bc52bc",
                    "#9e3533",
                    "#daa05d",
                    "#bfaf40",
                    "#4050bf",
                    "#bf5040",
                    "#40afbf",
                    "#70bf40",
                    "#8f40bf",
                    "#bf40a7",
                    "#40bf58",
                    "#bf9740",
                    "#4068bf",
                    "#bf4048",
                    "#40bfb7",
                    "#87bf40",
                  ],
                  "aliases": Array [
                    "kibana_palette",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "kibana_v7_legacy",
                  "legacy": false,
                  "name": "Kibana 4.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "behind_text" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "behind_text",
                  "legacy": false,
                  "name": "Kibana 7.0 (behind text)",
                  "standalone": true,
                  "type": "categorical",
                },
                "neutral" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#f2f4fb",
                    "#d4d9e5",
                    "#98a2b3",
                    "#696f7d",
                    "#353642",
                  ],
                  "aliases": Array [],
                  "colorCount": 5,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "neutral",
                  "legacy": false,
                  "name": "Neutral",
                  "standalone": true,
                  "type": "categorical",
                },
                "complementary" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "complimentary",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "complementary",
                  "legacy": false,
                  "name": "Complementary",
                  "standalone": false,
                  "type": "gradient",
                },
                "cool" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "cool",
                  "legacy": false,
                  "name": "Cool",
                  "standalone": false,
                  "type": "gradient",
                },
                "gray" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "gray",
                  "legacy": false,
                  "name": "Gray",
                  "standalone": false,
                  "type": "gradient",
                },
                "green" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "positive",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "green",
                  "legacy": false,
                  "name": "Positive",
                  "standalone": false,
                  "type": "gradient",
                },
                "red" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "negative",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "red",
                  "legacy": false,
                  "name": "Negative",
                  "standalone": false,
                  "type": "gradient",
                },
                "status" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "status",
                  "legacy": false,
                  "name": "Status",
                  "standalone": false,
                  "type": "gradient",
                },
                "temperature" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "temperature",
                  "legacy": false,
                  "name": "Temperature",
                  "standalone": false,
                  "type": "gradient",
                },
                "warm" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "warm",
                  "legacy": false,
                  "name": "Warm",
                  "standalone": false,
                  "type": "gradient",
                },
                "elastic_brand_2023" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#20377d",
                    "#7de2d1",
                    "#ff957d",
                    "#f04e98",
                    "#0077cc",
                    "#fec514",
                  ],
                  "aliases": Array [],
                  "colorCount": 6,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "elastic_brand_2023",
                  "legacy": false,
                  "name": "Elastic classic",
                  "standalone": false,
                  "type": "categorical",
                },
                "compare_to" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "compare_to",
                  "legacy": false,
                  "name": "Trend",
                  "standalone": true,
                  "type": "gradient",
                },
              },
              "get": [Function],
              "getAll": [Function],
              "query": [Function],
            }
          }
          shouldShowValueLabels={true}
          syncColors={false}
          timeZone="UTC"
          titles={
            Object {
              "first": Object {
                "markSizeTitles": Object {},
                "splitColumnTitles": Object {},
                "splitRowTitles": Object {},
                "splitSeriesTitles": Object {
                  "d": "ColD",
                },
                "xTitles": Object {
                  "c": "c",
                },
                "yTitles": Object {
                  "a": "a",
                  "b": "b",
                },
              },
            }
          }
          valueLabels="hide"
          xAxisConfiguration={
            Object {
              "groupId": "bottom",
              "labelsOrientation": 0,
              "position": "bottom",
              "series": Array [],
              "showGridLines": true,
              "showLabels": true,
              "showTitle": true,
              "title": "",
              "type": "xAxisConfig",
            }
          }
          yAxesConfiguration={
            Array [
              Object {
                "extent": Object {
                  "mode": "full",
                  "type": "axisExtentConfig",
                },
                "formatter": Object {
                  "convert": [MockFunction] {
                    "calls": Array [
                      Array [
                        1652034840000,
                      ],
                      Array [
                        1652122440000,
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": 1652034840000,
                      },
                      Object {
                        "type": "return",
                        "value": 1652122440000,
                      },
                    ],
                  },
                },
                "groupId": "left",
                "labelsOrientation": -90,
                "position": "left",
                "series": Array [
                  Object {
                    "accessor": "a",
                    "layer": "first",
                  },
                  Object {
                    "accessor": "b",
                    "layer": "first",
                  },
                ],
                "showGridLines": false,
                "showLabels": false,
                "showTitle": true,
                "title": "",
                "type": "yAxisConfig",
              },
            ]
          }
        />
      </Chart>
    </ContextProvider>
  </div>
</Fragment>
`;

exports[`XYChart component it renders stacked bar 1`] = `
<Fragment>
  <GlobalXYChartStyles />
  <div
    css="unknown styles"
  >
    <ContextProvider
      value={
        Object {
          "dataLayers": Array [
            Object {
              "accessors": Array [
                "a",
                "b",
              ],
              "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
              "isHistogram": false,
              "isHorizontal": false,
              "isPercentage": false,
              "isStacked": true,
              "layerId": "first",
              "layerType": "data",
              "palette": Object {
                "name": "mock",
                "params": Object {},
                "type": "palette",
              },
              "seriesType": "bar",
              "showLines": true,
              "splitAccessors": Array [
                "d",
              ],
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
              "type": "dataLayer",
              "xAccessor": "c",
              "xScaleType": "ordinal",
            },
          ],
          "fieldFormats": Object {
            "first": Object {
              "splitColumnAccessors": Object {},
              "splitRowAccessors": Object {},
              "splitSeriesAccessors": Object {
                "d": Object {
                  "format": Object {
                    "id": "string",
                  },
                  "formatter": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              },
              "xAccessors": Object {
                "c": Object {
                  "id": "string",
                },
              },
              "yAccessors": Object {
                "a": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "0,0.000",
                  },
                },
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
            },
          },
          "formattedDatatables": Object {
            "first": Object {
              "formattedColumns": Object {
                "c": true,
              },
              "invertedRawValueMap": Map {
                "a" => Map {},
                "b" => Map {},
                "c" => Map {
                  1652034840000 => 1652034840000,
                  1652122440000 => 1652122440000,
                },
                "d" => Map {},
              },
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
            },
          },
          "legendPosition": "top",
          "setColor": [Function],
          "singleTable": undefined,
          "titles": Object {
            "first": Object {
              "markSizeTitles": Object {},
              "splitColumnTitles": Object {},
              "splitRowTitles": Object {},
              "splitSeriesTitles": Object {
                "d": "ColD",
              },
              "xTitles": Object {
                "c": "c",
              },
              "yTitles": Object {
                "a": "a",
                "b": "b",
              },
            },
          },
          "uiState": undefined,
        }
      }
    >
      <Chart
        renderer="canvas"
      >
        <Tooltip
          actions={
            Array [
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
            ]
          }
          headerFormatter={[Function]}
          type="vertical"
        />
        <Settings
          allowBrushingLastHistogramBin={false}
          ariaUseDefaultSummary={true}
          baseTheme={
            Object {
              "arcSeriesStyle": Object {
                "arc": Object {
                  "opacity": 1,
                  "stroke": "black",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "areaSeriesStyle": Object {
                "area": Object {
                  "opacity": 0.3,
                  "visible": true,
                },
                "fit": Object {
                  "area": Object {
                    "fill": "__use__series__color__",
                    "opacity": 0.15,
                    "visible": true,
                  },
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "never",
                },
                "pointVisibilityMinDistance": 20,
              },
              "axes": Object {
                "axisLine": Object {
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "axisPanelTitle": Object {
                  "fill": "#333",
                  "fontFamily": "sans-serif",
                  "fontSize": 10,
                  "padding": Object {
                    "inner": 8,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "axisTitle": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "padding": Object {
                    "inner": 10,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "gridLine": Object {
                  "horizontal": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                  "vertical": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                },
                "tickLabel": Object {
                  "alignment": Object {
                    "horizontal": "near",
                    "vertical": "near",
                  },
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offset": Object {
                    "reference": "local",
                    "x": 0,
                    "y": 0,
                  },
                  "padding": Object {
                    "inner": 10,
                    "outer": 8,
                  },
                  "rotation": 0,
                  "visible": true,
                },
                "tickLine": Object {
                  "padding": 10,
                  "size": 10,
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "background": Object {
                "color": "#FFF",
                "fallbackColor": "#FFF",
              },
              "barSeriesStyle": Object {
                "displayValue": Object {
                  "alignment": Object {
                    "horizontal": "center",
                    "vertical": "middle",
                  },
                  "fill": Object {
                    "textBorder": 0,
                  },
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offsetX": 0,
                  "offsetY": 0,
                  "padding": 0,
                },
                "rect": Object {
                  "opacity": 1,
                },
                "rectBorder": Object {
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "bubbleSeriesStyle": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 2,
                  "strokeWidth": 0,
                  "visible": "always",
                },
              },
              "bulletGraph": Object {
                "angularTickLabelPadding": 10,
                "barBackground": "#343741",
                "border": "#EDF0F5",
                "colorBands": Array [
                  "#AA87D1",
                  "#D9C6EF",
                ],
                "fallbackBandColor": "#98A2B3",
                "minHeight": 64,
                "nonFiniteText": "N/A",
                "textColor": "#343741",
              },
              "chartMargins": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "chartPaddings": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "colors": Object {
                "defaultVizColor": "#6092C0",
                "vizColors": Array [
                  "#54B399",
                  "#6092C0",
                  "#9170B8",
                  "#CA8EAE",
                  "#D36086",
                  "#E7664C",
                  "#AA6556",
                  "#DA8B45",
                  "#B9A888",
                  "#D6BF57",
                ],
              },
              "crosshair": Object {
                "band": Object {
                  "fill": "#F1F4FA",
                  "visible": true,
                },
                "crossLine": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "line": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "flamegraph": Object {
                "minimapFocusBorder": "magenta",
                "navigation": Object {
                  "buttonBackgroundColor": "#CCE4F5",
                  "buttonDisabledBackgroundColor": "#D3DAE626",
                  "buttonDisabledTextColor": "#A2ABBA",
                  "buttonTextColor": "#0061A6",
                  "textColor": "#343741",
                },
                "scrollbarThumb": "#343741",
                "scrollbarTrack": "#D3DAE6",
              },
              "goal": Object {
                "arcBoxSamplePitch": 0.08726646259971647,
                "barThicknessMinSizeRatio": 0.1,
                "baselineArcThickness": 32,
                "baselineBarThickness": 32,
                "capturePad": 16,
                "majorCenterLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "majorLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "marginRatio": 0.05,
                "maxBulletSize": 500,
                "maxCentralFontSize": 38,
                "maxCircularSize": 360,
                "maxFontSize": 64,
                "maxLabelFontSize": 32,
                "maxTickFontSize": 24,
                "minFontSize": 8,
                "minorCenterLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "minorLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "progressLine": Object {
                  "stroke": "#343741",
                },
                "targetLine": Object {
                  "stroke": "#343741",
                },
                "tickLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "tickLine": Object {
                  "stroke": "#98A2B3",
                },
              },
              "heatmap": Object {
                "brushArea": Object {
                  "stroke": "#69707D",
                  "strokeWidth": 2,
                  "visible": true,
                },
                "brushMask": Object {
                  "fill": "#73737380",
                  "visible": true,
                },
                "brushTool": Object {
                  "fill": "gray",
                  "visible": false,
                },
                "cell": Object {
                  "align": "center",
                  "border": Object {
                    "stroke": "gray",
                    "strokeWidth": 0,
                  },
                  "label": Object {
                    "fontFamily": "Sans-Serif",
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": "normal",
                    "maxFontSize": 12,
                    "maxWidth": "fill",
                    "minFontSize": 8,
                    "textColor": "black",
                    "useGlobalMinFontSize": true,
                    "visible": true,
                  },
                  "maxHeight": "fill",
                  "maxWidth": "fill",
                },
                "grid": Object {
                  "stroke": Object {
                    "color": "gray",
                    "width": 1,
                  },
                },
                "xAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "rotation": 0,
                  "textColor": "black",
                  "visible": true,
                },
                "yAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "textColor": "black",
                  "visible": true,
                  "width": "auto",
                },
              },
              "highlighter": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 0.5,
                  "radius": 5,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                },
              },
              "legend": Object {
                "horizontalHeight": 64,
                "labelOptions": Object {
                  "maxLines": 1,
                },
                "margin": 0,
                "spacingBuffer": 10,
                "verticalWidth": 200,
              },
              "lineAnnotation": Object {
                "line": Object {
                  "opacity": 1,
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                },
              },
              "lineSeriesStyle": Object {
                "fit": Object {
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 1,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "pointVisibilityMinDistance": 40,
              },
              "metric": Object {
                "barBackground": "#EDF0F5",
                "border": "#EDF0F5",
                "emptyBackground": "transparent",
                "iconAlign": "right",
                "minHeight": 64,
                "minValueFontSize": 12,
                "nonFiniteText": "N/A",
                "textDarkColor": "#343741",
                "textLightColor": "#E0E5EE",
                "titlesTextAlign": "left",
                "valueFontSize": "default",
                "valuesTextAlign": "right",
              },
              "partition": Object {
                "circlePadding": 4,
                "emptySizeRatio": 0,
                "fillLabel": Object {
                  "clipText": false,
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "padding": 2,
                  "textColor": "__use__adaptive__color__",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 700,
                  },
                },
                "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                "horizontalTextAngleThreshold": 0.5235987755982988,
                "horizontalTextEnforcer": 1,
                "idealFontSizeJump": 1.05,
                "linkLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 11,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "gap": 10,
                  "horizontalStemLength": 10,
                  "lineWidth": 1,
                  "maxCount": 5,
                  "maxTextLength": 100,
                  "maximumSection": 10,
                  "minimumStemLength": 0,
                  "padding": 0,
                  "radiusPadding": 10,
                  "spacing": 2,
                  "stemAngle": 0.7853981633974483,
                  "textColor": "#343741",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 400,
                  },
                },
                "maxFontSize": 16,
                "maximizeFontSize": false,
                "minFontSize": 8,
                "outerSizeRatio": 1,
                "radialPadding": 0.017453292519943295,
                "sectorLineStroke": "#FFF",
                "sectorLineWidth": 1.5,
              },
              "rectAnnotation": Object {
                "fill": "#69707D",
                "opacity": 0.25,
                "stroke": "#69707D",
                "strokeWidth": 0,
              },
              "scales": Object {
                "barsPadding": 0.25,
                "histogramPadding": 0.05,
              },
              "sharedStyle": Object {
                "default": Object {
                  "opacity": 1,
                },
                "highlighted": Object {
                  "opacity": 1,
                },
                "unhighlighted": Object {
                  "opacity": 0.25,
                },
              },
              "tooltip": Object {
                "defaultDotColor": "black",
                "maxTableHeight": 120,
                "maxWidth": 500,
              },
            }
          }
          debugState={false}
          externalPointerEvents={
            Object {
              "tooltip": Object {
                "placement": "right",
                "visible": false,
              },
            }
          }
          legendAction={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": [Function],
            }
          }
          legendPosition="top"
          legendSize={130}
          legendValues={Array []}
          locale="en"
          noResults={
            <EmptyPlaceholder
              css="unknown styles"
              icon={[Function]}
              renderComplete={[Function]}
            />
          }
          onBrushEnd={[Function]}
          onElementClick={[Function]}
          onPointerUpdate={[Function]}
          onRenderChange={[Function]}
          pointerUpdateDebounce={0}
          rotation={0}
          showLegend={false}
          theme={
            Array [
              Object {
                "background": Object {
                  "color": undefined,
                },
                "barSeriesStyle": Object {},
                "chartMargins": Object {
                  "bottom": 10,
                  "left": 10,
                  "right": 10,
                  "top": 10,
                },
                "legend": Object {
                  "labelOptions": Object {
                    "maxLines": 0,
                  },
                },
                "markSizeRatio": undefined,
              },
              Object {},
            ]
          }
        />
        <XYCurrentTime
          enabled={false}
          isDarkMode={false}
        />
        <Component
          gridLine={
            Object {
              "strokeWidth": 1,
              "visible": true,
            }
          }
          hide={false}
          id="x"
          position="bottom"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": 0,
                "visible": true,
              },
            }
          }
          tickFormat={[Function]}
          timeAxisLayerCount={0}
          title="c"
        />
        <Component
          domain={
            Object {
              "fit": false,
              "includeDataFromIds": Array [],
              "max": NaN,
              "min": NaN,
              "padding": undefined,
            }
          }
          gridLine={
            Object {
              "visible": false,
            }
          }
          groupId="left"
          id="left"
          key="left"
          position="left"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": -90,
                "visible": false,
              },
            }
          }
          tickFormat={[Function]}
          title="a"
        />
        <XyEndzones
          darkMode={false}
          histogramMode={false}
        />
        <DataLayers
          chartHasMoreThanOneBarSeries={true}
          defaultXScaleType="ordinal"
          fieldFormats={
            Object {
              "first": Object {
                "splitColumnAccessors": Object {},
                "splitRowAccessors": Object {},
                "splitSeriesAccessors": Object {
                  "d": Object {
                    "format": Object {
                      "id": "string",
                    },
                    "formatter": Object {
                      "convert": [MockFunction] {
                        "calls": Array [
                          Array [
                            1652034840000,
                          ],
                          Array [
                            1652122440000,
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": 1652034840000,
                          },
                          Object {
                            "type": "return",
                            "value": 1652122440000,
                          },
                        ],
                      },
                    },
                  },
                },
                "xAccessors": Object {
                  "c": Object {
                    "id": "string",
                  },
                },
                "yAccessors": Object {
                  "a": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
              },
            }
          }
          formatFactory={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              ],
            }
          }
          formattedDatatables={
            Object {
              "first": Object {
                "formattedColumns": Object {
                  "c": true,
                },
                "invertedRawValueMap": Map {
                  "a" => Map {},
                  "b" => Map {},
                  "c" => Map {
                    1652034840000 => 1652034840000,
                    1652122440000 => 1652122440000,
                  },
                  "d" => Map {},
                },
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
              },
            }
          }
          isDarkMode={false}
          layers={
            Array [
              Object {
                "accessors": Array [
                  "a",
                  "b",
                ],
                "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
                "isHistogram": false,
                "isHorizontal": false,
                "isPercentage": false,
                "isStacked": true,
                "layerId": "first",
                "layerType": "data",
                "palette": Object {
                  "name": "mock",
                  "params": Object {},
                  "type": "palette",
                },
                "seriesType": "bar",
                "showLines": true,
                "splitAccessors": Array [
                  "d",
                ],
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
                "type": "dataLayer",
                "xAccessor": "c",
                "xScaleType": "ordinal",
              },
            ]
          }
          minBarHeight={1}
          paletteService={
            Object {
              "get": [MockFunction],
              "getAll": [MockFunction],
            }
          }
          palettes={
            KbnPalettes {
              "_aliasMappings": Map {
                "default" => "eui_amsterdam",
                "eui_amsterdam_color_blind" => "eui_amsterdam",
                "kibana_palette" => "kibana_v7_legacy",
                "complimentary" => "complementary",
                "positive" => "green",
                "negative" => "red",
              },
              "_defaultPalette": KbnColorFnPalette {
                "_colorFn": [Function],
                "_defaultNumberOfColors": 30,
                "aliases": Array [
                  "default",
                  "eui_amsterdam_color_blind",
                ],
                "colorCount": 10,
                "colors": [Function],
                "getColor": [Function],
                "id": "eui_amsterdam",
                "legacy": false,
                "name": "Kibana 7.0",
                "standalone": false,
                "type": "categorical",
              },
              "_palettes": Map {
                "eui_amsterdam" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [
                    "default",
                    "eui_amsterdam_color_blind",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "eui_amsterdam",
                  "legacy": false,
                  "name": "Kibana 7.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "kibana_v7_legacy" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#00a69b",
                    "#57c17b",
                    "#6f87d8",
                    "#663db8",
                    "#bc52bc",
                    "#9e3533",
                    "#daa05d",
                    "#bfaf40",
                    "#4050bf",
                    "#bf5040",
                    "#40afbf",
                    "#70bf40",
                    "#8f40bf",
                    "#bf40a7",
                    "#40bf58",
                    "#bf9740",
                    "#4068bf",
                    "#bf4048",
                    "#40bfb7",
                    "#87bf40",
                  ],
                  "aliases": Array [
                    "kibana_palette",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "kibana_v7_legacy",
                  "legacy": false,
                  "name": "Kibana 4.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "behind_text" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "behind_text",
                  "legacy": false,
                  "name": "Kibana 7.0 (behind text)",
                  "standalone": true,
                  "type": "categorical",
                },
                "neutral" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#f2f4fb",
                    "#d4d9e5",
                    "#98a2b3",
                    "#696f7d",
                    "#353642",
                  ],
                  "aliases": Array [],
                  "colorCount": 5,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "neutral",
                  "legacy": false,
                  "name": "Neutral",
                  "standalone": true,
                  "type": "categorical",
                },
                "complementary" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "complimentary",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "complementary",
                  "legacy": false,
                  "name": "Complementary",
                  "standalone": false,
                  "type": "gradient",
                },
                "cool" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "cool",
                  "legacy": false,
                  "name": "Cool",
                  "standalone": false,
                  "type": "gradient",
                },
                "gray" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "gray",
                  "legacy": false,
                  "name": "Gray",
                  "standalone": false,
                  "type": "gradient",
                },
                "green" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "positive",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "green",
                  "legacy": false,
                  "name": "Positive",
                  "standalone": false,
                  "type": "gradient",
                },
                "red" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "negative",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "red",
                  "legacy": false,
                  "name": "Negative",
                  "standalone": false,
                  "type": "gradient",
                },
                "status" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "status",
                  "legacy": false,
                  "name": "Status",
                  "standalone": false,
                  "type": "gradient",
                },
                "temperature" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "temperature",
                  "legacy": false,
                  "name": "Temperature",
                  "standalone": false,
                  "type": "gradient",
                },
                "warm" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "warm",
                  "legacy": false,
                  "name": "Warm",
                  "standalone": false,
                  "type": "gradient",
                },
                "elastic_brand_2023" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#20377d",
                    "#7de2d1",
                    "#ff957d",
                    "#f04e98",
                    "#0077cc",
                    "#fec514",
                  ],
                  "aliases": Array [],
                  "colorCount": 6,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "elastic_brand_2023",
                  "legacy": false,
                  "name": "Elastic classic",
                  "standalone": false,
                  "type": "categorical",
                },
                "compare_to" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "compare_to",
                  "legacy": false,
                  "name": "Trend",
                  "standalone": true,
                  "type": "gradient",
                },
              },
              "get": [Function],
              "getAll": [Function],
              "query": [Function],
            }
          }
          shouldShowValueLabels={true}
          syncColors={false}
          timeZone="UTC"
          titles={
            Object {
              "first": Object {
                "markSizeTitles": Object {},
                "splitColumnTitles": Object {},
                "splitRowTitles": Object {},
                "splitSeriesTitles": Object {
                  "d": "ColD",
                },
                "xTitles": Object {
                  "c": "c",
                },
                "yTitles": Object {
                  "a": "a",
                  "b": "b",
                },
              },
            }
          }
          valueLabels="hide"
          xAxisConfiguration={
            Object {
              "groupId": "bottom",
              "labelsOrientation": 0,
              "position": "bottom",
              "series": Array [],
              "showGridLines": true,
              "showLabels": true,
              "showTitle": true,
              "title": "",
              "type": "xAxisConfig",
            }
          }
          yAxesConfiguration={
            Array [
              Object {
                "extent": Object {
                  "mode": "full",
                  "type": "axisExtentConfig",
                },
                "formatter": Object {
                  "convert": [MockFunction] {
                    "calls": Array [
                      Array [
                        1652034840000,
                      ],
                      Array [
                        1652122440000,
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": 1652034840000,
                      },
                      Object {
                        "type": "return",
                        "value": 1652122440000,
                      },
                    ],
                  },
                },
                "groupId": "left",
                "labelsOrientation": -90,
                "position": "left",
                "series": Array [
                  Object {
                    "accessor": "a",
                    "layer": "first",
                  },
                  Object {
                    "accessor": "b",
                    "layer": "first",
                  },
                ],
                "showGridLines": false,
                "showLabels": false,
                "showTitle": true,
                "title": "",
                "type": "yAxisConfig",
              },
            ]
          }
        />
      </Chart>
    </ContextProvider>
  </div>
</Fragment>
`;

exports[`XYChart component it renders stacked horizontal bar 1`] = `
<Fragment>
  <GlobalXYChartStyles />
  <div
    css="unknown styles"
  >
    <ContextProvider
      value={
        Object {
          "dataLayers": Array [
            Object {
              "accessors": Array [
                "a",
                "b",
              ],
              "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
              "isHistogram": false,
              "isHorizontal": true,
              "isPercentage": false,
              "isStacked": true,
              "layerId": "first",
              "layerType": "data",
              "palette": Object {
                "name": "mock",
                "params": Object {},
                "type": "palette",
              },
              "seriesType": "bar",
              "showLines": true,
              "splitAccessors": Array [
                "d",
              ],
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
              "type": "dataLayer",
              "xAccessor": "c",
              "xScaleType": "ordinal",
            },
          ],
          "fieldFormats": Object {
            "first": Object {
              "splitColumnAccessors": Object {},
              "splitRowAccessors": Object {},
              "splitSeriesAccessors": Object {
                "d": Object {
                  "format": Object {
                    "id": "string",
                  },
                  "formatter": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              },
              "xAccessors": Object {
                "c": Object {
                  "id": "string",
                },
              },
              "yAccessors": Object {
                "a": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "0,0.000",
                  },
                },
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
            },
          },
          "formattedDatatables": Object {
            "first": Object {
              "formattedColumns": Object {
                "c": true,
              },
              "invertedRawValueMap": Map {
                "a" => Map {},
                "b" => Map {},
                "c" => Map {
                  1652034840000 => 1652034840000,
                  1652122440000 => 1652122440000,
                },
                "d" => Map {},
              },
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
            },
          },
          "legendPosition": "top",
          "setColor": [Function],
          "singleTable": undefined,
          "titles": Object {
            "first": Object {
              "markSizeTitles": Object {},
              "splitColumnTitles": Object {},
              "splitRowTitles": Object {},
              "splitSeriesTitles": Object {
                "d": "ColD",
              },
              "xTitles": Object {
                "c": "c",
              },
              "yTitles": Object {
                "a": "a",
                "b": "b",
              },
            },
          },
          "uiState": undefined,
        }
      }
    >
      <Chart
        renderer="canvas"
      >
        <Tooltip
          actions={
            Array [
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
            ]
          }
          headerFormatter={[Function]}
          type="vertical"
        />
        <Settings
          allowBrushingLastHistogramBin={false}
          ariaUseDefaultSummary={true}
          baseTheme={
            Object {
              "arcSeriesStyle": Object {
                "arc": Object {
                  "opacity": 1,
                  "stroke": "black",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "areaSeriesStyle": Object {
                "area": Object {
                  "opacity": 0.3,
                  "visible": true,
                },
                "fit": Object {
                  "area": Object {
                    "fill": "__use__series__color__",
                    "opacity": 0.15,
                    "visible": true,
                  },
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "never",
                },
                "pointVisibilityMinDistance": 20,
              },
              "axes": Object {
                "axisLine": Object {
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "axisPanelTitle": Object {
                  "fill": "#333",
                  "fontFamily": "sans-serif",
                  "fontSize": 10,
                  "padding": Object {
                    "inner": 8,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "axisTitle": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "padding": Object {
                    "inner": 10,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "gridLine": Object {
                  "horizontal": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                  "vertical": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                },
                "tickLabel": Object {
                  "alignment": Object {
                    "horizontal": "near",
                    "vertical": "near",
                  },
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offset": Object {
                    "reference": "local",
                    "x": 0,
                    "y": 0,
                  },
                  "padding": Object {
                    "inner": 10,
                    "outer": 8,
                  },
                  "rotation": 0,
                  "visible": true,
                },
                "tickLine": Object {
                  "padding": 10,
                  "size": 10,
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "background": Object {
                "color": "#FFF",
                "fallbackColor": "#FFF",
              },
              "barSeriesStyle": Object {
                "displayValue": Object {
                  "alignment": Object {
                    "horizontal": "center",
                    "vertical": "middle",
                  },
                  "fill": Object {
                    "textBorder": 0,
                  },
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offsetX": 0,
                  "offsetY": 0,
                  "padding": 0,
                },
                "rect": Object {
                  "opacity": 1,
                },
                "rectBorder": Object {
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "bubbleSeriesStyle": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 2,
                  "strokeWidth": 0,
                  "visible": "always",
                },
              },
              "bulletGraph": Object {
                "angularTickLabelPadding": 10,
                "barBackground": "#343741",
                "border": "#EDF0F5",
                "colorBands": Array [
                  "#AA87D1",
                  "#D9C6EF",
                ],
                "fallbackBandColor": "#98A2B3",
                "minHeight": 64,
                "nonFiniteText": "N/A",
                "textColor": "#343741",
              },
              "chartMargins": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "chartPaddings": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "colors": Object {
                "defaultVizColor": "#6092C0",
                "vizColors": Array [
                  "#54B399",
                  "#6092C0",
                  "#9170B8",
                  "#CA8EAE",
                  "#D36086",
                  "#E7664C",
                  "#AA6556",
                  "#DA8B45",
                  "#B9A888",
                  "#D6BF57",
                ],
              },
              "crosshair": Object {
                "band": Object {
                  "fill": "#F1F4FA",
                  "visible": true,
                },
                "crossLine": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "line": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "flamegraph": Object {
                "minimapFocusBorder": "magenta",
                "navigation": Object {
                  "buttonBackgroundColor": "#CCE4F5",
                  "buttonDisabledBackgroundColor": "#D3DAE626",
                  "buttonDisabledTextColor": "#A2ABBA",
                  "buttonTextColor": "#0061A6",
                  "textColor": "#343741",
                },
                "scrollbarThumb": "#343741",
                "scrollbarTrack": "#D3DAE6",
              },
              "goal": Object {
                "arcBoxSamplePitch": 0.08726646259971647,
                "barThicknessMinSizeRatio": 0.1,
                "baselineArcThickness": 32,
                "baselineBarThickness": 32,
                "capturePad": 16,
                "majorCenterLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "majorLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "marginRatio": 0.05,
                "maxBulletSize": 500,
                "maxCentralFontSize": 38,
                "maxCircularSize": 360,
                "maxFontSize": 64,
                "maxLabelFontSize": 32,
                "maxTickFontSize": 24,
                "minFontSize": 8,
                "minorCenterLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "minorLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "progressLine": Object {
                  "stroke": "#343741",
                },
                "targetLine": Object {
                  "stroke": "#343741",
                },
                "tickLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "tickLine": Object {
                  "stroke": "#98A2B3",
                },
              },
              "heatmap": Object {
                "brushArea": Object {
                  "stroke": "#69707D",
                  "strokeWidth": 2,
                  "visible": true,
                },
                "brushMask": Object {
                  "fill": "#73737380",
                  "visible": true,
                },
                "brushTool": Object {
                  "fill": "gray",
                  "visible": false,
                },
                "cell": Object {
                  "align": "center",
                  "border": Object {
                    "stroke": "gray",
                    "strokeWidth": 0,
                  },
                  "label": Object {
                    "fontFamily": "Sans-Serif",
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": "normal",
                    "maxFontSize": 12,
                    "maxWidth": "fill",
                    "minFontSize": 8,
                    "textColor": "black",
                    "useGlobalMinFontSize": true,
                    "visible": true,
                  },
                  "maxHeight": "fill",
                  "maxWidth": "fill",
                },
                "grid": Object {
                  "stroke": Object {
                    "color": "gray",
                    "width": 1,
                  },
                },
                "xAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "rotation": 0,
                  "textColor": "black",
                  "visible": true,
                },
                "yAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "textColor": "black",
                  "visible": true,
                  "width": "auto",
                },
              },
              "highlighter": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 0.5,
                  "radius": 5,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                },
              },
              "legend": Object {
                "horizontalHeight": 64,
                "labelOptions": Object {
                  "maxLines": 1,
                },
                "margin": 0,
                "spacingBuffer": 10,
                "verticalWidth": 200,
              },
              "lineAnnotation": Object {
                "line": Object {
                  "opacity": 1,
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                },
              },
              "lineSeriesStyle": Object {
                "fit": Object {
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 1,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "pointVisibilityMinDistance": 40,
              },
              "metric": Object {
                "barBackground": "#EDF0F5",
                "border": "#EDF0F5",
                "emptyBackground": "transparent",
                "iconAlign": "right",
                "minHeight": 64,
                "minValueFontSize": 12,
                "nonFiniteText": "N/A",
                "textDarkColor": "#343741",
                "textLightColor": "#E0E5EE",
                "titlesTextAlign": "left",
                "valueFontSize": "default",
                "valuesTextAlign": "right",
              },
              "partition": Object {
                "circlePadding": 4,
                "emptySizeRatio": 0,
                "fillLabel": Object {
                  "clipText": false,
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "padding": 2,
                  "textColor": "__use__adaptive__color__",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 700,
                  },
                },
                "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                "horizontalTextAngleThreshold": 0.5235987755982988,
                "horizontalTextEnforcer": 1,
                "idealFontSizeJump": 1.05,
                "linkLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 11,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "gap": 10,
                  "horizontalStemLength": 10,
                  "lineWidth": 1,
                  "maxCount": 5,
                  "maxTextLength": 100,
                  "maximumSection": 10,
                  "minimumStemLength": 0,
                  "padding": 0,
                  "radiusPadding": 10,
                  "spacing": 2,
                  "stemAngle": 0.7853981633974483,
                  "textColor": "#343741",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 400,
                  },
                },
                "maxFontSize": 16,
                "maximizeFontSize": false,
                "minFontSize": 8,
                "outerSizeRatio": 1,
                "radialPadding": 0.017453292519943295,
                "sectorLineStroke": "#FFF",
                "sectorLineWidth": 1.5,
              },
              "rectAnnotation": Object {
                "fill": "#69707D",
                "opacity": 0.25,
                "stroke": "#69707D",
                "strokeWidth": 0,
              },
              "scales": Object {
                "barsPadding": 0.25,
                "histogramPadding": 0.05,
              },
              "sharedStyle": Object {
                "default": Object {
                  "opacity": 1,
                },
                "highlighted": Object {
                  "opacity": 1,
                },
                "unhighlighted": Object {
                  "opacity": 0.25,
                },
              },
              "tooltip": Object {
                "defaultDotColor": "black",
                "maxTableHeight": 120,
                "maxWidth": 500,
              },
            }
          }
          debugState={false}
          externalPointerEvents={
            Object {
              "tooltip": Object {
                "placement": "right",
                "visible": false,
              },
            }
          }
          legendAction={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": [Function],
            }
          }
          legendPosition="top"
          legendSize={130}
          legendValues={Array []}
          locale="en"
          noResults={
            <EmptyPlaceholder
              css="unknown styles"
              icon={[Function]}
              renderComplete={[Function]}
            />
          }
          onBrushEnd={[Function]}
          onElementClick={[Function]}
          onPointerUpdate={[Function]}
          onRenderChange={[Function]}
          pointerUpdateDebounce={0}
          rotation={90}
          showLegend={false}
          theme={
            Array [
              Object {
                "background": Object {
                  "color": undefined,
                },
                "barSeriesStyle": Object {},
                "chartMargins": Object {
                  "bottom": 10,
                  "left": 10,
                  "right": 10,
                  "top": 10,
                },
                "legend": Object {
                  "labelOptions": Object {
                    "maxLines": 0,
                  },
                },
                "markSizeRatio": undefined,
              },
              Object {},
            ]
          }
        />
        <XYCurrentTime
          enabled={false}
          isDarkMode={false}
        />
        <Component
          gridLine={
            Object {
              "strokeWidth": 1,
              "visible": true,
            }
          }
          hide={false}
          id="x"
          position="left"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": 0,
                "visible": true,
              },
            }
          }
          tickFormat={[Function]}
          timeAxisLayerCount={0}
          title="c"
        />
        <Component
          domain={
            Object {
              "fit": false,
              "includeDataFromIds": Array [],
              "max": NaN,
              "min": NaN,
              "padding": undefined,
            }
          }
          gridLine={
            Object {
              "visible": false,
            }
          }
          groupId="left"
          id="left"
          key="left"
          position="bottom"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": -90,
                "visible": false,
              },
            }
          }
          tickFormat={[Function]}
          title="a"
        />
        <XyEndzones
          darkMode={false}
          histogramMode={false}
        />
        <DataLayers
          chartHasMoreThanOneBarSeries={true}
          defaultXScaleType="ordinal"
          fieldFormats={
            Object {
              "first": Object {
                "splitColumnAccessors": Object {},
                "splitRowAccessors": Object {},
                "splitSeriesAccessors": Object {
                  "d": Object {
                    "format": Object {
                      "id": "string",
                    },
                    "formatter": Object {
                      "convert": [MockFunction] {
                        "calls": Array [
                          Array [
                            1652034840000,
                          ],
                          Array [
                            1652122440000,
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": 1652034840000,
                          },
                          Object {
                            "type": "return",
                            "value": 1652122440000,
                          },
                        ],
                      },
                    },
                  },
                },
                "xAccessors": Object {
                  "c": Object {
                    "id": "string",
                  },
                },
                "yAccessors": Object {
                  "a": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
              },
            }
          }
          formatFactory={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          1652034840000,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              ],
            }
          }
          formattedDatatables={
            Object {
              "first": Object {
                "formattedColumns": Object {
                  "c": true,
                },
                "invertedRawValueMap": Map {
                  "a" => Map {},
                  "b" => Map {},
                  "c" => Map {
                    1652034840000 => 1652034840000,
                    1652122440000 => 1652122440000,
                  },
                  "d" => Map {},
                },
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
              },
            }
          }
          isDarkMode={false}
          layers={
            Array [
              Object {
                "accessors": Array [
                  "a",
                  "b",
                ],
                "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
                "isHistogram": false,
                "isHorizontal": true,
                "isPercentage": false,
                "isStacked": true,
                "layerId": "first",
                "layerType": "data",
                "palette": Object {
                  "name": "mock",
                  "params": Object {},
                  "type": "palette",
                },
                "seriesType": "bar",
                "showLines": true,
                "splitAccessors": Array [
                  "d",
                ],
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
                "type": "dataLayer",
                "xAccessor": "c",
                "xScaleType": "ordinal",
              },
            ]
          }
          minBarHeight={1}
          paletteService={
            Object {
              "get": [MockFunction],
              "getAll": [MockFunction],
            }
          }
          palettes={
            KbnPalettes {
              "_aliasMappings": Map {
                "default" => "eui_amsterdam",
                "eui_amsterdam_color_blind" => "eui_amsterdam",
                "kibana_palette" => "kibana_v7_legacy",
                "complimentary" => "complementary",
                "positive" => "green",
                "negative" => "red",
              },
              "_defaultPalette": KbnColorFnPalette {
                "_colorFn": [Function],
                "_defaultNumberOfColors": 30,
                "aliases": Array [
                  "default",
                  "eui_amsterdam_color_blind",
                ],
                "colorCount": 10,
                "colors": [Function],
                "getColor": [Function],
                "id": "eui_amsterdam",
                "legacy": false,
                "name": "Kibana 7.0",
                "standalone": false,
                "type": "categorical",
              },
              "_palettes": Map {
                "eui_amsterdam" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [
                    "default",
                    "eui_amsterdam_color_blind",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "eui_amsterdam",
                  "legacy": false,
                  "name": "Kibana 7.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "kibana_v7_legacy" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#00a69b",
                    "#57c17b",
                    "#6f87d8",
                    "#663db8",
                    "#bc52bc",
                    "#9e3533",
                    "#daa05d",
                    "#bfaf40",
                    "#4050bf",
                    "#bf5040",
                    "#40afbf",
                    "#70bf40",
                    "#8f40bf",
                    "#bf40a7",
                    "#40bf58",
                    "#bf9740",
                    "#4068bf",
                    "#bf4048",
                    "#40bfb7",
                    "#87bf40",
                  ],
                  "aliases": Array [
                    "kibana_palette",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "kibana_v7_legacy",
                  "legacy": false,
                  "name": "Kibana 4.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "behind_text" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "behind_text",
                  "legacy": false,
                  "name": "Kibana 7.0 (behind text)",
                  "standalone": true,
                  "type": "categorical",
                },
                "neutral" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#f2f4fb",
                    "#d4d9e5",
                    "#98a2b3",
                    "#696f7d",
                    "#353642",
                  ],
                  "aliases": Array [],
                  "colorCount": 5,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "neutral",
                  "legacy": false,
                  "name": "Neutral",
                  "standalone": true,
                  "type": "categorical",
                },
                "complementary" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "complimentary",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "complementary",
                  "legacy": false,
                  "name": "Complementary",
                  "standalone": false,
                  "type": "gradient",
                },
                "cool" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "cool",
                  "legacy": false,
                  "name": "Cool",
                  "standalone": false,
                  "type": "gradient",
                },
                "gray" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "gray",
                  "legacy": false,
                  "name": "Gray",
                  "standalone": false,
                  "type": "gradient",
                },
                "green" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "positive",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "green",
                  "legacy": false,
                  "name": "Positive",
                  "standalone": false,
                  "type": "gradient",
                },
                "red" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "negative",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "red",
                  "legacy": false,
                  "name": "Negative",
                  "standalone": false,
                  "type": "gradient",
                },
                "status" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "status",
                  "legacy": false,
                  "name": "Status",
                  "standalone": false,
                  "type": "gradient",
                },
                "temperature" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "temperature",
                  "legacy": false,
                  "name": "Temperature",
                  "standalone": false,
                  "type": "gradient",
                },
                "warm" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "warm",
                  "legacy": false,
                  "name": "Warm",
                  "standalone": false,
                  "type": "gradient",
                },
                "elastic_brand_2023" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#20377d",
                    "#7de2d1",
                    "#ff957d",
                    "#f04e98",
                    "#0077cc",
                    "#fec514",
                  ],
                  "aliases": Array [],
                  "colorCount": 6,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "elastic_brand_2023",
                  "legacy": false,
                  "name": "Elastic classic",
                  "standalone": false,
                  "type": "categorical",
                },
                "compare_to" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "compare_to",
                  "legacy": false,
                  "name": "Trend",
                  "standalone": true,
                  "type": "gradient",
                },
              },
              "get": [Function],
              "getAll": [Function],
              "query": [Function],
            }
          }
          shouldShowValueLabels={true}
          syncColors={false}
          timeZone="UTC"
          titles={
            Object {
              "first": Object {
                "markSizeTitles": Object {},
                "splitColumnTitles": Object {},
                "splitRowTitles": Object {},
                "splitSeriesTitles": Object {
                  "d": "ColD",
                },
                "xTitles": Object {
                  "c": "c",
                },
                "yTitles": Object {
                  "a": "a",
                  "b": "b",
                },
              },
            }
          }
          valueLabels="hide"
          xAxisConfiguration={
            Object {
              "groupId": "bottom",
              "labelsOrientation": 0,
              "position": "right",
              "series": Array [],
              "showGridLines": true,
              "showLabels": true,
              "showTitle": true,
              "title": "",
              "type": "xAxisConfig",
            }
          }
          yAxesConfiguration={
            Array [
              Object {
                "extent": Object {
                  "mode": "full",
                  "type": "axisExtentConfig",
                },
                "formatter": Object {
                  "convert": [MockFunction] {
                    "calls": Array [
                      Array [
                        1652034840000,
                      ],
                      Array [
                        1652122440000,
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": 1652034840000,
                      },
                      Object {
                        "type": "return",
                        "value": 1652122440000,
                      },
                    ],
                  },
                },
                "groupId": "left",
                "labelsOrientation": -90,
                "position": "bottom",
                "series": Array [
                  Object {
                    "accessor": "a",
                    "layer": "first",
                  },
                  Object {
                    "accessor": "b",
                    "layer": "first",
                  },
                ],
                "showGridLines": false,
                "showLabels": false,
                "showTitle": true,
                "title": "",
                "type": "yAxisConfig",
              },
            ]
          }
        />
      </Chart>
    </ContextProvider>
  </div>
</Fragment>
`;

exports[`XYChart component split chart should render split chart if both, splitRowAccessor and splitColumnAccessor are specified 1`] = `
<Fragment>
  <GlobalXYChartStyles />
  <div
    css="unknown styles"
  >
    <ContextProvider
      value={
        Object {
          "dataLayers": Array [
            Object {
              "accessors": Array [
                "a",
                "b",
              ],
              "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
              "isHistogram": false,
              "isHorizontal": false,
              "isPercentage": false,
              "isStacked": false,
              "layerId": "first",
              "layerType": "data",
              "palette": Object {
                "name": "mock",
                "params": Object {},
                "type": "palette",
              },
              "seriesType": "bar",
              "showLines": true,
              "splitAccessors": Array [
                "d",
              ],
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
              "type": "dataLayer",
              "xAccessor": "c",
              "xScaleType": "ordinal",
            },
          ],
          "fieldFormats": Object {
            "first": Object {
              "splitColumnAccessors": Object {
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
              "splitRowAccessors": Object {
                "c": Object {
                  "id": "string",
                },
              },
              "splitSeriesAccessors": Object {
                "d": Object {
                  "format": Object {
                    "id": "string",
                  },
                  "formatter": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              },
              "xAccessors": Object {
                "c": Object {
                  "id": "string",
                },
              },
              "yAccessors": Object {
                "a": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "0,0.000",
                  },
                },
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
            },
          },
          "formattedDatatables": Object {
            "first": Object {
              "formattedColumns": Object {
                "b": true,
                "c": true,
              },
              "invertedRawValueMap": Map {
                "a" => Map {},
                "b" => Map {
                  2 => 2,
                  5 => 5,
                },
                "c" => Map {
                  1652034840000 => 1652034840000,
                  1652122440000 => 1652122440000,
                },
                "d" => Map {},
              },
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
            },
          },
          "legendPosition": "top",
          "setColor": [Function],
          "singleTable": undefined,
          "titles": Object {
            "first": Object {
              "markSizeTitles": Object {},
              "splitColumnTitles": Object {
                "b": "b",
              },
              "splitRowTitles": Object {
                "c": "c",
              },
              "splitSeriesTitles": Object {
                "d": "ColD",
              },
              "xTitles": Object {
                "c": "c",
              },
              "yTitles": Object {
                "a": "a",
                "b": "b",
              },
            },
          },
          "uiState": undefined,
        }
      }
    >
      <Chart
        renderer="canvas"
      >
        <Tooltip
          actions={
            Array [
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
            ]
          }
          headerFormatter={[Function]}
          type="vertical"
        />
        <Settings
          allowBrushingLastHistogramBin={false}
          ariaUseDefaultSummary={true}
          baseTheme={
            Object {
              "arcSeriesStyle": Object {
                "arc": Object {
                  "opacity": 1,
                  "stroke": "black",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "areaSeriesStyle": Object {
                "area": Object {
                  "opacity": 0.3,
                  "visible": true,
                },
                "fit": Object {
                  "area": Object {
                    "fill": "__use__series__color__",
                    "opacity": 0.15,
                    "visible": true,
                  },
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "never",
                },
                "pointVisibilityMinDistance": 20,
              },
              "axes": Object {
                "axisLine": Object {
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "axisPanelTitle": Object {
                  "fill": "#333",
                  "fontFamily": "sans-serif",
                  "fontSize": 10,
                  "padding": Object {
                    "inner": 8,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "axisTitle": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "padding": Object {
                    "inner": 10,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "gridLine": Object {
                  "horizontal": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                  "vertical": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                },
                "tickLabel": Object {
                  "alignment": Object {
                    "horizontal": "near",
                    "vertical": "near",
                  },
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offset": Object {
                    "reference": "local",
                    "x": 0,
                    "y": 0,
                  },
                  "padding": Object {
                    "inner": 10,
                    "outer": 8,
                  },
                  "rotation": 0,
                  "visible": true,
                },
                "tickLine": Object {
                  "padding": 10,
                  "size": 10,
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "background": Object {
                "color": "#FFF",
                "fallbackColor": "#FFF",
              },
              "barSeriesStyle": Object {
                "displayValue": Object {
                  "alignment": Object {
                    "horizontal": "center",
                    "vertical": "middle",
                  },
                  "fill": Object {
                    "textBorder": 0,
                  },
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offsetX": 0,
                  "offsetY": 0,
                  "padding": 0,
                },
                "rect": Object {
                  "opacity": 1,
                },
                "rectBorder": Object {
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "bubbleSeriesStyle": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 2,
                  "strokeWidth": 0,
                  "visible": "always",
                },
              },
              "bulletGraph": Object {
                "angularTickLabelPadding": 10,
                "barBackground": "#343741",
                "border": "#EDF0F5",
                "colorBands": Array [
                  "#AA87D1",
                  "#D9C6EF",
                ],
                "fallbackBandColor": "#98A2B3",
                "minHeight": 64,
                "nonFiniteText": "N/A",
                "textColor": "#343741",
              },
              "chartMargins": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "chartPaddings": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "colors": Object {
                "defaultVizColor": "#6092C0",
                "vizColors": Array [
                  "#54B399",
                  "#6092C0",
                  "#9170B8",
                  "#CA8EAE",
                  "#D36086",
                  "#E7664C",
                  "#AA6556",
                  "#DA8B45",
                  "#B9A888",
                  "#D6BF57",
                ],
              },
              "crosshair": Object {
                "band": Object {
                  "fill": "#F1F4FA",
                  "visible": true,
                },
                "crossLine": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "line": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "flamegraph": Object {
                "minimapFocusBorder": "magenta",
                "navigation": Object {
                  "buttonBackgroundColor": "#CCE4F5",
                  "buttonDisabledBackgroundColor": "#D3DAE626",
                  "buttonDisabledTextColor": "#A2ABBA",
                  "buttonTextColor": "#0061A6",
                  "textColor": "#343741",
                },
                "scrollbarThumb": "#343741",
                "scrollbarTrack": "#D3DAE6",
              },
              "goal": Object {
                "arcBoxSamplePitch": 0.08726646259971647,
                "barThicknessMinSizeRatio": 0.1,
                "baselineArcThickness": 32,
                "baselineBarThickness": 32,
                "capturePad": 16,
                "majorCenterLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "majorLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "marginRatio": 0.05,
                "maxBulletSize": 500,
                "maxCentralFontSize": 38,
                "maxCircularSize": 360,
                "maxFontSize": 64,
                "maxLabelFontSize": 32,
                "maxTickFontSize": 24,
                "minFontSize": 8,
                "minorCenterLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "minorLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "progressLine": Object {
                  "stroke": "#343741",
                },
                "targetLine": Object {
                  "stroke": "#343741",
                },
                "tickLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "tickLine": Object {
                  "stroke": "#98A2B3",
                },
              },
              "heatmap": Object {
                "brushArea": Object {
                  "stroke": "#69707D",
                  "strokeWidth": 2,
                  "visible": true,
                },
                "brushMask": Object {
                  "fill": "#73737380",
                  "visible": true,
                },
                "brushTool": Object {
                  "fill": "gray",
                  "visible": false,
                },
                "cell": Object {
                  "align": "center",
                  "border": Object {
                    "stroke": "gray",
                    "strokeWidth": 0,
                  },
                  "label": Object {
                    "fontFamily": "Sans-Serif",
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": "normal",
                    "maxFontSize": 12,
                    "maxWidth": "fill",
                    "minFontSize": 8,
                    "textColor": "black",
                    "useGlobalMinFontSize": true,
                    "visible": true,
                  },
                  "maxHeight": "fill",
                  "maxWidth": "fill",
                },
                "grid": Object {
                  "stroke": Object {
                    "color": "gray",
                    "width": 1,
                  },
                },
                "xAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "rotation": 0,
                  "textColor": "black",
                  "visible": true,
                },
                "yAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "textColor": "black",
                  "visible": true,
                  "width": "auto",
                },
              },
              "highlighter": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 0.5,
                  "radius": 5,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                },
              },
              "legend": Object {
                "horizontalHeight": 64,
                "labelOptions": Object {
                  "maxLines": 1,
                },
                "margin": 0,
                "spacingBuffer": 10,
                "verticalWidth": 200,
              },
              "lineAnnotation": Object {
                "line": Object {
                  "opacity": 1,
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                },
              },
              "lineSeriesStyle": Object {
                "fit": Object {
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 1,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "pointVisibilityMinDistance": 40,
              },
              "metric": Object {
                "barBackground": "#EDF0F5",
                "border": "#EDF0F5",
                "emptyBackground": "transparent",
                "iconAlign": "right",
                "minHeight": 64,
                "minValueFontSize": 12,
                "nonFiniteText": "N/A",
                "textDarkColor": "#343741",
                "textLightColor": "#E0E5EE",
                "titlesTextAlign": "left",
                "valueFontSize": "default",
                "valuesTextAlign": "right",
              },
              "partition": Object {
                "circlePadding": 4,
                "emptySizeRatio": 0,
                "fillLabel": Object {
                  "clipText": false,
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "padding": 2,
                  "textColor": "__use__adaptive__color__",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 700,
                  },
                },
                "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                "horizontalTextAngleThreshold": 0.5235987755982988,
                "horizontalTextEnforcer": 1,
                "idealFontSizeJump": 1.05,
                "linkLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 11,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "gap": 10,
                  "horizontalStemLength": 10,
                  "lineWidth": 1,
                  "maxCount": 5,
                  "maxTextLength": 100,
                  "maximumSection": 10,
                  "minimumStemLength": 0,
                  "padding": 0,
                  "radiusPadding": 10,
                  "spacing": 2,
                  "stemAngle": 0.7853981633974483,
                  "textColor": "#343741",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 400,
                  },
                },
                "maxFontSize": 16,
                "maximizeFontSize": false,
                "minFontSize": 8,
                "outerSizeRatio": 1,
                "radialPadding": 0.017453292519943295,
                "sectorLineStroke": "#FFF",
                "sectorLineWidth": 1.5,
              },
              "rectAnnotation": Object {
                "fill": "#69707D",
                "opacity": 0.25,
                "stroke": "#69707D",
                "strokeWidth": 0,
              },
              "scales": Object {
                "barsPadding": 0.25,
                "histogramPadding": 0.05,
              },
              "sharedStyle": Object {
                "default": Object {
                  "opacity": 1,
                },
                "highlighted": Object {
                  "opacity": 1,
                },
                "unhighlighted": Object {
                  "opacity": 0.25,
                },
              },
              "tooltip": Object {
                "defaultDotColor": "black",
                "maxTableHeight": 120,
                "maxWidth": 500,
              },
            }
          }
          debugState={false}
          externalPointerEvents={
            Object {
              "tooltip": Object {
                "placement": "right",
                "visible": false,
              },
            }
          }
          legendAction={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": [Function],
            }
          }
          legendPosition="top"
          legendSize={130}
          legendValues={Array []}
          locale="en"
          noResults={
            <EmptyPlaceholder
              css="unknown styles"
              icon={[Function]}
              renderComplete={[Function]}
            />
          }
          onBrushEnd={[Function]}
          onElementClick={[Function]}
          onPointerUpdate={[Function]}
          onRenderChange={[Function]}
          pointerUpdateDebounce={0}
          rotation={0}
          showLegend={false}
          theme={
            Array [
              Object {
                "background": Object {
                  "color": undefined,
                },
                "barSeriesStyle": Object {},
                "chartMargins": Object {
                  "bottom": 10,
                  "left": 10,
                  "right": 10,
                  "top": 10,
                },
                "legend": Object {
                  "labelOptions": Object {
                    "maxLines": 0,
                  },
                },
                "markSizeRatio": undefined,
              },
              Object {},
            ]
          }
        />
        <XYCurrentTime
          enabled={false}
          isDarkMode={false}
        />
        <Component
          gridLine={
            Object {
              "strokeWidth": 1,
              "visible": true,
            }
          }
          hide={false}
          id="x"
          position="bottom"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": 0,
                "visible": true,
              },
            }
          }
          tickFormat={[Function]}
          timeAxisLayerCount={0}
          title="c"
        />
        <SplitChart
          columns={
            Array [
              Object {
                "id": "a",
                "meta": Object {
                  "params": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "type": "number",
                },
                "name": "a",
              },
              Object {
                "id": "b",
                "meta": Object {
                  "params": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                  "type": "number",
                },
                "name": "b",
              },
              Object {
                "id": "c",
                "meta": Object {
                  "field": "order_date",
                  "params": Object {
                    "id": "string",
                  },
                  "sourceParams": Object {
                    "params": Object {
                      "interval": "auto",
                    },
                    "type": "date-histogram",
                  },
                  "type": "date",
                },
                "name": "c",
              },
              Object {
                "id": "d",
                "meta": Object {
                  "type": "string",
                },
                "name": "ColD",
              },
            ]
          }
          splitColumnAccessor="b"
          splitRowAccessor="c"
        />
        <Component
          domain={
            Object {
              "fit": false,
              "includeDataFromIds": Array [],
              "max": NaN,
              "min": NaN,
              "padding": undefined,
            }
          }
          gridLine={
            Object {
              "visible": false,
            }
          }
          groupId="left"
          id="left"
          key="left"
          position="left"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": -90,
                "visible": false,
              },
            }
          }
          tickFormat={[Function]}
          title="a"
        />
        <XyEndzones
          darkMode={false}
          histogramMode={false}
        />
        <DataLayers
          chartHasMoreThanOneBarSeries={true}
          defaultXScaleType="ordinal"
          fieldFormats={
            Object {
              "first": Object {
                "splitColumnAccessors": Object {
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
                "splitRowAccessors": Object {
                  "c": Object {
                    "id": "string",
                  },
                },
                "splitSeriesAccessors": Object {
                  "d": Object {
                    "format": Object {
                      "id": "string",
                    },
                    "formatter": Object {
                      "convert": [MockFunction] {
                        "calls": Array [
                          Array [
                            2,
                          ],
                          Array [
                            1652034840000,
                          ],
                          Array [
                            5,
                          ],
                          Array [
                            1652122440000,
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": 2,
                          },
                          Object {
                            "type": "return",
                            "value": 1652034840000,
                          },
                          Object {
                            "type": "return",
                            "value": 5,
                          },
                          Object {
                            "type": "return",
                            "value": 1652122440000,
                          },
                        ],
                      },
                    },
                  },
                },
                "xAccessors": Object {
                  "c": Object {
                    "id": "string",
                  },
                },
                "yAccessors": Object {
                  "a": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
              },
            }
          }
          formatFactory={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              ],
            }
          }
          formattedDatatables={
            Object {
              "first": Object {
                "formattedColumns": Object {
                  "b": true,
                  "c": true,
                },
                "invertedRawValueMap": Map {
                  "a" => Map {},
                  "b" => Map {
                    2 => 2,
                    5 => 5,
                  },
                  "c" => Map {
                    1652034840000 => 1652034840000,
                    1652122440000 => 1652122440000,
                  },
                  "d" => Map {},
                },
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
              },
            }
          }
          isDarkMode={false}
          layers={
            Array [
              Object {
                "accessors": Array [
                  "a",
                  "b",
                ],
                "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
                "isHistogram": false,
                "isHorizontal": false,
                "isPercentage": false,
                "isStacked": false,
                "layerId": "first",
                "layerType": "data",
                "palette": Object {
                  "name": "mock",
                  "params": Object {},
                  "type": "palette",
                },
                "seriesType": "bar",
                "showLines": true,
                "splitAccessors": Array [
                  "d",
                ],
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
                "type": "dataLayer",
                "xAccessor": "c",
                "xScaleType": "ordinal",
              },
            ]
          }
          minBarHeight={1}
          paletteService={
            Object {
              "get": [MockFunction],
              "getAll": [MockFunction],
            }
          }
          palettes={
            KbnPalettes {
              "_aliasMappings": Map {
                "default" => "eui_amsterdam",
                "eui_amsterdam_color_blind" => "eui_amsterdam",
                "kibana_palette" => "kibana_v7_legacy",
                "complimentary" => "complementary",
                "positive" => "green",
                "negative" => "red",
              },
              "_defaultPalette": KbnColorFnPalette {
                "_colorFn": [Function],
                "_defaultNumberOfColors": 30,
                "aliases": Array [
                  "default",
                  "eui_amsterdam_color_blind",
                ],
                "colorCount": 10,
                "colors": [Function],
                "getColor": [Function],
                "id": "eui_amsterdam",
                "legacy": false,
                "name": "Kibana 7.0",
                "standalone": false,
                "type": "categorical",
              },
              "_palettes": Map {
                "eui_amsterdam" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [
                    "default",
                    "eui_amsterdam_color_blind",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "eui_amsterdam",
                  "legacy": false,
                  "name": "Kibana 7.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "kibana_v7_legacy" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#00a69b",
                    "#57c17b",
                    "#6f87d8",
                    "#663db8",
                    "#bc52bc",
                    "#9e3533",
                    "#daa05d",
                    "#bfaf40",
                    "#4050bf",
                    "#bf5040",
                    "#40afbf",
                    "#70bf40",
                    "#8f40bf",
                    "#bf40a7",
                    "#40bf58",
                    "#bf9740",
                    "#4068bf",
                    "#bf4048",
                    "#40bfb7",
                    "#87bf40",
                  ],
                  "aliases": Array [
                    "kibana_palette",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "kibana_v7_legacy",
                  "legacy": false,
                  "name": "Kibana 4.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "behind_text" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "behind_text",
                  "legacy": false,
                  "name": "Kibana 7.0 (behind text)",
                  "standalone": true,
                  "type": "categorical",
                },
                "neutral" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#f2f4fb",
                    "#d4d9e5",
                    "#98a2b3",
                    "#696f7d",
                    "#353642",
                  ],
                  "aliases": Array [],
                  "colorCount": 5,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "neutral",
                  "legacy": false,
                  "name": "Neutral",
                  "standalone": true,
                  "type": "categorical",
                },
                "complementary" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "complimentary",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "complementary",
                  "legacy": false,
                  "name": "Complementary",
                  "standalone": false,
                  "type": "gradient",
                },
                "cool" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "cool",
                  "legacy": false,
                  "name": "Cool",
                  "standalone": false,
                  "type": "gradient",
                },
                "gray" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "gray",
                  "legacy": false,
                  "name": "Gray",
                  "standalone": false,
                  "type": "gradient",
                },
                "green" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "positive",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "green",
                  "legacy": false,
                  "name": "Positive",
                  "standalone": false,
                  "type": "gradient",
                },
                "red" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "negative",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "red",
                  "legacy": false,
                  "name": "Negative",
                  "standalone": false,
                  "type": "gradient",
                },
                "status" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "status",
                  "legacy": false,
                  "name": "Status",
                  "standalone": false,
                  "type": "gradient",
                },
                "temperature" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "temperature",
                  "legacy": false,
                  "name": "Temperature",
                  "standalone": false,
                  "type": "gradient",
                },
                "warm" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "warm",
                  "legacy": false,
                  "name": "Warm",
                  "standalone": false,
                  "type": "gradient",
                },
                "elastic_brand_2023" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#20377d",
                    "#7de2d1",
                    "#ff957d",
                    "#f04e98",
                    "#0077cc",
                    "#fec514",
                  ],
                  "aliases": Array [],
                  "colorCount": 6,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "elastic_brand_2023",
                  "legacy": false,
                  "name": "Elastic classic",
                  "standalone": false,
                  "type": "categorical",
                },
                "compare_to" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "compare_to",
                  "legacy": false,
                  "name": "Trend",
                  "standalone": true,
                  "type": "gradient",
                },
              },
              "get": [Function],
              "getAll": [Function],
              "query": [Function],
            }
          }
          shouldShowValueLabels={true}
          syncColors={false}
          timeZone="UTC"
          titles={
            Object {
              "first": Object {
                "markSizeTitles": Object {},
                "splitColumnTitles": Object {
                  "b": "b",
                },
                "splitRowTitles": Object {
                  "c": "c",
                },
                "splitSeriesTitles": Object {
                  "d": "ColD",
                },
                "xTitles": Object {
                  "c": "c",
                },
                "yTitles": Object {
                  "a": "a",
                  "b": "b",
                },
              },
            }
          }
          valueLabels="hide"
          xAxisConfiguration={
            Object {
              "groupId": "bottom",
              "labelsOrientation": 0,
              "position": "bottom",
              "series": Array [],
              "showGridLines": true,
              "showLabels": true,
              "showTitle": true,
              "title": "",
              "type": "xAxisConfig",
            }
          }
          yAxesConfiguration={
            Array [
              Object {
                "extent": Object {
                  "mode": "full",
                  "type": "axisExtentConfig",
                },
                "formatter": Object {
                  "convert": [MockFunction] {
                    "calls": Array [
                      Array [
                        2,
                      ],
                      Array [
                        1652034840000,
                      ],
                      Array [
                        5,
                      ],
                      Array [
                        1652122440000,
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": 2,
                      },
                      Object {
                        "type": "return",
                        "value": 1652034840000,
                      },
                      Object {
                        "type": "return",
                        "value": 5,
                      },
                      Object {
                        "type": "return",
                        "value": 1652122440000,
                      },
                    ],
                  },
                },
                "groupId": "left",
                "labelsOrientation": -90,
                "position": "left",
                "series": Array [
                  Object {
                    "accessor": "a",
                    "layer": "first",
                  },
                  Object {
                    "accessor": "b",
                    "layer": "first",
                  },
                ],
                "showGridLines": false,
                "showLabels": false,
                "showTitle": true,
                "title": "",
                "type": "yAxisConfig",
              },
            ]
          }
        />
      </Chart>
    </ContextProvider>
  </div>
</Fragment>
`;

exports[`XYChart component split chart should render split chart if splitColumnAccessor is specified 1`] = `
<Fragment>
  <GlobalXYChartStyles />
  <div
    css="unknown styles"
  >
    <ContextProvider
      value={
        Object {
          "dataLayers": Array [
            Object {
              "accessors": Array [
                "a",
                "b",
              ],
              "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
              "isHistogram": false,
              "isHorizontal": false,
              "isPercentage": false,
              "isStacked": false,
              "layerId": "first",
              "layerType": "data",
              "palette": Object {
                "name": "mock",
                "params": Object {},
                "type": "palette",
              },
              "seriesType": "bar",
              "showLines": true,
              "splitAccessors": Array [
                "d",
              ],
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
              "type": "dataLayer",
              "xAccessor": "c",
              "xScaleType": "ordinal",
            },
          ],
          "fieldFormats": Object {
            "first": Object {
              "splitColumnAccessors": Object {
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
              "splitRowAccessors": Object {},
              "splitSeriesAccessors": Object {
                "d": Object {
                  "format": Object {
                    "id": "string",
                  },
                  "formatter": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              },
              "xAccessors": Object {
                "c": Object {
                  "id": "string",
                },
              },
              "yAccessors": Object {
                "a": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "0,0.000",
                  },
                },
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
            },
          },
          "formattedDatatables": Object {
            "first": Object {
              "formattedColumns": Object {
                "b": true,
                "c": true,
              },
              "invertedRawValueMap": Map {
                "a" => Map {},
                "b" => Map {
                  2 => 2,
                  5 => 5,
                },
                "c" => Map {
                  1652034840000 => 1652034840000,
                  1652122440000 => 1652122440000,
                },
                "d" => Map {},
              },
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
            },
          },
          "legendPosition": "top",
          "setColor": [Function],
          "singleTable": undefined,
          "titles": Object {
            "first": Object {
              "markSizeTitles": Object {},
              "splitColumnTitles": Object {
                "b": "b",
              },
              "splitRowTitles": Object {},
              "splitSeriesTitles": Object {
                "d": "ColD",
              },
              "xTitles": Object {
                "c": "c",
              },
              "yTitles": Object {
                "a": "a",
                "b": "b",
              },
            },
          },
          "uiState": undefined,
        }
      }
    >
      <Chart
        renderer="canvas"
      >
        <Tooltip
          actions={
            Array [
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
            ]
          }
          headerFormatter={[Function]}
          type="vertical"
        />
        <Settings
          allowBrushingLastHistogramBin={false}
          ariaUseDefaultSummary={true}
          baseTheme={
            Object {
              "arcSeriesStyle": Object {
                "arc": Object {
                  "opacity": 1,
                  "stroke": "black",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "areaSeriesStyle": Object {
                "area": Object {
                  "opacity": 0.3,
                  "visible": true,
                },
                "fit": Object {
                  "area": Object {
                    "fill": "__use__series__color__",
                    "opacity": 0.15,
                    "visible": true,
                  },
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "never",
                },
                "pointVisibilityMinDistance": 20,
              },
              "axes": Object {
                "axisLine": Object {
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "axisPanelTitle": Object {
                  "fill": "#333",
                  "fontFamily": "sans-serif",
                  "fontSize": 10,
                  "padding": Object {
                    "inner": 8,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "axisTitle": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "padding": Object {
                    "inner": 10,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "gridLine": Object {
                  "horizontal": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                  "vertical": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                },
                "tickLabel": Object {
                  "alignment": Object {
                    "horizontal": "near",
                    "vertical": "near",
                  },
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offset": Object {
                    "reference": "local",
                    "x": 0,
                    "y": 0,
                  },
                  "padding": Object {
                    "inner": 10,
                    "outer": 8,
                  },
                  "rotation": 0,
                  "visible": true,
                },
                "tickLine": Object {
                  "padding": 10,
                  "size": 10,
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "background": Object {
                "color": "#FFF",
                "fallbackColor": "#FFF",
              },
              "barSeriesStyle": Object {
                "displayValue": Object {
                  "alignment": Object {
                    "horizontal": "center",
                    "vertical": "middle",
                  },
                  "fill": Object {
                    "textBorder": 0,
                  },
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offsetX": 0,
                  "offsetY": 0,
                  "padding": 0,
                },
                "rect": Object {
                  "opacity": 1,
                },
                "rectBorder": Object {
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "bubbleSeriesStyle": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 2,
                  "strokeWidth": 0,
                  "visible": "always",
                },
              },
              "bulletGraph": Object {
                "angularTickLabelPadding": 10,
                "barBackground": "#343741",
                "border": "#EDF0F5",
                "colorBands": Array [
                  "#AA87D1",
                  "#D9C6EF",
                ],
                "fallbackBandColor": "#98A2B3",
                "minHeight": 64,
                "nonFiniteText": "N/A",
                "textColor": "#343741",
              },
              "chartMargins": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "chartPaddings": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "colors": Object {
                "defaultVizColor": "#6092C0",
                "vizColors": Array [
                  "#54B399",
                  "#6092C0",
                  "#9170B8",
                  "#CA8EAE",
                  "#D36086",
                  "#E7664C",
                  "#AA6556",
                  "#DA8B45",
                  "#B9A888",
                  "#D6BF57",
                ],
              },
              "crosshair": Object {
                "band": Object {
                  "fill": "#F1F4FA",
                  "visible": true,
                },
                "crossLine": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "line": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "flamegraph": Object {
                "minimapFocusBorder": "magenta",
                "navigation": Object {
                  "buttonBackgroundColor": "#CCE4F5",
                  "buttonDisabledBackgroundColor": "#D3DAE626",
                  "buttonDisabledTextColor": "#A2ABBA",
                  "buttonTextColor": "#0061A6",
                  "textColor": "#343741",
                },
                "scrollbarThumb": "#343741",
                "scrollbarTrack": "#D3DAE6",
              },
              "goal": Object {
                "arcBoxSamplePitch": 0.08726646259971647,
                "barThicknessMinSizeRatio": 0.1,
                "baselineArcThickness": 32,
                "baselineBarThickness": 32,
                "capturePad": 16,
                "majorCenterLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "majorLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "marginRatio": 0.05,
                "maxBulletSize": 500,
                "maxCentralFontSize": 38,
                "maxCircularSize": 360,
                "maxFontSize": 64,
                "maxLabelFontSize": 32,
                "maxTickFontSize": 24,
                "minFontSize": 8,
                "minorCenterLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "minorLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "progressLine": Object {
                  "stroke": "#343741",
                },
                "targetLine": Object {
                  "stroke": "#343741",
                },
                "tickLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "tickLine": Object {
                  "stroke": "#98A2B3",
                },
              },
              "heatmap": Object {
                "brushArea": Object {
                  "stroke": "#69707D",
                  "strokeWidth": 2,
                  "visible": true,
                },
                "brushMask": Object {
                  "fill": "#73737380",
                  "visible": true,
                },
                "brushTool": Object {
                  "fill": "gray",
                  "visible": false,
                },
                "cell": Object {
                  "align": "center",
                  "border": Object {
                    "stroke": "gray",
                    "strokeWidth": 0,
                  },
                  "label": Object {
                    "fontFamily": "Sans-Serif",
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": "normal",
                    "maxFontSize": 12,
                    "maxWidth": "fill",
                    "minFontSize": 8,
                    "textColor": "black",
                    "useGlobalMinFontSize": true,
                    "visible": true,
                  },
                  "maxHeight": "fill",
                  "maxWidth": "fill",
                },
                "grid": Object {
                  "stroke": Object {
                    "color": "gray",
                    "width": 1,
                  },
                },
                "xAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "rotation": 0,
                  "textColor": "black",
                  "visible": true,
                },
                "yAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "textColor": "black",
                  "visible": true,
                  "width": "auto",
                },
              },
              "highlighter": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 0.5,
                  "radius": 5,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                },
              },
              "legend": Object {
                "horizontalHeight": 64,
                "labelOptions": Object {
                  "maxLines": 1,
                },
                "margin": 0,
                "spacingBuffer": 10,
                "verticalWidth": 200,
              },
              "lineAnnotation": Object {
                "line": Object {
                  "opacity": 1,
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                },
              },
              "lineSeriesStyle": Object {
                "fit": Object {
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 1,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "pointVisibilityMinDistance": 40,
              },
              "metric": Object {
                "barBackground": "#EDF0F5",
                "border": "#EDF0F5",
                "emptyBackground": "transparent",
                "iconAlign": "right",
                "minHeight": 64,
                "minValueFontSize": 12,
                "nonFiniteText": "N/A",
                "textDarkColor": "#343741",
                "textLightColor": "#E0E5EE",
                "titlesTextAlign": "left",
                "valueFontSize": "default",
                "valuesTextAlign": "right",
              },
              "partition": Object {
                "circlePadding": 4,
                "emptySizeRatio": 0,
                "fillLabel": Object {
                  "clipText": false,
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "padding": 2,
                  "textColor": "__use__adaptive__color__",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 700,
                  },
                },
                "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                "horizontalTextAngleThreshold": 0.5235987755982988,
                "horizontalTextEnforcer": 1,
                "idealFontSizeJump": 1.05,
                "linkLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 11,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "gap": 10,
                  "horizontalStemLength": 10,
                  "lineWidth": 1,
                  "maxCount": 5,
                  "maxTextLength": 100,
                  "maximumSection": 10,
                  "minimumStemLength": 0,
                  "padding": 0,
                  "radiusPadding": 10,
                  "spacing": 2,
                  "stemAngle": 0.7853981633974483,
                  "textColor": "#343741",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 400,
                  },
                },
                "maxFontSize": 16,
                "maximizeFontSize": false,
                "minFontSize": 8,
                "outerSizeRatio": 1,
                "radialPadding": 0.017453292519943295,
                "sectorLineStroke": "#FFF",
                "sectorLineWidth": 1.5,
              },
              "rectAnnotation": Object {
                "fill": "#69707D",
                "opacity": 0.25,
                "stroke": "#69707D",
                "strokeWidth": 0,
              },
              "scales": Object {
                "barsPadding": 0.25,
                "histogramPadding": 0.05,
              },
              "sharedStyle": Object {
                "default": Object {
                  "opacity": 1,
                },
                "highlighted": Object {
                  "opacity": 1,
                },
                "unhighlighted": Object {
                  "opacity": 0.25,
                },
              },
              "tooltip": Object {
                "defaultDotColor": "black",
                "maxTableHeight": 120,
                "maxWidth": 500,
              },
            }
          }
          debugState={false}
          externalPointerEvents={
            Object {
              "tooltip": Object {
                "placement": "right",
                "visible": false,
              },
            }
          }
          legendAction={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": [Function],
            }
          }
          legendPosition="top"
          legendSize={130}
          legendValues={Array []}
          locale="en"
          noResults={
            <EmptyPlaceholder
              css="unknown styles"
              icon={[Function]}
              renderComplete={[Function]}
            />
          }
          onBrushEnd={[Function]}
          onElementClick={[Function]}
          onPointerUpdate={[Function]}
          onRenderChange={[Function]}
          pointerUpdateDebounce={0}
          rotation={0}
          showLegend={false}
          theme={
            Array [
              Object {
                "background": Object {
                  "color": undefined,
                },
                "barSeriesStyle": Object {},
                "chartMargins": Object {
                  "bottom": 10,
                  "left": 10,
                  "right": 10,
                  "top": 10,
                },
                "legend": Object {
                  "labelOptions": Object {
                    "maxLines": 0,
                  },
                },
                "markSizeRatio": undefined,
              },
              Object {},
            ]
          }
        />
        <XYCurrentTime
          enabled={false}
          isDarkMode={false}
        />
        <Component
          gridLine={
            Object {
              "strokeWidth": 1,
              "visible": true,
            }
          }
          hide={false}
          id="x"
          position="bottom"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": 0,
                "visible": true,
              },
            }
          }
          tickFormat={[Function]}
          timeAxisLayerCount={0}
          title="c"
        />
        <SplitChart
          columns={
            Array [
              Object {
                "id": "a",
                "meta": Object {
                  "params": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "type": "number",
                },
                "name": "a",
              },
              Object {
                "id": "b",
                "meta": Object {
                  "params": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                  "type": "number",
                },
                "name": "b",
              },
              Object {
                "id": "c",
                "meta": Object {
                  "field": "order_date",
                  "params": Object {
                    "id": "string",
                  },
                  "sourceParams": Object {
                    "params": Object {
                      "interval": "auto",
                    },
                    "type": "date-histogram",
                  },
                  "type": "date",
                },
                "name": "c",
              },
              Object {
                "id": "d",
                "meta": Object {
                  "type": "string",
                },
                "name": "ColD",
              },
            ]
          }
          splitColumnAccessor="b"
        />
        <Component
          domain={
            Object {
              "fit": false,
              "includeDataFromIds": Array [],
              "max": NaN,
              "min": NaN,
              "padding": undefined,
            }
          }
          gridLine={
            Object {
              "visible": false,
            }
          }
          groupId="left"
          id="left"
          key="left"
          position="left"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": -90,
                "visible": false,
              },
            }
          }
          tickFormat={[Function]}
          title="a"
        />
        <XyEndzones
          darkMode={false}
          histogramMode={false}
        />
        <DataLayers
          chartHasMoreThanOneBarSeries={true}
          defaultXScaleType="ordinal"
          fieldFormats={
            Object {
              "first": Object {
                "splitColumnAccessors": Object {
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
                "splitRowAccessors": Object {},
                "splitSeriesAccessors": Object {
                  "d": Object {
                    "format": Object {
                      "id": "string",
                    },
                    "formatter": Object {
                      "convert": [MockFunction] {
                        "calls": Array [
                          Array [
                            2,
                          ],
                          Array [
                            1652034840000,
                          ],
                          Array [
                            5,
                          ],
                          Array [
                            1652122440000,
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": 2,
                          },
                          Object {
                            "type": "return",
                            "value": 1652034840000,
                          },
                          Object {
                            "type": "return",
                            "value": 5,
                          },
                          Object {
                            "type": "return",
                            "value": 1652122440000,
                          },
                        ],
                      },
                    },
                  },
                },
                "xAccessors": Object {
                  "c": Object {
                    "id": "string",
                  },
                },
                "yAccessors": Object {
                  "a": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
              },
            }
          }
          formatFactory={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              ],
            }
          }
          formattedDatatables={
            Object {
              "first": Object {
                "formattedColumns": Object {
                  "b": true,
                  "c": true,
                },
                "invertedRawValueMap": Map {
                  "a" => Map {},
                  "b" => Map {
                    2 => 2,
                    5 => 5,
                  },
                  "c" => Map {
                    1652034840000 => 1652034840000,
                    1652122440000 => 1652122440000,
                  },
                  "d" => Map {},
                },
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
              },
            }
          }
          isDarkMode={false}
          layers={
            Array [
              Object {
                "accessors": Array [
                  "a",
                  "b",
                ],
                "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
                "isHistogram": false,
                "isHorizontal": false,
                "isPercentage": false,
                "isStacked": false,
                "layerId": "first",
                "layerType": "data",
                "palette": Object {
                  "name": "mock",
                  "params": Object {},
                  "type": "palette",
                },
                "seriesType": "bar",
                "showLines": true,
                "splitAccessors": Array [
                  "d",
                ],
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
                "type": "dataLayer",
                "xAccessor": "c",
                "xScaleType": "ordinal",
              },
            ]
          }
          minBarHeight={1}
          paletteService={
            Object {
              "get": [MockFunction],
              "getAll": [MockFunction],
            }
          }
          palettes={
            KbnPalettes {
              "_aliasMappings": Map {
                "default" => "eui_amsterdam",
                "eui_amsterdam_color_blind" => "eui_amsterdam",
                "kibana_palette" => "kibana_v7_legacy",
                "complimentary" => "complementary",
                "positive" => "green",
                "negative" => "red",
              },
              "_defaultPalette": KbnColorFnPalette {
                "_colorFn": [Function],
                "_defaultNumberOfColors": 30,
                "aliases": Array [
                  "default",
                  "eui_amsterdam_color_blind",
                ],
                "colorCount": 10,
                "colors": [Function],
                "getColor": [Function],
                "id": "eui_amsterdam",
                "legacy": false,
                "name": "Kibana 7.0",
                "standalone": false,
                "type": "categorical",
              },
              "_palettes": Map {
                "eui_amsterdam" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [
                    "default",
                    "eui_amsterdam_color_blind",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "eui_amsterdam",
                  "legacy": false,
                  "name": "Kibana 7.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "kibana_v7_legacy" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#00a69b",
                    "#57c17b",
                    "#6f87d8",
                    "#663db8",
                    "#bc52bc",
                    "#9e3533",
                    "#daa05d",
                    "#bfaf40",
                    "#4050bf",
                    "#bf5040",
                    "#40afbf",
                    "#70bf40",
                    "#8f40bf",
                    "#bf40a7",
                    "#40bf58",
                    "#bf9740",
                    "#4068bf",
                    "#bf4048",
                    "#40bfb7",
                    "#87bf40",
                  ],
                  "aliases": Array [
                    "kibana_palette",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "kibana_v7_legacy",
                  "legacy": false,
                  "name": "Kibana 4.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "behind_text" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "behind_text",
                  "legacy": false,
                  "name": "Kibana 7.0 (behind text)",
                  "standalone": true,
                  "type": "categorical",
                },
                "neutral" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#f2f4fb",
                    "#d4d9e5",
                    "#98a2b3",
                    "#696f7d",
                    "#353642",
                  ],
                  "aliases": Array [],
                  "colorCount": 5,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "neutral",
                  "legacy": false,
                  "name": "Neutral",
                  "standalone": true,
                  "type": "categorical",
                },
                "complementary" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "complimentary",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "complementary",
                  "legacy": false,
                  "name": "Complementary",
                  "standalone": false,
                  "type": "gradient",
                },
                "cool" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "cool",
                  "legacy": false,
                  "name": "Cool",
                  "standalone": false,
                  "type": "gradient",
                },
                "gray" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "gray",
                  "legacy": false,
                  "name": "Gray",
                  "standalone": false,
                  "type": "gradient",
                },
                "green" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "positive",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "green",
                  "legacy": false,
                  "name": "Positive",
                  "standalone": false,
                  "type": "gradient",
                },
                "red" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "negative",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "red",
                  "legacy": false,
                  "name": "Negative",
                  "standalone": false,
                  "type": "gradient",
                },
                "status" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "status",
                  "legacy": false,
                  "name": "Status",
                  "standalone": false,
                  "type": "gradient",
                },
                "temperature" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "temperature",
                  "legacy": false,
                  "name": "Temperature",
                  "standalone": false,
                  "type": "gradient",
                },
                "warm" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "warm",
                  "legacy": false,
                  "name": "Warm",
                  "standalone": false,
                  "type": "gradient",
                },
                "elastic_brand_2023" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#20377d",
                    "#7de2d1",
                    "#ff957d",
                    "#f04e98",
                    "#0077cc",
                    "#fec514",
                  ],
                  "aliases": Array [],
                  "colorCount": 6,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "elastic_brand_2023",
                  "legacy": false,
                  "name": "Elastic classic",
                  "standalone": false,
                  "type": "categorical",
                },
                "compare_to" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "compare_to",
                  "legacy": false,
                  "name": "Trend",
                  "standalone": true,
                  "type": "gradient",
                },
              },
              "get": [Function],
              "getAll": [Function],
              "query": [Function],
            }
          }
          shouldShowValueLabels={true}
          syncColors={false}
          timeZone="UTC"
          titles={
            Object {
              "first": Object {
                "markSizeTitles": Object {},
                "splitColumnTitles": Object {
                  "b": "b",
                },
                "splitRowTitles": Object {},
                "splitSeriesTitles": Object {
                  "d": "ColD",
                },
                "xTitles": Object {
                  "c": "c",
                },
                "yTitles": Object {
                  "a": "a",
                  "b": "b",
                },
              },
            }
          }
          valueLabels="hide"
          xAxisConfiguration={
            Object {
              "groupId": "bottom",
              "labelsOrientation": 0,
              "position": "bottom",
              "series": Array [],
              "showGridLines": true,
              "showLabels": true,
              "showTitle": true,
              "title": "",
              "type": "xAxisConfig",
            }
          }
          yAxesConfiguration={
            Array [
              Object {
                "extent": Object {
                  "mode": "full",
                  "type": "axisExtentConfig",
                },
                "formatter": Object {
                  "convert": [MockFunction] {
                    "calls": Array [
                      Array [
                        2,
                      ],
                      Array [
                        1652034840000,
                      ],
                      Array [
                        5,
                      ],
                      Array [
                        1652122440000,
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": 2,
                      },
                      Object {
                        "type": "return",
                        "value": 1652034840000,
                      },
                      Object {
                        "type": "return",
                        "value": 5,
                      },
                      Object {
                        "type": "return",
                        "value": 1652122440000,
                      },
                    ],
                  },
                },
                "groupId": "left",
                "labelsOrientation": -90,
                "position": "left",
                "series": Array [
                  Object {
                    "accessor": "a",
                    "layer": "first",
                  },
                  Object {
                    "accessor": "b",
                    "layer": "first",
                  },
                ],
                "showGridLines": false,
                "showLabels": false,
                "showTitle": true,
                "title": "",
                "type": "yAxisConfig",
              },
            ]
          }
        />
      </Chart>
    </ContextProvider>
  </div>
</Fragment>
`;

exports[`XYChart component split chart should render split chart if splitRowAccessor is specified 1`] = `
<Fragment>
  <GlobalXYChartStyles />
  <div
    css="unknown styles"
  >
    <ContextProvider
      value={
        Object {
          "dataLayers": Array [
            Object {
              "accessors": Array [
                "a",
                "b",
              ],
              "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
              "isHistogram": false,
              "isHorizontal": false,
              "isPercentage": false,
              "isStacked": false,
              "layerId": "first",
              "layerType": "data",
              "palette": Object {
                "name": "mock",
                "params": Object {},
                "type": "palette",
              },
              "seriesType": "bar",
              "showLines": true,
              "splitAccessors": Array [
                "d",
              ],
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
              "type": "dataLayer",
              "xAccessor": "c",
              "xScaleType": "ordinal",
            },
          ],
          "fieldFormats": Object {
            "first": Object {
              "splitColumnAccessors": Object {},
              "splitRowAccessors": Object {
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
              "splitSeriesAccessors": Object {
                "d": Object {
                  "format": Object {
                    "id": "string",
                  },
                  "formatter": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              },
              "xAccessors": Object {
                "c": Object {
                  "id": "string",
                },
              },
              "yAccessors": Object {
                "a": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "0,0.000",
                  },
                },
                "b": Object {
                  "id": "number",
                  "params": Object {
                    "pattern": "000,0",
                  },
                },
              },
            },
          },
          "formattedDatatables": Object {
            "first": Object {
              "formattedColumns": Object {
                "b": true,
                "c": true,
              },
              "invertedRawValueMap": Map {
                "a" => Map {},
                "b" => Map {
                  2 => 2,
                  5 => 5,
                },
                "c" => Map {
                  1652034840000 => 1652034840000,
                  1652122440000 => 1652122440000,
                },
                "d" => Map {},
              },
              "table": Object {
                "columns": Array [
                  Object {
                    "id": "a",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "0,0.000",
                        },
                      },
                      "type": "number",
                    },
                    "name": "a",
                  },
                  Object {
                    "id": "b",
                    "meta": Object {
                      "params": Object {
                        "id": "number",
                        "params": Object {
                          "pattern": "000,0",
                        },
                      },
                      "type": "number",
                    },
                    "name": "b",
                  },
                  Object {
                    "id": "c",
                    "meta": Object {
                      "field": "order_date",
                      "params": Object {
                        "id": "string",
                      },
                      "sourceParams": Object {
                        "params": Object {
                          "interval": "auto",
                        },
                        "type": "date-histogram",
                      },
                      "type": "date",
                    },
                    "name": "c",
                  },
                  Object {
                    "id": "d",
                    "meta": Object {
                      "type": "string",
                    },
                    "name": "ColD",
                  },
                ],
                "rows": Array [
                  Object {
                    "a": 1,
                    "b": 2,
                    "c": 1652034840000,
                    "d": "Foo",
                  },
                  Object {
                    "a": 1,
                    "b": 5,
                    "c": 1652122440000,
                    "d": "Bar",
                  },
                ],
                "type": "datatable",
              },
            },
          },
          "legendPosition": "top",
          "setColor": [Function],
          "singleTable": undefined,
          "titles": Object {
            "first": Object {
              "markSizeTitles": Object {},
              "splitColumnTitles": Object {},
              "splitRowTitles": Object {
                "b": "b",
              },
              "splitSeriesTitles": Object {
                "d": "ColD",
              },
              "xTitles": Object {
                "c": "c",
              },
              "yTitles": Object {
                "a": "a",
                "b": "b",
              },
            },
          },
          "uiState": undefined,
        }
      }
    >
      <Chart
        renderer="canvas"
      >
        <Tooltip
          actions={
            Array [
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
              Object {
                "disabled": [Function],
                "label": [Function],
                "onSelect": [Function],
              },
            ]
          }
          headerFormatter={[Function]}
          type="vertical"
        />
        <Settings
          allowBrushingLastHistogramBin={false}
          ariaUseDefaultSummary={true}
          baseTheme={
            Object {
              "arcSeriesStyle": Object {
                "arc": Object {
                  "opacity": 1,
                  "stroke": "black",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "areaSeriesStyle": Object {
                "area": Object {
                  "opacity": 0.3,
                  "visible": true,
                },
                "fit": Object {
                  "area": Object {
                    "fill": "__use__series__color__",
                    "opacity": 0.15,
                    "visible": true,
                  },
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "never",
                },
                "pointVisibilityMinDistance": 20,
              },
              "axes": Object {
                "axisLine": Object {
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "axisPanelTitle": Object {
                  "fill": "#333",
                  "fontFamily": "sans-serif",
                  "fontSize": 10,
                  "padding": Object {
                    "inner": 8,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "axisTitle": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "padding": Object {
                    "inner": 10,
                    "outer": 0,
                  },
                  "visible": true,
                },
                "gridLine": Object {
                  "horizontal": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                  "vertical": Object {
                    "dash": Array [
                      0,
                      0,
                    ],
                    "opacity": 1,
                    "stroke": "#E9EDF3",
                    "strokeWidth": 1,
                    "visible": true,
                  },
                },
                "tickLabel": Object {
                  "alignment": Object {
                    "horizontal": "near",
                    "vertical": "near",
                  },
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offset": Object {
                    "reference": "local",
                    "x": 0,
                    "y": 0,
                  },
                  "padding": Object {
                    "inner": 10,
                    "outer": 8,
                  },
                  "rotation": 0,
                  "visible": true,
                },
                "tickLine": Object {
                  "padding": 10,
                  "size": 10,
                  "stroke": "#eaedf3",
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "background": Object {
                "color": "#FFF",
                "fallbackColor": "#FFF",
              },
              "barSeriesStyle": Object {
                "displayValue": Object {
                  "alignment": Object {
                    "horizontal": "center",
                    "vertical": "middle",
                  },
                  "fill": Object {
                    "textBorder": 0,
                  },
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 10,
                  "fontStyle": "normal",
                  "offsetX": 0,
                  "offsetY": 0,
                  "padding": 0,
                },
                "rect": Object {
                  "opacity": 1,
                },
                "rectBorder": Object {
                  "strokeWidth": 1,
                  "visible": false,
                },
              },
              "bubbleSeriesStyle": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 2,
                  "strokeWidth": 0,
                  "visible": "always",
                },
              },
              "bulletGraph": Object {
                "angularTickLabelPadding": 10,
                "barBackground": "#343741",
                "border": "#EDF0F5",
                "colorBands": Array [
                  "#AA87D1",
                  "#D9C6EF",
                ],
                "fallbackBandColor": "#98A2B3",
                "minHeight": 64,
                "nonFiniteText": "N/A",
                "textColor": "#343741",
              },
              "chartMargins": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "chartPaddings": Object {
                "bottom": 0,
                "left": 0,
                "right": 0,
                "top": 0,
              },
              "colors": Object {
                "defaultVizColor": "#6092C0",
                "vizColors": Array [
                  "#54B399",
                  "#6092C0",
                  "#9170B8",
                  "#CA8EAE",
                  "#D36086",
                  "#E7664C",
                  "#AA6556",
                  "#DA8B45",
                  "#B9A888",
                  "#D6BF57",
                ],
              },
              "crosshair": Object {
                "band": Object {
                  "fill": "#F1F4FA",
                  "visible": true,
                },
                "crossLine": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
                "line": Object {
                  "dash": Array [
                    4,
                    4,
                  ],
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                  "visible": true,
                },
              },
              "flamegraph": Object {
                "minimapFocusBorder": "magenta",
                "navigation": Object {
                  "buttonBackgroundColor": "#CCE4F5",
                  "buttonDisabledBackgroundColor": "#D3DAE626",
                  "buttonDisabledTextColor": "#A2ABBA",
                  "buttonTextColor": "#0061A6",
                  "textColor": "#343741",
                },
                "scrollbarThumb": "#343741",
                "scrollbarTrack": "#D3DAE6",
              },
              "goal": Object {
                "arcBoxSamplePitch": 0.08726646259971647,
                "barThicknessMinSizeRatio": 0.1,
                "baselineArcThickness": 32,
                "baselineBarThickness": 32,
                "capturePad": 16,
                "majorCenterLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "majorLabel": Object {
                  "fill": "#343741",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "marginRatio": 0.05,
                "maxBulletSize": 500,
                "maxCentralFontSize": 38,
                "maxCircularSize": 360,
                "maxFontSize": 64,
                "maxLabelFontSize": 32,
                "maxTickFontSize": 24,
                "minFontSize": 8,
                "minorCenterLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "minorLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "progressLine": Object {
                  "stroke": "#343741",
                },
                "targetLine": Object {
                  "stroke": "#343741",
                },
                "tickLabel": Object {
                  "fill": "#646a77",
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                },
                "tickLine": Object {
                  "stroke": "#98A2B3",
                },
              },
              "heatmap": Object {
                "brushArea": Object {
                  "stroke": "#69707D",
                  "strokeWidth": 2,
                  "visible": true,
                },
                "brushMask": Object {
                  "fill": "#73737380",
                  "visible": true,
                },
                "brushTool": Object {
                  "fill": "gray",
                  "visible": false,
                },
                "cell": Object {
                  "align": "center",
                  "border": Object {
                    "stroke": "gray",
                    "strokeWidth": 0,
                  },
                  "label": Object {
                    "fontFamily": "Sans-Serif",
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": "normal",
                    "maxFontSize": 12,
                    "maxWidth": "fill",
                    "minFontSize": 8,
                    "textColor": "black",
                    "useGlobalMinFontSize": true,
                    "visible": true,
                  },
                  "maxHeight": "fill",
                  "maxWidth": "fill",
                },
                "grid": Object {
                  "stroke": Object {
                    "color": "gray",
                    "width": 1,
                  },
                },
                "xAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "rotation": 0,
                  "textColor": "black",
                  "visible": true,
                },
                "yAxisLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 12,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": "normal",
                  "padding": Object {
                    "bottom": 5,
                    "left": 5,
                    "right": 5,
                    "top": 5,
                  },
                  "textColor": "black",
                  "visible": true,
                  "width": "auto",
                },
              },
              "highlighter": Object {
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 0.5,
                  "radius": 5,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                },
              },
              "legend": Object {
                "horizontalHeight": 64,
                "labelOptions": Object {
                  "maxLines": 1,
                },
                "margin": 0,
                "spacingBuffer": 10,
                "verticalWidth": 200,
              },
              "lineAnnotation": Object {
                "line": Object {
                  "opacity": 1,
                  "stroke": "#69707D",
                  "strokeWidth": 1,
                },
              },
              "lineSeriesStyle": Object {
                "fit": Object {
                  "line": Object {
                    "dash": Array [
                      5,
                      5,
                    ],
                    "opacity": 1,
                    "stroke": "__use__series__color__",
                    "visible": true,
                  },
                },
                "isolatedPoint": Object {
                  "enabled": true,
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "stroke": "__use__series__color__",
                  "strokeWidth": 1,
                  "visible": "auto",
                },
                "line": Object {
                  "opacity": 1,
                  "strokeWidth": 2,
                  "visible": true,
                },
                "point": Object {
                  "fill": "__use__series__color__",
                  "opacity": 1,
                  "radius": 3,
                  "stroke": "__use__empty__color__",
                  "strokeWidth": 0,
                  "visible": "auto",
                },
                "pointVisibilityMinDistance": 40,
              },
              "metric": Object {
                "barBackground": "#EDF0F5",
                "border": "#EDF0F5",
                "emptyBackground": "transparent",
                "iconAlign": "right",
                "minHeight": 64,
                "minValueFontSize": 12,
                "nonFiniteText": "N/A",
                "textDarkColor": "#343741",
                "textLightColor": "#E0E5EE",
                "titlesTextAlign": "left",
                "valueFontSize": "default",
                "valuesTextAlign": "right",
              },
              "partition": Object {
                "circlePadding": 4,
                "emptySizeRatio": 0,
                "fillLabel": Object {
                  "clipText": false,
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "padding": 2,
                  "textColor": "__use__adaptive__color__",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 700,
                  },
                },
                "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                "horizontalTextAngleThreshold": 0.5235987755982988,
                "horizontalTextEnforcer": 1,
                "idealFontSizeJump": 1.05,
                "linkLabel": Object {
                  "fontFamily": "Inter, BlinkMacSystemFont, Helvetica, Arial, sans-serif",
                  "fontSize": 11,
                  "fontStyle": "normal",
                  "fontVariant": "normal",
                  "fontWeight": 400,
                  "gap": 10,
                  "horizontalStemLength": 10,
                  "lineWidth": 1,
                  "maxCount": 5,
                  "maxTextLength": 100,
                  "maximumSection": 10,
                  "minimumStemLength": 0,
                  "padding": 0,
                  "radiusPadding": 10,
                  "spacing": 2,
                  "stemAngle": 0.7853981633974483,
                  "textColor": "#343741",
                  "valueFont": Object {
                    "fontStyle": "normal",
                    "fontVariant": "normal",
                    "fontWeight": 400,
                  },
                },
                "maxFontSize": 16,
                "maximizeFontSize": false,
                "minFontSize": 8,
                "outerSizeRatio": 1,
                "radialPadding": 0.017453292519943295,
                "sectorLineStroke": "#FFF",
                "sectorLineWidth": 1.5,
              },
              "rectAnnotation": Object {
                "fill": "#69707D",
                "opacity": 0.25,
                "stroke": "#69707D",
                "strokeWidth": 0,
              },
              "scales": Object {
                "barsPadding": 0.25,
                "histogramPadding": 0.05,
              },
              "sharedStyle": Object {
                "default": Object {
                  "opacity": 1,
                },
                "highlighted": Object {
                  "opacity": 1,
                },
                "unhighlighted": Object {
                  "opacity": 0.25,
                },
              },
              "tooltip": Object {
                "defaultDotColor": "black",
                "maxTableHeight": 120,
                "maxWidth": 500,
              },
            }
          }
          debugState={false}
          externalPointerEvents={
            Object {
              "tooltip": Object {
                "placement": "right",
                "visible": false,
              },
            }
          }
          legendAction={
            Object {
              "$$typeof": Symbol(react.memo),
              "compare": null,
              "type": [Function],
            }
          }
          legendPosition="top"
          legendSize={130}
          legendValues={Array []}
          locale="en"
          noResults={
            <EmptyPlaceholder
              css="unknown styles"
              icon={[Function]}
              renderComplete={[Function]}
            />
          }
          onBrushEnd={[Function]}
          onElementClick={[Function]}
          onPointerUpdate={[Function]}
          onRenderChange={[Function]}
          pointerUpdateDebounce={0}
          rotation={0}
          showLegend={false}
          theme={
            Array [
              Object {
                "background": Object {
                  "color": undefined,
                },
                "barSeriesStyle": Object {},
                "chartMargins": Object {
                  "bottom": 10,
                  "left": 10,
                  "right": 10,
                  "top": 10,
                },
                "legend": Object {
                  "labelOptions": Object {
                    "maxLines": 0,
                  },
                },
                "markSizeRatio": undefined,
              },
              Object {},
            ]
          }
        />
        <XYCurrentTime
          enabled={false}
          isDarkMode={false}
        />
        <Component
          gridLine={
            Object {
              "strokeWidth": 1,
              "visible": true,
            }
          }
          hide={false}
          id="x"
          position="bottom"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": 0,
                "visible": true,
              },
            }
          }
          tickFormat={[Function]}
          timeAxisLayerCount={0}
          title="c"
        />
        <SplitChart
          columns={
            Array [
              Object {
                "id": "a",
                "meta": Object {
                  "params": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "type": "number",
                },
                "name": "a",
              },
              Object {
                "id": "b",
                "meta": Object {
                  "params": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                  "type": "number",
                },
                "name": "b",
              },
              Object {
                "id": "c",
                "meta": Object {
                  "field": "order_date",
                  "params": Object {
                    "id": "string",
                  },
                  "sourceParams": Object {
                    "params": Object {
                      "interval": "auto",
                    },
                    "type": "date-histogram",
                  },
                  "type": "date",
                },
                "name": "c",
              },
              Object {
                "id": "d",
                "meta": Object {
                  "type": "string",
                },
                "name": "ColD",
              },
            ]
          }
          splitRowAccessor="b"
        />
        <Component
          domain={
            Object {
              "fit": false,
              "includeDataFromIds": Array [],
              "max": NaN,
              "min": NaN,
              "padding": undefined,
            }
          }
          gridLine={
            Object {
              "visible": false,
            }
          }
          groupId="left"
          id="left"
          key="left"
          position="left"
          style={
            Object {
              "axisTitle": Object {
                "padding": undefined,
                "visible": true,
              },
              "tickLabel": Object {
                "fill": undefined,
                "padding": undefined,
                "rotation": -90,
                "visible": false,
              },
            }
          }
          tickFormat={[Function]}
          title="a"
        />
        <XyEndzones
          darkMode={false}
          histogramMode={false}
        />
        <DataLayers
          chartHasMoreThanOneBarSeries={true}
          defaultXScaleType="ordinal"
          fieldFormats={
            Object {
              "first": Object {
                "splitColumnAccessors": Object {},
                "splitRowAccessors": Object {
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
                "splitSeriesAccessors": Object {
                  "d": Object {
                    "format": Object {
                      "id": "string",
                    },
                    "formatter": Object {
                      "convert": [MockFunction] {
                        "calls": Array [
                          Array [
                            2,
                          ],
                          Array [
                            1652034840000,
                          ],
                          Array [
                            5,
                          ],
                          Array [
                            1652122440000,
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": 2,
                          },
                          Object {
                            "type": "return",
                            "value": 1652034840000,
                          },
                          Object {
                            "type": "return",
                            "value": 5,
                          },
                          Object {
                            "type": "return",
                            "value": 1652122440000,
                          },
                        ],
                      },
                    },
                  },
                },
                "xAccessors": Object {
                  "c": Object {
                    "id": "string",
                  },
                },
                "yAccessors": Object {
                  "a": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                  "b": Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                },
              },
            }
          }
          formatFactory={
            [MockFunction] {
              "calls": Array [
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "000,0",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "string",
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
                Array [
                  Object {
                    "id": "number",
                    "params": Object {
                      "pattern": "0,0.000",
                    },
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
                Object {
                  "type": "return",
                  "value": Object {
                    "convert": [MockFunction] {
                      "calls": Array [
                        Array [
                          2,
                        ],
                        Array [
                          1652034840000,
                        ],
                        Array [
                          5,
                        ],
                        Array [
                          1652122440000,
                        ],
                      ],
                      "results": Array [
                        Object {
                          "type": "return",
                          "value": 2,
                        },
                        Object {
                          "type": "return",
                          "value": 1652034840000,
                        },
                        Object {
                          "type": "return",
                          "value": 5,
                        },
                        Object {
                          "type": "return",
                          "value": 1652122440000,
                        },
                      ],
                    },
                  },
                },
              ],
            }
          }
          formattedDatatables={
            Object {
              "first": Object {
                "formattedColumns": Object {
                  "b": true,
                  "c": true,
                },
                "invertedRawValueMap": Map {
                  "a" => Map {},
                  "b" => Map {
                    2 => 2,
                    5 => 5,
                  },
                  "c" => Map {
                    1652034840000 => 1652034840000,
                    1652122440000 => 1652122440000,
                  },
                  "d" => Map {},
                },
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
              },
            }
          }
          isDarkMode={false}
          layers={
            Array [
              Object {
                "accessors": Array [
                  "a",
                  "b",
                ],
                "columnToLabel": "{\\"a\\": \\"Label A\\", \\"b\\": \\"Label B\\", \\"d\\": \\"Label D\\"}",
                "isHistogram": false,
                "isHorizontal": false,
                "isPercentage": false,
                "isStacked": false,
                "layerId": "first",
                "layerType": "data",
                "palette": Object {
                  "name": "mock",
                  "params": Object {},
                  "type": "palette",
                },
                "seriesType": "bar",
                "showLines": true,
                "splitAccessors": Array [
                  "d",
                ],
                "table": Object {
                  "columns": Array [
                    Object {
                      "id": "a",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "0,0.000",
                          },
                        },
                        "type": "number",
                      },
                      "name": "a",
                    },
                    Object {
                      "id": "b",
                      "meta": Object {
                        "params": Object {
                          "id": "number",
                          "params": Object {
                            "pattern": "000,0",
                          },
                        },
                        "type": "number",
                      },
                      "name": "b",
                    },
                    Object {
                      "id": "c",
                      "meta": Object {
                        "field": "order_date",
                        "params": Object {
                          "id": "string",
                        },
                        "sourceParams": Object {
                          "params": Object {
                            "interval": "auto",
                          },
                          "type": "date-histogram",
                        },
                        "type": "date",
                      },
                      "name": "c",
                    },
                    Object {
                      "id": "d",
                      "meta": Object {
                        "type": "string",
                      },
                      "name": "ColD",
                    },
                  ],
                  "rows": Array [
                    Object {
                      "a": 1,
                      "b": 2,
                      "c": 1652034840000,
                      "d": "Foo",
                    },
                    Object {
                      "a": 1,
                      "b": 5,
                      "c": 1652122440000,
                      "d": "Bar",
                    },
                  ],
                  "type": "datatable",
                },
                "type": "dataLayer",
                "xAccessor": "c",
                "xScaleType": "ordinal",
              },
            ]
          }
          minBarHeight={1}
          paletteService={
            Object {
              "get": [MockFunction],
              "getAll": [MockFunction],
            }
          }
          palettes={
            KbnPalettes {
              "_aliasMappings": Map {
                "default" => "eui_amsterdam",
                "eui_amsterdam_color_blind" => "eui_amsterdam",
                "kibana_palette" => "kibana_v7_legacy",
                "complimentary" => "complementary",
                "positive" => "green",
                "negative" => "red",
              },
              "_defaultPalette": KbnColorFnPalette {
                "_colorFn": [Function],
                "_defaultNumberOfColors": 30,
                "aliases": Array [
                  "default",
                  "eui_amsterdam_color_blind",
                ],
                "colorCount": 10,
                "colors": [Function],
                "getColor": [Function],
                "id": "eui_amsterdam",
                "legacy": false,
                "name": "Kibana 7.0",
                "standalone": false,
                "type": "categorical",
              },
              "_palettes": Map {
                "eui_amsterdam" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [
                    "default",
                    "eui_amsterdam_color_blind",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "eui_amsterdam",
                  "legacy": false,
                  "name": "Kibana 7.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "kibana_v7_legacy" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#00a69b",
                    "#57c17b",
                    "#6f87d8",
                    "#663db8",
                    "#bc52bc",
                    "#9e3533",
                    "#daa05d",
                    "#bfaf40",
                    "#4050bf",
                    "#bf5040",
                    "#40afbf",
                    "#70bf40",
                    "#8f40bf",
                    "#bf40a7",
                    "#40bf58",
                    "#bf9740",
                    "#4068bf",
                    "#bf4048",
                    "#40bfb7",
                    "#87bf40",
                  ],
                  "aliases": Array [
                    "kibana_palette",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "kibana_v7_legacy",
                  "legacy": false,
                  "name": "Kibana 4.0",
                  "standalone": false,
                  "type": "categorical",
                },
                "behind_text" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 30,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "behind_text",
                  "legacy": false,
                  "name": "Kibana 7.0 (behind text)",
                  "standalone": true,
                  "type": "categorical",
                },
                "neutral" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#f2f4fb",
                    "#d4d9e5",
                    "#98a2b3",
                    "#696f7d",
                    "#353642",
                  ],
                  "aliases": Array [],
                  "colorCount": 5,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "neutral",
                  "legacy": false,
                  "name": "Neutral",
                  "standalone": true,
                  "type": "categorical",
                },
                "complementary" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "complimentary",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "complementary",
                  "legacy": false,
                  "name": "Complementary",
                  "standalone": false,
                  "type": "gradient",
                },
                "cool" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "cool",
                  "legacy": false,
                  "name": "Cool",
                  "standalone": false,
                  "type": "gradient",
                },
                "gray" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "gray",
                  "legacy": false,
                  "name": "Gray",
                  "standalone": false,
                  "type": "gradient",
                },
                "green" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "positive",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "green",
                  "legacy": false,
                  "name": "Positive",
                  "standalone": false,
                  "type": "gradient",
                },
                "red" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [
                    "negative",
                  ],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "red",
                  "legacy": false,
                  "name": "Negative",
                  "standalone": false,
                  "type": "gradient",
                },
                "status" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "status",
                  "legacy": false,
                  "name": "Status",
                  "standalone": false,
                  "type": "gradient",
                },
                "temperature" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "temperature",
                  "legacy": false,
                  "name": "Temperature",
                  "standalone": false,
                  "type": "gradient",
                },
                "warm" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "warm",
                  "legacy": false,
                  "name": "Warm",
                  "standalone": false,
                  "type": "gradient",
                },
                "elastic_brand_2023" => KbnCategoricalPalette {
                  "_colors": Array [
                    "#20377d",
                    "#7de2d1",
                    "#ff957d",
                    "#f04e98",
                    "#0077cc",
                    "#fec514",
                  ],
                  "aliases": Array [],
                  "colorCount": 6,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "elastic_brand_2023",
                  "legacy": false,
                  "name": "Elastic classic",
                  "standalone": false,
                  "type": "categorical",
                },
                "compare_to" => KbnColorFnPalette {
                  "_colorFn": [Function],
                  "_defaultNumberOfColors": 10,
                  "aliases": Array [],
                  "colorCount": 10,
                  "colors": [Function],
                  "getColor": [Function],
                  "id": "compare_to",
                  "legacy": false,
                  "name": "Trend",
                  "standalone": true,
                  "type": "gradient",
                },
              },
              "get": [Function],
              "getAll": [Function],
              "query": [Function],
            }
          }
          shouldShowValueLabels={true}
          syncColors={false}
          timeZone="UTC"
          titles={
            Object {
              "first": Object {
                "markSizeTitles": Object {},
                "splitColumnTitles": Object {},
                "splitRowTitles": Object {
                  "b": "b",
                },
                "splitSeriesTitles": Object {
                  "d": "ColD",
                },
                "xTitles": Object {
                  "c": "c",
                },
                "yTitles": Object {
                  "a": "a",
                  "b": "b",
                },
              },
            }
          }
          valueLabels="hide"
          xAxisConfiguration={
            Object {
              "groupId": "bottom",
              "labelsOrientation": 0,
              "position": "bottom",
              "series": Array [],
              "showGridLines": true,
              "showLabels": true,
              "showTitle": true,
              "title": "",
              "type": "xAxisConfig",
            }
          }
          yAxesConfiguration={
            Array [
              Object {
                "extent": Object {
                  "mode": "full",
                  "type": "axisExtentConfig",
                },
                "formatter": Object {
                  "convert": [MockFunction] {
                    "calls": Array [
                      Array [
                        2,
                      ],
                      Array [
                        1652034840000,
                      ],
                      Array [
                        5,
                      ],
                      Array [
                        1652122440000,
                      ],
                    ],
                    "results": Array [
                      Object {
                        "type": "return",
                        "value": 2,
                      },
                      Object {
                        "type": "return",
                        "value": 1652034840000,
                      },
                      Object {
                        "type": "return",
                        "value": 5,
                      },
                      Object {
                        "type": "return",
                        "value": 1652122440000,
                      },
                    ],
                  },
                },
                "groupId": "left",
                "labelsOrientation": -90,
                "position": "left",
                "series": Array [
                  Object {
                    "accessor": "a",
                    "layer": "first",
                  },
                  Object {
                    "accessor": "b",
                    "layer": "first",
                  },
                ],
                "showGridLines": false,
                "showLabels": false,
                "showTitle": true,
                "title": "",
                "type": "yAxisConfig",
              },
            ]
          }
        />
      </Chart>
    </ContextProvider>
  </div>
</Fragment>
`;
