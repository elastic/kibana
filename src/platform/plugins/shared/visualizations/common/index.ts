/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */

// TODO: https://github.com/elastic/kibana/issues/110891

/** @public types */
export type {
  VisParams,
  SavedVisState,
  VisualizationSavedObjectAttributes,
  VisualizationSavedObject,
  SerializedVisData,
  SerializedVis,
  SupportedAggregation,
  GenericSchemaConfig,
  SchemaConfig,
} from './types';
export type { Dimension, PaletteConfig } from './utils';
export {
  prepareLogTable,
  findAccessor,
  findAccessorOrFail,
  getAccessorByDimension,
  validateAccessor,
  getColumnByAccessor,
  isVisDimension,
  getAccessor,
  getFormatByAccessor,
  getStopsWithColorsFromRanges,
} from './utils';
export type {
  Arguments,
  ExpressionValueVisDimension,
  ExpressionFunctionVisDimension,
} from './expression_functions';
export { range, visDimension } from './expression_functions';
export type {
  AggBasedColumn,
  DataType,
  TimeScaleUnit,
  SortingHint,
  FilterQuery,
  Filter,
  Range,
  NumberValueFormat,
  MinMax,
  BasicFullPercentageModeConfig,
  BasicPercentageModeConfig,
  PercentageModeConfigWithMinMax,
  PercentageModeConfig,
  RangeMode,
  FormatParams,
  FiltersParams,
  TermsParams,
  DateHistogramParams,
  RangeParams,
  MinParams,
  MaxParams,
  AvgParams,
  SumParams,
  MedianParams,
  StandardDeviationParams,
  CardinalityParams,
  CumulativeSumParams,
  CounterRateParams,
  DerivativeParams,
  CountParams,
  PercentileParams,
  PercentileRanksParams,
  LastValueParams,
  MovingAverageParams,
  FormulaParams,
  StaticValueParams,
  TimeScaleParams,
  Operation,
  OperationWithSourceField,
  OperationWithReferences,
  BaseColumn,
  ColumnWithSourceField,
  ColumnWithReferences,
  FiltersColumn,
  RangeColumn,
  TermsColumn,
  DateHistogramColumn,
  MinColumn,
  MaxColumn,
  AvgColumn,
  SumColumn,
  MedianColumn,
  StandardDeviationColumn,
  CardinalityColumn,
  PercentileColumn,
  PercentileRanksColumn,
  CountColumn,
  LastValueColumn,
  CumulativeSumColumn,
  CounterRateColumn,
  DerivativeColumn,
  MovingAverageColumn,
  FormulaColumn,
  StaticValueColumn,
  AnyColumnWithSourceField,
  AnyColumnWithReferences,
  Column,
  GenericColumnWithMeta,
  ColumnWithMeta,
  Layer,
  NavigateToLensContext,
  ChartShapes,
  CollapseFunction,
  FillType,
  SeriesType,
  YAxisMode,
  XYCurveType,
  PartitionChartType,
  CategoryDisplayType,
  NumberDisplayType,
  LegendDisplayType,
  LayerType,
  GaugeColorMode,
  GaugeShape,
  GaugeLabelMajorMode,
  GaugeCentralMajorMode,
  GaugeTicksPosition,
  AxisExtentConfig,
  YConfig,
  XYDataLayerConfig,
  XYReferenceLineLayerConfig,
  EventAnnotationConfig,
  XYAnnotationsLayerConfig,
  XYLayerConfig,
  AxesSettingsConfig,
  LabelsOrientationConfig,
  LegendConfig,
  XYConfiguration,
  SortingState,
  PagingState,
  ColumnState,
  TableVisConfiguration,
  MetricVisConfiguration,
  PartitionLayerState,
  PartitionVisConfiguration,
  GaugeVisConfiguration,
  HeatmapLegendConfig,
  HeatmapGridConfig,
  HeatmapArguments,
  HeatmapLayerState,
  Palette,
  HeatmapConfiguration,
  TagcloudVisConfiguration,
  Configuration,
} from './convert_to_lens';
export {
  LENS_GAUGE_ID,
  GROUP_ID,
  OperationsWithSourceField,
  OperationsWithReferences,
  Operations,
  PartitionChartTypes,
  CategoryDisplayTypes,
  NumberDisplayTypes,
  LegendDisplayTypes,
  LayerTypes,
  XYCurveTypes,
  YAxisModes,
  SeriesTypes,
  FillTypes,
  RANGE_MODES,
  GaugeShapes,
  GaugeTicksPositions,
  GaugeLabelMajorModes,
  GaugeCentralMajorModes,
  GaugeColorModes,
  CollapseFunctions,
  isAnnotationsLayer,
  getIndexPatternIds,
  isFieldValid,
  isCollapseFunction,
  excludeMetaFromColumn,
} from './convert_to_lens';
export { convertToSchemaConfig } from './vis_schemas';

export {
  LegendSize,
  LegendSizeToPixels,
  DEFAULT_LEGEND_SIZE,
  LegendLayout,
  type XYLegendValue,
  type PartitionLegendValue,
} from './constants';
