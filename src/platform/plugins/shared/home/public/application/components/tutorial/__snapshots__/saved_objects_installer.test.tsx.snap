// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`bulkCreate should display error message when bulkCreate request fails 1`] = `
<body>
  <div>
    <h2
      class="euiTitle emotion-euiTitle-m"
    >
      Load Kibana objects
    </h2>
    <div
      class="euiFlexGroup emotion-euiFlexGroup-responsive-l-spaceBetween-center-row"
    >
      <div
        class="euiFlexItem emotion-euiFlexItem-grow-1"
      >
        <div
          class="euiText emotion-euiText-m"
        >
          <p>
            Imports index pattern, visualizations and pre-defined dashboards.
          </p>
        </div>
      </div>
      <div
        class="euiFlexItem emotion-euiFlexItem-growZero"
      >
        <button
          class="euiButton emotion-euiButtonDisplay-m-defaultMinWidth-base-primary"
          data-test-subj="loadSavedObjects"
          type="button"
        >
          <span
            class="emotion-euiButtonDisplayContent"
          >
            <span
              class="eui-textTruncate"
            >
              Load Kibana objects
            </span>
          </span>
        </button>
      </div>
    </div>
    <div
      class="euiSpacer euiSpacer--s emotion-euiSpacer-s"
    />
    <div
      class="euiPanel euiPanel--warning euiPanel--paddingMedium euiCallOut euiCallOut--warning emotion-euiPanel-none-m-warning-euiCallOut"
      data-test-subj="loadSavedObjects_failed"
    >
      <p
        class="euiTitle euiCallOutHeader__title emotion-euiTitle-xs-euiCallOutHeader-warning"
      >
        Request failed, Error: simulated bulkRequest error
      </p>
    </div>
  </div>
</body>
`;

exports[`bulkCreate should display success message when bulkCreate is successful 1`] = `
<body>
  <div>
    <h2
      class="euiTitle emotion-euiTitle-m"
    >
      Load Kibana objects
    </h2>
    <div
      class="euiFlexGroup emotion-euiFlexGroup-responsive-l-spaceBetween-center-row"
    >
      <div
        class="euiFlexItem emotion-euiFlexItem-grow-1"
      >
        <div
          class="euiText emotion-euiText-m"
        >
          <p>
            Imports index pattern, visualizations and pre-defined dashboards.
          </p>
        </div>
      </div>
      <div
        class="euiFlexItem emotion-euiFlexItem-growZero"
      >
        <button
          class="euiButton emotion-euiButtonDisplay-m-defaultMinWidth-base-primary"
          data-test-subj="loadSavedObjects"
          type="button"
        >
          <span
            class="emotion-euiButtonDisplayContent"
          >
            <span
              class="eui-textTruncate"
            >
              Load Kibana objects
            </span>
          </span>
        </button>
      </div>
    </div>
    <div
      class="euiSpacer euiSpacer--s emotion-euiSpacer-s"
    />
    <div
      class="euiPanel euiPanel--success euiPanel--paddingMedium euiCallOut euiCallOut--success emotion-euiPanel-none-m-success-euiCallOut"
      data-test-subj="loadSavedObjects_success"
    >
      <p
        class="euiTitle euiCallOutHeader__title emotion-euiTitle-xs-euiCallOutHeader-success"
      >
        1 saved objects successfully added
      </p>
    </div>
  </div>
</body>
`;

exports[`renders 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <h2
        class="euiTitle emotion-euiTitle-m"
      >
        Load Kibana objects
      </h2>
      <div
        class="euiFlexGroup emotion-euiFlexGroup-responsive-l-spaceBetween-center-row"
      >
        <div
          class="euiFlexItem emotion-euiFlexItem-grow-1"
        >
          <div
            class="euiText emotion-euiText-m"
          >
            <p>
              Imports index pattern, visualizations and pre-defined dashboards.
            </p>
          </div>
        </div>
        <div
          class="euiFlexItem emotion-euiFlexItem-growZero"
        >
          <button
            class="euiButton emotion-euiButtonDisplay-m-defaultMinWidth-base-primary"
            data-test-subj="loadSavedObjects"
            type="button"
          >
            <span
              class="emotion-euiButtonDisplayContent"
            >
              <span
                class="eui-textTruncate"
              >
                Load Kibana objects
              </span>
            </span>
          </button>
        </div>
      </div>
      <div
        class="euiSpacer euiSpacer--s emotion-euiSpacer-s"
      />
    </div>
  </body>,
  "container": <div>
    <h2
      class="euiTitle emotion-euiTitle-m"
    >
      Load Kibana objects
    </h2>
    <div
      class="euiFlexGroup emotion-euiFlexGroup-responsive-l-spaceBetween-center-row"
    >
      <div
        class="euiFlexItem emotion-euiFlexItem-grow-1"
      >
        <div
          class="euiText emotion-euiText-m"
        >
          <p>
            Imports index pattern, visualizations and pre-defined dashboards.
          </p>
        </div>
      </div>
      <div
        class="euiFlexItem emotion-euiFlexItem-growZero"
      >
        <button
          class="euiButton emotion-euiButtonDisplay-m-defaultMinWidth-base-primary"
          data-test-subj="loadSavedObjects"
          type="button"
        >
          <span
            class="emotion-euiButtonDisplayContent"
          >
            <span
              class="eui-textTruncate"
            >
              Load Kibana objects
            </span>
          </span>
        </button>
      </div>
    </div>
    <div
      class="euiSpacer euiSpacer--s emotion-euiSpacer-s"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
