/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */

import React from 'react';
import { i18n } from '@kbn/i18n';
import { Markdown as SharedUXMarkdown } from '@kbn/shared-ux-markdown';

const Markdown = (props: Parameters<typeof SharedUXMarkdown>[0]) => (
  <SharedUXMarkdown {...props} readOnly enableSoftLineBreaks />
);

// DO NOT RENAME!
export const functions = {
  label: i18n.translate('languageDocumentation.documentationESQL.timeseriesAggregationFunctions', {
    defaultMessage: 'Timeseries aggregation functions',
  }),
  description: i18n.translate(
    'languageDocumentation.documentationESQL.timeseriesAggregationFunctionsDocumentationESQLDescription',
    {
      defaultMessage: `These functions can by used with STATS ...BY when a TS command is used:`,
    }
  ),
  // items are managed by scripts/generate_esql_docs.ts
  items: [
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.absent_over_time', {
        defaultMessage: 'ABSENT_OVER_TIME',
      }),
      preview: false,
      license: undefined,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.absent_over_time.markdown',
            {
              defaultMessage: `
  ### ABSENT OVER TIME
  The absence of a field in the output result over time range.

  Note: Available with the [TS](https://www.elastic.co/docs/reference/query-languages/esql/commands/source-commands#esql-ts) command in snapshot builds

  \`\`\`esql
  TS k8s
  | WHERE cluster == "prod" AND pod == "two"
  | STATS events_received = max(absent_over_time(events_received)) BY pod, time_bucket = tbucket(2 minute)
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.avg_over_time', {
        defaultMessage: 'AVG_OVER_TIME',
      }),
      preview: false,
      license: undefined,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.avg_over_time.markdown',
            {
              defaultMessage: `
  ### AVG OVER TIME
  The average over time of a numeric field.

  Note: Available with the [TS](https://www.elastic.co/docs/reference/query-languages/esql/commands/source-commands#esql-ts) command in snapshot builds

  \`\`\`esql
  TS k8s
  | STATS max_cost=max(avg_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute)
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.count_distinct_over_time', {
        defaultMessage: 'COUNT_DISTINCT_OVER_TIME',
      }),
      preview: false,
      license: undefined,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.count_distinct_over_time.markdown',
            {
              defaultMessage: `
  ### COUNT DISTINCT OVER TIME
  The count of distinct values over time for a field.

  Note: Available with the [TS](https://www.elastic.co/docs/reference/query-languages/esql/commands/source-commands#esql-ts) command in snapshot builds

  \`\`\`esql
  TS k8s
  | STATS distincts=count_distinct(count_distinct_over_time(network.cost)),
          distincts_imprecise=count_distinct(count_distinct_over_time(network.cost, 100))
    BY cluster, time_bucket = bucket(@timestamp,1minute)
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.count_over_time', {
        defaultMessage: 'COUNT_OVER_TIME',
      }),
      preview: false,
      license: undefined,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.count_over_time.markdown',
            {
              defaultMessage: `
  ### COUNT OVER TIME
  The count over time value of a field.

  Note: Available with the [TS](https://www.elastic.co/docs/reference/query-languages/esql/commands/source-commands#esql-ts) command in snapshot builds

  \`\`\`esql
  TS k8s
  | STATS count=count(count_over_time(network.cost))
    BY cluster, time_bucket = bucket(@timestamp,1minute)
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.first_over_time', {
        defaultMessage: 'FIRST_OVER_TIME',
      }),
      preview: false,
      license: undefined,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.first_over_time.markdown',
            {
              defaultMessage: `
  ### FIRST OVER TIME
  The earliest value of a field, where recency determined by the \`@timestamp\` field.

  Note: Available with the [TS](https://www.elastic.co/docs/reference/query-languages/esql/commands/source-commands#esql-ts) command in snapshot builds

  \`\`\`esql
  TS k8s
  | STATS max_cost=max(first_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute)
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.last_over_time', {
        defaultMessage: 'LAST_OVER_TIME',
      }),
      preview: false,
      license: undefined,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.last_over_time.markdown',
            {
              defaultMessage: `
  ### LAST OVER TIME
  The latest value of a field, where recency determined by the \`@timestamp\` field.

  Note: Available with the [TS](https://www.elastic.co/docs/reference/query-languages/esql/commands/source-commands#esql-ts) command in snapshot builds

  \`\`\`esql
  TS k8s
  | STATS max_cost=max(last_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute)
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.max_over_time', {
        defaultMessage: 'MAX_OVER_TIME',
      }),
      preview: false,
      license: undefined,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.max_over_time.markdown',
            {
              defaultMessage: `
  ### MAX OVER TIME
  The maximum over time value of a field.

  Note: Available with the [TS](https://www.elastic.co/docs/reference/query-languages/esql/commands/source-commands#esql-ts) command in snapshot builds

  \`\`\`esql
  TS k8s
  | STATS cost=sum(max_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute)
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.min_over_time', {
        defaultMessage: 'MIN_OVER_TIME',
      }),
      preview: false,
      license: undefined,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.min_over_time.markdown',
            {
              defaultMessage: `
  ### MIN OVER TIME
  The minimum over time value of a field.

  Note: Available with the [TS](https://www.elastic.co/docs/reference/query-languages/esql/commands/source-commands#esql-ts) command in snapshot builds

  \`\`\`esql
  TS k8s
  | STATS cost=sum(min_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute)
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.present_over_time', {
        defaultMessage: 'PRESENT_OVER_TIME',
      }),
      preview: false,
      license: undefined,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.present_over_time.markdown',
            {
              defaultMessage: `
  ### PRESENT OVER TIME
  The presence of a field in the output result over time range.

  Note: Available with the [TS](https://www.elastic.co/docs/reference/query-languages/esql/commands/source-commands#esql-ts) command in snapshot builds

  \`\`\`esql
  TS k8s
  | WHERE cluster == "prod" AND pod == "two"
  | STATS events_received = max(present_over_time(events_received)) BY pod, time_bucket = tbucket(2 minute)
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.rate', {
        defaultMessage: 'RATE',
      }),
      preview: false,
      license: undefined,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate('languageDocumentation.documentationESQL.rate.markdown', {
            defaultMessage: `
  ### RATE
  The rate of a counter field.

  Note: Available with the [TS](https://www.elastic.co/docs/reference/query-languages/esql/commands/source-commands#esql-ts) command in snapshot builds

  \`\`\`esql
  TS k8s
  | STATS max(rate(network.total_bytes_in)) BY time_bucket = bucket(@timestamp,5minute)
  \`\`\`
  `,
            description:
              'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
            ignoreTag: true,
          })}
        />
      ),
    },
  ],
};
