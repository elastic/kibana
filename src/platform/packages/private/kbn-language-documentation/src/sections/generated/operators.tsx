/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */

import React from 'react';
import { i18n } from '@kbn/i18n';
import { Markdown } from '@kbn/shared-ux-markdown';

// DO NOT RENAME!
export const functions = {
  label: i18n.translate('languageDocumentation.documentationESQL.operators', {
    defaultMessage: 'Operators',
  }),
  description: i18n.translate('languageDocumentation.documentationESQL.operators', {
    defaultMessage: `ES|QL supports the following operators:`,
  }),
  // items are managed by scripts/generate_esql_docs.ts
  items: [
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.add (+)', {
        defaultMessage: 'ADD (+)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.add (+).markdown',
            {
              defaultMessage: `
  ### ADD \`+\`
  Add two numbers together. If either field is [multivalued](https://www.elastic.co/docs/reference/query-languages/esql/esql-multivalued-fields) then the result is \`null\`.

  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.cast (::)', {
        defaultMessage: 'CAST (::)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.cast (::).markdown',
            {
              defaultMessage: `
  ### CAST \`::\`
  The \`::\` operator provides a convenient alternative syntax to the TO_<type> [conversion functions](https://www.elastic.co/docs/reference/query-languages/esql/functions-operators/type-conversion-functions).

  \`\`\`esql
  ROW ver = CONCAT(("0"::INT + 1)::STRING, ".2.3")::VERSION
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.divide (/)', {
        defaultMessage: 'DIVIDE (/)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.divide (/).markdown',
            {
              defaultMessage: `
  ### DIVIDE \`/\`
  Divide one number by another. If either field is [multivalued](https://www.elastic.co/docs/reference/query-languages/esql/esql-multivalued-fields) then the result is \`null\`.

  Note: Division of two integer types will yield an integer result, rounding towards 0. If you need floating point division, [\`Cast (::)\`](https://www.elastic.co/docs/reference/query-languages/esql/functions-operators/operators#esql-cast-operator) one of the arguments to a \`DOUBLE\`.
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.equals (==)', {
        defaultMessage: 'EQUALS (==)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.equals (==).markdown',
            {
              defaultMessage: `
  ### EQUALS \`==\`
  Check if two fields are equal. If either field is [multivalued](https://www.elastic.co/docs/reference/query-languages/esql/esql-multivalued-fields) then the result is \`null\`.

  Note: This is pushed to the underlying search index if one side of the comparison is constant and the other side is a field in the index that has both an [mapping-index](https://www.elastic.co/docs/reference/elasticsearch/mapping-reference/mapping-index) and [doc-values](https://www.elastic.co/docs/reference/elasticsearch/mapping-reference/doc-values).
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.greater_than (>)', {
        defaultMessage: 'GREATER_THAN (>)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.greater_than (>).markdown',
            {
              defaultMessage: `
  ### GREATER THAN \`>\`
  Check if one field is greater than another. If either field is [multivalued](https://www.elastic.co/docs/reference/query-languages/esql/esql-multivalued-fields) then the result is \`null\`.

  Note: This is pushed to the underlying search index if one side of the comparison is constant and the other side is a field in the index that has both an [mapping-index](https://www.elastic.co/docs/reference/elasticsearch/mapping-reference/mapping-index) and [doc-values](https://www.elastic.co/docs/reference/elasticsearch/mapping-reference/doc-values).
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.greater_than_or_equal (>=)', {
        defaultMessage: 'GREATER_THAN_OR_EQUAL (>=)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.greater_than_or_equal (>=).markdown',
            {
              defaultMessage: `
  ### GREATER THAN OR EQUAL \`>=\`
  Check if one field is greater than or equal to another. If either field is [multivalued](https://www.elastic.co/docs/reference/query-languages/esql/esql-multivalued-fields) then the result is \`null\`.

  Note: This is pushed to the underlying search index if one side of the comparison is constant and the other side is a field in the index that has both an [mapping-index](https://www.elastic.co/docs/reference/elasticsearch/mapping-reference/mapping-index) and [doc-values](https://www.elastic.co/docs/reference/elasticsearch/mapping-reference/doc-values).
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.in (IN)', {
        defaultMessage: 'IN (IN)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.in (IN).markdown',
            {
              defaultMessage: `
  ### IN
  The \`IN\` operator allows testing whether a field or expression equals an element in a list of literals, fields or expressions.

  \`\`\`esql
  ROW a = 1, b = 4, c = 3
  | WHERE c-a IN (3, b / 2, a)
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.is_not_null (IS NOT NULL)', {
        defaultMessage: 'IS_NOT_NULL (IS NOT NULL)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.is_not_null (IS NOT NULL).markdown',
            {
              defaultMessage: `
  ### IS NOT NULL
  Use \`IS NOT NULL\` to filter data based on whether the field exists or not.

  \`\`\`esql
  FROM employees
  | WHERE is_rehired IS NOT NULL
  | STATS COUNT(emp_no)
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.is_null (IS NULL)', {
        defaultMessage: 'IS_NULL (IS NULL)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.is_null (IS NULL).markdown',
            {
              defaultMessage: `
  ### IS NULL
  Use \`IS NULL\` to filter data based on whether the field exists or not.

  \`\`\`esql
  FROM employees
  | WHERE birth_date IS NULL
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.less_than (<)', {
        defaultMessage: 'LESS_THAN (<)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.less_than (<).markdown',
            {
              defaultMessage: `
  ### LESS THAN \`<\`
  Check if one field is less than another. If either field is [multivalued](https://www.elastic.co/docs/reference/query-languages/esql/esql-multivalued-fields) then the result is \`null\`.

  Note: This is pushed to the underlying search index if one side of the comparison is constant and the other side is a field in the index that has both an [mapping-index](https://www.elastic.co/docs/reference/elasticsearch/mapping-reference/mapping-index) and [doc-values](https://www.elastic.co/docs/reference/elasticsearch/mapping-reference/doc-values).
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.less_than_or_equal (<=)', {
        defaultMessage: 'LESS_THAN_OR_EQUAL (<=)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.less_than_or_equal (<=).markdown',
            {
              defaultMessage: `
  ### LESS THAN OR EQUAL \`<=\`
  Check if one field is less than or equal to another. If either field is [multivalued](https://www.elastic.co/docs/reference/query-languages/esql/esql-multivalued-fields) then the result is \`null\`.

  Note: This is pushed to the underlying search index if one side of the comparison is constant and the other side is a field in the index that has both an [mapping-index](https://www.elastic.co/docs/reference/elasticsearch/mapping-reference/mapping-index) and [doc-values](https://www.elastic.co/docs/reference/elasticsearch/mapping-reference/doc-values).
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.like (LIKE)', {
        defaultMessage: 'LIKE (LIKE)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.like (LIKE).markdown',
            {
              defaultMessage: `
  ### LIKE
  Use \`LIKE\` to filter data based on string patterns using wildcards. \`LIKE\`
  usually acts on a field placed on the left-hand side of the operator, but it can
  also act on a constant (literal) expression. The right-hand side of the operator
  represents the pattern or a list of patterns. If a list of patterns is provided,
  the expression will return true if any of the patterns match.

  The following wildcard characters are supported:

  * \`*\` matches zero or more characters.
  * \`?\` matches one character.

  \`\`\`esql
  FROM employees
  | WHERE first_name LIKE """?b*"""
  | KEEP first_name, last_name
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.match_operator (:)', {
        defaultMessage: 'MATCH_OPERATOR (:)',
      }),
      preview: true,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.match_operator (:).markdown',
            {
              defaultMessage: `
  ### MATCH OPERATOR \`:\`
  Use the match operator (\`:\`) to perform a [match query](https://www.elastic.co/docs/reference/query-languages/query-dsl/query-dsl-match-query) on the specified field.
  Using \`:\` is equivalent to using the \`match\` query in the Elasticsearch Query DSL.

  The match operator is equivalent to the [match function](https://www.elastic.co/docs/reference/query-languages/esql/functions-operators/aggregation-functions#esql-match).

  For using the function syntax, or adding [match query parameters](https://www.elastic.co/docs/reference/query-languages/query-dsl/query-dsl-match-query#match-field-params), you can use the
  [match function](https://www.elastic.co/docs/reference/query-languages/esql/functions-operators/aggregation-functions#esql-match).

  \`:\` returns true if the provided query matches the row.

  \`\`\`esql
  FROM books
  | WHERE author:"Faulkner"
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.modulo (%)', {
        defaultMessage: 'MODULO (%)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.modulo (%).markdown',
            {
              defaultMessage: `
  ### MODULO \`%\`
  Divide one number by another and return the remainder. If either field is [multivalued](https://www.elastic.co/docs/reference/query-languages/esql/esql-multivalued-fields) then the result is \`null\`.

  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.multiply (*)', {
        defaultMessage: 'MULTIPLY (*)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.multiply (*).markdown',
            {
              defaultMessage: `
  ### MULTIPLY \`*\`
  Multiply two numbers together. If either field is [multivalued](https://www.elastic.co/docs/reference/query-languages/esql/esql-multivalued-fields) then the result is \`null\`.

  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.negate (-)', {
        defaultMessage: 'NEGATE (-)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.negate (-).markdown',
            {
              defaultMessage: `
  ### NEGATE \`-\`
  Returns the negation of the argument.

  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.not_equals (!=)', {
        defaultMessage: 'NOT_EQUALS (!=)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.not_equals (!=).markdown',
            {
              defaultMessage: `
  ### NOT EQUALS \`!=\`
  Check if two fields are unequal. If either field is [multivalued](https://www.elastic.co/docs/reference/query-languages/esql/esql-multivalued-fields) then the result is \`null\`.

  Note: This is pushed to the underlying search index if one side of the comparison is constant and the other side is a field in the index that has both an [mapping-index](https://www.elastic.co/docs/reference/elasticsearch/mapping-reference/mapping-index) and [doc-values](https://www.elastic.co/docs/reference/elasticsearch/mapping-reference/doc-values).
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.rlike (RLIKE)', {
        defaultMessage: 'RLIKE (RLIKE)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.rlike (RLIKE).markdown',
            {
              defaultMessage: `
  ### RLIKE
  Use \`RLIKE\` to filter data based on string patterns using using
  [regular expressions](https://www.elastic.co/docs/reference/query-languages/query-dsl/regexp-syntax). \`RLIKE\` usually acts on a field placed on
  the left-hand side of the operator, but it can also act on a constant (literal)
  expression. The right-hand side of the operator represents the pattern.

  \`\`\`esql
  FROM employees
  | WHERE first_name RLIKE """.leja.*"""
  | KEEP first_name, last_name
  \`\`\`
  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
    // Do not edit manually... automatically generated by scripts/generate_esql_docs.ts
    {
      label: i18n.translate('languageDocumentation.documentationESQL.subtract (-)', {
        defaultMessage: 'SUBTRACT (-)',
      }),
      preview: false,
      description: (
        <Markdown
          openLinksInNewTab
          readOnly
          enableSoftLineBreaks
          markdownContent={i18n.translate(
            'languageDocumentation.documentationESQL.subtract (-).markdown',
            {
              defaultMessage: `
  ### SUBTRACT \`-\`
  Subtract one number from another. If either field is [multivalued](https://www.elastic.co/docs/reference/query-languages/esql/esql-multivalued-fields) then the result is \`null\`.

  `,
              description:
                'Text is in markdown. Do not translate function names, special characters, or field names like sum(bytes)',
              ignoreTag: true,
            }
          )}
        />
      ),
    },
  ],
};
