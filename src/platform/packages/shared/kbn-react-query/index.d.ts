/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */

export type {
  CancelledError,
  CancelOptions,
  ContextOptions,
  defaultContext,
  DefaultedInfiniteQueryObserverOptions,
  DefaultedQueryObserverOptions,
  DefaultOptions,
  defaultShouldDehydrateMutation,
  defaultShouldDehydrateQuery,
  DefinedQueryObserverResult,
  DefinedUseBaseQueryResult,
  DefinedUseQueryResult,
  dehydrate,
  DehydratedState,
  DehydrateOptions,
  FetchInfiniteQueryOptions,
  FetchNextPageOptions,
  FetchPreviousPageOptions,
  FetchQueryOptions,
  FetchStatus,
  focusManager,
  GetNextPageParamFunction,
  GetPreviousPageParamFunction,
  hashQueryKey,
  hydrate,
  Hydrate,
  HydrateOptions,
  HydrateProps,
  InfiniteData,
  InfiniteQueryObserver,
  InfiniteQueryObserverBaseResult,
  InfiniteQueryObserverLoadingErrorResult,
  InfiniteQueryObserverLoadingResult,
  InfiniteQueryObserverOptions,
  InfiniteQueryObserverRefetchErrorResult,
  InfiniteQueryObserverResult,
  InfiniteQueryObserverSuccessResult,
  InitialDataFunction,
  InvalidateOptions,
  InvalidateQueryFilters,
  isCancelledError,
  isError,
  IsRestoringProvider,
  isServer,
  Logger,
  matchQuery,
  MutateFunction,
  MutateOptions,
  Mutation, // class, but exported as type-only
  MutationCache,
  MutationFilters,
  MutationFunction,
  MutationKey,
  MutationMeta,
  MutationObserver,
  MutationObserverBaseResult,
  MutationObserverErrorResult,
  MutationObserverIdleResult,
  MutationObserverLoadingResult,
  MutationObserverOptions,
  MutationObserverResult,
  MutationObserverSuccessResult,
  MutationOptions,
  MutationStatus,
  NetworkMode,
  NotifyEvent,
  NotifyEventType,
  notifyManager,
  onlineManager,
  parseFilterArgs,
  parseMutationArgs,
  parseMutationFilterArgs,
  parseQueryArgs,
  PlaceholderDataFunction,
  QueriesObserver,
  QueriesOptions,
  QueriesResults,
  Query, // class, but exported as type-only
  QueryCache,
  QueryClient,
  QueryClientConfig,
  QueryClientProvider,
  QueryClientProviderProps,
  QueryErrorResetBoundary,
  QueryErrorResetBoundaryProps,
  QueryFilters,
  QueryFunction,
  QueryFunctionContext,
  QueryKey,
  QueryKeyHashFunction,
  QueryMeta,
  QueryObserver,
  QueryObserverBaseResult,
  QueryObserverLoadingErrorResult,
  QueryObserverLoadingResult,
  QueryObserverOptions,
  QueryObserverRefetchErrorResult,
  QueryObserverResult,
  QueryObserverSuccessResult,
  QueryOptions,
  QueryState,
  QueryStatus,
  RefetchOptions,
  RefetchPageFilters,
  RefetchQueryFilters,
  replaceEqualDeep,
  ResetOptions,
  ResetQueryFilters,
  ResultOptions,
  SetDataOptions,
  ShouldDehydrateMutationFunction,
  ShouldDehydrateQueryFunction,
  Updater,
  UseBaseMutationResult,
  UseBaseQueryOptions,
  UseBaseQueryResult,
  UseErrorBoundary,
  useHydrate,
  useInfiniteQuery,
  UseInfiniteQueryOptions,
  UseInfiniteQueryResult,
  useIsFetching,
  useIsMutating,
  useIsRestoring,
  UseMutateAsyncFunction,
  UseMutateFunction,
  useMutation,
  UseMutationOptions,
  UseMutationResult,
  useQueries,
  useQuery,
  useQueryClient,
  useQueryErrorResetBoundary,
  UseQueryOptions,
  UseQueryResult,
  WithRequired,
} from '@tanstack/official-react-query';
