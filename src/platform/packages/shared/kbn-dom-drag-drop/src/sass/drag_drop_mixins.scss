// from variables:

$domDragDropZLevel0: 0;
$domDragDropZLevel1: 1;
$domDragDropZLevel2: 2;
$domDragDropZLevel3: 3;

// from mixins

// sass-lint:disable-block indentation, no-color-keywords
@mixin mixinDomDragDrop {
  transition: $euiAnimSpeedFast ease-in-out;
  transition-property: background-color, border-color, opacity;
  z-index: $domDragDropZLevel1;
  border-radius: $euiBorderRadius;
}

// Hovering state for drag item and drop area
@mixin mixinDomDraggableHover {
  &:hover {
    transform: translateX($euiSizeXS);
    transition: transform $euiAnimSpeedSlow ease-out;
  }
}

// Static styles for a drop area
@mixin mixinDomDroppable($borderWidth: $euiBorderWidthThin) {
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    border-radius: $euiBorderRadius;
    border: $borderWidth dashed transparent;
  }
}

// Style for drop area when there's an item being dragged
// Until SCSS -> emotions migration we should continue using "transparentize()" here
@mixin mixinDomDroppableActive($borderWidth: $euiBorderWidthThin) {
  background-color: transparentize($euiColorBackgroundLightSuccess, .7) !important;
  &:before {
    border-color: $euiColorBorderStrongSuccess !important;
  }
}

// Style for drop area while hovering with item
// Until SCSS -> emotions migration we should continue using "transparentize()" here
@mixin mixinDomDroppableHover($borderWidth: $euiBorderWidthThin) {
  background-color: transparentize($euiColorBackgroundFilledSuccess, .75) !important;
  &:before {
    border-color: $euiColorBorderStrongSuccess !important;
  }
}

// Style for drop area that is not allowed for current item
@mixin mixinDomDroppableNotAllowed {
  opacity: .5;
}
