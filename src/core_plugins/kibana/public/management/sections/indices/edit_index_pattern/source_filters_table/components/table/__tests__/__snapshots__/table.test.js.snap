// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Table editing should show a save button 1`] = `
<div>
  <React.Fragment>
    <EuiButtonIcon
      aria-label="Save"
      color="primary"
      iconType="checkInCircleFilled"
      onClick={[Function]}
      size="s"
      type="button"
    />
    <EuiButtonIcon
      aria-label="Cancel"
      color="primary"
      iconType="cross"
      onClick={[Function]}
      size="s"
      type="button"
    />
  </React.Fragment>
</div>
`;

exports[`Table editing should show an input field 1`] = `
<EuiFormControlLayout
  fullWidth={false}
  iconSide="left"
  isLoading={false}
>
  <EuiValidatableControl>
    <input
      className="euiFieldText"
      onChange={[Function]}
      onKeyPress={[Function]}
      type="text"
      value="tim*"
    />
  </EuiValidatableControl>
</EuiFormControlLayout>
`;

exports[`Table should render filter matches 1`] = `
<span>
  time
</span>
`;

exports[`Table should render normally 1`] = `
<EuiTableOfRecords
  config={
    Object {
      "columns": Array [
        Object {
          "dataType": "string",
          "description": "Filter name",
          "field": "value",
          "name": "Filter",
          "render": [Function],
          "sortable": true,
        },
        Object {
          "dataType": "string",
          "description": "Language used for the field",
          "field": "value",
          "name": "Matches",
          "render": [Function],
          "sortable": true,
        },
        Object {
          "align": "right",
          "name": "",
          "render": [Function],
          "width": "100",
        },
      ],
      "onDataCriteriaChange": [Function],
      "pagination": Object {
        "pageSizeOptions": Array [
          5,
          10,
          25,
          50,
        ],
      },
      "recordId": "clientId",
      "selection": undefined,
    }
  }
  model={
    Object {
      "criteria": Object {
        "page": Object {
          "index": 0,
          "size": 10,
        },
        "sort": Object {
          "direction": "asc",
          "field": "value",
        },
      },
      "data": Object {
        "records": Array [
          Object {
            "value": "tim*",
          },
        ],
        "totalRecordCount": 1,
      },
    }
  }
/>
`;
