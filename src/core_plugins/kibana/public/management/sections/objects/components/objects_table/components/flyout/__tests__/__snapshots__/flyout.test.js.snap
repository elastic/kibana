// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Flyout conflicts should allow conflict resolution 1`] = `
<EuiFlyout
  closeButtonAriaLabel="Closes this dialog"
  hideCloseButton={false}
  maxWidth={false}
  onClose={[MockFunction]}
  ownFocus={false}
  size="m"
>
  <EuiFlyoutHeader
    hasBorder={false}
  >
    <EuiTitle
      size="m"
    >
      <h2>
        Import saved objects
      </h2>
    </EuiTitle>
    <React.Fragment>
      <EuiSpacer
        size="s"
      />
      <EuiCallOut
        color="warning"
        iconType="help"
        size="m"
        title="Index Pattern Conflicts"
      >
        <p>
          The following saved objects use index patterns that do not exist. Please select the index patterns you'd like re-associated with them. You can
           
          <EuiLink
            color="primary"
            href=""
            type="button"
          >
            create a new index pattern
          </EuiLink>
           
          if necessary.
        </p>
      </EuiCallOut>
    </React.Fragment>
  </EuiFlyoutHeader>
  <EuiFlyoutBody>
    <EuiInMemoryTable
      columns={
        Array [
          Object {
            "description": "ID of the index pattern",
            "field": "existingIndexPatternId",
            "name": "ID",
            "sortable": true,
          },
          Object {
            "description": "How many affected objects",
            "field": "list",
            "name": "Count",
            "render": [Function],
          },
          Object {
            "description": "Sample of affected objects",
            "field": "list",
            "name": "Sample of affected objects",
            "render": [Function],
          },
          Object {
            "field": "existingIndexPatternId",
            "name": "New index pattern",
            "render": [Function],
          },
        ]
      }
      items={
        Array [
          Object {
            "existingIndexPatternId": "MyIndexPattern*",
            "list": Array [
              Object {
                "id": "MyIndexPattern*",
                "name": "MyIndexPattern*",
                "type": "index-pattern",
              },
            ],
            "newIndexPatternId": undefined,
          },
        ]
      }
      pagination={
        Object {
          "pageSizeOptions": Array [
            5,
            10,
            25,
          ],
        }
      }
      responsive={true}
      sorting={false}
    />
  </EuiFlyoutBody>
  <EuiFlyoutFooter>
    <EuiFlexGroup
      alignItems="stretch"
      component="div"
      direction="row"
      gutterSize="l"
      justifyContent="spaceBetween"
      responsive={true}
      wrap={false}
    >
      <EuiFlexItem
        component="div"
        grow={false}
      >
        <EuiButtonEmpty
          color="primary"
          iconSide="left"
          onClick={[MockFunction]}
          size="s"
          type="button"
        >
          Cancel
        </EuiButtonEmpty>
      </EuiFlexItem>
      <EuiFlexItem
        component="div"
        grow={false}
      >
        <EuiButton
          color="primary"
          data-test-subj="importSavedObjectsConfirmBtn"
          fill={true}
          iconSide="left"
          isLoading={false}
          onClick={[Function]}
          size="s"
          type="button"
        >
          Confirm all changes
        </EuiButton>
      </EuiFlexItem>
    </EuiFlexGroup>
  </EuiFlyoutFooter>
</EuiFlyout>
`;

exports[`Flyout conflicts should handle errors 1`] = `
<EuiCallOut
  color="danger"
  iconType="cross"
  size="m"
  title="Sorry, there was an error"
>
  <p>
    foobar
  </p>
</EuiCallOut>
`;

exports[`Flyout should render import step 1`] = `
<EuiFlyout
  closeButtonAriaLabel="Closes this dialog"
  hideCloseButton={false}
  maxWidth={false}
  onClose={[MockFunction]}
  ownFocus={false}
  size="m"
>
  <EuiFlyoutHeader
    hasBorder={false}
  >
    <EuiTitle
      size="m"
    >
      <h2>
        Import saved objects
      </h2>
    </EuiTitle>
  </EuiFlyoutHeader>
  <EuiFlyoutBody>
    <EuiForm>
      <EuiFormRow
        describedByIds={Array []}
        fullWidth={false}
        hasEmptyLabelSpace={false}
        label="Please select a JSON file to import"
      >
        <EuiFilePicker
          compressed={false}
          initialPromptText="Import"
          onChange={[Function]}
        />
      </EuiFormRow>
      <EuiFormRow
        describedByIds={Array []}
        fullWidth={false}
        hasEmptyLabelSpace={false}
      >
        <EuiSwitch
          checked={true}
          data-test-subj="importSavedObjectsOverwriteToggle"
          label="Automatically overwrite all saved objects?"
          name="overwriteAll"
          onChange={[Function]}
        />
      </EuiFormRow>
    </EuiForm>
  </EuiFlyoutBody>
  <EuiFlyoutFooter>
    <EuiFlexGroup
      alignItems="stretch"
      component="div"
      direction="row"
      gutterSize="l"
      justifyContent="spaceBetween"
      responsive={true}
      wrap={false}
    >
      <EuiFlexItem
        component="div"
        grow={false}
      >
        <EuiButtonEmpty
          color="primary"
          iconSide="left"
          onClick={[MockFunction]}
          size="s"
          type="button"
        >
          Cancel
        </EuiButtonEmpty>
      </EuiFlexItem>
      <EuiFlexItem
        component="div"
        grow={false}
      >
        <EuiButton
          color="primary"
          data-test-subj="importSavedObjectsImportBtn"
          fill={true}
          iconSide="left"
          isLoading={false}
          onClick={[Function]}
          size="s"
          type="button"
        >
          Import
        </EuiButton>
      </EuiFlexItem>
    </EuiFlexGroup>
  </EuiFlyoutFooter>
</EuiFlyout>
`;
