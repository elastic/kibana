// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`bulkCreate should display error message when bulkCreate request fails 1`] = `
<SavedObjectsInstallerUi
  bulkCreate={[Function]}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  savedObjects={
    Array [
      Object {
        "attributes": Object {},
        "id": "1",
        "type": "index-pattern",
      },
    ]
  }
>
  <EuiSteps
    steps={
      Array [
        Object {
          "children": <React.Fragment>
            <EuiFlexGroup
              alignItems="center"
              justifyContent="spaceBetween"
            >
              <EuiFlexItem>
                <EuiText>
                  <p>
                    Imports index pattern, visualizations and pre-defined dashboards.
                  </p>
                </EuiText>
              </EuiFlexItem>
              <EuiFlexItem
                grow={false}
              >
                <EuiButton
                  data-test-subj="loadSavedObjects"
                  isLoading={false}
                  onClick={[Function]}
                >
                  Load Kibana objects
                </EuiButton>
              </EuiFlexItem>
            </EuiFlexGroup>
            <EuiSpacer
              size="s"
            />
            <EuiCallOut
              color="warning"
              data-test-subj="loadSavedObjects_failed"
              title="Request failed, Error: simulated bulkRequest error"
            />
          </React.Fragment>,
          "key": "installStep",
          "status": "incomplete",
          "title": "Load Kibana objects",
        },
      ]
    }
  >
    <div
      className="euiSteps"
    >
      <EuiStep
        headingElement="p"
        key="installStep"
        status="incomplete"
        step={1}
        title="Load Kibana objects"
      >
        <div
          className="euiStep"
        >
          <div
            className="euiStep__titleWrapper"
          >
            <EuiI18n
              default={[Function]}
              token="euiStep.ariaLabel"
              values={
                Object {
                  "status": "incomplete",
                }
              }
            >
              <EuiStepNumber
                aria-label="Incomplete Step 1"
                className="euiStep__circle"
                isHollow={true}
                number={1}
                status="incomplete"
                titleSize="s"
              >
                <div
                  aria-label="Incomplete Step 1"
                  className="euiStepNumber euiStepNumber--incomplete euiStepNumber-isHollow euiStep__circle"
                />
              </EuiStepNumber>
            </EuiI18n>
            <EuiTitle
              className="euiStep__title"
              size="s"
            >
              <p
                className="euiTitle euiTitle--small euiStep__title"
              >
                Load Kibana objects
              </p>
            </EuiTitle>
          </div>
          <div
            className="euiStep__content"
          >
            <EuiFlexGroup
              alignItems="center"
              justifyContent="spaceBetween"
            >
              <div
                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
              >
                <EuiFlexItem>
                  <div
                    className="euiFlexItem"
                  >
                    <EuiText>
                      <div
                        className="euiText euiText--medium"
                      >
                        <p>
                          Imports index pattern, visualizations and pre-defined dashboards.
                        </p>
                      </div>
                    </EuiText>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <EuiButton
                      data-test-subj="loadSavedObjects"
                      isLoading={false}
                      onClick={[Function]}
                    >
                      <EuiButtonDisplay
                        data-test-subj="loadSavedObjects"
                        element="button"
                        isLoading={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <button
                          className="euiButton euiButton--primary"
                          data-test-subj="loadSavedObjects"
                          onClick={[Function]}
                          type="button"
                        >
                          <EuiButtonContent
                            className="euiButton__content"
                            iconSide="left"
                            isLoading={false}
                            textProps={
                              Object {
                                "className": "euiButton__text",
                              }
                            }
                          >
                            <span
                              className="euiButtonContent euiButton__content"
                            >
                              <span
                                className="euiButton__text"
                              >
                                Load Kibana objects
                              </span>
                            </span>
                          </EuiButtonContent>
                        </button>
                      </EuiButtonDisplay>
                    </EuiButton>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
            <EuiSpacer
              size="s"
            >
              <div
                className="euiSpacer euiSpacer--s"
              />
            </EuiSpacer>
            <EuiCallOut
              color="warning"
              data-test-subj="loadSavedObjects_failed"
              title="Request failed, Error: simulated bulkRequest error"
            >
              <div
                className="euiCallOut euiCallOut--warning"
                data-test-subj="loadSavedObjects_failed"
              >
                <div
                  className="euiCallOutHeader"
                >
                  <span
                    className="euiCallOutHeader__title"
                  >
                    Request failed, Error: simulated bulkRequest error
                  </span>
                </div>
              </div>
            </EuiCallOut>
          </div>
        </div>
      </EuiStep>
    </div>
  </EuiSteps>
</SavedObjectsInstallerUi>
`;

exports[`bulkCreate should display success message when bulkCreate is successful 1`] = `
<SavedObjectsInstallerUi
  bulkCreate={[Function]}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  savedObjects={
    Array [
      Object {
        "attributes": Object {},
        "id": "1",
        "type": "index-pattern",
      },
    ]
  }
>
  <EuiSteps
    steps={
      Array [
        Object {
          "children": <React.Fragment>
            <EuiFlexGroup
              alignItems="center"
              justifyContent="spaceBetween"
            >
              <EuiFlexItem>
                <EuiText>
                  <p>
                    Imports index pattern, visualizations and pre-defined dashboards.
                  </p>
                </EuiText>
              </EuiFlexItem>
              <EuiFlexItem
                grow={false}
              >
                <EuiButton
                  data-test-subj="loadSavedObjects"
                  isLoading={false}
                  onClick={[Function]}
                >
                  Load Kibana objects
                </EuiButton>
              </EuiFlexItem>
            </EuiFlexGroup>
            <EuiSpacer
              size="s"
            />
            <EuiCallOut
              color="success"
              data-test-subj="loadSavedObjects_success"
              title="1 saved objects successfully added"
            />
          </React.Fragment>,
          "key": "installStep",
          "status": "complete",
          "title": "Load Kibana objects",
        },
      ]
    }
  >
    <div
      className="euiSteps"
    >
      <EuiStep
        headingElement="p"
        key="installStep"
        status="complete"
        step={1}
        title="Load Kibana objects"
      >
        <div
          className="euiStep"
        >
          <div
            className="euiStep__titleWrapper"
          >
            <EuiI18n
              default={[Function]}
              token="euiStep.ariaLabel"
              values={
                Object {
                  "status": "complete",
                }
              }
            >
              <EuiStepNumber
                aria-label="Step 1"
                className="euiStep__circle"
                isHollow={false}
                number={1}
                status="complete"
                titleSize="s"
              >
                <div
                  aria-label="Step 1"
                  className="euiStepNumber euiStepNumber--complete euiStep__circle"
                >
                  <EuiI18n
                    default="complete"
                    token="euiStepNumber.isComplete"
                  >
                    <EuiIcon
                      aria-label="complete"
                      className="euiStepNumber__icon"
                      size="m"
                      type="check"
                    >
                      <div
                        aria-label="complete"
                        className="euiStepNumber__icon"
                        data-euiicon-type="check"
                        size="m"
                      />
                    </EuiIcon>
                  </EuiI18n>
                </div>
              </EuiStepNumber>
            </EuiI18n>
            <EuiTitle
              className="euiStep__title"
              size="s"
            >
              <p
                className="euiTitle euiTitle--small euiStep__title"
              >
                Load Kibana objects
              </p>
            </EuiTitle>
          </div>
          <div
            className="euiStep__content"
          >
            <EuiFlexGroup
              alignItems="center"
              justifyContent="spaceBetween"
            >
              <div
                className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
              >
                <EuiFlexItem>
                  <div
                    className="euiFlexItem"
                  >
                    <EuiText>
                      <div
                        className="euiText euiText--medium"
                      >
                        <p>
                          Imports index pattern, visualizations and pre-defined dashboards.
                        </p>
                      </div>
                    </EuiText>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  grow={false}
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <EuiButton
                      data-test-subj="loadSavedObjects"
                      isLoading={false}
                      onClick={[Function]}
                    >
                      <EuiButtonDisplay
                        data-test-subj="loadSavedObjects"
                        element="button"
                        isLoading={false}
                        onClick={[Function]}
                        type="button"
                      >
                        <button
                          className="euiButton euiButton--primary"
                          data-test-subj="loadSavedObjects"
                          onClick={[Function]}
                          type="button"
                        >
                          <EuiButtonContent
                            className="euiButton__content"
                            iconSide="left"
                            isLoading={false}
                            textProps={
                              Object {
                                "className": "euiButton__text",
                              }
                            }
                          >
                            <span
                              className="euiButtonContent euiButton__content"
                            >
                              <span
                                className="euiButton__text"
                              >
                                Load Kibana objects
                              </span>
                            </span>
                          </EuiButtonContent>
                        </button>
                      </EuiButtonDisplay>
                    </EuiButton>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
            <EuiSpacer
              size="s"
            >
              <div
                className="euiSpacer euiSpacer--s"
              />
            </EuiSpacer>
            <EuiCallOut
              color="success"
              data-test-subj="loadSavedObjects_success"
              title="1 saved objects successfully added"
            >
              <div
                className="euiCallOut euiCallOut--success"
                data-test-subj="loadSavedObjects_success"
              >
                <div
                  className="euiCallOutHeader"
                >
                  <span
                    className="euiCallOutHeader__title"
                  >
                    1 saved objects successfully added
                  </span>
                </div>
              </div>
            </EuiCallOut>
          </div>
        </div>
      </EuiStep>
    </div>
  </EuiSteps>
</SavedObjectsInstallerUi>
`;

exports[`renders 1`] = `
<EuiSteps
  steps={
    Array [
      Object {
        "children": <React.Fragment>
          <EuiFlexGroup
            alignItems="center"
            justifyContent="spaceBetween"
          >
            <EuiFlexItem>
              <EuiText>
                <p>
                  Imports index pattern, visualizations and pre-defined dashboards.
                </p>
              </EuiText>
            </EuiFlexItem>
            <EuiFlexItem
              grow={false}
            >
              <EuiButton
                data-test-subj="loadSavedObjects"
                isLoading={false}
                onClick={[Function]}
              >
                Load Kibana objects
              </EuiButton>
            </EuiFlexItem>
          </EuiFlexGroup>
          <EuiSpacer
            size="s"
          />
        </React.Fragment>,
        "key": "installStep",
        "status": "incomplete",
        "title": "Load Kibana objects",
      },
    ]
  }
/>
`;
