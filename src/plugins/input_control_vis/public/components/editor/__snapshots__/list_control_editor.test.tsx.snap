// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders dynamic options should display disabled dynamic options with tooltip for non-string fields 1`] = `
<Fragment>
  <injectIntl(IndexPatternSelectFormRowUi)
    IndexPatternSelect={[Function]}
    controlIndex={0}
    indexPatternId="mockIndexPattern"
    onChange={[Function]}
  />
  <injectIntl(FieldSelectUi)
    controlIndex={0}
    fieldName="numberField"
    filterField={[Function]}
    getIndexPattern={[Function]}
    indexPatternId="mockIndexPattern"
    onChange={[Function]}
  />
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Allow multiple selection"
        id="inputControl.editor.listControl.multiselectDescription"
      />
    }
    id="multiselect-0"
    key="multiselect"
    labelType="label"
  >
    <EuiSwitch
      checked={true}
      data-test-subj="listControlMultiselectInput"
      label={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Multiselect"
          id="inputControl.editor.listControl.multiselectLabel"
        />
      }
      onChange={[Function]}
    />
  </EuiFormRow>
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Only available for \\"string\\" fields"
        id="inputControl.editor.listControl.dynamicOptions.stringFieldDescription"
      />
    }
    id="dynamicOptions-0"
    key="dynamicOptions"
    labelType="label"
  >
    <EuiSwitch
      checked={true}
      data-test-subj="listControlDynamicOptionsSwitch"
      disabled={true}
      label={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Dynamic Options"
          id="inputControl.editor.listControl.dynamicOptionsLabel"
        />
      }
      onChange={[Function]}
    />
  </EuiFormRow>
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Number of options"
        id="inputControl.editor.listControl.sizeDescription"
      />
    }
    id="size-0"
    key="size"
    label={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Size"
        id="inputControl.editor.listControl.sizeLabel"
      />
    }
    labelType="label"
  >
    <EuiFieldNumber
      data-test-subj="listControlSizeInput"
      min={1}
      onChange={[Function]}
      value={5}
    />
  </EuiFormRow>
</Fragment>
`;

exports[`renders dynamic options should display dynamic options for string fields 1`] = `
<Fragment>
  <injectIntl(IndexPatternSelectFormRowUi)
    IndexPatternSelect={[Function]}
    controlIndex={0}
    indexPatternId="mockIndexPattern"
    onChange={[Function]}
  />
  <injectIntl(FieldSelectUi)
    controlIndex={0}
    fieldName="keywordField"
    filterField={[Function]}
    getIndexPattern={[Function]}
    indexPatternId="mockIndexPattern"
    onChange={[Function]}
  />
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Allow multiple selection"
        id="inputControl.editor.listControl.multiselectDescription"
      />
    }
    id="multiselect-0"
    key="multiselect"
    labelType="label"
  >
    <EuiSwitch
      checked={true}
      data-test-subj="listControlMultiselectInput"
      label={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Multiselect"
          id="inputControl.editor.listControl.multiselectLabel"
        />
      }
      onChange={[Function]}
    />
  </EuiFormRow>
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Update options in response to user input"
        id="inputControl.editor.listControl.dynamicOptions.updateDescription"
      />
    }
    id="dynamicOptions-0"
    key="dynamicOptions"
    labelType="label"
  >
    <EuiSwitch
      checked={true}
      data-test-subj="listControlDynamicOptionsSwitch"
      disabled={false}
      label={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Dynamic Options"
          id="inputControl.editor.listControl.dynamicOptionsLabel"
        />
      }
      onChange={[Function]}
    />
  </EuiFormRow>
</Fragment>
`;

exports[`renders dynamic options should display size field when dynamic options is disabled 1`] = `
<Fragment>
  <injectIntl(IndexPatternSelectFormRowUi)
    IndexPatternSelect={[Function]}
    controlIndex={0}
    indexPatternId="mockIndexPattern"
    onChange={[Function]}
  />
  <injectIntl(FieldSelectUi)
    controlIndex={0}
    fieldName="keywordField"
    filterField={[Function]}
    getIndexPattern={[Function]}
    indexPatternId="mockIndexPattern"
    onChange={[Function]}
  />
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Allow multiple selection"
        id="inputControl.editor.listControl.multiselectDescription"
      />
    }
    id="multiselect-0"
    key="multiselect"
    labelType="label"
  >
    <EuiSwitch
      checked={true}
      data-test-subj="listControlMultiselectInput"
      label={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Multiselect"
          id="inputControl.editor.listControl.multiselectLabel"
        />
      }
      onChange={[Function]}
    />
  </EuiFormRow>
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Update options in response to user input"
        id="inputControl.editor.listControl.dynamicOptions.updateDescription"
      />
    }
    id="dynamicOptions-0"
    key="dynamicOptions"
    labelType="label"
  >
    <EuiSwitch
      checked={false}
      data-test-subj="listControlDynamicOptionsSwitch"
      disabled={false}
      label={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Dynamic Options"
          id="inputControl.editor.listControl.dynamicOptionsLabel"
        />
      }
      onChange={[Function]}
    />
  </EuiFormRow>
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Number of options"
        id="inputControl.editor.listControl.sizeDescription"
      />
    }
    id="size-0"
    key="size"
    label={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Size"
        id="inputControl.editor.listControl.sizeLabel"
      />
    }
    labelType="label"
  >
    <EuiFieldNumber
      data-test-subj="listControlSizeInput"
      min={1}
      onChange={[Function]}
      value={5}
    />
  </EuiFormRow>
</Fragment>
`;

exports[`renders should display chaining input when parents are provided 1`] = `
<Fragment>
  <injectIntl(IndexPatternSelectFormRowUi)
    IndexPatternSelect={[Function]}
    controlIndex={0}
    indexPatternId="indexPattern1"
    onChange={[Function]}
  />
  <injectIntl(FieldSelectUi)
    controlIndex={0}
    fieldName="keywordField"
    filterField={[Function]}
    getIndexPattern={[Function]}
    indexPatternId="indexPattern1"
    onChange={[Function]}
  />
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Options are based on the value of parent control. Disabled if parent is not set."
        id="inputControl.editor.listControl.parentDescription"
      />
    }
    id="parentSelect-0"
    key="parentSelect"
    label={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Parent control"
        id="inputControl.editor.listControl.parentLabel"
      />
    }
    labelType="label"
  >
    <EuiSelect
      onChange={[Function]}
      options={
        Array [
          Object {
            "text": "",
            "value": "",
          },
          Object {
            "text": "fieldA",
            "value": "1",
          },
          Object {
            "text": "fieldB",
            "value": "2",
          },
        ]
      }
      value=""
    />
  </EuiFormRow>
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Allow multiple selection"
        id="inputControl.editor.listControl.multiselectDescription"
      />
    }
    id="multiselect-0"
    key="multiselect"
    labelType="label"
  >
    <EuiSwitch
      checked={true}
      data-test-subj="listControlMultiselectInput"
      label={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Multiselect"
          id="inputControl.editor.listControl.multiselectLabel"
        />
      }
      onChange={[Function]}
    />
  </EuiFormRow>
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Update options in response to user input"
        id="inputControl.editor.listControl.dynamicOptions.updateDescription"
      />
    }
    id="dynamicOptions-0"
    key="dynamicOptions"
    labelType="label"
  >
    <EuiSwitch
      checked={false}
      data-test-subj="listControlDynamicOptionsSwitch"
      disabled={false}
      label={
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Dynamic Options"
          id="inputControl.editor.listControl.dynamicOptionsLabel"
        />
      }
      onChange={[Function]}
    />
  </EuiFormRow>
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Number of options"
        id="inputControl.editor.listControl.sizeDescription"
      />
    }
    id="size-0"
    key="size"
    label={
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Size"
        id="inputControl.editor.listControl.sizeLabel"
      />
    }
    labelType="label"
  >
    <EuiFieldNumber
      data-test-subj="listControlSizeInput"
      min={1}
      onChange={[Function]}
      value={10}
    />
  </EuiFormRow>
</Fragment>
`;

exports[`renders should not display any options until field is selected 1`] = `
<Fragment>
  <injectIntl(IndexPatternSelectFormRowUi)
    IndexPatternSelect={[Function]}
    controlIndex={0}
    indexPatternId="mockIndexPattern"
    onChange={[Function]}
  />
  <injectIntl(FieldSelectUi)
    controlIndex={0}
    fieldName=""
    filterField={[Function]}
    getIndexPattern={[Function]}
    indexPatternId="mockIndexPattern"
    onChange={[Function]}
  />
</Fragment>
`;
