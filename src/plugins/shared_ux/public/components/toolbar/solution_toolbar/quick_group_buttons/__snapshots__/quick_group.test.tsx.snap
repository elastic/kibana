// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<QuickButtonGroup /> is rendered 1`] = `
.emotion-0 .euiButtonGroup__buttons {
  border-radius:medium: 6px;
  small: 4px;
}

.emotion-0 .euiButtonGroup__buttons .quickButtonGroup__button {
  background-color: #FFF;
  border-width: 1px!important;
  border-style: solid!important;
  border-color: #D3DAE6!important;
}

.emotion-0 .euiButtonGroup__buttons .quickButtonGroup__button:first-of-type {
  border-top-left-radius: 6px!important;
  border-bottom-left-radius: 6px!important;
}

.emotion-0 .euiButtonGroup__buttons .quickButtonGroup__button:last-of-type {
  border-top-right-radius: 6px!important;
  border-bottom-right-radius: 6px!important;
}

<ServicesProvider
  docLinks={
    Object {
      "dataViewsDocsLink": "dummy link",
    }
  }
  editors={
    Object {
      "openDataViewEditor": [MockFunction],
    }
  }
  permissions={
    Object {
      "canCreateNewDataView": true,
    }
  }
  platform={
    Object {
      "setIsFullscreen": [MockFunction],
    }
  }
>
  <QuickButtonGroup
    buttons={
      Array [
        Object {
          "getLegend": "",
          "iconType": "visText",
          "label": "Text",
          "onClick": [MockFunction],
        },
      ]
    }
  >
    <EuiButtonGroup
      buttonSize="m"
      css={
        Object {
          "map": undefined,
          "name": "1i3zstc",
          "next": undefined,
          "styles": "
    .euiButtonGroup__buttons {
      border-radius: medium:6px;small:4px;;
      .quickButtonGroup__button {
        background-color: #FFF;
        border-width: 1px !important;
        border-style: solid !important;
        border-color: #D3DAE6 !important;
      }
      .quickButtonGroup__button:first-of-type {
        border-top-left-radius: 6px !important;
        border-bottom-left-radius: 6px !important;
      }
      .quickButtonGroup__button:last-of-type {
        border-top-right-radius: 6px !important;
        border-bottom-right-radius: 6px !important;
      }
    }
  ",
          "toString": [Function],
        }
      }
      isIconOnly={true}
      legend=""
      onChange={[Function]}
      options={
        Array [
          Object {
            "aria-label": "Text",
            "className": "quickButtonGroup__button",
            "getLegend": "",
            "iconType": "visText",
            "id": "generated-id0",
            "label": "Text",
            "onClick": [MockFunction],
            "title": "Text",
          },
        ]
      }
      type="multi"
    >
      <fieldset
        css="unknown styles"
        disabled={false}
      >
        <fieldset
          className="euiButtonGroup euiButtonGroup--medium euiButtonGroup--text emotion-0"
          disabled={false}
        >
          <EuiScreenReaderOnly>
            <legend
              className="euiScreenReaderOnly"
            />
          </EuiScreenReaderOnly>
          <div
            className="euiButtonGroup__buttons"
          >
            <EuiButtonGroupButton
              aria-label="Text"
              className="quickButtonGroup__button"
              color="text"
              element="button"
              getLegend=""
              iconType="visText"
              id="generated-id0"
              isDisabled={false}
              isIconOnly={true}
              key="0"
              label="Text"
              name="generated-id"
              onChange={[Function]}
              onClick={[MockFunction]}
              size="m"
              title="Text"
            >
              <EuiButtonDisplay
                aria-label="Text"
                baseClassName="euiButtonGroupButton"
                className="euiButtonGroupButton-isIconOnly quickButtonGroup__button"
                color="text"
                data-test-subj="generated-id0"
                element="button"
                fill={false}
                getLegend=""
                iconType="visText"
                id="generated-id"
                isDisabled={false}
                isSelected={false}
                onClick={[MockFunction]}
                size="m"
                textProps={
                  Object {
                    "className": "euiScreenReaderOnly",
                    "data-text": "Text",
                    "ref": [Function],
                  }
                }
                title="Text"
                type="button"
              >
                <button
                  aria-label="Text"
                  aria-pressed={false}
                  className="euiButtonGroupButton euiButtonGroupButton--text euiButtonGroupButton-isIconOnly quickButtonGroup__button"
                  data-test-subj="generated-id0"
                  disabled={false}
                  getLegend=""
                  id="generated-id"
                  onClick={[MockFunction]}
                  style={
                    Object {
                      "minWidth": undefined,
                    }
                  }
                  title="Text"
                  type="button"
                >
                  <EuiButtonContent
                    className="euiButton__content"
                    iconSide="left"
                    iconType="visText"
                    textProps={
                      Object {
                        "className": "euiButton__text euiScreenReaderOnly",
                        "data-text": "Text",
                        "ref": [Function],
                      }
                    }
                  >
                    <span
                      className="euiButtonContent euiButton__content"
                    >
                      <EuiIcon
                        className="euiButtonContent__icon"
                        color="inherit"
                        size="m"
                        type="visText"
                      >
                        <span
                          className="euiButtonContent__icon"
                          color="inherit"
                          data-euiicon-type="visText"
                          size="m"
                        />
                      </EuiIcon>
                      <span
                        className="euiButton__text euiScreenReaderOnly"
                        data-text="Text"
                      >
                        Text
                      </span>
                    </span>
                  </EuiButtonContent>
                </button>
              </EuiButtonDisplay>
            </EuiButtonGroupButton>
          </div>
        </fieldset>
      </fieldset>
    </EuiButtonGroup>
  </QuickButtonGroup>
</ServicesProvider>
`;
