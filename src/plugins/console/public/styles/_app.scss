// TODO: Move all of the styles here (should be modularised by, e.g., CSS-in-JS or CSS modules).

#consoleRoot {
  display: flex;
  flex: 1 1 auto;
  // Make sure the editor actions don't create scrollbars on this container
  // SASSTODO: Uncomment when tooltips are EUI-ified (inside portals)
  overflow: hidden;
}

.consoleContainer {
  padding: $euiSizeM;
  gap: 0;

  &--embeddable {
    padding: 0;
    gap: 0;
  }
}

.consoleTabs {
  padding: 0 $euiSizeS;
}

.consoleEditorPanel {
  display: flex;
  flex: 1 1 auto;
  position: absolute;
  left: 0;
  bottom: 0;
  right: 0;
  overflow: hidden;
}

.conApp__editor {
  width: 100%;
  display: flex;
  flex: 0 0 auto;
  position: relative;

  &__spinner {
    width: 100%;
    background-color: $euiFormBackgroundColor;
  }
}

// Expandable cell content has a padded panel inside
.conVariablesTable .euiTableRow-isExpandedRow .euiTableCellContent {
  padding: 0;
}

.conApp__output, .conApp_example {
  height: 100%;
  display: flex;
  flex: 1 1 1px;
}

.conApp__editorContent,
.conApp__outputContent {
  height: 100%;
  flex: 1 1 1px;
}

.conApp__actionsPanel {
  button {
    height: $euiSize * 1.1;
    width: $euiSize * 1.1;
  }

  position: absolute;
  z-index: $euiZLevel1;
  top: 0;
  // Adjust for possible scrollbars
  right: $euiSize;
  height: $euiSizeL;
  background-color: $euiFormBackgroundColor;
  border-radius: $euiSizeXS;
  box-shadow: 0 0 $euiSizeXS $euiSizeXS transparentize($euiShadowColor, .9);
  padding-top: $euiSize * .1;
  overflow-y: auto;
}

.conApp__editorActions {
  @extend .conApp__actionsPanel;
  // For IE11
  min-width: $euiSizeL * 2;
}

.conApp__outputActions {
  @extend .conApp__actionsPanel;
  // For IE11
  min-width: $euiSizeL;
}

.conApp__resizerButton {
  // Give the aria selection border priority when the divider is selected on IE11 and Chrome
  z-index: $euiZLevel1;
  background-color: $euiColorLightestShade;
  // The margin ensures that the resizer doesn't cover the top border of the selected request
  // in the output panel, when in vertical layout
  margin-bottom: 1px;
  // The margin ensures that the resizer doesn't cover the first Monaco editor's ruler
  margin-inline: 0;
}

.conApp__requestProgressBarContainer {
  position: relative;
  z-index: $euiZLevel2;
}

/*
 * The highlighting for the selected requests in the monaco editor
 */
.console__monaco_editor__selectedRequests {
  position: relative;
  padding: $euiSizeXS; /* Adds space between border and text */
}

/* Adding a pseudo-element to create padding between the border and the line in the Monaco editor */
.console__monaco_editor__selectedRequests::before {
  content: '';
  position: absolute;
  top: 0;
  bottom: -$euiSize * .3;
  left: -$euiSize * 3;
  right: 0;
  background: transparentize($euiColorPrimary, .9);
  border: $euiBorderThin;
  border-color: $euiColorPrimary;
  pointer-events: none; /* Ensures the pseudo-element doesn't block interactions */
}

/*
 * The styling for the multiple-response status code decorations
 */
%monaco__status_badge {
  font-family: $euiFontFamily;
  font-size: $euiFontSizeS;
  font-weight: $euiFontWeightMedium;
  line-height: $euiLineHeight;
  padding: calc($euiSizeXS / 2) $euiSizeXS;
  display: inline-block;
  border-radius: calc($euiBorderRadius / 2);
  white-space: nowrap;
  vertical-align: top;
  cursor: default;
  max-width: 100%;
}

.monaco__status_code_line--primary {
  background-color: transparentize($euiColorVis1, .9);
}

.monaco__status_code_line_number--primary {
  background-color: transparentize($euiColorVis1, .5);
}

.monaco__status_code_line--success {
  background-color: transparentize($euiColorSuccess, .9);
}

.monaco__status_code_line_number--success {
  background-color: transparentize($euiColorSuccess, .5);
}

.monaco__status_code_line--default {
  background-color: transparentize($euiColorLightShade, .9);
}

.monaco__status_code_line_number--default {
  background-color: transparentize($euiColorLightShade, .5);
}

.monaco__status_code_line--warning {
  background-color: transparentize($euiColorWarning, .9);
}

.monaco__status_code_line_number--warning {
  background-color: transparentize($euiColorWarning, .5);
}

.monaco__status_code_line--danger {
  background-color: transparentize($euiColorDanger, .9);
}

.monaco__status_code_line_number--danger {
  background-color: transparentize($euiColorDanger, .5);
}

/*
 * The z-index for the autocomplete suggestions popup
 */
.kibanaCodeEditor .monaco-editor .suggest-widget {
  // the value needs to be above the z-index of the resizer bar
  z-index: $euiZLevel1 + 2;
}

// We need to hide the file input element to prevent the default browser styles
#importConsoleFile {
  opacity: 0;
  position: absolute;
  z-index: -1;
}
