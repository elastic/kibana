// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`KibanaPageTemplate render basic template 1`] = `
<KibanaPageTemplateInner
  pageHeader={
    Object {
      "description": "test",
      "iconType": "test",
      "rightSideItems": Array [
        "test",
      ],
      "title": "test",
    }
  }
/>
`;

exports[`KibanaPageTemplate render custom empty prompt only 1`] = `
<KibanaPageTemplateInner
  isEmptyState={true}
>
  <EuiEmptyPrompt
    title={
      <h1>
        custom test
      </h1>
    }
  />
</KibanaPageTemplateInner>
`;

exports[`KibanaPageTemplate render custom empty prompt with page header 1`] = `
<KibanaPageTemplateInner
  isEmptyState={true}
  pageHeader={
    Object {
      "description": "test",
      "iconType": "test",
      "rightSideItems": Array [
        "test",
      ],
      "title": "test",
    }
  }
>
  <EuiEmptyPrompt
    title={
      <h1>
        custom test
      </h1>
    }
  />
</KibanaPageTemplateInner>
`;

exports[`KibanaPageTemplate render default empty prompt 1`] = `
<KibanaPageTemplateInner
  isEmptyState={true}
  pageHeader={
    Object {
      "description": "test",
      "iconType": "test",
      "rightSideItems": Array [
        "test",
      ],
      "title": "test",
    }
  }
/>
`;

exports[`KibanaPageTemplate render noDataContent 1`] = `
<WithSolutionNavBarprops => {
  const {
    className,
    noDataConfig
  } = props;

  if (!noDataConfig) {
    return null;
  }

  const template = _no_data_page.NO_DATA_PAGE_TEMPLATE_PROPS.template;
  const classes = (0, _classnames.default)('kbnPageTemplate', {
    [\`kbnPageTemplate--\${template}\`]: template
  }, className);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiPageTemplate, (0, _extends2.default)({
    "data-test-subj": props['data-test-subj'],
    template: template,
    className: classes
  }, _no_data_page.NO_DATA_PAGE_TEMPLATE_PROPS), /*#__PURE__*/_react.default.createElement(_no_data_page.NoDataPage, noDataConfig));
}
  noDataConfig={
    Object {
      "actions": Object {
        "beats": Object {},
        "custom": Object {},
        "elasticAgent": Object {},
      },
      "docsLink": "test",
      "solution": "Elastic",
    }
  }
  solutionNav={
    Object {
      "icon": "solution",
      "items": Array [
        Object {
          "id": "1",
          "items": Array [
            Object {
              "id": "1.1",
              "name": "Ingest Node Pipelines",
            },
            Object {
              "id": "1.2",
              "name": "Logstash Pipelines",
            },
            Object {
              "id": "1.3",
              "name": "Beats Central Management",
            },
          ],
          "name": "Ingest",
        },
        Object {
          "id": "2",
          "items": Array [
            Object {
              "id": "2.1",
              "name": "Index Management",
            },
            Object {
              "id": "2.2",
              "name": "Index Lifecycle Policies",
            },
            Object {
              "id": "2.3",
              "name": "Snapshot and Restore",
            },
          ],
          "name": "Data",
        },
      ],
      "name": "Solution",
    }
  }
/>
`;

exports[`KibanaPageTemplate render solutionNav 1`] = `
<WithSolutionNavBar({
  template,
  className,
  pageHeader,
  children,
  isEmptyState,
  solutionNav,
  ...rest
}) => {
  /**
   * An easy way to create the right content for empty pages
   */
  const emptyStateDefaultTemplate = 'centeredBody';

  if (isEmptyState && pageHeader && !children) {
    var _template;

    template = (_template = template) !== null && _template !== void 0 ? _template : emptyStateDefaultTemplate;
    const {
      iconType,
      pageTitle,
      description,
      rightSideItems
    } = pageHeader;
    pageHeader = undefined;
    children = /*#__PURE__*/_react.default.createElement(_eui.EuiEmptyPrompt, {
      iconType: iconType,
      iconColor: '' // This is likely a solution or app logo, so keep it multi-color
      ,
      title: pageTitle ? /*#__PURE__*/_react.default.createElement("h1", null, pageTitle) : undefined,
      body: description ? /*#__PURE__*/_react.default.createElement("p", null, description) : undefined,
      actions: rightSideItems
    });
  } else if (isEmptyState && pageHeader && children) {
    var _template2;

    template = (_template2 = template) !== null && _template2 !== void 0 ? _template2 : 'centeredContent';
  } else if (isEmptyState && !pageHeader) {
    var _template3;

    template = (_template3 = template) !== null && _template3 !== void 0 ? _template3 : emptyStateDefaultTemplate;
  }

  const classes = (0, _classnames.default)('kbnPageTemplate', {
    [\`kbnPageTemplate--\${template}\`]: template
  }, className);
  return /*#__PURE__*/_react.default.createElement(_eui.EuiPageTemplate, (0, _extends2.default)({
    template: template,
    className: classes,
    pageHeader: pageHeader
  }, rest), children);
}
  pageHeader={
    Object {
      "description": "test",
      "iconType": "test",
      "rightSideItems": Array [
        "test",
      ],
      "title": "test",
    }
  }
  solutionNav={
    Object {
      "icon": "solution",
      "items": Array [
        Object {
          "id": "1",
          "items": Array [
            Object {
              "id": "1.1",
              "name": "Ingest Node Pipelines",
            },
            Object {
              "id": "1.2",
              "name": "Logstash Pipelines",
            },
            Object {
              "id": "1.3",
              "name": "Beats Central Management",
            },
          ],
          "name": "Ingest",
        },
        Object {
          "id": "2",
          "items": Array [
            Object {
              "id": "2.1",
              "name": "Index Management",
            },
            Object {
              "id": "2.2",
              "name": "Index Lifecycle Policies",
            },
            Object {
              "id": "2.3",
              "name": "Snapshot and Restore",
            },
          ],
          "name": "Data",
        },
      ],
      "name": "Solution",
    }
  }
/>
`;
