// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<CodeEditor /> hint element should be tabable 1`] = `
<div
  aria-label="Code Editor"
  class="kibanaCodeEditor__keyboardHint"
  data-test-subj="codeEditorHint"
  id="1234"
  role="button"
  tabindex="0"
/>
`;

exports[`<CodeEditor /> is rendered 1`] = `
<CodeEditor
  height={250}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en-US",
      "formatDate": [Function],
      "formatDateToParts": [Function],
      "formatDisplayName": [Function],
      "formatHTMLMessage": [Function],
      "formatList": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatNumberToParts": [Function],
      "formatPlural": [Function],
      "formatRelativeTime": [Function],
      "formatTime": [Function],
      "formatTimeToParts": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getDisplayNames": [Function],
        "getListFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralRules": [Function],
        "getRelativeTimeFormat": [Function],
      },
      "locale": "en-US",
      "messages": Object {},
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": undefined,
    }
  }
  languageId="loglang"
  onChange={[Function]}
  value="
[Sun Mar 7 20:54:27 2004] [notice] [client xx.xx.xx.xx] This is a notice!
[Sun Mar 7 20:58:27 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed
[Sun Mar 7 21:16:17 2004] [error] [client xx.xx.xx.xx] File does not exist: /home/httpd/twiki/view/Main/WebHome
"
>
  <div
    className="kibanaCodeEditor"
    onKeyDown={[Function]}
  >
    <EuiToolTip
      content={
        <React.Fragment>
          <p>
            <FormattedMessage
              defaultMessage="Press {key} to start editing."
              id="kibana-react.kibanaCodeEditor.startEditing"
              values={
                Object {
                  "key": <strong>
                    Enter
                  </strong>,
                }
              }
            />
          </p>
          <p>
            <FormattedMessage
              defaultMessage="Press {key} to stop editing."
              id="kibana-react.kibanaCodeEditor.stopEditing"
              values={
                Object {
                  "key": <strong>
                    Esc
                  </strong>,
                }
              }
            />
          </p>
        </React.Fragment>
      }
      delay="regular"
      display="block"
      position="top"
    >
      <EuiToolTipAnchor
        display="block"
        id="generated-id"
        isVisible={false}
        onBlur={[Function]}
        onFocus={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
      >
        <span
          css="unknown styles"
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        >
          <Insertion
            cache={
              Object {
                "insert": [Function],
                "inserted": Object {
                  "uuw4g3-euiToolTipAnchor-block": true,
                },
                "key": "css",
                "nonce": undefined,
                "registered": Object {},
                "sheet": StyleSheet {
                  "_alreadyInsertedOrderInsensitiveRule": true,
                  "_insertTag": [Function],
                  "before": null,
                  "container": <head>
                    <style
                      data-emotion="css"
                      data-s=""
                    >
                      
                      .emotion-euiToolTipAnchor-block{display:block;}
                    </style>
                    <style
                      data-emotion="css"
                      data-s=""
                    >
                      
                      .emotion-euiToolTipAnchor-block *[disabled]{pointer-events:none;}
                    </style>
                    <style
                      data-styled="active"
                      data-styled-version="5.1.0"
                    />
                  </head>,
                  "ctr": 2,
                  "insertionPoint": undefined,
                  "isSpeedy": false,
                  "key": "css",
                  "nonce": undefined,
                  "prepend": undefined,
                  "tags": Array [
                    <style
                      data-emotion="css"
                      data-s=""
                    >
                      
                      .emotion-euiToolTipAnchor-block{display:block;}
                    </style>,
                    <style
                      data-emotion="css"
                      data-s=""
                    >
                      
                      .emotion-euiToolTipAnchor-block *[disabled]{pointer-events:none;}
                    </style>,
                  ],
                },
              }
            }
            isStringTag={true}
            serialized={
              Object {
                "map": undefined,
                "name": "uuw4g3-euiToolTipAnchor-block",
                "next": undefined,
                "styles": "*[disabled]{pointer-events:none;};label:euiToolTipAnchor;;;display:block;label:block;;;",
                "toString": [Function],
              }
            }
          />
          <span
            className="euiToolTipAnchor emotion-euiToolTipAnchor-block"
            onMouseOut={[Function]}
            onMouseOver={[Function]}
          >
            <div
              aria-label="Code Editor"
              className="kibanaCodeEditor__keyboardHint"
              data-test-subj="codeEditorHint"
              id="1234"
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              role="button"
              tabIndex={0}
            />
          </span>
        </span>
      </EuiToolTipAnchor>
    </EuiToolTip>
    <Component>
      <mockMonacoEditor
        editorDidMount={[Function]}
        editorWillMount={[Function]}
        height={250}
        language="loglang"
        onChange={[Function]}
        options={
          Object {
            "fontFamily": "Roboto Mono",
            "fontSize": 12,
            "lineHeight": 21,
            "matchBrackets": "never",
            "minimap": Object {
              "enabled": false,
            },
            "padding": Object {},
            "renderLineHighlight": "none",
            "scrollBeyondLastLine": false,
            "scrollbar": Object {
              "alwaysConsumeMouseWheel": false,
              "useShadows": false,
            },
            "wordBasedSuggestions": false,
            "wordWrap": "on",
            "wrappingIndent": "indent",
          }
        }
        theme="euiColors"
        value="
[Sun Mar 7 20:54:27 2004] [notice] [client xx.xx.xx.xx] This is a notice!
[Sun Mar 7 20:58:27 2004] [info] [client xx.xx.xx.xx] (104)Connection reset by peer: client stopped connection before send body completed
[Sun Mar 7 21:16:17 2004] [error] [client xx.xx.xx.xx] File does not exist: /home/httpd/twiki/view/Main/WebHome
"
      >
        <div>
          <div />
          <textarea
            data-test-subj="monacoEditorTextarea"
            onKeyDown={[Function]}
          />
        </div>
      </mockMonacoEditor>
    </Component>
  </div>
</CodeEditor>
`;
