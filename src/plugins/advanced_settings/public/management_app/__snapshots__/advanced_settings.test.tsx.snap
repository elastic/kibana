// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdvancedSettings should render read-only when saving is disabled 1`] = `
<div>
  <EuiFlexGroup
    gutterSize="none"
  >
    <EuiFlexItem>
      <Component />
    </EuiFlexItem>
    <EuiFlexItem>
      <Search
        categories={Array []}
        onQueryChange={[Function]}
        query={
          Query {
            "ast": _AST {
              "_clauses": Array [
                Object {
                  "field": "test",
                  "match": "must",
                  "operator": "eq",
                  "type": "field",
                  "value": "string:setting",
                },
              ],
              "_indexedClauses": Object {
                "field": Object {
                  "test": Array [
                    Object {
                      "field": "test",
                      "match": "must",
                      "operator": "eq",
                      "type": "field",
                      "value": "string:setting",
                    },
                  ],
                },
                "group": Array [],
                "is": Object {},
                "term": Array [],
              },
            },
            "syntax": Object {
              "parse": [Function],
              "print": [Function],
              "printClause": [Function],
            },
            "text": "test:string:setting",
          }
        }
      />
    </EuiFlexItem>
  </EuiFlexGroup>
  <Component />
  <EuiSpacer
    size="m"
  />
  <CallOuts />
  <EuiSpacer
    size="m"
  />
  <AdvancedSettingsVoiceAnnouncement
    queryText="test:string:setting"
    settings={Object {}}
  />
  <Form
    categories={Array []}
    categoryCounts={Object {}}
    clear={[Function]}
    clearQuery={[Function]}
    dockLinks={
      Object {
        "aggs": Object {
          "avg": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-avg-aggregation.html",
          "avg_bucket": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-avg-bucket-aggregation.html",
          "cardinality": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-cardinality-aggregation.html",
          "count": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-valuecount-aggregation.html",
          "cumulative_sum": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-sum-aggregation.html",
          "date_histogram": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-datehistogram-aggregation.html",
          "date_range": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-daterange-aggregation.html",
          "derivative": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-derivative-aggregation.html",
          "filter": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-filter-aggregation.html",
          "filters": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-filters-aggregation.html",
          "geo_bounds": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-geobounds-aggregation.html",
          "geo_centroid": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-geocentroid-aggregation.html",
          "geohash_grid": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-geohashgrid-aggregation.html",
          "histogram": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-histogram-aggregation.html",
          "ip_range": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-iprange-aggregation.html",
          "max": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-max-aggregation.html",
          "max_bucket": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-max-bucket-aggregation.html",
          "median": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-percentile-aggregation.html",
          "min": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-min-aggregation.html",
          "min_bucket": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-min-bucket-aggregation.html",
          "moving_avg": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-movavg-aggregation.html",
          "percentile_ranks": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-percentile-rank-aggregation.html",
          "range": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-range-aggregation.html",
          "serial_diff": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-serialdiff-aggregation.html",
          "significant_terms": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-significantterms-aggregation.html",
          "std_dev": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-extendedstats-aggregation.html",
          "sum": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-sum-aggregation.html",
          "sum_bucket": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-sum-bucket-aggregation.html",
          "terms": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-terms-aggregation.html",
          "top_hits": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-top-hits-aggregation.html",
        },
        "auditbeat": Object {
          "base": "https://www.elastic.co/guide/en/beats/auditbeat/mocked-test-branch",
        },
        "date": Object {
          "dateMath": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/common-options.html#date-math",
        },
        "filebeat": Object {
          "base": "https://www.elastic.co/guide/en/beats/filebeat/mocked-test-branch",
          "configuration": "https://www.elastic.co/guide/en/beats/filebeat/mocked-test-branch/filebeat-configuration.html",
          "elasticsearchOutput": "https://www.elastic.co/guide/en/beats/filebeat/mocked-test-branch/elasticsearch-output.html",
          "exportedFields": "https://www.elastic.co/guide/en/beats/filebeat/mocked-test-branch/exported-fields.html",
          "installation": "https://www.elastic.co/guide/en/beats/filebeat/mocked-test-branch/filebeat-installation.html",
          "startup": "https://www.elastic.co/guide/en/beats/filebeat/mocked-test-branch/filebeat-starting.html",
        },
        "functionbeat": Object {
          "base": "https://www.elastic.co/guide/en/beats/functionbeat/mocked-test-branch",
        },
        "heartbeat": Object {
          "base": "https://www.elastic.co/guide/en/beats/heartbeat/mocked-test-branch",
        },
        "indexPatterns": Object {
          "introduction": "https://www.elastic.co/guide/en/kibana/mocked-test-branch/index-patterns.html",
          "loadingData": "https://www.elastic.co/guide/en/kibana/mocked-test-branch/tutorial-load-dataset.html",
        },
        "kibana": "https://www.elastic.co/guide/en/kibana/mocked-test-branch/index.html",
        "logstash": Object {
          "base": "https://www.elastic.co/guide/en/logstash/mocked-test-branch",
        },
        "management": Object {
          "kibanaSearchSettings": "https://www.elastic.co/guide/en/kibana/mocked-test-branch/advanced-options.html#kibana-search-settings",
        },
        "metricbeat": Object {
          "base": "https://www.elastic.co/guide/en/beats/metricbeat/mocked-test-branch",
        },
        "query": Object {
          "kueryQuerySyntax": "https://www.elastic.co/guide/en/kibana/mocked-test-branch/kuery-query.html",
          "luceneQuerySyntax": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/query-dsl-query-string-query.html#query-string-syntax",
          "queryDsl": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/query-dsl.html",
        },
        "scriptedFields": Object {
          "luceneExpressions": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/modules-scripting-expression.html",
          "painless": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/modules-scripting-painless.html",
          "painlessApi": "https://www.elastic.co/guide/en/elasticsearch/painless/mocked-test-branch/painless-api-reference.html",
          "painlessSyntax": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/modules-scripting-painless-syntax.html",
          "scriptAggs": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations.html#_values_source",
          "scriptFields": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-request-script-fields.html",
        },
        "siem": Object {
          "gettingStarted": "https://www.elastic.co/guide/en/siem/guide/mocked-test-branch/install-siem.html",
          "guide": "https://www.elastic.co/guide/en/siem/guide/mocked-test-branch/index.html",
        },
        "winlogbeat": Object {
          "base": "https://www.elastic.co/guide/en/beats/winlogbeat/mocked-test-branch",
        },
      }
    }
    enableSaving={false}
    save={[Function]}
    settings={Object {}}
    showNoResultsMessage={true}
    toasts={
      Object {
        "add": [MockFunction],
        "addDanger": [MockFunction],
        "addError": [MockFunction],
        "addSuccess": [MockFunction],
        "addWarning": [MockFunction],
        "get$": [MockFunction],
        "remove": [MockFunction],
      }
    }
  />
  <Component
    enableSaving={false}
    onQueryMatchChange={[Function]}
    query={
      Query {
        "ast": _AST {
          "_clauses": Array [
            Object {
              "field": "test",
              "match": "must",
              "operator": "eq",
              "type": "field",
              "value": "string:setting",
            },
          ],
          "_indexedClauses": Object {
            "field": Object {
              "test": Array [
                Object {
                  "field": "test",
                  "match": "must",
                  "operator": "eq",
                  "type": "field",
                  "value": "string:setting",
                },
              ],
            },
            "group": Array [],
            "is": Object {},
            "term": Array [],
          },
        },
        "syntax": Object {
          "parse": [Function],
          "print": [Function],
          "printClause": [Function],
        },
        "text": "test:string:setting",
      }
    }
  />
</div>
`;

exports[`AdvancedSettings should render specific setting if given setting key 1`] = `
<div>
  <EuiFlexGroup
    gutterSize="none"
  >
    <EuiFlexItem>
      <Component />
    </EuiFlexItem>
    <EuiFlexItem>
      <Search
        categories={Array []}
        onQueryChange={[Function]}
        query={
          Query {
            "ast": _AST {
              "_clauses": Array [
                Object {
                  "field": "test",
                  "match": "must",
                  "operator": "eq",
                  "type": "field",
                  "value": "string:setting",
                },
              ],
              "_indexedClauses": Object {
                "field": Object {
                  "test": Array [
                    Object {
                      "field": "test",
                      "match": "must",
                      "operator": "eq",
                      "type": "field",
                      "value": "string:setting",
                    },
                  ],
                },
                "group": Array [],
                "is": Object {},
                "term": Array [],
              },
            },
            "syntax": Object {
              "parse": [Function],
              "print": [Function],
              "printClause": [Function],
            },
            "text": "test:string:setting",
          }
        }
      />
    </EuiFlexItem>
  </EuiFlexGroup>
  <Component />
  <EuiSpacer
    size="m"
  />
  <CallOuts />
  <EuiSpacer
    size="m"
  />
  <AdvancedSettingsVoiceAnnouncement
    queryText="test:string:setting"
    settings={Object {}}
  />
  <Form
    categories={Array []}
    categoryCounts={Object {}}
    clear={[Function]}
    clearQuery={[Function]}
    dockLinks={
      Object {
        "aggs": Object {
          "avg": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-avg-aggregation.html",
          "avg_bucket": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-avg-bucket-aggregation.html",
          "cardinality": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-cardinality-aggregation.html",
          "count": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-valuecount-aggregation.html",
          "cumulative_sum": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-sum-aggregation.html",
          "date_histogram": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-datehistogram-aggregation.html",
          "date_range": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-daterange-aggregation.html",
          "derivative": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-derivative-aggregation.html",
          "filter": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-filter-aggregation.html",
          "filters": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-filters-aggregation.html",
          "geo_bounds": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-geobounds-aggregation.html",
          "geo_centroid": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-geocentroid-aggregation.html",
          "geohash_grid": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-geohashgrid-aggregation.html",
          "histogram": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-histogram-aggregation.html",
          "ip_range": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-iprange-aggregation.html",
          "max": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-max-aggregation.html",
          "max_bucket": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-max-bucket-aggregation.html",
          "median": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-percentile-aggregation.html",
          "min": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-min-aggregation.html",
          "min_bucket": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-min-bucket-aggregation.html",
          "moving_avg": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-movavg-aggregation.html",
          "percentile_ranks": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-percentile-rank-aggregation.html",
          "range": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-range-aggregation.html",
          "serial_diff": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-serialdiff-aggregation.html",
          "significant_terms": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-significantterms-aggregation.html",
          "std_dev": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-extendedstats-aggregation.html",
          "sum": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-sum-aggregation.html",
          "sum_bucket": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-pipeline-sum-bucket-aggregation.html",
          "terms": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-bucket-terms-aggregation.html",
          "top_hits": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations-metrics-top-hits-aggregation.html",
        },
        "auditbeat": Object {
          "base": "https://www.elastic.co/guide/en/beats/auditbeat/mocked-test-branch",
        },
        "date": Object {
          "dateMath": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/common-options.html#date-math",
        },
        "filebeat": Object {
          "base": "https://www.elastic.co/guide/en/beats/filebeat/mocked-test-branch",
          "configuration": "https://www.elastic.co/guide/en/beats/filebeat/mocked-test-branch/filebeat-configuration.html",
          "elasticsearchOutput": "https://www.elastic.co/guide/en/beats/filebeat/mocked-test-branch/elasticsearch-output.html",
          "exportedFields": "https://www.elastic.co/guide/en/beats/filebeat/mocked-test-branch/exported-fields.html",
          "installation": "https://www.elastic.co/guide/en/beats/filebeat/mocked-test-branch/filebeat-installation.html",
          "startup": "https://www.elastic.co/guide/en/beats/filebeat/mocked-test-branch/filebeat-starting.html",
        },
        "functionbeat": Object {
          "base": "https://www.elastic.co/guide/en/beats/functionbeat/mocked-test-branch",
        },
        "heartbeat": Object {
          "base": "https://www.elastic.co/guide/en/beats/heartbeat/mocked-test-branch",
        },
        "indexPatterns": Object {
          "introduction": "https://www.elastic.co/guide/en/kibana/mocked-test-branch/index-patterns.html",
          "loadingData": "https://www.elastic.co/guide/en/kibana/mocked-test-branch/tutorial-load-dataset.html",
        },
        "kibana": "https://www.elastic.co/guide/en/kibana/mocked-test-branch/index.html",
        "logstash": Object {
          "base": "https://www.elastic.co/guide/en/logstash/mocked-test-branch",
        },
        "management": Object {
          "kibanaSearchSettings": "https://www.elastic.co/guide/en/kibana/mocked-test-branch/advanced-options.html#kibana-search-settings",
        },
        "metricbeat": Object {
          "base": "https://www.elastic.co/guide/en/beats/metricbeat/mocked-test-branch",
        },
        "query": Object {
          "kueryQuerySyntax": "https://www.elastic.co/guide/en/kibana/mocked-test-branch/kuery-query.html",
          "luceneQuerySyntax": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/query-dsl-query-string-query.html#query-string-syntax",
          "queryDsl": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/query-dsl.html",
        },
        "scriptedFields": Object {
          "luceneExpressions": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/modules-scripting-expression.html",
          "painless": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/modules-scripting-painless.html",
          "painlessApi": "https://www.elastic.co/guide/en/elasticsearch/painless/mocked-test-branch/painless-api-reference.html",
          "painlessSyntax": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/modules-scripting-painless-syntax.html",
          "scriptAggs": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-aggregations.html#_values_source",
          "scriptFields": "https://www.elastic.co/guide/en/elasticsearch/reference/mocked-test-branch/search-request-script-fields.html",
        },
        "siem": Object {
          "gettingStarted": "https://www.elastic.co/guide/en/siem/guide/mocked-test-branch/install-siem.html",
          "guide": "https://www.elastic.co/guide/en/siem/guide/mocked-test-branch/index.html",
        },
        "winlogbeat": Object {
          "base": "https://www.elastic.co/guide/en/beats/winlogbeat/mocked-test-branch",
        },
      }
    }
    enableSaving={true}
    save={[Function]}
    settings={Object {}}
    showNoResultsMessage={true}
    toasts={
      Object {
        "add": [MockFunction],
        "addDanger": [MockFunction],
        "addError": [MockFunction],
        "addSuccess": [MockFunction],
        "addWarning": [MockFunction],
        "get$": [MockFunction],
        "remove": [MockFunction],
      }
    }
  />
  <Component
    enableSaving={true}
    onQueryMatchChange={[Function]}
    query={
      Query {
        "ast": _AST {
          "_clauses": Array [
            Object {
              "field": "test",
              "match": "must",
              "operator": "eq",
              "type": "field",
              "value": "string:setting",
            },
          ],
          "_indexedClauses": Object {
            "field": Object {
              "test": Array [
                Object {
                  "field": "test",
                  "match": "must",
                  "operator": "eq",
                  "type": "field",
                  "value": "string:setting",
                },
              ],
            },
            "group": Array [],
            "is": Object {},
            "term": Array [],
          },
        },
        "syntax": Object {
          "parse": [Function],
          "print": [Function],
          "printClause": [Function],
        },
        "text": "test:string:setting",
      }
    }
  />
</div>
`;
