// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ContextAppLegacy test renders correctly 1`] = `
<ContextAppLegacy
  columns={
    Array [
      "_source",
    ]
  }
  filter={[Function]}
  hits={
    Array [
      Object {
        "_id": "123",
        "_index": "test_index",
        "_score": null,
        "_source": Object {
          "category": Array [
            "Men's Clothing",
          ],
          "currency": "EUR",
          "customer_first_name": "Walker",
          "customer_full_name": "Walker Texas Ranger",
          "customer_gender": "MALE",
          "customer_last_name": "Ranger",
        },
        "_version": 1,
        "fields": Array [
          Object {
            "order_date": Array [
              "2020-10-19T13:35:02.000Z",
            ],
          },
        ],
        "sort": Array [
          1603114502000,
          2092,
        ],
      },
    ]
  }
  indexPattern={
    Object {
      "id": "test_index_pattern",
    }
  }
  infiniteScroll={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  minimumVisibleRows={5}
  sorting={
    Array [
      "order_date",
      "desc",
    ]
  }
  status="loaded"
>
  <I18nProvider>
    <IntlProvider
      defaultLocale="en"
      formats={
        Object {
          "date": Object {
            "full": Object {
              "day": "numeric",
              "month": "long",
              "weekday": "long",
              "year": "numeric",
            },
            "long": Object {
              "day": "numeric",
              "month": "long",
              "year": "numeric",
            },
            "medium": Object {
              "day": "numeric",
              "month": "short",
              "year": "numeric",
            },
            "short": Object {
              "day": "numeric",
              "month": "numeric",
              "year": "2-digit",
            },
          },
          "number": Object {
            "currency": Object {
              "style": "currency",
            },
            "percent": Object {
              "style": "percent",
            },
          },
          "relative": Object {
            "days": Object {
              "units": "day",
            },
            "hours": Object {
              "units": "hour",
            },
            "minutes": Object {
              "units": "minute",
            },
            "months": Object {
              "units": "month",
            },
            "seconds": Object {
              "units": "second",
            },
            "years": Object {
              "units": "year",
            },
          },
          "time": Object {
            "full": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
              "timeZoneName": "short",
            },
            "long": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
              "timeZoneName": "short",
            },
            "medium": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
            },
            "short": Object {
              "hour": "numeric",
              "minute": "numeric",
            },
          },
        }
      }
      locale="en"
      messages={Object {}}
      textComponent={Symbol(react.fragment)}
    >
      <PseudoLocaleWrapper>
        <EuiPanel
          paddingSize="none"
        >
          <div
            className="euiPanel"
          >
            <div
              className="discover-table"
            >
              <DocTableLegacy
                columns={
                  Array [
                    "_source",
                  ]
                }
                filter={[Function]}
                hits={
                  Array [
                    Object {
                      "_id": "123",
                      "_index": "test_index",
                      "_score": null,
                      "_source": Object {
                        "category": Array [
                          "Men's Clothing",
                        ],
                        "currency": "EUR",
                        "customer_first_name": "Walker",
                        "customer_full_name": "Walker Texas Ranger",
                        "customer_gender": "MALE",
                        "customer_last_name": "Ranger",
                      },
                      "_version": 1,
                      "fields": Array [
                        Object {
                          "order_date": Array [
                            "2020-10-19T13:35:02.000Z",
                          ],
                        },
                      ],
                      "sort": Array [
                        1603114502000,
                        2092,
                      ],
                    },
                  ]
                }
                indexPattern={
                  Object {
                    "id": "test_index_pattern",
                  }
                }
                infiniteScroll={true}
                intl={
                  Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {
                      "date": Object {
                        "full": Object {
                          "day": "numeric",
                          "month": "long",
                          "weekday": "long",
                          "year": "numeric",
                        },
                        "long": Object {
                          "day": "numeric",
                          "month": "long",
                          "year": "numeric",
                        },
                        "medium": Object {
                          "day": "numeric",
                          "month": "short",
                          "year": "numeric",
                        },
                        "short": Object {
                          "day": "numeric",
                          "month": "numeric",
                          "year": "2-digit",
                        },
                      },
                      "number": Object {
                        "currency": Object {
                          "style": "currency",
                        },
                        "percent": Object {
                          "style": "percent",
                        },
                      },
                      "relative": Object {
                        "days": Object {
                          "units": "day",
                        },
                        "hours": Object {
                          "units": "hour",
                        },
                        "minutes": Object {
                          "units": "minute",
                        },
                        "months": Object {
                          "units": "month",
                        },
                        "seconds": Object {
                          "units": "second",
                        },
                        "years": Object {
                          "units": "year",
                        },
                      },
                      "time": Object {
                        "full": Object {
                          "hour": "numeric",
                          "minute": "numeric",
                          "second": "numeric",
                          "timeZoneName": "short",
                        },
                        "long": Object {
                          "hour": "numeric",
                          "minute": "numeric",
                          "second": "numeric",
                          "timeZoneName": "short",
                        },
                        "medium": Object {
                          "hour": "numeric",
                          "minute": "numeric",
                          "second": "numeric",
                        },
                        "short": Object {
                          "hour": "numeric",
                          "minute": "numeric",
                        },
                      },
                    },
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": Symbol(react.fragment),
                    "timeZone": null,
                  }
                }
                minimumVisibleRows={5}
                onFilter={[Function]}
                rows={
                  Array [
                    Object {
                      "_id": "123",
                      "_index": "test_index",
                      "_score": null,
                      "_source": Object {
                        "category": Array [
                          "Men's Clothing",
                        ],
                        "currency": "EUR",
                        "customer_first_name": "Walker",
                        "customer_full_name": "Walker Texas Ranger",
                        "customer_gender": "MALE",
                        "customer_last_name": "Ranger",
                      },
                      "_version": 1,
                      "fields": Array [
                        Object {
                          "order_date": Array [
                            "2020-10-19T13:35:02.000Z",
                          ],
                        },
                      ],
                      "sort": Array [
                        1603114502000,
                        2092,
                      ],
                    },
                  ]
                }
                sort={
                  Array [
                    Array [
                      "order_date",
                    ],
                    Array [
                      "desc",
                    ],
                  ]
                }
                sorting={
                  Array [
                    "order_date",
                    "desc",
                  ]
                }
                status="loaded"
              >
                <div />
              </DocTableLegacy>
            </div>
          </div>
        </EuiPanel>
      </PseudoLocaleWrapper>
    </IntlProvider>
  </I18nProvider>
</ContextAppLegacy>
`;

exports[`ContextAppLegacy test renders loading indicator 1`] = `
<ContextAppLegacy
  columns={
    Array [
      "_source",
    ]
  }
  filter={[Function]}
  hits={
    Array [
      Object {
        "_id": "123",
        "_index": "test_index",
        "_score": null,
        "_source": Object {
          "category": Array [
            "Men's Clothing",
          ],
          "currency": "EUR",
          "customer_first_name": "Walker",
          "customer_full_name": "Walker Texas Ranger",
          "customer_gender": "MALE",
          "customer_last_name": "Ranger",
        },
        "_version": 1,
        "fields": Array [
          Object {
            "order_date": Array [
              "2020-10-19T13:35:02.000Z",
            ],
          },
        ],
        "sort": Array [
          1603114502000,
          2092,
        ],
      },
    ]
  }
  indexPattern={
    Object {
      "id": "test_index_pattern",
    }
  }
  infiniteScroll={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  minimumVisibleRows={5}
  sorting={
    Array [
      "order_date",
      "desc",
    ]
  }
  status="loading"
>
  <I18nProvider>
    <IntlProvider
      defaultLocale="en"
      formats={
        Object {
          "date": Object {
            "full": Object {
              "day": "numeric",
              "month": "long",
              "weekday": "long",
              "year": "numeric",
            },
            "long": Object {
              "day": "numeric",
              "month": "long",
              "year": "numeric",
            },
            "medium": Object {
              "day": "numeric",
              "month": "short",
              "year": "numeric",
            },
            "short": Object {
              "day": "numeric",
              "month": "numeric",
              "year": "2-digit",
            },
          },
          "number": Object {
            "currency": Object {
              "style": "currency",
            },
            "percent": Object {
              "style": "percent",
            },
          },
          "relative": Object {
            "days": Object {
              "units": "day",
            },
            "hours": Object {
              "units": "hour",
            },
            "minutes": Object {
              "units": "minute",
            },
            "months": Object {
              "units": "month",
            },
            "seconds": Object {
              "units": "second",
            },
            "years": Object {
              "units": "year",
            },
          },
          "time": Object {
            "full": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
              "timeZoneName": "short",
            },
            "long": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
              "timeZoneName": "short",
            },
            "medium": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
            },
            "short": Object {
              "hour": "numeric",
              "minute": "numeric",
            },
          },
        }
      }
      locale="en"
      messages={Object {}}
      textComponent={Symbol(react.fragment)}
    >
      <PseudoLocaleWrapper>
        <EuiPanel
          data-test-subj="contextApp_loadingIndicator"
          paddingSize="l"
        >
          <div
            className="euiPanel euiPanel--paddingLarge"
            data-test-subj="contextApp_loadingIndicator"
          >
            <EuiText
              textAlign="center"
            >
              <div
                className="euiText euiText--medium"
              >
                <EuiTextAlign
                  textAlign="center"
                >
                  <div
                    className="euiTextAlign euiTextAlign--center"
                  >
                    <FormattedMessage
                      defaultMessage="Loading..."
                      id="discover.context.loadingDescription"
                      values={Object {}}
                    >
                      Loading...
                    </FormattedMessage>
                  </div>
                </EuiTextAlign>
              </div>
            </EuiText>
          </div>
        </EuiPanel>
      </PseudoLocaleWrapper>
    </IntlProvider>
  </I18nProvider>
</ContextAppLegacy>
`;
