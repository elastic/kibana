@import './variables';

/**
 * 1.  Allow wrapping of long filter items
 */

.globalFilterItem {
  line-height: $euiSize;
  color: $euiTextColor;
  padding-block: $euiSizeM / 2;
  white-space: normal; /* 1 */

  &:not(.globalFilterItem-isDisabled) {
    border-color: $kbnGlobalFilterItemBorderColor; // Make the actual border more visible
  }
}

.globalFilterItem-isDisabled {
  color: $euiColorDarkShade;
  background-color: transparentize($euiColorLightShade, .5);
  border-color: transparent;
  text-decoration: line-through;
  font-weight: $euiFontWeightRegular;
}

.globalFilterItem-isError, .globalFilterItem-isWarning {
  .globalFilterLabel__value {
    font-weight: $euiFontWeightBold;
  }
}

.globalFilterItem-isError {
  .globalFilterLabel__value {
    color: makeHighContrastColor($euiColorDangerText, $euiColorLightShade);
  }
}

.globalFilterItem-isWarning {
  .globalFilterLabel__value {
    color: makeHighContrastColor($euiColorWarningText, $euiColorLightShade);
  }
}

.globalFilterItem-isPinned {
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    width: $euiSizeXS;
    background-color: $kbnGlobalFilterItemBorderColor;
  }
}

.globalFilterItem-isExcluded {
  &:not(.globalFilterItem-isDisabled) {
    border-color: $kbnGlobalFilterItemBorderColorExcluded;

    &::before {
      background-color: $kbnGlobalFilterItemPinnedColorExcluded;
    }
  }
}

.globalFilterItem__editorForm {
  padding: $euiSizeM;
}

.globalFilterItem__readonlyPanel {
  min-width: auto;
  padding: $euiSizeM;
}
