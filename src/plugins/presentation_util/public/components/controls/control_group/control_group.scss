$smallControl: $euiSize * 14;
$mediumControl: $euiSize * 25;
$largeControl: $euiSize * 50;
$controlMinWidth: $euiSize * 14;

.controlGroup {
  margin-left: $euiSizeXS;
  overflow-x: clip; // sometimes when using auto width, removing a control can cause a horizontal scrollbar to appear.
  min-height: $euiSize * 4;
  padding: $euiSize 0;
}

.controlFrame--cloneWrapper {
  width: max-content;

  .euiFormLabel {
    padding-bottom: $euiSizeXS;
  }

  &-small {
    width: $smallControl;
  }

  &-medium {
    width: $mediumControl;
  }

  &-large {
    width: $largeControl;
  }

  &-twoLine {
    margin-top: -$euiSize * 1.25;
  }

  .euiFormLabel, div {
    cursor: grabbing !important; // prevents cursor flickering while dragging the clone
  }

  .controlFrame--draggable {
    cursor: grabbing;
    height: $euiButtonHeight;
    align-items: center;
    border-radius: $euiBorderRadius;
    @include euiFontSizeS;
    font-weight: $euiFontWeightSemiBold;
    @include euiFormControlDefaultShadow;
    background-color: $euiFormInputGroupLabelBackground;
    min-width: $controlMinWidth;
  }

  .controlFrame--formControlLayout, .controlFrame--draggable {
    &-clone {
      box-shadow: 0 0 0 1px $euiShadowColor,
        0 1px 6px 0 $euiShadowColor;
      cursor: grabbing !important;
    }

    .controlFrame--dragHandle {
      cursor: grabbing;
    }
  }
}

.controlFrame--wrapper {
  flex-basis: auto;
  position: relative;
  display: block;

  .controlFrame--formControlLayout {
    width: 100%;
    min-width: $controlMinWidth;
    transition:background-color .1s, color .1s;

    &__label {
      @include euiTextTruncate;
      max-width: 50%;
    }

    &:not(.controlFrame--formControlLayout-clone) {
      .controlFrame--dragHandle {
        cursor: grab;
      }
    }

    .controlFrame--control {
      height: 100%;
      transition: opacity .1s;

      &.controlFrame--twoLine {
        width: 100%;
      }
    }
  }

  &-small {
    width: $smallControl;
  }

  &-medium {
    width: $mediumControl;
  }

  &-large {
    width: $largeControl;
  }

  &-insertBefore,
  &-insertAfter {
    .controlFrame--formControlLayout:after {
      content: '';
      position: absolute;
      background-color: transparentize($euiColorPrimary, .5);
      border-radius: $euiBorderRadius;
      top: 0;
      bottom: 0;
      width: 2px;
    }
  }

  &-insertBefore {
    .controlFrame--formControlLayout:after {
      left: -$euiSizeS;
    }
  }

  &-insertAfter {
    .controlFrame--formControlLayout:after {
      right: -$euiSizeS;
    }
  }

  .controlFrame--floatingActions {
    visibility: hidden;
    opacity: 0;

    // slower transition on hover leave in case the user accidentally stops hover
    transition: visibility .3s, opacity .3s;

    z-index: 1;
    position: absolute;

    &-oneLine {
      right:$euiSizeXS;
      top: -$euiSizeL;
      padding: $euiSizeXS;
      border-radius: $euiBorderRadius;
      background-color: $euiColorEmptyShade;
      box-shadow: 0 0 0 1pt $euiColorLightShade;
    }

    &-twoLine {
      right:$euiSizeXS;
      top: -$euiSizeXS;
    }
  }

  &:hover {
    .controlFrame--floatingActions {
      transition:visibility .1s, opacity .1s;
      visibility: visible;
      opacity: 1;
    }
  }

  &-isDragging {
    .euiFormRow__labelWrapper {
      opacity: 0;
    }
    .controlFrame--formControlLayout {
      background-color: $euiColorEmptyShade !important;
      color: transparent !important;
      box-shadow: none;

      .euiFormLabel {
        opacity: 0;
      }

      .controlFrame--control {
        opacity: 0;
      }
    }
  }
}