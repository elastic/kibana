$embEditingModeHoverColor: transparentize($euiColorWarning, lightOrDarkTheme(.9, .7));

//@TODO: figure out how to laod this in ML
$mlColorCritical: #FE5050;
$mlColorMajor: #FBA740;
$mlColorMinor: #FDEC25;
$mlColorWarning: #8BC8FB;
$mlColorUnknown: #C0C0C0;

$mlColorCriticalText: makeHighContrastColor($mlColorCritical, $euiColorEmptyShade);
$mlColorMajorText: makeHighContrastColor($mlColorMajor, $euiColorEmptyShade);
$mlColorMinorText: makeHighContrastColor($mlColorMinor, $euiColorEmptyShade);
$mlColorWarningText: makeHighContrastColor($mlColorWarning, $euiColorEmptyShade);
$mlColorUnknownText: $euiColorDarkShade;

// stylelint-disable selector-no-qualifying-type
.ml-explorer-chart-container {
  overflow: hidden;

  .ml-explorer-chart-svg {
    font-size: $euiFontSizeXS;
    font-family: $euiFontFamily;

    .line-chart {
      rect {
        fill: $euiColorEmptyShade;
        opacity: 1;
      }

      rect.selected-interval {
        fill: rgba(200, 200, 200, .1);
        stroke: $euiColorDarkShade;
        stroke-width: $euiSizeXS / 2;
        stroke-opacity: .8;
      }

      rect.scheduled-event-marker {
        stroke-width: 1px;
        stroke: $euiColorMediumShade;
        fill: $euiColorLightShade;
        pointer-events: none;
      }
    }
  }

  .axis path, .axis line {
    fill: none;
    stroke: $euiBorderColor;
    shape-rendering: crispEdges;
  }

  .axis .tick line.ml-tick-emphasis {
    stroke: rgba(0, 0, 0, .2);
  }

  .axis text {
    fill: $euiColorDarkShade;
  }

  .axis .tick line {
    stroke: rgba(0, 0, 0, .05);
    stroke-width: 1px;
  }

  .values-line {
    fill: none;
    stroke: #32A7C2;
    stroke-width: 2;
  }

  .values-dots circle,
  .values-dots-circle {
    fill: #32A7C2;
    stroke-width: 0;
  }

  .values-dots circle.values-dots-circle-blur {
    fill: #AAA;
  }

  .metric-value {
    opacity: 1;
    fill: transparent;
    stroke: #32A7C2;
    stroke-width: 0;
  }

  .anomaly-marker {
    stroke-width: 1px;
    stroke: #AAAAAA;
  }

  .anomaly-marker:hover {
    stroke-width: 6px;
    stroke: #32A7C2;
  }

  .anomaly-marker.critical {
    fill: $mlColorCritical;
  }

  .anomaly-marker.major {
    fill: $mlColorMajor;
  }

  .anomaly-marker.minor {
    fill: $mlColorMinor;
  }

  .anomaly-marker.warning {
    fill: $mlColorWarning;
  }

  .anomaly-marker.low {
    fill: #D2E9F7;
  }

  .metric-value:hover,
  .anomaly-marker:hover {
    stroke-width: 6px;
    stroke-opacity: .65;
  }
}

.ml-explorer-chart {
  overflow: hidden;
}

.ml-explorer-chart-content-wrapper {
  height: 215px;
}

.ml-explorer-chart-axis-emphasis {
  font-weight: bold;
}

// SASSTODO: There is a lot of very specific sizing in here that look brittle to touch
.explorer-charts {
  ml-explorer-charts-container {
    .row {
      padding: 10px;
    }

    label {
      font-size: $euiFontSizeXS;
    }

    select {
      font-size: $euiFontSizeS;
      font-style: $euiFontWeightRegular;
    }

    .chart-controls {
      label {
        padding: 0 0 10px 0;
      }
    }

    .no-results-item {
      text-align: center;
      padding-top: 10px;
    }

    .ml-anomaly-interim-result {
      font-style: italic;
      padding-bottom: 3px;
    }

    .ml-tablerow-expanded {
      width: 100%;
      padding: 5px 20px;
      overflow: hidden;
      font-size: $euiFontSizeXS;

      td {
        padding: 0 0 2px 0;
      }

      table tr > td:first-child {
        padding-left: 2px;
        vertical-align: top;
      }

      td:first-child {
        width: 140px;
      }

      td:nth-child(2) {
        padding-left: 5px;
      }
    }
  }
}

/* wrapper class for the top right alert icon and view button */
.ml-explorer-chart-icons {
  float: right;
  padding-left: 5px;
  /* counter-margin for EuiButtonEmpty's padding */
  margin: 2px -8px 0 0;
}
