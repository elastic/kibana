// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`after fetch hideWriteControls 1`] = `
<I18nProvider>
  <TableListView
    createItem={null}
    deleteItems={null}
    editItem={null}
    entityName="dashboard"
    entityNamePlural="dashboards"
    findItems={[Function]}
    headingId="dashboardListingHeading"
    initialFilter=""
    listingLimit={1}
    noItemsFragment={
      <div>
        <EuiEmptyPrompt
          iconType="visualizeApp"
          title={
            <h1
              id="dashboardListingHeading"
            >
              <FormattedMessage
                defaultMessage="Looks like you don't have any dashboards."
                id="dashboard.listing.noItemsMessage"
                values={Object {}}
              />
            </h1>
          }
        />
      </div>
    }
    tableColumns={
      Array [
        Object {
          "field": "title",
          "name": "Title",
          "render": [Function],
          "sortable": true,
        },
        Object {
          "dataType": "string",
          "field": "description",
          "name": "Description",
          "sortable": true,
        },
      ]
    }
    tableListTitle="Dashboards"
    toastNotifications={Object {}}
    uiSettings={
      Object {
        "get": [MockFunction],
      }
    }
  />
</I18nProvider>
`;

exports[`after fetch initialFilter 1`] = `
<I18nProvider>
  <TableListView
    createItem={[Function]}
    deleteItems={[Function]}
    editItem={[Function]}
    entityName="dashboard"
    entityNamePlural="dashboards"
    findItems={[Function]}
    headingId="dashboardListingHeading"
    initialFilter="my dashboard"
    listingLimit={1000}
    noItemsFragment={
      <div>
        <EuiEmptyPrompt
          actions={
            <EuiButton
              data-test-subj="createDashboardPromptButton"
              fill={true}
              iconType="plusInCircle"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Create new dashboard"
                id="dashboard.listing.createNewDashboard.createButtonLabel"
                values={Object {}}
              />
            </EuiButton>
          }
          body={
            <React.Fragment>
              <p>
                <FormattedMessage
                  defaultMessage="You can combine data views from any Kibana app into one dashboard and see everything in one place."
                  id="dashboard.listing.createNewDashboard.combineDataViewFromKibanaAppDescription"
                  values={Object {}}
                />
              </p>
              <p>
                <FormattedMessage
                  defaultMessage="New to Kibana? {sampleDataInstallLink} to take a test drive."
                  id="dashboard.listing.createNewDashboard.newToKibanaDescription"
                  values={
                    Object {
                      "sampleDataInstallLink": <EuiLink
                        onClick={[Function]}
                      >
                        <FormattedMessage
                          defaultMessage="Install some sample data"
                          id="dashboard.listing.createNewDashboard.sampleDataInstallLinkText"
                          values={Object {}}
                        />
                      </EuiLink>,
                    }
                  }
                />
              </p>
            </React.Fragment>
          }
          iconType="dashboardApp"
          title={
            <h1
              id="dashboardListingHeading"
            >
              <FormattedMessage
                defaultMessage="Create your first dashboard"
                id="dashboard.listing.createNewDashboard.title"
                values={Object {}}
              />
            </h1>
          }
        />
      </div>
    }
    tableColumns={
      Array [
        Object {
          "field": "title",
          "name": "Title",
          "render": [Function],
          "sortable": true,
        },
        Object {
          "dataType": "string",
          "field": "description",
          "name": "Description",
          "sortable": true,
        },
      ]
    }
    tableListTitle="Dashboards"
    toastNotifications={Object {}}
    uiSettings={
      Object {
        "get": [MockFunction],
      }
    }
  />
</I18nProvider>
`;

exports[`after fetch renders call to action when no dashboards exist 1`] = `
<I18nProvider>
  <TableListView
    createItem={[Function]}
    deleteItems={[Function]}
    editItem={[Function]}
    entityName="dashboard"
    entityNamePlural="dashboards"
    findItems={[Function]}
    headingId="dashboardListingHeading"
    initialFilter=""
    listingLimit={1}
    noItemsFragment={
      <div>
        <EuiEmptyPrompt
          actions={
            <EuiButton
              data-test-subj="createDashboardPromptButton"
              fill={true}
              iconType="plusInCircle"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Create new dashboard"
                id="dashboard.listing.createNewDashboard.createButtonLabel"
                values={Object {}}
              />
            </EuiButton>
          }
          body={
            <React.Fragment>
              <p>
                <FormattedMessage
                  defaultMessage="You can combine data views from any Kibana app into one dashboard and see everything in one place."
                  id="dashboard.listing.createNewDashboard.combineDataViewFromKibanaAppDescription"
                  values={Object {}}
                />
              </p>
              <p>
                <FormattedMessage
                  defaultMessage="New to Kibana? {sampleDataInstallLink} to take a test drive."
                  id="dashboard.listing.createNewDashboard.newToKibanaDescription"
                  values={
                    Object {
                      "sampleDataInstallLink": <EuiLink
                        onClick={[Function]}
                      >
                        <FormattedMessage
                          defaultMessage="Install some sample data"
                          id="dashboard.listing.createNewDashboard.sampleDataInstallLinkText"
                          values={Object {}}
                        />
                      </EuiLink>,
                    }
                  }
                />
              </p>
            </React.Fragment>
          }
          iconType="dashboardApp"
          title={
            <h1
              id="dashboardListingHeading"
            >
              <FormattedMessage
                defaultMessage="Create your first dashboard"
                id="dashboard.listing.createNewDashboard.title"
                values={Object {}}
              />
            </h1>
          }
        />
      </div>
    }
    tableColumns={
      Array [
        Object {
          "field": "title",
          "name": "Title",
          "render": [Function],
          "sortable": true,
        },
        Object {
          "dataType": "string",
          "field": "description",
          "name": "Description",
          "sortable": true,
        },
      ]
    }
    tableListTitle="Dashboards"
    toastNotifications={Object {}}
    uiSettings={
      Object {
        "get": [MockFunction],
      }
    }
  />
</I18nProvider>
`;

exports[`after fetch renders table rows 1`] = `
<I18nProvider>
  <TableListView
    createItem={[Function]}
    deleteItems={[Function]}
    editItem={[Function]}
    entityName="dashboard"
    entityNamePlural="dashboards"
    findItems={[Function]}
    headingId="dashboardListingHeading"
    initialFilter=""
    listingLimit={1000}
    noItemsFragment={
      <div>
        <EuiEmptyPrompt
          actions={
            <EuiButton
              data-test-subj="createDashboardPromptButton"
              fill={true}
              iconType="plusInCircle"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Create new dashboard"
                id="dashboard.listing.createNewDashboard.createButtonLabel"
                values={Object {}}
              />
            </EuiButton>
          }
          body={
            <React.Fragment>
              <p>
                <FormattedMessage
                  defaultMessage="You can combine data views from any Kibana app into one dashboard and see everything in one place."
                  id="dashboard.listing.createNewDashboard.combineDataViewFromKibanaAppDescription"
                  values={Object {}}
                />
              </p>
              <p>
                <FormattedMessage
                  defaultMessage="New to Kibana? {sampleDataInstallLink} to take a test drive."
                  id="dashboard.listing.createNewDashboard.newToKibanaDescription"
                  values={
                    Object {
                      "sampleDataInstallLink": <EuiLink
                        onClick={[Function]}
                      >
                        <FormattedMessage
                          defaultMessage="Install some sample data"
                          id="dashboard.listing.createNewDashboard.sampleDataInstallLinkText"
                          values={Object {}}
                        />
                      </EuiLink>,
                    }
                  }
                />
              </p>
            </React.Fragment>
          }
          iconType="dashboardApp"
          title={
            <h1
              id="dashboardListingHeading"
            >
              <FormattedMessage
                defaultMessage="Create your first dashboard"
                id="dashboard.listing.createNewDashboard.title"
                values={Object {}}
              />
            </h1>
          }
        />
      </div>
    }
    tableColumns={
      Array [
        Object {
          "field": "title",
          "name": "Title",
          "render": [Function],
          "sortable": true,
        },
        Object {
          "dataType": "string",
          "field": "description",
          "name": "Description",
          "sortable": true,
        },
      ]
    }
    tableListTitle="Dashboards"
    toastNotifications={Object {}}
    uiSettings={
      Object {
        "get": [MockFunction],
      }
    }
  />
</I18nProvider>
`;

exports[`after fetch renders warning when listingLimit is exceeded 1`] = `
<I18nProvider>
  <TableListView
    createItem={[Function]}
    deleteItems={[Function]}
    editItem={[Function]}
    entityName="dashboard"
    entityNamePlural="dashboards"
    findItems={[Function]}
    headingId="dashboardListingHeading"
    initialFilter=""
    listingLimit={1}
    noItemsFragment={
      <div>
        <EuiEmptyPrompt
          actions={
            <EuiButton
              data-test-subj="createDashboardPromptButton"
              fill={true}
              iconType="plusInCircle"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Create new dashboard"
                id="dashboard.listing.createNewDashboard.createButtonLabel"
                values={Object {}}
              />
            </EuiButton>
          }
          body={
            <React.Fragment>
              <p>
                <FormattedMessage
                  defaultMessage="You can combine data views from any Kibana app into one dashboard and see everything in one place."
                  id="dashboard.listing.createNewDashboard.combineDataViewFromKibanaAppDescription"
                  values={Object {}}
                />
              </p>
              <p>
                <FormattedMessage
                  defaultMessage="New to Kibana? {sampleDataInstallLink} to take a test drive."
                  id="dashboard.listing.createNewDashboard.newToKibanaDescription"
                  values={
                    Object {
                      "sampleDataInstallLink": <EuiLink
                        onClick={[Function]}
                      >
                        <FormattedMessage
                          defaultMessage="Install some sample data"
                          id="dashboard.listing.createNewDashboard.sampleDataInstallLinkText"
                          values={Object {}}
                        />
                      </EuiLink>,
                    }
                  }
                />
              </p>
            </React.Fragment>
          }
          iconType="dashboardApp"
          title={
            <h1
              id="dashboardListingHeading"
            >
              <FormattedMessage
                defaultMessage="Create your first dashboard"
                id="dashboard.listing.createNewDashboard.title"
                values={Object {}}
              />
            </h1>
          }
        />
      </div>
    }
    tableColumns={
      Array [
        Object {
          "field": "title",
          "name": "Title",
          "render": [Function],
          "sortable": true,
        },
        Object {
          "dataType": "string",
          "field": "description",
          "name": "Description",
          "sortable": true,
        },
      ]
    }
    tableListTitle="Dashboards"
    toastNotifications={Object {}}
    uiSettings={
      Object {
        "get": [MockFunction],
      }
    }
  />
</I18nProvider>
`;

exports[`renders empty page in before initial fetch to avoid flickering 1`] = `
<I18nProvider>
  <TableListView
    createItem={[Function]}
    deleteItems={[Function]}
    editItem={[Function]}
    entityName="dashboard"
    entityNamePlural="dashboards"
    findItems={[Function]}
    headingId="dashboardListingHeading"
    initialFilter=""
    listingLimit={1000}
    noItemsFragment={
      <div>
        <EuiEmptyPrompt
          actions={
            <EuiButton
              data-test-subj="createDashboardPromptButton"
              fill={true}
              iconType="plusInCircle"
              onClick={[Function]}
            >
              <FormattedMessage
                defaultMessage="Create new dashboard"
                id="dashboard.listing.createNewDashboard.createButtonLabel"
                values={Object {}}
              />
            </EuiButton>
          }
          body={
            <React.Fragment>
              <p>
                <FormattedMessage
                  defaultMessage="You can combine data views from any Kibana app into one dashboard and see everything in one place."
                  id="dashboard.listing.createNewDashboard.combineDataViewFromKibanaAppDescription"
                  values={Object {}}
                />
              </p>
              <p>
                <FormattedMessage
                  defaultMessage="New to Kibana? {sampleDataInstallLink} to take a test drive."
                  id="dashboard.listing.createNewDashboard.newToKibanaDescription"
                  values={
                    Object {
                      "sampleDataInstallLink": <EuiLink
                        onClick={[Function]}
                      >
                        <FormattedMessage
                          defaultMessage="Install some sample data"
                          id="dashboard.listing.createNewDashboard.sampleDataInstallLinkText"
                          values={Object {}}
                        />
                      </EuiLink>,
                    }
                  }
                />
              </p>
            </React.Fragment>
          }
          iconType="dashboardApp"
          title={
            <h1
              id="dashboardListingHeading"
            >
              <FormattedMessage
                defaultMessage="Create your first dashboard"
                id="dashboard.listing.createNewDashboard.title"
                values={Object {}}
              />
            </h1>
          }
        />
      </div>
    }
    tableColumns={
      Array [
        Object {
          "field": "title",
          "name": "Title",
          "render": [Function],
          "sortable": true,
        },
        Object {
          "dataType": "string",
          "field": "description",
          "name": "Description",
          "sortable": true,
        },
      ]
    }
    tableListTitle="Dashboards"
    toastNotifications={Object {}}
    uiSettings={
      Object {
        "get": [MockFunction],
      }
    }
  />
</I18nProvider>
`;
