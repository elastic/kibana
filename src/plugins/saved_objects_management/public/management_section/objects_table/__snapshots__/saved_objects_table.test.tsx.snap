// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SavedObjectsTable delete should show a confirm modal 1`] = `
<DeleteConfirmModal
  isDeleting={false}
  onCancel={[Function]}
  onConfirm={[Function]}
  selectedObjects={
    Array [
      Object {
        "id": "1",
        "meta": Object {},
        "type": "index-pattern",
      },
      Object {
        "id": "3",
        "meta": Object {},
        "type": "dashboard",
      },
    ]
  }
/>
`;

exports[`SavedObjectsTable export should allow the user to choose when exporting all 1`] = `
<ExportModal
  filteredItemCount={4}
  includeReferences={true}
  onCancel={[Function]}
  onExport={[Function]}
  onIncludeReferenceChange={[Function]}
  onSelectedOptionsChange={[Function]}
  options={
    Array [
      Object {
        "id": "index-pattern",
        "label": "index-pattern (0)",
      },
      Object {
        "id": "visualization",
        "label": "visualization (0)",
      },
      Object {
        "id": "dashboard",
        "label": "dashboard (0)",
      },
      Object {
        "id": "search",
        "label": "search (0)",
      },
    ]
  }
  selectedOptions={
    Object {
      "dashboard": true,
      "index-pattern": true,
      "search": true,
      "visualization": true,
    }
  }
/>
`;

exports[`SavedObjectsTable should render normally 1`] = `
<EuiPageContent
  horizontalPosition="center"
>
  <Header
    filteredCount={4}
    onExportAll={[Function]}
    onImport={[Function]}
    onRefresh={[Function]}
  />
  <EuiSpacer
    size="xs"
  />
  <RedirectAppLinks
    application={
      Object {
        "applications$": BehaviorSubject {
          "_isScalar": false,
          "_value": Map {},
          "closed": false,
          "hasError": false,
          "isStopped": false,
          "observers": Array [],
          "thrownError": null,
        },
        "capabilities": Object {
          "catalogue": Object {},
          "management": Object {},
          "navLinks": Object {},
          "savedObjectsManagement": Object {
            "delete": false,
            "edit": false,
            "read": true,
          },
        },
        "currentAppId$": Observable {
          "_isScalar": false,
          "source": Subject {
            "_isScalar": false,
            "closed": false,
            "hasError": false,
            "isStopped": false,
            "observers": Array [],
            "thrownError": null,
          },
        },
        "getUrlForApp": [MockFunction],
        "navigateToApp": [MockFunction],
        "navigateToUrl": [MockFunction],
      }
    }
  >
    <Table
      actionRegistry={
        Object {
          "getAll": [MockFunction],
          "has": [MockFunction],
        }
      }
      basePath={
        BasePath {
          "basePath": "",
          "get": [Function],
          "prepend": [Function],
          "publicBaseUrl": undefined,
          "remove": [Function],
          "serverBasePath": "",
        }
      }
      canGoInApp={[Function]}
      capabilities={
        Object {
          "catalogue": Object {},
          "management": Object {},
          "navLinks": Object {},
          "savedObjectsManagement": Object {
            "delete": false,
            "edit": false,
            "read": true,
          },
        }
      }
      columnRegistry={
        Object {
          "getAll": [MockFunction],
          "has": [MockFunction],
        }
      }
      filterOptions={
        Array [
          Object {
            "name": "index-pattern",
            "value": "index-pattern",
            "view": "index-pattern (0)",
          },
          Object {
            "name": "visualization",
            "value": "visualization",
            "view": "visualization (0)",
          },
          Object {
            "name": "dashboard",
            "value": "dashboard",
            "view": "dashboard (0)",
          },
          Object {
            "name": "search",
            "value": "search",
            "view": "search (0)",
          },
        ]
      }
      goInspectObject={[Function]}
      isSearching={false}
      itemId="id"
      items={
        Array [
          Object {
            "id": "1",
            "meta": Object {
              "editUrl": "#/management/kibana/indexPatterns/patterns/1",
              "icon": "indexPatternApp",
              "inAppUrl": Object {
                "path": "/management/kibana/indexPatterns/patterns/1",
                "uiCapabilitiesPath": "management.kibana.indexPatterns",
              },
              "title": "MyIndexPattern*",
            },
            "type": "index-pattern",
          },
          Object {
            "id": "2",
            "meta": Object {
              "editUrl": "/management/kibana/objects/savedSearches/2",
              "icon": "search",
              "inAppUrl": Object {
                "path": "/discover/2",
                "uiCapabilitiesPath": "discover.show",
              },
              "title": "MySearch",
            },
            "type": "search",
          },
          Object {
            "id": "3",
            "meta": Object {
              "editUrl": "/management/kibana/objects/savedDashboards/3",
              "icon": "dashboardApp",
              "inAppUrl": Object {
                "path": "/dashboard/3",
                "uiCapabilitiesPath": "dashboard.show",
              },
              "title": "MyDashboard",
            },
            "type": "dashboard",
          },
          Object {
            "id": "4",
            "meta": Object {
              "editUrl": "/management/kibana/objects/savedVisualizations/4",
              "icon": "visualizeApp",
              "inAppUrl": Object {
                "path": "/edit/4",
                "uiCapabilitiesPath": "visualize.show",
              },
              "title": "MyViz",
            },
            "type": "visualization",
          },
        ]
      }
      onActionRefresh={[Function]}
      onDelete={[Function]}
      onExport={[Function]}
      onQueryChange={[Function]}
      onShowRelationships={[Function]}
      onTableChange={[Function]}
      pageIndex={0}
      pageSize={15}
      selectedSavedObjects={Array []}
      selectionConfig={
        Object {
          "onSelectionChange": [Function],
        }
      }
      totalItemCount={4}
    />
  </RedirectAppLinks>
</EuiPageContent>
`;
