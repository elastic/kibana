"Simple wrapper over @babel/cli so we can quickly re-use the same configurations over packages"

load("@npm//@babel/cli:index.bzl", _babel = "babel")

def js_ts_transpiler(name, srcs, config_file = ":.babelrc", root_input_dir = "src", additional_args = ["--quiet"], **kwargs):
  """A macro around the autogenerated babel rule.

  Args:
    name: target name
    srcs: list of sources
    config_file: transpiler config file, it defaults to a package local .babelrc
    additional_args: Any additionally arguments
    **kwargs: the rest
  """
  args = [
    "--config-file",
    "./%s/.babelrc" % package_name(),
    "--out-dir",
    "$(@D)",
  ] + additional_args
  args.extend(["--config", "$(rootpath %s)" % jest_config])
  for src in srcs:
    templated_args.extend(["--runTestsByPath", "$(rootpath %s)" % src])

  data = [jest_config] + srcs + snapshots + deps + [
    "@npm//@jest/transform",
    "@npm//ts-jest",
    "@npm//@types/jest",
    "@npm//tslib",
    "//:tsconfig.json",
    "//tools:jest-reporter.js",
  ]

  _babel(
    name = name,
    data = data,
    output_dir = True,
    args = args,
    **kwargs
  )



  babel(
    name = "target",
    data = DEPS + [
        ":srcs",
        ".babelrc",
    ],
    output_dir = output_dir,
    # the following arg paths includes $(execpath) as babel runs on the sandbox root
    args = [
        "./%s/src" % package_name(),
        "--config-file",
        "./%s/.babelrc" % package_name(),
        "--out-dir",
        "$(@D)",
        "--quiet"
    ],
  )
