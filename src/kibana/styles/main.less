@import "../bower_components/font-awesome/less/font-awesome.less";
@import (reference) "lesshat.less";

// generic mixins
@import (reference) "./_mixins.less";

// Import variable files
@import "./_variables.less";

// custom bootstrap build
@import "./_bootstrap.less";

// bootstrap modifications
@import "./theme/_theme.less";

// call outs
@import "./_callout.less";

// font icons
@import "./_font_icons.less";

// FontAwesome fills for glyphicons in bootstrap components
@import "./_glyphicons.less";

@import "./_spinner.less";
@import "./_pagination.less";

// custom control style
@import "./_input.less";
@import "./_navbar.less";
@import "./_sidebar.less";
@import "./_truncate.less";
@import "./_control_group.less";
@import "./_hintbox.less";

html,
body {
  .flex-parent();
  height: 100%;
  margin: 0px;
}

label > small {
  font-weight: normal;
}

button {
  // buttons have a stupid 1990's default look which should be disabled
  .btn();
}

.small {
  font-size: 0.9em !important;
}
.smaller {
  font-size: 0.8em !important;
}
.smallest {
  font-size: 0.7em !important;
}
// Colors available for font awesome icons, these might not look good with normal text
.text-color-primary {
  color: @brand-primary;
}

.text-color-info {
  color: @brand-info;
}

.text-color-success {
  color: @brand-success;
}

.text-color-warning {
  color: @brand-warning;
}

.text-color-danger {
  color: @brand-danger;
}

.text-monospace {
  font-family: @font-family-monospace;
}

code {
  word-break: break-all;
  word-wrap: break-word;
}

// alias for alert types - allows class="fa fa-{{alertType}}"
.fa-success:before { content: @fa-var-check; }
.fa-danger:before { content: @fa-var-exclamation-circle; }

ul.navbar-inline li {
  display: inline;
}

.tooltip {
  font-size: 8pt;
  font-weight: normal;
  opacity: 90%;

  &-inner {
    word-break: break-word;
    white-space: normal;
  }
}

.content {
  .flex-parent();
  position: relative;
  z-index: 0;

  > .navbar {
    position: relative;
    z-index: 1;
  }
}

.application {
  .flex-parent();
  position: relative;
  z-index: 0;
}

.top-fixed {
  position: fixed;
  bottom: 0px;
}

.checkbox label {
  .display(flex);
  .align-items(center);
  padding-left: 0;

  input[type="checkbox"] {
    float: none;
    margin: 0 4px;
    position: static;
  }
}

notifications {
  z-index: 1;
}

//== Subnav
//
// Use for adding a subnav to your app

.navbar-nav li a {
  cursor: pointer;
}

.navbar {
  margin-bottom: 0px!important;
}

#kibana-primary-navbar {
  margin-right: 15px;
}

[ng-click], [clip-copy], [href], [confirm-click] {
  cursor: pointer;
}

//== Config
.config {
  .navbar;
  .navbar-default;
  .navbar-static-top;
  border-bottom: 1px solid darken(@body-bg, 10%);

  .config-close {
    width: 100%;
    background-color: @well-bg;
    border-radius: 0;
    @shadow: inset 0 1px 0 rgba(255,255,255,.15), 0 1px 5px rgba(0,0,0,.075);
    .box-shadow(@shadow);
    text-align: center;
  }

  .container-fluid {
    padding: 10px 10px;
    background-color: @body-bg;
  }
}

.app-container {
  > * {
    position: relative;
    z-index: 0;
  }

  > config {
    z-index: 1;
  }

  > nav,
  > navbar {
    z-index: 2 !important;
  }
}

@import "./_table.less";
@import "./_notify.less";

//== Nav tweaks
.nav-condensed > li > a {
   padding-top: 2px;
   padding-bottom: 2px;
}

.navbar > .container-fluid {
  > .navbar-nav,
  > .navbar-form {
    &:not(.pull-right):first-child {
      // This is how .navbar-brand accomplishes it's solid placement
      margin-left: -15px;
    }
  }
}

.list-group-menu {

  .list-group-menu-item {
    &.active {
      font-weight: bold;
      background-color: @well-bg;
    }
    &:hover {
      background-color: @well-bg;
    }
    li {
      list-style: none;
      color: @link-color;
    }
  }
}

.navbtn {
  .button-variant(@navbar-default-color; @navbar-default-bg; @navbar-default-border);
}

.navbtn-inverse {
  .button-variant(@navbar-default-color; @navbar-default-bg; @navbar-default-border);
}

// right section of the main nav base
.navbar-static-top .navbar-right {
  font-size: @font-size-small;

  .loading-spinner {
    color: @navbar-inverse-brand-hover-color;
    vertical-align: middle;
  }
}

.navbar-timepicker {
  &-auto-refresh-desc {
    margin-right: 20px;
  }

  &-timefilter-desc {

  }

  .fa {
    font-size: 16px;
    vertical-align: middle;
  }
}

.kbn-timepicker .btn-default {
  background: transparent;
  color: @text-color;
  border: 0px;
  box-shadow: none;
  text-shadow: none;
}

.kbn-timepicker .btn-info {
  .button-variant(@btn-info-color; @btn-info-bg; @btn-info-border);
  text-shadow: none;
}

.kbn-timepicker .refresh-interval {
  padding: 0.2em 0.4em;
  border-radius: @border-radius-small;
}

.kbn-timepicker .refresh-interval-active {
  background-color: @btn-info-bg;
  color: @btn-info-color;
}

//== Table

kbn-table, .kbn-table {
  font-size: @font-size-small;

  th {
    white-space: nowrap;
    padding-right: 10px;

    .table-header-move, .table-header-sortchange {
      visibility: hidden;
    }

    .fa {
      font-size: 1.1em;
    }

  }

  th:hover {
    .table-header-move, .table-header-sortchange {
      visibility: visible;
    }
  }

}

//== Generic Table
table {
  td .fa {
    // font-awesome's override of the line-height usually doesn't
    // cauase problems, but in the table it pushes the icon to the
    // top of the row
    line-height: @line-height-base;
  }
}

//== SavedObjectFinder
saved-object-finder {
  .form-group {
    margin-bottom: 0;
    input {
      .border-bottom-radius(0);
    }
  }

  .list-group-item {
    &:first-child {
      .border-top-radius(0) !important;
    }
  }

  div.finder-form {
    position: relative;
  }

  span.finder-hit-count {
    position: absolute;
    right: 10px;
    top: 25px;
    font-size: 0.85em;
  }

  .finder-options {
    max-height: 300px;
    overflow: auto;
    padding: 0;
    .border-top-radius(0);

    // replace the padding that was originally on the outer well
    > * {
      padding: @padding-base-vertical @padding-base-horizontal;
      margin: 0;
    }

    // enable bigger backgrounds for "active" elements
    > li {
      margin-top: -ceil(@padding-base-vertical / 2);

      &:first-child {
        margin: 0;
      }
      &.active {
        background-color: @component-active-bg;
        color: @component-active-color;
        a {
          color: @component-active-color;
        }
      }
    }
  }
}

// when rendered within a config dropdown, don't use a bottom margin
.config saved-object-finder .finder-options {
  margin-bottom: 0;
  background: @body-bg;
}

//== Generic Media List
.media-object {
  // image in result list
  width: 65px;
  height: 65px;
}


//== inputDatetime
.input-datetime-format {
  font-size: @font-size-small;
  color: @text-muted;
  padding: @padding-base-vertical @padding-base-horizontal;
}

//== clicking disabled buttons should not cause the whole page to get selected
button[disabled] {
  .user-select(none);
}

//== override the disabled cursor that doesn't work everywhere
.form-control{
  &[disabled],
  &[readonly],
  fieldset[disabled] & {
    cursor: default;
    opacity: .8;
  }
}

.fatal-body {
  white-space: pre-wrap;
}

.ng-dirty, .ng-touched {
  input.ng-invalid&,
  textarea.ng-invalid&,
  select.ng-invalid& {
    border-color: @state-danger-bg !important;
  }
}


input[type="radio"],
input[type="checkbox"],
.radio,
.radio-inline,
.checkbox,
.checkbox-inline {
  &[disabled],
  fieldset[disabled] & {
    cursor: default;
    opacity: .8;
  }
}

textarea {
  resize: vertical;
}

.initial-load {
  margin-top: 60px;
}

.field-collapse-toggle {
  color: #999;
  margin-left: 10px !important;
}

style-compile {
  display: none;
}

.tooltip-inner {
  white-space: pre-wrap !important;
}

@import '../components/filter_bar/filter_bar.less';


.cell-hover {
  background-color: white;
  &-show {
    // so that the cell doesn't change size on hover
    visibility: hidden;
  }
}
.cell-hover:hover {
  background-color: @gray-lighter;

  .cell-hover-show {
    visibility: visible;
  }
}

mark, .mark {
  background-color: rgba(252, 229, 113, 1);
}

fieldset {
  margin: @form-group-margin-bottom;
  padding: @form-group-margin-bottom;
  border: 1px solid @input-border;
  border-radius: @input-border-radius;
}
