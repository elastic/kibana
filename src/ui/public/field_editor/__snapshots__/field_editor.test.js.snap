// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FieldEditor should render create new scripted field correctly 1`] = `
<div>
  <eui-text>
    <h3>
      <FormattedMessage
        defaultMessage="Create scripted field"
        id="common.ui.fieldEditor.createHeader"
        values={Object {}}
      />
    </h3>
  </eui-text>
  <eui-spacer
    size="m"
  />
  <eui-form>
    <React.Fragment>
      <scripting-disabled-callOut
        isVisible={false}
      />
      <scripting-warning-callOut
        isVisible={true}
      />
      <ScriptingHelpFlyout
        executeScript={[Function]}
        indexPattern={
          Object {
            "fields": Array [
              Object {
                "name": "foobar",
              },
            ],
          }
        }
        isVisible={false}
        lang="painless"
        onClose={[Function]}
      />
    </React.Fragment>
    <eui-form-row
      error="Name is required"
      helpText={null}
      isInvalid={true}
      label="Name"
    >
      <eui-field-text
        data-test-subj="editorFieldName"
        isInvalid={true}
        onChange={[Function]}
        placeholder="New scripted field"
        value=""
      />
    </eui-form-row>
    <eui-form-row
      helpText={null}
      label="Language"
    >
      <eui-select
        data-test-subj="editorFieldLang"
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "painless",
              "value": "painless",
            },
            Object {
              "text": "testlang",
              "value": "testlang",
            },
          ]
        }
        value="painless"
      />
    </eui-form-row>
    <eui-form-row
      label="Type"
    >
      <eui-select
        data-test-subj="editorFieldType"
        disabled={false}
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "number",
              "value": "number",
            },
            Object {
              "text": "string",
              "value": "string",
            },
            Object {
              "text": "date",
              "value": "date",
            },
            Object {
              "text": "boolean",
              "value": "boolean",
            },
          ]
        }
        value="number"
      />
    </eui-form-row>
    <React.Fragment>
      <eui-form-row
        helpText={
          <FormattedMessage
            defaultMessage="Formatting allows you to control the way that specific values are displayed. It can also cause values to be completely changed and prevent highlighting in Discover from working."
            id="common.ui.fieldEditor.formatLabel"
            values={Object {}}
          />
        }
        label={
          <FormattedMessage
            defaultMessage="Format (Default: {defaultFormat})"
            id="common.ui.fieldEditor.defaultFormatHeader"
            values={
              Object {
                "defaultFormat": <eui-code>
                  Test format
                </eui-code>,
              }
            }
          />
        }
      >
        <eui-select
          data-test-subj="editorSelectedFormatId"
          onChange={[Function]}
          options={
            Array [
              Object {
                "text": "- Default -",
                "value": "",
              },
              Object {
                "text": "Test format",
                "value": "test_format",
              },
            ]
          }
        />
      </eui-form-row>
    </React.Fragment>
    <eui-form-row
      label="Popularity"
    >
      <eui-field-number
        data-test-subj="editorFieldCount"
        onChange={[Function]}
      />
    </eui-form-row>
    <React.Fragment>
      <eui-form-row
        error="Script is required"
        isInvalid={true}
        label="Script"
      >
        <eui-textArea
          data-test-subj="editorFieldScript"
          isInvalid={true}
          onChange={[Function]}
        />
      </eui-form-row>
      <eui-form-row>
        <React.Fragment>
          <eui-text>
            <FormattedMessage
              defaultMessage="Access fields with {code}."
              id="common.ui.fieldEditor.script.accessWithLabel"
              values={
                Object {
                  "code": <code>
                    doc['some_field'].value
                  </code>,
                }
              }
            />
          </eui-text>
          <br />
          <eui-link
            data-test-subj="scriptedFieldsHelpLink"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Get help with the syntax and preview the results of your script."
              id="common.ui.fieldEditor.script.getHelpLabel"
              values={Object {}}
            />
          </eui-link>
        </React.Fragment>
      </eui-form-row>
    </React.Fragment>
    <eui-form-row>
      <eui-flex-group>
        <eui-flex-item
          grow={false}
        >
          <eui-button
            data-test-subj="fieldSaveButton"
            fill={true}
            isDisabled={true}
            isLoading={false}
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Create field"
              id="common.ui.fieldEditor.actions.createButton"
              values={Object {}}
            />
          </eui-button>
        </eui-flex-item>
        <eui-flex-item
          grow={false}
        >
          <eui-button-empty
            data-test-subj="fieldCancelButton"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Cancel"
              id="common.ui.fieldEditor.actions.cancelButton"
              values={Object {}}
            />
          </eui-button-empty>
        </eui-flex-item>
      </eui-flex-group>
    </eui-form-row>
  </eui-form>
  <eui-spacer
    size="l"
  />
</div>
`;

exports[`FieldEditor should render edit scripted field correctly 1`] = `
<div>
  <eui-text>
    <h3>
      <FormattedMessage
        defaultMessage="Edit {fieldName}"
        id="common.ui.fieldEditor.editHeader"
        values={
          Object {
            "fieldName": "test",
          }
        }
      />
    </h3>
  </eui-text>
  <eui-spacer
    size="m"
  />
  <eui-form>
    <React.Fragment>
      <scripting-disabled-callOut
        isVisible={false}
      />
      <scripting-warning-callOut
        isVisible={true}
      />
      <ScriptingHelpFlyout
        executeScript={[Function]}
        indexPattern={
          Object {
            "fields": Array [
              Object {
                "name": "foobar",
              },
              Object {
                "format": Format {},
                "lang": "painless",
                "name": "test",
                "script": "doc.test.value",
                "scripted": true,
                "type": "number",
              },
            ],
          }
        }
        isVisible={false}
        lang="painless"
        name="test"
        onClose={[Function]}
        script="doc.test.value"
      />
    </React.Fragment>
    <eui-form-row
      helpText={null}
      label="Language"
    >
      <eui-select
        data-test-subj="editorFieldLang"
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "painless",
              "value": "painless",
            },
            Object {
              "text": "testlang",
              "value": "testlang",
            },
          ]
        }
        value="painless"
      />
    </eui-form-row>
    <eui-form-row
      label="Type"
    >
      <eui-select
        data-test-subj="editorFieldType"
        disabled={false}
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "number",
              "value": "number",
            },
            Object {
              "text": "string",
              "value": "string",
            },
            Object {
              "text": "date",
              "value": "date",
            },
            Object {
              "text": "boolean",
              "value": "boolean",
            },
          ]
        }
        value="number"
      />
    </eui-form-row>
    <React.Fragment>
      <eui-form-row
        helpText={
          <FormattedMessage
            defaultMessage="Formatting allows you to control the way that specific values are displayed. It can also cause values to be completely changed and prevent highlighting in Discover from working."
            id="common.ui.fieldEditor.formatLabel"
            values={Object {}}
          />
        }
        label={
          <FormattedMessage
            defaultMessage="Format (Default: {defaultFormat})"
            id="common.ui.fieldEditor.defaultFormatHeader"
            values={
              Object {
                "defaultFormat": <eui-code>
                  Test format
                </eui-code>,
              }
            }
          />
        }
      >
        <eui-select
          data-test-subj="editorSelectedFormatId"
          onChange={[Function]}
          options={
            Array [
              Object {
                "text": "- Default -",
                "value": "",
              },
              Object {
                "text": "Test format",
                "value": "test_format",
              },
            ]
          }
        />
      </eui-form-row>
    </React.Fragment>
    <eui-form-row
      label="Popularity"
    >
      <eui-field-number
        data-test-subj="editorFieldCount"
        onChange={[Function]}
      />
    </eui-form-row>
    <React.Fragment>
      <eui-form-row
        error={null}
        isInvalid={false}
        label="Script"
      >
        <eui-textArea
          data-test-subj="editorFieldScript"
          isInvalid={false}
          onChange={[Function]}
          value="doc.test.value"
        />
      </eui-form-row>
      <eui-form-row>
        <React.Fragment>
          <eui-text>
            <FormattedMessage
              defaultMessage="Access fields with {code}."
              id="common.ui.fieldEditor.script.accessWithLabel"
              values={
                Object {
                  "code": <code>
                    doc['some_field'].value
                  </code>,
                }
              }
            />
          </eui-text>
          <br />
          <eui-link
            data-test-subj="scriptedFieldsHelpLink"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Get help with the syntax and preview the results of your script."
              id="common.ui.fieldEditor.script.getHelpLabel"
              values={Object {}}
            />
          </eui-link>
        </React.Fragment>
      </eui-form-row>
    </React.Fragment>
    <eui-form-row>
      <eui-flex-group>
        <eui-flex-item
          grow={false}
        >
          <eui-button
            data-test-subj="fieldSaveButton"
            fill={true}
            isDisabled={false}
            isLoading={false}
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Save field"
              id="common.ui.fieldEditor.actions.saveButton"
              values={Object {}}
            />
          </eui-button>
        </eui-flex-item>
        <eui-flex-item
          grow={false}
        >
          <eui-button-empty
            data-test-subj="fieldCancelButton"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Cancel"
              id="common.ui.fieldEditor.actions.cancelButton"
              values={Object {}}
            />
          </eui-button-empty>
        </eui-flex-item>
        <eui-flex-item>
          <eui-flex-group
            justifyContent="flexEnd"
          >
            <eui-flex-item
              grow={false}
            >
              <eui-button-empty
                color="danger"
                onClick={[Function]}
              >
                <FormattedMessage
                  defaultMessage="Delete"
                  id="common.ui.fieldEditor.actions.deleteButton"
                  values={Object {}}
                />
              </eui-button-empty>
            </eui-flex-item>
          </eui-flex-group>
        </eui-flex-item>
      </eui-flex-group>
    </eui-form-row>
  </eui-form>
  <eui-spacer
    size="l"
  />
</div>
`;

exports[`FieldEditor should show conflict field warning 1`] = `
<div>
  <eui-text>
    <h3>
      <FormattedMessage
        defaultMessage="Create scripted field"
        id="common.ui.fieldEditor.createHeader"
        values={Object {}}
      />
    </h3>
  </eui-text>
  <eui-spacer
    size="m"
  />
  <eui-form>
    <React.Fragment>
      <scripting-disabled-callOut
        isVisible={false}
      />
      <scripting-warning-callOut
        isVisible={true}
      />
      <ScriptingHelpFlyout
        executeScript={[Function]}
        indexPattern={
          Object {
            "fields": Array [
              Object {
                "name": "foobar",
              },
              Object {
                "format": Format {},
                "lang": "painless",
                "name": "test",
                "script": "doc.test.value",
                "scripted": true,
                "type": "number",
              },
              Object {
                "format": Format {},
                "lang": "testlang",
                "name": "test",
                "script": "doc.test.value",
                "scripted": true,
                "type": "number",
              },
            ],
          }
        }
        isVisible={false}
        lang="painless"
        name="foobar"
        onClose={[Function]}
      />
    </React.Fragment>
    <eui-form-row
      error={null}
      helpText={
        <span>
          <eui-icon
            color="warning"
            size="s"
            type="alert"
          />
           
          <FormattedMessage
            defaultMessage="{mappingConflict} You already have a field with the name {fieldName}. Naming your scripted field with the same name means you won't be able to query both fields at the same time."
            id="common.ui.fieldEditor.mappingConflictLabel.mappingConflictDetail"
            values={
              Object {
                "fieldName": <eui-code>
                  foobar
                </eui-code>,
                "mappingConflict": <strong>
                  <FormattedMessage
                    defaultMessage="Mapping Conflict:"
                    id="common.ui.fieldEditor.mappingConflictLabel.mappingConflictLabel"
                    values={Object {}}
                  />
                </strong>,
              }
            }
          />
        </span>
      }
      isInvalid={false}
      label="Name"
    >
      <eui-field-text
        data-test-subj="editorFieldName"
        isInvalid={false}
        onChange={[Function]}
        placeholder="New scripted field"
        value="foobar"
      />
    </eui-form-row>
    <eui-form-row
      helpText={null}
      label="Language"
    >
      <eui-select
        data-test-subj="editorFieldLang"
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "painless",
              "value": "painless",
            },
            Object {
              "text": "testlang",
              "value": "testlang",
            },
          ]
        }
        value="painless"
      />
    </eui-form-row>
    <eui-form-row
      label="Type"
    >
      <eui-select
        data-test-subj="editorFieldType"
        disabled={false}
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "number",
              "value": "number",
            },
            Object {
              "text": "string",
              "value": "string",
            },
            Object {
              "text": "date",
              "value": "date",
            },
            Object {
              "text": "boolean",
              "value": "boolean",
            },
          ]
        }
        value="number"
      />
    </eui-form-row>
    <React.Fragment>
      <eui-form-row
        helpText={
          <FormattedMessage
            defaultMessage="Formatting allows you to control the way that specific values are displayed. It can also cause values to be completely changed and prevent highlighting in Discover from working."
            id="common.ui.fieldEditor.formatLabel"
            values={Object {}}
          />
        }
        label={
          <FormattedMessage
            defaultMessage="Format (Default: {defaultFormat})"
            id="common.ui.fieldEditor.defaultFormatHeader"
            values={
              Object {
                "defaultFormat": <eui-code>
                  Test format
                </eui-code>,
              }
            }
          />
        }
      >
        <eui-select
          data-test-subj="editorSelectedFormatId"
          onChange={[Function]}
          options={
            Array [
              Object {
                "text": "- Default -",
                "value": "",
              },
              Object {
                "text": "Test format",
                "value": "test_format",
              },
            ]
          }
        />
      </eui-form-row>
    </React.Fragment>
    <eui-form-row
      label="Popularity"
    >
      <eui-field-number
        data-test-subj="editorFieldCount"
        onChange={[Function]}
      />
    </eui-form-row>
    <React.Fragment>
      <eui-form-row
        error="Script is required"
        isInvalid={true}
        label="Script"
      >
        <eui-textArea
          data-test-subj="editorFieldScript"
          isInvalid={true}
          onChange={[Function]}
        />
      </eui-form-row>
      <eui-form-row>
        <React.Fragment>
          <eui-text>
            <FormattedMessage
              defaultMessage="Access fields with {code}."
              id="common.ui.fieldEditor.script.accessWithLabel"
              values={
                Object {
                  "code": <code>
                    doc['some_field'].value
                  </code>,
                }
              }
            />
          </eui-text>
          <br />
          <eui-link
            data-test-subj="scriptedFieldsHelpLink"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Get help with the syntax and preview the results of your script."
              id="common.ui.fieldEditor.script.getHelpLabel"
              values={Object {}}
            />
          </eui-link>
        </React.Fragment>
      </eui-form-row>
    </React.Fragment>
    <eui-form-row>
      <eui-flex-group>
        <eui-flex-item
          grow={false}
        >
          <eui-button
            data-test-subj="fieldSaveButton"
            fill={true}
            isDisabled={true}
            isLoading={false}
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Create field"
              id="common.ui.fieldEditor.actions.createButton"
              values={Object {}}
            />
          </eui-button>
        </eui-flex-item>
        <eui-flex-item
          grow={false}
        >
          <eui-button-empty
            data-test-subj="fieldCancelButton"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Cancel"
              id="common.ui.fieldEditor.actions.cancelButton"
              values={Object {}}
            />
          </eui-button-empty>
        </eui-flex-item>
      </eui-flex-group>
    </eui-form-row>
  </eui-form>
  <eui-spacer
    size="l"
  />
</div>
`;

exports[`FieldEditor should show deprecated lang warning 1`] = `
<div>
  <eui-text>
    <h3>
      <FormattedMessage
        defaultMessage="Edit {fieldName}"
        id="common.ui.fieldEditor.editHeader"
        values={
          Object {
            "fieldName": "test",
          }
        }
      />
    </h3>
  </eui-text>
  <eui-spacer
    size="m"
  />
  <eui-form>
    <React.Fragment>
      <scripting-disabled-callOut
        isVisible={false}
      />
      <scripting-warning-callOut
        isVisible={true}
      />
      <ScriptingHelpFlyout
        executeScript={[Function]}
        indexPattern={
          Object {
            "fields": Array [
              Object {
                "name": "foobar",
              },
              Object {
                "format": Format {},
                "lang": "painless",
                "name": "test",
                "script": "doc.test.value",
                "scripted": true,
                "type": "number",
              },
              Object {
                "format": Format {},
                "lang": "testlang",
                "name": "test",
                "script": "doc.test.value",
                "scripted": true,
                "type": "number",
              },
            ],
          }
        }
        isVisible={false}
        lang="testlang"
        name="test"
        onClose={[Function]}
        script="doc.test.value"
      />
    </React.Fragment>
    <eui-form-row
      helpText={
        <span>
          <eui-icon
            color="warning"
            size="s"
            type="alert"
          />
           
          <strong>
            <FormattedMessage
              defaultMessage="Deprecation Warning:"
              id="common.ui.fieldEditor.warningHeader"
              values={Object {}}
            />
          </strong>
           
          <FormattedMessage
            defaultMessage="{language} is deprecated and support will be removed in the next major version of Kibana and Elasticsearch. We recommend using {painlessLink} for new scripted fields."
            id="common.ui.fieldEditor.warningLabel.warningDetail"
            values={
              Object {
                "language": <eui-code>
                  testlang
                </eui-code>,
                "painlessLink": <eui-link
                  href="(docLink for scriptedFields.painless)"
                  target="_window"
                >
                  Painless
                </eui-link>,
              }
            }
          />
        </span>
      }
      label="Language"
    >
      <eui-select
        data-test-subj="editorFieldLang"
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "painless",
              "value": "painless",
            },
            Object {
              "text": "testlang",
              "value": "testlang",
            },
          ]
        }
        value="testlang"
      />
    </eui-form-row>
    <eui-form-row
      label="Type"
    >
      <eui-select
        data-test-subj="editorFieldType"
        disabled={false}
        onChange={[Function]}
        options={
          Array [
            Object {
              "text": "string",
              "value": "string",
            },
            Object {
              "text": "number",
              "value": "number",
            },
            Object {
              "text": "date",
              "value": "date",
            },
            Object {
              "text": "ip",
              "value": "ip",
            },
            Object {
              "text": "boolean",
              "value": "boolean",
            },
            Object {
              "text": "geo_point",
              "value": "geo_point",
            },
            Object {
              "text": "geo_shape",
              "value": "geo_shape",
            },
            Object {
              "text": "attachment",
              "value": "attachment",
            },
            Object {
              "text": "murmur3",
              "value": "murmur3",
            },
            Object {
              "text": "_source",
              "value": "_source",
            },
            Object {
              "text": "unknown",
              "value": "unknown",
            },
            Object {
              "text": "conflict",
              "value": "conflict",
            },
          ]
        }
        value="number"
      />
    </eui-form-row>
    <React.Fragment>
      <eui-form-row
        helpText={
          <FormattedMessage
            defaultMessage="Formatting allows you to control the way that specific values are displayed. It can also cause values to be completely changed and prevent highlighting in Discover from working."
            id="common.ui.fieldEditor.formatLabel"
            values={Object {}}
          />
        }
        label={
          <FormattedMessage
            defaultMessage="Format (Default: {defaultFormat})"
            id="common.ui.fieldEditor.defaultFormatHeader"
            values={
              Object {
                "defaultFormat": <eui-code>
                  Test format
                </eui-code>,
              }
            }
          />
        }
      >
        <eui-select
          data-test-subj="editorSelectedFormatId"
          onChange={[Function]}
          options={
            Array [
              Object {
                "text": "- Default -",
                "value": "",
              },
              Object {
                "text": "Test format",
                "value": "test_format",
              },
            ]
          }
        />
      </eui-form-row>
    </React.Fragment>
    <eui-form-row
      label="Popularity"
    >
      <eui-field-number
        data-test-subj="editorFieldCount"
        onChange={[Function]}
      />
    </eui-form-row>
    <React.Fragment>
      <eui-form-row
        error={null}
        isInvalid={false}
        label="Script"
      >
        <eui-textArea
          data-test-subj="editorFieldScript"
          isInvalid={false}
          onChange={[Function]}
          value="doc.test.value"
        />
      </eui-form-row>
      <eui-form-row>
        <React.Fragment>
          <eui-text>
            <FormattedMessage
              defaultMessage="Access fields with {code}."
              id="common.ui.fieldEditor.script.accessWithLabel"
              values={
                Object {
                  "code": <code>
                    doc['some_field'].value
                  </code>,
                }
              }
            />
          </eui-text>
          <br />
          <eui-link
            data-test-subj="scriptedFieldsHelpLink"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Get help with the syntax and preview the results of your script."
              id="common.ui.fieldEditor.script.getHelpLabel"
              values={Object {}}
            />
          </eui-link>
        </React.Fragment>
      </eui-form-row>
    </React.Fragment>
    <eui-form-row>
      <eui-flex-group>
        <eui-flex-item
          grow={false}
        >
          <eui-button
            data-test-subj="fieldSaveButton"
            fill={true}
            isDisabled={false}
            isLoading={false}
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Save field"
              id="common.ui.fieldEditor.actions.saveButton"
              values={Object {}}
            />
          </eui-button>
        </eui-flex-item>
        <eui-flex-item
          grow={false}
        >
          <eui-button-empty
            data-test-subj="fieldCancelButton"
            onClick={[Function]}
          >
            <FormattedMessage
              defaultMessage="Cancel"
              id="common.ui.fieldEditor.actions.cancelButton"
              values={Object {}}
            />
          </eui-button-empty>
        </eui-flex-item>
        <eui-flex-item>
          <eui-flex-group
            justifyContent="flexEnd"
          >
            <eui-flex-item
              grow={false}
            >
              <eui-button-empty
                color="danger"
                onClick={[Function]}
              >
                <FormattedMessage
                  defaultMessage="Delete"
                  id="common.ui.fieldEditor.actions.deleteButton"
                  values={Object {}}
                />
              </eui-button-empty>
            </eui-flex-item>
          </eui-flex-group>
        </eui-flex-item>
      </eui-flex-group>
    </eui-form-row>
  </eui-form>
  <eui-spacer
    size="l"
  />
</div>
`;
