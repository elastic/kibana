// Base

.ng-dirty, .ng-touched {
  input.ng-invalid#{&},
  textarea.ng-invalid#{&},
  select.ng-invalid#{&} {
    border-color: $state-danger-bg !important;
  }
}

input[type="radio"],
input[type="checkbox"],
.radio,
.radio-inline,
.checkbox,
.checkbox-inline {
  &[disabled],
  fieldset[disabled] & {
    cursor: default;
    opacity: .8;
  }
}

// chrome-context

.content {
  display: flex;
  flex-flow: row nowrap;
  width: 100%;
  height: 100%;
  overflow: hidden;

  > nav {
    z-index: 5;

    .navbar-right {
      margin-right: 0 !important;
    }
  }
}

.application {
  position: relative;
  z-index: 0;
  background-color: $white;
  display: flex;
  flex-grow: 1;
  flex-shrink: 0;
  flex-basis: auto;
  flex-direction: column;

  > * {
    flex-shrink: 0;
  }
}

.checkbox label {
  display: flex;
  align-items: center;
  padding-left: 0 !important;

  input[type="checkbox"] {
    float: none;
    margin: 0 4px;
    position: static;
  }
}

notifications {
  z-index: 1;
}

//== Subnav
//
// Use for adding a subnav to your app


.application,
.app-container {
  > * {
    position: relative;
  }

  > config {
    z-index: 1;
  }

  > navbar {
    padding-bottom: $euiSizeS;
  }

  > kbn-top-nav {
    z-index: 5;
  }

  > nav,
  > navbar {
    z-index: 2 !important;
  }
}

//== Table

kbn-table, .kbn-table {
  font-size: $euiFontSizeXS;

  th {
    white-space: nowrap;
    padding-right: $euiSizeS;

    .fa {
      font-size: 1.1em;
    }
  }
}

//== SavedObjectFinder
saved-object-finder,
paginated-selectable-list {

  .list-sort-button {
    border-top-left-radius: 0 !important;
    border-top-right-radius: 0 !important;
    border: none;
    padding: $euiSizeS $euiSize;
    font-weight: $euiFontWeightRegular;
    background-color: $euiColorLightestShade;
  }

  ul.li-striped {
    li {
      border: none;
    }

    li:nth-child(even) {
      background-color: $euiColorLightestShade;
    }

    li:nth-child(odd) {
      background-color: $euiColorEmptyShade;
    }

    .paginate-heading {
      font-weight: $euiFontWeightRegular;
      color: $euiColorDarkestShade;
    }

    .list-group-item {
      padding: $euiSizeS $euiSize;

      ul {
        padding: 0;
        display: flex;
        flex-direction: row;

        .finder-type {
          margin-right: $euiSizeS;
        }
      }

      a {
        display: block;
        color: $euiColorPrimary !important;

        i {
          color: shade($euiColorPrimary, 10%) !important;
          margin-right: $euiSizeS;
        }
      }

      &:first-child {
        border-top-left-radius: 0 !important;
        border-top-right-radius: 0 !important;
      }

      &.list-group-no-results p {
        margin-bottom: 0 !important;
      }
    }
  }

  paginate {
    paginate-controls {
      margin: $euiSize;
    }
  }
}

style-compile {
  display: none;
}

.cell-hover {
  position: relative;

  /**
   * 1. Center vertically regardless of row height.
   */
  .table-cell-filter {
    position: absolute;
    white-space: nowrap;
    right: 0;
    top: 50%; /* 1 */
    transform: translateY(-50%); /* 1 */
    display: none;
  }

  &:hover {
    .table-cell-filter {
      display: inline;
    }

    .cell-hover-show {
      visibility: visible;
    }
  }
}

.cell-hover-show {
  // so that the cell doesn't change size on hover
  visibility: hidden;
}

[fixed-scroll] {
  overflow-x: auto;
  padding-bottom: 0;

  + .fixed-scroll-scroller {
    position: fixed;
    bottom: 0;
    overflow-x: auto;
    overflow-y: hidden;
  }
}


// TODO: Extract these styles into the UI Framework.

.page-row {
  padding: 0 $euiSize;
  margin: $euiSize 0;
}

.page-row-text {
  color: $euiColorDarkShade;
  font-size: $euiFontSizeS;
}

.kuiFormSection {
  margin-bottom: $euiSize;
}

.kuiFormLabel {
  display: block;
  margin-bottom: 5px;
  font-weight: 700;
}

.kuiInputNote {
  margin: $euiSizeXS 0 $euiSizeS;
}

.kuiInputNote--danger {
  color: $euiColorDanger;
}

.kuiInputNote--warning {
  color: $euiColorWarning;
}

.kuiFormSection {
  margin-bottom: $euiSize;
}

// EUITODO: Move to EUI to ensure this doesn't happen elsewhere
.euiComboBox {
  input:focus {
    box-shadow: none;
  }
}

// Utility classes

.fullWidth {
  width: 100% !important;
}

.small {
  font-size: 0.9em !important;
}
.smaller {
  font-size: 0.8em !important;
}
.smallest {
  font-size: 0.7em !important;
}

// Colors available for font awesome icons, these might not look good with normal text
.text-color-warning {
  color: $brand-warning;
}

.text-monospace {
  font-family: $font-family-monospace;
}
