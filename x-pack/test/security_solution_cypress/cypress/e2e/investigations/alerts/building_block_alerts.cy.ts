/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { getBuildingBlockRule } from '../../../objects/rule';
import { OVERVIEW_ALERTS_HISTOGRAM_EMPTY } from '../../../screens/overview';
import { HIGHLIGHTED_ROWS_IN_TABLE } from '../../../screens/rule_details';
import { createRule } from '../../../tasks/api_calls/rules';
import { waitForAlertsToPopulate } from '../../../tasks/create_new_rule';
import { login } from '../../../tasks/login';
import { visit } from '../../../tasks/navigation';
import { visitRuleDetailsPage, waitForTheRuleToBeExecuted } from '../../../tasks/rule_details';
import { OVERVIEW_URL } from '../../../urls/navigation';

const EXPECTED_NUMBER_OF_ALERTS = 5;

describe('Alerts generated by building block rules', { tags: ['@ess', '@serverless'] }, () => {
  before(() => {
    cy.task('esArchiverLoad', { archiveName: 'auditbeat_big' });
  });

  after(() => {
    cy.task('esArchiverUnload', 'auditbeat_big');
  });

  beforeEach(() => {
    login();
    createRule(getBuildingBlockRule()).then((rule) => visitRuleDetailsPage(rule.body.id));
  });

  it('Alerts should be visible on the Rule Detail page and not visible on the Overview page', () => {
    waitForTheRuleToBeExecuted();

    // Check that generated events are visible on the Details page
    waitForAlertsToPopulate(EXPECTED_NUMBER_OF_ALERTS);

    // Make sure rows are highlighted
    cy.get(HIGHLIGHTED_ROWS_IN_TABLE).should('exist');

    visit(OVERVIEW_URL);

    // Check that generated events are hidden on the Overview page
    cy.get(OVERVIEW_ALERTS_HISTOGRAM_EMPTY).should('contain.text', 'No results found');
  });
});
