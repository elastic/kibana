/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import type SuperTest from 'supertest';
import {
  ELASTIC_HTTP_VERSION_HEADER,
  X_ELASTIC_INTERNAL_ORIGIN_REQUEST,
} from '@kbn/core-http-common';
import { getSpaceUrlPrefix } from '../get_space_prefix';

export interface CreateConnectorBody {
  readonly name: string;
  readonly config: Record<string, unknown>;
  readonly connector_type_id: string;
  readonly secrets: Record<string, unknown>;
}

/**
 * Creates a connector
 *
 * @param supertest The supertest agent
 * @param connector The connector to create
 * @param id Created connector id (options, autogenerated if not passed)
 * @param spaceId The space id (optional, defaults to "default")
 */
export async function createConnector(
  supertest: SuperTest.SuperTest<SuperTest.Test>,
  connector: CreateConnectorBody,
  { id = '', spaceId = 'default' } = {}
): Promise<string> {
  const { body } = await supertest
    .post(`${getSpaceUrlPrefix(spaceId)}/api/actions/connector/${id}`)
    .set('kbn-xsrf', 'some-xsrf-token')
    .set(ELASTIC_HTTP_VERSION_HEADER, '1')
    .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
    .send(connector)
    .expect(200);

  return body.id;
}
