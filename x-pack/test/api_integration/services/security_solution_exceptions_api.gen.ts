/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Exceptions API client for tests
 *   version: Bundle (no version)
 */

import {
  ELASTIC_HTTP_VERSION_HEADER,
  X_ELASTIC_INTERNAL_ORIGIN_REQUEST,
} from '@kbn/core-http-common';
import { replaceParams } from '@kbn/openapi-common/shared';

import { CreateExceptionListRequestBodyInput } from '@kbn/securitysolution-exceptions-common/api/create_exception_list/create_exception_list.gen';
import { CreateExceptionListItemRequestBodyInput } from '@kbn/securitysolution-exceptions-common/api/create_exception_list_item/create_exception_list_item.gen';
import {
  CreateRuleExceptionListItemsRequestParamsInput,
  CreateRuleExceptionListItemsRequestBodyInput,
} from '@kbn/securitysolution-exceptions-common/api/create_rule_exceptions/create_rule_exceptions.gen';
import { CreateSharedExceptionListRequestBodyInput } from '@kbn/securitysolution-exceptions-common/api/create_shared_exceptions_list/create_shared_exceptions_list.gen';
import { DeleteExceptionListRequestQueryInput } from '@kbn/securitysolution-exceptions-common/api/delete_exception_list/delete_exception_list.gen';
import { DeleteExceptionListItemRequestQueryInput } from '@kbn/securitysolution-exceptions-common/api/delete_exception_list_item/delete_exception_list_item.gen';
import { DuplicateExceptionListRequestQueryInput } from '@kbn/securitysolution-exceptions-common/api/duplicate_exception_list/duplicate_exception_list.gen';
import { ExportExceptionListRequestQueryInput } from '@kbn/securitysolution-exceptions-common/api/export_exception_list/export_exception_list.gen';
import { FindExceptionListItemsRequestQueryInput } from '@kbn/securitysolution-exceptions-common/api/find_exception_list_item/find_exception_list_item.gen';
import { FindExceptionListsRequestQueryInput } from '@kbn/securitysolution-exceptions-common/api/find_exception_list/find_exception_list.gen';
import { GetExceptionListRequestQueryInput } from '@kbn/securitysolution-exceptions-common/api/read_exception_list/read_exception_list.gen';
import { GetExceptionListItemRequestQueryInput } from '@kbn/securitysolution-exceptions-common/api/read_exception_list_item/read_exception_list_item.gen';
import { GetExceptionListSummaryRequestQueryInput } from '@kbn/securitysolution-exceptions-common/api/summary_exception_list/summary_exception_list.gen';
import { ImportExceptionListRequestQueryInput } from '@kbn/securitysolution-exceptions-common/api/import_exceptions/import_exceptions.gen';
import { UpdateExceptionListRequestBodyInput } from '@kbn/securitysolution-exceptions-common/api/update_exception_list/update_exception_list.gen';
import { UpdateExceptionListItemRequestBodyInput } from '@kbn/securitysolution-exceptions-common/api/update_exception_list_item/update_exception_list_item.gen';
import { FtrProviderContext } from '../ftr_provider_context';

export function SecuritySolutionApiProvider({ getService }: FtrProviderContext) {
  const supertest = getService('supertest');

  return {
    createExceptionList(props: CreateExceptionListProps) {
      return supertest
        .post('/api/exception_lists')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .send(props.body as object);
    },
    createExceptionListItem(props: CreateExceptionListItemProps) {
      return supertest
        .post('/api/exception_lists/items')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .send(props.body as object);
    },
    createRuleExceptionListItems(props: CreateRuleExceptionListItemsProps) {
      return supertest
        .post(replaceParams('/api/detection_engine/rules/{id}/exceptions', props.params))
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .send(props.body as object);
    },
    createSharedExceptionList(props: CreateSharedExceptionListProps) {
      return supertest
        .post('/api/exceptions/shared')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .send(props.body as object);
    },
    deleteExceptionList(props: DeleteExceptionListProps) {
      return supertest
        .delete('/api/exception_lists')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .query(props.query);
    },
    deleteExceptionListItem(props: DeleteExceptionListItemProps) {
      return supertest
        .delete('/api/exception_lists/items')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .query(props.query);
    },
    duplicateExceptionList(props: DuplicateExceptionListProps) {
      return supertest
        .post('/api/exception_lists/_duplicate')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .query(props.query);
    },
    /**
     * Exports an exception list and its associated items to an .ndjson file
     */
    exportExceptionList(props: ExportExceptionListProps) {
      return supertest
        .post('/api/exception_lists/_export')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .query(props.query);
    },
    findExceptionListItems(props: FindExceptionListItemsProps) {
      return supertest
        .get('/api/exception_lists/items/_find')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .query(props.query);
    },
    findExceptionLists(props: FindExceptionListsProps) {
      return supertest
        .get('/api/exception_lists/_find')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .query(props.query);
    },
    getExceptionList(props: GetExceptionListProps) {
      return supertest
        .get('/api/exception_lists')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .query(props.query);
    },
    getExceptionListItem(props: GetExceptionListItemProps) {
      return supertest
        .get('/api/exception_lists/items')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .query(props.query);
    },
    getExceptionListSummary(props: GetExceptionListSummaryProps) {
      return supertest
        .get('/api/exception_lists/summary')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .query(props.query);
    },
    /**
     * Imports an exception list and associated items
     */
    importExceptionList(props: ImportExceptionListProps) {
      return supertest
        .post('/api/exception_lists/_import')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .query(props.query);
    },
    updateExceptionList(props: UpdateExceptionListProps) {
      return supertest
        .put('/api/exception_lists')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .send(props.body as object);
    },
    updateExceptionListItem(props: UpdateExceptionListItemProps) {
      return supertest
        .put('/api/exception_lists/items')
        .set('kbn-xsrf', 'true')
        .set(ELASTIC_HTTP_VERSION_HEADER, '2023-10-31')
        .set(X_ELASTIC_INTERNAL_ORIGIN_REQUEST, 'kibana')
        .send(props.body as object);
    },
  };
}

export interface CreateExceptionListProps {
  body: CreateExceptionListRequestBodyInput;
}
export interface CreateExceptionListItemProps {
  body: CreateExceptionListItemRequestBodyInput;
}
export interface CreateRuleExceptionListItemsProps {
  params: CreateRuleExceptionListItemsRequestParamsInput;
  body: CreateRuleExceptionListItemsRequestBodyInput;
}
export interface CreateSharedExceptionListProps {
  body: CreateSharedExceptionListRequestBodyInput;
}
export interface DeleteExceptionListProps {
  query: DeleteExceptionListRequestQueryInput;
}
export interface DeleteExceptionListItemProps {
  query: DeleteExceptionListItemRequestQueryInput;
}
export interface DuplicateExceptionListProps {
  query: DuplicateExceptionListRequestQueryInput;
}
export interface ExportExceptionListProps {
  query: ExportExceptionListRequestQueryInput;
}
export interface FindExceptionListItemsProps {
  query: FindExceptionListItemsRequestQueryInput;
}
export interface FindExceptionListsProps {
  query: FindExceptionListsRequestQueryInput;
}
export interface GetExceptionListProps {
  query: GetExceptionListRequestQueryInput;
}
export interface GetExceptionListItemProps {
  query: GetExceptionListItemRequestQueryInput;
}
export interface GetExceptionListSummaryProps {
  query: GetExceptionListSummaryRequestQueryInput;
}
export interface ImportExceptionListProps {
  query: ImportExceptionListRequestQueryInput;
}
export interface UpdateExceptionListProps {
  body: UpdateExceptionListRequestBodyInput;
}
export interface UpdateExceptionListItemProps {
  body: UpdateExceptionListItemRequestBodyInput;
}
