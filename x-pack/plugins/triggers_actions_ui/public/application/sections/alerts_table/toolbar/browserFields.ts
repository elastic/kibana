/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

// eslint-disable-next-line import/no-default-export
export default {
  base: {
    fields: {
      '@timestamp': {
        aggregatable: true,
        category: 'base',
        description:
          'Date/time when the event originated. This is the date/time extracted from the event, typically representing when the event was generated by the source. If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline. Required field for all events.',
        example: '2016-05-23T08:05:34.853Z',
        name: '@timestamp',
        readFromDocValues: true,
        searchable: true,
        type: 'date',
      },
      _id: {
        aggregatable: false,
        category: 'base',
        description: 'Each document has an _id that uniquely identifies it',
        example: 'Y-6TfmcB0WOhS6qyMv3s',
        name: '_id',
        readFromDocValues: false,
        searchable: true,
        type: 'string',
      },
      _index: {
        aggregatable: true,
        category: 'base',
        description:
          'An index is like a ‘database’ in a relational database. It has a mapping which defines multiple types. An index is a logical namespace which maps to one or more primary shards and can have zero or more replica shards.',
        example: 'auditbeat-8.0.0-2019.02.19-000001',
        name: '_index',
        readFromDocValues: false,
        searchable: true,
        type: 'string',
      },
      tags: {
        aggregatable: true,
        category: 'base',
        description: 'List of keywords used to tag each event.',
        example: '["production", "env2"]',
        name: 'tags',
        readFromDocValues: true,
        searchable: true,
        type: 'string',
      },
    },
  },
  _score: {
    fields: {
      _score: {
        name: '_score',
        type: 'number',
        searchable: false,
        aggregatable: false,
        readFromDocValues: false,
        metadata_field: true,
        category: '_score',
        description: '',
        example: '',
      },
    },
  },
  _source: {
    fields: {
      _source: {
        name: '_source',
        type: '_source',
        esTypes: ['_source'],
        searchable: false,
        aggregatable: false,
        readFromDocValues: false,
        metadata_field: true,
        category: '_source',
        description: '',
        example: '',
      },
    },
  },
  ecs: {
    fields: {
      'ecs.version': {
        aggregatable: true,
        category: 'ecs',
        description:
          'ECS version this event conforms to. `ecs.version` is a required field and must exist in all events. When querying across multiple indices -- which may conform to slightly different ECS versions -- this field lets integrations adjust to the schema version of the events.',
        example: '1.0.0',
        name: 'ecs.version',
        readFromDocValues: true,
        searchable: true,
        type: 'string',
      },
    },
  },
  event: {
    fields: {
      'event.action': {
        aggregatable: true,
        category: 'event',
        description:
          'The action captured by the event. This describes the information in the event. It is more specific than `event.category`. Examples are `group-add`, `process-started`, `file-created`. The value is normally defined by the implementer.',
        example: 'user-password-change',
        name: 'event.action',
        readFromDocValues: true,
        searchable: true,
        type: 'string',
      },
      'event.kind': {
        aggregatable: true,
        category: 'event',
        description:
          'This is one of four ECS Categorization Fields, and indicates the highest level in the ECS category hierarchy. `event.kind` gives high-level information about what type of information the event contains, without being specific to the contents of the event. For example, values of this field distinguish alert events from metric events. The value of this field can be used to inform how these kinds of events should be handled. They may warrant different retention, different access control, it may also help understand whether the data coming in at a regular interval or not.',
        example: 'alert',
        name: 'event.kind',
        readFromDocValues: true,
        searchable: true,
        type: 'string',
      },
    },
  },
  kibana: {
    fields: {
      'kibana.alert.action_group': {
        name: 'kibana.alert.action_group',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.duration.us': {
        name: 'kibana.alert.duration.us',
        type: 'number',
        esTypes: ['long'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.end': {
        name: 'kibana.alert.end',
        type: 'date',
        esTypes: ['date'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.evaluation.threshold': {
        name: 'kibana.alert.evaluation.threshold',
        type: 'number',
        esTypes: ['scaled_float'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.evaluation.value': {
        name: 'kibana.alert.evaluation.value',
        type: 'number',
        esTypes: ['scaled_float'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.instance.id': {
        name: 'kibana.alert.instance.id',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.reason': {
        name: 'kibana.alert.reason',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.risk_score': {
        name: 'kibana.alert.risk_score',
        type: 'number',
        esTypes: ['float'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.author': {
        name: 'kibana.alert.rule.author',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.category': {
        name: 'kibana.alert.rule.category',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.consumer': {
        name: 'kibana.alert.rule.consumer',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.created_at': {
        name: 'kibana.alert.rule.created_at',
        type: 'date',
        esTypes: ['date'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.created_by': {
        name: 'kibana.alert.rule.created_by',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.description': {
        name: 'kibana.alert.rule.description',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.enabled': {
        name: 'kibana.alert.rule.enabled',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.execution.uuid': {
        name: 'kibana.alert.rule.execution.uuid',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.from': {
        name: 'kibana.alert.rule.from',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.interval': {
        name: 'kibana.alert.rule.interval',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.license': {
        name: 'kibana.alert.rule.license',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.name': {
        name: 'kibana.alert.rule.name',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.note': {
        name: 'kibana.alert.rule.note',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.parameters': {
        name: 'kibana.alert.rule.parameters',
        type: 'unknown',
        esTypes: ['flattened'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.producer': {
        name: 'kibana.alert.rule.producer',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.references': {
        name: 'kibana.alert.rule.references',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.rule_id': {
        name: 'kibana.alert.rule.rule_id',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.rule_name_override': {
        name: 'kibana.alert.rule.rule_name_override',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.rule_type_id': {
        name: 'kibana.alert.rule.rule_type_id',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.tags': {
        name: 'kibana.alert.rule.tags',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.to': {
        name: 'kibana.alert.rule.to',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.type': {
        name: 'kibana.alert.rule.type',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.updated_at': {
        name: 'kibana.alert.rule.updated_at',
        type: 'date',
        esTypes: ['date'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.updated_by': {
        name: 'kibana.alert.rule.updated_by',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.uuid': {
        name: 'kibana.alert.rule.uuid',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.rule.version': {
        name: 'kibana.alert.rule.version',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.severity': {
        name: 'kibana.alert.severity',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.start': {
        name: 'kibana.alert.start',
        type: 'date',
        esTypes: ['date'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.status': {
        name: 'kibana.alert.status',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.system_status': {
        name: 'kibana.alert.system_status',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.uuid': {
        name: 'kibana.alert.uuid',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.workflow_reason': {
        name: 'kibana.alert.workflow_reason',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.workflow_status': {
        name: 'kibana.alert.workflow_status',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.alert.workflow_user': {
        name: 'kibana.alert.workflow_user',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.space_ids': {
        name: 'kibana.space_ids',
        type: 'string',
        esTypes: ['keyword'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
      'kibana.version': {
        name: 'kibana.version',
        type: 'string',
        esTypes: ['version'],
        searchable: true,
        aggregatable: true,
        readFromDocValues: true,
        metadata_field: false,
        category: 'kibana',
        description: '',
        example: '',
      },
    },
  },
};
