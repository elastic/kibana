// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rules list bulk actions can bulk delete 1`] = `
[MockFunction] {
  "calls": Array [
    Array [
      Object {
        "filter": Object {
          "arguments": Array [
            Object {
              "arguments": Array [
                Object {
                  "isQuoted": false,
                  "type": "literal",
                  "value": "alert.attributes.alertTypeId",
                },
                Object {
                  "isQuoted": false,
                  "type": "literal",
                  "value": "test_rule_type",
                },
              ],
              "function": "is",
              "type": "function",
            },
            Object {
              "arguments": Array [
                Object {
                  "isQuoted": false,
                  "type": "literal",
                  "value": "alert.attributes.alertTypeId",
                },
                Object {
                  "isQuoted": false,
                  "type": "literal",
                  "value": "test_rule_type_disabled_by_license",
                },
              ],
              "function": "is",
              "type": "function",
            },
          ],
          "function": "or",
          "type": "function",
        },
        "http": Object {
          "addLoadingCountSource": [MockFunction],
          "anonymousPaths": Object {
            "isAnonymous": [MockFunction],
            "register": [MockFunction],
          },
          "basePath": BasePath {
            "basePath": "",
            "get": [Function],
            "prepend": [Function],
            "publicBaseUrl": undefined,
            "remove": [Function],
            "serverBasePath": "",
          },
          "delete": [MockFunction],
          "externalUrl": Object {
            "isInternalUrl": [MockFunction],
            "validateUrl": [MockFunction],
          },
          "fetch": [MockFunction],
          "get": [MockFunction],
          "getLoadingCount$": [MockFunction],
          "head": [MockFunction],
          "intercept": [MockFunction],
          "options": [MockFunction],
          "patch": [MockFunction],
          "post": [MockFunction],
          "put": [MockFunction],
        },
        "ids": Array [],
      },
    ],
  ],
  "results": Array [
    Object {
      "type": "return",
      "value": Promise {},
    },
  ],
}
`;
