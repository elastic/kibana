// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SuricataSignature rendering it renders the default SuricataSignature 1`] = `
<pure(Component)
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
>
  <Component
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {
          "date": Object {
            "full": Object {
              "day": "numeric",
              "month": "long",
              "weekday": "long",
              "year": "numeric",
            },
            "long": Object {
              "day": "numeric",
              "month": "long",
              "year": "numeric",
            },
            "medium": Object {
              "day": "numeric",
              "month": "short",
              "year": "numeric",
            },
            "short": Object {
              "day": "numeric",
              "month": "numeric",
              "year": "2-digit",
            },
          },
          "number": Object {
            "currency": Object {
              "style": "currency",
            },
            "percent": Object {
              "style": "percent",
            },
          },
          "relative": Object {
            "days": Object {
              "units": "day",
            },
            "hours": Object {
              "units": "hour",
            },
            "minutes": Object {
              "units": "minute",
            },
            "months": Object {
              "units": "month",
            },
            "seconds": Object {
              "units": "second",
            },
            "years": Object {
              "units": "year",
            },
          },
          "time": Object {
            "full": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
              "timeZoneName": "short",
            },
            "long": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
              "timeZoneName": "short",
            },
            "medium": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
            },
            "short": Object {
              "hour": "numeric",
              "minute": "numeric",
            },
          },
        },
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {},
        "now": [Function],
        "onError": [Function],
        "textComponent": Symbol(react.fragment),
        "timeZone": null,
      }
    }
  >
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(observable): [Function],
        }
      }
    >
      <ThemeProvider
        theme={[Function]}
      >
        <DragDropContext
          onDragEnd={[MockFunction]}
        >
          <pure(Component)
            id="doc-id-123"
            signature="ET SCAN ATTACK Hello"
            signatureId="id-123"
          >
            <Component
              id="doc-id-123"
              signature="ET SCAN ATTACK Hello"
              signatureId="id-123"
            >
              <EuiFlexGroup
                alignItems="stretch"
                component="div"
                direction="row"
                gutterSize="none"
                justifyContent="center"
                responsive={true}
                wrap={false}
              >
                <div
                  className="euiFlexGroup euiFlexGroup--justifyContentCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
                >
                  <pure(Component)
                    id="doc-id-123"
                    signatureId="id-123"
                  >
                    <Component
                      id="doc-id-123"
                      signatureId="id-123"
                    >
                      <Styled(EuiFlexItem)
                        grow={false}
                      >
                        <EuiFlexItem
                          className="sc-lhVmIH hjCqQV"
                          component="div"
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero sc-lhVmIH hjCqQV"
                          >
                            <Connect(DraggableWrapperComponent)
                              dataProvider={
                                Object {
                                  "and": Array [],
                                  "enabled": true,
                                  "excluded": false,
                                  "id": "suricata-doc-id-123-sig-id-123",
                                  "kqlQuery": "",
                                  "name": "id-123",
                                  "queryMatch": Object {
                                    "field": "suricata.eve.alert.signature_id",
                                    "value": "id-123",
                                  },
                                }
                              }
                              render={[Function]}
                            >
                              <DraggableWrapperComponent
                                dataProvider={
                                  Object {
                                    "and": Array [],
                                    "enabled": true,
                                    "excluded": false,
                                    "id": "suricata-doc-id-123-sig-id-123",
                                    "kqlQuery": "",
                                    "name": "id-123",
                                    "queryMatch": Object {
                                      "field": "suricata.eve.alert.signature_id",
                                      "value": "id-123",
                                    },
                                  }
                                }
                                registerProvider={[Function]}
                                render={[Function]}
                                suricata-doc-id-123-sig-id-123={
                                  Object {
                                    "and": Array [],
                                    "enabled": true,
                                    "excluded": false,
                                    "id": "suricata-doc-id-123-sig-id-123",
                                    "kqlQuery": "",
                                    "name": "id-123",
                                    "queryMatch": Object {
                                      "field": "suricata.eve.alert.signature_id",
                                      "value": "id-123",
                                    },
                                  }
                                }
                                unRegisterProvider={[Function]}
                              >
                                <div
                                  data-test-subj="draggableWrapperDiv"
                                >
                                  <Connect(Droppable)
                                    direction="vertical"
                                    droppableId="droppableId.content.suricata-doc-id-123-sig-id-123"
                                    ignoreContainerClipping={false}
                                    isDropDisabled={true}
                                    type="DEFAULT"
                                  >
                                    <Droppable
                                      direction="vertical"
                                      dispatch={[Function]}
                                      draggingOverWith={null}
                                      droppableId="droppableId.content.suricata-doc-id-123-sig-id-123"
                                      ignoreContainerClipping={false}
                                      isDraggingOver={false}
                                      isDropDisabled={true}
                                      placeholder={null}
                                      type="DEFAULT"
                                    >
                                      <DroppableDimensionPublisher
                                        direction="vertical"
                                        droppableId="droppableId.content.suricata-doc-id-123-sig-id-123"
                                        getDroppableRef={[Function]}
                                        ignoreContainerClipping={false}
                                        isDropDisabled={true}
                                        type="DEFAULT"
                                      >
                                        <div
                                          data-react-beautiful-dnd-droppable="0"
                                        >
                                          <Connect(Draggable)
                                            disableInteractiveElementBlocking={false}
                                            draggableId="draggableId.content.suricata-doc-id-123-sig-id-123"
                                            index={0}
                                            isDragDisabled={false}
                                            key="suricata-doc-id-123-sig-id-123"
                                          >
                                            <Draggable
                                              dimension={null}
                                              disableInteractiveElementBlocking={false}
                                              draggableId="draggableId.content.suricata-doc-id-123-sig-id-123"
                                              draggingOver={null}
                                              drop={[Function]}
                                              dropAnimationFinished={[Function]}
                                              index={0}
                                              isDragDisabled={false}
                                              isDragging={false}
                                              isDropAnimating={false}
                                              lift={[Function]}
                                              move={[Function]}
                                              moveByWindowScroll={[Function]}
                                              moveDown={[Function]}
                                              moveLeft={[Function]}
                                              moveRight={[Function]}
                                              moveUp={[Function]}
                                              offset={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                              shouldAnimateDisplacement={true}
                                              shouldAnimateDragMovement={false}
                                            >
                                              <DraggableDimensionPublisher
                                                draggableId="draggableId.content.suricata-doc-id-123-sig-id-123"
                                                droppableId="droppableId.content.suricata-doc-id-123-sig-id-123"
                                                getDraggableRef={[Function]}
                                                index={0}
                                                key="draggableId.content.suricata-doc-id-123-sig-id-123"
                                                type="DEFAULT"
                                              >
                                                <Moveable
                                                  destination={
                                                    Object {
                                                      "x": 0,
                                                      "y": 0,
                                                    }
                                                  }
                                                  onMoveEnd={[Function]}
                                                  speed="INSTANT"
                                                >
                                                  <Motion
                                                    defaultStyle={
                                                      Object {
                                                        "x": 0,
                                                        "y": 0,
                                                      }
                                                    }
                                                    onRest={[Function]}
                                                    style={
                                                      Object {
                                                        "x": 0,
                                                        "y": 0,
                                                      }
                                                    }
                                                  >
                                                    <DoubleRenderBlocker
                                                      change={
                                                        Object {
                                                          "x": 0,
                                                          "y": 0,
                                                        }
                                                      }
                                                    >
                                                      <DragHandle
                                                        callbacks={
                                                          Object {
                                                            "onCancel": [Function],
                                                            "onDrop": [Function],
                                                            "onLift": [Function],
                                                            "onMove": [Function],
                                                            "onMoveDown": [Function],
                                                            "onMoveLeft": [Function],
                                                            "onMoveRight": [Function],
                                                            "onMoveUp": [Function],
                                                            "onWindowScroll": [Function],
                                                          }
                                                        }
                                                        canDragInteractiveElements={false}
                                                        draggableId="draggableId.content.suricata-doc-id-123-sig-id-123"
                                                        getDraggableRef={[Function]}
                                                        isDragging={false}
                                                        isDropAnimating={false}
                                                        isEnabled={true}
                                                      >
                                                        <styled.div
                                                          aria-roledescription="Draggable item. Press space bar to lift"
                                                          data-react-beautiful-dnd-drag-handle="0"
                                                          data-react-beautiful-dnd-draggable="0"
                                                          data-test-subj="providerContainer"
                                                          draggable={false}
                                                          innerRef={[Function]}
                                                          onBlur={[Function]}
                                                          onDragStart={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onMouseDown={[Function]}
                                                          onTouchStart={[Function]}
                                                          style={
                                                            Object {
                                                              "transform": null,
                                                              "transition": null,
                                                              "zIndex": 9000,
                                                            }
                                                          }
                                                          tabIndex={0}
                                                        >
                                                          <div
                                                            aria-roledescription="Draggable item. Press space bar to lift"
                                                            className="sc-kEYyzF ljOknM"
                                                            data-react-beautiful-dnd-drag-handle="0"
                                                            data-react-beautiful-dnd-draggable="0"
                                                            data-test-subj="providerContainer"
                                                            draggable={false}
                                                            onBlur={[Function]}
                                                            onDragStart={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onTouchStart={[Function]}
                                                            style={
                                                              Object {
                                                                "transform": null,
                                                                "transition": null,
                                                                "zIndex": 9000,
                                                              }
                                                            }
                                                            tabIndex={0}
                                                          >
                                                            <EuiText
                                                              data-test-subj="draggable-content"
                                                              grow={true}
                                                              size="s"
                                                            >
                                                              <div
                                                                className="euiText euiText--small"
                                                                data-test-subj="draggable-content"
                                                              >
                                                                <Styled(EuiBadge)
                                                                  color="hollow"
                                                                  iconType="number"
                                                                >
                                                                  <EuiBadge
                                                                    className="sc-bYSBpT epevwQ"
                                                                    color="hollow"
                                                                    iconSide="left"
                                                                    iconType="number"
                                                                  >
                                                                    <span
                                                                      className="euiBadge euiBadge--hollow sc-bYSBpT epevwQ"
                                                                      style={null}
                                                                    >
                                                                      <span
                                                                        className="euiBadge__content"
                                                                      >
                                                                        <EuiIcon
                                                                          className="euiBadge__icon"
                                                                          size="s"
                                                                          type="number"
                                                                        >
                                                                          <number
                                                                            className="euiIcon euiIcon--small euiBadge__icon"
                                                                            focusable="false"
                                                                            height="16"
                                                                            style={null}
                                                                            viewBox="0 0 16 16"
                                                                            width="16"
                                                                            xmlns="http://www.w3.org/2000/svg"
                                                                          >
                                                                            <svg
                                                                              className="euiIcon euiIcon--small euiBadge__icon"
                                                                              focusable="false"
                                                                              height="16"
                                                                              style={null}
                                                                              viewBox="0 0 16 16"
                                                                              width="16"
                                                                              xmlns="http://www.w3.org/2000/svg"
                                                                            >
                                                                              <path
                                                                                d="M7.808 10.197H6.796L5.859 13H4.485l.937-2.803H3.966l.219-1.25h1.647l.608-1.805H4.991l.226-1.251h1.64l.95-2.844h1.368l-.95 2.844h1.018l.95-2.844h1.374l-.95 2.844h1.51l-.218 1.25h-1.702l-.608 1.805h1.497l-.219 1.251H9.182L8.252 13H6.878l.93-2.803zm-.602-1.25h1.012l.615-1.805H7.814l-.608 1.804z"
                                                                                fillRule="evenodd"
                                                                              />
                                                                            </svg>
                                                                          </number>
                                                                        </EuiIcon>
                                                                        <span
                                                                          className="euiBadge__text"
                                                                        >
                                                                          id-123
                                                                        </span>
                                                                      </span>
                                                                    </span>
                                                                  </EuiBadge>
                                                                </Styled(EuiBadge)>
                                                              </div>
                                                            </EuiText>
                                                          </div>
                                                        </styled.div>
                                                      </DragHandle>
                                                    </DoubleRenderBlocker>
                                                  </Motion>
                                                </Moveable>
                                              </DraggableDimensionPublisher>
                                            </Draggable>
                                          </Connect(Draggable)>
                                        </div>
                                      </DroppableDimensionPublisher>
                                    </Droppable>
                                  </Connect(Droppable)>
                                </div>
                              </DraggableWrapperComponent>
                            </Connect(DraggableWrapperComponent)>
                          </div>
                        </EuiFlexItem>
                      </Styled(EuiFlexItem)>
                    </Component>
                  </pure(Component)>
                  <pure(Component)
                    tokens={
                      Array [
                        "ET",
                        "SCAN",
                        "ATTACK",
                      ]
                    }
                  >
                    <Component
                      tokens={
                        Array [
                          "ET",
                          "SCAN",
                          "ATTACK",
                        ]
                      }
                    >
                      <Styled(EuiFlexItem)
                        grow={false}
                        key="ET"
                      >
                        <EuiFlexItem
                          className="sc-elJkPf loYSor"
                          component="div"
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero sc-elJkPf loYSor"
                          >
                            <EuiBadge
                              color="hollow"
                              iconSide="left"
                              iconType="tag"
                            >
                              <span
                                className="euiBadge euiBadge--hollow"
                                style={null}
                              >
                                <span
                                  className="euiBadge__content"
                                >
                                  <EuiIcon
                                    className="euiBadge__icon"
                                    size="s"
                                    type="tag"
                                  >
                                    <tag
                                      className="euiIcon euiIcon--small euiBadge__icon"
                                      focusable="false"
                                      height="16"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width="16"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        className="euiIcon euiIcon--small euiBadge__icon"
                                        focusable="false"
                                        height="16"
                                        style={null}
                                        viewBox="0 0 16 16"
                                        width="16"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M6.254 14.97L.996 9.712c-.315-.316-.397-.463-.45-.64a.909.909 0 0 1 0-.534c.053-.177.135-.324.45-.64L7.43 1.466c.182-.183.252-.24.338-.293a.87.87 0 0 1 .273-.113c.099-.023.188-.032.446-.032h5.173c.445 0 .607.046.77.133.162.087.29.214.377.377.088.162.134.324.136.769l.015 5.15c0 .259-.009.348-.032.448a.87.87 0 0 1-.112.273c-.054.087-.111.157-.294.34L8.067 14.97c-.315.315-.462.396-.639.45a.909.909 0 0 1-.535 0c-.176-.054-.324-.135-.639-.45zm1.106-.707l6.453-6.453c.092-.092.126-.128.141-.147.003-.025.004-.074.004-.204l-.015-5.15c0-.181-.003-.245-.009-.275a2.247 2.247 0 0 0-.274-.007H8.487c-.13 0-.179.001-.203.004-.02.015-.055.05-.147.141L1.703 8.606a2.248 2.248 0 0 0-.189.2c.017.024.061.07.19.198l5.257 5.259c.128.128.175.171.2.188.024-.017.071-.06.2-.188zm4.972-10.607a2 2 0 1 1-2.828 2.828 2 2 0 0 1 2.828-2.828zm-.707.707a1 1 0 1 0-1.414 1.414 1 1 0 0 0 1.414-1.414zM6.807 11.28L4.686 9.159a.5.5 0 1 1 .707-.707l2.121 2.12a.5.5 0 1 1-.707.708zm1.414-1.414l-2.12-2.122a.5.5 0 1 1 .706-.707L8.928 9.16a.5.5 0 1 1-.707.707z"
                                        />
                                      </svg>
                                    </tag>
                                  </EuiIcon>
                                  <span
                                    className="euiBadge__text"
                                  >
                                    ET
                                  </span>
                                </span>
                              </span>
                            </EuiBadge>
                          </div>
                        </EuiFlexItem>
                      </Styled(EuiFlexItem)>
                      <Styled(EuiFlexItem)
                        grow={false}
                        key="SCAN"
                      >
                        <EuiFlexItem
                          className="sc-elJkPf loYSor"
                          component="div"
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero sc-elJkPf loYSor"
                          >
                            <EuiBadge
                              color="hollow"
                              iconSide="left"
                              iconType="tag"
                            >
                              <span
                                className="euiBadge euiBadge--hollow"
                                style={null}
                              >
                                <span
                                  className="euiBadge__content"
                                >
                                  <EuiIcon
                                    className="euiBadge__icon"
                                    size="s"
                                    type="tag"
                                  >
                                    <tag
                                      className="euiIcon euiIcon--small euiBadge__icon"
                                      focusable="false"
                                      height="16"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width="16"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        className="euiIcon euiIcon--small euiBadge__icon"
                                        focusable="false"
                                        height="16"
                                        style={null}
                                        viewBox="0 0 16 16"
                                        width="16"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M6.254 14.97L.996 9.712c-.315-.316-.397-.463-.45-.64a.909.909 0 0 1 0-.534c.053-.177.135-.324.45-.64L7.43 1.466c.182-.183.252-.24.338-.293a.87.87 0 0 1 .273-.113c.099-.023.188-.032.446-.032h5.173c.445 0 .607.046.77.133.162.087.29.214.377.377.088.162.134.324.136.769l.015 5.15c0 .259-.009.348-.032.448a.87.87 0 0 1-.112.273c-.054.087-.111.157-.294.34L8.067 14.97c-.315.315-.462.396-.639.45a.909.909 0 0 1-.535 0c-.176-.054-.324-.135-.639-.45zm1.106-.707l6.453-6.453c.092-.092.126-.128.141-.147.003-.025.004-.074.004-.204l-.015-5.15c0-.181-.003-.245-.009-.275a2.247 2.247 0 0 0-.274-.007H8.487c-.13 0-.179.001-.203.004-.02.015-.055.05-.147.141L1.703 8.606a2.248 2.248 0 0 0-.189.2c.017.024.061.07.19.198l5.257 5.259c.128.128.175.171.2.188.024-.017.071-.06.2-.188zm4.972-10.607a2 2 0 1 1-2.828 2.828 2 2 0 0 1 2.828-2.828zm-.707.707a1 1 0 1 0-1.414 1.414 1 1 0 0 0 1.414-1.414zM6.807 11.28L4.686 9.159a.5.5 0 1 1 .707-.707l2.121 2.12a.5.5 0 1 1-.707.708zm1.414-1.414l-2.12-2.122a.5.5 0 1 1 .706-.707L8.928 9.16a.5.5 0 1 1-.707.707z"
                                        />
                                      </svg>
                                    </tag>
                                  </EuiIcon>
                                  <span
                                    className="euiBadge__text"
                                  >
                                    SCAN
                                  </span>
                                </span>
                              </span>
                            </EuiBadge>
                          </div>
                        </EuiFlexItem>
                      </Styled(EuiFlexItem)>
                      <Styled(EuiFlexItem)
                        grow={false}
                        key="ATTACK"
                      >
                        <EuiFlexItem
                          className="sc-elJkPf loYSor"
                          component="div"
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero sc-elJkPf loYSor"
                          >
                            <EuiBadge
                              color="hollow"
                              iconSide="left"
                              iconType="tag"
                            >
                              <span
                                className="euiBadge euiBadge--hollow"
                                style={null}
                              >
                                <span
                                  className="euiBadge__content"
                                >
                                  <EuiIcon
                                    className="euiBadge__icon"
                                    size="s"
                                    type="tag"
                                  >
                                    <tag
                                      className="euiIcon euiIcon--small euiBadge__icon"
                                      focusable="false"
                                      height="16"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width="16"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <svg
                                        className="euiIcon euiIcon--small euiBadge__icon"
                                        focusable="false"
                                        height="16"
                                        style={null}
                                        viewBox="0 0 16 16"
                                        width="16"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path
                                          d="M6.254 14.97L.996 9.712c-.315-.316-.397-.463-.45-.64a.909.909 0 0 1 0-.534c.053-.177.135-.324.45-.64L7.43 1.466c.182-.183.252-.24.338-.293a.87.87 0 0 1 .273-.113c.099-.023.188-.032.446-.032h5.173c.445 0 .607.046.77.133.162.087.29.214.377.377.088.162.134.324.136.769l.015 5.15c0 .259-.009.348-.032.448a.87.87 0 0 1-.112.273c-.054.087-.111.157-.294.34L8.067 14.97c-.315.315-.462.396-.639.45a.909.909 0 0 1-.535 0c-.176-.054-.324-.135-.639-.45zm1.106-.707l6.453-6.453c.092-.092.126-.128.141-.147.003-.025.004-.074.004-.204l-.015-5.15c0-.181-.003-.245-.009-.275a2.247 2.247 0 0 0-.274-.007H8.487c-.13 0-.179.001-.203.004-.02.015-.055.05-.147.141L1.703 8.606a2.248 2.248 0 0 0-.189.2c.017.024.061.07.19.198l5.257 5.259c.128.128.175.171.2.188.024-.017.071-.06.2-.188zm4.972-10.607a2 2 0 1 1-2.828 2.828 2 2 0 0 1 2.828-2.828zm-.707.707a1 1 0 1 0-1.414 1.414 1 1 0 0 0 1.414-1.414zM6.807 11.28L4.686 9.159a.5.5 0 1 1 .707-.707l2.121 2.12a.5.5 0 1 1-.707.708zm1.414-1.414l-2.12-2.122a.5.5 0 1 1 .706-.707L8.928 9.16a.5.5 0 1 1-.707.707z"
                                        />
                                      </svg>
                                    </tag>
                                  </EuiIcon>
                                  <span
                                    className="euiBadge__text"
                                  >
                                    ATTACK
                                  </span>
                                </span>
                              </span>
                            </EuiBadge>
                          </div>
                        </EuiFlexItem>
                      </Styled(EuiFlexItem)>
                    </Component>
                  </pure(Component)>
                  <pure(Component)
                    link="ET SCAN ATTACK Hello"
                    value="Hello"
                  >
                    <Component
                      link="ET SCAN ATTACK Hello"
                      value="Hello"
                    >
                      <Styled(EuiFlexItem)
                        grow={false}
                      >
                        <EuiFlexItem
                          className="sc-jtRfpW CwDOZ"
                          component="div"
                          grow={false}
                        >
                          <div
                            className="euiFlexItem euiFlexItem--flexGrowZero sc-jtRfpW CwDOZ"
                          >
                            <EuiLink
                              color="primary"
                              href="https://www.google.com/search?q=ET%20SCAN%20ATTACK%20Hello"
                              target="_blank"
                              type="button"
                            >
                              <a
                                className="euiLink euiLink--primary"
                                href="https://www.google.com/search?q=ET%20SCAN%20ATTACK%20Hello"
                                rel="noopener noreferrer"
                                target="_blank"
                              >
                                Hello
                              </a>
                            </EuiLink>
                          </div>
                        </EuiFlexItem>
                      </Styled(EuiFlexItem)>
                    </Component>
                  </pure(Component)>
                </div>
              </EuiFlexGroup>
            </Component>
          </pure(Component)>
        </DragDropContext>
      </ThemeProvider>
    </Provider>
  </Component>
</pure(Component)>
`;
