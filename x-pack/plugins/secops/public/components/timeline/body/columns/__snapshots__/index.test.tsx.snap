// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Columns it renders the expected columns 1`] = `
<ThemeProvider
  theme={[Function]}
>
  <Provider
    store={
      Object {
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
        Symbol(observable): [Function],
      }
    }
  >
    <DragDropContext
      onDragEnd={[Function]}
    >
      <Columns
        columnHeaders={
          Array [
            Object {
              "columnHeaderType": "not-filtered",
              "id": "event.severity",
              "minWidth": 120,
              "text": "Severity",
            },
            Object {
              "columnHeaderType": "not-filtered",
              "id": "event.category",
              "minWidth": 120,
              "text": "Category",
            },
            Object {
              "columnHeaderType": "not-filtered",
              "id": "event.type",
              "minWidth": 120,
              "text": "Type",
            },
            Object {
              "columnHeaderType": "not-filtered",
              "id": "host.name",
              "minWidth": 120,
              "text": "Hostname",
            },
            Object {
              "columnHeaderType": "not-filtered",
              "id": "source.ip",
              "minWidth": 120,
              "text": "Source IP",
            },
            Object {
              "columnHeaderType": "not-filtered",
              "id": "destination.ip",
              "minWidth": 120,
              "text": "Destination IP",
            },
            Object {
              "columnHeaderType": "not-filtered",
              "id": "user.name",
              "minWidth": 120,
              "text": "User",
            },
          ]
        }
        columnRenderers={
          Array [
            Object {
              "isInstance": [Function],
              "renderColumn": [Function],
            },
            Object {
              "isInstance": [Function],
              "renderColumn": [Function],
            },
            Object {
              "isInstance": [Function],
              "renderColumn": [Function],
            },
            Object {
              "isInstance": [Function],
              "renderColumn": [Function],
            },
          ]
        }
        ecs={
          Object {
            "_id": "1",
            "destination": Object {
              "ip": "192.168.0.3",
              "port": 6343,
            },
            "event": Object {
              "category": "Access",
              "id": 1,
              "module": "nginx",
              "severity": 3,
              "type": "HTTP Request",
            },
            "geo": Object {
              "country_iso_code": "xx",
              "region_name": "xx",
            },
            "host": Object {
              "ip": Array [
                "192.168.0.1",
              ],
              "name": "apache",
            },
            "source": Object {
              "ip": "192.168.0.1",
              "port": 80,
            },
            "timestamp": "2018-11-05T19:03:25.937Z",
            "user": Object {
              "id": 1,
              "name": "john.dee",
            },
          }
        }
      >
        <Styled(EuiFlexGroup)
          data-test-subj="data-driven-columns"
          gutterSize="none"
        >
          <EuiFlexGroup
            alignItems="stretch"
            className="sc-elJkPf dgypyI"
            component="div"
            data-test-subj="data-driven-columns"
            direction="row"
            gutterSize="none"
            justifyContent="flexStart"
            responsive={true}
            wrap={false}
          >
            <div
              className="euiFlexGroup euiFlexGroup--directionRow euiFlexGroup--responsive sc-elJkPf dgypyI"
              data-test-subj="data-driven-columns"
            >
              <EuiFlexItem
                component="div"
                grow={true}
                key="event.severity"
              >
                <div
                  className="euiFlexItem"
                >
                  <styled.div
                    data-test-subj="column"
                    index={0}
                    maxWidth="100%"
                    minWidth="120px"
                  >
                    <div
                      className="sc-jtRfpW QTOGJ"
                      data-test-subj="column"
                    >
                      <Connect(DraggableWrapperComponent)
                        dataProvider={
                          Object {
                            "and": Array [],
                            "enabled": true,
                            "excluded": false,
                            "id": "id-timeline-column-event_severity-for-event-1",
                            "kqlQuery": "",
                            "name": "event.severity: 3",
                            "queryMatch": Object {
                              "field": "event.severity",
                              "value": 3,
                            },
                          }
                        }
                        key="timeline-draggable-column-event.severity-for-event-1"
                        render={[Function]}
                      >
                        <DraggableWrapperComponent
                          dataProvider={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_severity-for-event-1",
                              "kqlQuery": "",
                              "name": "event.severity: 3",
                              "queryMatch": Object {
                                "field": "event.severity",
                                "value": 3,
                              },
                            }
                          }
                          id-timeline-column-destination_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-destination_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "destination.ip: 192.168.0.3",
                              "queryMatch": Object {
                                "field": "destination.ip",
                                "value": "192.168.0.3",
                              },
                            }
                          }
                          id-timeline-column-event_category-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_category-for-event-1",
                              "kqlQuery": "",
                              "name": "event.category: Access",
                              "queryMatch": Object {
                                "field": "event.category",
                                "value": "Access",
                              },
                            }
                          }
                          id-timeline-column-event_severity-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_severity-for-event-1",
                              "kqlQuery": "",
                              "name": "event.severity: 3",
                              "queryMatch": Object {
                                "field": "event.severity",
                                "value": 3,
                              },
                            }
                          }
                          id-timeline-column-event_type-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_type-for-event-1",
                              "kqlQuery": "",
                              "name": "event.type: HTTP Request",
                              "queryMatch": Object {
                                "field": "event.type",
                                "value": "HTTP Request",
                              },
                            }
                          }
                          id-timeline-column-host_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-host_name-for-event-1",
                              "kqlQuery": "",
                              "name": "host.name: apache",
                              "queryMatch": Object {
                                "field": "host.name",
                                "value": "apache",
                              },
                            }
                          }
                          id-timeline-column-source_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-source_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "source.ip: 192.168.0.1",
                              "queryMatch": Object {
                                "field": "source.ip",
                                "value": "192.168.0.1",
                              },
                            }
                          }
                          id-timeline-column-user_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-user_name-for-event-1",
                              "kqlQuery": "",
                              "name": "user.name: john.dee",
                              "queryMatch": Object {
                                "field": "user.name",
                                "value": "john.dee",
                              },
                            }
                          }
                          registerProvider={[Function]}
                          render={[Function]}
                          unRegisterProvider={[Function]}
                        >
                          <div
                            data-test-subj="draggableWrapperDiv"
                          >
                            <Connect(Droppable)
                              direction="vertical"
                              droppableId="droppableId.content.id-timeline-column-event_severity-for-event-1"
                              ignoreContainerClipping={false}
                              isDropDisabled={true}
                              type="DEFAULT"
                            >
                              <Droppable
                                direction="vertical"
                                dispatch={[Function]}
                                draggingOverWith={null}
                                droppableId="droppableId.content.id-timeline-column-event_severity-for-event-1"
                                ignoreContainerClipping={false}
                                isDraggingOver={false}
                                isDropDisabled={true}
                                placeholder={null}
                                type="DEFAULT"
                              >
                                <DroppableDimensionPublisher
                                  direction="vertical"
                                  droppableId="droppableId.content.id-timeline-column-event_severity-for-event-1"
                                  getDroppableRef={[Function]}
                                  ignoreContainerClipping={false}
                                  isDropDisabled={true}
                                  type="DEFAULT"
                                >
                                  <div
                                    data-react-beautiful-dnd-droppable="0"
                                  >
                                    <Connect(Draggable)
                                      disableInteractiveElementBlocking={false}
                                      draggableId="draggableId.content.id-timeline-column-event_severity-for-event-1"
                                      index={0}
                                      isDragDisabled={false}
                                      key="id-timeline-column-event_severity-for-event-1"
                                    >
                                      <Draggable
                                        dimension={null}
                                        disableInteractiveElementBlocking={false}
                                        draggableId="draggableId.content.id-timeline-column-event_severity-for-event-1"
                                        draggingOver={null}
                                        drop={[Function]}
                                        dropAnimationFinished={[Function]}
                                        index={0}
                                        isDragDisabled={false}
                                        isDragging={false}
                                        isDropAnimating={false}
                                        lift={[Function]}
                                        move={[Function]}
                                        moveByWindowScroll={[Function]}
                                        moveDown={[Function]}
                                        moveLeft={[Function]}
                                        moveRight={[Function]}
                                        moveUp={[Function]}
                                        offset={
                                          Object {
                                            "x": 0,
                                            "y": 0,
                                          }
                                        }
                                        shouldAnimateDisplacement={true}
                                        shouldAnimateDragMovement={false}
                                      >
                                        <DraggableDimensionPublisher
                                          draggableId="draggableId.content.id-timeline-column-event_severity-for-event-1"
                                          droppableId="droppableId.content.id-timeline-column-event_severity-for-event-1"
                                          getDraggableRef={[Function]}
                                          index={0}
                                          key="draggableId.content.id-timeline-column-event_severity-for-event-1"
                                          type="DEFAULT"
                                        >
                                          <Moveable
                                            destination={
                                              Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                                            }
                                            onMoveEnd={[Function]}
                                            speed="INSTANT"
                                          >
                                            <Motion
                                              defaultStyle={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                              onRest={[Function]}
                                              style={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                            >
                                              <DoubleRenderBlocker
                                                change={
                                                  Object {
                                                    "x": 0,
                                                    "y": 0,
                                                  }
                                                }
                                              >
                                                <DragHandle
                                                  callbacks={
                                                    Object {
                                                      "onCancel": [Function],
                                                      "onDrop": [Function],
                                                      "onLift": [Function],
                                                      "onMove": [Function],
                                                      "onMoveDown": [Function],
                                                      "onMoveLeft": [Function],
                                                      "onMoveRight": [Function],
                                                      "onMoveUp": [Function],
                                                      "onWindowScroll": [Function],
                                                    }
                                                  }
                                                  canDragInteractiveElements={false}
                                                  draggableId="draggableId.content.id-timeline-column-event_severity-for-event-1"
                                                  getDraggableRef={[Function]}
                                                  isDragging={false}
                                                  isDropAnimating={false}
                                                  isEnabled={true}
                                                >
                                                  <styled.div
                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                    data-react-beautiful-dnd-drag-handle="0"
                                                    data-react-beautiful-dnd-draggable="0"
                                                    data-test-subj="providerContainer"
                                                    draggable={false}
                                                    innerRef={[Function]}
                                                    onBlur={[Function]}
                                                    onDragStart={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onTouchStart={[Function]}
                                                    style={
                                                      Object {
                                                        "transform": null,
                                                        "transition": null,
                                                        "zIndex": 9000,
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <div
                                                      aria-roledescription="Draggable item. Press space bar to lift"
                                                      className="sc-kafWEX gzsLki"
                                                      data-react-beautiful-dnd-drag-handle="0"
                                                      data-react-beautiful-dnd-draggable="0"
                                                      data-test-subj="providerContainer"
                                                      draggable={false}
                                                      onBlur={[Function]}
                                                      onDragStart={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onTouchStart={[Function]}
                                                      style={
                                                        Object {
                                                          "transform": null,
                                                          "transition": null,
                                                          "zIndex": 9000,
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      <pure(Component)
                                                        data={
                                                          Object {
                                                            "_id": "1",
                                                            "destination": Object {
                                                              "ip": "192.168.0.3",
                                                              "port": 6343,
                                                            },
                                                            "event": Object {
                                                              "category": "Access",
                                                              "id": 1,
                                                              "module": "nginx",
                                                              "severity": 3,
                                                              "type": "HTTP Request",
                                                            },
                                                            "geo": Object {
                                                              "country_iso_code": "xx",
                                                              "region_name": "xx",
                                                            },
                                                            "host": Object {
                                                              "ip": Array [
                                                                "192.168.0.1",
                                                              ],
                                                              "name": "apache",
                                                            },
                                                            "source": Object {
                                                              "ip": "192.168.0.1",
                                                              "port": 80,
                                                            },
                                                            "timestamp": "2018-11-05T19:03:25.937Z",
                                                            "user": Object {
                                                              "id": 1,
                                                              "name": "john.dee",
                                                            },
                                                          }
                                                        }
                                                        fieldName="event.severity"
                                                        fieldType="long"
                                                      >
                                                        <Component
                                                          data={
                                                            Object {
                                                              "_id": "1",
                                                              "destination": Object {
                                                                "ip": "192.168.0.3",
                                                                "port": 6343,
                                                              },
                                                              "event": Object {
                                                                "category": "Access",
                                                                "id": 1,
                                                                "module": "nginx",
                                                                "severity": 3,
                                                                "type": "HTTP Request",
                                                              },
                                                              "geo": Object {
                                                                "country_iso_code": "xx",
                                                                "region_name": "xx",
                                                              },
                                                              "host": Object {
                                                                "ip": Array [
                                                                  "192.168.0.1",
                                                                ],
                                                                "name": "apache",
                                                              },
                                                              "source": Object {
                                                                "ip": "192.168.0.1",
                                                                "port": 80,
                                                              },
                                                              "timestamp": "2018-11-05T19:03:25.937Z",
                                                              "user": Object {
                                                                "id": 1,
                                                                "name": "john.dee",
                                                              },
                                                            }
                                                          }
                                                          fieldName="event.severity"
                                                          fieldType="long"
                                                        >
                                                          3
                                                        </Component>
                                                      </pure(Component)>
                                                    </div>
                                                  </styled.div>
                                                </DragHandle>
                                              </DoubleRenderBlocker>
                                            </Motion>
                                          </Moveable>
                                        </DraggableDimensionPublisher>
                                      </Draggable>
                                    </Connect(Draggable)>
                                  </div>
                                </DroppableDimensionPublisher>
                              </Droppable>
                            </Connect(Droppable)>
                          </div>
                        </DraggableWrapperComponent>
                      </Connect(DraggableWrapperComponent)>
                    </div>
                  </styled.div>
                </div>
              </EuiFlexItem>
              <EuiFlexItem
                component="div"
                grow={true}
                key="event.category"
              >
                <div
                  className="euiFlexItem"
                >
                  <styled.div
                    data-test-subj="column"
                    index={1}
                    maxWidth="100%"
                    minWidth="120px"
                  >
                    <div
                      className="sc-jtRfpW gyqzql"
                      data-test-subj="column"
                    >
                      <Connect(DraggableWrapperComponent)
                        dataProvider={
                          Object {
                            "and": Array [],
                            "enabled": true,
                            "excluded": false,
                            "id": "id-timeline-column-event_category-for-event-1",
                            "kqlQuery": "",
                            "name": "event.category: Access",
                            "queryMatch": Object {
                              "field": "event.category",
                              "value": "Access",
                            },
                          }
                        }
                        key="timeline-draggable-column-event.category-for-event-1"
                        render={[Function]}
                      >
                        <DraggableWrapperComponent
                          dataProvider={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_category-for-event-1",
                              "kqlQuery": "",
                              "name": "event.category: Access",
                              "queryMatch": Object {
                                "field": "event.category",
                                "value": "Access",
                              },
                            }
                          }
                          id-timeline-column-destination_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-destination_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "destination.ip: 192.168.0.3",
                              "queryMatch": Object {
                                "field": "destination.ip",
                                "value": "192.168.0.3",
                              },
                            }
                          }
                          id-timeline-column-event_category-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_category-for-event-1",
                              "kqlQuery": "",
                              "name": "event.category: Access",
                              "queryMatch": Object {
                                "field": "event.category",
                                "value": "Access",
                              },
                            }
                          }
                          id-timeline-column-event_severity-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_severity-for-event-1",
                              "kqlQuery": "",
                              "name": "event.severity: 3",
                              "queryMatch": Object {
                                "field": "event.severity",
                                "value": 3,
                              },
                            }
                          }
                          id-timeline-column-event_type-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_type-for-event-1",
                              "kqlQuery": "",
                              "name": "event.type: HTTP Request",
                              "queryMatch": Object {
                                "field": "event.type",
                                "value": "HTTP Request",
                              },
                            }
                          }
                          id-timeline-column-host_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-host_name-for-event-1",
                              "kqlQuery": "",
                              "name": "host.name: apache",
                              "queryMatch": Object {
                                "field": "host.name",
                                "value": "apache",
                              },
                            }
                          }
                          id-timeline-column-source_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-source_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "source.ip: 192.168.0.1",
                              "queryMatch": Object {
                                "field": "source.ip",
                                "value": "192.168.0.1",
                              },
                            }
                          }
                          id-timeline-column-user_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-user_name-for-event-1",
                              "kqlQuery": "",
                              "name": "user.name: john.dee",
                              "queryMatch": Object {
                                "field": "user.name",
                                "value": "john.dee",
                              },
                            }
                          }
                          registerProvider={[Function]}
                          render={[Function]}
                          unRegisterProvider={[Function]}
                        >
                          <div
                            data-test-subj="draggableWrapperDiv"
                          >
                            <Connect(Droppable)
                              direction="vertical"
                              droppableId="droppableId.content.id-timeline-column-event_category-for-event-1"
                              ignoreContainerClipping={false}
                              isDropDisabled={true}
                              type="DEFAULT"
                            >
                              <Droppable
                                direction="vertical"
                                dispatch={[Function]}
                                draggingOverWith={null}
                                droppableId="droppableId.content.id-timeline-column-event_category-for-event-1"
                                ignoreContainerClipping={false}
                                isDraggingOver={false}
                                isDropDisabled={true}
                                placeholder={null}
                                type="DEFAULT"
                              >
                                <DroppableDimensionPublisher
                                  direction="vertical"
                                  droppableId="droppableId.content.id-timeline-column-event_category-for-event-1"
                                  getDroppableRef={[Function]}
                                  ignoreContainerClipping={false}
                                  isDropDisabled={true}
                                  type="DEFAULT"
                                >
                                  <div
                                    data-react-beautiful-dnd-droppable="0"
                                  >
                                    <Connect(Draggable)
                                      disableInteractiveElementBlocking={false}
                                      draggableId="draggableId.content.id-timeline-column-event_category-for-event-1"
                                      index={0}
                                      isDragDisabled={false}
                                      key="id-timeline-column-event_category-for-event-1"
                                    >
                                      <Draggable
                                        dimension={null}
                                        disableInteractiveElementBlocking={false}
                                        draggableId="draggableId.content.id-timeline-column-event_category-for-event-1"
                                        draggingOver={null}
                                        drop={[Function]}
                                        dropAnimationFinished={[Function]}
                                        index={0}
                                        isDragDisabled={false}
                                        isDragging={false}
                                        isDropAnimating={false}
                                        lift={[Function]}
                                        move={[Function]}
                                        moveByWindowScroll={[Function]}
                                        moveDown={[Function]}
                                        moveLeft={[Function]}
                                        moveRight={[Function]}
                                        moveUp={[Function]}
                                        offset={
                                          Object {
                                            "x": 0,
                                            "y": 0,
                                          }
                                        }
                                        shouldAnimateDisplacement={true}
                                        shouldAnimateDragMovement={false}
                                      >
                                        <DraggableDimensionPublisher
                                          draggableId="draggableId.content.id-timeline-column-event_category-for-event-1"
                                          droppableId="droppableId.content.id-timeline-column-event_category-for-event-1"
                                          getDraggableRef={[Function]}
                                          index={0}
                                          key="draggableId.content.id-timeline-column-event_category-for-event-1"
                                          type="DEFAULT"
                                        >
                                          <Moveable
                                            destination={
                                              Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                                            }
                                            onMoveEnd={[Function]}
                                            speed="INSTANT"
                                          >
                                            <Motion
                                              defaultStyle={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                              onRest={[Function]}
                                              style={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                            >
                                              <DoubleRenderBlocker
                                                change={
                                                  Object {
                                                    "x": 0,
                                                    "y": 0,
                                                  }
                                                }
                                              >
                                                <DragHandle
                                                  callbacks={
                                                    Object {
                                                      "onCancel": [Function],
                                                      "onDrop": [Function],
                                                      "onLift": [Function],
                                                      "onMove": [Function],
                                                      "onMoveDown": [Function],
                                                      "onMoveLeft": [Function],
                                                      "onMoveRight": [Function],
                                                      "onMoveUp": [Function],
                                                      "onWindowScroll": [Function],
                                                    }
                                                  }
                                                  canDragInteractiveElements={false}
                                                  draggableId="draggableId.content.id-timeline-column-event_category-for-event-1"
                                                  getDraggableRef={[Function]}
                                                  isDragging={false}
                                                  isDropAnimating={false}
                                                  isEnabled={true}
                                                >
                                                  <styled.div
                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                    data-react-beautiful-dnd-drag-handle="0"
                                                    data-react-beautiful-dnd-draggable="0"
                                                    data-test-subj="providerContainer"
                                                    draggable={false}
                                                    innerRef={[Function]}
                                                    onBlur={[Function]}
                                                    onDragStart={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onTouchStart={[Function]}
                                                    style={
                                                      Object {
                                                        "transform": null,
                                                        "transition": null,
                                                        "zIndex": 9000,
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <div
                                                      aria-roledescription="Draggable item. Press space bar to lift"
                                                      className="sc-kafWEX gzsLki"
                                                      data-react-beautiful-dnd-drag-handle="0"
                                                      data-react-beautiful-dnd-draggable="0"
                                                      data-test-subj="providerContainer"
                                                      draggable={false}
                                                      onBlur={[Function]}
                                                      onDragStart={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onTouchStart={[Function]}
                                                      style={
                                                        Object {
                                                          "transform": null,
                                                          "transition": null,
                                                          "zIndex": 9000,
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      <pure(Component)
                                                        data={
                                                          Object {
                                                            "_id": "1",
                                                            "destination": Object {
                                                              "ip": "192.168.0.3",
                                                              "port": 6343,
                                                            },
                                                            "event": Object {
                                                              "category": "Access",
                                                              "id": 1,
                                                              "module": "nginx",
                                                              "severity": 3,
                                                              "type": "HTTP Request",
                                                            },
                                                            "geo": Object {
                                                              "country_iso_code": "xx",
                                                              "region_name": "xx",
                                                            },
                                                            "host": Object {
                                                              "ip": Array [
                                                                "192.168.0.1",
                                                              ],
                                                              "name": "apache",
                                                            },
                                                            "source": Object {
                                                              "ip": "192.168.0.1",
                                                              "port": 80,
                                                            },
                                                            "timestamp": "2018-11-05T19:03:25.937Z",
                                                            "user": Object {
                                                              "id": 1,
                                                              "name": "john.dee",
                                                            },
                                                          }
                                                        }
                                                        fieldName="event.category"
                                                        fieldType="keyword"
                                                      >
                                                        <Component
                                                          data={
                                                            Object {
                                                              "_id": "1",
                                                              "destination": Object {
                                                                "ip": "192.168.0.3",
                                                                "port": 6343,
                                                              },
                                                              "event": Object {
                                                                "category": "Access",
                                                                "id": 1,
                                                                "module": "nginx",
                                                                "severity": 3,
                                                                "type": "HTTP Request",
                                                              },
                                                              "geo": Object {
                                                                "country_iso_code": "xx",
                                                                "region_name": "xx",
                                                              },
                                                              "host": Object {
                                                                "ip": Array [
                                                                  "192.168.0.1",
                                                                ],
                                                                "name": "apache",
                                                              },
                                                              "source": Object {
                                                                "ip": "192.168.0.1",
                                                                "port": 80,
                                                              },
                                                              "timestamp": "2018-11-05T19:03:25.937Z",
                                                              "user": Object {
                                                                "id": 1,
                                                                "name": "john.dee",
                                                              },
                                                            }
                                                          }
                                                          fieldName="event.category"
                                                          fieldType="keyword"
                                                        >
                                                          Access
                                                        </Component>
                                                      </pure(Component)>
                                                    </div>
                                                  </styled.div>
                                                </DragHandle>
                                              </DoubleRenderBlocker>
                                            </Motion>
                                          </Moveable>
                                        </DraggableDimensionPublisher>
                                      </Draggable>
                                    </Connect(Draggable)>
                                  </div>
                                </DroppableDimensionPublisher>
                              </Droppable>
                            </Connect(Droppable)>
                          </div>
                        </DraggableWrapperComponent>
                      </Connect(DraggableWrapperComponent)>
                    </div>
                  </styled.div>
                </div>
              </EuiFlexItem>
              <EuiFlexItem
                component="div"
                grow={true}
                key="event.type"
              >
                <div
                  className="euiFlexItem"
                >
                  <styled.div
                    data-test-subj="column"
                    index={2}
                    maxWidth="100%"
                    minWidth="120px"
                  >
                    <div
                      className="sc-jtRfpW QTOGJ"
                      data-test-subj="column"
                    >
                      <Connect(DraggableWrapperComponent)
                        dataProvider={
                          Object {
                            "and": Array [],
                            "enabled": true,
                            "excluded": false,
                            "id": "id-timeline-column-event_type-for-event-1",
                            "kqlQuery": "",
                            "name": "event.type: HTTP Request",
                            "queryMatch": Object {
                              "field": "event.type",
                              "value": "HTTP Request",
                            },
                          }
                        }
                        key="timeline-draggable-column-event.type-for-event-1"
                        render={[Function]}
                      >
                        <DraggableWrapperComponent
                          dataProvider={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_type-for-event-1",
                              "kqlQuery": "",
                              "name": "event.type: HTTP Request",
                              "queryMatch": Object {
                                "field": "event.type",
                                "value": "HTTP Request",
                              },
                            }
                          }
                          id-timeline-column-destination_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-destination_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "destination.ip: 192.168.0.3",
                              "queryMatch": Object {
                                "field": "destination.ip",
                                "value": "192.168.0.3",
                              },
                            }
                          }
                          id-timeline-column-event_category-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_category-for-event-1",
                              "kqlQuery": "",
                              "name": "event.category: Access",
                              "queryMatch": Object {
                                "field": "event.category",
                                "value": "Access",
                              },
                            }
                          }
                          id-timeline-column-event_severity-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_severity-for-event-1",
                              "kqlQuery": "",
                              "name": "event.severity: 3",
                              "queryMatch": Object {
                                "field": "event.severity",
                                "value": 3,
                              },
                            }
                          }
                          id-timeline-column-event_type-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_type-for-event-1",
                              "kqlQuery": "",
                              "name": "event.type: HTTP Request",
                              "queryMatch": Object {
                                "field": "event.type",
                                "value": "HTTP Request",
                              },
                            }
                          }
                          id-timeline-column-host_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-host_name-for-event-1",
                              "kqlQuery": "",
                              "name": "host.name: apache",
                              "queryMatch": Object {
                                "field": "host.name",
                                "value": "apache",
                              },
                            }
                          }
                          id-timeline-column-source_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-source_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "source.ip: 192.168.0.1",
                              "queryMatch": Object {
                                "field": "source.ip",
                                "value": "192.168.0.1",
                              },
                            }
                          }
                          id-timeline-column-user_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-user_name-for-event-1",
                              "kqlQuery": "",
                              "name": "user.name: john.dee",
                              "queryMatch": Object {
                                "field": "user.name",
                                "value": "john.dee",
                              },
                            }
                          }
                          registerProvider={[Function]}
                          render={[Function]}
                          unRegisterProvider={[Function]}
                        >
                          <div
                            data-test-subj="draggableWrapperDiv"
                          >
                            <Connect(Droppable)
                              direction="vertical"
                              droppableId="droppableId.content.id-timeline-column-event_type-for-event-1"
                              ignoreContainerClipping={false}
                              isDropDisabled={true}
                              type="DEFAULT"
                            >
                              <Droppable
                                direction="vertical"
                                dispatch={[Function]}
                                draggingOverWith={null}
                                droppableId="droppableId.content.id-timeline-column-event_type-for-event-1"
                                ignoreContainerClipping={false}
                                isDraggingOver={false}
                                isDropDisabled={true}
                                placeholder={null}
                                type="DEFAULT"
                              >
                                <DroppableDimensionPublisher
                                  direction="vertical"
                                  droppableId="droppableId.content.id-timeline-column-event_type-for-event-1"
                                  getDroppableRef={[Function]}
                                  ignoreContainerClipping={false}
                                  isDropDisabled={true}
                                  type="DEFAULT"
                                >
                                  <div
                                    data-react-beautiful-dnd-droppable="0"
                                  >
                                    <Connect(Draggable)
                                      disableInteractiveElementBlocking={false}
                                      draggableId="draggableId.content.id-timeline-column-event_type-for-event-1"
                                      index={0}
                                      isDragDisabled={false}
                                      key="id-timeline-column-event_type-for-event-1"
                                    >
                                      <Draggable
                                        dimension={null}
                                        disableInteractiveElementBlocking={false}
                                        draggableId="draggableId.content.id-timeline-column-event_type-for-event-1"
                                        draggingOver={null}
                                        drop={[Function]}
                                        dropAnimationFinished={[Function]}
                                        index={0}
                                        isDragDisabled={false}
                                        isDragging={false}
                                        isDropAnimating={false}
                                        lift={[Function]}
                                        move={[Function]}
                                        moveByWindowScroll={[Function]}
                                        moveDown={[Function]}
                                        moveLeft={[Function]}
                                        moveRight={[Function]}
                                        moveUp={[Function]}
                                        offset={
                                          Object {
                                            "x": 0,
                                            "y": 0,
                                          }
                                        }
                                        shouldAnimateDisplacement={true}
                                        shouldAnimateDragMovement={false}
                                      >
                                        <DraggableDimensionPublisher
                                          draggableId="draggableId.content.id-timeline-column-event_type-for-event-1"
                                          droppableId="droppableId.content.id-timeline-column-event_type-for-event-1"
                                          getDraggableRef={[Function]}
                                          index={0}
                                          key="draggableId.content.id-timeline-column-event_type-for-event-1"
                                          type="DEFAULT"
                                        >
                                          <Moveable
                                            destination={
                                              Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                                            }
                                            onMoveEnd={[Function]}
                                            speed="INSTANT"
                                          >
                                            <Motion
                                              defaultStyle={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                              onRest={[Function]}
                                              style={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                            >
                                              <DoubleRenderBlocker
                                                change={
                                                  Object {
                                                    "x": 0,
                                                    "y": 0,
                                                  }
                                                }
                                              >
                                                <DragHandle
                                                  callbacks={
                                                    Object {
                                                      "onCancel": [Function],
                                                      "onDrop": [Function],
                                                      "onLift": [Function],
                                                      "onMove": [Function],
                                                      "onMoveDown": [Function],
                                                      "onMoveLeft": [Function],
                                                      "onMoveRight": [Function],
                                                      "onMoveUp": [Function],
                                                      "onWindowScroll": [Function],
                                                    }
                                                  }
                                                  canDragInteractiveElements={false}
                                                  draggableId="draggableId.content.id-timeline-column-event_type-for-event-1"
                                                  getDraggableRef={[Function]}
                                                  isDragging={false}
                                                  isDropAnimating={false}
                                                  isEnabled={true}
                                                >
                                                  <styled.div
                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                    data-react-beautiful-dnd-drag-handle="0"
                                                    data-react-beautiful-dnd-draggable="0"
                                                    data-test-subj="providerContainer"
                                                    draggable={false}
                                                    innerRef={[Function]}
                                                    onBlur={[Function]}
                                                    onDragStart={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onTouchStart={[Function]}
                                                    style={
                                                      Object {
                                                        "transform": null,
                                                        "transition": null,
                                                        "zIndex": 9000,
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <div
                                                      aria-roledescription="Draggable item. Press space bar to lift"
                                                      className="sc-kafWEX gzsLki"
                                                      data-react-beautiful-dnd-drag-handle="0"
                                                      data-react-beautiful-dnd-draggable="0"
                                                      data-test-subj="providerContainer"
                                                      draggable={false}
                                                      onBlur={[Function]}
                                                      onDragStart={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onTouchStart={[Function]}
                                                      style={
                                                        Object {
                                                          "transform": null,
                                                          "transition": null,
                                                          "zIndex": 9000,
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      <pure(Component)
                                                        data={
                                                          Object {
                                                            "_id": "1",
                                                            "destination": Object {
                                                              "ip": "192.168.0.3",
                                                              "port": 6343,
                                                            },
                                                            "event": Object {
                                                              "category": "Access",
                                                              "id": 1,
                                                              "module": "nginx",
                                                              "severity": 3,
                                                              "type": "HTTP Request",
                                                            },
                                                            "geo": Object {
                                                              "country_iso_code": "xx",
                                                              "region_name": "xx",
                                                            },
                                                            "host": Object {
                                                              "ip": Array [
                                                                "192.168.0.1",
                                                              ],
                                                              "name": "apache",
                                                            },
                                                            "source": Object {
                                                              "ip": "192.168.0.1",
                                                              "port": 80,
                                                            },
                                                            "timestamp": "2018-11-05T19:03:25.937Z",
                                                            "user": Object {
                                                              "id": 1,
                                                              "name": "john.dee",
                                                            },
                                                          }
                                                        }
                                                        fieldName="event.type"
                                                        fieldType="keyword"
                                                      >
                                                        <Component
                                                          data={
                                                            Object {
                                                              "_id": "1",
                                                              "destination": Object {
                                                                "ip": "192.168.0.3",
                                                                "port": 6343,
                                                              },
                                                              "event": Object {
                                                                "category": "Access",
                                                                "id": 1,
                                                                "module": "nginx",
                                                                "severity": 3,
                                                                "type": "HTTP Request",
                                                              },
                                                              "geo": Object {
                                                                "country_iso_code": "xx",
                                                                "region_name": "xx",
                                                              },
                                                              "host": Object {
                                                                "ip": Array [
                                                                  "192.168.0.1",
                                                                ],
                                                                "name": "apache",
                                                              },
                                                              "source": Object {
                                                                "ip": "192.168.0.1",
                                                                "port": 80,
                                                              },
                                                              "timestamp": "2018-11-05T19:03:25.937Z",
                                                              "user": Object {
                                                                "id": 1,
                                                                "name": "john.dee",
                                                              },
                                                            }
                                                          }
                                                          fieldName="event.type"
                                                          fieldType="keyword"
                                                        >
                                                          HTTP Request
                                                        </Component>
                                                      </pure(Component)>
                                                    </div>
                                                  </styled.div>
                                                </DragHandle>
                                              </DoubleRenderBlocker>
                                            </Motion>
                                          </Moveable>
                                        </DraggableDimensionPublisher>
                                      </Draggable>
                                    </Connect(Draggable)>
                                  </div>
                                </DroppableDimensionPublisher>
                              </Droppable>
                            </Connect(Droppable)>
                          </div>
                        </DraggableWrapperComponent>
                      </Connect(DraggableWrapperComponent)>
                    </div>
                  </styled.div>
                </div>
              </EuiFlexItem>
              <EuiFlexItem
                component="div"
                grow={true}
                key="host.name"
              >
                <div
                  className="euiFlexItem"
                >
                  <styled.div
                    data-test-subj="column"
                    index={3}
                    maxWidth="100%"
                    minWidth="120px"
                  >
                    <div
                      className="sc-jtRfpW gyqzql"
                      data-test-subj="column"
                    >
                      <Connect(DraggableWrapperComponent)
                        dataProvider={
                          Object {
                            "and": Array [],
                            "enabled": true,
                            "excluded": false,
                            "id": "id-timeline-column-host_name-for-event-1",
                            "kqlQuery": "",
                            "name": "host.name: apache",
                            "queryMatch": Object {
                              "field": "host.name",
                              "value": "apache",
                            },
                          }
                        }
                        key="timeline-draggable-column-host.name-for-event-1"
                        render={[Function]}
                      >
                        <DraggableWrapperComponent
                          dataProvider={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-host_name-for-event-1",
                              "kqlQuery": "",
                              "name": "host.name: apache",
                              "queryMatch": Object {
                                "field": "host.name",
                                "value": "apache",
                              },
                            }
                          }
                          id-timeline-column-destination_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-destination_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "destination.ip: 192.168.0.3",
                              "queryMatch": Object {
                                "field": "destination.ip",
                                "value": "192.168.0.3",
                              },
                            }
                          }
                          id-timeline-column-event_category-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_category-for-event-1",
                              "kqlQuery": "",
                              "name": "event.category: Access",
                              "queryMatch": Object {
                                "field": "event.category",
                                "value": "Access",
                              },
                            }
                          }
                          id-timeline-column-event_severity-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_severity-for-event-1",
                              "kqlQuery": "",
                              "name": "event.severity: 3",
                              "queryMatch": Object {
                                "field": "event.severity",
                                "value": 3,
                              },
                            }
                          }
                          id-timeline-column-event_type-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_type-for-event-1",
                              "kqlQuery": "",
                              "name": "event.type: HTTP Request",
                              "queryMatch": Object {
                                "field": "event.type",
                                "value": "HTTP Request",
                              },
                            }
                          }
                          id-timeline-column-host_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-host_name-for-event-1",
                              "kqlQuery": "",
                              "name": "host.name: apache",
                              "queryMatch": Object {
                                "field": "host.name",
                                "value": "apache",
                              },
                            }
                          }
                          id-timeline-column-source_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-source_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "source.ip: 192.168.0.1",
                              "queryMatch": Object {
                                "field": "source.ip",
                                "value": "192.168.0.1",
                              },
                            }
                          }
                          id-timeline-column-user_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-user_name-for-event-1",
                              "kqlQuery": "",
                              "name": "user.name: john.dee",
                              "queryMatch": Object {
                                "field": "user.name",
                                "value": "john.dee",
                              },
                            }
                          }
                          registerProvider={[Function]}
                          render={[Function]}
                          unRegisterProvider={[Function]}
                        >
                          <div
                            data-test-subj="draggableWrapperDiv"
                          >
                            <Connect(Droppable)
                              direction="vertical"
                              droppableId="droppableId.content.id-timeline-column-host_name-for-event-1"
                              ignoreContainerClipping={false}
                              isDropDisabled={true}
                              type="DEFAULT"
                            >
                              <Droppable
                                direction="vertical"
                                dispatch={[Function]}
                                draggingOverWith={null}
                                droppableId="droppableId.content.id-timeline-column-host_name-for-event-1"
                                ignoreContainerClipping={false}
                                isDraggingOver={false}
                                isDropDisabled={true}
                                placeholder={null}
                                type="DEFAULT"
                              >
                                <DroppableDimensionPublisher
                                  direction="vertical"
                                  droppableId="droppableId.content.id-timeline-column-host_name-for-event-1"
                                  getDroppableRef={[Function]}
                                  ignoreContainerClipping={false}
                                  isDropDisabled={true}
                                  type="DEFAULT"
                                >
                                  <div
                                    data-react-beautiful-dnd-droppable="0"
                                  >
                                    <Connect(Draggable)
                                      disableInteractiveElementBlocking={false}
                                      draggableId="draggableId.content.id-timeline-column-host_name-for-event-1"
                                      index={0}
                                      isDragDisabled={false}
                                      key="id-timeline-column-host_name-for-event-1"
                                    >
                                      <Draggable
                                        dimension={null}
                                        disableInteractiveElementBlocking={false}
                                        draggableId="draggableId.content.id-timeline-column-host_name-for-event-1"
                                        draggingOver={null}
                                        drop={[Function]}
                                        dropAnimationFinished={[Function]}
                                        index={0}
                                        isDragDisabled={false}
                                        isDragging={false}
                                        isDropAnimating={false}
                                        lift={[Function]}
                                        move={[Function]}
                                        moveByWindowScroll={[Function]}
                                        moveDown={[Function]}
                                        moveLeft={[Function]}
                                        moveRight={[Function]}
                                        moveUp={[Function]}
                                        offset={
                                          Object {
                                            "x": 0,
                                            "y": 0,
                                          }
                                        }
                                        shouldAnimateDisplacement={true}
                                        shouldAnimateDragMovement={false}
                                      >
                                        <DraggableDimensionPublisher
                                          draggableId="draggableId.content.id-timeline-column-host_name-for-event-1"
                                          droppableId="droppableId.content.id-timeline-column-host_name-for-event-1"
                                          getDraggableRef={[Function]}
                                          index={0}
                                          key="draggableId.content.id-timeline-column-host_name-for-event-1"
                                          type="DEFAULT"
                                        >
                                          <Moveable
                                            destination={
                                              Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                                            }
                                            onMoveEnd={[Function]}
                                            speed="INSTANT"
                                          >
                                            <Motion
                                              defaultStyle={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                              onRest={[Function]}
                                              style={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                            >
                                              <DoubleRenderBlocker
                                                change={
                                                  Object {
                                                    "x": 0,
                                                    "y": 0,
                                                  }
                                                }
                                              >
                                                <DragHandle
                                                  callbacks={
                                                    Object {
                                                      "onCancel": [Function],
                                                      "onDrop": [Function],
                                                      "onLift": [Function],
                                                      "onMove": [Function],
                                                      "onMoveDown": [Function],
                                                      "onMoveLeft": [Function],
                                                      "onMoveRight": [Function],
                                                      "onMoveUp": [Function],
                                                      "onWindowScroll": [Function],
                                                    }
                                                  }
                                                  canDragInteractiveElements={false}
                                                  draggableId="draggableId.content.id-timeline-column-host_name-for-event-1"
                                                  getDraggableRef={[Function]}
                                                  isDragging={false}
                                                  isDropAnimating={false}
                                                  isEnabled={true}
                                                >
                                                  <styled.div
                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                    data-react-beautiful-dnd-drag-handle="0"
                                                    data-react-beautiful-dnd-draggable="0"
                                                    data-test-subj="providerContainer"
                                                    draggable={false}
                                                    innerRef={[Function]}
                                                    onBlur={[Function]}
                                                    onDragStart={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onTouchStart={[Function]}
                                                    style={
                                                      Object {
                                                        "transform": null,
                                                        "transition": null,
                                                        "zIndex": 9000,
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <div
                                                      aria-roledescription="Draggable item. Press space bar to lift"
                                                      className="sc-kafWEX gzsLki"
                                                      data-react-beautiful-dnd-drag-handle="0"
                                                      data-react-beautiful-dnd-draggable="0"
                                                      data-test-subj="providerContainer"
                                                      draggable={false}
                                                      onBlur={[Function]}
                                                      onDragStart={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onTouchStart={[Function]}
                                                      style={
                                                        Object {
                                                          "transform": null,
                                                          "transition": null,
                                                          "zIndex": 9000,
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      <pure(Component)
                                                        data={
                                                          Object {
                                                            "_id": "1",
                                                            "destination": Object {
                                                              "ip": "192.168.0.3",
                                                              "port": 6343,
                                                            },
                                                            "event": Object {
                                                              "category": "Access",
                                                              "id": 1,
                                                              "module": "nginx",
                                                              "severity": 3,
                                                              "type": "HTTP Request",
                                                            },
                                                            "geo": Object {
                                                              "country_iso_code": "xx",
                                                              "region_name": "xx",
                                                            },
                                                            "host": Object {
                                                              "ip": Array [
                                                                "192.168.0.1",
                                                              ],
                                                              "name": "apache",
                                                            },
                                                            "source": Object {
                                                              "ip": "192.168.0.1",
                                                              "port": 80,
                                                            },
                                                            "timestamp": "2018-11-05T19:03:25.937Z",
                                                            "user": Object {
                                                              "id": 1,
                                                              "name": "john.dee",
                                                            },
                                                          }
                                                        }
                                                        fieldName="host.name"
                                                        fieldType="keyword"
                                                      >
                                                        <Component
                                                          data={
                                                            Object {
                                                              "_id": "1",
                                                              "destination": Object {
                                                                "ip": "192.168.0.3",
                                                                "port": 6343,
                                                              },
                                                              "event": Object {
                                                                "category": "Access",
                                                                "id": 1,
                                                                "module": "nginx",
                                                                "severity": 3,
                                                                "type": "HTTP Request",
                                                              },
                                                              "geo": Object {
                                                                "country_iso_code": "xx",
                                                                "region_name": "xx",
                                                              },
                                                              "host": Object {
                                                                "ip": Array [
                                                                  "192.168.0.1",
                                                                ],
                                                                "name": "apache",
                                                              },
                                                              "source": Object {
                                                                "ip": "192.168.0.1",
                                                                "port": 80,
                                                              },
                                                              "timestamp": "2018-11-05T19:03:25.937Z",
                                                              "user": Object {
                                                                "id": 1,
                                                                "name": "john.dee",
                                                              },
                                                            }
                                                          }
                                                          fieldName="host.name"
                                                          fieldType="keyword"
                                                        >
                                                          apache
                                                        </Component>
                                                      </pure(Component)>
                                                    </div>
                                                  </styled.div>
                                                </DragHandle>
                                              </DoubleRenderBlocker>
                                            </Motion>
                                          </Moveable>
                                        </DraggableDimensionPublisher>
                                      </Draggable>
                                    </Connect(Draggable)>
                                  </div>
                                </DroppableDimensionPublisher>
                              </Droppable>
                            </Connect(Droppable)>
                          </div>
                        </DraggableWrapperComponent>
                      </Connect(DraggableWrapperComponent)>
                    </div>
                  </styled.div>
                </div>
              </EuiFlexItem>
              <EuiFlexItem
                component="div"
                grow={true}
                key="source.ip"
              >
                <div
                  className="euiFlexItem"
                >
                  <styled.div
                    data-test-subj="column"
                    index={4}
                    maxWidth="100%"
                    minWidth="120px"
                  >
                    <div
                      className="sc-jtRfpW QTOGJ"
                      data-test-subj="column"
                    >
                      <Connect(DraggableWrapperComponent)
                        dataProvider={
                          Object {
                            "and": Array [],
                            "enabled": true,
                            "excluded": false,
                            "id": "id-timeline-column-source_ip-for-event-1",
                            "kqlQuery": "",
                            "name": "source.ip: 192.168.0.1",
                            "queryMatch": Object {
                              "field": "source.ip",
                              "value": "192.168.0.1",
                            },
                          }
                        }
                        key="timeline-draggable-column-source.ip-for-event-1"
                        render={[Function]}
                      >
                        <DraggableWrapperComponent
                          dataProvider={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-source_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "source.ip: 192.168.0.1",
                              "queryMatch": Object {
                                "field": "source.ip",
                                "value": "192.168.0.1",
                              },
                            }
                          }
                          id-timeline-column-destination_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-destination_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "destination.ip: 192.168.0.3",
                              "queryMatch": Object {
                                "field": "destination.ip",
                                "value": "192.168.0.3",
                              },
                            }
                          }
                          id-timeline-column-event_category-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_category-for-event-1",
                              "kqlQuery": "",
                              "name": "event.category: Access",
                              "queryMatch": Object {
                                "field": "event.category",
                                "value": "Access",
                              },
                            }
                          }
                          id-timeline-column-event_severity-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_severity-for-event-1",
                              "kqlQuery": "",
                              "name": "event.severity: 3",
                              "queryMatch": Object {
                                "field": "event.severity",
                                "value": 3,
                              },
                            }
                          }
                          id-timeline-column-event_type-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_type-for-event-1",
                              "kqlQuery": "",
                              "name": "event.type: HTTP Request",
                              "queryMatch": Object {
                                "field": "event.type",
                                "value": "HTTP Request",
                              },
                            }
                          }
                          id-timeline-column-host_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-host_name-for-event-1",
                              "kqlQuery": "",
                              "name": "host.name: apache",
                              "queryMatch": Object {
                                "field": "host.name",
                                "value": "apache",
                              },
                            }
                          }
                          id-timeline-column-source_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-source_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "source.ip: 192.168.0.1",
                              "queryMatch": Object {
                                "field": "source.ip",
                                "value": "192.168.0.1",
                              },
                            }
                          }
                          id-timeline-column-user_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-user_name-for-event-1",
                              "kqlQuery": "",
                              "name": "user.name: john.dee",
                              "queryMatch": Object {
                                "field": "user.name",
                                "value": "john.dee",
                              },
                            }
                          }
                          registerProvider={[Function]}
                          render={[Function]}
                          unRegisterProvider={[Function]}
                        >
                          <div
                            data-test-subj="draggableWrapperDiv"
                          >
                            <Connect(Droppable)
                              direction="vertical"
                              droppableId="droppableId.content.id-timeline-column-source_ip-for-event-1"
                              ignoreContainerClipping={false}
                              isDropDisabled={true}
                              type="DEFAULT"
                            >
                              <Droppable
                                direction="vertical"
                                dispatch={[Function]}
                                draggingOverWith={null}
                                droppableId="droppableId.content.id-timeline-column-source_ip-for-event-1"
                                ignoreContainerClipping={false}
                                isDraggingOver={false}
                                isDropDisabled={true}
                                placeholder={null}
                                type="DEFAULT"
                              >
                                <DroppableDimensionPublisher
                                  direction="vertical"
                                  droppableId="droppableId.content.id-timeline-column-source_ip-for-event-1"
                                  getDroppableRef={[Function]}
                                  ignoreContainerClipping={false}
                                  isDropDisabled={true}
                                  type="DEFAULT"
                                >
                                  <div
                                    data-react-beautiful-dnd-droppable="0"
                                  >
                                    <Connect(Draggable)
                                      disableInteractiveElementBlocking={false}
                                      draggableId="draggableId.content.id-timeline-column-source_ip-for-event-1"
                                      index={0}
                                      isDragDisabled={false}
                                      key="id-timeline-column-source_ip-for-event-1"
                                    >
                                      <Draggable
                                        dimension={null}
                                        disableInteractiveElementBlocking={false}
                                        draggableId="draggableId.content.id-timeline-column-source_ip-for-event-1"
                                        draggingOver={null}
                                        drop={[Function]}
                                        dropAnimationFinished={[Function]}
                                        index={0}
                                        isDragDisabled={false}
                                        isDragging={false}
                                        isDropAnimating={false}
                                        lift={[Function]}
                                        move={[Function]}
                                        moveByWindowScroll={[Function]}
                                        moveDown={[Function]}
                                        moveLeft={[Function]}
                                        moveRight={[Function]}
                                        moveUp={[Function]}
                                        offset={
                                          Object {
                                            "x": 0,
                                            "y": 0,
                                          }
                                        }
                                        shouldAnimateDisplacement={true}
                                        shouldAnimateDragMovement={false}
                                      >
                                        <DraggableDimensionPublisher
                                          draggableId="draggableId.content.id-timeline-column-source_ip-for-event-1"
                                          droppableId="droppableId.content.id-timeline-column-source_ip-for-event-1"
                                          getDraggableRef={[Function]}
                                          index={0}
                                          key="draggableId.content.id-timeline-column-source_ip-for-event-1"
                                          type="DEFAULT"
                                        >
                                          <Moveable
                                            destination={
                                              Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                                            }
                                            onMoveEnd={[Function]}
                                            speed="INSTANT"
                                          >
                                            <Motion
                                              defaultStyle={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                              onRest={[Function]}
                                              style={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                            >
                                              <DoubleRenderBlocker
                                                change={
                                                  Object {
                                                    "x": 0,
                                                    "y": 0,
                                                  }
                                                }
                                              >
                                                <DragHandle
                                                  callbacks={
                                                    Object {
                                                      "onCancel": [Function],
                                                      "onDrop": [Function],
                                                      "onLift": [Function],
                                                      "onMove": [Function],
                                                      "onMoveDown": [Function],
                                                      "onMoveLeft": [Function],
                                                      "onMoveRight": [Function],
                                                      "onMoveUp": [Function],
                                                      "onWindowScroll": [Function],
                                                    }
                                                  }
                                                  canDragInteractiveElements={false}
                                                  draggableId="draggableId.content.id-timeline-column-source_ip-for-event-1"
                                                  getDraggableRef={[Function]}
                                                  isDragging={false}
                                                  isDropAnimating={false}
                                                  isEnabled={true}
                                                >
                                                  <styled.div
                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                    data-react-beautiful-dnd-drag-handle="0"
                                                    data-react-beautiful-dnd-draggable="0"
                                                    data-test-subj="providerContainer"
                                                    draggable={false}
                                                    innerRef={[Function]}
                                                    onBlur={[Function]}
                                                    onDragStart={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onTouchStart={[Function]}
                                                    style={
                                                      Object {
                                                        "transform": null,
                                                        "transition": null,
                                                        "zIndex": 9000,
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <div
                                                      aria-roledescription="Draggable item. Press space bar to lift"
                                                      className="sc-kafWEX gzsLki"
                                                      data-react-beautiful-dnd-drag-handle="0"
                                                      data-react-beautiful-dnd-draggable="0"
                                                      data-test-subj="providerContainer"
                                                      draggable={false}
                                                      onBlur={[Function]}
                                                      onDragStart={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onTouchStart={[Function]}
                                                      style={
                                                        Object {
                                                          "transform": null,
                                                          "transition": null,
                                                          "zIndex": 9000,
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      <pure(Component)
                                                        data={
                                                          Object {
                                                            "_id": "1",
                                                            "destination": Object {
                                                              "ip": "192.168.0.3",
                                                              "port": 6343,
                                                            },
                                                            "event": Object {
                                                              "category": "Access",
                                                              "id": 1,
                                                              "module": "nginx",
                                                              "severity": 3,
                                                              "type": "HTTP Request",
                                                            },
                                                            "geo": Object {
                                                              "country_iso_code": "xx",
                                                              "region_name": "xx",
                                                            },
                                                            "host": Object {
                                                              "ip": Array [
                                                                "192.168.0.1",
                                                              ],
                                                              "name": "apache",
                                                            },
                                                            "source": Object {
                                                              "ip": "192.168.0.1",
                                                              "port": 80,
                                                            },
                                                            "timestamp": "2018-11-05T19:03:25.937Z",
                                                            "user": Object {
                                                              "id": 1,
                                                              "name": "john.dee",
                                                            },
                                                          }
                                                        }
                                                        fieldName="source.ip"
                                                        fieldType="ip"
                                                      >
                                                        <Component
                                                          data={
                                                            Object {
                                                              "_id": "1",
                                                              "destination": Object {
                                                                "ip": "192.168.0.3",
                                                                "port": 6343,
                                                              },
                                                              "event": Object {
                                                                "category": "Access",
                                                                "id": 1,
                                                                "module": "nginx",
                                                                "severity": 3,
                                                                "type": "HTTP Request",
                                                              },
                                                              "geo": Object {
                                                                "country_iso_code": "xx",
                                                                "region_name": "xx",
                                                              },
                                                              "host": Object {
                                                                "ip": Array [
                                                                  "192.168.0.1",
                                                                ],
                                                                "name": "apache",
                                                              },
                                                              "source": Object {
                                                                "ip": "192.168.0.1",
                                                                "port": 80,
                                                              },
                                                              "timestamp": "2018-11-05T19:03:25.937Z",
                                                              "user": Object {
                                                                "id": 1,
                                                                "name": "john.dee",
                                                              },
                                                            }
                                                          }
                                                          fieldName="source.ip"
                                                          fieldType="ip"
                                                        >
                                                          192.168.0.1
                                                        </Component>
                                                      </pure(Component)>
                                                    </div>
                                                  </styled.div>
                                                </DragHandle>
                                              </DoubleRenderBlocker>
                                            </Motion>
                                          </Moveable>
                                        </DraggableDimensionPublisher>
                                      </Draggable>
                                    </Connect(Draggable)>
                                  </div>
                                </DroppableDimensionPublisher>
                              </Droppable>
                            </Connect(Droppable)>
                          </div>
                        </DraggableWrapperComponent>
                      </Connect(DraggableWrapperComponent)>
                    </div>
                  </styled.div>
                </div>
              </EuiFlexItem>
              <EuiFlexItem
                component="div"
                grow={true}
                key="destination.ip"
              >
                <div
                  className="euiFlexItem"
                >
                  <styled.div
                    data-test-subj="column"
                    index={5}
                    maxWidth="100%"
                    minWidth="120px"
                  >
                    <div
                      className="sc-jtRfpW gyqzql"
                      data-test-subj="column"
                    >
                      <Connect(DraggableWrapperComponent)
                        dataProvider={
                          Object {
                            "and": Array [],
                            "enabled": true,
                            "excluded": false,
                            "id": "id-timeline-column-destination_ip-for-event-1",
                            "kqlQuery": "",
                            "name": "destination.ip: 192.168.0.3",
                            "queryMatch": Object {
                              "field": "destination.ip",
                              "value": "192.168.0.3",
                            },
                          }
                        }
                        key="timeline-draggable-column-destination.ip-for-event-1"
                        render={[Function]}
                      >
                        <DraggableWrapperComponent
                          dataProvider={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-destination_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "destination.ip: 192.168.0.3",
                              "queryMatch": Object {
                                "field": "destination.ip",
                                "value": "192.168.0.3",
                              },
                            }
                          }
                          id-timeline-column-destination_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-destination_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "destination.ip: 192.168.0.3",
                              "queryMatch": Object {
                                "field": "destination.ip",
                                "value": "192.168.0.3",
                              },
                            }
                          }
                          id-timeline-column-event_category-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_category-for-event-1",
                              "kqlQuery": "",
                              "name": "event.category: Access",
                              "queryMatch": Object {
                                "field": "event.category",
                                "value": "Access",
                              },
                            }
                          }
                          id-timeline-column-event_severity-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_severity-for-event-1",
                              "kqlQuery": "",
                              "name": "event.severity: 3",
                              "queryMatch": Object {
                                "field": "event.severity",
                                "value": 3,
                              },
                            }
                          }
                          id-timeline-column-event_type-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_type-for-event-1",
                              "kqlQuery": "",
                              "name": "event.type: HTTP Request",
                              "queryMatch": Object {
                                "field": "event.type",
                                "value": "HTTP Request",
                              },
                            }
                          }
                          id-timeline-column-host_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-host_name-for-event-1",
                              "kqlQuery": "",
                              "name": "host.name: apache",
                              "queryMatch": Object {
                                "field": "host.name",
                                "value": "apache",
                              },
                            }
                          }
                          id-timeline-column-source_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-source_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "source.ip: 192.168.0.1",
                              "queryMatch": Object {
                                "field": "source.ip",
                                "value": "192.168.0.1",
                              },
                            }
                          }
                          id-timeline-column-user_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-user_name-for-event-1",
                              "kqlQuery": "",
                              "name": "user.name: john.dee",
                              "queryMatch": Object {
                                "field": "user.name",
                                "value": "john.dee",
                              },
                            }
                          }
                          registerProvider={[Function]}
                          render={[Function]}
                          unRegisterProvider={[Function]}
                        >
                          <div
                            data-test-subj="draggableWrapperDiv"
                          >
                            <Connect(Droppable)
                              direction="vertical"
                              droppableId="droppableId.content.id-timeline-column-destination_ip-for-event-1"
                              ignoreContainerClipping={false}
                              isDropDisabled={true}
                              type="DEFAULT"
                            >
                              <Droppable
                                direction="vertical"
                                dispatch={[Function]}
                                draggingOverWith={null}
                                droppableId="droppableId.content.id-timeline-column-destination_ip-for-event-1"
                                ignoreContainerClipping={false}
                                isDraggingOver={false}
                                isDropDisabled={true}
                                placeholder={null}
                                type="DEFAULT"
                              >
                                <DroppableDimensionPublisher
                                  direction="vertical"
                                  droppableId="droppableId.content.id-timeline-column-destination_ip-for-event-1"
                                  getDroppableRef={[Function]}
                                  ignoreContainerClipping={false}
                                  isDropDisabled={true}
                                  type="DEFAULT"
                                >
                                  <div
                                    data-react-beautiful-dnd-droppable="0"
                                  >
                                    <Connect(Draggable)
                                      disableInteractiveElementBlocking={false}
                                      draggableId="draggableId.content.id-timeline-column-destination_ip-for-event-1"
                                      index={0}
                                      isDragDisabled={false}
                                      key="id-timeline-column-destination_ip-for-event-1"
                                    >
                                      <Draggable
                                        dimension={null}
                                        disableInteractiveElementBlocking={false}
                                        draggableId="draggableId.content.id-timeline-column-destination_ip-for-event-1"
                                        draggingOver={null}
                                        drop={[Function]}
                                        dropAnimationFinished={[Function]}
                                        index={0}
                                        isDragDisabled={false}
                                        isDragging={false}
                                        isDropAnimating={false}
                                        lift={[Function]}
                                        move={[Function]}
                                        moveByWindowScroll={[Function]}
                                        moveDown={[Function]}
                                        moveLeft={[Function]}
                                        moveRight={[Function]}
                                        moveUp={[Function]}
                                        offset={
                                          Object {
                                            "x": 0,
                                            "y": 0,
                                          }
                                        }
                                        shouldAnimateDisplacement={true}
                                        shouldAnimateDragMovement={false}
                                      >
                                        <DraggableDimensionPublisher
                                          draggableId="draggableId.content.id-timeline-column-destination_ip-for-event-1"
                                          droppableId="droppableId.content.id-timeline-column-destination_ip-for-event-1"
                                          getDraggableRef={[Function]}
                                          index={0}
                                          key="draggableId.content.id-timeline-column-destination_ip-for-event-1"
                                          type="DEFAULT"
                                        >
                                          <Moveable
                                            destination={
                                              Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                                            }
                                            onMoveEnd={[Function]}
                                            speed="INSTANT"
                                          >
                                            <Motion
                                              defaultStyle={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                              onRest={[Function]}
                                              style={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                            >
                                              <DoubleRenderBlocker
                                                change={
                                                  Object {
                                                    "x": 0,
                                                    "y": 0,
                                                  }
                                                }
                                              >
                                                <DragHandle
                                                  callbacks={
                                                    Object {
                                                      "onCancel": [Function],
                                                      "onDrop": [Function],
                                                      "onLift": [Function],
                                                      "onMove": [Function],
                                                      "onMoveDown": [Function],
                                                      "onMoveLeft": [Function],
                                                      "onMoveRight": [Function],
                                                      "onMoveUp": [Function],
                                                      "onWindowScroll": [Function],
                                                    }
                                                  }
                                                  canDragInteractiveElements={false}
                                                  draggableId="draggableId.content.id-timeline-column-destination_ip-for-event-1"
                                                  getDraggableRef={[Function]}
                                                  isDragging={false}
                                                  isDropAnimating={false}
                                                  isEnabled={true}
                                                >
                                                  <styled.div
                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                    data-react-beautiful-dnd-drag-handle="0"
                                                    data-react-beautiful-dnd-draggable="0"
                                                    data-test-subj="providerContainer"
                                                    draggable={false}
                                                    innerRef={[Function]}
                                                    onBlur={[Function]}
                                                    onDragStart={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onTouchStart={[Function]}
                                                    style={
                                                      Object {
                                                        "transform": null,
                                                        "transition": null,
                                                        "zIndex": 9000,
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <div
                                                      aria-roledescription="Draggable item. Press space bar to lift"
                                                      className="sc-kafWEX gzsLki"
                                                      data-react-beautiful-dnd-drag-handle="0"
                                                      data-react-beautiful-dnd-draggable="0"
                                                      data-test-subj="providerContainer"
                                                      draggable={false}
                                                      onBlur={[Function]}
                                                      onDragStart={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onTouchStart={[Function]}
                                                      style={
                                                        Object {
                                                          "transform": null,
                                                          "transition": null,
                                                          "zIndex": 9000,
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      <pure(Component)
                                                        data={
                                                          Object {
                                                            "_id": "1",
                                                            "destination": Object {
                                                              "ip": "192.168.0.3",
                                                              "port": 6343,
                                                            },
                                                            "event": Object {
                                                              "category": "Access",
                                                              "id": 1,
                                                              "module": "nginx",
                                                              "severity": 3,
                                                              "type": "HTTP Request",
                                                            },
                                                            "geo": Object {
                                                              "country_iso_code": "xx",
                                                              "region_name": "xx",
                                                            },
                                                            "host": Object {
                                                              "ip": Array [
                                                                "192.168.0.1",
                                                              ],
                                                              "name": "apache",
                                                            },
                                                            "source": Object {
                                                              "ip": "192.168.0.1",
                                                              "port": 80,
                                                            },
                                                            "timestamp": "2018-11-05T19:03:25.937Z",
                                                            "user": Object {
                                                              "id": 1,
                                                              "name": "john.dee",
                                                            },
                                                          }
                                                        }
                                                        fieldName="destination.ip"
                                                        fieldType="ip"
                                                      >
                                                        <Component
                                                          data={
                                                            Object {
                                                              "_id": "1",
                                                              "destination": Object {
                                                                "ip": "192.168.0.3",
                                                                "port": 6343,
                                                              },
                                                              "event": Object {
                                                                "category": "Access",
                                                                "id": 1,
                                                                "module": "nginx",
                                                                "severity": 3,
                                                                "type": "HTTP Request",
                                                              },
                                                              "geo": Object {
                                                                "country_iso_code": "xx",
                                                                "region_name": "xx",
                                                              },
                                                              "host": Object {
                                                                "ip": Array [
                                                                  "192.168.0.1",
                                                                ],
                                                                "name": "apache",
                                                              },
                                                              "source": Object {
                                                                "ip": "192.168.0.1",
                                                                "port": 80,
                                                              },
                                                              "timestamp": "2018-11-05T19:03:25.937Z",
                                                              "user": Object {
                                                                "id": 1,
                                                                "name": "john.dee",
                                                              },
                                                            }
                                                          }
                                                          fieldName="destination.ip"
                                                          fieldType="ip"
                                                        >
                                                          192.168.0.3
                                                        </Component>
                                                      </pure(Component)>
                                                    </div>
                                                  </styled.div>
                                                </DragHandle>
                                              </DoubleRenderBlocker>
                                            </Motion>
                                          </Moveable>
                                        </DraggableDimensionPublisher>
                                      </Draggable>
                                    </Connect(Draggable)>
                                  </div>
                                </DroppableDimensionPublisher>
                              </Droppable>
                            </Connect(Droppable)>
                          </div>
                        </DraggableWrapperComponent>
                      </Connect(DraggableWrapperComponent)>
                    </div>
                  </styled.div>
                </div>
              </EuiFlexItem>
              <EuiFlexItem
                component="div"
                grow={true}
                key="user.name"
              >
                <div
                  className="euiFlexItem"
                >
                  <styled.div
                    data-test-subj="column"
                    index={6}
                    maxWidth="100%"
                    minWidth="120px"
                  >
                    <div
                      className="sc-jtRfpW QTOGJ"
                      data-test-subj="column"
                    >
                      <Connect(DraggableWrapperComponent)
                        dataProvider={
                          Object {
                            "and": Array [],
                            "enabled": true,
                            "excluded": false,
                            "id": "id-timeline-column-user_name-for-event-1",
                            "kqlQuery": "",
                            "name": "user.name: john.dee",
                            "queryMatch": Object {
                              "field": "user.name",
                              "value": "john.dee",
                            },
                          }
                        }
                        key="timeline-draggable-column-user.name-for-event-1"
                        render={[Function]}
                      >
                        <DraggableWrapperComponent
                          dataProvider={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-user_name-for-event-1",
                              "kqlQuery": "",
                              "name": "user.name: john.dee",
                              "queryMatch": Object {
                                "field": "user.name",
                                "value": "john.dee",
                              },
                            }
                          }
                          id-timeline-column-destination_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-destination_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "destination.ip: 192.168.0.3",
                              "queryMatch": Object {
                                "field": "destination.ip",
                                "value": "192.168.0.3",
                              },
                            }
                          }
                          id-timeline-column-event_category-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_category-for-event-1",
                              "kqlQuery": "",
                              "name": "event.category: Access",
                              "queryMatch": Object {
                                "field": "event.category",
                                "value": "Access",
                              },
                            }
                          }
                          id-timeline-column-event_severity-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_severity-for-event-1",
                              "kqlQuery": "",
                              "name": "event.severity: 3",
                              "queryMatch": Object {
                                "field": "event.severity",
                                "value": 3,
                              },
                            }
                          }
                          id-timeline-column-event_type-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-event_type-for-event-1",
                              "kqlQuery": "",
                              "name": "event.type: HTTP Request",
                              "queryMatch": Object {
                                "field": "event.type",
                                "value": "HTTP Request",
                              },
                            }
                          }
                          id-timeline-column-host_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-host_name-for-event-1",
                              "kqlQuery": "",
                              "name": "host.name: apache",
                              "queryMatch": Object {
                                "field": "host.name",
                                "value": "apache",
                              },
                            }
                          }
                          id-timeline-column-source_ip-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-source_ip-for-event-1",
                              "kqlQuery": "",
                              "name": "source.ip: 192.168.0.1",
                              "queryMatch": Object {
                                "field": "source.ip",
                                "value": "192.168.0.1",
                              },
                            }
                          }
                          id-timeline-column-user_name-for-event-1={
                            Object {
                              "and": Array [],
                              "enabled": true,
                              "excluded": false,
                              "id": "id-timeline-column-user_name-for-event-1",
                              "kqlQuery": "",
                              "name": "user.name: john.dee",
                              "queryMatch": Object {
                                "field": "user.name",
                                "value": "john.dee",
                              },
                            }
                          }
                          registerProvider={[Function]}
                          render={[Function]}
                          unRegisterProvider={[Function]}
                        >
                          <div
                            data-test-subj="draggableWrapperDiv"
                          >
                            <Connect(Droppable)
                              direction="vertical"
                              droppableId="droppableId.content.id-timeline-column-user_name-for-event-1"
                              ignoreContainerClipping={false}
                              isDropDisabled={true}
                              type="DEFAULT"
                            >
                              <Droppable
                                direction="vertical"
                                dispatch={[Function]}
                                draggingOverWith={null}
                                droppableId="droppableId.content.id-timeline-column-user_name-for-event-1"
                                ignoreContainerClipping={false}
                                isDraggingOver={false}
                                isDropDisabled={true}
                                placeholder={null}
                                type="DEFAULT"
                              >
                                <DroppableDimensionPublisher
                                  direction="vertical"
                                  droppableId="droppableId.content.id-timeline-column-user_name-for-event-1"
                                  getDroppableRef={[Function]}
                                  ignoreContainerClipping={false}
                                  isDropDisabled={true}
                                  type="DEFAULT"
                                >
                                  <div
                                    data-react-beautiful-dnd-droppable="0"
                                  >
                                    <Connect(Draggable)
                                      disableInteractiveElementBlocking={false}
                                      draggableId="draggableId.content.id-timeline-column-user_name-for-event-1"
                                      index={0}
                                      isDragDisabled={false}
                                      key="id-timeline-column-user_name-for-event-1"
                                    >
                                      <Draggable
                                        dimension={null}
                                        disableInteractiveElementBlocking={false}
                                        draggableId="draggableId.content.id-timeline-column-user_name-for-event-1"
                                        draggingOver={null}
                                        drop={[Function]}
                                        dropAnimationFinished={[Function]}
                                        index={0}
                                        isDragDisabled={false}
                                        isDragging={false}
                                        isDropAnimating={false}
                                        lift={[Function]}
                                        move={[Function]}
                                        moveByWindowScroll={[Function]}
                                        moveDown={[Function]}
                                        moveLeft={[Function]}
                                        moveRight={[Function]}
                                        moveUp={[Function]}
                                        offset={
                                          Object {
                                            "x": 0,
                                            "y": 0,
                                          }
                                        }
                                        shouldAnimateDisplacement={true}
                                        shouldAnimateDragMovement={false}
                                      >
                                        <DraggableDimensionPublisher
                                          draggableId="draggableId.content.id-timeline-column-user_name-for-event-1"
                                          droppableId="droppableId.content.id-timeline-column-user_name-for-event-1"
                                          getDraggableRef={[Function]}
                                          index={0}
                                          key="draggableId.content.id-timeline-column-user_name-for-event-1"
                                          type="DEFAULT"
                                        >
                                          <Moveable
                                            destination={
                                              Object {
                                                "x": 0,
                                                "y": 0,
                                              }
                                            }
                                            onMoveEnd={[Function]}
                                            speed="INSTANT"
                                          >
                                            <Motion
                                              defaultStyle={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                              onRest={[Function]}
                                              style={
                                                Object {
                                                  "x": 0,
                                                  "y": 0,
                                                }
                                              }
                                            >
                                              <DoubleRenderBlocker
                                                change={
                                                  Object {
                                                    "x": 0,
                                                    "y": 0,
                                                  }
                                                }
                                              >
                                                <DragHandle
                                                  callbacks={
                                                    Object {
                                                      "onCancel": [Function],
                                                      "onDrop": [Function],
                                                      "onLift": [Function],
                                                      "onMove": [Function],
                                                      "onMoveDown": [Function],
                                                      "onMoveLeft": [Function],
                                                      "onMoveRight": [Function],
                                                      "onMoveUp": [Function],
                                                      "onWindowScroll": [Function],
                                                    }
                                                  }
                                                  canDragInteractiveElements={false}
                                                  draggableId="draggableId.content.id-timeline-column-user_name-for-event-1"
                                                  getDraggableRef={[Function]}
                                                  isDragging={false}
                                                  isDropAnimating={false}
                                                  isEnabled={true}
                                                >
                                                  <styled.div
                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                    data-react-beautiful-dnd-drag-handle="0"
                                                    data-react-beautiful-dnd-draggable="0"
                                                    data-test-subj="providerContainer"
                                                    draggable={false}
                                                    innerRef={[Function]}
                                                    onBlur={[Function]}
                                                    onDragStart={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onMouseDown={[Function]}
                                                    onTouchStart={[Function]}
                                                    style={
                                                      Object {
                                                        "transform": null,
                                                        "transition": null,
                                                        "zIndex": 9000,
                                                      }
                                                    }
                                                    tabIndex={0}
                                                  >
                                                    <div
                                                      aria-roledescription="Draggable item. Press space bar to lift"
                                                      className="sc-kafWEX gzsLki"
                                                      data-react-beautiful-dnd-drag-handle="0"
                                                      data-react-beautiful-dnd-draggable="0"
                                                      data-test-subj="providerContainer"
                                                      draggable={false}
                                                      onBlur={[Function]}
                                                      onDragStart={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      onTouchStart={[Function]}
                                                      style={
                                                        Object {
                                                          "transform": null,
                                                          "transition": null,
                                                          "zIndex": 9000,
                                                        }
                                                      }
                                                      tabIndex={0}
                                                    >
                                                      <pure(Component)
                                                        data={
                                                          Object {
                                                            "_id": "1",
                                                            "destination": Object {
                                                              "ip": "192.168.0.3",
                                                              "port": 6343,
                                                            },
                                                            "event": Object {
                                                              "category": "Access",
                                                              "id": 1,
                                                              "module": "nginx",
                                                              "severity": 3,
                                                              "type": "HTTP Request",
                                                            },
                                                            "geo": Object {
                                                              "country_iso_code": "xx",
                                                              "region_name": "xx",
                                                            },
                                                            "host": Object {
                                                              "ip": Array [
                                                                "192.168.0.1",
                                                              ],
                                                              "name": "apache",
                                                            },
                                                            "source": Object {
                                                              "ip": "192.168.0.1",
                                                              "port": 80,
                                                            },
                                                            "timestamp": "2018-11-05T19:03:25.937Z",
                                                            "user": Object {
                                                              "id": 1,
                                                              "name": "john.dee",
                                                            },
                                                          }
                                                        }
                                                        fieldName="user.name"
                                                        fieldType="keyword"
                                                      >
                                                        <Component
                                                          data={
                                                            Object {
                                                              "_id": "1",
                                                              "destination": Object {
                                                                "ip": "192.168.0.3",
                                                                "port": 6343,
                                                              },
                                                              "event": Object {
                                                                "category": "Access",
                                                                "id": 1,
                                                                "module": "nginx",
                                                                "severity": 3,
                                                                "type": "HTTP Request",
                                                              },
                                                              "geo": Object {
                                                                "country_iso_code": "xx",
                                                                "region_name": "xx",
                                                              },
                                                              "host": Object {
                                                                "ip": Array [
                                                                  "192.168.0.1",
                                                                ],
                                                                "name": "apache",
                                                              },
                                                              "source": Object {
                                                                "ip": "192.168.0.1",
                                                                "port": 80,
                                                              },
                                                              "timestamp": "2018-11-05T19:03:25.937Z",
                                                              "user": Object {
                                                                "id": 1,
                                                                "name": "john.dee",
                                                              },
                                                            }
                                                          }
                                                          fieldName="user.name"
                                                          fieldType="keyword"
                                                        >
                                                          john.dee
                                                        </Component>
                                                      </pure(Component)>
                                                    </div>
                                                  </styled.div>
                                                </DragHandle>
                                              </DoubleRenderBlocker>
                                            </Motion>
                                          </Moveable>
                                        </DraggableDimensionPublisher>
                                      </Draggable>
                                    </Connect(Draggable)>
                                  </div>
                                </DroppableDimensionPublisher>
                              </Droppable>
                            </Connect(Droppable)>
                          </div>
                        </DraggableWrapperComponent>
                      </Connect(DraggableWrapperComponent)>
                    </div>
                  </styled.div>
                </div>
              </EuiFlexItem>
            </div>
          </EuiFlexGroup>
        </Styled(EuiFlexGroup)>
      </Columns>
    </DragDropContext>
  </Provider>
</ThemeProvider>
`;
