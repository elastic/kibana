// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Columns it renders the expected columns 1`] = `
<pure(Component)>
  <Component>
    <Provider
      store={
        Object {
          "dispatch": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
          Symbol(Symbol.observable): [Function],
        }
      }
    >
      <ThemeProvider
        theme={[Function]}
      >
        <DragDropContext
          onDragEnd={[MockFunction]}
        >
          <DataDrivenColumns
            columnHeaders={
              Array [
                Object {
                  "category": "event",
                  "columnHeaderType": "not-filtered",
                  "description": "Severity describes the severity of the event. What the different severity values mean can very different between use cases. It's up to the implementer to make sure severities are consistent across events.",
                  "example": "7",
                  "id": "event.severity",
                  "type": "long",
                  "width": 180,
                },
                Object {
                  "category": "event",
                  "columnHeaderType": "not-filtered",
                  "description": "Event category.
This contains high-level information about the contents of the event. It is more generic than \`event.action\`, in the sense that typically a category contains multiple actions. Warning: In future versions of ECS, we plan to provide a list of acceptable values for this field, please use with caution.",
                  "example": "user-management",
                  "id": "event.category",
                  "type": "keyword",
                  "width": 180,
                },
                Object {
                  "category": "event",
                  "columnHeaderType": "not-filtered",
                  "description": "The action captured by the event.
This describes the information in the event. It is more specific than \`event.category\`. Examples are \`group-add\`, \`process-started\`, \`file-created\`. The value is normally defined by the implementer.",
                  "example": "user-password-change",
                  "id": "event.action",
                  "type": "keyword",
                  "width": 180,
                },
                Object {
                  "category": "host",
                  "columnHeaderType": "not-filtered",
                  "description": "Name of the host.
It can contain what \`hostname\` returns on Unix systems, the fully qualified domain name, or a name specified by the user. The sender decides which value to use.",
                  "example": "",
                  "id": "host.name",
                  "type": "keyword",
                  "width": 180,
                },
                Object {
                  "category": "source",
                  "columnHeaderType": "not-filtered",
                  "description": "IP address of the source.
Can be one or multiple IPv4 or IPv6 addresses.",
                  "example": "",
                  "id": "source.ip",
                  "type": "ip",
                  "width": 180,
                },
                Object {
                  "category": "destination",
                  "columnHeaderType": "not-filtered",
                  "description": "IP address of the destination.
Can be one or multiple IPv4 or IPv6 addresses.",
                  "example": "",
                  "id": "destination.ip",
                  "type": "ip",
                  "width": 180,
                },
                Object {
                  "category": "user",
                  "columnHeaderType": "not-filtered",
                  "description": "Short name or login of the user.",
                  "example": "albert",
                  "id": "user.name",
                  "type": "keyword",
                  "width": 180,
                },
              ]
            }
            columnRenderers={
              Array [
                Object {
                  "isInstance": [Function],
                  "renderColumn": [Function],
                },
                Object {
                  "isInstance": [Function],
                  "renderColumn": [Function],
                },
                Object {
                  "isInstance": [Function],
                  "renderColumn": [Function],
                },
              ]
            }
            ecs={
              Object {
                "_id": "1",
                "destination": Object {
                  "ip": "192.168.0.3",
                  "port": 6343,
                },
                "event": Object {
                  "action": "Action",
                  "category": "Access",
                  "id": 1,
                  "module": "nginx",
                  "severity": 3,
                },
                "geo": Object {
                  "country_iso_code": "xx",
                  "region_name": "xx",
                },
                "host": Object {
                  "ip": Array [
                    "192.168.0.1",
                  ],
                  "name": "apache",
                },
                "source": Object {
                  "ip": "192.168.0.1",
                  "port": 80,
                },
                "timestamp": "2018-11-05T19:03:25.937Z",
                "user": Object {
                  "id": 1,
                  "name": "john.dee",
                },
              }
            }
            onColumnResized={[MockFunction]}
          >
            <EuiFlexGroup
              alignItems="stretch"
              component="div"
              data-test-subj="data-driven-columns"
              direction="row"
              gutterSize="none"
              justifyContent="flexStart"
              responsive={true}
              wrap={false}
            >
              <div
                className="euiFlexGroup euiFlexGroup--directionRow euiFlexGroup--responsive"
                data-test-subj="data-driven-columns"
              >
                <EuiFlexItem
                  component="div"
                  grow={false}
                  key="event.severity"
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <Styled(EuiFlexGroup)
                      data-test-subj="cell-container"
                      gutterSize="none"
                      key="event.severity"
                      width="180px"
                    >
                      <EuiFlexGroup
                        alignItems="stretch"
                        className="sc-esOvli fCmuRT"
                        component="div"
                        data-test-subj="cell-container"
                        direction="row"
                        gutterSize="none"
                        justifyContent="flexStart"
                        responsive={true}
                        width="180px"
                        wrap={false}
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--directionRow euiFlexGroup--responsive sc-esOvli fCmuRT"
                          data-test-subj="cell-container"
                          width="180px"
                        >
                          <Resizeable
                            handle={
                              <Styled(EuiFlexItem)
                                grow={false}
                              >
                                <Styled(styled.div)
                                  data-test-subj="cell-resize-handle"
                                />
                              </Styled(EuiFlexItem)>
                            }
                            height="100%"
                            id="event.severity"
                            key="event.severity"
                            onResize={[Function]}
                            render={[Function]}
                          >
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <styled.div
                                  data-test-subj="column-cell"
                                  index={0}
                                  width="179px"
                                >
                                  <div
                                    className="sc-iuJeZd jVEfDQ"
                                    data-test-subj="column-cell"
                                    width="179px"
                                  >
                                    <Connect(DraggableWrapperComponent)
                                      dataProvider={
                                        Object {
                                          "and": Array [],
                                          "enabled": true,
                                          "excluded": false,
                                          "id": "id-timeline-column-event_severity-for-event-1",
                                          "kqlQuery": "",
                                          "name": "event.severity: 3",
                                          "queryMatch": Object {
                                            "field": "event.severity",
                                            "value": 3,
                                          },
                                        }
                                      }
                                      key="timeline-draggable-column-event.severity-for-event-1"
                                      render={[Function]}
                                      width="179px"
                                    >
                                      <DraggableWrapperComponent
                                        dataProvider={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_severity-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.severity: 3",
                                            "queryMatch": Object {
                                              "field": "event.severity",
                                              "value": 3,
                                            },
                                          }
                                        }
                                        id-timeline-column-destination_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-destination_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "destination.ip: 192.168.0.3",
                                            "queryMatch": Object {
                                              "field": "destination.ip",
                                              "value": "192.168.0.3",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_action-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_action-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.action: Action",
                                            "queryMatch": Object {
                                              "field": "event.action",
                                              "value": "Action",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_category-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_category-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.category: Access",
                                            "queryMatch": Object {
                                              "field": "event.category",
                                              "value": "Access",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_severity-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_severity-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.severity: 3",
                                            "queryMatch": Object {
                                              "field": "event.severity",
                                              "value": 3,
                                            },
                                          }
                                        }
                                        id-timeline-column-host_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-host_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "host.name: apache",
                                            "queryMatch": Object {
                                              "field": "host.name",
                                              "value": "apache",
                                            },
                                          }
                                        }
                                        id-timeline-column-source_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-source_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "source.ip: 192.168.0.1",
                                            "queryMatch": Object {
                                              "field": "source.ip",
                                              "value": "192.168.0.1",
                                            },
                                          }
                                        }
                                        id-timeline-column-user_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-user_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "user.name: john.dee",
                                            "queryMatch": Object {
                                              "field": "user.name",
                                              "value": "john.dee",
                                            },
                                          }
                                        }
                                        registerProvider={[Function]}
                                        render={[Function]}
                                        unRegisterProvider={[Function]}
                                        width="179px"
                                      >
                                        <div
                                          data-test-subj="draggableWrapperDiv"
                                        >
                                          <Connect(Droppable)
                                            direction="vertical"
                                            droppableId="droppableId.content.id-timeline-column-event_severity-for-event-1"
                                            ignoreContainerClipping={false}
                                            isDropDisabled={true}
                                            type="DEFAULT"
                                          >
                                            <Droppable
                                              direction="vertical"
                                              dispatch={[Function]}
                                              draggingOverWith={null}
                                              droppableId="droppableId.content.id-timeline-column-event_severity-for-event-1"
                                              ignoreContainerClipping={false}
                                              isDraggingOver={false}
                                              isDropDisabled={true}
                                              placeholder={null}
                                              type="DEFAULT"
                                            >
                                              <DroppableDimensionPublisher
                                                direction="vertical"
                                                droppableId="droppableId.content.id-timeline-column-event_severity-for-event-1"
                                                getDroppableRef={[Function]}
                                                ignoreContainerClipping={false}
                                                isDropDisabled={true}
                                                type="DEFAULT"
                                              >
                                                <div
                                                  data-react-beautiful-dnd-droppable="0"
                                                >
                                                  <Connect(Draggable)
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="draggableId.content.id-timeline-column-event_severity-for-event-1"
                                                    index={0}
                                                    isDragDisabled={false}
                                                    key="id-timeline-column-event_severity-for-event-1"
                                                  >
                                                    <Draggable
                                                      dimension={null}
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="draggableId.content.id-timeline-column-event_severity-for-event-1"
                                                      draggingOver={null}
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={0}
                                                      isDragDisabled={false}
                                                      isDragging={false}
                                                      isDropAnimating={false}
                                                      lift={[Function]}
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      offset={
                                                        Object {
                                                          "x": 0,
                                                          "y": 0,
                                                        }
                                                      }
                                                      shouldAnimateDisplacement={true}
                                                      shouldAnimateDragMovement={false}
                                                    >
                                                      <DraggableDimensionPublisher
                                                        draggableId="draggableId.content.id-timeline-column-event_severity-for-event-1"
                                                        droppableId="droppableId.content.id-timeline-column-event_severity-for-event-1"
                                                        getDraggableRef={[Function]}
                                                        index={0}
                                                        key="draggableId.content.id-timeline-column-event_severity-for-event-1"
                                                        type="DEFAULT"
                                                      >
                                                        <Moveable
                                                          destination={
                                                            Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            }
                                                          }
                                                          onMoveEnd={[Function]}
                                                          speed="INSTANT"
                                                        >
                                                          <Motion
                                                            defaultStyle={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                            onRest={[Function]}
                                                            style={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                          >
                                                            <DoubleRenderBlocker
                                                              change={
                                                                Object {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                }
                                                              }
                                                            >
                                                              <DragHandle
                                                                callbacks={
                                                                  Object {
                                                                    "onCancel": [Function],
                                                                    "onDrop": [Function],
                                                                    "onLift": [Function],
                                                                    "onMove": [Function],
                                                                    "onMoveDown": [Function],
                                                                    "onMoveLeft": [Function],
                                                                    "onMoveRight": [Function],
                                                                    "onMoveUp": [Function],
                                                                    "onWindowScroll": [Function],
                                                                  }
                                                                }
                                                                canDragInteractiveElements={false}
                                                                draggableId="draggableId.content.id-timeline-column-event_severity-for-event-1"
                                                                getDraggableRef={[Function]}
                                                                isDragging={false}
                                                                isDropAnimating={false}
                                                                isEnabled={true}
                                                              >
                                                                <styled.div
                                                                  aria-roledescription="Draggable item. Press space bar to lift"
                                                                  data-react-beautiful-dnd-drag-handle="0"
                                                                  data-react-beautiful-dnd-draggable="0"
                                                                  data-test-subj="providerContainer"
                                                                  draggable={false}
                                                                  innerRef={[Function]}
                                                                  onBlur={[Function]}
                                                                  onDragStart={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "transform": null,
                                                                      "transition": null,
                                                                      "zIndex": 9000,
                                                                    }
                                                                  }
                                                                  tabIndex={0}
                                                                >
                                                                  <div
                                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                                    className="sc-kEYyzF ljOknM"
                                                                    data-react-beautiful-dnd-drag-handle="0"
                                                                    data-react-beautiful-dnd-draggable="0"
                                                                    data-test-subj="providerContainer"
                                                                    draggable={false}
                                                                    onBlur={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                        "zIndex": 9000,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <Styled(EuiText)
                                                                      data-test-subj="draggable-truncatable-content"
                                                                      size="s"
                                                                      width="179px"
                                                                    >
                                                                      <EuiText
                                                                        className="sc-chPdSV fCTqqz"
                                                                        data-test-subj="draggable-truncatable-content"
                                                                        grow={true}
                                                                        size="s"
                                                                        width="179px"
                                                                      >
                                                                        <div
                                                                          className="euiText euiText--small sc-chPdSV fCTqqz"
                                                                          data-test-subj="draggable-truncatable-content"
                                                                          width="179px"
                                                                        >
                                                                          <pure(Component)
                                                                            data={
                                                                              Object {
                                                                                "_id": "1",
                                                                                "destination": Object {
                                                                                  "ip": "192.168.0.3",
                                                                                  "port": 6343,
                                                                                },
                                                                                "event": Object {
                                                                                  "action": "Action",
                                                                                  "category": "Access",
                                                                                  "id": 1,
                                                                                  "module": "nginx",
                                                                                  "severity": 3,
                                                                                },
                                                                                "geo": Object {
                                                                                  "country_iso_code": "xx",
                                                                                  "region_name": "xx",
                                                                                },
                                                                                "host": Object {
                                                                                  "ip": Array [
                                                                                    "192.168.0.1",
                                                                                  ],
                                                                                  "name": "apache",
                                                                                },
                                                                                "source": Object {
                                                                                  "ip": "192.168.0.1",
                                                                                  "port": 80,
                                                                                },
                                                                                "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                "user": Object {
                                                                                  "id": 1,
                                                                                  "name": "john.dee",
                                                                                },
                                                                              }
                                                                            }
                                                                            fieldName="event.severity"
                                                                            fieldType="long"
                                                                          >
                                                                            <Component
                                                                              data={
                                                                                Object {
                                                                                  "_id": "1",
                                                                                  "destination": Object {
                                                                                    "ip": "192.168.0.3",
                                                                                    "port": 6343,
                                                                                  },
                                                                                  "event": Object {
                                                                                    "action": "Action",
                                                                                    "category": "Access",
                                                                                    "id": 1,
                                                                                    "module": "nginx",
                                                                                    "severity": 3,
                                                                                  },
                                                                                  "geo": Object {
                                                                                    "country_iso_code": "xx",
                                                                                    "region_name": "xx",
                                                                                  },
                                                                                  "host": Object {
                                                                                    "ip": Array [
                                                                                      "192.168.0.1",
                                                                                    ],
                                                                                    "name": "apache",
                                                                                  },
                                                                                  "source": Object {
                                                                                    "ip": "192.168.0.1",
                                                                                    "port": 80,
                                                                                  },
                                                                                  "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                  "user": Object {
                                                                                    "id": 1,
                                                                                    "name": "john.dee",
                                                                                  },
                                                                                }
                                                                              }
                                                                              fieldName="event.severity"
                                                                              fieldType="long"
                                                                            >
                                                                              3
                                                                            </Component>
                                                                          </pure(Component)>
                                                                        </div>
                                                                      </EuiText>
                                                                    </Styled(EuiText)>
                                                                  </div>
                                                                </styled.div>
                                                              </DragHandle>
                                                            </DoubleRenderBlocker>
                                                          </Motion>
                                                        </Moveable>
                                                      </DraggableDimensionPublisher>
                                                    </Draggable>
                                                  </Connect(Draggable)>
                                                </div>
                                              </DroppableDimensionPublisher>
                                            </Droppable>
                                          </Connect(Droppable)>
                                        </div>
                                      </DraggableWrapperComponent>
                                    </Connect(DraggableWrapperComponent)>
                                  </div>
                                </styled.div>
                              </div>
                            </EuiFlexItem>
                            <styled.div
                              data-test-subj="resize-handle-container"
                              height="100%"
                              innerRef={
                                Object {
                                  "current": <div
                                    class="sc-jTzLTM gbzMiw"
                                    data-test-subj="resize-handle-container"
                                    height="100%"
                                  >
                                    <div
                                      class="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <div
                                        class="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                        data-test-subj="cell-resize-handle"
                                      />
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                className="sc-jTzLTM gbzMiw"
                                data-test-subj="resize-handle-container"
                                height="100%"
                              >
                                <Styled(EuiFlexItem)
                                  grow={false}
                                >
                                  <EuiFlexItem
                                    className="sc-jKJlTe fBIDha"
                                    component="div"
                                    grow={false}
                                  >
                                    <div
                                      className="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <Styled(styled.div)
                                        data-test-subj="cell-resize-handle"
                                      >
                                        <styled.div
                                          className="sc-jzJRlG jcYIxx"
                                          data-test-subj="cell-resize-handle"
                                        >
                                          <div
                                            className="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                            data-test-subj="cell-resize-handle"
                                          />
                                        </styled.div>
                                      </Styled(styled.div)>
                                    </div>
                                  </EuiFlexItem>
                                </Styled(EuiFlexItem)>
                              </div>
                            </styled.div>
                          </Resizeable>
                        </div>
                      </EuiFlexGroup>
                    </Styled(EuiFlexGroup)>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  component="div"
                  grow={false}
                  key="event.category"
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <Styled(EuiFlexGroup)
                      data-test-subj="cell-container"
                      gutterSize="none"
                      key="event.category"
                      width="180px"
                    >
                      <EuiFlexGroup
                        alignItems="stretch"
                        className="sc-esOvli fCmuRT"
                        component="div"
                        data-test-subj="cell-container"
                        direction="row"
                        gutterSize="none"
                        justifyContent="flexStart"
                        responsive={true}
                        width="180px"
                        wrap={false}
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--directionRow euiFlexGroup--responsive sc-esOvli fCmuRT"
                          data-test-subj="cell-container"
                          width="180px"
                        >
                          <Resizeable
                            handle={
                              <Styled(EuiFlexItem)
                                grow={false}
                              >
                                <Styled(styled.div)
                                  data-test-subj="cell-resize-handle"
                                />
                              </Styled(EuiFlexItem)>
                            }
                            height="100%"
                            id="event.category"
                            key="event.category"
                            onResize={[Function]}
                            render={[Function]}
                          >
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <styled.div
                                  data-test-subj="column-cell"
                                  index={1}
                                  width="179px"
                                >
                                  <div
                                    className="sc-iuJeZd fmXgbI"
                                    data-test-subj="column-cell"
                                    width="179px"
                                  >
                                    <Connect(DraggableWrapperComponent)
                                      dataProvider={
                                        Object {
                                          "and": Array [],
                                          "enabled": true,
                                          "excluded": false,
                                          "id": "id-timeline-column-event_category-for-event-1",
                                          "kqlQuery": "",
                                          "name": "event.category: Access",
                                          "queryMatch": Object {
                                            "field": "event.category",
                                            "value": "Access",
                                          },
                                        }
                                      }
                                      key="timeline-draggable-column-event.category-for-event-1"
                                      render={[Function]}
                                      width="179px"
                                    >
                                      <DraggableWrapperComponent
                                        dataProvider={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_category-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.category: Access",
                                            "queryMatch": Object {
                                              "field": "event.category",
                                              "value": "Access",
                                            },
                                          }
                                        }
                                        id-timeline-column-destination_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-destination_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "destination.ip: 192.168.0.3",
                                            "queryMatch": Object {
                                              "field": "destination.ip",
                                              "value": "192.168.0.3",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_action-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_action-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.action: Action",
                                            "queryMatch": Object {
                                              "field": "event.action",
                                              "value": "Action",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_category-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_category-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.category: Access",
                                            "queryMatch": Object {
                                              "field": "event.category",
                                              "value": "Access",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_severity-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_severity-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.severity: 3",
                                            "queryMatch": Object {
                                              "field": "event.severity",
                                              "value": 3,
                                            },
                                          }
                                        }
                                        id-timeline-column-host_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-host_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "host.name: apache",
                                            "queryMatch": Object {
                                              "field": "host.name",
                                              "value": "apache",
                                            },
                                          }
                                        }
                                        id-timeline-column-source_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-source_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "source.ip: 192.168.0.1",
                                            "queryMatch": Object {
                                              "field": "source.ip",
                                              "value": "192.168.0.1",
                                            },
                                          }
                                        }
                                        id-timeline-column-user_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-user_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "user.name: john.dee",
                                            "queryMatch": Object {
                                              "field": "user.name",
                                              "value": "john.dee",
                                            },
                                          }
                                        }
                                        registerProvider={[Function]}
                                        render={[Function]}
                                        unRegisterProvider={[Function]}
                                        width="179px"
                                      >
                                        <div
                                          data-test-subj="draggableWrapperDiv"
                                        >
                                          <Connect(Droppable)
                                            direction="vertical"
                                            droppableId="droppableId.content.id-timeline-column-event_category-for-event-1"
                                            ignoreContainerClipping={false}
                                            isDropDisabled={true}
                                            type="DEFAULT"
                                          >
                                            <Droppable
                                              direction="vertical"
                                              dispatch={[Function]}
                                              draggingOverWith={null}
                                              droppableId="droppableId.content.id-timeline-column-event_category-for-event-1"
                                              ignoreContainerClipping={false}
                                              isDraggingOver={false}
                                              isDropDisabled={true}
                                              placeholder={null}
                                              type="DEFAULT"
                                            >
                                              <DroppableDimensionPublisher
                                                direction="vertical"
                                                droppableId="droppableId.content.id-timeline-column-event_category-for-event-1"
                                                getDroppableRef={[Function]}
                                                ignoreContainerClipping={false}
                                                isDropDisabled={true}
                                                type="DEFAULT"
                                              >
                                                <div
                                                  data-react-beautiful-dnd-droppable="0"
                                                >
                                                  <Connect(Draggable)
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="draggableId.content.id-timeline-column-event_category-for-event-1"
                                                    index={0}
                                                    isDragDisabled={false}
                                                    key="id-timeline-column-event_category-for-event-1"
                                                  >
                                                    <Draggable
                                                      dimension={null}
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="draggableId.content.id-timeline-column-event_category-for-event-1"
                                                      draggingOver={null}
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={0}
                                                      isDragDisabled={false}
                                                      isDragging={false}
                                                      isDropAnimating={false}
                                                      lift={[Function]}
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      offset={
                                                        Object {
                                                          "x": 0,
                                                          "y": 0,
                                                        }
                                                      }
                                                      shouldAnimateDisplacement={true}
                                                      shouldAnimateDragMovement={false}
                                                    >
                                                      <DraggableDimensionPublisher
                                                        draggableId="draggableId.content.id-timeline-column-event_category-for-event-1"
                                                        droppableId="droppableId.content.id-timeline-column-event_category-for-event-1"
                                                        getDraggableRef={[Function]}
                                                        index={0}
                                                        key="draggableId.content.id-timeline-column-event_category-for-event-1"
                                                        type="DEFAULT"
                                                      >
                                                        <Moveable
                                                          destination={
                                                            Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            }
                                                          }
                                                          onMoveEnd={[Function]}
                                                          speed="INSTANT"
                                                        >
                                                          <Motion
                                                            defaultStyle={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                            onRest={[Function]}
                                                            style={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                          >
                                                            <DoubleRenderBlocker
                                                              change={
                                                                Object {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                }
                                                              }
                                                            >
                                                              <DragHandle
                                                                callbacks={
                                                                  Object {
                                                                    "onCancel": [Function],
                                                                    "onDrop": [Function],
                                                                    "onLift": [Function],
                                                                    "onMove": [Function],
                                                                    "onMoveDown": [Function],
                                                                    "onMoveLeft": [Function],
                                                                    "onMoveRight": [Function],
                                                                    "onMoveUp": [Function],
                                                                    "onWindowScroll": [Function],
                                                                  }
                                                                }
                                                                canDragInteractiveElements={false}
                                                                draggableId="draggableId.content.id-timeline-column-event_category-for-event-1"
                                                                getDraggableRef={[Function]}
                                                                isDragging={false}
                                                                isDropAnimating={false}
                                                                isEnabled={true}
                                                              >
                                                                <styled.div
                                                                  aria-roledescription="Draggable item. Press space bar to lift"
                                                                  data-react-beautiful-dnd-drag-handle="0"
                                                                  data-react-beautiful-dnd-draggable="0"
                                                                  data-test-subj="providerContainer"
                                                                  draggable={false}
                                                                  innerRef={[Function]}
                                                                  onBlur={[Function]}
                                                                  onDragStart={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "transform": null,
                                                                      "transition": null,
                                                                      "zIndex": 9000,
                                                                    }
                                                                  }
                                                                  tabIndex={0}
                                                                >
                                                                  <div
                                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                                    className="sc-kEYyzF ljOknM"
                                                                    data-react-beautiful-dnd-drag-handle="0"
                                                                    data-react-beautiful-dnd-draggable="0"
                                                                    data-test-subj="providerContainer"
                                                                    draggable={false}
                                                                    onBlur={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                        "zIndex": 9000,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <Styled(EuiText)
                                                                      data-test-subj="draggable-truncatable-content"
                                                                      size="s"
                                                                      width="179px"
                                                                    >
                                                                      <EuiText
                                                                        className="sc-chPdSV fCTqqz"
                                                                        data-test-subj="draggable-truncatable-content"
                                                                        grow={true}
                                                                        size="s"
                                                                        width="179px"
                                                                      >
                                                                        <div
                                                                          className="euiText euiText--small sc-chPdSV fCTqqz"
                                                                          data-test-subj="draggable-truncatable-content"
                                                                          width="179px"
                                                                        >
                                                                          <pure(Component)
                                                                            data={
                                                                              Object {
                                                                                "_id": "1",
                                                                                "destination": Object {
                                                                                  "ip": "192.168.0.3",
                                                                                  "port": 6343,
                                                                                },
                                                                                "event": Object {
                                                                                  "action": "Action",
                                                                                  "category": "Access",
                                                                                  "id": 1,
                                                                                  "module": "nginx",
                                                                                  "severity": 3,
                                                                                },
                                                                                "geo": Object {
                                                                                  "country_iso_code": "xx",
                                                                                  "region_name": "xx",
                                                                                },
                                                                                "host": Object {
                                                                                  "ip": Array [
                                                                                    "192.168.0.1",
                                                                                  ],
                                                                                  "name": "apache",
                                                                                },
                                                                                "source": Object {
                                                                                  "ip": "192.168.0.1",
                                                                                  "port": 80,
                                                                                },
                                                                                "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                "user": Object {
                                                                                  "id": 1,
                                                                                  "name": "john.dee",
                                                                                },
                                                                              }
                                                                            }
                                                                            fieldName="event.category"
                                                                            fieldType="keyword"
                                                                          >
                                                                            <Component
                                                                              data={
                                                                                Object {
                                                                                  "_id": "1",
                                                                                  "destination": Object {
                                                                                    "ip": "192.168.0.3",
                                                                                    "port": 6343,
                                                                                  },
                                                                                  "event": Object {
                                                                                    "action": "Action",
                                                                                    "category": "Access",
                                                                                    "id": 1,
                                                                                    "module": "nginx",
                                                                                    "severity": 3,
                                                                                  },
                                                                                  "geo": Object {
                                                                                    "country_iso_code": "xx",
                                                                                    "region_name": "xx",
                                                                                  },
                                                                                  "host": Object {
                                                                                    "ip": Array [
                                                                                      "192.168.0.1",
                                                                                    ],
                                                                                    "name": "apache",
                                                                                  },
                                                                                  "source": Object {
                                                                                    "ip": "192.168.0.1",
                                                                                    "port": 80,
                                                                                  },
                                                                                  "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                  "user": Object {
                                                                                    "id": 1,
                                                                                    "name": "john.dee",
                                                                                  },
                                                                                }
                                                                              }
                                                                              fieldName="event.category"
                                                                              fieldType="keyword"
                                                                            >
                                                                              Access
                                                                            </Component>
                                                                          </pure(Component)>
                                                                        </div>
                                                                      </EuiText>
                                                                    </Styled(EuiText)>
                                                                  </div>
                                                                </styled.div>
                                                              </DragHandle>
                                                            </DoubleRenderBlocker>
                                                          </Motion>
                                                        </Moveable>
                                                      </DraggableDimensionPublisher>
                                                    </Draggable>
                                                  </Connect(Draggable)>
                                                </div>
                                              </DroppableDimensionPublisher>
                                            </Droppable>
                                          </Connect(Droppable)>
                                        </div>
                                      </DraggableWrapperComponent>
                                    </Connect(DraggableWrapperComponent)>
                                  </div>
                                </styled.div>
                              </div>
                            </EuiFlexItem>
                            <styled.div
                              data-test-subj="resize-handle-container"
                              height="100%"
                              innerRef={
                                Object {
                                  "current": <div
                                    class="sc-jTzLTM gbzMiw"
                                    data-test-subj="resize-handle-container"
                                    height="100%"
                                  >
                                    <div
                                      class="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <div
                                        class="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                        data-test-subj="cell-resize-handle"
                                      />
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                className="sc-jTzLTM gbzMiw"
                                data-test-subj="resize-handle-container"
                                height="100%"
                              >
                                <Styled(EuiFlexItem)
                                  grow={false}
                                >
                                  <EuiFlexItem
                                    className="sc-jKJlTe fBIDha"
                                    component="div"
                                    grow={false}
                                  >
                                    <div
                                      className="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <Styled(styled.div)
                                        data-test-subj="cell-resize-handle"
                                      >
                                        <styled.div
                                          className="sc-jzJRlG jcYIxx"
                                          data-test-subj="cell-resize-handle"
                                        >
                                          <div
                                            className="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                            data-test-subj="cell-resize-handle"
                                          />
                                        </styled.div>
                                      </Styled(styled.div)>
                                    </div>
                                  </EuiFlexItem>
                                </Styled(EuiFlexItem)>
                              </div>
                            </styled.div>
                          </Resizeable>
                        </div>
                      </EuiFlexGroup>
                    </Styled(EuiFlexGroup)>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  component="div"
                  grow={false}
                  key="event.action"
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <Styled(EuiFlexGroup)
                      data-test-subj="cell-container"
                      gutterSize="none"
                      key="event.action"
                      width="180px"
                    >
                      <EuiFlexGroup
                        alignItems="stretch"
                        className="sc-esOvli fCmuRT"
                        component="div"
                        data-test-subj="cell-container"
                        direction="row"
                        gutterSize="none"
                        justifyContent="flexStart"
                        responsive={true}
                        width="180px"
                        wrap={false}
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--directionRow euiFlexGroup--responsive sc-esOvli fCmuRT"
                          data-test-subj="cell-container"
                          width="180px"
                        >
                          <Resizeable
                            handle={
                              <Styled(EuiFlexItem)
                                grow={false}
                              >
                                <Styled(styled.div)
                                  data-test-subj="cell-resize-handle"
                                />
                              </Styled(EuiFlexItem)>
                            }
                            height="100%"
                            id="event.action"
                            key="event.action"
                            onResize={[Function]}
                            render={[Function]}
                          >
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <styled.div
                                  data-test-subj="column-cell"
                                  index={2}
                                  width="179px"
                                >
                                  <div
                                    className="sc-iuJeZd jVEfDQ"
                                    data-test-subj="column-cell"
                                    width="179px"
                                  >
                                    <Connect(DraggableWrapperComponent)
                                      dataProvider={
                                        Object {
                                          "and": Array [],
                                          "enabled": true,
                                          "excluded": false,
                                          "id": "id-timeline-column-event_action-for-event-1",
                                          "kqlQuery": "",
                                          "name": "event.action: Action",
                                          "queryMatch": Object {
                                            "field": "event.action",
                                            "value": "Action",
                                          },
                                        }
                                      }
                                      key="timeline-draggable-column-event.action-for-event-1"
                                      render={[Function]}
                                      width="179px"
                                    >
                                      <DraggableWrapperComponent
                                        dataProvider={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_action-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.action: Action",
                                            "queryMatch": Object {
                                              "field": "event.action",
                                              "value": "Action",
                                            },
                                          }
                                        }
                                        id-timeline-column-destination_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-destination_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "destination.ip: 192.168.0.3",
                                            "queryMatch": Object {
                                              "field": "destination.ip",
                                              "value": "192.168.0.3",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_action-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_action-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.action: Action",
                                            "queryMatch": Object {
                                              "field": "event.action",
                                              "value": "Action",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_category-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_category-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.category: Access",
                                            "queryMatch": Object {
                                              "field": "event.category",
                                              "value": "Access",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_severity-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_severity-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.severity: 3",
                                            "queryMatch": Object {
                                              "field": "event.severity",
                                              "value": 3,
                                            },
                                          }
                                        }
                                        id-timeline-column-host_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-host_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "host.name: apache",
                                            "queryMatch": Object {
                                              "field": "host.name",
                                              "value": "apache",
                                            },
                                          }
                                        }
                                        id-timeline-column-source_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-source_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "source.ip: 192.168.0.1",
                                            "queryMatch": Object {
                                              "field": "source.ip",
                                              "value": "192.168.0.1",
                                            },
                                          }
                                        }
                                        id-timeline-column-user_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-user_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "user.name: john.dee",
                                            "queryMatch": Object {
                                              "field": "user.name",
                                              "value": "john.dee",
                                            },
                                          }
                                        }
                                        registerProvider={[Function]}
                                        render={[Function]}
                                        unRegisterProvider={[Function]}
                                        width="179px"
                                      >
                                        <div
                                          data-test-subj="draggableWrapperDiv"
                                        >
                                          <Connect(Droppable)
                                            direction="vertical"
                                            droppableId="droppableId.content.id-timeline-column-event_action-for-event-1"
                                            ignoreContainerClipping={false}
                                            isDropDisabled={true}
                                            type="DEFAULT"
                                          >
                                            <Droppable
                                              direction="vertical"
                                              dispatch={[Function]}
                                              draggingOverWith={null}
                                              droppableId="droppableId.content.id-timeline-column-event_action-for-event-1"
                                              ignoreContainerClipping={false}
                                              isDraggingOver={false}
                                              isDropDisabled={true}
                                              placeholder={null}
                                              type="DEFAULT"
                                            >
                                              <DroppableDimensionPublisher
                                                direction="vertical"
                                                droppableId="droppableId.content.id-timeline-column-event_action-for-event-1"
                                                getDroppableRef={[Function]}
                                                ignoreContainerClipping={false}
                                                isDropDisabled={true}
                                                type="DEFAULT"
                                              >
                                                <div
                                                  data-react-beautiful-dnd-droppable="0"
                                                >
                                                  <Connect(Draggable)
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="draggableId.content.id-timeline-column-event_action-for-event-1"
                                                    index={0}
                                                    isDragDisabled={false}
                                                    key="id-timeline-column-event_action-for-event-1"
                                                  >
                                                    <Draggable
                                                      dimension={null}
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="draggableId.content.id-timeline-column-event_action-for-event-1"
                                                      draggingOver={null}
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={0}
                                                      isDragDisabled={false}
                                                      isDragging={false}
                                                      isDropAnimating={false}
                                                      lift={[Function]}
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      offset={
                                                        Object {
                                                          "x": 0,
                                                          "y": 0,
                                                        }
                                                      }
                                                      shouldAnimateDisplacement={true}
                                                      shouldAnimateDragMovement={false}
                                                    >
                                                      <DraggableDimensionPublisher
                                                        draggableId="draggableId.content.id-timeline-column-event_action-for-event-1"
                                                        droppableId="droppableId.content.id-timeline-column-event_action-for-event-1"
                                                        getDraggableRef={[Function]}
                                                        index={0}
                                                        key="draggableId.content.id-timeline-column-event_action-for-event-1"
                                                        type="DEFAULT"
                                                      >
                                                        <Moveable
                                                          destination={
                                                            Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            }
                                                          }
                                                          onMoveEnd={[Function]}
                                                          speed="INSTANT"
                                                        >
                                                          <Motion
                                                            defaultStyle={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                            onRest={[Function]}
                                                            style={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                          >
                                                            <DoubleRenderBlocker
                                                              change={
                                                                Object {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                }
                                                              }
                                                            >
                                                              <DragHandle
                                                                callbacks={
                                                                  Object {
                                                                    "onCancel": [Function],
                                                                    "onDrop": [Function],
                                                                    "onLift": [Function],
                                                                    "onMove": [Function],
                                                                    "onMoveDown": [Function],
                                                                    "onMoveLeft": [Function],
                                                                    "onMoveRight": [Function],
                                                                    "onMoveUp": [Function],
                                                                    "onWindowScroll": [Function],
                                                                  }
                                                                }
                                                                canDragInteractiveElements={false}
                                                                draggableId="draggableId.content.id-timeline-column-event_action-for-event-1"
                                                                getDraggableRef={[Function]}
                                                                isDragging={false}
                                                                isDropAnimating={false}
                                                                isEnabled={true}
                                                              >
                                                                <styled.div
                                                                  aria-roledescription="Draggable item. Press space bar to lift"
                                                                  data-react-beautiful-dnd-drag-handle="0"
                                                                  data-react-beautiful-dnd-draggable="0"
                                                                  data-test-subj="providerContainer"
                                                                  draggable={false}
                                                                  innerRef={[Function]}
                                                                  onBlur={[Function]}
                                                                  onDragStart={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "transform": null,
                                                                      "transition": null,
                                                                      "zIndex": 9000,
                                                                    }
                                                                  }
                                                                  tabIndex={0}
                                                                >
                                                                  <div
                                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                                    className="sc-kEYyzF ljOknM"
                                                                    data-react-beautiful-dnd-drag-handle="0"
                                                                    data-react-beautiful-dnd-draggable="0"
                                                                    data-test-subj="providerContainer"
                                                                    draggable={false}
                                                                    onBlur={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                        "zIndex": 9000,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <Styled(EuiText)
                                                                      data-test-subj="draggable-truncatable-content"
                                                                      size="s"
                                                                      width="179px"
                                                                    >
                                                                      <EuiText
                                                                        className="sc-chPdSV fCTqqz"
                                                                        data-test-subj="draggable-truncatable-content"
                                                                        grow={true}
                                                                        size="s"
                                                                        width="179px"
                                                                      >
                                                                        <div
                                                                          className="euiText euiText--small sc-chPdSV fCTqqz"
                                                                          data-test-subj="draggable-truncatable-content"
                                                                          width="179px"
                                                                        >
                                                                          <pure(Component)
                                                                            data={
                                                                              Object {
                                                                                "_id": "1",
                                                                                "destination": Object {
                                                                                  "ip": "192.168.0.3",
                                                                                  "port": 6343,
                                                                                },
                                                                                "event": Object {
                                                                                  "action": "Action",
                                                                                  "category": "Access",
                                                                                  "id": 1,
                                                                                  "module": "nginx",
                                                                                  "severity": 3,
                                                                                },
                                                                                "geo": Object {
                                                                                  "country_iso_code": "xx",
                                                                                  "region_name": "xx",
                                                                                },
                                                                                "host": Object {
                                                                                  "ip": Array [
                                                                                    "192.168.0.1",
                                                                                  ],
                                                                                  "name": "apache",
                                                                                },
                                                                                "source": Object {
                                                                                  "ip": "192.168.0.1",
                                                                                  "port": 80,
                                                                                },
                                                                                "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                "user": Object {
                                                                                  "id": 1,
                                                                                  "name": "john.dee",
                                                                                },
                                                                              }
                                                                            }
                                                                            fieldName="event.action"
                                                                            fieldType="keyword"
                                                                          >
                                                                            <Component
                                                                              data={
                                                                                Object {
                                                                                  "_id": "1",
                                                                                  "destination": Object {
                                                                                    "ip": "192.168.0.3",
                                                                                    "port": 6343,
                                                                                  },
                                                                                  "event": Object {
                                                                                    "action": "Action",
                                                                                    "category": "Access",
                                                                                    "id": 1,
                                                                                    "module": "nginx",
                                                                                    "severity": 3,
                                                                                  },
                                                                                  "geo": Object {
                                                                                    "country_iso_code": "xx",
                                                                                    "region_name": "xx",
                                                                                  },
                                                                                  "host": Object {
                                                                                    "ip": Array [
                                                                                      "192.168.0.1",
                                                                                    ],
                                                                                    "name": "apache",
                                                                                  },
                                                                                  "source": Object {
                                                                                    "ip": "192.168.0.1",
                                                                                    "port": 80,
                                                                                  },
                                                                                  "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                  "user": Object {
                                                                                    "id": 1,
                                                                                    "name": "john.dee",
                                                                                  },
                                                                                }
                                                                              }
                                                                              fieldName="event.action"
                                                                              fieldType="keyword"
                                                                            >
                                                                              Action
                                                                            </Component>
                                                                          </pure(Component)>
                                                                        </div>
                                                                      </EuiText>
                                                                    </Styled(EuiText)>
                                                                  </div>
                                                                </styled.div>
                                                              </DragHandle>
                                                            </DoubleRenderBlocker>
                                                          </Motion>
                                                        </Moveable>
                                                      </DraggableDimensionPublisher>
                                                    </Draggable>
                                                  </Connect(Draggable)>
                                                </div>
                                              </DroppableDimensionPublisher>
                                            </Droppable>
                                          </Connect(Droppable)>
                                        </div>
                                      </DraggableWrapperComponent>
                                    </Connect(DraggableWrapperComponent)>
                                  </div>
                                </styled.div>
                              </div>
                            </EuiFlexItem>
                            <styled.div
                              data-test-subj="resize-handle-container"
                              height="100%"
                              innerRef={
                                Object {
                                  "current": <div
                                    class="sc-jTzLTM gbzMiw"
                                    data-test-subj="resize-handle-container"
                                    height="100%"
                                  >
                                    <div
                                      class="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <div
                                        class="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                        data-test-subj="cell-resize-handle"
                                      />
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                className="sc-jTzLTM gbzMiw"
                                data-test-subj="resize-handle-container"
                                height="100%"
                              >
                                <Styled(EuiFlexItem)
                                  grow={false}
                                >
                                  <EuiFlexItem
                                    className="sc-jKJlTe fBIDha"
                                    component="div"
                                    grow={false}
                                  >
                                    <div
                                      className="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <Styled(styled.div)
                                        data-test-subj="cell-resize-handle"
                                      >
                                        <styled.div
                                          className="sc-jzJRlG jcYIxx"
                                          data-test-subj="cell-resize-handle"
                                        >
                                          <div
                                            className="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                            data-test-subj="cell-resize-handle"
                                          />
                                        </styled.div>
                                      </Styled(styled.div)>
                                    </div>
                                  </EuiFlexItem>
                                </Styled(EuiFlexItem)>
                              </div>
                            </styled.div>
                          </Resizeable>
                        </div>
                      </EuiFlexGroup>
                    </Styled(EuiFlexGroup)>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  component="div"
                  grow={false}
                  key="host.name"
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <Styled(EuiFlexGroup)
                      data-test-subj="cell-container"
                      gutterSize="none"
                      key="host.name"
                      width="180px"
                    >
                      <EuiFlexGroup
                        alignItems="stretch"
                        className="sc-esOvli fCmuRT"
                        component="div"
                        data-test-subj="cell-container"
                        direction="row"
                        gutterSize="none"
                        justifyContent="flexStart"
                        responsive={true}
                        width="180px"
                        wrap={false}
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--directionRow euiFlexGroup--responsive sc-esOvli fCmuRT"
                          data-test-subj="cell-container"
                          width="180px"
                        >
                          <Resizeable
                            handle={
                              <Styled(EuiFlexItem)
                                grow={false}
                              >
                                <Styled(styled.div)
                                  data-test-subj="cell-resize-handle"
                                />
                              </Styled(EuiFlexItem)>
                            }
                            height="100%"
                            id="host.name"
                            key="host.name"
                            onResize={[Function]}
                            render={[Function]}
                          >
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <styled.div
                                  data-test-subj="column-cell"
                                  index={3}
                                  width="179px"
                                >
                                  <div
                                    className="sc-iuJeZd fmXgbI"
                                    data-test-subj="column-cell"
                                    width="179px"
                                  >
                                    <Connect(DraggableWrapperComponent)
                                      dataProvider={
                                        Object {
                                          "and": Array [],
                                          "enabled": true,
                                          "excluded": false,
                                          "id": "id-timeline-column-host_name-for-event-1",
                                          "kqlQuery": "",
                                          "name": "host.name: apache",
                                          "queryMatch": Object {
                                            "field": "host.name",
                                            "value": "apache",
                                          },
                                        }
                                      }
                                      key="timeline-draggable-column-host.name-for-event-1"
                                      render={[Function]}
                                      width="179px"
                                    >
                                      <DraggableWrapperComponent
                                        dataProvider={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-host_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "host.name: apache",
                                            "queryMatch": Object {
                                              "field": "host.name",
                                              "value": "apache",
                                            },
                                          }
                                        }
                                        id-timeline-column-destination_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-destination_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "destination.ip: 192.168.0.3",
                                            "queryMatch": Object {
                                              "field": "destination.ip",
                                              "value": "192.168.0.3",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_action-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_action-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.action: Action",
                                            "queryMatch": Object {
                                              "field": "event.action",
                                              "value": "Action",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_category-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_category-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.category: Access",
                                            "queryMatch": Object {
                                              "field": "event.category",
                                              "value": "Access",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_severity-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_severity-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.severity: 3",
                                            "queryMatch": Object {
                                              "field": "event.severity",
                                              "value": 3,
                                            },
                                          }
                                        }
                                        id-timeline-column-host_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-host_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "host.name: apache",
                                            "queryMatch": Object {
                                              "field": "host.name",
                                              "value": "apache",
                                            },
                                          }
                                        }
                                        id-timeline-column-source_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-source_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "source.ip: 192.168.0.1",
                                            "queryMatch": Object {
                                              "field": "source.ip",
                                              "value": "192.168.0.1",
                                            },
                                          }
                                        }
                                        id-timeline-column-user_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-user_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "user.name: john.dee",
                                            "queryMatch": Object {
                                              "field": "user.name",
                                              "value": "john.dee",
                                            },
                                          }
                                        }
                                        registerProvider={[Function]}
                                        render={[Function]}
                                        unRegisterProvider={[Function]}
                                        width="179px"
                                      >
                                        <div
                                          data-test-subj="draggableWrapperDiv"
                                        >
                                          <Connect(Droppable)
                                            direction="vertical"
                                            droppableId="droppableId.content.id-timeline-column-host_name-for-event-1"
                                            ignoreContainerClipping={false}
                                            isDropDisabled={true}
                                            type="DEFAULT"
                                          >
                                            <Droppable
                                              direction="vertical"
                                              dispatch={[Function]}
                                              draggingOverWith={null}
                                              droppableId="droppableId.content.id-timeline-column-host_name-for-event-1"
                                              ignoreContainerClipping={false}
                                              isDraggingOver={false}
                                              isDropDisabled={true}
                                              placeholder={null}
                                              type="DEFAULT"
                                            >
                                              <DroppableDimensionPublisher
                                                direction="vertical"
                                                droppableId="droppableId.content.id-timeline-column-host_name-for-event-1"
                                                getDroppableRef={[Function]}
                                                ignoreContainerClipping={false}
                                                isDropDisabled={true}
                                                type="DEFAULT"
                                              >
                                                <div
                                                  data-react-beautiful-dnd-droppable="0"
                                                >
                                                  <Connect(Draggable)
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="draggableId.content.id-timeline-column-host_name-for-event-1"
                                                    index={0}
                                                    isDragDisabled={false}
                                                    key="id-timeline-column-host_name-for-event-1"
                                                  >
                                                    <Draggable
                                                      dimension={null}
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="draggableId.content.id-timeline-column-host_name-for-event-1"
                                                      draggingOver={null}
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={0}
                                                      isDragDisabled={false}
                                                      isDragging={false}
                                                      isDropAnimating={false}
                                                      lift={[Function]}
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      offset={
                                                        Object {
                                                          "x": 0,
                                                          "y": 0,
                                                        }
                                                      }
                                                      shouldAnimateDisplacement={true}
                                                      shouldAnimateDragMovement={false}
                                                    >
                                                      <DraggableDimensionPublisher
                                                        draggableId="draggableId.content.id-timeline-column-host_name-for-event-1"
                                                        droppableId="droppableId.content.id-timeline-column-host_name-for-event-1"
                                                        getDraggableRef={[Function]}
                                                        index={0}
                                                        key="draggableId.content.id-timeline-column-host_name-for-event-1"
                                                        type="DEFAULT"
                                                      >
                                                        <Moveable
                                                          destination={
                                                            Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            }
                                                          }
                                                          onMoveEnd={[Function]}
                                                          speed="INSTANT"
                                                        >
                                                          <Motion
                                                            defaultStyle={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                            onRest={[Function]}
                                                            style={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                          >
                                                            <DoubleRenderBlocker
                                                              change={
                                                                Object {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                }
                                                              }
                                                            >
                                                              <DragHandle
                                                                callbacks={
                                                                  Object {
                                                                    "onCancel": [Function],
                                                                    "onDrop": [Function],
                                                                    "onLift": [Function],
                                                                    "onMove": [Function],
                                                                    "onMoveDown": [Function],
                                                                    "onMoveLeft": [Function],
                                                                    "onMoveRight": [Function],
                                                                    "onMoveUp": [Function],
                                                                    "onWindowScroll": [Function],
                                                                  }
                                                                }
                                                                canDragInteractiveElements={false}
                                                                draggableId="draggableId.content.id-timeline-column-host_name-for-event-1"
                                                                getDraggableRef={[Function]}
                                                                isDragging={false}
                                                                isDropAnimating={false}
                                                                isEnabled={true}
                                                              >
                                                                <styled.div
                                                                  aria-roledescription="Draggable item. Press space bar to lift"
                                                                  data-react-beautiful-dnd-drag-handle="0"
                                                                  data-react-beautiful-dnd-draggable="0"
                                                                  data-test-subj="providerContainer"
                                                                  draggable={false}
                                                                  innerRef={[Function]}
                                                                  onBlur={[Function]}
                                                                  onDragStart={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "transform": null,
                                                                      "transition": null,
                                                                      "zIndex": 9000,
                                                                    }
                                                                  }
                                                                  tabIndex={0}
                                                                >
                                                                  <div
                                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                                    className="sc-kEYyzF ljOknM"
                                                                    data-react-beautiful-dnd-drag-handle="0"
                                                                    data-react-beautiful-dnd-draggable="0"
                                                                    data-test-subj="providerContainer"
                                                                    draggable={false}
                                                                    onBlur={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                        "zIndex": 9000,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <Styled(EuiText)
                                                                      data-test-subj="draggable-truncatable-content"
                                                                      size="s"
                                                                      width="179px"
                                                                    >
                                                                      <EuiText
                                                                        className="sc-chPdSV fCTqqz"
                                                                        data-test-subj="draggable-truncatable-content"
                                                                        grow={true}
                                                                        size="s"
                                                                        width="179px"
                                                                      >
                                                                        <div
                                                                          className="euiText euiText--small sc-chPdSV fCTqqz"
                                                                          data-test-subj="draggable-truncatable-content"
                                                                          width="179px"
                                                                        >
                                                                          <pure(Component)
                                                                            data={
                                                                              Object {
                                                                                "_id": "1",
                                                                                "destination": Object {
                                                                                  "ip": "192.168.0.3",
                                                                                  "port": 6343,
                                                                                },
                                                                                "event": Object {
                                                                                  "action": "Action",
                                                                                  "category": "Access",
                                                                                  "id": 1,
                                                                                  "module": "nginx",
                                                                                  "severity": 3,
                                                                                },
                                                                                "geo": Object {
                                                                                  "country_iso_code": "xx",
                                                                                  "region_name": "xx",
                                                                                },
                                                                                "host": Object {
                                                                                  "ip": Array [
                                                                                    "192.168.0.1",
                                                                                  ],
                                                                                  "name": "apache",
                                                                                },
                                                                                "source": Object {
                                                                                  "ip": "192.168.0.1",
                                                                                  "port": 80,
                                                                                },
                                                                                "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                "user": Object {
                                                                                  "id": 1,
                                                                                  "name": "john.dee",
                                                                                },
                                                                              }
                                                                            }
                                                                            fieldName="host.name"
                                                                            fieldType="keyword"
                                                                          >
                                                                            <Component
                                                                              data={
                                                                                Object {
                                                                                  "_id": "1",
                                                                                  "destination": Object {
                                                                                    "ip": "192.168.0.3",
                                                                                    "port": 6343,
                                                                                  },
                                                                                  "event": Object {
                                                                                    "action": "Action",
                                                                                    "category": "Access",
                                                                                    "id": 1,
                                                                                    "module": "nginx",
                                                                                    "severity": 3,
                                                                                  },
                                                                                  "geo": Object {
                                                                                    "country_iso_code": "xx",
                                                                                    "region_name": "xx",
                                                                                  },
                                                                                  "host": Object {
                                                                                    "ip": Array [
                                                                                      "192.168.0.1",
                                                                                    ],
                                                                                    "name": "apache",
                                                                                  },
                                                                                  "source": Object {
                                                                                    "ip": "192.168.0.1",
                                                                                    "port": 80,
                                                                                  },
                                                                                  "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                  "user": Object {
                                                                                    "id": 1,
                                                                                    "name": "john.dee",
                                                                                  },
                                                                                }
                                                                              }
                                                                              fieldName="host.name"
                                                                              fieldType="keyword"
                                                                            >
                                                                              apache
                                                                            </Component>
                                                                          </pure(Component)>
                                                                        </div>
                                                                      </EuiText>
                                                                    </Styled(EuiText)>
                                                                  </div>
                                                                </styled.div>
                                                              </DragHandle>
                                                            </DoubleRenderBlocker>
                                                          </Motion>
                                                        </Moveable>
                                                      </DraggableDimensionPublisher>
                                                    </Draggable>
                                                  </Connect(Draggable)>
                                                </div>
                                              </DroppableDimensionPublisher>
                                            </Droppable>
                                          </Connect(Droppable)>
                                        </div>
                                      </DraggableWrapperComponent>
                                    </Connect(DraggableWrapperComponent)>
                                  </div>
                                </styled.div>
                              </div>
                            </EuiFlexItem>
                            <styled.div
                              data-test-subj="resize-handle-container"
                              height="100%"
                              innerRef={
                                Object {
                                  "current": <div
                                    class="sc-jTzLTM gbzMiw"
                                    data-test-subj="resize-handle-container"
                                    height="100%"
                                  >
                                    <div
                                      class="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <div
                                        class="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                        data-test-subj="cell-resize-handle"
                                      />
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                className="sc-jTzLTM gbzMiw"
                                data-test-subj="resize-handle-container"
                                height="100%"
                              >
                                <Styled(EuiFlexItem)
                                  grow={false}
                                >
                                  <EuiFlexItem
                                    className="sc-jKJlTe fBIDha"
                                    component="div"
                                    grow={false}
                                  >
                                    <div
                                      className="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <Styled(styled.div)
                                        data-test-subj="cell-resize-handle"
                                      >
                                        <styled.div
                                          className="sc-jzJRlG jcYIxx"
                                          data-test-subj="cell-resize-handle"
                                        >
                                          <div
                                            className="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                            data-test-subj="cell-resize-handle"
                                          />
                                        </styled.div>
                                      </Styled(styled.div)>
                                    </div>
                                  </EuiFlexItem>
                                </Styled(EuiFlexItem)>
                              </div>
                            </styled.div>
                          </Resizeable>
                        </div>
                      </EuiFlexGroup>
                    </Styled(EuiFlexGroup)>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  component="div"
                  grow={false}
                  key="source.ip"
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <Styled(EuiFlexGroup)
                      data-test-subj="cell-container"
                      gutterSize="none"
                      key="source.ip"
                      width="180px"
                    >
                      <EuiFlexGroup
                        alignItems="stretch"
                        className="sc-esOvli fCmuRT"
                        component="div"
                        data-test-subj="cell-container"
                        direction="row"
                        gutterSize="none"
                        justifyContent="flexStart"
                        responsive={true}
                        width="180px"
                        wrap={false}
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--directionRow euiFlexGroup--responsive sc-esOvli fCmuRT"
                          data-test-subj="cell-container"
                          width="180px"
                        >
                          <Resizeable
                            handle={
                              <Styled(EuiFlexItem)
                                grow={false}
                              >
                                <Styled(styled.div)
                                  data-test-subj="cell-resize-handle"
                                />
                              </Styled(EuiFlexItem)>
                            }
                            height="100%"
                            id="source.ip"
                            key="source.ip"
                            onResize={[Function]}
                            render={[Function]}
                          >
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <styled.div
                                  data-test-subj="column-cell"
                                  index={4}
                                  width="179px"
                                >
                                  <div
                                    className="sc-iuJeZd jVEfDQ"
                                    data-test-subj="column-cell"
                                    width="179px"
                                  >
                                    <Connect(DraggableWrapperComponent)
                                      dataProvider={
                                        Object {
                                          "and": Array [],
                                          "enabled": true,
                                          "excluded": false,
                                          "id": "id-timeline-column-source_ip-for-event-1",
                                          "kqlQuery": "",
                                          "name": "source.ip: 192.168.0.1",
                                          "queryMatch": Object {
                                            "field": "source.ip",
                                            "value": "192.168.0.1",
                                          },
                                        }
                                      }
                                      key="timeline-draggable-column-source.ip-for-event-1"
                                      render={[Function]}
                                      width="179px"
                                    >
                                      <DraggableWrapperComponent
                                        dataProvider={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-source_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "source.ip: 192.168.0.1",
                                            "queryMatch": Object {
                                              "field": "source.ip",
                                              "value": "192.168.0.1",
                                            },
                                          }
                                        }
                                        id-timeline-column-destination_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-destination_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "destination.ip: 192.168.0.3",
                                            "queryMatch": Object {
                                              "field": "destination.ip",
                                              "value": "192.168.0.3",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_action-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_action-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.action: Action",
                                            "queryMatch": Object {
                                              "field": "event.action",
                                              "value": "Action",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_category-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_category-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.category: Access",
                                            "queryMatch": Object {
                                              "field": "event.category",
                                              "value": "Access",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_severity-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_severity-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.severity: 3",
                                            "queryMatch": Object {
                                              "field": "event.severity",
                                              "value": 3,
                                            },
                                          }
                                        }
                                        id-timeline-column-host_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-host_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "host.name: apache",
                                            "queryMatch": Object {
                                              "field": "host.name",
                                              "value": "apache",
                                            },
                                          }
                                        }
                                        id-timeline-column-source_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-source_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "source.ip: 192.168.0.1",
                                            "queryMatch": Object {
                                              "field": "source.ip",
                                              "value": "192.168.0.1",
                                            },
                                          }
                                        }
                                        id-timeline-column-user_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-user_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "user.name: john.dee",
                                            "queryMatch": Object {
                                              "field": "user.name",
                                              "value": "john.dee",
                                            },
                                          }
                                        }
                                        registerProvider={[Function]}
                                        render={[Function]}
                                        unRegisterProvider={[Function]}
                                        width="179px"
                                      >
                                        <div
                                          data-test-subj="draggableWrapperDiv"
                                        >
                                          <Connect(Droppable)
                                            direction="vertical"
                                            droppableId="droppableId.content.id-timeline-column-source_ip-for-event-1"
                                            ignoreContainerClipping={false}
                                            isDropDisabled={true}
                                            type="DEFAULT"
                                          >
                                            <Droppable
                                              direction="vertical"
                                              dispatch={[Function]}
                                              draggingOverWith={null}
                                              droppableId="droppableId.content.id-timeline-column-source_ip-for-event-1"
                                              ignoreContainerClipping={false}
                                              isDraggingOver={false}
                                              isDropDisabled={true}
                                              placeholder={null}
                                              type="DEFAULT"
                                            >
                                              <DroppableDimensionPublisher
                                                direction="vertical"
                                                droppableId="droppableId.content.id-timeline-column-source_ip-for-event-1"
                                                getDroppableRef={[Function]}
                                                ignoreContainerClipping={false}
                                                isDropDisabled={true}
                                                type="DEFAULT"
                                              >
                                                <div
                                                  data-react-beautiful-dnd-droppable="0"
                                                >
                                                  <Connect(Draggable)
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="draggableId.content.id-timeline-column-source_ip-for-event-1"
                                                    index={0}
                                                    isDragDisabled={false}
                                                    key="id-timeline-column-source_ip-for-event-1"
                                                  >
                                                    <Draggable
                                                      dimension={null}
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="draggableId.content.id-timeline-column-source_ip-for-event-1"
                                                      draggingOver={null}
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={0}
                                                      isDragDisabled={false}
                                                      isDragging={false}
                                                      isDropAnimating={false}
                                                      lift={[Function]}
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      offset={
                                                        Object {
                                                          "x": 0,
                                                          "y": 0,
                                                        }
                                                      }
                                                      shouldAnimateDisplacement={true}
                                                      shouldAnimateDragMovement={false}
                                                    >
                                                      <DraggableDimensionPublisher
                                                        draggableId="draggableId.content.id-timeline-column-source_ip-for-event-1"
                                                        droppableId="droppableId.content.id-timeline-column-source_ip-for-event-1"
                                                        getDraggableRef={[Function]}
                                                        index={0}
                                                        key="draggableId.content.id-timeline-column-source_ip-for-event-1"
                                                        type="DEFAULT"
                                                      >
                                                        <Moveable
                                                          destination={
                                                            Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            }
                                                          }
                                                          onMoveEnd={[Function]}
                                                          speed="INSTANT"
                                                        >
                                                          <Motion
                                                            defaultStyle={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                            onRest={[Function]}
                                                            style={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                          >
                                                            <DoubleRenderBlocker
                                                              change={
                                                                Object {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                }
                                                              }
                                                            >
                                                              <DragHandle
                                                                callbacks={
                                                                  Object {
                                                                    "onCancel": [Function],
                                                                    "onDrop": [Function],
                                                                    "onLift": [Function],
                                                                    "onMove": [Function],
                                                                    "onMoveDown": [Function],
                                                                    "onMoveLeft": [Function],
                                                                    "onMoveRight": [Function],
                                                                    "onMoveUp": [Function],
                                                                    "onWindowScroll": [Function],
                                                                  }
                                                                }
                                                                canDragInteractiveElements={false}
                                                                draggableId="draggableId.content.id-timeline-column-source_ip-for-event-1"
                                                                getDraggableRef={[Function]}
                                                                isDragging={false}
                                                                isDropAnimating={false}
                                                                isEnabled={true}
                                                              >
                                                                <styled.div
                                                                  aria-roledescription="Draggable item. Press space bar to lift"
                                                                  data-react-beautiful-dnd-drag-handle="0"
                                                                  data-react-beautiful-dnd-draggable="0"
                                                                  data-test-subj="providerContainer"
                                                                  draggable={false}
                                                                  innerRef={[Function]}
                                                                  onBlur={[Function]}
                                                                  onDragStart={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "transform": null,
                                                                      "transition": null,
                                                                      "zIndex": 9000,
                                                                    }
                                                                  }
                                                                  tabIndex={0}
                                                                >
                                                                  <div
                                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                                    className="sc-kEYyzF ljOknM"
                                                                    data-react-beautiful-dnd-drag-handle="0"
                                                                    data-react-beautiful-dnd-draggable="0"
                                                                    data-test-subj="providerContainer"
                                                                    draggable={false}
                                                                    onBlur={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                        "zIndex": 9000,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <Styled(EuiText)
                                                                      data-test-subj="draggable-truncatable-content"
                                                                      size="s"
                                                                      width="179px"
                                                                    >
                                                                      <EuiText
                                                                        className="sc-chPdSV fCTqqz"
                                                                        data-test-subj="draggable-truncatable-content"
                                                                        grow={true}
                                                                        size="s"
                                                                        width="179px"
                                                                      >
                                                                        <div
                                                                          className="euiText euiText--small sc-chPdSV fCTqqz"
                                                                          data-test-subj="draggable-truncatable-content"
                                                                          width="179px"
                                                                        >
                                                                          <pure(Component)
                                                                            data={
                                                                              Object {
                                                                                "_id": "1",
                                                                                "destination": Object {
                                                                                  "ip": "192.168.0.3",
                                                                                  "port": 6343,
                                                                                },
                                                                                "event": Object {
                                                                                  "action": "Action",
                                                                                  "category": "Access",
                                                                                  "id": 1,
                                                                                  "module": "nginx",
                                                                                  "severity": 3,
                                                                                },
                                                                                "geo": Object {
                                                                                  "country_iso_code": "xx",
                                                                                  "region_name": "xx",
                                                                                },
                                                                                "host": Object {
                                                                                  "ip": Array [
                                                                                    "192.168.0.1",
                                                                                  ],
                                                                                  "name": "apache",
                                                                                },
                                                                                "source": Object {
                                                                                  "ip": "192.168.0.1",
                                                                                  "port": 80,
                                                                                },
                                                                                "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                "user": Object {
                                                                                  "id": 1,
                                                                                  "name": "john.dee",
                                                                                },
                                                                              }
                                                                            }
                                                                            fieldName="source.ip"
                                                                            fieldType="ip"
                                                                          >
                                                                            <Component
                                                                              data={
                                                                                Object {
                                                                                  "_id": "1",
                                                                                  "destination": Object {
                                                                                    "ip": "192.168.0.3",
                                                                                    "port": 6343,
                                                                                  },
                                                                                  "event": Object {
                                                                                    "action": "Action",
                                                                                    "category": "Access",
                                                                                    "id": 1,
                                                                                    "module": "nginx",
                                                                                    "severity": 3,
                                                                                  },
                                                                                  "geo": Object {
                                                                                    "country_iso_code": "xx",
                                                                                    "region_name": "xx",
                                                                                  },
                                                                                  "host": Object {
                                                                                    "ip": Array [
                                                                                      "192.168.0.1",
                                                                                    ],
                                                                                    "name": "apache",
                                                                                  },
                                                                                  "source": Object {
                                                                                    "ip": "192.168.0.1",
                                                                                    "port": 80,
                                                                                  },
                                                                                  "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                  "user": Object {
                                                                                    "id": 1,
                                                                                    "name": "john.dee",
                                                                                  },
                                                                                }
                                                                              }
                                                                              fieldName="source.ip"
                                                                              fieldType="ip"
                                                                            >
                                                                              <pure(Component)
                                                                                ip="192.168.0.1"
                                                                              >
                                                                                <Component
                                                                                  ip="192.168.0.1"
                                                                                >
                                                                                  <EuiLink
                                                                                    color="primary"
                                                                                    href="#/link-to/network/ip/192.168.0.1"
                                                                                    type="button"
                                                                                  >
                                                                                    <a
                                                                                      className="euiLink euiLink--primary"
                                                                                      href="#/link-to/network/ip/192.168.0.1"
                                                                                    >
                                                                                      192.168.0.1
                                                                                    </a>
                                                                                  </EuiLink>
                                                                                </Component>
                                                                              </pure(Component)>
                                                                            </Component>
                                                                          </pure(Component)>
                                                                        </div>
                                                                      </EuiText>
                                                                    </Styled(EuiText)>
                                                                  </div>
                                                                </styled.div>
                                                              </DragHandle>
                                                            </DoubleRenderBlocker>
                                                          </Motion>
                                                        </Moveable>
                                                      </DraggableDimensionPublisher>
                                                    </Draggable>
                                                  </Connect(Draggable)>
                                                </div>
                                              </DroppableDimensionPublisher>
                                            </Droppable>
                                          </Connect(Droppable)>
                                        </div>
                                      </DraggableWrapperComponent>
                                    </Connect(DraggableWrapperComponent)>
                                  </div>
                                </styled.div>
                              </div>
                            </EuiFlexItem>
                            <styled.div
                              data-test-subj="resize-handle-container"
                              height="100%"
                              innerRef={
                                Object {
                                  "current": <div
                                    class="sc-jTzLTM gbzMiw"
                                    data-test-subj="resize-handle-container"
                                    height="100%"
                                  >
                                    <div
                                      class="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <div
                                        class="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                        data-test-subj="cell-resize-handle"
                                      />
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                className="sc-jTzLTM gbzMiw"
                                data-test-subj="resize-handle-container"
                                height="100%"
                              >
                                <Styled(EuiFlexItem)
                                  grow={false}
                                >
                                  <EuiFlexItem
                                    className="sc-jKJlTe fBIDha"
                                    component="div"
                                    grow={false}
                                  >
                                    <div
                                      className="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <Styled(styled.div)
                                        data-test-subj="cell-resize-handle"
                                      >
                                        <styled.div
                                          className="sc-jzJRlG jcYIxx"
                                          data-test-subj="cell-resize-handle"
                                        >
                                          <div
                                            className="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                            data-test-subj="cell-resize-handle"
                                          />
                                        </styled.div>
                                      </Styled(styled.div)>
                                    </div>
                                  </EuiFlexItem>
                                </Styled(EuiFlexItem)>
                              </div>
                            </styled.div>
                          </Resizeable>
                        </div>
                      </EuiFlexGroup>
                    </Styled(EuiFlexGroup)>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  component="div"
                  grow={false}
                  key="destination.ip"
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <Styled(EuiFlexGroup)
                      data-test-subj="cell-container"
                      gutterSize="none"
                      key="destination.ip"
                      width="180px"
                    >
                      <EuiFlexGroup
                        alignItems="stretch"
                        className="sc-esOvli fCmuRT"
                        component="div"
                        data-test-subj="cell-container"
                        direction="row"
                        gutterSize="none"
                        justifyContent="flexStart"
                        responsive={true}
                        width="180px"
                        wrap={false}
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--directionRow euiFlexGroup--responsive sc-esOvli fCmuRT"
                          data-test-subj="cell-container"
                          width="180px"
                        >
                          <Resizeable
                            handle={
                              <Styled(EuiFlexItem)
                                grow={false}
                              >
                                <Styled(styled.div)
                                  data-test-subj="cell-resize-handle"
                                />
                              </Styled(EuiFlexItem)>
                            }
                            height="100%"
                            id="destination.ip"
                            key="destination.ip"
                            onResize={[Function]}
                            render={[Function]}
                          >
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <styled.div
                                  data-test-subj="column-cell"
                                  index={5}
                                  width="179px"
                                >
                                  <div
                                    className="sc-iuJeZd fmXgbI"
                                    data-test-subj="column-cell"
                                    width="179px"
                                  >
                                    <Connect(DraggableWrapperComponent)
                                      dataProvider={
                                        Object {
                                          "and": Array [],
                                          "enabled": true,
                                          "excluded": false,
                                          "id": "id-timeline-column-destination_ip-for-event-1",
                                          "kqlQuery": "",
                                          "name": "destination.ip: 192.168.0.3",
                                          "queryMatch": Object {
                                            "field": "destination.ip",
                                            "value": "192.168.0.3",
                                          },
                                        }
                                      }
                                      key="timeline-draggable-column-destination.ip-for-event-1"
                                      render={[Function]}
                                      width="179px"
                                    >
                                      <DraggableWrapperComponent
                                        dataProvider={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-destination_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "destination.ip: 192.168.0.3",
                                            "queryMatch": Object {
                                              "field": "destination.ip",
                                              "value": "192.168.0.3",
                                            },
                                          }
                                        }
                                        id-timeline-column-destination_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-destination_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "destination.ip: 192.168.0.3",
                                            "queryMatch": Object {
                                              "field": "destination.ip",
                                              "value": "192.168.0.3",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_action-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_action-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.action: Action",
                                            "queryMatch": Object {
                                              "field": "event.action",
                                              "value": "Action",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_category-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_category-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.category: Access",
                                            "queryMatch": Object {
                                              "field": "event.category",
                                              "value": "Access",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_severity-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_severity-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.severity: 3",
                                            "queryMatch": Object {
                                              "field": "event.severity",
                                              "value": 3,
                                            },
                                          }
                                        }
                                        id-timeline-column-host_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-host_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "host.name: apache",
                                            "queryMatch": Object {
                                              "field": "host.name",
                                              "value": "apache",
                                            },
                                          }
                                        }
                                        id-timeline-column-source_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-source_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "source.ip: 192.168.0.1",
                                            "queryMatch": Object {
                                              "field": "source.ip",
                                              "value": "192.168.0.1",
                                            },
                                          }
                                        }
                                        id-timeline-column-user_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-user_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "user.name: john.dee",
                                            "queryMatch": Object {
                                              "field": "user.name",
                                              "value": "john.dee",
                                            },
                                          }
                                        }
                                        registerProvider={[Function]}
                                        render={[Function]}
                                        unRegisterProvider={[Function]}
                                        width="179px"
                                      >
                                        <div
                                          data-test-subj="draggableWrapperDiv"
                                        >
                                          <Connect(Droppable)
                                            direction="vertical"
                                            droppableId="droppableId.content.id-timeline-column-destination_ip-for-event-1"
                                            ignoreContainerClipping={false}
                                            isDropDisabled={true}
                                            type="DEFAULT"
                                          >
                                            <Droppable
                                              direction="vertical"
                                              dispatch={[Function]}
                                              draggingOverWith={null}
                                              droppableId="droppableId.content.id-timeline-column-destination_ip-for-event-1"
                                              ignoreContainerClipping={false}
                                              isDraggingOver={false}
                                              isDropDisabled={true}
                                              placeholder={null}
                                              type="DEFAULT"
                                            >
                                              <DroppableDimensionPublisher
                                                direction="vertical"
                                                droppableId="droppableId.content.id-timeline-column-destination_ip-for-event-1"
                                                getDroppableRef={[Function]}
                                                ignoreContainerClipping={false}
                                                isDropDisabled={true}
                                                type="DEFAULT"
                                              >
                                                <div
                                                  data-react-beautiful-dnd-droppable="0"
                                                >
                                                  <Connect(Draggable)
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="draggableId.content.id-timeline-column-destination_ip-for-event-1"
                                                    index={0}
                                                    isDragDisabled={false}
                                                    key="id-timeline-column-destination_ip-for-event-1"
                                                  >
                                                    <Draggable
                                                      dimension={null}
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="draggableId.content.id-timeline-column-destination_ip-for-event-1"
                                                      draggingOver={null}
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={0}
                                                      isDragDisabled={false}
                                                      isDragging={false}
                                                      isDropAnimating={false}
                                                      lift={[Function]}
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      offset={
                                                        Object {
                                                          "x": 0,
                                                          "y": 0,
                                                        }
                                                      }
                                                      shouldAnimateDisplacement={true}
                                                      shouldAnimateDragMovement={false}
                                                    >
                                                      <DraggableDimensionPublisher
                                                        draggableId="draggableId.content.id-timeline-column-destination_ip-for-event-1"
                                                        droppableId="droppableId.content.id-timeline-column-destination_ip-for-event-1"
                                                        getDraggableRef={[Function]}
                                                        index={0}
                                                        key="draggableId.content.id-timeline-column-destination_ip-for-event-1"
                                                        type="DEFAULT"
                                                      >
                                                        <Moveable
                                                          destination={
                                                            Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            }
                                                          }
                                                          onMoveEnd={[Function]}
                                                          speed="INSTANT"
                                                        >
                                                          <Motion
                                                            defaultStyle={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                            onRest={[Function]}
                                                            style={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                          >
                                                            <DoubleRenderBlocker
                                                              change={
                                                                Object {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                }
                                                              }
                                                            >
                                                              <DragHandle
                                                                callbacks={
                                                                  Object {
                                                                    "onCancel": [Function],
                                                                    "onDrop": [Function],
                                                                    "onLift": [Function],
                                                                    "onMove": [Function],
                                                                    "onMoveDown": [Function],
                                                                    "onMoveLeft": [Function],
                                                                    "onMoveRight": [Function],
                                                                    "onMoveUp": [Function],
                                                                    "onWindowScroll": [Function],
                                                                  }
                                                                }
                                                                canDragInteractiveElements={false}
                                                                draggableId="draggableId.content.id-timeline-column-destination_ip-for-event-1"
                                                                getDraggableRef={[Function]}
                                                                isDragging={false}
                                                                isDropAnimating={false}
                                                                isEnabled={true}
                                                              >
                                                                <styled.div
                                                                  aria-roledescription="Draggable item. Press space bar to lift"
                                                                  data-react-beautiful-dnd-drag-handle="0"
                                                                  data-react-beautiful-dnd-draggable="0"
                                                                  data-test-subj="providerContainer"
                                                                  draggable={false}
                                                                  innerRef={[Function]}
                                                                  onBlur={[Function]}
                                                                  onDragStart={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "transform": null,
                                                                      "transition": null,
                                                                      "zIndex": 9000,
                                                                    }
                                                                  }
                                                                  tabIndex={0}
                                                                >
                                                                  <div
                                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                                    className="sc-kEYyzF ljOknM"
                                                                    data-react-beautiful-dnd-drag-handle="0"
                                                                    data-react-beautiful-dnd-draggable="0"
                                                                    data-test-subj="providerContainer"
                                                                    draggable={false}
                                                                    onBlur={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                        "zIndex": 9000,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <Styled(EuiText)
                                                                      data-test-subj="draggable-truncatable-content"
                                                                      size="s"
                                                                      width="179px"
                                                                    >
                                                                      <EuiText
                                                                        className="sc-chPdSV fCTqqz"
                                                                        data-test-subj="draggable-truncatable-content"
                                                                        grow={true}
                                                                        size="s"
                                                                        width="179px"
                                                                      >
                                                                        <div
                                                                          className="euiText euiText--small sc-chPdSV fCTqqz"
                                                                          data-test-subj="draggable-truncatable-content"
                                                                          width="179px"
                                                                        >
                                                                          <pure(Component)
                                                                            data={
                                                                              Object {
                                                                                "_id": "1",
                                                                                "destination": Object {
                                                                                  "ip": "192.168.0.3",
                                                                                  "port": 6343,
                                                                                },
                                                                                "event": Object {
                                                                                  "action": "Action",
                                                                                  "category": "Access",
                                                                                  "id": 1,
                                                                                  "module": "nginx",
                                                                                  "severity": 3,
                                                                                },
                                                                                "geo": Object {
                                                                                  "country_iso_code": "xx",
                                                                                  "region_name": "xx",
                                                                                },
                                                                                "host": Object {
                                                                                  "ip": Array [
                                                                                    "192.168.0.1",
                                                                                  ],
                                                                                  "name": "apache",
                                                                                },
                                                                                "source": Object {
                                                                                  "ip": "192.168.0.1",
                                                                                  "port": 80,
                                                                                },
                                                                                "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                "user": Object {
                                                                                  "id": 1,
                                                                                  "name": "john.dee",
                                                                                },
                                                                              }
                                                                            }
                                                                            fieldName="destination.ip"
                                                                            fieldType="ip"
                                                                          >
                                                                            <Component
                                                                              data={
                                                                                Object {
                                                                                  "_id": "1",
                                                                                  "destination": Object {
                                                                                    "ip": "192.168.0.3",
                                                                                    "port": 6343,
                                                                                  },
                                                                                  "event": Object {
                                                                                    "action": "Action",
                                                                                    "category": "Access",
                                                                                    "id": 1,
                                                                                    "module": "nginx",
                                                                                    "severity": 3,
                                                                                  },
                                                                                  "geo": Object {
                                                                                    "country_iso_code": "xx",
                                                                                    "region_name": "xx",
                                                                                  },
                                                                                  "host": Object {
                                                                                    "ip": Array [
                                                                                      "192.168.0.1",
                                                                                    ],
                                                                                    "name": "apache",
                                                                                  },
                                                                                  "source": Object {
                                                                                    "ip": "192.168.0.1",
                                                                                    "port": 80,
                                                                                  },
                                                                                  "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                  "user": Object {
                                                                                    "id": 1,
                                                                                    "name": "john.dee",
                                                                                  },
                                                                                }
                                                                              }
                                                                              fieldName="destination.ip"
                                                                              fieldType="ip"
                                                                            >
                                                                              <pure(Component)
                                                                                ip="192.168.0.3"
                                                                              >
                                                                                <Component
                                                                                  ip="192.168.0.3"
                                                                                >
                                                                                  <EuiLink
                                                                                    color="primary"
                                                                                    href="#/link-to/network/ip/192.168.0.3"
                                                                                    type="button"
                                                                                  >
                                                                                    <a
                                                                                      className="euiLink euiLink--primary"
                                                                                      href="#/link-to/network/ip/192.168.0.3"
                                                                                    >
                                                                                      192.168.0.3
                                                                                    </a>
                                                                                  </EuiLink>
                                                                                </Component>
                                                                              </pure(Component)>
                                                                            </Component>
                                                                          </pure(Component)>
                                                                        </div>
                                                                      </EuiText>
                                                                    </Styled(EuiText)>
                                                                  </div>
                                                                </styled.div>
                                                              </DragHandle>
                                                            </DoubleRenderBlocker>
                                                          </Motion>
                                                        </Moveable>
                                                      </DraggableDimensionPublisher>
                                                    </Draggable>
                                                  </Connect(Draggable)>
                                                </div>
                                              </DroppableDimensionPublisher>
                                            </Droppable>
                                          </Connect(Droppable)>
                                        </div>
                                      </DraggableWrapperComponent>
                                    </Connect(DraggableWrapperComponent)>
                                  </div>
                                </styled.div>
                              </div>
                            </EuiFlexItem>
                            <styled.div
                              data-test-subj="resize-handle-container"
                              height="100%"
                              innerRef={
                                Object {
                                  "current": <div
                                    class="sc-jTzLTM gbzMiw"
                                    data-test-subj="resize-handle-container"
                                    height="100%"
                                  >
                                    <div
                                      class="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <div
                                        class="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                        data-test-subj="cell-resize-handle"
                                      />
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                className="sc-jTzLTM gbzMiw"
                                data-test-subj="resize-handle-container"
                                height="100%"
                              >
                                <Styled(EuiFlexItem)
                                  grow={false}
                                >
                                  <EuiFlexItem
                                    className="sc-jKJlTe fBIDha"
                                    component="div"
                                    grow={false}
                                  >
                                    <div
                                      className="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <Styled(styled.div)
                                        data-test-subj="cell-resize-handle"
                                      >
                                        <styled.div
                                          className="sc-jzJRlG jcYIxx"
                                          data-test-subj="cell-resize-handle"
                                        >
                                          <div
                                            className="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                            data-test-subj="cell-resize-handle"
                                          />
                                        </styled.div>
                                      </Styled(styled.div)>
                                    </div>
                                  </EuiFlexItem>
                                </Styled(EuiFlexItem)>
                              </div>
                            </styled.div>
                          </Resizeable>
                        </div>
                      </EuiFlexGroup>
                    </Styled(EuiFlexGroup)>
                  </div>
                </EuiFlexItem>
                <EuiFlexItem
                  component="div"
                  grow={false}
                  key="user.name"
                >
                  <div
                    className="euiFlexItem euiFlexItem--flexGrowZero"
                  >
                    <Styled(EuiFlexGroup)
                      data-test-subj="cell-container"
                      gutterSize="none"
                      key="user.name"
                      width="180px"
                    >
                      <EuiFlexGroup
                        alignItems="stretch"
                        className="sc-esOvli fCmuRT"
                        component="div"
                        data-test-subj="cell-container"
                        direction="row"
                        gutterSize="none"
                        justifyContent="flexStart"
                        responsive={true}
                        width="180px"
                        wrap={false}
                      >
                        <div
                          className="euiFlexGroup euiFlexGroup--directionRow euiFlexGroup--responsive sc-esOvli fCmuRT"
                          data-test-subj="cell-container"
                          width="180px"
                        >
                          <Resizeable
                            handle={
                              <Styled(EuiFlexItem)
                                grow={false}
                              >
                                <Styled(styled.div)
                                  data-test-subj="cell-resize-handle"
                                />
                              </Styled(EuiFlexItem)>
                            }
                            height="100%"
                            id="user.name"
                            key="user.name"
                            onResize={[Function]}
                            render={[Function]}
                          >
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <styled.div
                                  data-test-subj="column-cell"
                                  index={6}
                                  width="179px"
                                >
                                  <div
                                    className="sc-iuJeZd jVEfDQ"
                                    data-test-subj="column-cell"
                                    width="179px"
                                  >
                                    <Connect(DraggableWrapperComponent)
                                      dataProvider={
                                        Object {
                                          "and": Array [],
                                          "enabled": true,
                                          "excluded": false,
                                          "id": "id-timeline-column-user_name-for-event-1",
                                          "kqlQuery": "",
                                          "name": "user.name: john.dee",
                                          "queryMatch": Object {
                                            "field": "user.name",
                                            "value": "john.dee",
                                          },
                                        }
                                      }
                                      key="timeline-draggable-column-user.name-for-event-1"
                                      render={[Function]}
                                      width="179px"
                                    >
                                      <DraggableWrapperComponent
                                        dataProvider={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-user_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "user.name: john.dee",
                                            "queryMatch": Object {
                                              "field": "user.name",
                                              "value": "john.dee",
                                            },
                                          }
                                        }
                                        id-timeline-column-destination_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-destination_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "destination.ip: 192.168.0.3",
                                            "queryMatch": Object {
                                              "field": "destination.ip",
                                              "value": "192.168.0.3",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_action-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_action-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.action: Action",
                                            "queryMatch": Object {
                                              "field": "event.action",
                                              "value": "Action",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_category-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_category-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.category: Access",
                                            "queryMatch": Object {
                                              "field": "event.category",
                                              "value": "Access",
                                            },
                                          }
                                        }
                                        id-timeline-column-event_severity-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-event_severity-for-event-1",
                                            "kqlQuery": "",
                                            "name": "event.severity: 3",
                                            "queryMatch": Object {
                                              "field": "event.severity",
                                              "value": 3,
                                            },
                                          }
                                        }
                                        id-timeline-column-host_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-host_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "host.name: apache",
                                            "queryMatch": Object {
                                              "field": "host.name",
                                              "value": "apache",
                                            },
                                          }
                                        }
                                        id-timeline-column-source_ip-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-source_ip-for-event-1",
                                            "kqlQuery": "",
                                            "name": "source.ip: 192.168.0.1",
                                            "queryMatch": Object {
                                              "field": "source.ip",
                                              "value": "192.168.0.1",
                                            },
                                          }
                                        }
                                        id-timeline-column-user_name-for-event-1={
                                          Object {
                                            "and": Array [],
                                            "enabled": true,
                                            "excluded": false,
                                            "id": "id-timeline-column-user_name-for-event-1",
                                            "kqlQuery": "",
                                            "name": "user.name: john.dee",
                                            "queryMatch": Object {
                                              "field": "user.name",
                                              "value": "john.dee",
                                            },
                                          }
                                        }
                                        registerProvider={[Function]}
                                        render={[Function]}
                                        unRegisterProvider={[Function]}
                                        width="179px"
                                      >
                                        <div
                                          data-test-subj="draggableWrapperDiv"
                                        >
                                          <Connect(Droppable)
                                            direction="vertical"
                                            droppableId="droppableId.content.id-timeline-column-user_name-for-event-1"
                                            ignoreContainerClipping={false}
                                            isDropDisabled={true}
                                            type="DEFAULT"
                                          >
                                            <Droppable
                                              direction="vertical"
                                              dispatch={[Function]}
                                              draggingOverWith={null}
                                              droppableId="droppableId.content.id-timeline-column-user_name-for-event-1"
                                              ignoreContainerClipping={false}
                                              isDraggingOver={false}
                                              isDropDisabled={true}
                                              placeholder={null}
                                              type="DEFAULT"
                                            >
                                              <DroppableDimensionPublisher
                                                direction="vertical"
                                                droppableId="droppableId.content.id-timeline-column-user_name-for-event-1"
                                                getDroppableRef={[Function]}
                                                ignoreContainerClipping={false}
                                                isDropDisabled={true}
                                                type="DEFAULT"
                                              >
                                                <div
                                                  data-react-beautiful-dnd-droppable="0"
                                                >
                                                  <Connect(Draggable)
                                                    disableInteractiveElementBlocking={false}
                                                    draggableId="draggableId.content.id-timeline-column-user_name-for-event-1"
                                                    index={0}
                                                    isDragDisabled={false}
                                                    key="id-timeline-column-user_name-for-event-1"
                                                  >
                                                    <Draggable
                                                      dimension={null}
                                                      disableInteractiveElementBlocking={false}
                                                      draggableId="draggableId.content.id-timeline-column-user_name-for-event-1"
                                                      draggingOver={null}
                                                      drop={[Function]}
                                                      dropAnimationFinished={[Function]}
                                                      index={0}
                                                      isDragDisabled={false}
                                                      isDragging={false}
                                                      isDropAnimating={false}
                                                      lift={[Function]}
                                                      move={[Function]}
                                                      moveByWindowScroll={[Function]}
                                                      moveDown={[Function]}
                                                      moveLeft={[Function]}
                                                      moveRight={[Function]}
                                                      moveUp={[Function]}
                                                      offset={
                                                        Object {
                                                          "x": 0,
                                                          "y": 0,
                                                        }
                                                      }
                                                      shouldAnimateDisplacement={true}
                                                      shouldAnimateDragMovement={false}
                                                    >
                                                      <DraggableDimensionPublisher
                                                        draggableId="draggableId.content.id-timeline-column-user_name-for-event-1"
                                                        droppableId="droppableId.content.id-timeline-column-user_name-for-event-1"
                                                        getDraggableRef={[Function]}
                                                        index={0}
                                                        key="draggableId.content.id-timeline-column-user_name-for-event-1"
                                                        type="DEFAULT"
                                                      >
                                                        <Moveable
                                                          destination={
                                                            Object {
                                                              "x": 0,
                                                              "y": 0,
                                                            }
                                                          }
                                                          onMoveEnd={[Function]}
                                                          speed="INSTANT"
                                                        >
                                                          <Motion
                                                            defaultStyle={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                            onRest={[Function]}
                                                            style={
                                                              Object {
                                                                "x": 0,
                                                                "y": 0,
                                                              }
                                                            }
                                                          >
                                                            <DoubleRenderBlocker
                                                              change={
                                                                Object {
                                                                  "x": 0,
                                                                  "y": 0,
                                                                }
                                                              }
                                                            >
                                                              <DragHandle
                                                                callbacks={
                                                                  Object {
                                                                    "onCancel": [Function],
                                                                    "onDrop": [Function],
                                                                    "onLift": [Function],
                                                                    "onMove": [Function],
                                                                    "onMoveDown": [Function],
                                                                    "onMoveLeft": [Function],
                                                                    "onMoveRight": [Function],
                                                                    "onMoveUp": [Function],
                                                                    "onWindowScroll": [Function],
                                                                  }
                                                                }
                                                                canDragInteractiveElements={false}
                                                                draggableId="draggableId.content.id-timeline-column-user_name-for-event-1"
                                                                getDraggableRef={[Function]}
                                                                isDragging={false}
                                                                isDropAnimating={false}
                                                                isEnabled={true}
                                                              >
                                                                <styled.div
                                                                  aria-roledescription="Draggable item. Press space bar to lift"
                                                                  data-react-beautiful-dnd-drag-handle="0"
                                                                  data-react-beautiful-dnd-draggable="0"
                                                                  data-test-subj="providerContainer"
                                                                  draggable={false}
                                                                  innerRef={[Function]}
                                                                  onBlur={[Function]}
                                                                  onDragStart={[Function]}
                                                                  onFocus={[Function]}
                                                                  onKeyDown={[Function]}
                                                                  onMouseDown={[Function]}
                                                                  onTouchStart={[Function]}
                                                                  style={
                                                                    Object {
                                                                      "transform": null,
                                                                      "transition": null,
                                                                      "zIndex": 9000,
                                                                    }
                                                                  }
                                                                  tabIndex={0}
                                                                >
                                                                  <div
                                                                    aria-roledescription="Draggable item. Press space bar to lift"
                                                                    className="sc-kEYyzF ljOknM"
                                                                    data-react-beautiful-dnd-drag-handle="0"
                                                                    data-react-beautiful-dnd-draggable="0"
                                                                    data-test-subj="providerContainer"
                                                                    draggable={false}
                                                                    onBlur={[Function]}
                                                                    onDragStart={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    style={
                                                                      Object {
                                                                        "transform": null,
                                                                        "transition": null,
                                                                        "zIndex": 9000,
                                                                      }
                                                                    }
                                                                    tabIndex={0}
                                                                  >
                                                                    <Styled(EuiText)
                                                                      data-test-subj="draggable-truncatable-content"
                                                                      size="s"
                                                                      width="179px"
                                                                    >
                                                                      <EuiText
                                                                        className="sc-chPdSV fCTqqz"
                                                                        data-test-subj="draggable-truncatable-content"
                                                                        grow={true}
                                                                        size="s"
                                                                        width="179px"
                                                                      >
                                                                        <div
                                                                          className="euiText euiText--small sc-chPdSV fCTqqz"
                                                                          data-test-subj="draggable-truncatable-content"
                                                                          width="179px"
                                                                        >
                                                                          <pure(Component)
                                                                            data={
                                                                              Object {
                                                                                "_id": "1",
                                                                                "destination": Object {
                                                                                  "ip": "192.168.0.3",
                                                                                  "port": 6343,
                                                                                },
                                                                                "event": Object {
                                                                                  "action": "Action",
                                                                                  "category": "Access",
                                                                                  "id": 1,
                                                                                  "module": "nginx",
                                                                                  "severity": 3,
                                                                                },
                                                                                "geo": Object {
                                                                                  "country_iso_code": "xx",
                                                                                  "region_name": "xx",
                                                                                },
                                                                                "host": Object {
                                                                                  "ip": Array [
                                                                                    "192.168.0.1",
                                                                                  ],
                                                                                  "name": "apache",
                                                                                },
                                                                                "source": Object {
                                                                                  "ip": "192.168.0.1",
                                                                                  "port": 80,
                                                                                },
                                                                                "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                "user": Object {
                                                                                  "id": 1,
                                                                                  "name": "john.dee",
                                                                                },
                                                                              }
                                                                            }
                                                                            fieldName="user.name"
                                                                            fieldType="keyword"
                                                                          >
                                                                            <Component
                                                                              data={
                                                                                Object {
                                                                                  "_id": "1",
                                                                                  "destination": Object {
                                                                                    "ip": "192.168.0.3",
                                                                                    "port": 6343,
                                                                                  },
                                                                                  "event": Object {
                                                                                    "action": "Action",
                                                                                    "category": "Access",
                                                                                    "id": 1,
                                                                                    "module": "nginx",
                                                                                    "severity": 3,
                                                                                  },
                                                                                  "geo": Object {
                                                                                    "country_iso_code": "xx",
                                                                                    "region_name": "xx",
                                                                                  },
                                                                                  "host": Object {
                                                                                    "ip": Array [
                                                                                      "192.168.0.1",
                                                                                    ],
                                                                                    "name": "apache",
                                                                                  },
                                                                                  "source": Object {
                                                                                    "ip": "192.168.0.1",
                                                                                    "port": 80,
                                                                                  },
                                                                                  "timestamp": "2018-11-05T19:03:25.937Z",
                                                                                  "user": Object {
                                                                                    "id": 1,
                                                                                    "name": "john.dee",
                                                                                  },
                                                                                }
                                                                              }
                                                                              fieldName="user.name"
                                                                              fieldType="keyword"
                                                                            >
                                                                              john.dee
                                                                            </Component>
                                                                          </pure(Component)>
                                                                        </div>
                                                                      </EuiText>
                                                                    </Styled(EuiText)>
                                                                  </div>
                                                                </styled.div>
                                                              </DragHandle>
                                                            </DoubleRenderBlocker>
                                                          </Motion>
                                                        </Moveable>
                                                      </DraggableDimensionPublisher>
                                                    </Draggable>
                                                  </Connect(Draggable)>
                                                </div>
                                              </DroppableDimensionPublisher>
                                            </Droppable>
                                          </Connect(Droppable)>
                                        </div>
                                      </DraggableWrapperComponent>
                                    </Connect(DraggableWrapperComponent)>
                                  </div>
                                </styled.div>
                              </div>
                            </EuiFlexItem>
                            <styled.div
                              data-test-subj="resize-handle-container"
                              height="100%"
                              innerRef={
                                Object {
                                  "current": <div
                                    class="sc-jTzLTM gbzMiw"
                                    data-test-subj="resize-handle-container"
                                    height="100%"
                                  >
                                    <div
                                      class="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <div
                                        class="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                        data-test-subj="cell-resize-handle"
                                      />
                                    </div>
                                  </div>,
                                }
                              }
                            >
                              <div
                                className="sc-jTzLTM gbzMiw"
                                data-test-subj="resize-handle-container"
                                height="100%"
                              >
                                <Styled(EuiFlexItem)
                                  grow={false}
                                >
                                  <EuiFlexItem
                                    className="sc-jKJlTe fBIDha"
                                    component="div"
                                    grow={false}
                                  >
                                    <div
                                      className="euiFlexItem euiFlexItem--flexGrowZero sc-jKJlTe fBIDha"
                                    >
                                      <Styled(styled.div)
                                        data-test-subj="cell-resize-handle"
                                      >
                                        <styled.div
                                          className="sc-jzJRlG jcYIxx"
                                          data-test-subj="cell-resize-handle"
                                        >
                                          <div
                                            className="sc-jzJRlG jcYIxx sc-fjdhpX eXVyoR"
                                            data-test-subj="cell-resize-handle"
                                          />
                                        </styled.div>
                                      </Styled(styled.div)>
                                    </div>
                                  </EuiFlexItem>
                                </Styled(EuiFlexItem)>
                              </div>
                            </styled.div>
                          </Resizeable>
                        </div>
                      </EuiFlexGroup>
                    </Styled(EuiFlexGroup)>
                  </div>
                </EuiFlexItem>
              </div>
            </EuiFlexGroup>
          </DataDrivenColumns>
        </DragDropContext>
      </ThemeProvider>
    </Provider>
  </Component>
</pure(Component)>
`;
