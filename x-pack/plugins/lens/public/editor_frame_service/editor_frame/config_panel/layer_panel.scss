@import '../../../mixins';

.lnsLayerPanel {
  margin-bottom: $euiSize;

  // disable focus ring for mouse clicks, leave it for keyboard users
  &:focus:not(:focus-visible) {
    animation: none !important; // sass-lint:disable-line no-important
  }
}

.lnsLayerPanel__layerHeader {
  padding: $euiSize;
  border-bottom: $euiBorderThin;
}

// fixes truncation for too long chart switcher labels
.lnsLayerPanel__layerSettingsWrapper {
  min-width: 0;
}

.lnsLayerPanel__settingsStaticHeader {
  padding-left: $euiSizeXS;
}

.lnsLayerPanel__settingsStaticHeaderIcon {
  margin-right: $euiSizeS;
  vertical-align: inherit;
}

.lnsLayerPanel__settingsStaticHeaderTitle {
  display: inline;
}

.lnsLayerPanel__row {
  background: $euiColorLightestShade;
  padding: $euiSize;

  &:last-child {
    border-radius: 0 0 $euiBorderRadius $euiBorderRadius;
  }

  // Add border to the top of the next same panel
  & + & {
    border-top: $euiBorderThin;
    margin-top: 0;
  }

  & > * {
    margin-bottom: 0;
  }

  // Targeting EUI class as we are unable to apply a class to this element in component
  &,
  .euiFormRow__fieldWrapper {
    & > * + * {
      margin-top: $euiSizeS;
    }
  }
}

.lnsLayerPanel__group {
  margin: (-$euiSizeS) (-$euiSize);
  padding: $euiSizeS $euiSize;
}

.lnsLayerPanel__dimensionRemove {
  margin-right: $euiSizeS;
  visibility: hidden;
  opacity: 0;
}

.lnsLayerPanel__dimension {
  @include euiFontSizeS;
  border-radius: $euiBorderRadius;
  display: flex;
  align-items: center;
  overflow: hidden;
  min-height: $euiSizeXL;
  position: relative;

  // NativeRenderer is messing this up
  > div {
    flex-grow: 1;
  }

  &:hover,
  &:focus {
    .lnsLayerPanel__dimensionRemove {
      visibility: visible;
      opacity: 1;
      transition: opacity $euiAnimSpeedFast ease-in-out;
    }
  }
}

.lnsLayerPanel__dimension--empty {
  border: $euiBorderWidthThin dashed $euiBorderColor !important;

  &:focus,
  &:focus-within {
    @include euiFocusRing;
  }
}

.lnsLayerPanel__dimensionContainer {
  position: relative;

  & + & {
    margin-top: $euiSizeS;
  }
}

.lnsLayerPanel__triggerText {
  width: 100%;
  padding: $euiSizeXS $euiSizeS;
  word-break: break-word;
  font-weight: $euiFontWeightRegular;
}

.lnsLayerPanel__dimensionLink {
  &:hover {
    text-decoration: none;
  }
}

.lnsLayerPanel__triggerTextLabel {
  transition: background-color $euiAnimSpeedFast ease-in-out;

  &:hover {
    text-decoration: underline;
  }
}

.domDragDrop-isReplacing {
  .lnsLayerPanel__triggerText {
    text-decoration: line-through;
  }
}

.lnsLayerPanel__triggerTextContent {
  // Make EUI button content not centered
  justify-content: flex-start;
  padding: 0 !important; // sass-lint:disable-line no-important
  color: $euiTextSubduedColor;
}

.lnsLayerPanel__styleEditor {
  padding: $euiSize;
}

.lnsLayerPanel__colorIndicator {
  margin-left: $euiSizeS;
}

.lnsLayerPanel__paletteContainer {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
}

.lnsLayerPanel__palette {
  height: $euiSizeXS / 2;
  border-radius: 0 0 ($euiBorderRadius - 1px) ($euiBorderRadius - 1px);

  &::after {
    border: none;
  }
}

// Added .lnsLayerPanel__dimension specificity required for animation style override
.lnsLayerPanel__dimension .lnsLayerPanel__dimensionLink {
  width: 100%;

  &:focus {
    @include passDownFocusRing('.lnsLayerPanel__triggerTextLabel');
    background-color: transparent;
    text-decoration-thickness: $euiBorderWidthThin !important;
  }
}
