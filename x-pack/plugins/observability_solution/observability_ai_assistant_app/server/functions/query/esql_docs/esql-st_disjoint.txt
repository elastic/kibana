## ST_DISJOINT

ST_DISJOINT is a function in ES|QL that checks whether two geometries or geometry columns are disjoint. In other words, it verifies if the two geometries do not intersect at any point. This function is the inverse of the ST_INTERSECTS function. In mathematical terms, if A and B are two geometries, they are disjoint if their intersection is an empty set (A ⋂ B = ∅).

### Syntax

`ST_DISJOINT(geomA, geomB)`

#### Parameters

- `geomA`: An expression of type geo_point, cartesian_point, geo_shape, or cartesian_shape. If null, the function returns null.
- `geomB`: An expression of type geo_point, cartesian_point, geo_shape, or cartesian_shape. If null, the function returns null. The second parameter must also have the same coordinate system as the first. This means it is not possible to combine geo_* and cartesian_* parameters.

### Examples

Here are a couple of examples of how to use the ST_DISJOINT function in ES|QL queries:

```esql
FROM airport_city_boundaries
| WHERE ST_DISJOINT(city_boundary, TO_GEOSHAPE("POLYGON((-10 -60, 120 -60, 120 60, -10 60, -10 -60))"))
| KEEP abbrev, airport, region, city, city_location
```

In this example, the query checks if the city_boundary is disjoint from the specified polygon. If they are disjoint, the query returns the abbrev, airport, region, city, and city_location fields.

```esql
FROM geo_shapes
| WHERE ST_DISJOINT(shape1, shape2)
```

In this example, the query checks if shape1 and shape2 are disjoint. If they are, the query returns all the fields of the matching documents.