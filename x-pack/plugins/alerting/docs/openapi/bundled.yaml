openapi: 3.0.1
info:
  title: Alerting
  description: OpenAPI schema for alerting endpoints
  version: '0.1'
  contact:
    name: Alerting Team
  license:
    name: Elastic License 2.0
    url: https://www.elastic.co/licensing/elastic-license
servers:
  - url: /
security:
  - basicAuth: []
  - apiKeyAuth: []
tags:
  - name: alerting
    description: Alerting APIs enable you to create and manage rules and alerts.
paths:
  /s/{spaceId}/api/alerting/rule:
    post:
      summary: Creates a rule with a randomly generated rule identifier.
      operationId: createRule
      description: |
        To create a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule you're creating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature. This API supports both key- and token-based authentication. To use key-based authentication, create an API key in Kibana and use it in the header of the API call. To use token-based authentication, provide a username and password; an API key that matches the current privileges of the user is created automatically. In both cases, the API key is subsequently used for authorization when the rule runs.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/space_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_rule_request'
            examples:
              createEsQueryEsqlRuleRequest:
                $ref: '#/components/examples/create_es_query_esql_rule_request'
              createEsQueryRuleRequest:
                $ref: '#/components/examples/create_es_query_rule_request'
              createEsQueryKqlRuleRequest:
                $ref: '#/components/examples/create_es_query_kql_rule_request'
              createIndexThresholdRuleRequest:
                $ref: '#/components/examples/create_index_threshold_rule_request'
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response_properties'
              examples:
                createEsQueryEsqlRuleResponse:
                  $ref: '#/components/examples/create_es_query_esql_rule_response'
                createEsQueryRuleResponse:
                  $ref: '#/components/examples/create_es_query_rule_response'
                createEsQueryKqlRuleResponse:
                  $ref: '#/components/examples/create_es_query_kql_rule_response'
                createIndexThresholdRuleResponse:
                  $ref: '#/components/examples/create_index_threshold_rule_response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
        '404':
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
  /s/{spaceId}/api/alerting/rule/{ruleId}:
    get:
      summary: Retrieves a rule by its identifier.
      operationId: getRule
      description: |
        You must have `read` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rules you're seeking. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To get rules associated with the **Stack Monitoring** feature, use the `monitoring_user` built-in role.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/rule_id'
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response_properties'
              examples:
                getRuleResponse:
                  $ref: '#/components/examples/get_rule_response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
        '404':
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
    delete:
      summary: Deletes a rule.
      operationId: deleteRule
      description: |
        To delete a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule you're deleting. For example, the **Management** > **Stack Rules** feature, **Analytics** > **Discover** or **Machine Learning** features, **Observability**, or **Security** features. WARNING: After you delete a rule, you cannot recover it. If the API key that is used by the rule was created automatically, it is deleted.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/rule_id'
        - $ref: '#/components/parameters/space_id'
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
        '404':
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
    post:
      summary: Creates a rule with a specific rule identifier.
      operationId: createRuleId
      description: |
        To create a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule you're creating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature. This API supports both key- and token-based authentication. To use key-based authentication, create an API key in Kibana and use it in the header of the API call. To use token-based authentication, provide a username and password; an API key that matches the current privileges of the user is created automatically. In both cases, the API key is subsequently used for authorization when the rule runs.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/space_id'
        - in: path
          name: ruleId
          description: |
            An UUID v1 or v4 identifier for the rule. If you omit this parameter, an identifier is randomly generated.
          required: true
          schema:
            type: string
            example: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create_rule_request'
            examples:
              createEsQueryEsqlRuleIdRequest:
                $ref: '#/components/examples/create_es_query_esql_rule_request'
              createEsQueryRuleIdRequest:
                $ref: '#/components/examples/create_es_query_rule_request'
              createEsQueryKqlRuleIdRequest:
                $ref: '#/components/examples/create_es_query_kql_rule_request'
              createIndexThreholdRuleIdRequest:
                $ref: '#/components/examples/create_index_threshold_rule_request'
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response_properties'
              examples:
                createEsQueryEsqlRuleIdResponse:
                  $ref: '#/components/examples/create_es_query_esql_rule_response'
                createEsQueryRuleIdResponse:
                  $ref: '#/components/examples/create_es_query_rule_response'
                createEsQueryKqlRuleIdResponse:
                  $ref: '#/components/examples/create_es_query_kql_rule_response'
                createIndexThresholdRuleIdResponse:
                  $ref: '#/components/examples/create_index_threshold_rule_response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
        '404':
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
    put:
      summary: Updates the attributes for a rule.
      operationId: updateRule
      description: |
        To update a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule you're updating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature. This API supports both key- and token-based authentication. To use key-based authentication, create an API key in Kibana and use it in the header of the API call. To use token-based authentication, provide a username and password; an API key that matches the current privileges of the user is created automatically. In both cases, the API key is subsequently used for authorization when the rule runs. NOTE: If the API key has different privileges than the key that created or most recently updated the rule, the rule behavior might change. Though some properties are optional, when you update the rule the existing property values are overwritten with default values. Therefore, it is recommended to explicitly set all property values.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/rule_id'
        - $ref: '#/components/parameters/space_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_rule_request'
            examples:
              updateRuleRequest:
                $ref: '#/components/examples/update_rule_request'
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rule_response_properties'
              examples:
                updateRuleResponse:
                  $ref: '#/components/examples/update_rule_response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
        '404':
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
  /s/{spaceId}/api/alerting/rule/{ruleId}/_disable:
    post:
      summary: Disables a rule.
      operationId: disableRule
      description: |
        You must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/rule_id'
        - $ref: '#/components/parameters/space_id'
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
        '404':
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
  /s/{spaceId}/api/alerting/rule/{ruleId}/_enable:
    post:
      summary: Enables a rule.
      operationId: enableRule
      description: |
        To enable a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. This API supports both key- and token-based authentication. To use key-based authentication, create an API key in Kibana and use it in the header of the API call. To use token-based authentication, provide a username and password; an API key that matches the current privileges of the user is created automatically. In both cases, the API key is subsequently used for authorization when the rule runs.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/rule_id'
        - $ref: '#/components/parameters/space_id'
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
        '404':
          description: Object is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerting/rules/_find:
    get:
      summary: Retrieves information about rules.
      operationId: findRules
      description: |
        You must have `read` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rules you're seeking. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To find rules associated with the **Stack Monitoring** feature, use the `monitoring_user` built-in role.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/space_id'
        - name: default_search_operator
          in: query
          description: The default operator to use for the simple_query_string.
          schema:
            type: string
            default: OR
          example: OR
        - name: fields
          in: query
          description: The fields to return in the `attributes` key of the response.
          schema:
            type: array
            items:
              type: string
        - name: filter
          in: query
          description: |
            A KQL string that you filter with an attribute from your saved object. It should look like `savedObjectType.attributes.title: "myTitle"`. However, if you used a direct attribute of a saved object, such as `updatedAt`, you must define your filter, for example, `savedObjectType.updatedAt > 2018-12-22`.
          schema:
            type: string
        - name: has_reference
          in: query
          description: Filters the rules that have a relation with the reference objects with a specific type and identifier.
          schema:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
        - name: page
          in: query
          description: The page number to return.
          schema:
            type: integer
            default: 1
          example: 1
        - name: per_page
          in: query
          description: The number of rules to return per page.
          schema:
            type: integer
            default: 20
          example: 20
        - name: search
          in: query
          description: An Elasticsearch simple_query_string query that filters the objects in the response.
          schema:
            type: string
        - name: search_fields
          in: query
          description: The fields to perform the simple_query_string parsed query against.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        - name: sort_field
          in: query
          description: |
            Determines which field is used to sort the results. The field must exist in the `attributes` key of the response.
          schema:
            type: string
        - name: sort_order
          in: query
          description: Determines the sort order.
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          example: asc
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/rule_response_properties'
                  page:
                    type: integer
                  per_page:
                    type: integer
                  total:
                    type: integer
              examples:
                findRulesResponse:
                  $ref: '#/components/examples/find_rules_response'
                findConditionalActionRulesResponse:
                  $ref: '#/components/examples/find_rules_response_conditional_action'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerting/_health:
    get:
      summary: Retrieves the health status of the alerting framework.
      operationId: getAlertingHealth
      description: |
        You must have `read` privileges for the **Management > Stack Rules** feature or for at least one of the **Analytics > Discover**, **Analytics > Machine Learning**, **Observability**, or **Security** features.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  alerting_framework_health:
                    type: object
                    description: |
                      Three substates identify the health of the alerting framework: `decryption_health`, `execution_health`, and `read_health`.
                    properties:
                      decryption_health:
                        type: object
                        description: The timestamp and status of the rule decryption.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: '2023-01-13T01:28:00.280Z'
                      execution_health:
                        type: object
                        description: The timestamp and status of the rule run.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: '2023-01-13T01:28:00.280Z'
                      read_health:
                        type: object
                        description: The timestamp and status of the rule reading events.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: '2023-01-13T01:28:00.280Z'
                  has_permanent_encryption_key:
                    type: boolean
                    description: If `false`, the encrypted saved object plugin does not have a permanent encryption key.
                    example: true
                  is_sufficiently_secure:
                    type: boolean
                    description: If `false`, security is enabled but TLS is not.
                    example: true
              examples:
                getAlertingHealthResponse:
                  $ref: '#/components/examples/get_health_response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerting/rule_types:
    get:
      summary: Retrieves a list of rule types.
      operationId: getRuleTypes
      description: |
        If you have `read` privileges for one or more Kibana features, the API response contains information about the appropriate rule types. For example, there are rule types associated with the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, and **Security** features. To get rule types associated with the **Stack Monitoring** feature, use the `monitoring_user` built-in role.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    action_groups:
                      description: |
                        An explicit list of groups for which the rule type can schedule actions, each with the action group's unique ID and human readable name. Rule actions validation uses this configuration to ensure that groups are valid.
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                    action_variables:
                      description: |
                        A list of action variables that the rule type makes available via context and state in action parameter templates, and a short human readable description. When you create a rule in Kibana, it uses this information to prompt you for these variables in action parameter editors.
                      type: object
                      properties:
                        context:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              description:
                                type: string
                              useWithTripleBracesInTemplates:
                                type: boolean
                        params:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                        state:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                    alerts:
                      type: object
                    authorized_consumers:
                      description: The list of the plugins IDs that have access to the rule type.
                      type: object
                      properties:
                        alerts:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        apm:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        discover:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        infrastructure:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        logs:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        ml:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        monitoring:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        siem:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        slo:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        stackAlerts:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        uptime:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                    category:
                      type: string
                      description: The rule category, which is used by features such as category-specific maintenance windows.
                      enum:
                        - management
                        - observability
                        - securitySolution
                    default_action_group_id:
                      description: The default identifier for the rule type group.
                      type: string
                    does_set_recovery_context:
                      description: Indicates whether the rule passes context variables to its recovery action.
                      type: boolean
                    enabled_in_license:
                      description: Indicates whether the rule type is enabled or disabled based on the subscription.
                      type: boolean
                    has_alerts_mappings:
                      type: boolean
                    has_fields_for_a_a_d:
                      type: boolean
                    id:
                      description: The unique identifier for the rule type.
                      type: string
                    is_exportable:
                      description: Indicates whether the rule type is exportable in **Stack Management > Saved Objects**.
                      type: boolean
                    minimum_license_required:
                      description: The subscriptions required to use the rule type.
                      type: string
                      example: basic
                    name:
                      description: The descriptive name of the rule type.
                      type: string
                    producer:
                      description: An identifier for the application that produces this rule type.
                      type: string
                      example: stackAlerts
                    recovery_action_group:
                      description: An action group to use when an alert goes from an active state to an inactive one.
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                    rule_task_timeout:
                      type: string
                      example: 5m
              examples:
                getRuleTypesResponse:
                  $ref: '#/components/examples/get_rule_types_response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerting/rule/{ruleId}/_mute_all:
    post:
      summary: Mutes all alerts.
      operationId: muteAllAlerts
      description: |
        This API snoozes the notifications for the rule indefinitely. The rule checks continue to occur but alerts will not trigger any actions. You must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/rule_id'
        - $ref: '#/components/parameters/space_id'
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerting/rule/{ruleId}/_unmute_all:
    post:
      summary: Unmutes all alerts.
      operationId: unmuteAllAlerts
      description: |
        If the rule has its notifications snoozed indefinitely, this API cancels the snooze. You must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/rule_id'
        - $ref: '#/components/parameters/space_id'
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerting/rule/{ruleId}/_update_api_key:
    post:
      summary: Updates the API key for a rule.
      operationId: updateRuleAPIKey
      description: The new API key has the credentials of the user that submits the request.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/rule_id'
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: Indicates a successful call.
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400_response'
  /s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_mute:
    post:
      summary: Mutes an alert.
      operationId: muteAlert
      description: |
        You must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/alert_id'
        - $ref: '#/components/parameters/rule_id'
        - $ref: '#/components/parameters/space_id'
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_unmute:
    post:
      summary: Unmutes an alert.
      operationId: unmuteAlert
      description: |
        You must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/alert_id'
        - $ref: '#/components/parameters/rule_id'
        - $ref: '#/components/parameters/space_id'
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerts/alert/{alertId}:
    delete:
      summary: Permanently removes an alert.
      operationId: legaryDeleteAlert
      deprecated: true
      description: |
        Deprecated in 7.13.0. Use the delete rule API instead. WARNING: After you delete an alert, you cannot recover it.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/space_id'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
    get:
      summary: Retrieves an alert by its identifier.
      operationId: legacyGetAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the get rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/space_id'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_response_properties'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
    post:
      summary: Create an alert.
      operationId: legacyCreateAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the create rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - in: path
          name: alertId
          description: An UUID v1 or v4 identifier for the alert. If this parameter is omitted, the identifier is randomly generated.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
        - $ref: '#/components/parameters/space_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy create alert request properties
              type: object
              required:
                - alertTypeId
                - consumer
                - name
                - notifyWhen
                - params
                - schedule
              properties:
                actions:
                  type: array
                  items:
                    type: object
                    required:
                      - actionTypeId
                      - group
                      - id
                      - params
                    properties:
                      actionTypeId:
                        type: string
                        description: The identifier for the action type.
                      group:
                        type: string
                        description: |
                          Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to `default`.
                      id:
                        type: string
                        description: The ID of the action saved object to execute.
                      params:
                        type: object
                        description: |
                          The map to the `params` that the action type will receive. `params` are handled as Mustache templates and passed a default set of context.
                alertTypeId:
                  type: string
                  description: The ID of the alert type that you want to call when the alert is scheduled to run.
                consumer:
                  type: string
                  description: The name of the application that owns the alert. This name has to match the Kibana feature name, as that dictates the required role-based access control privileges.
                enabled:
                  type: boolean
                  description: Indicates if you want to run the alert on an interval basis after it is created.
                name:
                  type: string
                  description: A name to reference and search.
                notifyWhen:
                  type: string
                  description: The condition for throttling the notification.
                  enum:
                    - onActionGroupChange
                    - onActiveAlert
                    - onThrottleInterval
                params:
                  type: object
                  description: The parameters to pass to the alert type executor `params` value. This will also validate against the alert type params validator, if defined.
                schedule:
                  type: object
                  description: |
                    The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
                  properties:
                    interval:
                      type: string
                      description: The interval format specifies the interval in seconds, minutes, hours or days at which the alert should execute.
                      example: 10s
                tags:
                  type: array
                  items:
                    type: string
                  description: A list of keywords to reference and search.
                throttle:
                  type: string
                  description: |
                    How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of `10m` or `1h` will prevent it from sending 90 notifications during this period.
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_response_properties'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
    put:
      summary: Updates the attributes for an alert.
      operationId: legacyUpdateAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the update rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/space_id'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy update alert request properties
              type: object
              required:
                - name
                - notifyWhen
                - params
                - schedule
              properties:
                actions:
                  type: array
                  items:
                    type: object
                    required:
                      - actionTypeId
                      - group
                      - id
                      - params
                    properties:
                      actionTypeId:
                        type: string
                        description: The identifier for the action type.
                      group:
                        type: string
                        description: |
                          Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to `default`.
                      id:
                        type: string
                        description: The ID of the action saved object to execute.
                      params:
                        type: object
                        description: |
                          The map to the `params` that the action type will receive. `params` are handled as Mustache templates and passed a default set of context.
                name:
                  type: string
                  description: A name to reference and search.
                notifyWhen:
                  type: string
                  description: The condition for throttling the notification.
                  enum:
                    - onActionGroupChange
                    - onActiveAlert
                    - onThrottleInterval
                params:
                  type: object
                  description: The parameters to pass to the alert type executor `params` value. This will also validate against the alert type params validator, if defined.
                schedule:
                  type: object
                  description: |
                    The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
                  properties:
                    interval:
                      type: string
                      description: The interval format specifies the interval in seconds, minutes, hours or days at which the alert should execute.
                      example: 1d
                tags:
                  type: array
                  items:
                    type: string
                  description: A list of keywords to reference and search.
                throttle:
                  type: string
                  description: |
                    How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of `10m` or `1h` will prevent it from sending 90 notifications during this period.
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_response_properties'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerts/alert/{alertId}/_disable:
    post:
      summary: Disables an alert.
      operationId: legacyDisableAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the disable rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/space_id'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerts/alert/{alertId}/_enable:
    post:
      summary: Enables an alert.
      operationId: legacyEnableAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the enable rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/space_id'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerts/alert/{alertId}/_mute_all:
    post:
      summary: Mutes all alert instances.
      operationId: legacyMuteAllAlertInstances
      deprecated: true
      description: Deprecated in 7.13.0. Use the mute all alerts API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/space_id'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerts/alert/{alertId}/_unmute_all:
    post:
      summary: Unmutes all alert instances.
      operationId: legacyUnmuteAllAlertInstances
      deprecated: true
      description: Deprecated in 7.13.0. Use the unmute all alerts API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/space_id'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerts/alerts/_find:
    get:
      summary: Retrieves a paginated set of alerts.
      operationId: legacyFindAlerts
      deprecated: true
      description: |
        Deprecated in 7.13.0. Use the find rules API instead. NOTE: Alert `params` are stored as a flattened field type and analyzed as keywords. As alerts change in Kibana, the results on each page of the response also change. Use the find API for traditional paginated results, but avoid using it to export large amounts of data.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/space_id'
        - name: default_search_operator
          in: query
          description: The default operator to use for the `simple_query_string`.
          schema:
            type: string
            default: OR
          example: OR
        - name: fields
          in: query
          description: The fields to return in the `attributes` key of the response.
          schema:
            type: array
            items:
              type: string
        - name: filter
          in: query
          description: |
            A KQL string that you filter with an attribute from your saved object. It should look like `savedObjectType.attributes.title: "myTitle"`. However, if you used a direct attribute of a saved object, such as `updatedAt`, you must define your filter, for example, `savedObjectType.updatedAt > 2018-12-22`.
          schema:
            type: string
        - name: has_reference
          in: query
          description: Filters the rules that have a relation with the reference objects with a specific type and identifier.
          schema:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
        - name: page
          in: query
          description: The page number to return.
          schema:
            type: integer
            default: 1
          example: 1
        - name: per_page
          in: query
          description: The number of alerts to return per page.
          schema:
            type: integer
            default: 20
          example: 20
        - name: search
          in: query
          description: An Elasticsearch `simple_query_string` query that filters the alerts in the response.
          schema:
            type: string
        - name: search_fields
          in: query
          description: The fields to perform the `simple_query_string` parsed query against.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        - name: sort_field
          in: query
          description: |
            Determines which field is used to sort the results. The field must exist in the `attributes` key of the response.
          schema:
            type: string
        - name: sort_order
          in: query
          description: Determines the sort order.
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          example: asc
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/alert_response_properties'
                  page:
                    type: integer
                  perPage:
                    type: integer
                  total:
                    type: integer
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerts/alerts/_health:
    get:
      summary: Retrieves the health status of the alerting framework.
      operationId: legacyGetAlertingHealth
      deprecated: true
      description: Deprecated in 7.13.0. Use the get alerting framework health API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  alertingFrameworkHealth:
                    type: object
                    description: |
                      Three substates identify the health of the alerting framework: `decryptionHealth`, `executionHealth`, and `readHealth`.
                    properties:
                      decryptionHealth:
                        type: object
                        description: The timestamp and status of the alert decryption.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: '2023-01-13T01:28:00.280Z'
                      executionHealth:
                        type: object
                        description: The timestamp and status of the alert execution.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: '2023-01-13T01:28:00.280Z'
                      readHealth:
                        type: object
                        description: The timestamp and status of the alert reading events.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: '2023-01-13T01:28:00.280Z'
                  hasPermanentEncryptionKey:
                    type: boolean
                    description: If `false`, the encrypted saved object plugin does not have a permanent encryption key.
                    example: true
                  isSufficientlySecure:
                    type: boolean
                    description: If `false`, security is enabled but TLS is not.
                    example: true
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerts/alerts/list_alert_types:
    get:
      summary: Retrieves a list of alert types.
      operationId: legacyGetAlertTypes
      deprecated: true
      description: Deprecated in 7.13.0. Use the get rule types API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/space_id'
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    actionGroups:
                      description: |
                        An explicit list of groups for which the alert type can schedule actions, each with the action group's unique ID and human readable name. Alert actions validation uses this configuration to ensure that groups are valid.
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                    actionVariables:
                      description: |
                        A list of action variables that the alert type makes available via context and state in action parameter templates, and a short human readable description. The Alert UI will use this information to prompt users for these variables in action parameter editors.
                      type: object
                      properties:
                        context:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              description:
                                type: string
                        params:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                        state:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                    authorizedConsumers:
                      description: The list of the plugins IDs that have access to the alert type.
                      type: object
                    defaultActionGroupId:
                      description: The default identifier for the alert type group.
                      type: string
                    enabledInLicense:
                      description: Indicates whether the rule type is enabled based on the subscription.
                      type: boolean
                    id:
                      description: The unique identifier for the alert type.
                      type: string
                    isExportable:
                      description: Indicates whether the alert type is exportable in Saved Objects Management UI.
                      type: boolean
                    minimumLicenseRequired:
                      description: The subscriptions required to use the alert type.
                      type: string
                    name:
                      description: The descriptive name of the alert type.
                      type: string
                    producer:
                      description: An identifier for the application that produces this alert type.
                      type: string
                    recoveryActionGroup:
                      description: |
                        An action group to use when an alert instance goes from an active state to an inactive one. If it is not specified, the default recovered action group is used.
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_mute:
    post:
      summary: Mutes an alert instance.
      operationId: legacyMuteAlertInstance
      deprecated: true
      description: Deprecated in 7.13.0. Use the mute alert API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/space_id'
        - in: path
          name: alertId
          description: An identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
        - in: path
          name: alertInstanceId
          description: An identifier for the alert instance.
          required: true
          schema:
            type: string
            example: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_unmute:
    post:
      summary: Unmutes an alert instance.
      operationId: legacyUnmuteAlertInstance
      deprecated: true
      description: Deprecated in 7.13.0. Use the unmute alert API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - $ref: '#/components/parameters/space_id'
        - in: path
          name: alertId
          description: An identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
        - in: path
          name: alertInstanceId
          description: An identifier for the alert instance.
          required: true
          schema:
            type: string
            example: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    apiKeyAuth:
      type: apiKey
      in: header
      name: ApiKey
  parameters:
    kbn_xsrf:
      schema:
        type: string
      in: header
      name: kbn-xsrf
      description: Cross-site request forgery protection
      required: true
    space_id:
      in: path
      name: spaceId
      description: An identifier for the space. If `/s/` and the identifier are omitted from the path, the default space is used.
      required: true
      schema:
        type: string
        example: default
    rule_id:
      in: path
      name: ruleId
      description: An identifier for the rule.
      required: true
      schema:
        type: string
        example: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
    alert_id:
      in: path
      name: alertId
      description: An identifier for the alert. The identifier is generated by the rule and might be any arbitrary string.
      required: true
      schema:
        type: string
        example: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
  schemas:
    filter:
      type: object
      description: A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.
      properties:
        meta:
          type: object
          properties:
            alias:
              type: string
              nullable: true
            controlledBy:
              type: string
            disabled:
              type: boolean
            field:
              type: string
            group:
              type: string
            index:
              type: string
            isMultiIndex:
              type: boolean
            key:
              type: string
            negate:
              type: boolean
            params:
              type: object
            type:
              type: string
            value:
              type: string
        query:
          type: object
        $state:
          type: object
    notify_when:
      type: string
      description: |
        Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
      enum:
        - onActionGroupChange
        - onActiveAlert
        - onThrottleInterval
      example: onActiveAlert
    throttle:
      type: string
      description: |
        The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if `notify_when` is set to `onThrottleInterval`. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
      nullable: true
      default: null
      example: 10m
    actions:
      type: array
      default: []
      nullable: true
      items:
        type: object
        required:
          - group
          - id
          - params
        description: |
          An action that runs under defined conditions.
        properties:
          alerts_filter:
            type: object
            description: |
              Conditions that affect whether the action runs. If you specify multiple conditions, all conditions must be met for the action to run. For example, if an alert occurs within the specified time frame and matches the query, the action runs.
            properties:
              query:
                type: object
                description: Defines a query filter that determines whether the action runs.
                properties:
                  kql:
                    type: string
                    description: A filter written in Kibana Query Language (KQL).
                  filters:
                    type: array
                    items:
                      $ref: '#/components/schemas/filter'
              timeframe:
                type: object
                description: Defines a period that limits whether the action runs.
                properties:
                  days:
                    type: array
                    description: Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.
                    items:
                      type: integer
                    example:
                      - 1
                      - 2
                      - 3
                      - 4
                      - 5
                  hours:
                    type: object
                    description: |
                      Defines the range of time in a day that the action can run. If the `start` value is `00:00` and the `end` value is `24:00`, actions be generated all day.
                    properties:
                      end:
                        type: string
                        description: The end of the time frame in 24-hour notation (`hh:mm`).
                        example: '17:00'
                      start:
                        type: string
                        description: The start of the time frame in 24-hour notation (`hh:mm`).
                        example: '08:00'
                  timezone:
                    type: string
                    description: |
                      The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.
                    example: Europe/Madrid
          connector_type_id:
            type: string
            description: The type of connector. This property appears in responses but cannot be set in requests.
            example: .server-log
            readOnly: true
          frequency:
            type: object
            description: |
              The properties that affect how often actions are generated. If the rule type supports setting `summary` to `true`, the action can be a summary of alerts at the specified notification interval. Otherwise, an action runs for each alert at the specified notification interval. NOTE: You cannot specify these parameters when `notify_when` or `throttle` are defined at the rule level.
            required:
              - notify_when
              - summary
            properties:
              notify_when:
                $ref: '#/components/schemas/notify_when'
              summary:
                type: boolean
                description: Indicates whether the action is a summary.
              throttle:
                $ref: '#/components/schemas/throttle'
          group:
            type: string
            description: |
              The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.
            example: default
          id:
            type: string
            description: The identifier for the connector saved object.
            example: 9dca3e00-74f5-11ed-9801-35303b735aef
          params:
            type: object
            description: The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.
            additionalProperties: true
          uuid:
            type: string
            description: A universally unique identifier (UUID) for the action.
            example: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
    consumer:
      type: string
      description: |
        The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
    enabled_rule:
      type: boolean
      description: Indicates whether you want to run the rule on an interval basis after it is created.
    name_rule:
      type: string
      description: |
        The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
    schedule:
      type: object
      description: The check interval, which specifies how frequently the rule conditions are checked. The interval is specified in seconds, minutes, hours, or days.
      properties:
        interval:
          type: string
          example: 1m
    tags:
      type: array
      description: The tags for the rule.
      items:
        type: string
      default: []
    create_anomaly_detection_alert_rule_request:
      title: Create anomaly detection rule request
      description: |
        A rule that checks if the anomaly detection job results contain anomalies that match the rule conditions. 
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for an anomaly detection rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - xpack.ml.anomaly_detection_alert
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_anomaly_detection_jobs_health_rule_request:
      title: Create anomaly detection jobs health rule request
      description: |
        An rule that monitors job health and alerts if an operational issue occurred that may prevent the job from detecting anomalies.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for an anomaly detection jobs health rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - xpack.ml.anomaly_detection_jobs_health
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    params_property_apm_anomaly:
      required:
        - windowSize
        - windowUnit
        - environment
        - anomalySeverityType
      properties:
        serviceName:
          type: string
          description: The service name from APM
        transactionType:
          type: string
          description: The transaction type from APM
        windowSize:
          type: number
          example: 6
          description: The window size
        windowUnit:
          type: string
          description: The window size unit
          enum:
            - m
            - h
            - d
        environment:
          type: string
          description: The environment from APM
        anomalySeverityType:
          type: string
          description: The anomaly threshold value
          enum:
            - critical
            - major
            - minor
            - warning
    create_apm_anomaly_rule_request:
      title: Create APM anomaly rule rule request
      description: A rule that detects when either the latency, throughput, or failed transaction rate of a service is anomalous.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_apm_anomaly'
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - apm.anomaly
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    params_property_apm_error_count:
      required:
        - windowSize
        - windowUnit
        - threshold
        - environment
      properties:
        serviceName:
          type: string
          description: The service name from APM
        windowSize:
          type: number
          description: The window size
          example: 6
        windowUnit:
          type: string
          description: The window size unit
          enum:
            - m
            - h
            - d
        environment:
          type: string
          description: The environment from APM
        threshold:
          type: number
          description: The error count threshold value
        groupBy:
          type: array
          default:
            - service.name
            - service.environment
          uniqueItems: true
          items:
            type: string
            enum:
              - service.name
              - service.environment
              - transaction.name
              - error.grouping_key
        errorGroupingKey:
          type: string
    create_apm_error_count_rule_request:
      title: Create APM error count rule request
      description: A rule that detects when the number of errors in a service exceeds a defined threshold.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_apm_error_count'
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - apm.error_rate
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    params_property_apm_transaction_duration:
      required:
        - windowSize
        - windowUnit
        - threshold
        - environment
        - aggregationType
      properties:
        serviceName:
          type: string
          description: The service name from APM
        transactionType:
          type: string
          description: The transaction type from APM
        transactionName:
          type: string
          description: The transaction name from APM
        windowSize:
          type: number
          description: The window size
          example: 6
        windowUnit:
          type: string
          description: ç
          enum:
            - m
            - h
            - d
        environment:
          type: string
        threshold:
          type: number
          description: The latency threshold value
        groupBy:
          type: array
          default:
            - service.name
            - service.environment
            - transaction.type
          uniqueItems: true
          items:
            type: string
            enum:
              - service.name
              - service.environment
              - transaction.type
              - transaction.name
        aggregationType:
          type: string
          enum:
            - avg
            - 95th
            - 99th
    create_apm_transaction_duration_rule_request:
      title: Create latency threshold rule request
      description: A rule that detects when the latency of a specific transaction type in a service exceeds a threshold.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_apm_transaction_duration'
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - apm.transaction_duration
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    params_property_apm_transaction_error_rate:
      required:
        - windowSize
        - windowUnit
        - threshold
        - environment
      properties:
        serviceName:
          type: string
          description: The service name from APM
        transactionType:
          type: string
          description: The transaction type from APM
        transactionName:
          type: string
          description: The transaction name from APM
        windowSize:
          type: number
          description: The window size
          example: 6
        windowUnit:
          type: string
          description: The window size unit
          enum:
            - m
            - h
            - d
        environment:
          type: string
          description: The environment from APM
        threshold:
          type: number
          description: The error rate threshold value
        groupBy:
          type: array
          default:
            - service.name
            - service.environment
            - transaction.type
          uniqueItems: true
          items:
            type: string
            enum:
              - service.name
              - service.environment
              - transaction.type
              - transaction.name
    create_apm_transaction_error_rate_rule_request:
      title: Create APM transaction error rate rule request
      description: A rule that sends notifications when the rate of transaction errors in a service exceeds a threshold.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_apm_transaction_error_rate'
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - apm.transaction_error_rate
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    aggfield:
      description: |
        The name of the numeric field that is used in the aggregation. This property is required when `aggType` is `avg`, `max`, `min` or `sum`.
      type: string
    aggtype:
      description: The type of aggregation to perform.
      type: string
      enum:
        - avg
        - count
        - max
        - min
        - sum
      default: count
    excludehitsfrompreviousrun:
      description: |
        Indicates whether to exclude matches from previous runs. If `true`, you can avoid alert duplication by excluding documents that have already been detected by the previous rule run. This option is not available when a grouping field is specified.
      type: boolean
    groupby:
      description: |
        Indicates whether the aggregation is applied over all documents (`all`) or split into groups (`top`) using a grouping field (`termField`). If grouping is used, an alert will be created for each group when it exceeds the threshold; only the top groups (up to `termSize` number of groups) are checked.
      type: string
      enum:
        - all
        - top
      default: all
    termsize:
      description: |
        This property is required when `groupBy` is `top`. It specifies the number of groups to check against the threshold and therefore limits the number of alerts on high cardinality fields.
      type: integer
    timefield:
      description: The field that is used to calculate the time window.
      type: string
    timewindowsize:
      description: |
        The size of the time window (in `timeWindowUnit` units), which determines how far back to search for documents. Generally it should be a value higher than the rule check interval to avoid gaps in detection.
      type: integer
      example: 5
    timewindowunit:
      description: |
        The type of units for the time window: seconds, minutes, hours, or days.
      type: string
      enum:
        - s
        - m
        - h
        - d
      example: m
    size:
      description: |
        The number of documents to pass to the configured actions when the threshold condition is met.
      type: integer
    termfield:
      description: |
        The names of up to four fields that are used for grouping the aggregation. This property is required when `groupBy` is `top`.
      oneOf:
        - type: string
        - type: array
          items:
            type: string
          maxItems: 4
    threshold:
      description: |
        The threshold value that is used with the `thresholdComparator`. If the `thresholdComparator` is `between` or `notBetween`, you must specify the boundary values.
      type: array
      items:
        type: integer
        example: 4000
    thresholdcomparator:
      description: The comparison function for the threshold. For example, "is above", "is above or equals", "is below", "is below or equals", "is between", and "is not between".
      type: string
      enum:
        - '>'
        - '>='
        - <
        - <=
        - between
        - notBetween
      example: '>'
    params_es_query_rule:
      oneOf:
        - type: object
          x-technical-preview: true
          description: |
            The parameters for an Elasticsearch query rule that uses ES|QL to define the query. This functionality is in technical pre view and may be changed or removed in a future release. Elastic will work to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.
          required:
            - esqlQuery
            - searchType
            - size
            - threshold
            - thresholdComparator
            - timeWindowSize
            - timeWindowUnit
          properties:
            aggField:
              $ref: '#/components/schemas/aggfield'
            aggType:
              $ref: '#/components/schemas/aggtype'
            esqlQuery:
              type: object
              required:
                - esql
              properties:
                esql:
                  description: The query definition, which uses Elasticsearch Query Language.
                  type: string
            excludeHitsFromPreviousRun:
              $ref: '#/components/schemas/excludehitsfrompreviousrun'
            groupBy:
              $ref: '#/components/schemas/groupby'
            searchType:
              description: The type of query, in this case a query that uses Elasticsearch Query Language (ES|QL).
              type: string
              enum:
                - esqlQuery
              example: esqlQuery
            size:
              type: integer
              description: |
                When `searchType` is `esqlQuery`, this property is required but it does not affect the rule behavior.
              example: 0
            termSize:
              $ref: '#/components/schemas/termsize'
            threshold:
              type: array
              items:
                type: integer
                minimum: 0
                maximum: 0
              description: |
                The threshold value that is used with the `thresholdComparator`. When `searchType` is `esqlQuery`, this property is required and must be set to zero.
            thresholdComparator:
              type: string
              description: |
                The comparison function for the threshold. When `searchType` is `esqlQuery`, this property is required and must be set to ">". Since the `threshold` value must be `0`, the result is that an alert occurs whenever the query returns results.
              enum:
                - '>'
              example: '>'
            timeField:
              $ref: '#/components/schemas/timefield'
            timeWindowSize:
              $ref: '#/components/schemas/timewindowsize'
            timeWindowUnit:
              $ref: '#/components/schemas/timewindowunit'
        - type: object
          description: The parameters for an Elasticsearch query rule that uses KQL or Lucene to define the query.
          required:
            - searchType
            - size
            - threshold
            - thresholdComparator
            - timeWindowSize
            - timeWindowUnit
          properties:
            aggField:
              $ref: '#/components/schemas/aggfield'
            aggType:
              $ref: '#/components/schemas/aggtype'
            excludeHitsFromPreviousRun:
              $ref: '#/components/schemas/excludehitsfrompreviousrun'
            groupBy:
              $ref: '#/components/schemas/groupby'
            searchConfiguration:
              description: The query definition, which uses KQL or Lucene to fetch the documents from Elasticsearch.
              type: object
              properties:
                filter:
                  type: array
                  items:
                    $ref: '#/components/schemas/filter'
                index:
                  description: The indices to query.
                  oneOf:
                    - type: string
                    - type: array
                      items:
                        type: string
                query:
                  type: object
                  properties:
                    language:
                      type: string
                      example: kuery
                    query:
                      type: string
            searchType:
              description: The type of query, in this case a text-based query that uses KQL or Lucene.
              type: string
              enum:
                - searchSource
              example: searchSource
            size:
              $ref: '#/components/schemas/size'
            termField:
              $ref: '#/components/schemas/termfield'
            termSize:
              $ref: '#/components/schemas/termsize'
            threshold:
              $ref: '#/components/schemas/threshold'
            thresholdComparator:
              $ref: '#/components/schemas/thresholdcomparator'
            timeField:
              $ref: '#/components/schemas/timefield'
            timeWindowSize:
              $ref: '#/components/schemas/timewindowsize'
            timeWindowUnit:
              $ref: '#/components/schemas/timewindowunit'
        - type: object
          description: The parameters for an Elasticsearch query rule that uses Elasticsearch Query DSL to define the query.
          required:
            - esQuery
            - index
            - threshold
            - thresholdComparator
            - timeField
            - timeWindowSize
            - timeWindowUnit
          properties:
            aggField:
              $ref: '#/components/schemas/aggfield'
            aggType:
              $ref: '#/components/schemas/aggtype'
            esQuery:
              description: The query definition, which uses Elasticsearch Query DSL.
              type: string
            excludeHitsFromPreviousRun:
              $ref: '#/components/schemas/excludehitsfrompreviousrun'
            groupBy:
              $ref: '#/components/schemas/groupby'
            index:
              description: The indices to query.
              oneOf:
                - type: array
                  items:
                    type: string
                - type: string
            searchType:
              description: The type of query, in this case a query that uses Elasticsearch Query DSL.
              type: string
              enum:
                - esQuery
              default: esQuery
              example: esQuery
            size:
              $ref: '#/components/schemas/size'
            termField:
              $ref: '#/components/schemas/termfield'
            termSize:
              $ref: '#/components/schemas/termsize'
            threshold:
              $ref: '#/components/schemas/threshold'
            thresholdComparator:
              $ref: '#/components/schemas/thresholdcomparator'
            timeField:
              $ref: '#/components/schemas/timefield'
            timeWindowSize:
              $ref: '#/components/schemas/timewindowsize'
            timeWindowUnit:
              $ref: '#/components/schemas/timewindowunit'
    create_es_query_rule_request:
      title: Create Elasticsearch query rule request
      description: |
        A rule that runs a user-configured query, compares the number of matches to a configured threshold, and schedules actions to run when the threshold condition is met.  
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_es_query_rule'
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - .es-query
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_geo_containment_rule_request:
      title: Create traacking containment rule request
      description: |
        A rule that runs an Elasticsearch query over indices to determine whether any documents are currently contained within any boundaries from the specified boundary index. In the event that an entity is contained within a boundary, an alert may be generated.  
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for an tracking containment rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - .geo-containment
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    params_index_threshold_rule:
      type: object
      description: The parameters for an index threshold rule.
      required:
        - index
        - threshold
        - thresholdComparator
        - timeField
        - timeWindowSize
        - timeWindowUnit
      properties:
        aggField:
          $ref: '#/components/schemas/aggfield'
        aggType:
          $ref: '#/components/schemas/aggtype'
        filterKuery:
          description: A KQL expression thats limits the scope of alerts.
          type: string
        groupBy:
          $ref: '#/components/schemas/groupby'
        index:
          description: The indices to query.
          type: array
          items:
            type: string
        termField:
          $ref: '#/components/schemas/termfield'
        termSize:
          $ref: '#/components/schemas/termsize'
        threshold:
          $ref: '#/components/schemas/threshold'
        thresholdComparator:
          $ref: '#/components/schemas/thresholdcomparator'
        timeField:
          $ref: '#/components/schemas/timefield'
        timeWindowSize:
          $ref: '#/components/schemas/timewindowsize'
        timeWindowUnit:
          $ref: '#/components/schemas/timewindowunit'
    create_index_threshold_rule_request:
      title: Create index threshold rule request
      description: A rule that runs an Elasticsearch query, aggregates field values from documents, compares them to threshold values, and schedules actions to run when the thresholds are met.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_index_threshold_rule'
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - .index-threshold
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    params_property_infra_inventory:
      properties:
        criteria:
          type: array
          items:
            type: object
            properties:
              metric:
                type: string
                enum:
                  - count
                  - cpu
                  - diskLatency
                  - load
                  - memory
                  - memoryTotal
                  - tx
                  - rx
                  - logRate
                  - diskIOReadBytes
                  - diskIOWriteBytes
                  - s3TotalRequests
                  - s3NumberOfObjects
                  - s3BucketSize
                  - s3DownloadBytes
                  - s3UploadBytes
                  - rdsConnections
                  - rdsQueriesExecuted
                  - rdsActiveTransactions
                  - rdsLatency
                  - sqsMessagesVisible
                  - sqsMessagesDelayed
                  - sqsMessagesSent
                  - sqsMessagesEmpty
                  - sqsOldestMessage
                  - custom
              timeSize:
                type: number
              timeUnit:
                type: string
                enum:
                  - s
                  - m
                  - h
                  - d
              sourceId:
                type: string
              threshold:
                type: array
                items:
                  type: number
              comparator:
                type: string
                enum:
                  - <
                  - <=
                  - '>'
                  - '>='
                  - between
                  - outside
              customMetric:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - custom
                  field:
                    type: string
                  aggregation:
                    type: string
                    enum:
                      - avg
                      - max
                      - min
                      - rate
                  id:
                    type: string
                  label:
                    type: string
              warningThreshold:
                type: array
                items:
                  type: number
              warningComparator:
                type: string
                enum:
                  - <
                  - <=
                  - '>'
                  - '>='
                  - between
                  - outside
        filterQuery:
          type: string
        filterQueryText:
          type: string
        nodeType:
          type: string
          enum:
            - host
            - pod
            - container
            - awsEC2
            - awsS3
            - awsSQS
            - awsRDS
        sourceId:
          type: string
        alertOnNoData:
          type: boolean
    create_infra_inventory_rule_request:
      title: Create infra inventory rule request
      description: |
        A rule that sends notifications when a metric has reached or exceeded a value for a specific resource or a group of resources within your infrastructure.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_infra_inventory'
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - metrics.alert.inventory.threshold
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_infra_metric_anomaly_rule_request:
      title: Create infrastructure anomaly rule request
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for an infrastructure anomaly rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - metrics.alert.anomaly
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    params_property_infra_metric_threshold:
      properties:
        criteria:
          type: array
          items:
            oneOf:
              - title: non count criterion
                type: object
                properties:
                  threshold:
                    type: array
                    items:
                      type: number
                  comparator:
                    type: string
                    enum:
                      - <
                      - <=
                      - '>'
                      - '>='
                      - between
                      - outside
                  timeUnit:
                    type: string
                  timeSize:
                    type: number
                  warningThreshold:
                    type: array
                    items:
                      type: number
                  warningComparator:
                    type: string
                    enum:
                      - <
                      - <=
                      - '>'
                      - '>='
                      - between
                      - outside
                  metric:
                    type: string
                  aggType:
                    type: string
                    enum:
                      - avg
                      - max
                      - min
                      - cardinality
                      - rate
                      - count
                      - sum
                      - p95
                      - p99
                      - custom
              - title: count criterion
                type: object
                properties:
                  threshold:
                    type: array
                    items:
                      type: number
                  comparator:
                    type: string
                    enum:
                      - <
                      - <=
                      - '>'
                      - '>='
                      - between
                      - outside
                  timeUnit:
                    type: string
                  timeSize:
                    type: number
                  warningThreshold:
                    type: array
                    items:
                      type: number
                  warningComparator:
                    type: string
                    enum:
                      - <
                      - <=
                      - '>'
                      - '>='
                      - between
                      - outside
                  aggType:
                    type: string
                    enum:
                      - count
              - title: custom criterion
                type: object
                properties:
                  threshold:
                    type: array
                    items:
                      type: number
                  comparator:
                    type: string
                    enum:
                      - <
                      - <=
                      - '>'
                      - '>='
                      - between
                      - outside
                  timeUnit:
                    type: string
                  timeSize:
                    type: number
                  warningThreshold:
                    type: array
                    items:
                      type: number
                  warningComparator:
                    type: string
                    enum:
                      - <
                      - <=
                      - '>'
                      - '>='
                      - between
                      - outside
                  aggType:
                    type: string
                    enum:
                      - custom
                  customMetric:
                    type: array
                    items:
                      oneOf:
                        - type: object
                          properties:
                            name:
                              type: string
                            aggType:
                              type: string
                              enum:
                                - avg
                                - sum
                                - max
                                - min
                                - cardinality
                            field:
                              type: string
                        - type: object
                          properties:
                            name:
                              type: string
                            aggType:
                              type: string
                              enum:
                                - count
                            filter:
                              type: string
                  equation:
                    type: string
                  label:
                    type: string
        groupBy:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
        filterQuery:
          type: string
        sourceId:
          type: string
        alertOnNoData:
          type: boolean
        alertOnGroupDisappear:
          type: boolean
    create_infra_metric_threshold_rule_request:
      title: Create infra metric threshold rule request
      description: |
        A rule that sends notifications when a metric has reached or exceeded a value for a specific time period.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_infra_metric_threshold'
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - metrics.alert.threshold
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_jvm_memory_usage_rule_request:
      title: Create JVM memory usage rule request
      description: A rule that detects when a node reports high memory usage.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a JVM memory usage rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_alert_jvm_memory_usage
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    params_property_log_threshold:
      oneOf:
        - title: Count
          type: object
          required:
            - count
            - timeSize
            - timeUnit
            - logView
          properties:
            criteria:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                    example: my.field
                  comparator:
                    type: string
                    enum:
                      - more than
                      - more than or equals
                      - less than
                      - less than or equals
                      - equals
                      - does not equal
                      - matches
                      - does not match
                      - matches phrase
                      - does not match phrase
                  value:
                    oneOf:
                      - type: number
                        example: 42
                      - type: string
                        example: value
            count:
              type: object
              properties:
                comparator:
                  type: string
                  enum:
                    - more than
                    - more than or equals
                    - less than
                    - less than or equals
                    - equals
                    - does not equal
                    - matches
                    - does not match
                    - matches phrase
                    - does not match phrase
                value:
                  type: number
                  example: 100
            timeSize:
              type: number
              example: 6
            timeUnit:
              type: string
              enum:
                - s
                - m
                - h
                - d
            logView:
              type: object
              properties:
                logViewId:
                  type: string
                type:
                  type: string
                  enum:
                    - log-view-reference
                  example: log-view-reference
            groupBy:
              type: array
              items:
                type: string
        - title: Ratio
          type: object
          required:
            - count
            - timeSize
            - timeUnit
            - logView
          properties:
            criteria:
              type: array
              items:
                minItems: 2
                maxItems: 2
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      example: my.field
                    comparator:
                      type: string
                      enum:
                        - more than
                        - more than or equals
                        - less than
                        - less than or equals
                        - equals
                        - does not equal
                        - matches
                        - does not match
                        - matches phrase
                        - does not match phrase
                    value:
                      oneOf:
                        - type: number
                          example: 42
                        - type: string
                          example: value
            count:
              type: object
              properties:
                comparator:
                  type: string
                  enum:
                    - more than
                    - more than or equals
                    - less than
                    - less than or equals
                    - equals
                    - does not equal
                    - matches
                    - does not match
                    - matches phrase
                    - does not match phrase
                value:
                  type: number
                  example: 100
            timeSize:
              type: number
              example: 6
            timeUnit:
              type: string
              enum:
                - s
                - m
                - h
                - d
            logView:
              type: object
              properties:
                logViewId:
                  type: string
                type:
                  type: string
                  enum:
                    - log-view-reference
                  example: log-view-reference
            groupBy:
              type: array
              items:
                type: string
    create_log_threshold_rule_request:
      title: Create log threshold rule request
      description: A rule that detects when a log aggregation exceeds a threshold.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_log_threshold'
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - logs.alert.document.count
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_ccr_exceptions_rule_request:
      title: Create CCR read exceptions rule request
      description: A rule that detects cross-cluster replication (CCR) read exceptions.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a CCR read exceptions rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_ccr_read_exceptions
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_cluster_health_rule_request:
      title: Create cluster health rule request
      description: A rule that detects when the health of the cluster changes.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a cluster health rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_alert_cluster_health
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_cpu_usage_rule_request:
      title: Create CPU usage rule request
      description: A rule that detects when the CPU load for a node is consistently high.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a CPU usage rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_alert_cpu_usage
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_disk_usage_rule_request:
      title: Create disk usage rule request
      description: A rule that detects when the disk usage for a node is consistently high.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a disk usage rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_alert_disk_usage
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_elasticsearch_version_mismatch_rule_request:
      title: Create Elasticsearch version mismatch rule request
      description: A rule that detects when the cluster has multipe versions of Elasticsearch.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a Elasticsearch version mismatch rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_alert_elasticsearch_version_mismatch
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_license_expiration_rule_request:
      title: Create license expiration rule request
      description: A rule that detects when the cluster license is about to expire.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a license expiration rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_alert_license_expiration
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_kibana_version_mismatch_rule_request:
      title: Create Kibana version mismatch rule request
      description: A rule that detects when the cluster has multiple versions of Kibana.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a Kibana version mismatch rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_alert_kibana_version_mismatch
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_logstash_version_mismatch_rule_request:
      title: Create Logstash version mismatch rule request
      description: A rule that detects when the cluster has multiple versions of Logstash.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a Logstash version mismatch rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_alert_logstash_version_mismatch
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_missing_data_rule_request:
      title: Create missing monitoring data rule request
      description: A rule that detects when monitoring data is missing.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a missing monitoring data rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_alert_missing_monitoring_data
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_nodes_changed_rule_request:
      title: Create nodes changed rule request
      description: A rule that detects when nodes are added, removed, or restarted.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a nodes changed rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_alert_nodes_changed
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_shard_size_rule_request:
      title: Create shard size rule request
      description: A rule that detects when the average shard size is larger than a threshold.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a shard size rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_shard_size
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_thread_pool_search_rejections_rule_request:
      title: Create thread pool search rejections rule request
      description: A rule that detects when the number of rejections in the thread pool exceeds a threshold.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a thread pool search rejections rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_alert_thread_pool_search_rejections
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_monitoring_thread_pool_write_rejections_rule_request:
      title: Create thread pool write rejections rule request
      description: A rule that detects when the number of rejections in the write thread pool exceeds a threshold.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a thread pool write rejections rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - monitoring_alert_thread_pool_write_rejections
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_siem_eql_rule_request:
      title: Create event correlation rule request
      description: |
        A rule that uses Event Query Language (EQL) to match events, generate sequences, and stack data.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for an event correlation rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - siem.eqlRule
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_siem_indicator_rule_request:
      title: Create indicator match rule request
      description: |
        A rule that uses indicators from intelligence sources to detect matching events and alerts.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for an indicator match rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - siem.indicatorRule
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_siem_ml_rule_request:
      title: Create machine learning rule request
      description: |
        A rule that detects when a machine learning job discovers an anomaly above the defined threshold.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a machine learning rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - siem.mlRule
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_siem_new_terms_rule_request:
      title: Create new terms rule request
      description: A rule that finds documents with values that appear for the first time.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a new terms rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - siem.newTermsRule
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_siem_notifications_rule_request:
      title: Create security solution notification (legacy) rule request
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a notification rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - siem.notifications
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_siem_query_rule_request:
      title: Create custom query rule request
      description: |
        A rule that uses KQL or Lucene to detect issues across indices.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a custom query rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - siem.queryRule
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_siem_saved_query_rule_request:
      title: Create saved query rule request
      description: |
        A rule that searches the defined indices and creates an alert when a document matches the saved search.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a saved query rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - siem.savedQueryRule
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_siem_threshold_rule_request:
      title: Create threshold rule request
      description: |
        A rule that aggregates query results to detect when the number of matches exceeds a threshold.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a threshold rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - siem.thresholdRule
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    params_property_slo_burn_rate:
      properties:
        sloId:
          description: The SLO identifier used by the rule
          type: string
          example: 8853df00-ae2e-11ed-90af-09bb6422b258
        burnRateThreshold:
          description: The burn rate threshold used to trigger the alert
          type: number
          example: 14.4
        maxBurnRateThreshold:
          description: The maximum burn rate threshold value defined by the SLO error budget
          type: number
          example: 168
        longWindow:
          description: The duration of the long window used to compute the burn rate
          type: object
          properties:
            value:
              description: The duration value
              type: number
              example: 6
            unit:
              description: The duration unit
              type: string
              example: h
        shortWindow:
          description: The duration of the short window used to compute the burn rate
          type: object
          properties:
            value:
              description: The duration value
              type: number
              example: 30
            unit:
              description: The duration unit
              type: string
              example: m
    create_slo_burn_rate_rule_request:
      title: Create slo burn rate rule request
      description: |
        A rule that detects when the burn rate is above a defined threshold for two different lookback periods. The two periods are a long period and a short period that is 1/12th of the long period. For each lookback period, the burn rate is computed as the error rate divided by the error budget. When the burn rates for both periods surpass the threshold, an alert occurs.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_slo_burn_rate'
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - slo.rules.burnRate
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_synthetics_monitor_status_rule_request:
      title: Create synthetics monitor status rule request
      description: A rule that detects when a monitor is down or an availability threshold is breached.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for the synthetics monitor status rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - xpack.synthetics.alerts.monitorStatus
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_synthetics_uptime_duration_anomaly_rule_request:
      title: Create synthetics uptime duration anomaly rule request
      description: |
        A rule that detects response durations for all of the geographic locations of each monitor. When a monitor runs for an unusual amount of time, at a particular time, an anomaly is recorded.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for the uptime duration anomaly rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - xpack.uptime.alerts.durationAnomaly
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    params_property_synthetics_uptime_tls:
      properties:
        search:
          type: string
        certExpirationThreshold:
          type: number
        certAgeThreshold:
          type: number
    create_synthetics_uptime_tls_rule_request:
      title: Create synthetics uptime TLS rule request
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_synthetics_uptime_tls'
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - xpack.uptime.alerts.tls
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_synthetics_uptime_tls_certificate_rule_request:
      title: Create TLS certificate rule request
      description: |
        A rule that detects when a monitor has a TLS certificate expiring or when it exceeds an age limit.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a TLS certificate rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - xpack.uptime.alerts.tlsCertificate
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_transform_health_rule_request:
      title: Create transform health rule request
      description: |
        A rule that monitors transforms health and alerts if an operational issue occurred.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for a transform health rule.
          additionalProperties: true
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - transform_health
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    params_property_synthetics_monitor_status:
      required:
        - numTimes
        - shouldCheckStatus
        - shouldCheckAvailability
      properties:
        availability:
          type: object
          properties:
            range:
              type: number
            rangeUnit:
              type: string
            threshold:
              type: string
        filters:
          oneOf:
            - type: string
            - type: object
              deprecated: true
              properties:
                monitor.type:
                  type: array
                  items:
                    type: string
                observer.geo.name:
                  type: array
                  items:
                    type: string
                tags:
                  type: array
                  items:
                    type: string
                url.port:
                  type: array
                  items:
                    type: string
        locations:
          deprecated: true
          type: array
          items:
            type: string
        numTimes:
          type: number
        search:
          type: string
        shouldCheckStatus:
          type: boolean
        shouldCheckAvailability:
          type: boolean
        timerangeCount:
          type: number
        timerangeUnit:
          type: string
        timerange:
          deprecated: true
          type: object
          properties:
            from:
              type: string
            to:
              type: string
        version:
          type: number
        isAutoGenerated:
          type: boolean
    create_uptime_monitor_status_rule_request:
      title: Create uptime monitor status rule request
      description: A rule that detects monitor errors and outages.
      type: object
      required:
        - consumer
        - name
        - params
        - rule_type_id
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        consumer:
          $ref: '#/components/schemas/consumer'
        enabled:
          $ref: '#/components/schemas/enabled_rule'
        name:
          $ref: '#/components/schemas/name_rule'
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_synthetics_monitor_status'
        rule_type_id:
          type: string
          description: The ID of the rule type that you want to call when the rule is scheduled to run.
          enum:
            - xpack.uptime.alerts.monitorStatus
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    create_rule_request:
      title: Create rule request body properties
      description: The properties vary depending on the rule type.
      oneOf:
        - $ref: '#/components/schemas/create_anomaly_detection_alert_rule_request'
        - $ref: '#/components/schemas/create_anomaly_detection_jobs_health_rule_request'
        - $ref: '#/components/schemas/create_apm_anomaly_rule_request'
        - $ref: '#/components/schemas/create_apm_error_count_rule_request'
        - $ref: '#/components/schemas/create_apm_transaction_duration_rule_request'
        - $ref: '#/components/schemas/create_apm_transaction_error_rate_rule_request'
        - $ref: '#/components/schemas/create_es_query_rule_request'
        - $ref: '#/components/schemas/create_geo_containment_rule_request'
        - $ref: '#/components/schemas/create_index_threshold_rule_request'
        - $ref: '#/components/schemas/create_infra_inventory_rule_request'
        - $ref: '#/components/schemas/create_infra_metric_anomaly_rule_request'
        - $ref: '#/components/schemas/create_infra_metric_threshold_rule_request'
        - $ref: '#/components/schemas/create_monitoring_jvm_memory_usage_rule_request'
        - $ref: '#/components/schemas/create_log_threshold_rule_request'
        - $ref: '#/components/schemas/create_monitoring_ccr_exceptions_rule_request'
        - $ref: '#/components/schemas/create_monitoring_cluster_health_rule_request'
        - $ref: '#/components/schemas/create_monitoring_cpu_usage_rule_request'
        - $ref: '#/components/schemas/create_monitoring_disk_usage_rule_request'
        - $ref: '#/components/schemas/create_monitoring_elasticsearch_version_mismatch_rule_request'
        - $ref: '#/components/schemas/create_monitoring_license_expiration_rule_request'
        - $ref: '#/components/schemas/create_monitoring_kibana_version_mismatch_rule_request'
        - $ref: '#/components/schemas/create_monitoring_logstash_version_mismatch_rule_request'
        - $ref: '#/components/schemas/create_monitoring_missing_data_rule_request'
        - $ref: '#/components/schemas/create_monitoring_nodes_changed_rule_request'
        - $ref: '#/components/schemas/create_monitoring_shard_size_rule_request'
        - $ref: '#/components/schemas/create_monitoring_thread_pool_search_rejections_rule_request'
        - $ref: '#/components/schemas/create_monitoring_thread_pool_write_rejections_rule_request'
        - $ref: '#/components/schemas/create_siem_eql_rule_request'
        - $ref: '#/components/schemas/create_siem_indicator_rule_request'
        - $ref: '#/components/schemas/create_siem_ml_rule_request'
        - $ref: '#/components/schemas/create_siem_new_terms_rule_request'
        - $ref: '#/components/schemas/create_siem_notifications_rule_request'
        - $ref: '#/components/schemas/create_siem_query_rule_request'
        - $ref: '#/components/schemas/create_siem_saved_query_rule_request'
        - $ref: '#/components/schemas/create_siem_threshold_rule_request'
        - $ref: '#/components/schemas/create_slo_burn_rate_rule_request'
        - $ref: '#/components/schemas/create_synthetics_monitor_status_rule_request'
        - $ref: '#/components/schemas/create_synthetics_uptime_duration_anomaly_rule_request'
        - $ref: '#/components/schemas/create_synthetics_uptime_tls_rule_request'
        - $ref: '#/components/schemas/create_synthetics_uptime_tls_certificate_rule_request'
        - $ref: '#/components/schemas/create_transform_health_rule_request'
        - $ref: '#/components/schemas/create_uptime_monitor_status_rule_request'
      discriminator:
        propertyName: rule_type_id
    rule_response_properties:
      title: Rule response properties
      type: object
      required:
        - actions
        - api_key_owner
        - consumer
        - created_at
        - created_by
        - enabled
        - execution_status
        - id
        - mute_all
        - muted_alert_ids
        - name
        - params
        - rule_type_id
        - schedule
        - tags
        - throttle
        - updated_at
        - updated_by
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        api_key_created_by_user:
          type: boolean
          description: Indicates whether the API key that is associated with the rule was created by the user.
          example: false
        api_key_owner:
          type: string
          description: |
            The owner of the API key that is associated with the rule and used to run background tasks.
          nullable: true
          example: elastic
        consumer:
          type: string
          description: The application or feature that owns the rule. For example, `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          example: alerts
        created_at:
          type: string
          description: The date and time that the rule was created.
          format: date-time
          example: '2022-12-05T23:36:58.284Z'
        created_by:
          type: string
          description: The identifier for the user that created the rule.
          nullable: true
          example: elastic
        enabled:
          type: boolean
          description: Indicates whether the rule is currently enabled.
          example: true
        execution_status:
          type: object
          properties:
            last_duration:
              type: integer
              example: 55
            last_execution_date:
              type: string
              format: date-time
              example: '2022-12-06T00:13:43.890Z'
            status:
              type: string
              example: ok
        id:
          type: string
          description: The identifier for the rule.
          example: b530fed0-74f5-11ed-9801-35303b735aef
        last_run:
          type: object
          properties:
            alerts_count:
              type: object
              properties:
                active:
                  type: integer
                ignored:
                  type: integer
                new:
                  type: integer
                recovered:
                  type: integer
            outcome:
              type: string
              example: succeeded
            outcome_msg:
              type: array
              items:
                type: string
              nullable: true
            outcome_order:
              type: integer
            warning:
              type: string
              nullable: true
              example: null
        muted_alert_ids:
          type: array
          nullable: true
          items:
            type: string
        mute_all:
          type: boolean
          example: false
        name:
          type: string
          description: The name of the rule.
          example: cluster_health_rule
        next_run:
          type: string
          format: date-time
          nullable: true
          example: '2022-12-06T00:14:43.818Z'
        notify_when:
          type: string
          description: Indicates how often alerts generate actions.
          nullable: true
        params:
          type: object
          description: The parameters for the rule.
          additionalProperties: true
        revision:
          type: integer
          description: The rule revision number.
        rule_type_id:
          type: string
          description: |
            The identifier for the type of rule. For example, `.es-query`, `.index-threshold`, `logs.alert.document.count`, `monitoring_alert_cluster_health`, `siem.thresholdRule`, or `xpack.ml.anomaly_detection_alert`.
          example: monitoring_alert_cluster_health
        running:
          type: boolean
          description: Indicates whether the rule is running.
        schedule:
          $ref: '#/components/schemas/schedule'
        scheduled_task_id:
          type: string
          example: b530fed0-74f5-11ed-9801-35303b735aef
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
        updated_at:
          type: string
          description: The date and time that the rule was updated most recently.
          example: '2022-12-05T23:36:58.284Z'
        updated_by:
          type: string
          description: The identifier for the user that updated this rule most recently.
          nullable: true
          example: elastic
    401_response:
      type: object
      title: Unsuccessful rule API response
      properties:
        error:
          type: string
          example: Unauthorized
          enum:
            - Unauthorized
        message:
          type: string
        statusCode:
          type: integer
          example: 401
          enum:
            - 401
    404_response:
      type: object
      properties:
        error:
          type: string
          example: Not Found
          enum:
            - Not Found
        message:
          type: string
          example: Saved object [alert/caaad6d0-920c-11ed-b36a-874bd1548a00] not found
        statusCode:
          type: integer
          example: 404
          enum:
            - 404
    update_rule_request:
      title: Update rule request
      description: |
        The update rule API request body varies depending on the type of rule and actions.
      type: object
      required:
        - name
        - params
        - schedule
      properties:
        actions:
          $ref: '#/components/schemas/actions'
        name:
          type: string
          description: The name of the rule.
          example: cluster_health_rule
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          type: object
          description: The parameters for the rule.
          additionalProperties: true
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          $ref: '#/components/schemas/tags'
        throttle:
          $ref: '#/components/schemas/throttle'
    400_response:
      title: Bad request
      type: object
      required:
        - error
        - message
        - statusCode
      properties:
        error:
          type: string
          enum:
            - Bad Request
        message:
          type: string
        statusCode:
          type: integer
          enum:
            - 400
    alert_response_properties:
      title: Legacy alert response properties
      type: object
      properties:
        actions:
          type: array
          items:
            type: object
        alertTypeId:
          type: string
          example: .index-threshold
        apiKeyOwner:
          type: string
          nullable: true
          example: elastic
        createdAt:
          type: string
          description: The date and time that the alert was created.
          format: date-time
          example: '2022-12-05T23:36:58.284Z'
        createdBy:
          type: string
          description: The identifier for the user that created the alert.
          example: elastic
        enabled:
          type: boolean
          description: Indicates whether the alert is currently enabled.
          example: true
        executionStatus:
          type: object
          properties:
            lastExecutionDate:
              type: string
              format: date-time
              example: '2022-12-06T00:13:43.890Z'
            status:
              type: string
              example: ok
        id:
          type: string
          description: The identifier for the alert.
          example: b530fed0-74f5-11ed-9801-35303b735aef
        muteAll:
          type: boolean
          example: false
        mutedInstanceIds:
          type: array
          nullable: true
          items:
            type: string
        name:
          type: string
          description: The name of the alert.
          example: my alert
        notifyWhen:
          type: string
          example: onActionGroupChange
        params:
          type: object
          additionalProperties: true
        schedule:
          type: object
          properties:
            interval:
              type: string
        scheduledTaskId:
          type: string
          example: b530fed0-74f5-11ed-9801-35303b735aef
        tags:
          type: array
          items:
            type: string
        throttle:
          type: string
          nullable: true
        updatedAt:
          type: string
          example: '2022-12-05T23:36:58.284Z'
        updatedBy:
          type: string
          description: The identifier for the user that updated this alert most recently.
          nullable: true
          example: elastic
  examples:
    create_es_query_esql_rule_request:
      summary: Create an Elasticsearch query rule that uses Elasticsearch Query Language (ES|QL).
      value:
        name: my Elasticsearch query ESQL rule
        params:
          searchType: esqlQuery
          esqlQuery:
            esql: FROM kibana_sample_data_logs | KEEP bytes, clientip, host, geo.dest | where geo.dest != "GB" | STATS sumbytes = sum(bytes) by clientip, host | WHERE sumbytes > 5000 | SORT sumbytes desc | LIMIT 10
          timeField: '@timestamp'
          timeWindowSize: 1
          timeWindowUnit: d
          size: 0
          thresholdComparator: '>'
          threshold:
            - 0
        consumer: stackAlerts
        rule_type_id: .es-query
        schedule:
          interval: 1d
        actions:
          - group: query matched
            id: d0db1fe0-78d6-11ee-9177-f7d404c8c945
            params:
              level: info
              message: |-
                Elasticsearch query rule '{{rule.name}}' is active:
                - Value: {{context.value}} - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}} - Timestamp: {{context.date}} - Link: {{context.link}}
            frequency:
              summary: false
              notify_when: onActiveAlert
    create_es_query_rule_request:
      summary: Create an Elasticsearch query rule that uses Elasticsearch query domain specific language (DSL) to define its query and a server log connector to send notifications.
      value:
        actions:
          - group: query matched
            params:
              level: info
              message: The system has detected {{alerts.new.count}} new, {{alerts.ongoing.count}} ongoing, and {{alerts.recovered.count}} recovered alerts.
            id: fdbece50-406c-11ee-850e-c71febc4ca7f
            frequency:
              throttle: 1d
              summary: true
              notify_when: onThrottleInterval
          - group: recovered
            params:
              level: info
              message: Recovered
            id: fdbece50-406c-11ee-850e-c71febc4ca7f
            frequency:
              summary: false
              notify_when: onActionGroupChange
        consumer: alerts
        name: my Elasticsearch query rule
        params:
          esQuery: '"""{"query":{"match_all" : {}}}"""'
          index:
            - kibana_sample_data_logs
          size: 100
          threshold:
            - 100
          thresholdComparator: '>'
          timeField: '@timestamp'
          timeWindowSize: 1
          timeWindowUnit: d
        rule_type_id: .es-query
        schedule:
          interval: 1d
    create_es_query_kql_rule_request:
      summary: Create an Elasticsearch query rule that uses Kibana query language (KQL).
      value:
        consumer: alerts
        name: my Elasticsearch query KQL rule
        params:
          aggType: count
          excludeHitsFromPreviousRun: true
          groupBy: all
          searchConfiguration:
            query:
              query: '""geo.src : "US" ""'
              language: kuery
            index: 90943e30-9a47-11e8-b64d-95841ca0b247
          searchType: searchSource
          size: 100
          threshold:
            - 1000
          thresholdComparator: '>'
          timeWindowSize: 5
          timeWindowUnit: m
        rule_type_id: .es-query
        schedule:
          interval: 1m
    create_index_threshold_rule_request:
      summary: Create an index threshold rule.
      value:
        actions:
          - id: 48de3460-f401-11ed-9f8e-399c75a2deeb
            frequency:
              notify_when: onActionGroupChange
              summary: false
            group: threshold met
            params:
              level: info
              message: |-
                Rule '{{rule.name}}' is active for group '{{context.group}}':

                - Value: {{context.value}}
                - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}
                - Timestamp: {{context.date}}
        consumer: alerts
        name: my rule
        params:
          aggType: avg
          termSize: 6
          thresholdComparator: '>'
          timeWindowSize: 5
          timeWindowUnit: m
          groupBy: top
          threshold:
            - 1000
          index:
            - .test-index
          timeField: '@timestamp'
          aggField: sheet.version
          termField: name.keyword
        rule_type_id: .index-threshold
        schedule:
          interval: 1m
        tags:
          - cpu
    create_es_query_esql_rule_response:
      summary: The create rule API returns a JSON object that contains details about the rule.
      value:
        id: e0d62360-78e8-11ee-9177-f7d404c8c945
        enabled: true
        name: my Elasticsearch query ESQL rule
        tags: []
        rule_type_id: .es-query
        consumer: stackAlerts
        schedule:
          interval: 1d
        actions:
          - group: query matched
            id: d0db1fe0-78d6-11ee-9177-f7d404c8c945
            params:
              level: info
              message: |-
                Elasticsearch query rule '{{rule.name}}' is active:
                - Value: {{context.value}} - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}} - Timestamp: {{context.date}} - Link: {{context.link}}
            connector_type_id: .server-log
            frequency:
              summary: false
              notify_when: onActiveAlert
              throttle: null
            uuid: bfe370a3-531b-4855-bbe6-ad739f578844
        params:
          searchType: esqlQuery
          esqlQuery:
            esql: FROM kibana_sample_data_logs | keep bytes, clientip, host, geo.dest | WHERE geo.dest != "GB" | stats sumbytes = sum(bytes) by clientip, host | WHERE sumbytes > 5000 | sort sumbytes desc | limit 10
          timeField: '@timestamp'
          timeWindowSize: 1
          timeWindowUnit: d
          size: 0
          thresholdComparator: '>'
          threshold:
            - 0
          excludeHitsFromPreviousRun": true,
          aggType: count
          groupBy: all
        scheduled_task_id: e0d62360-78e8-11ee-9177-f7d404c8c945
        created_by: elastic
        updated_by: elastic",
        created_at: '2023-11-01T19:00:10.453Z'
        updated_at: '2023-11-01T19:00:10.453Z'
        api_key_owner: elastic
        api_key_created_by_user: false
        throttle: null
        mute_all: false
        notify_when: null
        muted_alert_ids: []
        execution_status:
          status: pending
          last_execution_date: '2023-11-01T19:00:10.453Z'
        revision: 0
        running: false
    create_es_query_rule_response:
      summary: The create rule API returns a JSON object that contains details about the rule.
      value:
        id: 58148c70-407f-11ee-850e-c71febc4ca7f
        enabled: true
        name: my Elasticsearch query rule
        tags: []
        rule_type_id: .es-query
        consumer: alerts
        schedule:
          interval: 1d
        actions:
          - group: query matched
            id: fdbece50-406c-11ee-850e-c71febc4ca7f
            params:
              level: info
              message: The system has detected {{alerts.new.count}} new, {{alerts.ongoing.count}} ongoing, and {{alerts.recovered.count}} recovered alerts.
            connector_type_id: .server-log
            frequency:
              summary: true
              notify_when: onThrottleInterval
              throttle: 1d
            uuid: 53f3c2a3-e5d0-4cfa-af3b-6f0881385e78
          - group: recovered
            id: fdbece50-406c-11ee-850e-c71febc4ca7f
            params:
              level: info
              message: Recovered
            connector_type_id: .server-log
            frequency:
              summary: false
              notify_when: onActionGroupChange
              throttle: null
            uuid: 2324e45b-c0df-45c7-9d70-4993e30be758
        params:
          thresholdComparator: '>'
          timeWindowSize: 1
          timeWindowUnit: d
          threshold:
            - 100
          size: 100
          timeField: '@timestamp'
          index:
            - kibana_sample_data_logs
          esQuery: '"""{"query":{"match_all" : {}}}"""'
          excludeHitsFromPreviousRun: true
          aggType: count
          groupBy: all
          searchType: esQuery
        scheduled_task_id: 58148c70-407f-11ee-850e-c71febc4ca7f
        created_by: elastic
        updated_by: elastic
        created_at: '2023-08-22T00:03:38.263Z'
        updated_at: '2023-08-22T00:03:38.263Z'
        api_key_owner: elastic
        api_key_created_by_user: false
        throttle: null
        mute_all: false
        notify_when: null
        muted_alert_ids: []
        execution_status:
          status: pending
          last_execution_date: '2023-08-22T00:03:38.263Z'
        revision: 0
        running: false
    create_es_query_kql_rule_response:
      summary: The create rule API returns a JSON object that contains details about the rule.
      value:
        id: 7bd506d0-2284-11ee-8fad-6101956ced88
        enabled: true
        name: my Elasticsearch query KQL rule"
        tags: []
        rule_type_id: .es-query
        consumer: alerts
        schedule:
          interval: 1m
        actions: []
        params:
          searchConfiguration:
            query:
              query: '""geo.src : "US" ""'
              language: kuery
            index: 90943e30-9a47-11e8-b64d-95841ca0b247
          searchType: searchSource
          timeWindowSize: 5
          timeWindowUnit: m
          threshold:
            - 1000
          thresholdComparator: '>'
          size: 100
          aggType: count
          groupBy: all
          excludeHitsFromPreviousRun: true
        created_by: elastic
        updated_by: elastic
        created_at: '2023-07-14T20:24:50.729Z'
        updated_at: '2023-07-14T20:24:50.729Z'
        api_key_owner: elastic
        api_key_created_by_user: false
        throttle: null
        notify_when: null
        mute_all: false
        muted_alert_ids: []
        scheduled_task_id: 7bd506d0-2284-11ee-8fad-6101956ced88
        execution_status:
          status: pending
          last_execution_date: '2023-07-14T20:24:50.729Z'
        revision: 0
        running: false
    create_index_threshold_rule_response:
      summary: The create rule API returns a JSON object that contains details about the rule.
      value:
        actions:
          - group: threshold met
            id: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
            uuid: 07aef2a0-9eed-4ef9-94ec-39ba58eb609d
            connector_type_id: .server-log
            frequency:
              notify_when: onActionGroupChange
              summary: false
              throttle: null
            params:
              level: info
              message: |-
                Rule {{rule.name}} is active for group {{context.group} :

                - Value: {{context.value}}
                - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}
                - Timestamp: {{context.date}}
        api_key_created_by_user: false
        api_key_owner: elastic
        consumer: alerts
        created_at: '2022-06-08T17:20:31.632Z'
        created_by: elastic
        enabled: true
        execution_status:
          last_execution_date: '2022-06-08T17:20:31.632Z'
          status: pending
        id: 41893910-6bca-11eb-9e0d-85d233e3ee35
        muted_alert_ids: []
        mute_all: false
        name: my rule
        notify_when: null
        params:
          aggType: avg
          termSize: 6
          thresholdComparator: '>'
          timeWindowSize: 5
          timeWindowUnit: m
          groupBy: top
          threshold:
            - 1000
          index:
            - .test-index
          timeField: '@timestamp'
          aggField: sheet.version
          termField: name.keyword
        revision: 0
        rule_type_id: .index-threshold
        running: false
        schedule:
          interval: 1m
        scheduled_task_id: 425b0800-6bca-11eb-9e0d-85d233e3ee35
        tags:
          - cpu
        throttle: null
        updated_at: '2022-06-08T17:20:31.632Z'
        updated_by: elastic
    get_rule_response:
      summary: The get rule API returns a JSON object that contains details about the rule.
      value:
        id: 31697a40-7b36-11ed-aa79-f742c05329b2
        consumer: alerts
        tags:
          - cpu
        name: my alert
        enabled: true
        throttle: null
        schedule:
          interval: 1m
        params:
          aggType: avg
          termSize: 6
          thresholdComparator: '>'
          timeWindowSize: 5
          timeWindowUnit: m
          groupBy: top
          threshold:
            - 1000
          index:
            - test-index
          timeField: '@timestamp'
          aggField: sheet.version
          termField: name.keyword
        revision: 1
        rule_type_id: .index-threshold
        created_by: elastic
        updated_by: elastic
        created_at: '2022-12-13T22:33:41.163Z'
        updated_at: '2022-12-13T22:33:41.163Z'
        api_key_owner: elastic
        notify_when: null
        muted_alert_ids: []
        mute_all: false
        scheduled_task_id: 31697a40-7b36-11ed-aa79-f742c05329b2
        execution_status:
          status: ok
          last_execution_date: '2022-12-13T22:33:44.388Z'
          last_duration: 83
        actions:
          - group: threshold met
            id: 1007a0c0-7a6e-11ed-89d5-abec321c0def
            uuid: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
            params:
              level: info
              message: |-
                Rule {{rule.name}} is active for group {{context.group}}:

                - Value: {{context.value}}
                - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}
                - Timestamp: {{context.date}
              connector_type_id: .server-log
            connector_type_id: .server-log
            frequency:
              throttle: null
              summary: false
              notify_when: onActionGroupChange
        last_run:
          alerts_count:
            new: 0
            ignored: 0
            recovered: 0
            active: 0
          outcome_msg: null
          warning: null
          outcome: succeeded
        next_run: '2022-12-13T22:34:44.314Z'
        api_key_created_by_user: false
    update_rule_request:
      summary: Update an index threshold rule.
      value:
        actions:
          - frequency:
              summary: false
              notify_when: onActionGroupChange
            group: threshold met
            id: 96b668d0-a1b6-11ed-afdf-d39a49596974
            params:
              level: info
              message: |-
                Rule {{rule.name}} is active for group {{context.group}}:

                - Value: {{context.value}}
                - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}
                - Timestamp: {{context.date}}
        params:
          aggField: sheet.version
          aggType: avg
          index:
            - .test-index
          groupBy: top
          termField: name.keyword
          termSize: 6
          threshold:
            - 1000
          thresholdComparator: '>'
          timeField: '@timestamp'
          timeWindowSize: 5
          timeWindowUnit: m
        name: new name
        schedule:
          interval: 1m
        tags: []
        throttle: null
    update_rule_response:
      summary: The update rule API returns a JSON object that contains details about the rule.
      value:
        id: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
        consumer: alerts
        tags: []
        name: new name
        enabled: true
        throttle: null
        revision: 1
        running: false
        schedule:
          interval: 10m
        params:
          index:
            - .updated-index
          timeField: '@timestamp'
          groupBy: top
          aggType: avg
          timeWindowSize: 5
          timeWindowUnit: m
          thresholdComparator: '>'
          threshold:
            - 1000
          aggField: sheet.version
          termField: name.keyword
          termSize: 6
        api_key_owner: elastic
        created_by: elastic
        updated_by: elastic
        rule_type_id: .index-threshold
        scheduled_task_id: 4c5eda00-e74f-11ec-b72f-5b18752ff9ea
        created_at: '2023-01-31T23:03:33.127Z'
        updated_at: '2023-01-31T23:55:27.314Z'
        mute_all: false
        muted_alert_ids: []
        execution_status:
          status: ok
          last_execution_date: '2023-01-31T23:48:42.499Z'
          last_duration: 52
        actions:
          - group: threshold met
            params:
              level: info
              message: |-
                Rule {{rule.name}} is active for group {{context.group}}:

                - Value: {{context.value}}
                - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}
                - Timestamp: {{context.date}
            id: 96b668d0-a1b6-11ed-afdf-d39a49596974
            uuid: 07aef2a0-9eed-4ef9-94ec-39ba58eb609d
            connector_type_id: .server-log
            frequency:
              summary: false
              throttle: null
              notify_when: onActionGroupChange
        last_run:
          alerts_count:
            new: 0
            ignored: 0
            recovered: 0
            active: 0
          outcome_msg: null
          warning: null
          outcome: succeeded
        next_run: '2023-01-31T23:49:42.432Z'
        api_key_created_by_user: false
    find_rules_response:
      summary: Retrieve information about a rule.
      value:
        page: 1
        total: 1
        per_page: 10
        data:
          - id: 3583a470-74f6-11ed-9801-35303b735aef
            consumer: alerts
            tags:
              - cpu
            name: my alert
            enabled: true
            throttle: null
            schedule:
              interval: 1m
            params:
              aggType: avg
              termSize: 6
              thresholdComparator: '>'
              timeWindowSize: 5
              timeWindowUnit: m
              groupBy: top
              threshold:
                - 1000
              index:
                - test-index
              timeField: '@timestamp'
              aggField: sheet.version
              termField: name.keyword
            revision: 1
            rule_type_id: .index-threshold
            created_by: elastic
            updated_by: elastic
            created_at: '2022-12-05T23:40:33.132Z'
            updated_at: '2022-12-05T23:40:33.132Z'
            api_key_owner: elastic
            mute_all: false
            muted_alert_ids: []
            scheduled_task_id: 3583a470-74f6-11ed-9801-35303b735aef
            execution_status:
              status: ok
              last_execution_date: '2022-12-06T01:44:23.983Z'
              last_duration: 48
            actions:
              - id: 9dca3e00-74f5-11ed-9801-35303b735aef
                group: threshold met
                uuid: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
                params:
                  level: info
                  message: |-
                    Rule {{rule.name}} is active for group {{context.group}}:

                    - Value: {{context.value}}
                    - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}
                    - Timestamp: {{context.date}}
                  connector_type_id: .server-log
                frequency:
                  summary: false
                  notify_when: onActionGroupChange
                  throttle: null
            last_run:
              alerts_count:
                new: 0
                ignored: 0
                recovered: 0
                active: 0
              outcome_msg: null
              warning: null
              outcome: succeeded
            next_run: '2022-12-06T01:45:23.912Z'
            api_key_created_by_user: false
    find_rules_response_conditional_action:
      summary: Retrieve information about a rule that has conditional actions.
      value:
        page: 1
        total: 1
        per_page: 10
        data:
          - id: 6107a8f0-f401-11ed-9f8e-399c75a2deeb
            name: security_rule
            consumer: siem
            enabled: true
            tags: []
            throttle: null
            revision: 1
            running: false
            schedule:
              interval: 1m
            params:
              author: []
              description: A security threshold rule.
              ruleId: an_internal_rule_id
              falsePositives: []
              from: now-3660s
              immutable: false
              license: ''
              outputIndex: ''
              meta:
                from: 1h
                kibana_siem_app_url: https://localhost:5601/app/security
              maxSignals: 100
              riskScore: 21
              riskScoreMapping: []
              severity: low
              severityMapping: []
              threat: []
              to: now
              references: []
              version: 1
              exceptionsList: []
              type: threshold
              language: kuery
              index:
                - kibana_sample_data_logs
              query: '*'
              filters: []
              threshold:
                field:
                  - bytes
                value: 1
                cardinality: []
            rule_type_id: siem.thresholdRule
            created_by: elastic
            updated_by: elastic
            created_at: '2023-05-16T15:50:28.358Z'
            updated_at: '2023-05-16T20:25:42.559Z'
            api_key_owner: elastic
            notify_when: null
            mute_all: false
            muted_alert_ids: []
            scheduled_task_id: 6107a8f0-f401-11ed-9f8e-399c75a2deeb
            execution_status:
              status: ok
              last_execution_date: '2023-05-16T20:26:49.590Z'
              last_duration: 166
            actions:
              - group: default
                id: 49eae970-f401-11ed-9f8e-399c75a2deeb
                params:
                  documents:
                    - rule_id:
                        '[object Object]': null
                      rule_name:
                        '[object Object]': null
                      alert_id:
                        '[object Object]': null
                      context_message:
                        '[object Object]': null
                connector_type_id: .index
                frequency:
                  summary: true
                  notify_when: onActiveAlert
                  throttle: null
                uuid: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
                alerts_filter:
                  timeframe:
                    days:
                      - 7
                    timezone: UTC
                    hours:
                      start: '08:00'
                      end: '17:00'
                  query:
                    kql: ''
                    filters:
                      - meta:
                          disabled: false
                          negate: false
                          alias: null
                          index: c4bdca79-e69e-4d80-82a1-e5192c621bea
                          key: client.geo.region_iso_code
                          field: client.geo.region_iso_code
                          params:
                            query: CA-QC
                            type: phrase
                        $state:
                          store: appState
                        query:
                          match_phrase:
                            client.geo.region_iso_code: CA-QC
            last_run:
              alerts_count:
                new: 0
                ignored: 0
                recovered: 0
                active: 0
              outcome_msg:
                - Rule execution completed successfully
              outcome_order: 0
              warning: null
              outcome: succeeded
            next_run: '2023-05-16T20:27:49.507Z'
            api_key_created_by_user: false
    get_health_response:
      summary: Retrieve information about the health of the alerting framework.
      value:
        is_sufficiently_secure: true
        has_permanent_encryption_key: true
        alerting_framework_health:
          decryption_health:
            status: ok
            timestamp: '2023-01-13T01:28:00.280Z'
          execution_health:
            status: ok
            timestamp: '2023-01-13T01:28:00.280Z'
          read_health:
            status: ok
            timestamp: '2023-01-13T01:28:00.280Z'
    get_rule_types_response:
      summary: Retrieve rule types associated with Kibana machine learning features
      value:
        - id: xpack.ml.anomaly_detection_alert
          name: Anomaly detection alert
          category: management
          producer: ml
          alerts:
            context: ml.anomaly-detection
            mappings:
              fieldMap:
                kibana.alert.job_id:
                  type: keyword
                  array: false
                  required: true
                kibana.alert.anomaly_score:
                  type: double
                  array: false
                  required: false
                kibana.alert.is_interim:
                  type: boolean
                  array: false
                  required: false
                kibana.alert.anomaly_timestamp:
                  type: date
                  array: false
                  required: false
                kibana.alert.top_records:
                  type: object
                  array: true
                  required: false
                  dynamic: false
                  properties:
                    job_id:
                      type: keyword
                    record_score:
                      type: double
                    initial_record_score:
                      type: double
                    detector_index:
                      type: integer
                    is_interim:
                      type: boolean
                    timestamp:
                      type: date
                    partition_field_name:
                      type: keyword
                    partition_field_value:
                      type: keyword
                    over_field_name:
                      type: keyword
                    over_field_value:
                      type: keyword
                    by_field_name:
                      type: keyword
                    by_field_value:
                      type: keyword
                    function:
                      type: keyword
                    typical:
                      type: double
                    actual:
                      type: double
                    field_name:
                      type: keyword
                kibana.alert.top_influencers:
                  type: object
                  array: true
                  required: false
                  dynamic: false
                  properties:
                    job_id:
                      type: keyword
                    influencer_field_name:
                      type: keyword
                    influencer_field_value:
                      type: keyword
                    influencer_score:
                      type: double
                    initial_influencer_score:
                      type: double
                    is_interim:
                      type: boolean
                    timestamp:
                      type: date
            shouldWrite: true
          enabled_in_license: true
          recovery_action_group:
            id: recovered
            name: Recovered
          action_groups:
            - id: anomaly_score_match
              name: Anomaly score matched the condition
            - id: recovered
              name: Recovered
          default_action_group_id: anomaly_score_match
          minimum_license_required: platinum
          is_exportable: true
          rule_task_timeout: 5m
          action_variables:
            context:
              - name: timestamp
                description: The bucket timestamp of the anomaly
              - name: timestampIso8601
                description: The bucket time of the anomaly in ISO8601 format
              - name: jobIds
                description: List of job IDs that triggered the alert
              - name: message
                description: Alert info message
              - name: isInterim
                description: Indicate if top hits contain interim results
              - name: score
                description: Anomaly score at the time of the notification action
              - name: topRecords
                description: Top records
              - name: topInfluencers
                description: Top influencers
              - name: anomalyExplorerUrl
                description: URL to open in the Anomaly Explorer
                useWithTripleBracesInTemplates: true
            state: []
            params: []
          authorized_consumers:
            alerts:
              read: true
              all: true
            stackAlerts:
              read: true
              all: true
            slo:
              read: true
              all: true
            ml:
              read: true
              all: true
            uptime:
              read: true
              all: true
            infrastructure:
              read: true
              all: true
            logs:
              read: true
              all: true
            monitoring:
              read: true
              all: true
            siem:
              read: true
              all: true
            apm:
              read: true
              all: true
            discover:
              read: true
              all: true
          does_set_recovery_context: true
          has_alerts_mappings: true
          has_fields_for_a_a_d: false
        - id: xpack.ml.anomaly_detection_jobs_health
          name: Anomaly detection jobs health
          category: management
          producer: ml
          enabled_in_license: true
          recovery_action_group:
            id: recovered
            name: Recovered
          action_groups:
            - id: anomaly_detection_realtime_issue
              name: Issue detected
            - id: recovered
              name: Recovered
          default_action_group_id: anomaly_detection_realtime_issue
          minimum_license_required: platinum
          is_exportable: true
          rule_task_timeout: 5m
          action_variables:
            context:
              - name: results
                description: Results of the rule execution
              - name: message
                description: Alert info message
            state: []
            params: []
          authorized_consumers:
            alerts:
              read: true
              all: true
            stackAlerts:
              read: true
              all: true
            slo:
              read: true
              all: true
            ml:
              read: true
              all: true
            uptime:
              read: true
              all: true
            infrastructure:
              read: true
              all: true
            logs:
              read: true
              all: true
            monitoring:
              read: true
              all: true
            siem:
              read: true
              all: true
            apm:
              read: true
              all: true
            discover:
              read: true
              all: true
          does_set_recovery_context: true
          has_alerts_mappings: false
          has_fields_for_a_a_d: false
