openapi: 3.0.1
info:
  title: Alerting
  description: OpenAPI schema for alerting endpoints
  version: '0.1'
  contact:
    name: Alerting Team
  license:
    name: Elastic License 2.0
    url: https://www.elastic.co/licensing/elastic-license
servers:
  - url: /
paths:
  /api/alerting/_health:
    get:
      summary: Get the alerting framework health
      operationId: getAlertingHealth
      description: |
        You must have `read` privileges for the **Management > Stack Rules** feature or for at least one of the **Analytics > Discover**, **Analytics > Machine Learning**, **Observability**, or **Security** features.
      tags:
        - alerting
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  alerting_framework_health:
                    type: object
                    description: |
                      Three substates identify the health of the alerting framework: `decryption_health`, `execution_health`, and `read_health`.
                    properties:
                      decryption_health:
                        type: object
                        description: The timestamp and status of the rule decryption.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: '2023-01-13T01:28:00.280Z'
                      execution_health:
                        type: object
                        description: The timestamp and status of the rule run.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: '2023-01-13T01:28:00.280Z'
                      read_health:
                        type: object
                        description: The timestamp and status of the rule reading events.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: '2023-01-13T01:28:00.280Z'
                  has_permanent_encryption_key:
                    type: boolean
                    description: If `false`, the encrypted saved object plugin does not have a permanent encryption key.
                    example: true
                  is_sufficiently_secure:
                    type: boolean
                    description: If `false`, security is enabled but TLS is not.
                    example: true
              examples:
                getAlertingHealthResponse:
                  $ref: '#/components/examples/get_health_response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /api/alerting/rule_types:
    get:
      summary: Get the rule types
      operationId: getRuleTypes
      description: |
        If you have `read` privileges for one or more Kibana features, the API response contains information about the appropriate rule types. For example, there are rule types associated with the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, and **Security** features. To get rule types associated with the **Stack Monitoring** feature, use the `monitoring_user` built-in role.
      tags:
        - alerting
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    action_groups:
                      description: |
                        An explicit list of groups for which the rule type can schedule actions, each with the action group's unique ID and human readable name. Rule actions validation uses this configuration to ensure that groups are valid.
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                    action_variables:
                      description: |
                        A list of action variables that the rule type makes available via context and state in action parameter templates, and a short human readable description. When you create a rule in Kibana, it uses this information to prompt you for these variables in action parameter editors.
                      type: object
                      properties:
                        context:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              description:
                                type: string
                              useWithTripleBracesInTemplates:
                                type: boolean
                        params:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                        state:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                    alerts:
                      type: object
                      description: |
                        Details for writing alerts as data documents for this rule type.
                      properties:
                        context:
                          type: string
                          description: |
                            The namespace for this rule type.
                          enum:
                            - ml.anomaly-detection
                            - observability.apm
                            - observability.logs
                            - observability.metrics
                            - observability.slo
                            - observability.threshold
                            - observability.uptime
                            - security
                            - stack
                        dynamic:
                          type: string
                          description: Indicates whether new fields are added dynamically.
                          enum:
                            - 'false'
                            - runtime
                            - strict
                            - 'true'
                        isSpaceAware:
                          type: boolean
                          description: |
                            Indicates whether the alerts are space-aware. If true, space-specific alert indices are used.
                        mappings:
                          type: object
                          properties:
                            fieldMap:
                              type: object
                              description: |
                                Mapping information for each field supported in alerts as data documents for this rule type. For more information about mapping parameters, refer to the Elasticsearch documentation.
                              additionalProperties:
                                $ref: '#/components/schemas/fieldmap_properties'
                        secondaryAlias:
                          type: string
                          description: |
                            A secondary alias. It is typically used to support the signals alias for detection rules.
                        shouldWrite:
                          type: boolean
                          description: |
                            Indicates whether the rule should write out alerts as data.
                        useEcs:
                          type: boolean
                          description: |
                            Indicates whether to include the ECS component template for the alerts.
                        useLegacyAlerts:
                          type: boolean
                          default: false
                          description: |
                            Indicates whether to include the legacy component template for the alerts.
                    authorized_consumers:
                      description: The list of the plugins IDs that have access to the rule type.
                      type: object
                      properties:
                        alerts:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        apm:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        discover:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        infrastructure:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        logs:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        ml:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        monitoring:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        siem:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        slo:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        stackAlerts:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                        uptime:
                          type: object
                          properties:
                            all:
                              type: boolean
                            read:
                              type: boolean
                    category:
                      type: string
                      description: The rule category, which is used by features such as category-specific maintenance windows.
                      enum:
                        - management
                        - observability
                        - securitySolution
                    default_action_group_id:
                      description: The default identifier for the rule type group.
                      type: string
                    does_set_recovery_context:
                      description: Indicates whether the rule passes context variables to its recovery action.
                      type: boolean
                    enabled_in_license:
                      description: Indicates whether the rule type is enabled or disabled based on the subscription.
                      type: boolean
                    has_alerts_mappings:
                      type: boolean
                      description: Indicates whether the rule type has custom mappings for the alert data.
                    has_fields_for_a_a_d:
                      type: boolean
                    id:
                      description: The unique identifier for the rule type.
                      type: string
                    is_exportable:
                      description: Indicates whether the rule type is exportable in **Stack Management > Saved Objects**.
                      type: boolean
                    minimum_license_required:
                      description: The subscriptions required to use the rule type.
                      type: string
                      example: basic
                    name:
                      description: The descriptive name of the rule type.
                      type: string
                    producer:
                      description: An identifier for the application that produces this rule type.
                      type: string
                      example: stackAlerts
                    recovery_action_group:
                      description: An action group to use when an alert goes from an active state to an inactive one.
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                    rule_task_timeout:
                      type: string
                      example: 5m
              examples:
                getRuleTypesResponse:
                  $ref: '#/components/examples/get_rule_types_response'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /api/alerts/alert/{alertId}:
    delete:
      summary: Delete an alert
      operationId: legaryDeleteAlert
      deprecated: true
      description: |
        Deprecated in 7.13.0. Use the delete rule API instead. WARNING: After you delete an alert, you cannot recover it.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
    get:
      summary: Get an alert by identifier
      operationId: legacyGetAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the get rule API instead.
      tags:
        - alerting
      parameters:
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_response_properties'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
    post:
      summary: Create an alert
      operationId: legacyCreateAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the create rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - in: path
          name: alertId
          description: An UUID v1 or v4 identifier for the alert. If this parameter is omitted, the identifier is randomly generated.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy create alert request properties
              type: object
              required:
                - alertTypeId
                - consumer
                - name
                - notifyWhen
                - params
                - schedule
              properties:
                actions:
                  type: array
                  items:
                    type: object
                    required:
                      - actionTypeId
                      - group
                      - id
                      - params
                    properties:
                      actionTypeId:
                        type: string
                        description: The identifier for the action type.
                      group:
                        type: string
                        description: |
                          Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to `default`.
                      id:
                        type: string
                        description: The ID of the action saved object.
                      params:
                        type: object
                        description: |
                          The map to the `params` that the action type will receive. `params` are handled as Mustache templates and passed a default set of context.
                alertTypeId:
                  type: string
                  description: The ID of the alert type that you want to call when the alert is scheduled to run.
                consumer:
                  type: string
                  description: The name of the application that owns the alert. This name has to match the Kibana feature name, as that dictates the required role-based access control privileges.
                enabled:
                  type: boolean
                  description: Indicates if you want to run the alert on an interval basis after it is created.
                name:
                  type: string
                  description: A name to reference and search.
                notifyWhen:
                  type: string
                  description: The condition for throttling the notification.
                  enum:
                    - onActionGroupChange
                    - onActiveAlert
                    - onThrottleInterval
                params:
                  type: object
                  description: The parameters to pass to the alert type executor `params` value. This will also validate against the alert type params validator, if defined.
                schedule:
                  type: object
                  description: |
                    The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
                  properties:
                    interval:
                      type: string
                      description: The interval format specifies the interval in seconds, minutes, hours or days at which the alert should run.
                      example: 10s
                tags:
                  type: array
                  items:
                    type: string
                  description: A list of keywords to reference and search.
                throttle:
                  type: string
                  description: |
                    How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of `10m` or `1h` will prevent it from sending 90 notifications during this period.
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_response_properties'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
    put:
      summary: Update an alert
      operationId: legacyUpdateAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the update rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: Legacy update alert request properties
              type: object
              required:
                - name
                - notifyWhen
                - params
                - schedule
              properties:
                actions:
                  type: array
                  items:
                    type: object
                    required:
                      - actionTypeId
                      - group
                      - id
                      - params
                    properties:
                      actionTypeId:
                        type: string
                        description: The identifier for the action type.
                      group:
                        type: string
                        description: |
                          Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to `default`.
                      id:
                        type: string
                        description: The ID of the action saved object.
                      params:
                        type: object
                        description: |
                          The map to the `params` that the action type will receive. `params` are handled as Mustache templates and passed a default set of context.
                name:
                  type: string
                  description: A name to reference and search.
                notifyWhen:
                  type: string
                  description: The condition for throttling the notification.
                  enum:
                    - onActionGroupChange
                    - onActiveAlert
                    - onThrottleInterval
                params:
                  type: object
                  description: The parameters to pass to the alert type executor `params` value. This will also validate against the alert type params validator, if defined.
                schedule:
                  type: object
                  description: |
                    The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
                  properties:
                    interval:
                      type: string
                      description: The interval format specifies the interval in seconds, minutes, hours or days at which the alert should run.
                      example: 1d
                tags:
                  type: array
                  items:
                    type: string
                  description: A list of keywords to reference and search.
                throttle:
                  type: string
                  description: |
                    How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of `10m` or `1h` will prevent it from sending 90 notifications during this period.
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_response_properties'
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /api/alerts/alert/{alertId}/_disable:
    post:
      summary: Disable an alert
      operationId: legacyDisableAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the disable rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /api/alerts/alert/{alertId}/_enable:
    post:
      summary: Enable an alert
      operationId: legacyEnableAlert
      deprecated: true
      description: Deprecated in 7.13.0. Use the enable rule API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /api/alerts/alert/{alertId}/_mute_all:
    post:
      summary: Mute all alert instances
      operationId: legacyMuteAllAlertInstances
      deprecated: true
      description: Deprecated in 7.13.0. Use the mute all alerts API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /api/alerts/alert/{alertId}/_unmute_all:
    post:
      summary: Unmute all alert instances
      operationId: legacyUnmuteAllAlertInstances
      deprecated: true
      description: Deprecated in 7.13.0. Use the unmute all alerts API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - in: path
          name: alertId
          description: The identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /api/alerts/alerts/_find:
    get:
      summary: Get a paginated set of alerts
      operationId: legacyFindAlerts
      deprecated: true
      description: |
        Deprecated in 7.13.0. Use the find rules API instead. NOTE: Alert `params` are stored as a flattened field type and analyzed as keywords. As alerts change in Kibana, the results on each page of the response also change. Use the find API for traditional paginated results, but avoid using it to export large amounts of data.
      tags:
        - alerting
      parameters:
        - name: default_search_operator
          in: query
          description: The default operator to use for the `simple_query_string`.
          schema:
            type: string
            default: OR
          example: OR
        - name: fields
          in: query
          description: The fields to return in the `attributes` key of the response.
          schema:
            type: array
            items:
              type: string
        - name: filter
          in: query
          description: |
            A KQL string that you filter with an attribute from your saved object. It should look like `savedObjectType.attributes.title: "myTitle"`. However, if you used a direct attribute of a saved object, such as `updatedAt`, you must define your filter, for example, `savedObjectType.updatedAt > 2018-12-22`.
          schema:
            type: string
        - name: has_reference
          in: query
          description: Filters the rules that have a relation with the reference objects with a specific type and identifier.
          schema:
            type: object
            properties:
              id:
                type: string
              type:
                type: string
        - name: page
          in: query
          description: The page number to return.
          schema:
            type: integer
            default: 1
          example: 1
        - name: per_page
          in: query
          description: The number of alerts to return per page.
          schema:
            type: integer
            default: 20
          example: 20
        - name: search
          in: query
          description: An Elasticsearch `simple_query_string` query that filters the alerts in the response.
          schema:
            type: string
        - name: search_fields
          in: query
          description: The fields to perform the `simple_query_string` parsed query against.
          schema:
            oneOf:
              - type: string
              - type: array
                items:
                  type: string
        - name: sort_field
          in: query
          description: |
            Determines which field is used to sort the results. The field must exist in the `attributes` key of the response.
          schema:
            type: string
        - name: sort_order
          in: query
          description: Determines the sort order.
          schema:
            type: string
            enum:
              - asc
              - desc
            default: desc
          example: asc
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/alert_response_properties'
                  page:
                    type: integer
                  perPage:
                    type: integer
                  total:
                    type: integer
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /api/alerts/alerts/_health:
    get:
      summary: Get the alerting framework health
      operationId: legacyGetAlertingHealth
      deprecated: true
      description: Deprecated in 7.13.0. Use the get alerting framework health API instead.
      tags:
        - alerting
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                properties:
                  alertingFrameworkHealth:
                    type: object
                    description: |
                      Three substates identify the health of the alerting framework: `decryptionHealth`, `executionHealth`, and `readHealth`.
                    properties:
                      decryptionHealth:
                        type: object
                        description: The timestamp and status of the alert decryption.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: '2023-01-13T01:28:00.280Z'
                      executionHealth:
                        type: object
                        description: The timestamp and status of the alert execution.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: '2023-01-13T01:28:00.280Z'
                      readHealth:
                        type: object
                        description: The timestamp and status of the alert reading events.
                        properties:
                          status:
                            type: string
                            example: ok
                            enum:
                              - error
                              - ok
                              - warn
                          timestamp:
                            type: string
                            format: date-time
                            example: '2023-01-13T01:28:00.280Z'
                  hasPermanentEncryptionKey:
                    type: boolean
                    description: If `false`, the encrypted saved object plugin does not have a permanent encryption key.
                    example: true
                  isSufficientlySecure:
                    type: boolean
                    description: If `false`, security is enabled but TLS is not.
                    example: true
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /api/alerts/alerts/list_alert_types:
    get:
      summary: Get the alert types
      operationId: legacyGetAlertTypes
      deprecated: true
      description: Deprecated in 7.13.0. Use the get rule types API instead.
      tags:
        - alerting
      responses:
        '200':
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    actionGroups:
                      description: |
                        An explicit list of groups for which the alert type can schedule actions, each with the action group's unique ID and human readable name. Alert actions validation uses this configuration to ensure that groups are valid.
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                    actionVariables:
                      description: |
                        A list of action variables that the alert type makes available via context and state in action parameter templates, and a short human readable description. The Alert UI will use this information to prompt users for these variables in action parameter editors.
                      type: object
                      properties:
                        context:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              description:
                                type: string
                        params:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                        state:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                              name:
                                type: string
                    authorizedConsumers:
                      description: The list of the plugins IDs that have access to the alert type.
                      type: object
                    defaultActionGroupId:
                      description: The default identifier for the alert type group.
                      type: string
                    enabledInLicense:
                      description: Indicates whether the rule type is enabled based on the subscription.
                      type: boolean
                    id:
                      description: The unique identifier for the alert type.
                      type: string
                    isExportable:
                      description: Indicates whether the alert type is exportable in Saved Objects Management UI.
                      type: boolean
                    minimumLicenseRequired:
                      description: The subscriptions required to use the alert type.
                      type: string
                    name:
                      description: The descriptive name of the alert type.
                      type: string
                    producer:
                      description: An identifier for the application that produces this alert type.
                      type: string
                    recoveryActionGroup:
                      description: |
                        An action group to use when an alert instance goes from an active state to an inactive one. If it is not specified, the default recovered action group is used.
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_mute:
    post:
      summary: Mute an alert instance
      operationId: legacyMuteAlertInstance
      deprecated: true
      description: Deprecated in 7.13.0. Use the mute alert API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - in: path
          name: alertId
          description: An identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
        - in: path
          name: alertInstanceId
          description: An identifier for the alert instance.
          required: true
          schema:
            type: string
            example: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
  /api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_unmute:
    post:
      summary: Unmute an alert instance
      operationId: legacyUnmuteAlertInstance
      deprecated: true
      description: Deprecated in 7.13.0. Use the unmute alert API instead.
      tags:
        - alerting
      parameters:
        - $ref: '#/components/parameters/kbn_xsrf'
        - in: path
          name: alertId
          description: An identifier for the alert.
          required: true
          schema:
            type: string
            example: 41893910-6bca-11eb-9e0d-85d233e3ee35
        - in: path
          name: alertInstanceId
          description: An identifier for the alert instance.
          required: true
          schema:
            type: string
            example: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
      responses:
        '204':
          description: Indicates a successful call.
        '401':
          description: Authorization information is missing or invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
components:
  examples:
    get_health_response:
      summary: Retrieve information about the health of the alerting framework.
      value:
        is_sufficiently_secure: true
        has_permanent_encryption_key: true
        alerting_framework_health:
          decryption_health:
            status: ok
            timestamp: '2023-01-13T01:28:00.280Z'
          execution_health:
            status: ok
            timestamp: '2023-01-13T01:28:00.280Z'
          read_health:
            status: ok
            timestamp: '2023-01-13T01:28:00.280Z'
    get_rule_types_response:
      summary: Retrieve rule types associated with Kibana machine learning features
      value:
        - id: xpack.ml.anomaly_detection_alert
          name: Anomaly detection alert
          category: management
          producer: ml
          alerts:
            context: ml.anomaly-detection
            mappings:
              fieldMap:
                kibana.alert.job_id:
                  type: keyword
                  array: false
                  required: true
                kibana.alert.anomaly_score:
                  type: double
                  array: false
                  required: false
                kibana.alert.is_interim:
                  type: boolean
                  array: false
                  required: false
                kibana.alert.anomaly_timestamp:
                  type: date
                  array: false
                  required: false
                kibana.alert.top_records:
                  type: object
                  array: true
                  required: false
                  dynamic: false
                  properties:
                    job_id:
                      type: keyword
                    record_score:
                      type: double
                    initial_record_score:
                      type: double
                    detector_index:
                      type: integer
                    is_interim:
                      type: boolean
                    timestamp:
                      type: date
                    partition_field_name:
                      type: keyword
                    partition_field_value:
                      type: keyword
                    over_field_name:
                      type: keyword
                    over_field_value:
                      type: keyword
                    by_field_name:
                      type: keyword
                    by_field_value:
                      type: keyword
                    function:
                      type: keyword
                    typical:
                      type: double
                    actual:
                      type: double
                    field_name:
                      type: keyword
                kibana.alert.top_influencers:
                  type: object
                  array: true
                  required: false
                  dynamic: false
                  properties:
                    job_id:
                      type: keyword
                    influencer_field_name:
                      type: keyword
                    influencer_field_value:
                      type: keyword
                    influencer_score:
                      type: double
                    initial_influencer_score:
                      type: double
                    is_interim:
                      type: boolean
                    timestamp:
                      type: date
            shouldWrite: true
          enabled_in_license: true
          recovery_action_group:
            id: recovered
            name: Recovered
          action_groups:
            - id: anomaly_score_match
              name: Anomaly score matched the condition
            - id: recovered
              name: Recovered
          default_action_group_id: anomaly_score_match
          minimum_license_required: platinum
          is_exportable: true
          rule_task_timeout: 5m
          action_variables:
            context:
              - name: timestamp
                description: The bucket timestamp of the anomaly
              - name: timestampIso8601
                description: The bucket time of the anomaly in ISO8601 format
              - name: jobIds
                description: List of job IDs that triggered the alert
              - name: message
                description: Alert info message
              - name: isInterim
                description: Indicate if top hits contain interim results
              - name: score
                description: Anomaly score at the time of the notification action
              - name: topRecords
                description: Top records
              - name: topInfluencers
                description: Top influencers
              - name: anomalyExplorerUrl
                description: URL to open in the Anomaly Explorer
                useWithTripleBracesInTemplates: true
            state: []
            params: []
          authorized_consumers:
            alerts:
              read: true
              all: true
            stackAlerts:
              read: true
              all: true
            slo:
              read: true
              all: true
            ml:
              read: true
              all: true
            uptime:
              read: true
              all: true
            infrastructure:
              read: true
              all: true
            logs:
              read: true
              all: true
            monitoring:
              read: true
              all: true
            siem:
              read: true
              all: true
            apm:
              read: true
              all: true
            discover:
              read: true
              all: true
          does_set_recovery_context: true
          has_alerts_mappings: true
          has_fields_for_a_a_d: false
        - id: xpack.ml.anomaly_detection_jobs_health
          name: Anomaly detection jobs health
          category: management
          producer: ml
          enabled_in_license: true
          recovery_action_group:
            id: recovered
            name: Recovered
          action_groups:
            - id: anomaly_detection_realtime_issue
              name: Issue detected
            - id: recovered
              name: Recovered
          default_action_group_id: anomaly_detection_realtime_issue
          minimum_license_required: platinum
          is_exportable: true
          rule_task_timeout: 5m
          action_variables:
            context:
              - name: results
                description: Results of the rule execution
              - name: message
                description: Alert info message
            state: []
            params: []
          authorized_consumers:
            alerts:
              read: true
              all: true
            stackAlerts:
              read: true
              all: true
            slo:
              read: true
              all: true
            ml:
              read: true
              all: true
            uptime:
              read: true
              all: true
            infrastructure:
              read: true
              all: true
            logs:
              read: true
              all: true
            monitoring:
              read: true
              all: true
            siem:
              read: true
              all: true
            apm:
              read: true
              all: true
            discover:
              read: true
              all: true
          does_set_recovery_context: true
          has_alerts_mappings: false
          has_fields_for_a_a_d: false
  schemas:
    401_response:
      type: object
      title: Unsuccessful rule API response
      properties:
        error:
          type: string
          example: Unauthorized
          enum:
            - Unauthorized
        message:
          type: string
        statusCode:
          type: integer
          example: 401
          enum:
            - 401
    fieldmap_properties:
      title: Field map objects in the get rule types response
      type: object
      properties:
        array:
          type: boolean
          description: Indicates whether the field is an array.
        dynamic:
          type: boolean
          description: Indicates whether it is a dynamic field mapping.
        format:
          type: string
          description: |
            Indicates the format of the field. For example, if the `type` is `date_range`, the `format` can be `epoch_millis||strict_date_optional_time`.
        ignore_above:
          type: integer
          description: Specifies the maximum length of a string field. Longer strings are not indexed or stored.
        index:
          type: boolean
          description: Indicates whether field values are indexed.
        path:
          type: string
          description: TBD
        properties:
          type: object
          description: |
            Details about the object properties. This property is applicable when `type` is `object`.
          additionalProperties:
            type: object
            properties:
              type:
                type: string
                description: The data type for each object property.
        required:
          type: boolean
          description: Indicates whether the field is required.
        scaling_factor:
          type: integer
          description: |
            The scaling factor to use when encoding values. This property is applicable when `type` is `scaled_float`. Values will be multiplied by this factor at index time and rounded to the closest long value. 
        type:
          type: string
          description: Specifies the data type for the field.
          example: scaled_float
    alert_response_properties:
      title: Legacy alert response properties
      type: object
      properties:
        actions:
          type: array
          items:
            type: object
        alertTypeId:
          type: string
          example: .index-threshold
        apiKeyOwner:
          type: string
          nullable: true
          example: elastic
        createdAt:
          type: string
          description: The date and time that the alert was created.
          format: date-time
          example: '2022-12-05T23:36:58.284Z'
        createdBy:
          type: string
          description: The identifier for the user that created the alert.
          example: elastic
        enabled:
          type: boolean
          description: Indicates whether the alert is currently enabled.
          example: true
        executionStatus:
          type: object
          properties:
            lastExecutionDate:
              type: string
              format: date-time
              example: '2022-12-06T00:13:43.890Z'
            status:
              type: string
              example: ok
        id:
          type: string
          description: The identifier for the alert.
          example: b530fed0-74f5-11ed-9801-35303b735aef
        muteAll:
          type: boolean
          example: false
        mutedInstanceIds:
          type: array
          nullable: true
          items:
            type: string
        name:
          type: string
          description: The name of the alert.
          example: my alert
        notifyWhen:
          type: string
          example: onActionGroupChange
        params:
          type: object
          additionalProperties: true
        schedule:
          type: object
          properties:
            interval:
              type: string
        scheduledTaskId:
          type: string
          example: b530fed0-74f5-11ed-9801-35303b735aef
        tags:
          type: array
          items:
            type: string
        throttle:
          type: string
          nullable: true
        updatedAt:
          type: string
          example: '2022-12-05T23:36:58.284Z'
        updatedBy:
          type: string
          description: The identifier for the user that updated this alert most recently.
          nullable: true
          example: elastic
  parameters:
    kbn_xsrf:
      schema:
        type: string
      in: header
      name: kbn-xsrf
      description: Cross-site request forgery protection
      required: true
