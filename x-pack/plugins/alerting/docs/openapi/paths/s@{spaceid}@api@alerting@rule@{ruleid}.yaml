get:
  summary: Retrieves a rule by its identifier.
  operationId: getRule
  description: >
    You must have `read` privileges for the appropriate Kibana features,
    depending on the `consumer` and `rule_type_id` of the rules you're seeking.
    For example, the **Management > Stack Rules** feature,
    **Analytics > Discover** and **Machine Learning** features, **Observability**
    features, or **Security** features. To get rules associated with the
    **Stack Monitoring** feature, use the `monitoring_user` built-in role.
  tags:
    - alerting
  parameters:
    - $ref: '../components/parameters/rule_id.yaml'
    - $ref: '../components/parameters/space_id.yaml'
  responses:
    '200':
      description: Indicates a successful call.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/rule_response_properties.yaml' 
          examples:
            getRuleResponse:
              $ref: '../components/examples/get_rule_response.yaml'
    '401':
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/401_response.yaml'
    '404':
      description: Object is not found.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/404_response.yaml'
  servers:
    - url: https://localhost:5601

delete:
  summary: Deletes a rule.
  operationId: deleteRule
  description: >
    You must have `all` privileges for the appropriate Kibana features, depending
    on the `consumer` and `rule_type_id` of the rule you're deleting. For example,
    the **Management** > **Stack Rules** feature, **Analytics** > **Discover** or
    **Machine Learning** features, **Observability**, or **Security** features.
    WARNING: After you delete a rule, you cannot recover it.
  tags:
    - alerting
  parameters:
    - $ref: ../components/headers/kbn_xsrf.yaml
    - $ref: '../components/parameters/rule_id.yaml'
    - $ref: '../components/parameters/space_id.yaml'
  responses:
    '204':
      description: Indicates a successful call.
    '401':
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/401_response.yaml'
    '404':
      description: Object is not found.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/404_response.yaml'
  servers:
    - url: https://localhost:5601

post:
  summary: Creates a rule.
  operationId: createRule
  description: >
    You must have `all` privileges for the appropriate Kibana features,
    depending on the `consumer` and `rule_type_id` of the rule you're creating.
    For example, you must have privileges for the **Management > Stack rules**
    feature, **Analytics > Discover** and **Machine Learning** features,
    **Observability** features, or **Security** features.  If the rule has
    actions, you must also have `read` privileges for the
    **Management > Actions and Connectors** feature. NOTE: This API supports
    only token-based authentication. When you create a rule, it identifies which
    roles you have at that point in time. Thereafter, when the rule performs
    queries, it uses those security privileges. If a user with different
    privileges updates the rule, its behavior might change.
  tags:
    - alerting
  parameters:
    - $ref: ../components/headers/kbn_xsrf.yaml
    - $ref: '../components/parameters/space_id.yaml'
    - in: path
      name: ruleId
      description: >
        An UUID v1 or v4 identifier for the rule. If you omit this parameter,
        an identifier is randomly generated.
      required: true
      schema:
        type: string
        example: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../components/schemas/create_rule_request.yaml' 
        examples:
          createCaseRequest:
            $ref: '../components/examples/create_rule_request.yaml'
  responses:
    '200':
      description: Indicates a successful call.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/rule_response_properties.yaml' 
          examples:
            createRuleResponse:
              $ref: '../components/examples/create_rule_response.yaml'
    '401':
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/401_response.yaml'
    '404':
      description: Object is not found.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/404_response.yaml'
  servers:
    - url: https://localhost:5601

put:
  summary: Updates the attributes for a rule.
  operationId: updateRule
  description: >
    You must have `all` privileges for the appropriate Kibana features,
    depending on the `consumer` and `rule_type_id` of the rule you're updating.
    For example, you must have privileges for the **Management > Stack rules**
    feature, **Analytics > Discover** and **Machine Learning** features,
    **Observability** features, or **Security** features.  If the rule has
    actions, you must also have `read` privileges for the
    **Management > Actions and Connectors** feature. NOTE: This API supports
    only token-based authentication. When you update a rule, it identifies which
    roles you have at that point in time. Thereafter, when the rule performs
    queries, it uses those security privileges. If you have different privileges
    than the user that created or most recently updated the rule, you might
    change its behavior. Though some properties are optional, when you update
    the rule the existing property values are overwritten with default values.
    Therefore, it is recommended to explicitly set all property values.
  tags:
    - alerting
  parameters:
    - $ref: ../components/headers/kbn_xsrf.yaml
    - $ref: '../components/parameters/rule_id.yaml'
    - $ref: '../components/parameters/space_id.yaml'
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../components/schemas/update_rule_request.yaml' 
        examples:
          updateCaseRequest:
            $ref: '../components/examples/update_rule_request.yaml'
  responses:
    '200':
      description: Indicates a successful call.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/rule_response_properties.yaml' 
          examples:
            updateRuleResponse:
              $ref: '../components/examples/update_rule_response.yaml'
    '401':
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/401_response.yaml'
    '404':
      description: Object is not found.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/404_response.yaml'
  servers:
    - url: https://localhost:5601
servers:
  - url: https://localhost:5601