get:
  summary: Retrieves a paginated set of alerts.
  operationId: legacyFindAlerts
  deprecated: true
  description: >
    Deprecated in 7.13.0. Use the find rules API instead.
    NOTE: Alert `params` are stored as a flattened field type and analyzed as keywords.
    As alerts change in Kibana, the results on each page of the response also change.
    Use the find API for traditional paginated results, but avoid using it to export large amounts of data.
  tags:
    - alerting
  parameters:
    - $ref: '../components/parameters/space_id.yaml'
    - name: default_search_operator
      in: query
      description: The default operator to use for the `simple_query_string`.
      schema:
        type: string
        default: OR
      example: OR
    - name: fields
      in: query
      description: The fields to return in the `attributes` key of the response.
      schema:
        type: array
        items:
          type: string
    - name: filter
      in: query
      description: >
        A KQL string that you filter with an attribute from your saved object.
        It should look like `savedObjectType.attributes.title: "myTitle"`.
        However, if you used a direct attribute of a saved object, such as
        `updatedAt`, you must define your filter, for example,
        `savedObjectType.updatedAt > 2018-12-22`.
      schema:
        type: string
    - name: has_reference
      in: query
      description: Filters the rules that have a relation with the reference objects with a specific type and identifier.
      schema:
        type: object
        properties:
          id:
            type: string
          type:
            type: string
    - name: page
      in: query
      description: The page number to return.
      schema:
        type: integer
        default: 1
      example: 1
    - name: per_page
      in: query
      description: The number of alerts to return per page.
      schema:
        type: integer
        default: 20
      example: 20
    - name: search
      in: query
      description: An Elasticsearch `simple_query_string` query that filters the alerts in the response.
      schema:
        type: string
    - name: search_fields
      in: query
      description: The fields to perform the `simple_query_string` parsed query against.
      schema:
        oneOf:
          - type: string
          - type: array
            items:
              type: string
    - name: sort_field
      in: query
      description: >
        Determines which field is used to sort the results. The field must exist
        in the `attributes` key of the response.
      schema:
        type: string
    - name: sort_order 
      in: query
      description: Determines the sort order.
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
      example: asc
  responses:
    '200':
      description: Indicates a successful call.
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '../components/schemas/alert_response_properties.yaml'
              page:
                type: integer
              perPage:
                type: integer
              total:
                type: integer
    '401':
      description: Authorization information is missing or invalid.
      content:
        application/json:
          schema:
            $ref: '../components/schemas/401_response.yaml'
  servers:
    - url: https://localhost:5601
servers:
  - url: https://localhost:5601