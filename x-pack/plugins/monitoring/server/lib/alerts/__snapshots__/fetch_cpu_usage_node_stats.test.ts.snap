// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`fetchCpuUsageNodeStats when running in a container calculates the containerized CPU usage 1`] = `
Object {
  "aggs": Object {
    "clusters": Object {
      "aggs": Object {
        "nodes": Object {
          "aggs": Object {
            "average_cpu_usage_percent": Object {
              "avg": Object {
                "field": "node_stats.process.cpu.percent",
              },
            },
            "index": Object {
              "terms": Object {
                "field": "_index",
                "size": 1,
              },
            },
            "max_periods": Object {
              "max": Object {
                "field": "node_stats.os.cgroup.cpu.stat.number_of_elapsed_periods",
              },
            },
            "max_usage_nanos": Object {
              "max": Object {
                "field": "node_stats.os.cgroup.cpuacct.usage_nanos",
              },
            },
            "min_periods": Object {
              "min": Object {
                "field": "node_stats.os.cgroup.cpu.stat.number_of_elapsed_periods",
              },
            },
            "min_usage_nanos": Object {
              "min": Object {
                "field": "node_stats.os.cgroup.cpuacct.usage_nanos",
              },
            },
            "name": Object {
              "terms": Object {
                "field": "source_node.name",
                "size": 1,
              },
            },
            "quota_micros_max": Object {
              "max": Object {
                "field": "node_stats.os.cgroup.cpu.cfs_quota_micros",
              },
            },
            "quota_micros_min": Object {
              "min": Object {
                "field": "node_stats.os.cgroup.cpu.cfs_quota_micros",
              },
            },
          },
          "terms": Object {
            "field": "node_stats.node_id",
            "size": 10,
          },
        },
      },
      "terms": Object {
        "field": "cluster_uuid",
        "size": 10,
      },
    },
  },
  "filter_path": Array [
    "aggregations",
  ],
  "index": ".monitoring-es-*,metrics-elasticsearch.stack_monitoring.node_stats-*",
  "query": Object {
    "bool": Object {
      "filter": Array [
        Object {
          "bool": Object {
            "minimum_should_match": 1,
            "should": Array [
              Object {
                "term": Object {
                  "type": "node_stats",
                },
              },
              Object {
                "term": Object {
                  "metricset.name": "node_stats",
                },
              },
              Object {
                "term": Object {
                  "data_stream.dataset": "elasticsearch.stack_monitoring.node_stats",
                },
              },
            ],
          },
        },
        Object {
          "terms": Object {
            "cluster_uuid": Array [
              "my-test-cluster",
            ],
          },
        },
        Object {
          "range": Object {
            "timestamp": Object {
              "format": "epoch_millis",
              "gte": 0,
              "lte": 10,
            },
          },
        },
        Object {
          "bool": Object {
            "minimum_should_match": 1,
            "should": Array [
              Object {
                "term": Object {
                  "cluster_uuid": Object {
                    "value": "my-test-cluster",
                  },
                },
              },
            ],
          },
        },
      ],
    },
  },
  "size": 0,
}
`;

exports[`fetchCpuUsageNodeStats when running outside a container calculates the CPU usage 1`] = `
Object {
  "aggs": Object {
    "clusters": Object {
      "aggs": Object {
        "nodes": Object {
          "aggs": Object {
            "average_cpu": Object {
              "avg": Object {
                "field": "node_stats.process.cpu.percent",
              },
            },
            "index": Object {
              "terms": Object {
                "field": "_index",
                "size": 1,
              },
            },
            "name": Object {
              "terms": Object {
                "field": "source_node.name",
                "size": 1,
              },
            },
            "quota_micros_max": Object {
              "max": Object {
                "field": "node_stats.os.cgroup.cpu.cfs_quota_micros",
              },
            },
            "quota_micros_min": Object {
              "min": Object {
                "field": "node_stats.os.cgroup.cpu.cfs_quota_micros",
              },
            },
          },
          "terms": Object {
            "field": "node_stats.node_id",
            "size": 10,
          },
        },
      },
      "terms": Object {
        "field": "cluster_uuid",
        "size": 10,
      },
    },
  },
  "filter_path": Array [
    "aggregations",
  ],
  "index": ".monitoring-es-*,metrics-elasticsearch.stack_monitoring.node_stats-*",
  "query": Object {
    "bool": Object {
      "filter": Array [
        Object {
          "bool": Object {
            "minimum_should_match": 1,
            "should": Array [
              Object {
                "term": Object {
                  "type": "node_stats",
                },
              },
              Object {
                "term": Object {
                  "metricset.name": "node_stats",
                },
              },
              Object {
                "term": Object {
                  "data_stream.dataset": "elasticsearch.stack_monitoring.node_stats",
                },
              },
            ],
          },
        },
        Object {
          "terms": Object {
            "cluster_uuid": Array [
              "my-test-cluster",
            ],
          },
        },
        Object {
          "range": Object {
            "timestamp": Object {
              "format": "epoch_millis",
              "gte": 0,
              "lte": 10,
            },
          },
        },
        Object {
          "bool": Object {
            "minimum_should_match": 1,
            "should": Array [
              Object {
                "term": Object {
                  "cluster_uuid": Object {
                    "value": "my-test-cluster",
                  },
                },
              },
            ],
          },
        },
      ],
    },
  },
  "size": 0,
}
`;
