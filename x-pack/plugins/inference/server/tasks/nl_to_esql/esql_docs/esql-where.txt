## WHERE

The `WHERE` processing command produces a table that contains all the rows from the input table for which the provided condition evaluates to true. This command is essential for filtering data based on specific criteria, making it highly useful for narrowing down datasets to relevant records. It supports various functions and operators, including boolean expressions, date math, string patterns, and NULL comparisons. 

### Use Cases
- Filtering records based on boolean conditions.
- Retrieving data within a specific time range using date math.
- Filtering data based on string patterns using wildcards or regular expressions.
- Performing NULL comparisons.
- Testing whether a field or expression equals an element in a list of literals, fields, or expressions.

### Limitations
- The `WHERE` command is subject to the limitations of ES|QL, such as the maximum number of rows returned (10,000) and the types of fields supported.

### Examples

#### Example 1: Filtering Based on Boolean Condition
```esql
FROM employees
| KEEP first_name, last_name, still_hired
| WHERE still_hired == true
```
If `still_hired` is a boolean field, this can be simplified to:
```esql
FROM employees
| KEEP first_name, last_name, still_hired
| WHERE still_hired
```

#### Example 2: Retrieving Data from a Specific Time Range
```esql
FROM sample_data
| WHERE @timestamp > NOW() - 1 hour
```

#### Example 3: Using Functions in WHERE Clause
```esql
FROM employees
| KEEP first_name, last_name, height
| WHERE LENGTH(first_name) < 4
```

#### Example 4: NULL Comparison
```esql
FROM employees
| WHERE birth_date IS NULL
| KEEP first_name, last_name
| SORT first_name
| LIMIT 3
```
```esql
FROM employees
| WHERE is_rehired IS NOT NULL
| STATS COUNT(emp_no)
```

#### Example 5: Filtering Based on String Patterns Using Wildcards
```esql
FROM employees
| WHERE first_name LIKE "?b*"
| KEEP first_name, last_name
```

#### Example 6: Filtering Based on String Patterns Using Regular Expressions
```esql
FROM employees
| WHERE first_name RLIKE ".leja.*"
| KEEP first_name, last_name
```

#### Example 7: Using IN Operator
```esql
ROW a = 1, b = 4, c = 3
| WHERE c-a IN (3, b / 2, a)
```

For a complete list of all functions and operators, refer to the Functions overview and Operators documentation.