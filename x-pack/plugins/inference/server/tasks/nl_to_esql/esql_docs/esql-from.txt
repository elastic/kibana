## FROM

The `FROM` source command returns a table with data from a data stream, index, or alias. Each row in the resulting table represents a document, and each column corresponds to a field that can be accessed by the name of that field. This command is fundamental for querying data in Elasticsearch using ES|QL.

### Use Cases

- **Basic Data Retrieval**: Fetch data from a specific index or data stream.
- **Time Series Data**: Use date math to access indices relevant to specific time periods.
- **Multiple Indices**: Query multiple data streams, indices, or aliases using comma-separated lists or wildcards.
- **Remote Clusters**: Query data streams and indices on remote clusters.
- **Metadata Retrieval**: Retrieve specific metadata fields using the `METADATA` directive.

### Limitations

- By default, an ES|QL query without an explicit `LIMIT` uses an implicit limit of 1000 rows. This applies to the `FROM` command as well.
- Queries do not return more than 10,000 rows, regardless of the `LIMIT` command’s value.

### Examples

#### Basic Data Retrieval
```esql
FROM employees
```

#### Time Series Data
Use date math to refer to indices, aliases, and data streams. This can be useful for time series data, for example, to access today’s index:
```esql
FROM <logs-{now/d}>
```

#### Multiple Indices
Use comma-separated lists or wildcards to query multiple data streams, indices, or aliases:
```esql
FROM employees-00001,other-employees-*
```

#### Remote Clusters
Use the format `<remote_cluster_name>:<target>` to query data streams and indices on remote clusters:
```esql
FROM cluster_one:employees-00001,cluster_two:other-employees-*
```

#### Metadata Retrieval
Use the optional `METADATA` directive to enable metadata fields:
```esql
FROM employees METADATA _id
```

#### Escaping Special Characters
Use enclosing double quotes (") or three enclosing double quotes (""") to escape index names that contain special characters:
```esql
FROM "this=that","""this[that"""
```