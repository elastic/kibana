// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventsTable Renders events table with no search bar 1`] = `
<React.Fragment>
  <EuiSpacer
    size="m"
  />
  <EuiInMemoryTable
    columns={
      Array [
        Object {
          "field": "description",
          "name": "Description",
          "sortable": true,
          "truncateText": true,
        },
        Object {
          "field": "start_time",
          "name": "Start",
          "render": [Function],
          "sortable": true,
        },
        Object {
          "field": "end_time",
          "name": "End",
          "render": [Function],
          "sortable": true,
        },
        Object {
          "field": "",
          "name": "",
          "render": [Function],
        },
      ]
    }
    executeQueryOptions={Object {}}
    itemId="event_id"
    items={
      Array [
        Object {
          "calendar_id": "test-calendar",
          "description": "test description",
          "end_time": 1486657800000,
          "event_id": "test-event-one",
          "start_time": 1486656600000,
        },
      ]
    }
    pagination={
      Object {
        "initialPageSize": 5,
        "pageSizeOptions": Array [
          5,
          10,
        ],
      }
    }
    responsive={true}
    sorting={
      Object {
        "sort": Object {
          "direction": "asc",
          "field": "description",
        },
      }
    }
  />
</React.Fragment>
`;

exports[`EventsTable Renders events table with search bar 1`] = `
<React.Fragment>
  <EuiSpacer
    size="m"
  />
  <EuiInMemoryTable
    columns={
      Array [
        Object {
          "field": "description",
          "name": "Description",
          "sortable": true,
          "truncateText": true,
        },
        Object {
          "field": "start_time",
          "name": "Start",
          "render": [Function],
          "sortable": true,
        },
        Object {
          "field": "end_time",
          "name": "End",
          "render": [Function],
          "sortable": true,
        },
        Object {
          "field": "",
          "name": "",
          "render": [Function],
        },
      ]
    }
    executeQueryOptions={Object {}}
    itemId="event_id"
    items={
      Array [
        Object {
          "calendar_id": "test-calendar",
          "description": "test description",
          "end_time": 1486657800000,
          "event_id": "test-event-one",
          "start_time": 1486656600000,
        },
      ]
    }
    pagination={
      Object {
        "initialPageSize": 5,
        "pageSizeOptions": Array [
          5,
          10,
        ],
      }
    }
    responsive={true}
    search={
      Object {
        "box": Object {
          "incremental": true,
        },
        "filters": Array [],
        "toolsRight": Array [
          <EuiButton
            color="primary"
            data-testid="ml_new_event"
            fill={false}
            iconSide="left"
            iconType="plusInCircle"
            isDisabled={false}
            onClick={[MockFunction]}
            size="s"
            type="button"
          >
            <FormattedMessage
              defaultMessage="New event"
              id="xpack.ml.calendarsEdit.eventsTable.newEventButtonLabel"
              values={Object {}}
            />
          </EuiButton>,
          <EuiButton
            color="primary"
            data-testid="ml_import_events"
            fill={false}
            iconSide="left"
            iconType="importAction"
            isDisabled={false}
            onClick={[MockFunction]}
            size="s"
            type="button"
          >
            <FormattedMessage
              defaultMessage="Import events"
              id="xpack.ml.calendarsEdit.eventsTable.importEventsButtonLabel"
              values={Object {}}
            />
          </EuiButton>,
        ],
      }
    }
    sorting={
      Object {
        "sort": Object {
          "direction": "asc",
          "field": "description",
        },
      }
    }
  />
</React.Fragment>
`;
