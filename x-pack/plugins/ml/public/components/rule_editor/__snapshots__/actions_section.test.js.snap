// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActionsSection renders with no actions selected 1`] = `
<Fragment>
  <EuiText
    grow={true}
    size="m"
  >
    <p>
      <FormattedMessage
        defaultMessage="Choose the action(s) to take when the rule matches an anomaly."
        id="xpack.ml.ruleEditor.actionsSection.chooseActionsDescription"
        values={Object {}}
      />
    </p>
  </EuiText>
  <EuiSpacer
    size="s"
  />
  <EuiFlexGroup
    alignItems="center"
    component="div"
    direction="row"
    gutterSize="s"
    justifyContent="flexStart"
    responsive={false}
    wrap={false}
  >
    <EuiFlexItem
      component="div"
      grow={false}
    >
      <EuiCheckbox
        checked={false}
        compressed={false}
        disabled={false}
        id="skip_result_cb"
        indeterminate={false}
        label={
          <FormattedMessage
            defaultMessage="Skip result (recommended)"
            id="xpack.ml.ruleEditor.actionsSection.skipResultLabel"
            values={Object {}}
          />
        }
        onChange={[MockFunction]}
      />
    </EuiFlexItem>
    <EuiFlexItem
      component="div"
      grow={false}
    >
      <EuiIconTip
        aria-label="Info"
        content={
          <FormattedMessage
            defaultMessage="The result will not be created."
            id="xpack.ml.ruleEditor.actionsSection.resultWillNotBeCreatedTooltip"
            values={Object {}}
          />
        }
        position="right"
        size="s"
        type="questionInCircle"
      />
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="s"
  />
  <EuiFlexGroup
    alignItems="center"
    component="div"
    direction="row"
    gutterSize="s"
    justifyContent="flexStart"
    responsive={false}
    wrap={false}
  >
    <EuiFlexItem
      component="div"
      grow={false}
    >
      <EuiCheckbox
        checked={false}
        compressed={false}
        disabled={false}
        id="skip_model_update_cb"
        indeterminate={false}
        label={
          <FormattedMessage
            defaultMessage="Skip model update"
            id="xpack.ml.ruleEditor.actionsSection.skipModelUpdateLabel"
            values={Object {}}
          />
        }
        onChange={[MockFunction]}
      />
    </EuiFlexItem>
    <EuiFlexItem
      component="div"
      grow={false}
    >
      <EuiIconTip
        aria-label="Info"
        content={
          <FormattedMessage
            defaultMessage="The value for that series will not be used to update the model."
            id="xpack.ml.ruleEditor.actionsSection.valueWillNotBeUsedToUpdateModelTooltip"
            values={Object {}}
          />
        }
        position="right"
        size="s"
        type="questionInCircle"
      />
    </EuiFlexItem>
  </EuiFlexGroup>
</Fragment>
`;

exports[`ActionsSection renders with skip_result and skip_model_update selected 1`] = `
<Fragment>
  <EuiText
    grow={true}
    size="m"
  >
    <p>
      <FormattedMessage
        defaultMessage="Choose the action(s) to take when the rule matches an anomaly."
        id="xpack.ml.ruleEditor.actionsSection.chooseActionsDescription"
        values={Object {}}
      />
    </p>
  </EuiText>
  <EuiSpacer
    size="s"
  />
  <EuiFlexGroup
    alignItems="center"
    component="div"
    direction="row"
    gutterSize="s"
    justifyContent="flexStart"
    responsive={false}
    wrap={false}
  >
    <EuiFlexItem
      component="div"
      grow={false}
    >
      <EuiCheckbox
        checked={true}
        compressed={false}
        disabled={false}
        id="skip_result_cb"
        indeterminate={false}
        label={
          <FormattedMessage
            defaultMessage="Skip result (recommended)"
            id="xpack.ml.ruleEditor.actionsSection.skipResultLabel"
            values={Object {}}
          />
        }
        onChange={[Function]}
      />
    </EuiFlexItem>
    <EuiFlexItem
      component="div"
      grow={false}
    >
      <EuiIconTip
        aria-label="Info"
        content={
          <FormattedMessage
            defaultMessage="The result will not be created."
            id="xpack.ml.ruleEditor.actionsSection.resultWillNotBeCreatedTooltip"
            values={Object {}}
          />
        }
        position="right"
        size="s"
        type="questionInCircle"
      />
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="s"
  />
  <EuiFlexGroup
    alignItems="center"
    component="div"
    direction="row"
    gutterSize="s"
    justifyContent="flexStart"
    responsive={false}
    wrap={false}
  >
    <EuiFlexItem
      component="div"
      grow={false}
    >
      <EuiCheckbox
        checked={true}
        compressed={false}
        disabled={false}
        id="skip_model_update_cb"
        indeterminate={false}
        label={
          <FormattedMessage
            defaultMessage="Skip model update"
            id="xpack.ml.ruleEditor.actionsSection.skipModelUpdateLabel"
            values={Object {}}
          />
        }
        onChange={[Function]}
      />
    </EuiFlexItem>
    <EuiFlexItem
      component="div"
      grow={false}
    >
      <EuiIconTip
        aria-label="Info"
        content={
          <FormattedMessage
            defaultMessage="The value for that series will not be used to update the model."
            id="xpack.ml.ruleEditor.actionsSection.valueWillNotBeUsedToUpdateModelTooltip"
            values={Object {}}
          />
        }
        position="right"
        size="s"
        type="questionInCircle"
      />
    </EuiFlexItem>
  </EuiFlexGroup>
</Fragment>
`;

exports[`ActionsSection renders with skip_result selected 1`] = `
<Fragment>
  <EuiText
    grow={true}
    size="m"
  >
    <p>
      <FormattedMessage
        defaultMessage="Choose the action(s) to take when the rule matches an anomaly."
        id="xpack.ml.ruleEditor.actionsSection.chooseActionsDescription"
        values={Object {}}
      />
    </p>
  </EuiText>
  <EuiSpacer
    size="s"
  />
  <EuiFlexGroup
    alignItems="center"
    component="div"
    direction="row"
    gutterSize="s"
    justifyContent="flexStart"
    responsive={false}
    wrap={false}
  >
    <EuiFlexItem
      component="div"
      grow={false}
    >
      <EuiCheckbox
        checked={true}
        compressed={false}
        disabled={false}
        id="skip_result_cb"
        indeterminate={false}
        label={
          <FormattedMessage
            defaultMessage="Skip result (recommended)"
            id="xpack.ml.ruleEditor.actionsSection.skipResultLabel"
            values={Object {}}
          />
        }
        onChange={[MockFunction]}
      />
    </EuiFlexItem>
    <EuiFlexItem
      component="div"
      grow={false}
    >
      <EuiIconTip
        aria-label="Info"
        content={
          <FormattedMessage
            defaultMessage="The result will not be created."
            id="xpack.ml.ruleEditor.actionsSection.resultWillNotBeCreatedTooltip"
            values={Object {}}
          />
        }
        position="right"
        size="s"
        type="questionInCircle"
      />
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="s"
  />
  <EuiFlexGroup
    alignItems="center"
    component="div"
    direction="row"
    gutterSize="s"
    justifyContent="flexStart"
    responsive={false}
    wrap={false}
  >
    <EuiFlexItem
      component="div"
      grow={false}
    >
      <EuiCheckbox
        checked={false}
        compressed={false}
        disabled={false}
        id="skip_model_update_cb"
        indeterminate={false}
        label={
          <FormattedMessage
            defaultMessage="Skip model update"
            id="xpack.ml.ruleEditor.actionsSection.skipModelUpdateLabel"
            values={Object {}}
          />
        }
        onChange={[MockFunction]}
      />
    </EuiFlexItem>
    <EuiFlexItem
      component="div"
      grow={false}
    >
      <EuiIconTip
        aria-label="Info"
        content={
          <FormattedMessage
            defaultMessage="The value for that series will not be used to update the model."
            id="xpack.ml.ruleEditor.actionsSection.valueWillNotBeUsedToUpdateModelTooltip"
            values={Object {}}
          />
        }
        position="right"
        size="s"
        type="questionInCircle"
      />
    </EuiFlexItem>
  </EuiFlexGroup>
</Fragment>
`;
