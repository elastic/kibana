// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ScopeSection don't render when no partitioning fields 1`] = `""`;

exports[`ScopeSection false canGetFilters privilege show NoPermissionCallOut when no filter list IDs 1`] = `
<React.Fragment>
  <EuiTitle
    size="m"
    textTransform="none"
  >
    <h2>
      Scope
    </h2>
  </EuiTitle>
  <EuiSpacer
    size="s"
  />
  <EuiCheckbox
    checked={true}
    compressed={false}
    disabled={false}
    id="enable_scope_checkbox"
    indeterminate={false}
    label="Add a filter list to limit where the rule applies."
    onChange={[MockFunction]}
  />
  <EuiSpacer
    size="s"
  />
  <React.Fragment>
    <NoPermissionCallOut />
  </React.Fragment>
  <EuiSpacer
    size="xxl"
  />
</React.Fragment>
`;

exports[`ScopeSection renders when enabled with no scope supplied 1`] = `
<React.Fragment>
  <EuiTitle
    size="m"
    textTransform="none"
  >
    <h2>
      Scope
    </h2>
  </EuiTitle>
  <EuiSpacer
    size="s"
  />
  <EuiCheckbox
    checked={true}
    compressed={false}
    disabled={false}
    id="enable_scope_checkbox"
    indeterminate={false}
    label="Add a filter list to limit where the rule applies."
    onChange={[MockFunction]}
  />
  <EuiSpacer
    size="s"
  />
  <React.Fragment>
    <ScopeExpression
      enabled={false}
      fieldName="domain"
      filterId="web_domains"
      filterListIds={
        Array [
          "web_domains",
          "safe_domains",
          "uk_domains",
        ]
      }
      filterType="include"
      key="0"
      updateScope={[MockFunction]}
    />
  </React.Fragment>
  <EuiSpacer
    size="xxl"
  />
</React.Fragment>
`;

exports[`ScopeSection renders when enabled with scope supplied 1`] = `
<React.Fragment>
  <EuiTitle
    size="m"
    textTransform="none"
  >
    <h2>
      Scope
    </h2>
  </EuiTitle>
  <EuiSpacer
    size="s"
  />
  <EuiCheckbox
    checked={true}
    compressed={false}
    disabled={false}
    id="enable_scope_checkbox"
    indeterminate={false}
    label="Add a filter list to limit where the rule applies."
    onChange={[MockFunction]}
  />
  <EuiSpacer
    size="s"
  />
  <React.Fragment>
    <ScopeExpression
      enabled={true}
      fieldName="domain"
      filterId="uk_domains"
      filterListIds={
        Array [
          "web_domains",
          "safe_domains",
          "uk_domains",
        ]
      }
      filterType="include"
      key="0"
      updateScope={[MockFunction]}
    />
  </React.Fragment>
  <EuiSpacer
    size="xxl"
  />
</React.Fragment>
`;

exports[`ScopeSection renders when not enabled 1`] = `
<React.Fragment>
  <EuiTitle
    size="m"
    textTransform="none"
  >
    <h2>
      Scope
    </h2>
  </EuiTitle>
  <EuiSpacer
    size="s"
  />
  <EuiCheckbox
    checked={false}
    compressed={false}
    disabled={false}
    id="enable_scope_checkbox"
    indeterminate={false}
    label="Add a filter list to limit where the rule applies."
    onChange={[MockFunction]}
  />
  <EuiSpacer
    size="s"
  />
  <EuiSpacer
    size="xxl"
  />
</React.Fragment>
`;

exports[`ScopeSection show NoFilterListsCallOut when no filter list IDs 1`] = `
<React.Fragment>
  <EuiTitle
    size="m"
    textTransform="none"
  >
    <h2>
      Scope
    </h2>
  </EuiTitle>
  <EuiSpacer
    size="s"
  />
  <EuiCheckbox
    checked={true}
    compressed={false}
    disabled={false}
    id="enable_scope_checkbox"
    indeterminate={false}
    label="Add a filter list to limit where the rule applies."
    onChange={[MockFunction]}
  />
  <EuiSpacer
    size="s"
  />
  <React.Fragment>
    <NoFilterListsCallOut />
  </React.Fragment>
  <EuiSpacer
    size="xxl"
  />
</React.Fragment>
`;
