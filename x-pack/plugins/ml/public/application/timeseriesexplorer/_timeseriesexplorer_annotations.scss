// SASS TODO: This uses non-BEM styles to be in line with the existing
// legacy Time Series Viewer style. Where applicable it tries to avoid
// overrides. The one override with `.extent` is because of d3.

$mlAnnotationBorderWidth: 2px;

// Replicates $euiBorderEditable for SVG
.mlAnnotationBrush .extent {
  stroke: $euiColorLightShade;
  stroke-width: $mlAnnotationBorderWidth;
  stroke-dasharray: 2 2;
  fill: $euiColorLightestShade;
  shape-rendering: geometricPrecision;
}

// Instead of different EUI colors we use opacity settings
// here to avoid opaque layers on top of existing chart elements.
$mlAnnotationRectDefaultStrokeOpacity: .2;
$mlAnnotationRectDefaultFillOpacity: .05;

.mlAnnotationRect {
  stroke: $euiColorFullShade;
  stroke-width: $mlAnnotationBorderWidth;
  stroke-opacity: $mlAnnotationRectDefaultStrokeOpacity;
  transition: stroke-opacity $euiAnimSpeedFast;

  fill: $euiColorFullShade;
  fill-opacity: $mlAnnotationRectDefaultFillOpacity;
  transition: fill-opacity $euiAnimSpeedFast;

  shape-rendering: geometricPrecision;
}

.mlAnnotationRect-isHighlight {
  stroke-opacity: $mlAnnotationRectDefaultStrokeOpacity * 2;
  transition: stroke-opacity $euiAnimSpeedFast;

  fill-opacity: $mlAnnotationRectDefaultFillOpacity * 2;
  transition: fill-opacity $euiAnimSpeedFast;
}

.mlAnnotationRect-isBlur {
  stroke-opacity: $mlAnnotationRectDefaultStrokeOpacity / 2;
  transition: stroke-opacity $euiAnimSpeedFast;

  fill-opacity: $mlAnnotationRectDefaultFillOpacity / 2;
  transition: fill-opacity $euiAnimSpeedFast;
}

// Replace the EuiBadge text style for SVG
.mlAnnotationText {
  text-anchor: middle;
  font-size: $euiFontSizeXS;
  font-family: $euiFontFamily;
  font-weight: $euiFontWeightMedium;

  fill: $euiColorFullShade;
  transition: fill $euiAnimSpeedFast;
}

.mlAnnotationText-isBlur {
  fill: $euiColorMediumShade;
  transition: fill $euiAnimSpeedFast;
}

.mlAnnotationTextRect {
  fill: $euiColorLightShade;
  transition: fill $euiAnimSpeedFast;
}

.mlAnnotationTextRect-isBlur {
  fill: $euiColorLightestShade;
  transition: fill $euiAnimSpeedFast;
}

.mlAnnotationHidden {
  display: none;
}

// context annotation marker
.mlContextAnnotationRect {
  stroke: $euiColorFullShade;
  stroke-width: $mlAnnotationBorderWidth;
  stroke-opacity: $mlAnnotationRectDefaultStrokeOpacity;
  transition: stroke-opacity $euiAnimSpeedFast;

  fill: $euiColorFullShade;
  fill-opacity: $mlAnnotationRectDefaultFillOpacity;
  transition: fill-opacity $euiAnimSpeedFast;

  shape-rendering: geometricPrecision;
}

.mlContextAnnotationRect-isBlur {
  stroke-opacity: $mlAnnotationRectDefaultStrokeOpacity / 2;
  transition: stroke-opacity $euiAnimSpeedFast;

  fill-opacity: $mlAnnotationRectDefaultFillOpacity / 2;
  transition: fill-opacity $euiAnimSpeedFast;
}
