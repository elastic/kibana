// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditFilterListHeader renders the header when creating a new filter list with ID, description and items set 1`] = `
<Fragment>
  <EuiFlexGroup
    alignItems="baseline"
    justifyContent="spaceBetween"
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiFlexGroup
        alignItems="baseline"
        gutterSize="m"
        responsive={false}
      >
        <EuiFlexItem
          grow={false}
        >
          <EuiTitle>
            <h1>
              <FormattedMessage
                defaultMessage="Create new filter list"
                id="xpack.ml.settings.filterLists.editFilterHeader.createFilterListTitle"
                values={Object {}}
              />
            </h1>
          </EuiTitle>
        </EuiFlexItem>
        <EuiFlexItem
          grow={false}
        >
          <EuiTextColor
            color="subdued"
          >
            <p>
              <FormattedMessage
                defaultMessage="{totalItemCount, plural, one {# item} other {# items}} in total"
                id="xpack.ml.settings.filterLists.editFilterList.totalItemsDescription"
                values={
                  Object {
                    "totalItemCount": 15,
                  }
                }
              />
            </p>
          </EuiTextColor>
        </EuiFlexItem>
      </EuiFlexGroup>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="m"
  />
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    fullWidth={false}
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    helpText="Use lowercase alphanumerics (a-z and 0-9), hyphens or underscores; must start and end with an alphanumeric character"
    isInvalid={false}
    label={
      <FormattedMessage
        defaultMessage="Filter list ID"
        id="xpack.ml.settings.filterLists.editFilterHeader.filterListIdAriaLabel"
        values={Object {}}
      />
    }
    labelType="label"
  >
    <EuiFieldText
      isInvalid={false}
      name="new_filter_id"
      onChange={[Function]}
      value="test_filter_list"
    />
  </EuiFormRow>
  <EuiFlexGroup
    alignItems="baseline"
    gutterSize="s"
    responsive={false}
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiText>
        <p>
          A test filter list
        </p>
      </EuiText>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <EditDescriptionPopover
        canCreateFilter={true}
        description="A test filter list"
        updateDescription={[MockFunction]}
      />
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="s"
  />
</Fragment>
`;

exports[`EditFilterListHeader renders the header when creating a new filter list with the ID not set 1`] = `
<Fragment>
  <EuiFlexGroup
    alignItems="baseline"
    justifyContent="spaceBetween"
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiFlexGroup
        alignItems="baseline"
        gutterSize="m"
        responsive={false}
      >
        <EuiFlexItem
          grow={false}
        >
          <EuiTitle>
            <h1>
              <FormattedMessage
                defaultMessage="Create new filter list"
                id="xpack.ml.settings.filterLists.editFilterHeader.createFilterListTitle"
                values={Object {}}
              />
            </h1>
          </EuiTitle>
        </EuiFlexItem>
        <EuiFlexItem
          grow={false}
        >
          <EuiTextColor
            color="subdued"
          >
            <p>
              <FormattedMessage
                defaultMessage="{totalItemCount, plural, one {# item} other {# items}} in total"
                id="xpack.ml.settings.filterLists.editFilterList.totalItemsDescription"
                values={
                  Object {
                    "totalItemCount": 0,
                  }
                }
              />
            </p>
          </EuiTextColor>
        </EuiFlexItem>
      </EuiFlexGroup>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="m"
  />
  <EuiFormRow
    describedByIds={Array []}
    display="row"
    error={
      Array [
        "Use lowercase alphanumerics (a-z and 0-9), hyphens or underscores; must start and end with an alphanumeric character",
      ]
    }
    fullWidth={false}
    hasChildLabel={true}
    hasEmptyLabelSpace={false}
    isInvalid={true}
    label={
      <FormattedMessage
        defaultMessage="Filter list ID"
        id="xpack.ml.settings.filterLists.editFilterHeader.filterListIdAriaLabel"
        values={Object {}}
      />
    }
    labelType="label"
  >
    <EuiFieldText
      isInvalid={true}
      name="new_filter_id"
      onChange={[Function]}
      value=""
    />
  </EuiFormRow>
  <EuiFlexGroup
    alignItems="baseline"
    gutterSize="s"
    responsive={false}
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiText>
        <EuiTextColor
          color="subdued"
        >
          <FormattedMessage
            defaultMessage="Add a description"
            id="xpack.ml.settings.filterLists.editFilterList.addDescriptionText"
            values={Object {}}
          />
        </EuiTextColor>
      </EuiText>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <EditDescriptionPopover
        canCreateFilter={true}
        updateDescription={[MockFunction]}
      />
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="s"
  />
</Fragment>
`;

exports[`EditFilterListHeader renders the header when editing an existing unused filter list with no description or items 1`] = `
<Fragment>
  <EuiFlexGroup
    alignItems="baseline"
    justifyContent="spaceBetween"
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiFlexGroup
        alignItems="baseline"
        gutterSize="m"
        responsive={false}
      >
        <EuiFlexItem
          grow={false}
        >
          <EuiTitle>
            <h1>
              <FormattedMessage
                defaultMessage="Filter list {filterId}"
                id="xpack.ml.settings.filterLists.editFilterHeader.filterListTitle"
                values={
                  Object {
                    "filterId": "test_filter_list",
                  }
                }
              />
            </h1>
          </EuiTitle>
        </EuiFlexItem>
        <EuiFlexItem
          grow={false}
        >
          <EuiTextColor
            color="subdued"
          >
            <p>
              <FormattedMessage
                defaultMessage="{totalItemCount, plural, one {# item} other {# items}} in total"
                id="xpack.ml.settings.filterLists.editFilterList.totalItemsDescription"
                values={
                  Object {
                    "totalItemCount": 0,
                  }
                }
              />
            </p>
          </EuiTextColor>
        </EuiFlexItem>
      </EuiFlexGroup>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="m"
  />
  <EuiFlexGroup
    alignItems="baseline"
    gutterSize="s"
    responsive={false}
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiText>
        <EuiTextColor
          color="subdued"
        >
          <FormattedMessage
            defaultMessage="Add a description"
            id="xpack.ml.settings.filterLists.editFilterList.addDescriptionText"
            values={Object {}}
          />
        </EuiTextColor>
      </EuiText>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <EditDescriptionPopover
        canCreateFilter={true}
        updateDescription={[MockFunction]}
      />
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="s"
  />
  <EuiText>
    <p>
      <FormattedMessage
        defaultMessage="This filter list is not used by any jobs."
        id="xpack.ml.settings.filterLists.editFilterList.filterIsNotUsedInJobsDescription"
        values={Object {}}
      />
    </p>
  </EuiText>
  <EuiSpacer
    size="s"
  />
</Fragment>
`;

exports[`EditFilterListHeader renders the header when editing an existing used filter list with description and items set 1`] = `
<Fragment>
  <EuiFlexGroup
    alignItems="baseline"
    justifyContent="spaceBetween"
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiFlexGroup
        alignItems="baseline"
        gutterSize="m"
        responsive={false}
      >
        <EuiFlexItem
          grow={false}
        >
          <EuiTitle>
            <h1>
              <FormattedMessage
                defaultMessage="Filter list {filterId}"
                id="xpack.ml.settings.filterLists.editFilterHeader.filterListTitle"
                values={
                  Object {
                    "filterId": "test_filter_list",
                  }
                }
              />
            </h1>
          </EuiTitle>
        </EuiFlexItem>
        <EuiFlexItem
          grow={false}
        >
          <EuiTextColor
            color="subdued"
          >
            <p>
              <FormattedMessage
                defaultMessage="{totalItemCount, plural, one {# item} other {# items}} in total"
                id="xpack.ml.settings.filterLists.editFilterList.totalItemsDescription"
                values={
                  Object {
                    "totalItemCount": 15,
                  }
                }
              />
            </p>
          </EuiTextColor>
        </EuiFlexItem>
      </EuiFlexGroup>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="m"
  />
  <EuiFlexGroup
    alignItems="baseline"
    gutterSize="s"
    responsive={false}
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiText>
        <p>
          A test filter list
        </p>
      </EuiText>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <EditDescriptionPopover
        canCreateFilter={true}
        description="A test filter list"
        updateDescription={[MockFunction]}
      />
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiSpacer
    size="s"
  />
  <div
    className="ml-filter-list-usage"
  >
    <EuiText>
      <FormattedMessage
        defaultMessage="This filter list is used in"
        id="xpack.ml.settings.filterLists.editFilterList.filterIsUsedInJobsDescription"
        values={Object {}}
      />
    </EuiText>
    <FilterListUsagePopover
      entityType="detector"
      entityValues={
        Array [
          "mean CPUUtilization",
        ]
      }
    />
    <EuiText>
      <FormattedMessage
        defaultMessage="across"
        id="xpack.ml.settings.filterLists.editFilterList.acrossText"
        values={Object {}}
      />
    </EuiText>
    <FilterListUsagePopover
      entityType="job"
      entityValues={
        Array [
          "cloudwatch",
        ]
      }
    />
  </div>
  <EuiSpacer
    size="s"
  />
</Fragment>
`;
