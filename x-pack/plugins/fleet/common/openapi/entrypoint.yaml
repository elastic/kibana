openapi: 3.0.0
tags:
  - name: Data streams
  - name: Elastic Agents
  - name: Elastic Agent actions
  - name: Elastic Agent binary download sources
  - name: Elastic Agent policies
  - name: Elastic Agent status
  - name: Elastic Package Manager (EPM)
  - name: Fleet enrollment API keys
  - name: Fleet internals
  - name: Fleet Server hosts
  - name: Fleet Kubernetes
  - name: Fleet outputs
  - name: Fleet package policies
  - name: Fleet proxies
  - name: Fleet service tokens
  - name: Fleet uninstall tokens
info:
  title: Fleet
  description: OpenAPI schema for Fleet API endpoints
  version: '0.2'
  contact:
    name: Fleet Team
  license:
    name: Elastic License 2.0
    url: https://www.elastic.co/licensing/elastic-license
servers:
  - url: 'http://KIBANA_HOST:5601'
paths:
  # Fleet internals
  /api/fleet/health_check:
    $ref: paths/health_check.yaml
  /api/fleet/setup:
    $ref: paths/setup.yaml
  /api/fleet/settings:
    $ref: paths/settings.yaml
  # /internal/fleet/settings/enrollment:
  #   servers:
  #     - url: 'http://KIBANA_HOST:5601/internal/fleet'
  #       description: Used for Fleet internals and not supported
  #   $ref: paths/settings_enrollment.yaml
  /api/fleet/service-tokens:
    $ref: paths/service_tokens_deprecated.yaml
  /api/fleet/service_tokens:
    $ref: paths/service_tokens.yaml

  # EPM / integrations endpoints
  /api/fleet/epm/verification_key_id:
    $ref: paths/epm@verification_key_id.yaml
  /api/fleet/epm/bulk_assets:
    $ref: paths/epm@bulk_assets.yaml
  /api/fleet/epm/categories:
    $ref: paths/epm@categories.yaml
  /api/fleet/epm/packages/limited:
    $ref: paths/epm@limited_list.yaml
  /api/fleet/epm/packages:
    $ref: paths/epm@packages.yaml
  /api/fleet/epm/packages/_bulk:
    $ref: paths/epm@packages_bulk.yaml
  '/api/fleet/epm/packages/{pkgkey}':
    $ref: 'paths/epm@packages@{pkgkey}_deprecated.yaml'
  '/api/fleet/epm/packages/{pkgName}/{pkgVersion}':
    $ref: 'paths/epm@packages@{pkg_name}@{pkg_version}.yaml'
  '/api/fleet/epm/packages/{pkgName}/{pkgVersion}/transforms/authorize':
    $ref: 'paths/epm@packages@{pkg_name}@{pkg_version}@transforms@authorize.yaml'
  '/api/fleet/epm/packages/{pkgName}/{pkgVersion}/{filePath}':
    $ref: paths/epm@get_file.yaml
  '/api/fleet/epm/packages/{pkgName}/stats':
    $ref: 'paths/epm@packages@{pkg_name}@stats.yaml'
  '/api/fleet/epm/templates/{pkgName}/{pkgVersion}/inputs':
    $ref: 'paths/epm@templates@{pkg_name}@{pkg_version}@inputs.yaml'

  # Agent endpoints
  /api/fleet/agents/setup:
    $ref: paths/agents@setup.yaml
  /api/fleet/agent-status:
    $ref: paths/agent_status_deprecated.yaml
  /api/fleet/agent_status:
    $ref: paths/agent_status.yaml
  /api/fleet/agent_status/data:
    $ref: paths/agent_status@data.yaml
  /api/fleet/agents:
    $ref: paths/agents.yaml
  /api/fleet/agents/bulk_upgrade:
    $ref: paths/agents@bulk_upgrade.yaml
  /api/fleet/agents/action_status:
    $ref: paths/agents@action_status.yaml
  '/api/fleet/agents/{agentId}':
    $ref: 'paths/agents@{agent_id}.yaml'
  '/api/fleet/agents/{agentId}/actions':
    $ref: 'paths/agents@{agent_id}@actions.yaml'
  '/api/fleet/agents/actions/{actionId}/cancel':
    $ref: 'paths/agents@actions@{action_id}@cancel.yaml'
  '/api/fleet/agents/files/{fileId}/{fileName}':
    $ref: 'paths/agents@files@{file_id}@{file_name}.yaml'
  '/api/fleet/agents/files/{fileId}':
    $ref: 'paths/agents@files@{file_id}.yaml'
  '/api/fleet/agents/{agentId}/reassign':
    $ref: 'paths/agents@{agent_id}@reassign.yaml'
  '/api/fleet/agents/{agentId}/unenroll':
    $ref: 'paths/agents@{agent_id}@unenroll.yaml'
  '/api/fleet/agents/{agentId}/upgrade':
    $ref: 'paths/agents@{agent_id}@upgrade.yaml'
  '/api/fleet/agents/{agentId}/uploads':
    $ref: 'paths/agents@{agent_id}@uploads.yaml'
  '/api/fleet/agents/bulk_reassign':
    $ref: 'paths/agents@bulk_reassign.yaml'
  '/api/fleet/agents/bulk_unenroll':
    $ref: 'paths/agents@bulk_unenroll.yaml'
  '/api/fleet/agents/bulk_update_agent_tags':
    $ref: 'paths/agents@bulk_update_tags.yaml'
  /api/fleet/agents/tags:
    $ref: paths/agent_tags.yaml
  '/api/fleet/agents/{agentId}/request_diagnostics':
    $ref: 'paths/agents@{agent_id}@request_diagnostics.yaml'
  /api/fleet/agents/bulk_request_diagnostics:
    $ref: 'paths/agents@bulk_request_diagnostics.yaml'

  #  Agent policies endpoints
  /api/fleet/agent_policies:
    $ref: paths/agent_policies.yaml
  '/api/fleet/agent_policies/{agentPolicyId}':
    $ref: 'paths/agent_policies@{agent_policy_id}.yaml'
  '/api/fleet/agent_policies/{agentPolicyId}/copy':
    $ref: 'paths/agent_policies@{agent_policy_id}@copy.yaml'
  '/api/fleet/agent_policies/{agentPolicyId}/full':
    $ref: 'paths/agent_policies@{agent_policy_id}@full.yaml'
  '/api/fleet/agent_policies/{agentPolicyId}/download':
    $ref: 'paths/agent_policies@{agent_policy_id}@download.yaml'
  /api/fleet/agent_policies/_bulk_get:
    $ref: paths/agent_policies@_bulk_get.yaml
  /api/fleet/agent_policies/delete:
    $ref: paths/agent_policies@delete.yaml

  # Data streams endpoints
  /api/fleet/data_streams:
    $ref: paths/data_streams.yaml

  #  Enrollment endpoints
  /api/fleet/enrollment-api-keys:
    $ref: paths/enrollment_api_keys_deprecated.yaml
  '/api/fleet/enrollment-api-keys/{keyId}':
    $ref: 'paths/enrollment_api_keys@{key_id}_deprecated.yaml'
  /api/fleet/enrollment_api_keys:
    $ref: paths/enrollment_api_keys.yaml
  '/api/fleet/enrollment_api_keys/{keyId}':
    $ref: 'paths/enrollment_api_keys@{key_id}.yaml'

  #  Package policies endpoints
  /api/fleet/package_policies:
    $ref: paths/package_policies.yaml
  /api/fleet/package_policies/_bulk_get:
    $ref: paths/package_policies@_bulk_get.yaml
  /api/fleet/package_policies/delete:
    $ref: paths/package_policies@delete.yaml
  /api/fleet/package_policies/upgrade:
    $ref: paths/package_policies@upgrade.yaml
  /api/fleet/package_policies/upgrade/dryrun:
    $ref: paths/package_policies@upgrade_dryrun.yaml
  '/api/fleet/package_policies/{packagePolicyId}':
    $ref: 'paths/package_policies@{package_policy_id}.yaml'

  # Outputs
  /api/fleet/outputs:
    $ref: paths/outputs.yaml
  '/api/fleet/outputs/{outputId}':
    $ref: paths/outputs@{output_id}.yaml
  '/api/fleet/outputs/{outputId}/health':
    $ref: paths/output_health@{output_id}.yaml
  /api/fleet/logstash_api_keys:
    $ref: paths/logstash_api_keys.yaml

  # Agent binary download sources
  /api/fleet/agent_download_sources:
    $ref: paths/agent_download_sources.yaml
  '/api/fleet/agent_download_sources/{sourceId}':
    $ref: paths/agent_download_sources@{source_id}.yaml

  # Fleet server hosts
  /api/fleet/fleet_server_hosts:
    $ref: paths/fleet_server_hosts.yaml
  '/api/fleet/fleet_server_hosts/{itemId}':
    $ref: paths/fleet_server_hosts@{item_id}.yaml

  # Fleet proxies
  /api/fleet/proxies:
    $ref: paths/proxies.yaml
  '/api/fleet/proxies/{itemId}':
    $ref: paths/proxies@{item_id}.yaml

  # K8s
  /api/fleet/kubernetes:
    $ref: paths/kubernetes.yaml

  # Uninstall tokens
  /api/fleet/uninstall_tokens:
    $ref: paths/uninstall_tokens.yaml
  '/api/fleet/uninstall_tokens/{uninstallTokenId}':
    $ref: paths/uninstall_tokens@{uninstall_token_id}.yaml
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    Enrollment_API_Key:
      name: Authorization
      type: apiKey
      in: header
      description: 'e.g. Authorization: ApiKey base64EnrollmentApiKey'
    Access_API_Key:
      name: Authorization
      type: apiKey
      in: header
      description: 'e.g. Authorization: ApiKey base64AccessApiKey'
security:
  - basicAuth: []
