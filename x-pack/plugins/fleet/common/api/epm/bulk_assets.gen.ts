/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { z } from 'zod';

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 */

export type BulkAssetsResponse = z.infer<typeof BulkAssetsResponse>;
export const BulkAssetsResponse = z.object({
  items: z.array(
    z.object({
      id: z.string(),
      type: z.union([
        z.enum([
          'index',
          'component_template',
          'ingest_pipeline',
          'index_template',
          'ilm_policy',
          'transform',
          'data_stream_ilm_policy',
          'ml_model',
        ]),
        z.enum([
          'dashboard',
          'visualization',
          'search',
          'index-pattern',
          'map',
          'lens',
          'security-rule',
          'csp-rule-template',
          'ml-module',
          'tag',
          'osquery-pack-asset',
          'osquery-saved-query',
        ]),
      ]),
      updatedAt: z.string().optional(),
      attributes: z.object({
        title: z.string().optional(),
        description: z.string().optional(),
      }),
    })
  ),
});

export type GetBulkAssetsRequestBody = z.infer<typeof GetBulkAssetsRequestBody>;
export const GetBulkAssetsRequestBody = z.object({
  /**
   * list of items necessary to fetch assets
   */
  assetIds: z.array(
    z.object({
      type: z.string().optional(),
      id: z.string().optional(),
    })
  ),
});
export type GetBulkAssetsRequestBodyInput = z.input<typeof GetBulkAssetsRequestBody>;

export type GetBulkAssetsResponse = z.infer<typeof GetBulkAssetsResponse>;
export const GetBulkAssetsResponse = BulkAssetsResponse;
