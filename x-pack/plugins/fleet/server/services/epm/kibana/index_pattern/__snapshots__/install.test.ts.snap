// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`creating index patterns from yaml fields createFieldFormatMap creates correct map based on inputs all variations and all the params get passed through: createFieldFormatMap 1`] = `
{
  "fieldPattern": {
    "params": {
      "pattern": "patternVal"
    }
  },
  "fieldFormat": {
    "id": "formatVal"
  },
  "fieldFormatWithParam": {
    "id": "formatVal",
    "params": {
      "outputPrecision": 2
    }
  },
  "fieldFormatAndPattern": {
    "id": "formatVal",
    "params": {
      "pattern": "patternVal"
    }
  },
  "fieldFormatAndAllParams": {
    "id": "formatVal",
    "params": {
      "pattern": "pattenVal",
      "inputFormat": "inputFormatVal",
      "outputFormat": "outputFormalVal",
      "outputPrecision": 3,
      "labelTemplate": "labelTemplateVal",
      "urlTemplate": "urlTemplateVal"
    }
  }
}
`;

exports[`creating index patterns from yaml fields createIndexPattern function creates Kibana index pattern: createIndexPattern 1`] = `
{
  "title": "logs-*",
  "timeFieldName": "@timestamp",
  "fields": "[{\\"name\\":\\"coredns.id\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"coredns.allParams\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"number\\"},{\\"name\\":\\"coredns.query.length\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"number\\"},{\\"name\\":\\"coredns.query.size\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"number\\"},{\\"name\\":\\"coredns.query.class\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"coredns.query.name\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"coredns.query.type\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"coredns.response.code\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"coredns.response.flags\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"coredns.response.size\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"number\\"},{\\"name\\":\\"coredns.dnssec_ok\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"boolean\\"},{\\"name\\":\\"@timestamp\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"date\\"},{\\"name\\":\\"labels\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"message\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":false,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"tags\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"agent.ephemeral_id\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"agent.id\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"agent.name\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"agent.type\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"agent.version\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"as.number\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"number\\"},{\\"name\\":\\"as.organization.name\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"nginx.access.remote_ip_list\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.body_sent.bytes\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.user_name\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.method\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.url\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.http_version\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.response_code\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.referrer\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.agent\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.user_agent.device\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.user_agent.name\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.user_agent.os\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.user_agent.os_name\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.user_agent.original\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.geoip.continent_name\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":false,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"nginx.access.geoip.country_iso_code\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.geoip.location\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.geoip.region_name\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.geoip.city_name\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"nginx.access.geoip.region_iso_code\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true},{\\"name\\":\\"source.geo.continent_name\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":false,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"country\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"country.keyword\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":true,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"},{\\"name\\":\\"country.text\\",\\"count\\":0,\\"scripted\\":false,\\"indexed\\":true,\\"analyzed\\":false,\\"searchable\\":true,\\"aggregatable\\":false,\\"doc_values\\":true,\\"readFromDocValues\\":true,\\"type\\":\\"string\\"}]",
  "fieldFormatMap": "{\\"coredns.allParams\\":{\\"id\\":\\"bytes\\",\\"params\\":{\\"pattern\\":\\"patternValQueryWeight\\",\\"inputFormat\\":\\"inputFormatVal,\\",\\"outputFormat\\":\\"outputFormalVal,\\",\\"outputPrecision\\":\\"3,\\",\\"labelTemplate\\":\\"labelTemplateVal,\\",\\"urlTemplate\\":\\"urlTemplateVal,\\"}},\\"coredns.query.length\\":{\\"params\\":{\\"pattern\\":\\"patternValQueryLength\\"}},\\"coredns.query.size\\":{\\"id\\":\\"bytes\\",\\"params\\":{\\"pattern\\":\\"patternValQuerySize\\"}},\\"coredns.response.size\\":{\\"id\\":\\"bytes\\"}}",
  "allowNoIndex": true
}
`;

exports[`creating index patterns from yaml fields createIndexPatternFields function creates Kibana index pattern fields and fieldFormatMap: createIndexPatternFields 1`] = `
{
  "indexPatternFields": [
    {
      "name": "coredns.id",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "coredns.allParams",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "number"
    },
    {
      "name": "coredns.query.length",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "number"
    },
    {
      "name": "coredns.query.size",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "number"
    },
    {
      "name": "coredns.query.class",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "coredns.query.name",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "coredns.query.type",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "coredns.response.code",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "coredns.response.flags",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "coredns.response.size",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "number"
    },
    {
      "name": "coredns.dnssec_ok",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "boolean"
    },
    {
      "name": "@timestamp",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "date"
    },
    {
      "name": "labels",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "message",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": false,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "tags",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "agent.ephemeral_id",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "agent.id",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "agent.name",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "agent.type",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "agent.version",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "as.number",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "number"
    },
    {
      "name": "as.organization.name",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "nginx.access.remote_ip_list",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.body_sent.bytes",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.user_name",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.method",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.url",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.http_version",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.response_code",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.referrer",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.agent",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.user_agent.device",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.user_agent.name",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.user_agent.os",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.user_agent.os_name",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.user_agent.original",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.geoip.continent_name",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": false,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "nginx.access.geoip.country_iso_code",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.geoip.location",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.geoip.region_name",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.geoip.city_name",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "nginx.access.geoip.region_iso_code",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true
    },
    {
      "name": "source.geo.continent_name",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": false,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "country",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "country.keyword",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": true,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    },
    {
      "name": "country.text",
      "count": 0,
      "scripted": false,
      "indexed": true,
      "analyzed": false,
      "searchable": true,
      "aggregatable": false,
      "doc_values": true,
      "readFromDocValues": true,
      "type": "string"
    }
  ],
  "fieldFormatMap": {
    "coredns.allParams": {
      "id": "bytes",
      "params": {
        "pattern": "patternValQueryWeight",
        "inputFormat": "inputFormatVal,",
        "outputFormat": "outputFormalVal,",
        "outputPrecision": "3,",
        "labelTemplate": "labelTemplateVal,",
        "urlTemplate": "urlTemplateVal,"
      }
    },
    "coredns.query.length": {
      "params": {
        "pattern": "patternValQueryLength"
      }
    },
    "coredns.query.size": {
      "id": "bytes",
      "params": {
        "pattern": "patternValQuerySize"
      }
    },
    "coredns.response.size": {
      "id": "bytes"
    }
  }
}
`;

exports[`creating index patterns from yaml fields flattenFields function flattens recursively and handles copying alias fields flattenFields matches snapshot: flattenFields 1`] = `
[
  {
    "name": "coredns.id",
    "type": "keyword",
    "description": "id of the DNS transaction\\n"
  },
  {
    "name": "coredns.allParams",
    "type": "integer",
    "format": "bytes",
    "pattern": "patternValQueryWeight",
    "input_format": "inputFormatVal,",
    "output_format": "outputFormalVal,",
    "output_precision": "3,",
    "label_template": "labelTemplateVal,",
    "url_template": "urlTemplateVal,",
    "openLinkInCurrentTab": "true,",
    "description": "weight of the DNS query\\n"
  },
  {
    "name": "coredns.query.length",
    "type": "integer",
    "pattern": "patternValQueryLength",
    "description": "length of the DNS query\\n"
  },
  {
    "name": "coredns.query.size",
    "type": "integer",
    "format": "bytes",
    "pattern": "patternValQuerySize",
    "description": "size of the DNS query\\n"
  },
  {
    "name": "coredns.query.class",
    "type": "keyword",
    "description": "DNS query class\\n"
  },
  {
    "name": "coredns.query.name",
    "type": "keyword",
    "description": "DNS query name\\n"
  },
  {
    "name": "coredns.query.type",
    "type": "keyword",
    "description": "DNS query type\\n"
  },
  {
    "name": "coredns.response.code",
    "type": "keyword",
    "description": "DNS response code\\n"
  },
  {
    "name": "coredns.response.flags",
    "type": "keyword",
    "description": "DNS response flags\\n"
  },
  {
    "name": "coredns.response.size",
    "type": "integer",
    "format": "bytes",
    "description": "size of the DNS response\\n"
  },
  {
    "name": "coredns.dnssec_ok",
    "type": "boolean",
    "description": "dnssec flag\\n"
  },
  {
    "name": "@timestamp",
    "level": "core",
    "required": true,
    "type": "date",
    "description": "Date/time when the event originated. This is the date/time extracted from the event, typically representing when the event was generated by the source. If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline. Required field for all events.",
    "example": "2016-05-23T08:05:34.853Z"
  },
  {
    "name": "labels",
    "level": "core",
    "type": "object",
    "object_type": "keyword",
    "description": "Custom key/value pairs. Can be used to add meta information to events. Should not contain nested objects. All values are stored as keyword. Example: \`docker\` and \`k8s\` labels.",
    "example": {
      "application": "foo-bar",
      "env": "production"
    }
  },
  {
    "name": "message",
    "level": "core",
    "type": "text",
    "description": "For log events the message field contains the log message, optimized for viewing in a log viewer. For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event. If multiple messages exist, they can be combined into one message.",
    "example": "Hello World"
  },
  {
    "name": "tags",
    "level": "core",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "List of keywords used to tag each event.",
    "example": "[\\"production\\", \\"env2\\"]"
  },
  {
    "name": "agent.ephemeral_id",
    "level": "extended",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "Ephemeral identifier of this agent (if one exists). This id normally changes across restarts, but \`agent.id\` does not.",
    "example": "8a4f500f"
  },
  {
    "name": "agent.id",
    "level": "core",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "Unique identifier of this agent (if one exists). Example: For Beats this would be beat.id.",
    "example": "8a4f500d"
  },
  {
    "name": "agent.name",
    "level": "core",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "Custom name of the agent. This is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from. If no name is given, the name is often left empty.",
    "example": "foo"
  },
  {
    "name": "agent.type",
    "level": "core",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "Type of the agent. The agent type stays always the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine.",
    "example": "filebeat"
  },
  {
    "name": "agent.version",
    "level": "core",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "Version of the agent.",
    "example": "6.0.0-rc2"
  },
  {
    "name": "as.number",
    "level": "extended",
    "type": "long",
    "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",
    "example": 15169
  },
  {
    "name": "as.organization.name",
    "level": "extended",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "Organization name.",
    "example": "Google LLC"
  },
  {
    "name": "@timestamp",
    "level": "core",
    "required": true,
    "type": "date",
    "description": "Date/time when the event originated. This is the date/time extracted from the event, typically representing when the event was generated by the source. If the event source has no original timestamp, this value is typically populated by the first time the event was received by the pipeline. Required field for all events.",
    "example": "2016-05-23T08:05:34.853Z"
  },
  {
    "name": "labels",
    "level": "core",
    "type": "object",
    "object_type": "keyword",
    "description": "Custom key/value pairs. Can be used to add meta information to events. Should not contain nested objects. All values are stored as keyword. Example: \`docker\` and \`k8s\` labels.",
    "example": {
      "application": "foo-bar",
      "env": "production"
    }
  },
  {
    "name": "message",
    "level": "core",
    "type": "text",
    "description": "For log events the message field contains the log message, optimized for viewing in a log viewer. For structured logs without an original message field, other fields can be concatenated to form a human-readable summary of the event. If multiple messages exist, they can be combined into one message.",
    "example": "Hello World"
  },
  {
    "name": "tags",
    "level": "core",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "List of keywords used to tag each event.",
    "example": "[\\"production\\", \\"env2\\"]"
  },
  {
    "name": "agent.ephemeral_id",
    "level": "extended",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "Ephemeral identifier of this agent (if one exists). This id normally changes across restarts, but \`agent.id\` does not.",
    "example": "8a4f500f"
  },
  {
    "name": "agent.id",
    "level": "core",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "Unique identifier of this agent (if one exists). Example: For Beats this would be beat.id.",
    "example": "8a4f500d"
  },
  {
    "name": "agent.name",
    "level": "core",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "Custom name of the agent. This is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from. If no name is given, the name is often left empty.",
    "example": "foo"
  },
  {
    "name": "agent.type",
    "level": "core",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "Type of the agent. The agent type stays always the same and should be given by the agent used. In case of Filebeat the agent would always be Filebeat also if two Filebeat instances are run on the same machine.",
    "example": "filebeat"
  },
  {
    "name": "agent.version",
    "level": "core",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "Version of the agent.",
    "example": "6.0.0-rc2"
  },
  {
    "name": "as.number",
    "level": "extended",
    "type": "long",
    "description": "Unique number allocated to the autonomous system. The autonomous system number (ASN) uniquely identifies each network on the Internet.",
    "example": 15169
  },
  {
    "name": "as.organization.name",
    "level": "extended",
    "type": "keyword",
    "ignore_above": 1024,
    "description": "Organization name.",
    "example": "Google LLC"
  },
  {
    "name": "nginx.access.remote_ip_list",
    "type": "array",
    "description": "An array of remote IP addresses. It is a list because it is common to include, besides the client IP address, IP addresses from headers like \`X-Forwarded-For\`. Real source IP is restored to \`source.ip\`.\\n"
  },
  {
    "name": "nginx.access.body_sent.bytes",
    "type": "alias",
    "path": "http.response.body.bytes",
    "migration": true
  },
  {
    "name": "nginx.access.user_name",
    "type": "alias",
    "path": "user.name",
    "migration": true
  },
  {
    "name": "nginx.access.method",
    "type": "alias",
    "path": "http.request.method",
    "migration": true
  },
  {
    "name": "nginx.access.url",
    "type": "alias",
    "path": "url.original",
    "migration": true
  },
  {
    "name": "nginx.access.http_version",
    "type": "alias",
    "path": "http.version",
    "migration": true
  },
  {
    "name": "nginx.access.response_code",
    "type": "alias",
    "path": "http.response.status_code",
    "migration": true
  },
  {
    "name": "nginx.access.referrer",
    "type": "alias",
    "path": "http.request.referrer",
    "migration": true
  },
  {
    "name": "nginx.access.agent",
    "type": "alias",
    "path": "user_agent.original",
    "migration": true
  },
  {
    "name": "nginx.access.user_agent.device",
    "type": "alias",
    "path": "user_agent.device.name",
    "migration": true
  },
  {
    "name": "nginx.access.user_agent.name",
    "type": "alias",
    "path": "user_agent.name",
    "migration": true
  },
  {
    "name": "nginx.access.user_agent.os",
    "type": "alias",
    "path": "user_agent.os.full_name",
    "migration": true
  },
  {
    "name": "nginx.access.user_agent.os_name",
    "type": "alias",
    "path": "user_agent.os.name",
    "migration": true
  },
  {
    "name": "nginx.access.user_agent.original",
    "type": "alias",
    "path": "user_agent.original",
    "migration": true
  },
  {
    "name": "nginx.access.geoip.continent_name",
    "type": "text",
    "path": "source.geo.continent_name"
  },
  {
    "name": "nginx.access.geoip.country_iso_code",
    "type": "alias",
    "path": "source.geo.country_iso_code",
    "migration": true
  },
  {
    "name": "nginx.access.geoip.location",
    "type": "alias",
    "path": "source.geo.location",
    "migration": true
  },
  {
    "name": "nginx.access.geoip.region_name",
    "type": "alias",
    "path": "source.geo.region_name",
    "migration": true
  },
  {
    "name": "nginx.access.geoip.city_name",
    "type": "alias",
    "path": "source.geo.city_name",
    "migration": true
  },
  {
    "name": "nginx.access.geoip.region_iso_code",
    "type": "alias",
    "path": "source.geo.region_iso_code",
    "migration": true
  },
  {
    "name": "source.geo.continent_name",
    "type": "text"
  },
  {
    "name": "country",
    "type": "",
    "multi_fields": [
      {
        "name": "keyword",
        "type": "keyword"
      },
      {
        "name": "text",
        "type": "text"
      }
    ]
  },
  {
    "name": "country.keyword",
    "type": "keyword"
  },
  {
    "name": "country.text",
    "type": "text"
  }
]
`;
