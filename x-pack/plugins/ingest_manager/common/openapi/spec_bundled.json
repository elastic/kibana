{
  "openapi": "3.0.0",
  "info": {
    "title": "Ingest Manager",
    "version": "0.2",
    "contact": {
      "name": "Ingest Team"
    },
    "license": {
      "name": "Elastic"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5601/api/ingest_manager",
      "description": "local"
    }
  ],
  "paths": {
    "/agent_policies": {
      "get": {
        "summary": "Agent policy - List",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AgentPolicy"
                      }
                    },
                    "total": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "perPage": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "total",
                    "page",
                    "perPage"
                  ]
                }
              }
            }
          }
        },
        "operationId": "agent-policy-list",
        "parameters": [
          {
            "$ref": "#/components/parameters/pageSizeParam"
          },
          {
            "$ref": "#/components/parameters/pageIndexParam"
          },
          {
            "$ref": "#/components/parameters/kueryParam"
          }
        ],
        "description": ""
      },
      "post": {
        "summary": "Agent policy - Create",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/AgentPolicy"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-agent-policy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAgentPolicy"
              }
            }
          }
        },
        "security": [],
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      }
    },
    "/agent_policies/{agent_policy_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "agent_policy_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Agent policy - Info",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/AgentPolicy"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          }
        },
        "operationId": "agent-policy-info",
        "description": "Get one agent policy",
        "parameters": []
      },
      "put": {
        "summary": "Agent policy - Update",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/AgentPolicy"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          }
        },
        "operationId": "put-agent-policy-agent_policy_id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewAgentPolicy"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      }
    },
    "/agent_policies/{agent_policy_id}/copy": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "agent_policy_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Agent policy - copy one policy",
        "operationId": "agent-policy-copy",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/AgentPolicy"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          },
          "description": ""
        },
        "description": "Copies one agent policy"
      }
    },
    "/agent_policies/delete": {
      "post": {
        "summary": "Agent policy - Delete",
        "operationId": "post-agent-policy-delete",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "success": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "id",
                      "success"
                    ]
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "agent_policy_ids": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      },
      "parameters": []
    },
    "/package_policies": {
      "get": {
        "summary": "PackagePolicies - List",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PackagePolicy"
                      }
                    },
                    "total": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "perPage": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-packagePolicies",
        "security": [],
        "parameters": []
      },
      "parameters": [],
      "post": {
        "summary": "PackagePolicies - Create",
        "operationId": "post-packagePolicies",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewPackagePolicy"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      }
    },
    "/package_policies/{package_policy_id}": {
      "get": {
        "summary": "PackagePolicies - Info",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/PackagePolicy"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-packagePolicies-package_policy_id"
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "package_policy_id",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "summary": "PackagePolicies - Update",
        "operationId": "put-packagePolicies-package_policy_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "$ref": "#/components/schemas/PackagePolicy"
                    },
                    "sucess": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "item",
                    "sucess"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      }
    },
    "/fleet/setup": {
      "get": {
        "summary": "Fleet setup - Info",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isInitialized": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "isInitialized"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-fleet-setup",
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "post": {
        "summary": "Fleet setup - Create",
        "operationId": "post-fleet-setup",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isInitialized": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "isInitialized"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "admin_username": {
                    "type": "string"
                  },
                  "admin_password": {
                    "type": "string"
                  }
                },
                "required": [
                  "admin_username",
                  "admin_password"
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      }
    },
    "/epm/packages/{pkgkey}": {
      "get": {
        "summary": "EPM - Packages - Info",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "properties": {
                        "response": {
                          "$ref": "#/components/schemas/PackageInfo"
                        }
                      }
                    },
                    {
                      "properties": {
                        "status": {
                          "type": "string",
                          "enum": [
                            "installed",
                            "not_installed"
                          ]
                        },
                        "savedObject": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "status",
                        "savedObject"
                      ]
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-epm-package-pkgkey",
        "security": [
          {
            "basic_auth": []
          }
        ]
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "pkgkey",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "EPM - Packages - Install",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "response"
                  ]
                }
              }
            }
          }
        },
        "operationId": "post-epm-install-pkgkey",
        "description": "",
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      },
      "delete": {
        "summary": "EPM - Packages - Delete",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "response": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type"
                        ]
                      }
                    }
                  },
                  "required": [
                    "response"
                  ]
                }
              }
            }
          }
        },
        "operationId": "post-epm-delete-pkgkey",
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      }
    },
    "/epm/packages": {
      "get": {
        "summary": "EPM - Packages - List",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchResult"
                  }
                }
              }
            }
          }
        },
        "operationId": "get-epm-list"
      },
      "parameters": []
    },
    "/epm/categories": {
      "get": {
        "summary": "EPM - Categories",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "count": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "id",
                      "title",
                      "count"
                    ]
                  }
                }
              }
            }
          }
        },
        "operationId": "get-epm-categories"
      }
    },
    "/fleet/agents": {
      "get": {
        "summary": "Fleet - Agent - List",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "list": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "total": {
                      "type": "number"
                    },
                    "page": {
                      "type": "number"
                    },
                    "perPage": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "list",
                    "total",
                    "page",
                    "perPage"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-fleet-agents",
        "security": [
          {
            "basic_auth": []
          }
        ]
      }
    },
    "/fleet/agents/{agent_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "agent_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fleet - Agent - Info",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "item": {
                      "type": "object"
                    }
                  },
                  "required": [
                    "item"
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-fleet-agents-agent_id"
      },
      "put": {
        "summary": "Fleet - Agent - Update",
        "tags": [],
        "responses": {},
        "operationId": "put-fleet-agents-agent_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      },
      "delete": {
        "summary": "Fleet - Agent - Delete",
        "tags": [],
        "responses": {},
        "operationId": "delete-fleet-agents-agent_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      }
    },
    "/fleet/agents/{agent_id}/events": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "agent_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fleet - Agent - Events",
        "tags": [],
        "responses": {},
        "operationId": "get-fleet-agents-agent_id-events"
      }
    },
    "/fleet/agents/{agent_id}/checkin": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "agent_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Fleet - Agent - Check In",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "enum": [
                        "checkin"
                      ]
                    },
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "agent_id": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object"
                          },
                          "id": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "type": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "agent_id",
                          "data",
                          "id",
                          "created_at",
                          "type"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-fleet-agents-agent_id-checkin",
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ],
        "security": [
          {
            "access_api_key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "local_metadata": {
                    "$ref": "#/components/schemas/AgentMetadata"
                  },
                  "events": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/NewAgentEvent"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fleet/agents/{agent_id}/acks": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "agent_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Fleet - Agent - Acks",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "enum": [
                        "acks"
                      ]
                    }
                  },
                  "required": [
                    "action"
                  ]
                }
              }
            }
          }
        },
        "operationId": "post-fleet-agents-agent_id-acks",
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        }
      }
    },
    "/fleet/agents/{agent_id}/unenroll": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "agent_id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Fleet - Agent - Unenroll",
        "tags": [],
        "responses": {},
        "operationId": "post-fleet-agents-unenroll",
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "force": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fleet/agents/enroll": {
      "post": {
        "summary": "Fleet - Agent - Enroll",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "item": {
                      "$ref": "#/components/schemas/Agent"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-fleet-agents-enroll",
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "PERMANENT",
                      "EPHEMERAL",
                      "TEMPORARY"
                    ]
                  },
                  "shared_id": {
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object",
                    "required": [
                      "local",
                      "user_provided"
                    ],
                    "properties": {
                      "local": {
                        "$ref": "#/components/schemas/AgentMetadata"
                      },
                      "user_provided": {
                        "$ref": "#/components/schemas/AgentMetadata"
                      }
                    }
                  }
                },
                "required": [
                  "type",
                  "metadata"
                ]
              }
            }
          }
        },
        "security": [
          {
            "enrollment_api_key": []
          }
        ]
      }
    },
    "/fleet/agent-status": {
      "get": {
        "summary": "Fleet - Agent - Status for policy",
        "tags": [],
        "responses": {},
        "operationId": "get-fleet-agent-status",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "policyId",
            "in": "query",
            "required": false
          }
        ]
      }
    },
    "/fleet/enrollment-api-keys": {
      "get": {
        "summary": "Enrollment - List",
        "tags": [],
        "responses": {},
        "operationId": "get-fleet-enrollment-api-keys",
        "parameters": []
      },
      "post": {
        "summary": "Enrollment - Create",
        "tags": [],
        "responses": {},
        "operationId": "post-fleet-enrollment-api-keys",
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      }
    },
    "/fleet/enrollment-api-keys/{key_id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "key_id",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Enrollment - Info",
        "tags": [],
        "responses": {},
        "operationId": "get-fleet-enrollment-api-keys-key_id"
      },
      "delete": {
        "summary": "Enrollment - Delete",
        "tags": [],
        "responses": {},
        "operationId": "delete-fleet-enrollment-api-keys-key_id",
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      }
    },
    "/setup": {
      "post": {
        "summary": "Ingest Manager - Setup",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isInitialized": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "post-setup",
        "parameters": [
          {
            "$ref": "#/components/parameters/xsrfHeader"
          }
        ]
      }
    },
    "/fleet/install/{os_type}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "os_type",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Fleet - Get OS install script",
        "tags": [],
        "responses": {},
        "operationId": "get-fleet-install-os_type"
      }
    }
  },
  "components": {
    "schemas": {
      "AgentPolicy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/NewAgentPolicy"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "status": {
                "type": "string",
                "enum": [
                  "active",
                  "inactive"
                ]
              },
              "packagePolicies": {
                "oneOf": [
                  {
                    "items": {
                      "type": "string"
                    }
                  },
                  {
                    "items": {
                      "$ref": "#/components/schemas/PackagePolicy"
                    }
                  }
                ],
                "type": "array"
              },
              "updated_on": {
                "type": "string",
                "format": "date-time"
              },
              "updated_by": {
                "type": "string"
              },
              "revision": {
                "type": "number"
              },
              "agents": {
                "type": "number"
              }
            },
            "required": [
              "id",
              "status"
            ]
          }
        ]
      },
      "PackagePolicy": {
        "title": "PackagePolicy",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "revision": {
                "type": "number"
              },
              "inputs": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "id",
              "revision"
            ]
          },
          {
            "$ref": "#/components/schemas/NewPackagePolicy"
          }
        ]
      },
      "NewAgentPolicy": {
        "title": "NewAgentPolicy",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "namespace": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "NewPackagePolicy": {
        "title": "NewPackagePolicy",
        "type": "object",
        "description": "",
        "properties": {
          "enabled": {
            "type": "boolean"
          },
          "package": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "version": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "version",
              "title"
            ]
          },
          "namespace": {
            "type": "string"
          },
          "output_id": {
            "type": "string"
          },
          "inputs": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                },
                "processors": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "streams": {
                  "type": "array",
                  "items": {}
                },
                "config": {
                  "type": "object"
                },
                "vars": {
                  "type": "object"
                }
              },
              "required": [
                "type",
                "enabled",
                "streams"
              ]
            }
          },
          "policy_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "output_id",
          "inputs",
          "policy_id",
          "name"
        ]
      },
      "PackageInfo": {
        "title": "PackageInfo",
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "readme": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "requirement": {
            "oneOf": [
              {
                "properties": {
                  "kibana": {
                    "type": "object",
                    "properties": {
                      "versions": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "elasticsearch": {
                    "type": "object",
                    "properties": {
                      "versions": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            ],
            "type": "object"
          },
          "screenshots": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "src": {
                  "type": "string"
                },
                "path": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "size": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "src",
                "path"
              ]
            }
          },
          "icons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assets": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "internal": {
            "type": "boolean"
          },
          "format_version": {
            "type": "string"
          },
          "datasets": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "title": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "release": {
                  "type": "string"
                },
                "ingeset_pipeline": {
                  "type": "string"
                },
                "vars": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "default": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "default"
                    ]
                  }
                },
                "type": {
                  "type": "string"
                },
                "package": {
                  "type": "string"
                }
              },
              "required": [
                "title",
                "name",
                "release",
                "ingeset_pipeline",
                "type",
                "package"
              ]
            }
          },
          "download": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "removable": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "title",
          "version",
          "description",
          "type",
          "categories",
          "requirement",
          "assets",
          "format_version",
          "download",
          "path"
        ]
      },
      "SearchResult": {
        "title": "SearchResult",
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "download": {
            "type": "string"
          },
          "icons": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "savedObject": {
            "type": "object"
          }
        },
        "required": [
          "description",
          "download",
          "icons",
          "name",
          "path",
          "title",
          "type",
          "version",
          "status"
        ]
      },
      "AgentStatus": {
        "type": "string",
        "title": "AgentStatus",
        "enum": [
          "offline",
          "error",
          "online",
          "inactive",
          "warning"
        ]
      },
      "Agent": {
        "title": "Agent",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AgentType"
          },
          "active": {
            "type": "boolean"
          },
          "enrolled_at": {
            "type": "string"
          },
          "unenrolled_at": {
            "type": "string"
          },
          "unenrollment_started_at": {
            "type": "string"
          },
          "shared_id": {
            "type": "string"
          },
          "access_api_key_id": {
            "type": "string"
          },
          "default_api_key_id": {
            "type": "string"
          },
          "policy_id": {
            "type": "string"
          },
          "policy_revision": {
            "type": "number",
            "nullable": true
          },
          "last_checkin": {
            "type": "string"
          },
          "user_provided_metadata": {
            "$ref": "#/components/schemas/AgentMetadata"
          },
          "local_metadata": {
            "$ref": "#/components/schemas/AgentMetadata"
          },
          "id": {
            "type": "string"
          },
          "current_error_events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AgentEvent"
            }
          },
          "access_api_key": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/AgentStatus"
          },
          "default_api_key": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "active",
          "enrolled_at",
          "id",
          "current_error_events",
          "status"
        ]
      },
      "AgentType": {
        "type": "string",
        "title": "AgentType",
        "enum": [
          "PERMANENT",
          "EPHEMERAL",
          "TEMPORARY"
        ]
      },
      "AgentMetadata": {
        "title": "AgentMetadata",
        "type": "object"
      },
      "NewAgentEvent": {
        "title": "NewAgentEvent",
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "STATE",
              "ERROR",
              "ACTION_RESULT",
              "ACTION"
            ]
          },
          "subtype": {
            "type": "string",
            "enum": [
              "RUNNING",
              "STARTING",
              "IN_PROGRESS",
              "CONFIG",
              "FAILED",
              "STOPPING",
              "STOPPED",
              "DEGRADED",
              "DATA_DUMP",
              "ACKNOWLEDGED",
              "UNKNOWN"
            ]
          },
          "timestamp": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "payload": {
            "type": "string"
          },
          "agent_id": {
            "type": "string"
          },
          "policy_id": {
            "type": "string"
          },
          "stream_id": {
            "type": "string"
          },
          "action_id": {
            "type": "string"
          }
        },
        "required": [
          "type",
          "subtype",
          "timestamp",
          "message",
          "agent_id"
        ]
      },
      "AgentEvent": {
        "title": "AgentEvent",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "$ref": "#/components/schemas/NewAgentEvent"
          }
        ]
      },
      "AccessApiKey": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header",
        "description": "e.g. Authorization: ApiKey base64AccessApiKey"
      },
      "EnrollmentApiKey": {
        "type": "string",
        "title": "EnrollmentApiKey",
        "format": "byte"
      }
    },
    "parameters": {
      "pageSizeParam": {
        "name": "perPage",
        "in": "query",
        "description": "The number of items to return",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 50
        }
      },
      "pageIndexParam": {
        "name": "page",
        "in": "query",
        "required": false,
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "kueryParam": {
        "name": "kuery",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "xsrfHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "kbn-xsrf",
        "required": true
      }
    },
    "securitySchemes": {
      "basic_auth": {
        "type": "http",
        "scheme": "basic"
      },
      "enrollment_api_key": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header",
        "description": "e.g. Authorization: ApiKey base64EnrollmentApiKey"
      },
      "access_api_key": {
        "name": "Authorization",
        "type": "apiKey",
        "in": "header",
        "description": "e.g. Authorization: ApiKey base64AccessApiKey"
      }
    }
  },
  "security": [
    {
      "basic_auth": []
    }
  ]
}
