/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */

/**
 * This file was auto-generated by swagger-to-ts.
 * Do not make direct changes to the file.
 */
// eslint-disable-next-line @typescript-eslint/class-name-casing
export interface components {
  schemas: {
    IndexData: { version: string; 'service.name': string };
    Category: { id: string; title: string; count: number };
    Image: { src: string; title?: string; size?: string; type?: string };
    ProductRequirement: { versions?: string };
    Requirement: { Kibana: components['schemas']['ProductRequirement'] };
    Dataset: {
      type: string;
      name?: string;
      title: string;
      release: string;
      ingest_pipeline?: string;
      streams?: components['schemas']['Stream'];
      package?: string;
      path?: string;
    };
    Stream: {
      input: string;
      vars?: components['schemas']['Variable'];
      dataset?: string;
      template_path?: string;
      title?: string;
      description?: string;
      enabled?: boolean;
    };
    Input: {
      type: string;
      vars?: components['schemas']['Variable'];
      title?: string;
      description?: string;
      streams?: components['schemas']['Stream'];
    };
    Variable: {
      name: string;
      type: string;
      title?: string;
      description?: string;
      multi: boolean;
      required: boolean;
      show_user: boolean;
      default?: { [key: string]: any };
    };
    BasePackage: {
      name: string;
      title?: string;
      version: string;
      description: string;
      type: string;
      download?: string;
      downloads?: Array<components['schemas']['Download']>;
      path?: string;
      icons?: Array<components['schemas']['Image']>;
      internal?: string;
    };
    Download: { path: string; type: string };
    Package: components['schemas']['BasePackage'] & {
      format_version: string;
      readme?: string;
      license?: string;
      categories: string[];
      release?: string;
      requirement: components['schemas']['Requirement'];
      screenshots?: components['schemas']['Image'];
      assets?: string[];
      config_templates?: Array<components['schemas']['ConfigTemplate']>;
      datasets?: Array<components['schemas']['Dataset']>;
      owner?: components['schemas']['Owner'];
    };
    ConfigTemplate: {
      name: string;
      title: string;
      description: string;
      inputs: Array<components['schemas']['Input']>;
      multiple?: boolean;
    };
    Owner: { github?: string };
  };
}
