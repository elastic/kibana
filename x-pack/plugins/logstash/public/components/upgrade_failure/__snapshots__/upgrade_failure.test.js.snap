// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UpgradeFailure component passes expected text for new pipeline 1`] = `
<UpgradeFailure
  intl={
    Object {
      "defaultFormats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  isManualUpgrade={true}
  isNewPipeline={true}
  onClose={[MockFunction]}
  onRetry={[MockFunction]}
>
  <EuiPage
    data-test-subj="pipelineEdit upgradeFailure"
    restrictWidth={false}
    style={
      Object {
        "minHeight": "100vh",
      }
    }
  >
    <div
      className="euiPage"
      data-test-subj="pipelineEdit upgradeFailure"
      style={
        Object {
          "minHeight": "100vh",
        }
      }
    >
      <EuiPageContent
        panelPaddingSize="l"
      >
        <EuiPanel
          className="euiPageContent"
          grow={true}
          hasShadow={false}
          paddingSize="l"
        >
          <div
            className="euiPanel euiPanel--paddingLarge euiPageContent"
          >
            <EuiEmptyPrompt
              actions={
                <UpgradeFailureActions
                  onClose={[MockFunction]}
                  onRetry={[MockFunction]}
                  upgradeButtonText="Try again"
                />
              }
              body={
                <p
                  style={
                    Object {
                      "textAlign": "left",
                    }
                  }
                >
                  Before you can add a pipeline, we need to upgrade your configuration.
                </p>
              }
              iconColor="subdued"
              title={
                <UpgradeFailureTitle
                  titleText="Upgrade failed"
                />
              }
            >
              <div
                className="euiEmptyPrompt"
              >
                <EuiTextColor
                  color="subdued"
                  component="span"
                >
                  <span
                    className="euiTextColor euiTextColor--subdued"
                  >
                    <EuiTitle
                      size="m"
                      textTransform="none"
                    >
                      <UpgradeFailureTitle
                        className="euiTitle euiTitle--medium"
                        titleText="Upgrade failed"
                      >
                        <EuiFlexGroup
                          alignItems="stretch"
                          component="div"
                          direction="row"
                          gutterSize="l"
                          justifyContent="flexStart"
                          responsive={true}
                          wrap={false}
                        >
                          <div
                            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                          >
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <EuiIcon
                                  size="xl"
                                  type="alert"
                                >
                                  <alert
                                    className="euiIcon euiIcon--xLarge"
                                    focusable="false"
                                    height="16"
                                    style={
                                      Object {
                                        "fill": undefined,
                                      }
                                    }
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <svg
                                      className="euiIcon euiIcon--xLarge"
                                      focusable="false"
                                      height="16"
                                      style={
                                        Object {
                                          "fill": undefined,
                                        }
                                      }
                                      viewBox="0 0 16 16"
                                      width="16"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <g
                                        fillRule="evenodd"
                                      >
                                        <path
                                          d="M7.5 2.236L1.618 14h11.764L7.5 2.236zm.894-.447l5.882 11.764A1 1 0 0 1 13.382 15H1.618a1 1 0 0 1-.894-1.447L6.606 1.789a1 1 0 0 1 1.788 0z"
                                        />
                                        <path
                                          d="M7 6h1v5H7zM7 12h1v1H7z"
                                        />
                                      </g>
                                    </svg>
                                  </alert>
                                </EuiIcon>
                              </div>
                            </EuiFlexItem>
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <EuiTitle
                                  size="m"
                                  textTransform="none"
                                >
                                  <h2
                                    className="euiTitle euiTitle--medium"
                                  >
                                    Upgrade failed
                                  </h2>
                                </EuiTitle>
                              </div>
                            </EuiFlexItem>
                          </div>
                        </EuiFlexGroup>
                      </UpgradeFailureTitle>
                    </EuiTitle>
                    <EuiSpacer
                      size="m"
                    >
                      <div
                        className="euiSpacer euiSpacer--m"
                      />
                    </EuiSpacer>
                    <EuiText
                      grow={true}
                      size="m"
                    >
                      <div
                        className="euiText euiText--medium"
                      >
                        <p
                          style={
                            Object {
                              "textAlign": "left",
                            }
                          }
                        >
                          Before you can add a pipeline, we need to upgrade your configuration.
                        </p>
                      </div>
                    </EuiText>
                  </span>
                </EuiTextColor>
                <EuiSpacer
                  size="l"
                >
                  <div
                    className="euiSpacer euiSpacer--l"
                  />
                </EuiSpacer>
                <EuiSpacer
                  size="s"
                >
                  <div
                    className="euiSpacer euiSpacer--s"
                  />
                </EuiSpacer>
                <UpgradeFailureActions
                  onClose={[MockFunction]}
                  onRetry={[MockFunction]}
                  upgradeButtonText="Try again"
                >
                  <EuiFlexGroup
                    alignItems="stretch"
                    component="div"
                    direction="row"
                    gutterSize="l"
                    justifyContent="flexStart"
                    responsive={true}
                    wrap={false}
                  >
                    <div
                      className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                    >
                      <EuiFlexItem
                        component="div"
                        grow={false}
                      >
                        <div
                          className="euiFlexItem euiFlexItem--flexGrowZero"
                        >
                          <EuiButton
                            color="primary"
                            fill={true}
                            iconSide="left"
                            onClick={[MockFunction]}
                            type="button"
                          >
                            <button
                              className="euiButton euiButton--primary euiButton--fill"
                              onClick={[MockFunction]}
                              type="button"
                            >
                              <span
                                className="euiButton__content"
                              >
                                <span
                                  className="euiButton__text"
                                >
                                  Try again
                                </span>
                              </span>
                            </button>
                          </EuiButton>
                        </div>
                      </EuiFlexItem>
                      <EuiFlexItem
                        component="div"
                        grow={false}
                      >
                        <div
                          className="euiFlexItem euiFlexItem--flexGrowZero"
                        >
                          <EuiButtonEmpty
                            color="primary"
                            iconSide="left"
                            onClick={[MockFunction]}
                            type="button"
                          >
                            <button
                              className="euiButtonEmpty euiButtonEmpty--primary"
                              onClick={[MockFunction]}
                              type="button"
                            >
                              <span
                                className="euiButtonEmpty__content"
                              >
                                <span
                                  className="euiButtonEmpty__text"
                                >
                                  <FormattedMessage
                                    defaultMessage="Go back"
                                    id="xpack.logstash.upgradeFailureActions.goBackButtonLabel"
                                    values={Object {}}
                                  >
                                    Go back
                                  </FormattedMessage>
                                </span>
                              </span>
                            </button>
                          </EuiButtonEmpty>
                        </div>
                      </EuiFlexItem>
                    </div>
                  </EuiFlexGroup>
                </UpgradeFailureActions>
              </div>
            </EuiEmptyPrompt>
          </div>
        </EuiPanel>
      </EuiPageContent>
    </div>
  </EuiPage>
</UpgradeFailure>
`;

exports[`UpgradeFailure component passes expected text for not manual upgrade 1`] = `
<UpgradeFailure
  intl={
    Object {
      "defaultFormats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  isManualUpgrade={false}
  isNewPipeline={true}
  onClose={[MockFunction]}
  onRetry={[MockFunction]}
>
  <EuiPage
    data-test-subj="pipelineEdit upgradeFailure"
    restrictWidth={false}
    style={
      Object {
        "minHeight": "100vh",
      }
    }
  >
    <div
      className="euiPage"
      data-test-subj="pipelineEdit upgradeFailure"
      style={
        Object {
          "minHeight": "100vh",
        }
      }
    >
      <EuiPageContent
        panelPaddingSize="l"
      >
        <EuiPanel
          className="euiPageContent"
          grow={true}
          hasShadow={false}
          paddingSize="l"
        >
          <div
            className="euiPanel euiPanel--paddingLarge euiPageContent"
          >
            <EuiEmptyPrompt
              actions={
                <UpgradeFailureActions
                  onClose={[MockFunction]}
                  onRetry={[MockFunction]}
                  upgradeButtonText="Upgrade"
                />
              }
              body={
                <p
                  style={
                    Object {
                      "textAlign": "left",
                    }
                  }
                >
                  Before you can add a pipeline, we need to upgrade your configuration.
                </p>
              }
              iconColor="subdued"
              title={
                <UpgradeFailureTitle
                  titleText="Time for an upgrade!"
                />
              }
            >
              <div
                className="euiEmptyPrompt"
              >
                <EuiTextColor
                  color="subdued"
                  component="span"
                >
                  <span
                    className="euiTextColor euiTextColor--subdued"
                  >
                    <EuiTitle
                      size="m"
                      textTransform="none"
                    >
                      <UpgradeFailureTitle
                        className="euiTitle euiTitle--medium"
                        titleText="Time for an upgrade!"
                      >
                        <EuiFlexGroup
                          alignItems="stretch"
                          component="div"
                          direction="row"
                          gutterSize="l"
                          justifyContent="flexStart"
                          responsive={true}
                          wrap={false}
                        >
                          <div
                            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                          >
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <EuiIcon
                                  size="xl"
                                  type="alert"
                                >
                                  <alert
                                    className="euiIcon euiIcon--xLarge"
                                    focusable="false"
                                    height="16"
                                    style={
                                      Object {
                                        "fill": undefined,
                                      }
                                    }
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <svg
                                      className="euiIcon euiIcon--xLarge"
                                      focusable="false"
                                      height="16"
                                      style={
                                        Object {
                                          "fill": undefined,
                                        }
                                      }
                                      viewBox="0 0 16 16"
                                      width="16"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <g
                                        fillRule="evenodd"
                                      >
                                        <path
                                          d="M7.5 2.236L1.618 14h11.764L7.5 2.236zm.894-.447l5.882 11.764A1 1 0 0 1 13.382 15H1.618a1 1 0 0 1-.894-1.447L6.606 1.789a1 1 0 0 1 1.788 0z"
                                        />
                                        <path
                                          d="M7 6h1v5H7zM7 12h1v1H7z"
                                        />
                                      </g>
                                    </svg>
                                  </alert>
                                </EuiIcon>
                              </div>
                            </EuiFlexItem>
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <EuiTitle
                                  size="m"
                                  textTransform="none"
                                >
                                  <h2
                                    className="euiTitle euiTitle--medium"
                                  >
                                    Time for an upgrade!
                                  </h2>
                                </EuiTitle>
                              </div>
                            </EuiFlexItem>
                          </div>
                        </EuiFlexGroup>
                      </UpgradeFailureTitle>
                    </EuiTitle>
                    <EuiSpacer
                      size="m"
                    >
                      <div
                        className="euiSpacer euiSpacer--m"
                      />
                    </EuiSpacer>
                    <EuiText
                      grow={true}
                      size="m"
                    >
                      <div
                        className="euiText euiText--medium"
                      >
                        <p
                          style={
                            Object {
                              "textAlign": "left",
                            }
                          }
                        >
                          Before you can add a pipeline, we need to upgrade your configuration.
                        </p>
                      </div>
                    </EuiText>
                  </span>
                </EuiTextColor>
                <EuiSpacer
                  size="l"
                >
                  <div
                    className="euiSpacer euiSpacer--l"
                  />
                </EuiSpacer>
                <EuiSpacer
                  size="s"
                >
                  <div
                    className="euiSpacer euiSpacer--s"
                  />
                </EuiSpacer>
                <UpgradeFailureActions
                  onClose={[MockFunction]}
                  onRetry={[MockFunction]}
                  upgradeButtonText="Upgrade"
                >
                  <EuiFlexGroup
                    alignItems="stretch"
                    component="div"
                    direction="row"
                    gutterSize="l"
                    justifyContent="flexStart"
                    responsive={true}
                    wrap={false}
                  >
                    <div
                      className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                    >
                      <EuiFlexItem
                        component="div"
                        grow={false}
                      >
                        <div
                          className="euiFlexItem euiFlexItem--flexGrowZero"
                        >
                          <EuiButton
                            color="primary"
                            fill={true}
                            iconSide="left"
                            onClick={[MockFunction]}
                            type="button"
                          >
                            <button
                              className="euiButton euiButton--primary euiButton--fill"
                              onClick={[MockFunction]}
                              type="button"
                            >
                              <span
                                className="euiButton__content"
                              >
                                <span
                                  className="euiButton__text"
                                >
                                  Upgrade
                                </span>
                              </span>
                            </button>
                          </EuiButton>
                        </div>
                      </EuiFlexItem>
                      <EuiFlexItem
                        component="div"
                        grow={false}
                      >
                        <div
                          className="euiFlexItem euiFlexItem--flexGrowZero"
                        >
                          <EuiButtonEmpty
                            color="primary"
                            iconSide="left"
                            onClick={[MockFunction]}
                            type="button"
                          >
                            <button
                              className="euiButtonEmpty euiButtonEmpty--primary"
                              onClick={[MockFunction]}
                              type="button"
                            >
                              <span
                                className="euiButtonEmpty__content"
                              >
                                <span
                                  className="euiButtonEmpty__text"
                                >
                                  <FormattedMessage
                                    defaultMessage="Go back"
                                    id="xpack.logstash.upgradeFailureActions.goBackButtonLabel"
                                    values={Object {}}
                                  >
                                    Go back
                                  </FormattedMessage>
                                </span>
                              </span>
                            </button>
                          </EuiButtonEmpty>
                        </div>
                      </EuiFlexItem>
                    </div>
                  </EuiFlexGroup>
                </UpgradeFailureActions>
              </div>
            </EuiEmptyPrompt>
          </div>
        </EuiPanel>
      </EuiPageContent>
    </div>
  </EuiPage>
</UpgradeFailure>
`;

exports[`UpgradeFailure component passes expected text for not new pipeline 1`] = `
<UpgradeFailure
  intl={
    Object {
      "defaultFormats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {},
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  isManualUpgrade={true}
  isNewPipeline={false}
  onClose={[MockFunction]}
  onRetry={[MockFunction]}
>
  <EuiPage
    data-test-subj="pipelineEdit upgradeFailure"
    restrictWidth={false}
    style={
      Object {
        "minHeight": "100vh",
      }
    }
  >
    <div
      className="euiPage"
      data-test-subj="pipelineEdit upgradeFailure"
      style={
        Object {
          "minHeight": "100vh",
        }
      }
    >
      <EuiPageContent
        panelPaddingSize="l"
      >
        <EuiPanel
          className="euiPageContent"
          grow={true}
          hasShadow={false}
          paddingSize="l"
        >
          <div
            className="euiPanel euiPanel--paddingLarge euiPageContent"
          >
            <EuiEmptyPrompt
              actions={
                <UpgradeFailureActions
                  onClose={[MockFunction]}
                  onRetry={[MockFunction]}
                  upgradeButtonText="Try again"
                />
              }
              body={
                <p
                  style={
                    Object {
                      "textAlign": "left",
                    }
                  }
                >
                  Before you can edit this pipeline, we need to upgrade your configuration.
                </p>
              }
              iconColor="subdued"
              title={
                <UpgradeFailureTitle
                  titleText="Upgrade failed"
                />
              }
            >
              <div
                className="euiEmptyPrompt"
              >
                <EuiTextColor
                  color="subdued"
                  component="span"
                >
                  <span
                    className="euiTextColor euiTextColor--subdued"
                  >
                    <EuiTitle
                      size="m"
                      textTransform="none"
                    >
                      <UpgradeFailureTitle
                        className="euiTitle euiTitle--medium"
                        titleText="Upgrade failed"
                      >
                        <EuiFlexGroup
                          alignItems="stretch"
                          component="div"
                          direction="row"
                          gutterSize="l"
                          justifyContent="flexStart"
                          responsive={true}
                          wrap={false}
                        >
                          <div
                            className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                          >
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <EuiIcon
                                  size="xl"
                                  type="alert"
                                >
                                  <alert
                                    className="euiIcon euiIcon--xLarge"
                                    focusable="false"
                                    height="16"
                                    style={
                                      Object {
                                        "fill": undefined,
                                      }
                                    }
                                    viewBox="0 0 16 16"
                                    width="16"
                                    xmlns="http://www.w3.org/2000/svg"
                                  >
                                    <svg
                                      className="euiIcon euiIcon--xLarge"
                                      focusable="false"
                                      height="16"
                                      style={
                                        Object {
                                          "fill": undefined,
                                        }
                                      }
                                      viewBox="0 0 16 16"
                                      width="16"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <g
                                        fillRule="evenodd"
                                      >
                                        <path
                                          d="M7.5 2.236L1.618 14h11.764L7.5 2.236zm.894-.447l5.882 11.764A1 1 0 0 1 13.382 15H1.618a1 1 0 0 1-.894-1.447L6.606 1.789a1 1 0 0 1 1.788 0z"
                                        />
                                        <path
                                          d="M7 6h1v5H7zM7 12h1v1H7z"
                                        />
                                      </g>
                                    </svg>
                                  </alert>
                                </EuiIcon>
                              </div>
                            </EuiFlexItem>
                            <EuiFlexItem
                              component="div"
                              grow={false}
                            >
                              <div
                                className="euiFlexItem euiFlexItem--flexGrowZero"
                              >
                                <EuiTitle
                                  size="m"
                                  textTransform="none"
                                >
                                  <h2
                                    className="euiTitle euiTitle--medium"
                                  >
                                    Upgrade failed
                                  </h2>
                                </EuiTitle>
                              </div>
                            </EuiFlexItem>
                          </div>
                        </EuiFlexGroup>
                      </UpgradeFailureTitle>
                    </EuiTitle>
                    <EuiSpacer
                      size="m"
                    >
                      <div
                        className="euiSpacer euiSpacer--m"
                      />
                    </EuiSpacer>
                    <EuiText
                      grow={true}
                      size="m"
                    >
                      <div
                        className="euiText euiText--medium"
                      >
                        <p
                          style={
                            Object {
                              "textAlign": "left",
                            }
                          }
                        >
                          Before you can edit this pipeline, we need to upgrade your configuration.
                        </p>
                      </div>
                    </EuiText>
                  </span>
                </EuiTextColor>
                <EuiSpacer
                  size="l"
                >
                  <div
                    className="euiSpacer euiSpacer--l"
                  />
                </EuiSpacer>
                <EuiSpacer
                  size="s"
                >
                  <div
                    className="euiSpacer euiSpacer--s"
                  />
                </EuiSpacer>
                <UpgradeFailureActions
                  onClose={[MockFunction]}
                  onRetry={[MockFunction]}
                  upgradeButtonText="Try again"
                >
                  <EuiFlexGroup
                    alignItems="stretch"
                    component="div"
                    direction="row"
                    gutterSize="l"
                    justifyContent="flexStart"
                    responsive={true}
                    wrap={false}
                  >
                    <div
                      className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                    >
                      <EuiFlexItem
                        component="div"
                        grow={false}
                      >
                        <div
                          className="euiFlexItem euiFlexItem--flexGrowZero"
                        >
                          <EuiButton
                            color="primary"
                            fill={true}
                            iconSide="left"
                            onClick={[MockFunction]}
                            type="button"
                          >
                            <button
                              className="euiButton euiButton--primary euiButton--fill"
                              onClick={[MockFunction]}
                              type="button"
                            >
                              <span
                                className="euiButton__content"
                              >
                                <span
                                  className="euiButton__text"
                                >
                                  Try again
                                </span>
                              </span>
                            </button>
                          </EuiButton>
                        </div>
                      </EuiFlexItem>
                      <EuiFlexItem
                        component="div"
                        grow={false}
                      >
                        <div
                          className="euiFlexItem euiFlexItem--flexGrowZero"
                        >
                          <EuiButtonEmpty
                            color="primary"
                            iconSide="left"
                            onClick={[MockFunction]}
                            type="button"
                          >
                            <button
                              className="euiButtonEmpty euiButtonEmpty--primary"
                              onClick={[MockFunction]}
                              type="button"
                            >
                              <span
                                className="euiButtonEmpty__content"
                              >
                                <span
                                  className="euiButtonEmpty__text"
                                >
                                  <FormattedMessage
                                    defaultMessage="Go back"
                                    id="xpack.logstash.upgradeFailureActions.goBackButtonLabel"
                                    values={Object {}}
                                  >
                                    Go back
                                  </FormattedMessage>
                                </span>
                              </span>
                            </button>
                          </EuiButtonEmpty>
                        </div>
                      </EuiFlexItem>
                    </div>
                  </EuiFlexGroup>
                </UpgradeFailureActions>
              </div>
            </EuiEmptyPrompt>
          </div>
        </EuiPanel>
      </EuiPageContent>
    </div>
  </EuiPage>
</UpgradeFailure>
`;

exports[`UpgradeFailure component renders component as expected 1`] = `
<EuiPage
  data-test-subj="pipelineEdit upgradeFailure"
  restrictWidth={false}
  style={
    Object {
      "minHeight": "100vh",
    }
  }
>
  <EuiPageContent
    panelPaddingSize="l"
  >
    <EuiEmptyPrompt
      actions={
        <UpgradeFailureActions
          onClose={[MockFunction]}
          onRetry={[MockFunction]}
          upgradeButtonText="Try again"
        />
      }
      body={
        <p
          style={
            Object {
              "textAlign": "left",
            }
          }
        >
          Before you can add a pipeline, we need to upgrade your configuration.
        </p>
      }
      iconColor="subdued"
      title={
        <UpgradeFailureTitle
          titleText="Upgrade failed"
        />
      }
    />
  </EuiPageContent>
</EuiPage>
`;
