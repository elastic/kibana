// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render BoundaryIndexExpression 1`] = `
<ExpressionWithPopover
  defaultValue="Select an index pattern and geo shape field"
  expressionDescription="index"
  popoverContent={
    <React.Fragment>
      <EuiFormRow
        describedByIds={Array []}
        display="row"
        fullWidth={true}
        hasChildLabel={true}
        hasEmptyLabelSpace={false}
        id="geoIndexPatternSelect"
        labelType="label"
      >
        <GeoIndexPatternSelect
          IndexPatternSelectComponent={null}
          http={null}
          includedGeoTypes={
            Array [
              "geo_shape",
            ]
          }
          onChange={[Function]}
        />
      </EuiFormRow>
      <EuiFormRow
        describedByIds={Array []}
        display="row"
        fullWidth={true}
        hasChildLabel={true}
        hasEmptyLabelSpace={false}
        id="geoField"
        label="Geospatial field"
        labelType="label"
      >
        <SingleFieldSelect
          fields={Array []}
          onChange={[Function]}
          placeholder="Select geo field"
          value=""
        />
      </EuiFormRow>
      <EuiFormRow
        describedByIds={Array []}
        display="row"
        fullWidth={true}
        hasChildLabel={true}
        hasEmptyLabelSpace={false}
        id="boundaryNameFieldSelect"
        label="Human-readable boundary name (optional)"
        labelType="label"
      >
        <SingleFieldSelect
          fields={Array []}
          onChange={[Function]}
          placeholder="Select boundary name"
          value="testNameField"
        />
      </EuiFormRow>
    </React.Fragment>
  }
/>
`;

exports[`should render EntityIndexExpression 1`] = `
<ExpressionWithPopover
  defaultValue="Select an index pattern and geo shape/point field"
  expressionDescription="index"
  isInvalid={false}
  popoverContent={
    <React.Fragment>
      <EuiFormRow
        describedByIds={Array []}
        display="row"
        fullWidth={true}
        hasChildLabel={true}
        hasEmptyLabelSpace={false}
        id="geoIndexPatternSelect"
        labelType="label"
      >
        <GeoIndexPatternSelect
          IndexPatternSelectComponent={null}
          http={null}
          includedGeoTypes={
            Array [
              "geo_point",
            ]
          }
          onChange={[Function]}
        />
      </EuiFormRow>
      <EuiFormRow
        describedByIds={Array []}
        display="row"
        fullWidth={true}
        hasChildLabel={true}
        hasEmptyLabelSpace={false}
        id="thresholdTimeField"
        label={
          <FormattedMessage
            defaultMessage="Time field"
            id="xpack.stackAlerts.geoThreshold.timeFieldLabel"
            values={Object {}}
          />
        }
        labelType="label"
      >
        <SingleFieldSelect
          fields={Array []}
          onChange={[Function]}
          placeholder="Select time field"
          value="testDateField"
        />
      </EuiFormRow>
      <EuiFormRow
        describedByIds={Array []}
        display="row"
        fullWidth={true}
        hasChildLabel={true}
        hasEmptyLabelSpace={false}
        id="geoField"
        label="Geospatial field"
        labelType="label"
      >
        <SingleFieldSelect
          fields={Array []}
          onChange={[Function]}
          placeholder="Select geo field"
          value="testGeoField"
        />
      </EuiFormRow>
    </React.Fragment>
  }
/>
`;

exports[`should render EntityIndexExpression w/ invalid flag if invalid 1`] = `
<ExpressionWithPopover
  defaultValue="Select an index pattern and geo shape/point field"
  expressionDescription="index"
  isInvalid={true}
  popoverContent={
    <React.Fragment>
      <EuiFormRow
        describedByIds={Array []}
        display="row"
        fullWidth={true}
        hasChildLabel={true}
        hasEmptyLabelSpace={false}
        id="geoIndexPatternSelect"
        labelType="label"
      >
        <GeoIndexPatternSelect
          IndexPatternSelectComponent={null}
          http={null}
          includedGeoTypes={
            Array [
              "geo_point",
            ]
          }
          onChange={[Function]}
        />
      </EuiFormRow>
      <EuiFormRow
        describedByIds={Array []}
        display="row"
        fullWidth={true}
        hasChildLabel={true}
        hasEmptyLabelSpace={false}
        id="thresholdTimeField"
        label={
          <FormattedMessage
            defaultMessage="Time field"
            id="xpack.stackAlerts.geoThreshold.timeFieldLabel"
            values={Object {}}
          />
        }
        labelType="label"
      >
        <SingleFieldSelect
          fields={Array []}
          onChange={[Function]}
          placeholder="Select time field"
          value="testDateField"
        />
      </EuiFormRow>
      <EuiFormRow
        describedByIds={Array []}
        display="row"
        fullWidth={true}
        hasChildLabel={true}
        hasEmptyLabelSpace={false}
        id="geoField"
        label="Geospatial field"
        labelType="label"
      >
        <SingleFieldSelect
          fields={Array []}
          onChange={[Function]}
          placeholder="Select geo field"
          value="testGeoField"
        />
      </EuiFormRow>
    </React.Fragment>
  }
/>
`;
