/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { z } from 'zod';

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 */

import {
  QueryOrUndefined,
  ArrayQueries,
  SavedQueryIdOrUndefined,
  ECSMappingOrUndefined,
  PackIdOrUndefined,
} from '../model/schema/common_attributes.gen';

export type CreateLiveQueryRequestBody = z.infer<typeof CreateLiveQueryRequestBody>;
export const CreateLiveQueryRequestBody = z.object({
  agent_ids: z.array(z.string()).optional(),
  agent_all: z.boolean().optional(),
  agent_platforms: z.array(z.string()).optional(),
  agent_policy_ids: z.array(z.string()).optional(),
  query: QueryOrUndefined.optional(),
  queries: ArrayQueries.optional(),
  saved_query_id: SavedQueryIdOrUndefined.optional(),
  ecs_mapping: ECSMappingOrUndefined.optional(),
  pack_id: PackIdOrUndefined.optional(),
  alert_ids: z.array(z.string()).optional(),
  case_ids: z.array(z.string()).optional(),
  event_ids: z.array(z.string()).optional(),
  metadata: z.object({}).nullable().optional(),
});

export type SuccessResponse = z.infer<typeof SuccessResponse>;
export const SuccessResponse = z.object({});
