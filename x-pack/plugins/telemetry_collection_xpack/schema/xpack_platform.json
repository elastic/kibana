{
  "properties": {
    "ml": {
      "properties": {
        "alertRules": {
          "properties": {
            "xpack.ml.anomaly_detection_alert": {
              "properties": {
                "count_by_result_type": {
                  "properties": {
                    "record": {
                      "type": "long",
                      "_meta": {
                        "description": "total number of alerting rules using record result type"
                      }
                    },
                    "influencer": {
                      "type": "long",
                      "_meta": {
                        "description": "total number of alerting rules using influencer result type"
                      }
                    },
                    "bucket": {
                      "type": "long",
                      "_meta": {
                        "description": "total number of alerting rules using bucket result type"
                      }
                    }
                  }
                }
              }
            },
            "xpack.ml.anomaly_detection_jobs_health": {
              "properties": {
                "count_by_check_type": {
                  "properties": {
                    "datafeed": {
                      "type": "long",
                      "_meta": {
                        "description": "total number of alerting rules performing the not started datafeed health check"
                      }
                    },
                    "mml": {
                      "type": "long",
                      "_meta": {
                        "description": "total number of alerting rules performing the model memory limit health check"
                      }
                    },
                    "delayedData": {
                      "type": "long",
                      "_meta": {
                        "description": "total number of alerting rules performing the delayed data health check"
                      }
                    },
                    "errorMessages": {
                      "type": "long",
                      "_meta": {
                        "description": "total number of alerting rules performing the error messages health check"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "rollups": {
      "properties": {
        "index_patterns": {
          "properties": {
            "total": {
              "type": "long",
              "_meta": {
                "description": "Counts all the rollup index patterns"
              }
            }
          }
        },
        "saved_searches": {
          "properties": {
            "total": {
              "type": "long",
              "_meta": {
                "description": "Counts all the rollup saved searches"
              }
            }
          }
        },
        "visualizations": {
          "properties": {
            "saved_searches": {
              "properties": {
                "total": {
                  "type": "long",
                  "_meta": {
                    "description": "Counts all the visualizations that are based on rollup saved searches"
                  }
                },
                "lens_total": {
                  "type": "long",
                  "_meta": {
                    "description": "Counts all the lens visualizations that are based on rollup saved searches"
                  }
                }
              }
            },
            "total": {
              "type": "long",
              "_meta": {
                "description": "Counts all the visualizations that are based on rollup index patterns"
              }
            },
            "lens_total": {
              "type": "long",
              "_meta": {
                "description": "Counts all the lens visualizations that are based on rollup index patterns"
              }
            }
          }
        }
      }
    },
    "transform": {
      "properties": {
        "alertRules": {
          "properties": {
            "transform_health": {
              "properties": {
                "count_by_check_type": {
                  "properties": {
                    "notStarted": {
                      "type": "long",
                      "_meta": {
                        "description": "total number of alerting rules performing the not started health check"
                      }
                    },
                    "errorMessages": {
                      "type": "long",
                      "_meta": {
                        "description": "total number of alerting rules performing the error message health check"
                      }
                    },
                    "healthCheck": {
                      "type": "long",
                      "_meta": {
                        "description": "total number of alerting rules performing the health check with the stats API"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
