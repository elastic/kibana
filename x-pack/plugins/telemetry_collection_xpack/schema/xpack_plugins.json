{
  "properties": {
    "cloud": {
      "properties": {
        "isCloudEnabled": {
          "type": "boolean",
          "_meta": {
            "description": "Is the deployment running in Elastic Cloud (ESS or Serverless)?"
          }
        },
        "trialEndDate": {
          "type": "date",
          "_meta": {
            "description": "End of the trial period"
          }
        },
        "inTrial": {
          "type": "boolean",
          "_meta": {
            "description": "Is the organization during the trial period?"
          }
        },
        "isElasticStaffOwned": {
          "type": "boolean",
          "_meta": {
            "description": "Is the deploymend owned by an Elastician"
          }
        },
        "organizationId": {
          "type": "keyword",
          "_meta": {
            "description": "The Elastic Cloud Organization ID that owns the deployment/project"
          }
        },
        "deploymentId": {
          "type": "keyword",
          "_meta": {
            "description": "The ESS Deployment ID"
          }
        },
        "projectId": {
          "type": "keyword",
          "_meta": {
            "description": "The Serverless Project ID"
          }
        },
        "projectType": {
          "type": "keyword",
          "_meta": {
            "description": "The Serverless Project type"
          }
        },
        "orchestratorTarget": {
          "type": "keyword",
          "_meta": {
            "description": "The Orchestrator Target where it is deployed (canary/non-canary)"
          }
        }
      }
    },
    "cloudExperiments": {
      "properties": {
        "initialized": {
          "type": "boolean",
          "_meta": {
            "description": "Whether the A/B testing client is correctly initialized (identify has been called)"
          }
        },
        "flags": {
          "type": "pass_through",
          "_meta": {
            "description": "Flags received by the client"
          }
        },
        "flagNames": {
          "type": "array",
          "items": {
            "type": "keyword",
            "_meta": {
              "description": "Names of the flags received by the client"
            }
          }
        }
      }
    },
    "discoverEnhanced": {
      "properties": {
        "exploreDataInChartActionEnabled": {
          "type": "boolean"
        }
      }
    },
    "infraops": {
      "properties": {
        "last_24_hours": {
          "properties": {
            "hits": {
              "properties": {
                "infraops_hosts": {
                  "type": "long"
                },
                "infraops_docker": {
                  "type": "long"
                },
                "infraops_kubernetes": {
                  "type": "long"
                },
                "logs": {
                  "type": "long"
                }
              }
            }
          }
        }
      }
    },
    "logs_data": {
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "properties": {
              "pattern_name": {
                "type": "keyword",
                "_meta": {
                  "description": "Logs pattern name representing the stream of logs"
                }
              },
              "shipper": {
                "type": "keyword",
                "_meta": {
                  "description": "Shipper if present, sending the logs"
                }
              },
              "doc_count": {
                "type": "long",
                "_meta": {
                  "description": "Total number of documents in the steam of logs"
                }
              },
              "structure_level": {
                "properties": {
                  "0": {
                    "type": "long",
                    "_meta": {
                      "description": "Total docs at structure level 0"
                    }
                  },
                  "1": {
                    "type": "long",
                    "_meta": {
                      "description": "Total docs at structure level 1"
                    }
                  },
                  "2": {
                    "type": "long",
                    "_meta": {
                      "description": "Total docs at structure level 2"
                    }
                  },
                  "3": {
                    "type": "long",
                    "_meta": {
                      "description": "Total docs at structure level 3"
                    }
                  },
                  "4": {
                    "type": "long",
                    "_meta": {
                      "description": "Total docs at structure level 4"
                    }
                  },
                  "5": {
                    "type": "long",
                    "_meta": {
                      "description": "Total docs at structure level 5"
                    }
                  },
                  "6": {
                    "type": "long",
                    "_meta": {
                      "description": "Total docs at structure level 6"
                    }
                  }
                }
              },
              "failure_store_doc_count": {
                "type": "long",
                "_meta": {
                  "description": "Total number of documents in the failure store in the stream of logs"
                }
              },
              "index_count": {
                "type": "long",
                "_meta": {
                  "description": "Total number of indices in the stream of logs"
                }
              },
              "namespace_count": {
                "type": "long",
                "_meta": {
                  "description": "Total number of namespaces in the stream of logs"
                }
              },
              "field_count": {
                "type": "long",
                "_meta": {
                  "description": "Total number of fields in mappings of indices of the stream of logs"
                }
              },
              "field_existence": {
                "properties": {
                  "DYNAMIC_KEY": {
                    "type": "long",
                    "_meta": {
                      "description": "Count of documents having the field represented by the key"
                    }
                  }
                }
              },
              "size_in_bytes": {
                "type": "long",
                "_meta": {
                  "description": "Total size in bytes of the stream of logs"
                }
              },
              "managed_by": {
                "type": "array",
                "items": {
                  "type": "keyword",
                  "_meta": {
                    "description": "Value captured in _meta.managed_by"
                  }
                }
              },
              "package_name": {
                "type": "array",
                "items": {
                  "type": "keyword",
                  "_meta": {
                    "description": "Value captured in _meta.package.name"
                  }
                }
              },
              "beat": {
                "type": "array",
                "items": {
                  "type": "keyword",
                  "_meta": {
                    "description": "Value captured in _meta.beat.name"
                  }
                }
              }
            }
          }
        }
      }
    },
    "reporting": {
      "properties": {
        "available": {
          "type": "boolean"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "saved_objects_tagging": {
      "properties": {
        "usedTags": {
          "type": "integer"
        },
        "taggedObjects": {
          "type": "integer"
        },
        "types": {
          "properties": {
            "dashboard": {
              "properties": {
                "usedTags": {
                  "type": "integer"
                },
                "taggedObjects": {
                  "type": "integer"
                }
              }
            },
            "lens": {
              "properties": {
                "usedTags": {
                  "type": "integer"
                },
                "taggedObjects": {
                  "type": "integer"
                }
              }
            },
            "visualization": {
              "properties": {
                "usedTags": {
                  "type": "integer"
                },
                "taggedObjects": {
                  "type": "integer"
                }
              }
            },
            "map": {
              "properties": {
                "usedTags": {
                  "type": "integer"
                },
                "taggedObjects": {
                  "type": "integer"
                }
              }
            },
            "search": {
              "properties": {
                "usedTags": {
                  "type": "integer"
                },
                "taggedObjects": {
                  "type": "integer"
                }
              }
            },
            "osquery-pack": {
              "properties": {
                "usedTags": {
                  "type": "integer"
                },
                "taggedObjects": {
                  "type": "integer"
                }
              }
            },
            "osquery-pack-asset": {
              "properties": {
                "usedTags": {
                  "type": "integer"
                },
                "taggedObjects": {
                  "type": "integer"
                }
              }
            },
            "osquery-saved-query": {
              "properties": {
                "usedTags": {
                  "type": "integer"
                },
                "taggedObjects": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "security": {
      "properties": {
        "auditLoggingEnabled": {
          "type": "boolean",
          "_meta": {
            "description": "Indicates if audit logging is both enabled and supported by the current license."
          }
        },
        "loginSelectorEnabled": {
          "type": "boolean",
          "_meta": {
            "description": "Indicates if the login selector UI is enabled."
          }
        },
        "accessAgreementEnabled": {
          "type": "boolean",
          "_meta": {
            "description": "Indicates if the access agreement UI is both enabled and supported by the current license."
          }
        },
        "authProviderCount": {
          "type": "long",
          "_meta": {
            "description": "The number of configured auth providers (including disabled auth providers)."
          }
        },
        "enabledAuthProviders": {
          "type": "array",
          "items": {
            "type": "keyword",
            "_meta": {
              "description": "The types of enabled auth providers (such as `saml`, `basic`, `pki`, etc)."
            }
          }
        },
        "fipsModeEnabled": {
          "type": "boolean",
          "_meta": {
            "description": "Indicates if Kibana is being run in FIPS mode."
          }
        },
        "httpAuthSchemes": {
          "type": "array",
          "items": {
            "type": "keyword",
            "_meta": {
              "description": "The set of enabled http auth schemes. Used for api-based usage, and when credentials are provided via reverse-proxy."
            }
          }
        },
        "sessionIdleTimeoutInMinutes": {
          "type": "long",
          "_meta": {
            "description": "The global session idle timeout expiration that is configured, in minutes (0 if disabled)."
          }
        },
        "sessionLifespanInMinutes": {
          "type": "long",
          "_meta": {
            "description": "The global session lifespan expiration that is configured, in minutes (0 if disabled)."
          }
        },
        "sessionCleanupInMinutes": {
          "type": "long",
          "_meta": {
            "description": "The session cleanup interval that is configured, in minutes (0 if disabled)."
          }
        },
        "sessionConcurrentSessionsMaxSessions": {
          "type": "long",
          "_meta": {
            "description": "The maximum number of the concurrent user sessions (0 if not configured)."
          }
        },
        "anonymousCredentialType": {
          "type": "keyword",
          "_meta": {
            "description": "The credential type that is configured for the anonymous authentication provider."
          }
        }
      }
    },
    "spaces": {
      "properties": {
        "usesFeatureControls": {
          "type": "boolean",
          "_meta": {
            "description": "Indicates if at least one feature is disabled in at least one space. This is a signal that space-level feature controls are in use. This does not account for role-based (security) feature controls."
          }
        },
        "solutions": {
          "properties": {
            "classic": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have solution set to classic."
              }
            },
            "es": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have solution set to search."
              }
            },
            "oblt": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have solution set to observability."
              }
            },
            "security": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have solution set to security."
              }
            },
            "unset": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces without solution set."
              }
            }
          }
        },
        "disabledFeatures": {
          "properties": {
            "DYNAMIC_KEY": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "stackAlerts": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "actions": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "enterpriseSearch": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "fleet": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "savedObjectsTagging": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "indexPatterns": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "discover": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "canvas": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "maps": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "siem": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "monitoring": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "graph": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "uptime": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "savedObjectsManagement": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "dev_tools": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "advancedSettings": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "infrastructure": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "visualize": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "logs": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "dashboard": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "ml": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            },
            "apm": {
              "type": "long",
              "_meta": {
                "description": "The number of spaces which have this feature disabled."
              }
            }
          }
        },
        "available": {
          "type": "boolean",
          "_meta": {
            "description": "Indicates if the Spaces feature is available in this installation."
          }
        },
        "enabled": {
          "type": "boolean",
          "_meta": {
            "description": "Indicates if the Spaces feature is enabled in this installation."
          }
        },
        "count": {
          "type": "long",
          "_meta": {
            "description": "The number of spaces in this installation."
          }
        },
        "apiCalls.copySavedObjects.total": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Copy Saved Objects\" API has been called."
          }
        },
        "apiCalls.copySavedObjects.kibanaRequest.yes": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Copy Saved Objects\" API has been called via the Kibana client."
          }
        },
        "apiCalls.copySavedObjects.kibanaRequest.no": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Copy Saved Objects\" API has been called via an API consumer (e.g. curl)."
          }
        },
        "apiCalls.copySavedObjects.createNewCopiesEnabled.yes": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Copy Saved Objects\" API has been called with \"createNewCopies\" set to true."
          }
        },
        "apiCalls.copySavedObjects.createNewCopiesEnabled.no": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Copy Saved Objects\" API has been called with \"createNewCopies\" set to false."
          }
        },
        "apiCalls.copySavedObjects.overwriteEnabled.yes": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Copy Saved Objects\" API has been called with \"overwrite\" set to true."
          }
        },
        "apiCalls.copySavedObjects.overwriteEnabled.no": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Copy Saved Objects\" API has been called with \"overwrite\" set to false."
          }
        },
        "apiCalls.copySavedObjects.compatibilityModeEnabled.yes": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Copy Saved Objects\" API has been called with \"compatibilityMode\" set to true."
          }
        },
        "apiCalls.copySavedObjects.compatibilityModeEnabled.no": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Copy Saved Objects\" API has been called with \"compatibilityMode\" set to false."
          }
        },
        "apiCalls.resolveCopySavedObjectsErrors.total": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Resolve Copy Saved Objects Errors\" API has been called."
          }
        },
        "apiCalls.resolveCopySavedObjectsErrors.kibanaRequest.yes": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Resolve Copy Saved Objects Errors\" API has been called via the Kibana client."
          }
        },
        "apiCalls.resolveCopySavedObjectsErrors.kibanaRequest.no": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Resolve Copy Saved Objects Errors\" API has been called via an API consumer (e.g. curl)."
          }
        },
        "apiCalls.resolveCopySavedObjectsErrors.createNewCopiesEnabled.yes": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Resolve Copy Saved Objects Errors\" API has been called with \"createNewCopies\" set to true."
          }
        },
        "apiCalls.resolveCopySavedObjectsErrors.createNewCopiesEnabled.no": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Resolve Copy Saved Objects Errors\" API has been called with \"createNewCopies\" set to false."
          }
        },
        "apiCalls.resolveCopySavedObjectsErrors.compatibilityModeEnabled.yes": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Resolve Copy Saved Objects Errors\" API has been called with \"compatibilityMode\" set to true."
          }
        },
        "apiCalls.resolveCopySavedObjectsErrors.compatibilityModeEnabled.no": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Resolve Copy Saved Objects Errors\" API has been called with \"compatibilityMode\" set to false."
          }
        },
        "apiCalls.disableLegacyUrlAliases.total": {
          "type": "long",
          "_meta": {
            "description": "The number of times the \"Disable Legacy URL Aliases\" API has been called."
          }
        }
      }
    },
    "upgrade-assistant-telemetry": {
      "properties": {
        "features": {
          "properties": {
            "deprecation_logging": {
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "_meta": {
                    "description": "Whether user has enabled Elasticsearch deprecation logging"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
