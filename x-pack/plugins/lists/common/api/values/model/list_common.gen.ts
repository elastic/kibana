/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Error Schema
 *   version: not applicable
 */

import { z } from 'zod';
import { NonEmptyString } from '@kbn/security-solution-plugin/common/api/model/primitives.gen';

export type ListType = z.infer<typeof ListType>;
export const ListType = z.enum([
  'binary',
  'boolean',
  'byte',
  'date',
  'date_nanos',
  'date_range',
  'double',
  'double_range',
  'float',
  'float_range',
  'geo_point',
  'geo_shape',
  'half_float',
  'integer',
  'integer_range',
  'ip',
  'ip_range',
  'keyword',
  'long',
  'long_range',
  'shape',
  'short',
  'text',
]);
export type ListTypeEnum = typeof ListType.enum;
export const ListTypeEnum = ListType.enum;

export type ListMeta = z.infer<typeof ListMeta>;
export const ListMeta = z.object({}).catchall(z.unknown());

export type List = z.infer<typeof List>;
export const List = z.object({
  id: NonEmptyString,
  type: ListType,
  name: NonEmptyString,
  description: NonEmptyString,
  serializer: z.string().optional(),
  deserializer: z.string().optional(),
  immutable: z.boolean(),
  meta: ListMeta.optional(),
  '@timestamp': z.string().datetime().optional(),
  version: z.number().int().min(1),
  _version: z.string().optional(),
  tie_breaker_id: z.string(),
  created_at: z.string().datetime(),
  created_by: z.string(),
  updated_at: z.string().datetime(),
  updated_by: z.string(),
});
