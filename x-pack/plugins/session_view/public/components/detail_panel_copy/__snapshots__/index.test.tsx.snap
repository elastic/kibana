// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailPanelCopy component When DetailPanelCopy is mounted renders DetailPanelCopy correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": .emotion-0 {
  display: grid;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  padding: 4px 8px;
  width: 100%;
  font-weight: inherit;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  min-height: 24px;
  letter-spacing: 0px;
  text-align: left;
  position: relative;
  border-radius: 6px;
}

.emotion-0 .euiToolTipAnchor {
  width: calc(100% - 32px);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.emotion-0:hover {
  background: rgba(0,119,204,0.1);
}

<body>
    <div>
      <div
        class="euiText euiText--small emotion-0"
        data-test-subj="sessionView:detail-panel-list-item"
      >
        <span
          class="euiToolTipAnchor"
        >
          <span>
            copy component test
          </span>
        </span>
      </div>
    </div>
  </body>,
  "container": .emotion-0 {
  display: grid;
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
  padding: 4px 8px;
  width: 100%;
  font-weight: inherit;
  height: -webkit-fit-content;
  height: -moz-fit-content;
  height: fit-content;
  min-height: 24px;
  letter-spacing: 0px;
  text-align: left;
  position: relative;
  border-radius: 6px;
}

.emotion-0 .euiToolTipAnchor {
  width: calc(100% - 32px);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.emotion-0:hover {
  background: rgba(0,119,204,0.1);
}

<div>
    <div
      class="euiText euiText--small emotion-0"
      data-test-subj="sessionView:detail-panel-list-item"
    >
      <span
        class="euiToolTipAnchor"
      >
        <span>
          copy component test
        </span>
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
