post:
  summary: Creates an SLO.
  operationId: createSlo
  description: >
    You must have `all` privileges for the **SLOs** feature in the
    **Observability** section of the Kibana feature privileges.
  tags:
    - slos
  parameters:
    - $ref: ../components/headers/kbn_xsrf.yaml
    - $ref: ../components/parameters/space_id.yaml
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../components/schemas/create_slo_request.yaml'
  responses:
    '200':
      description: Successful request
      content:
        application/json:
          schema:
            $ref: '../components/schemas/create_slo_response.yaml'
    '400':
      description: Bad request
      content: 
        application/json:
          schema:
            $ref: '../components/schemas/4xx_response.yaml'
    '401':
      description: Unauthorized response
      content: 
        application/json:
          schema:
            $ref: '../components/schemas/4xx_response.yaml'
  servers:
    - url: https://localhost:5601

get:
  summary: Retrieves a paginated list of SLOs
  operationId: findSlos
  description: >
    You must have the `read` privileges for the **SLOs** feature in the
    **Observability** section of the Kibana feature privileges.
  tags:
    - slos
  parameters:
    - $ref: ../components/headers/kbn_xsrf.yaml
    - $ref: ../components/parameters/space_id.yaml
    - name: name
      in: query
      description: Filter by name
      schema:
        type: string
      example: awesome-service
    - name: indicatorTypes
      in: query
      description: Filter by indicator type
      schema:
        type: array
        items: 
          type: string
      example: ["sli.kql.custom"]
    - name: page
      in: query
      description: The page number to return
      schema:
        type: integer
        default: 1
      example: 1
    - name: perPage
      in: query
      description: The number of SLOs to return per page
      schema:
        type: integer
        default: 25
      example: 20
    - name: sortBy
      in: query
      description: Sort by field
      schema:
        type: string
        enum: [name, indicatorType]
        default: name
      example: name
    - name: sortDirection
      in: query
      description: Sort order
      schema:
        type: string
        enum: [asc, desc]
        default: asc
      example: asc
  responses:
    '200':
      description: Successful request
      content:
        application/json:
          schema:
            $ref: '../components/schemas/find_slo_response.yaml'
    '400':
      description: Bad request
      content: 
        application/json:
          schema:
            $ref: '../components/schemas/4xx_response.yaml'
    '401':
      description: Unauthorized response
      content: 
        application/json:
          schema:
            $ref: '../components/schemas/4xx_response.yaml'