post:
  summary: Creates an SLO.
  operationId: createSloOp
  description: >
    You must have `all` privileges for the **SLOs** feature in the
    **Observability** section of the Kibana feature privileges.
  tags:
    - slo
  parameters:
    - $ref: ../components/headers/kbn_xsrf.yaml
    - $ref: ../components/parameters/space_id.yaml
  requestBody:
    required: true
    content:
      application/json:
        schema:
          $ref: '../components/schemas/create_slo_request.yaml'
  responses:
    '200':
      description: Successful request
      content:
        application/json:
          schema:
            $ref: '../components/schemas/create_slo_response.yaml'
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '../components/schemas/400_response.yaml'
    '401':
      description: Unauthorized response
      content:
        application/json:
          schema:
            $ref: '../components/schemas/401_response.yaml'
    '403':
      description: Unauthorized response
      content:
        application/json:
          schema:
            $ref: '../components/schemas/403_response.yaml'
    '409':
      description: Conflict - The SLO id already exists
      content:
        application/json:
          schema:
            $ref: '../components/schemas/409_response.yaml'
  servers:
    - url: https://localhost:5601

get:
  summary: Retrieves a paginated list of SLOs
  operationId: findSlosOp
  description: >
    You must have the `read` privileges for the **SLOs** feature in the
    **Observability** section of the Kibana feature privileges.
  tags:
    - slo
  parameters:
    - $ref: ../components/headers/kbn_xsrf.yaml
    - $ref: ../components/parameters/space_id.yaml
    - name: kqlQuery
      in: query
      description: A valid kql query to filter the SLO with
      schema:
        type: string
      example: 'slo.name:latency* and slo.tags : "prod"'
    - name: page
      in: query
      description: The page number to return
      schema:
        type: integer
        default: 1
      example: 1
    - name: perPage
      in: query
      description: The number of SLOs to return per page
      schema:
        type: integer
        default: 25
        maximum: 5000
      example: 25
    - name: sortBy
      in: query
      description: Sort by field
      schema:
        type: string
        enum: [sli_value, status, error_budget_consumed, error_budget_remaining]
        default: status
      example: status
    - name: sortDirection
      in: query
      description: Sort order
      schema:
        type: string
        enum: [asc, desc]
        default: asc
      example: asc
  responses:
    '200':
      description: Successful request
      content:
        application/json:
          schema:
            $ref: '../components/schemas/find_slo_response.yaml'
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '../components/schemas/400_response.yaml'
    '401':
      description: Unauthorized response
      content:
        application/json:
          schema:
            $ref: '../components/schemas/401_response.yaml'
    '403':
      description: Unauthorized response
      content:
        application/json:
          schema:
            $ref: '../components/schemas/403_response.yaml'
    '404':
      description: Not found response
      content:
        application/json:
          schema:
            $ref: '../components/schemas/404_response.yaml'
