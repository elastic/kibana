// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SpaceAwarePrivilegeForm> hides the space table if there are no existing space privileges 1`] = `
<InjectIntl(PrivilegeSpaceTableUI)
  availablePrivileges={
    Array [
      "all",
      "read",
    ]
  }
  onChange={[Function]}
  role={
    Object {
      "elasticsearch": Object {
        "cluster": Array [
          "manage",
        ],
        "indices": Array [],
        "run_as": Array [],
      },
      "kibana": Object {
        "global": Array [],
        "space": Object {},
      },
      "name": "",
    }
  }
  spacePrivileges={Object {}}
  spaces={
    Array [
      Object {
        "_reserved": true,
        "id": "default",
        "name": "Default Space",
      },
      Object {
        "id": "marketing",
        "name": "Marketing",
      },
    ]
  }
>
  <PrivilegeSpaceTableUI
    availablePrivileges={
      Array [
        "all",
        "read",
      ]
    }
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {
          "date": Object {
            "full": Object {
              "day": "numeric",
              "month": "long",
              "weekday": "long",
              "year": "numeric",
            },
            "long": Object {
              "day": "numeric",
              "month": "long",
              "year": "numeric",
            },
            "medium": Object {
              "day": "numeric",
              "month": "short",
              "year": "numeric",
            },
            "short": Object {
              "day": "numeric",
              "month": "numeric",
              "year": "2-digit",
            },
          },
          "number": Object {
            "currency": Object {
              "style": "currency",
            },
            "percent": Object {
              "style": "percent",
            },
          },
          "relative": Object {
            "days": Object {
              "units": "day",
            },
            "hours": Object {
              "units": "hour",
            },
            "minutes": Object {
              "units": "minute",
            },
            "months": Object {
              "units": "month",
            },
            "seconds": Object {
              "units": "second",
            },
            "years": Object {
              "units": "year",
            },
          },
          "time": Object {
            "full": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
              "timeZoneName": "short",
            },
            "long": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
              "timeZoneName": "short",
            },
            "medium": Object {
              "hour": "numeric",
              "minute": "numeric",
              "second": "numeric",
            },
            "short": Object {
              "hour": "numeric",
              "minute": "numeric",
            },
          },
        },
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {},
        "now": [Function],
        "onError": [Function],
        "textComponent": Symbol(react.fragment),
        "timeZone": null,
      }
    }
    onChange={[Function]}
    role={
      Object {
        "elasticsearch": Object {
          "cluster": Array [
            "manage",
          ],
          "indices": Array [],
          "run_as": Array [],
        },
        "kibana": Object {
          "global": Array [],
          "space": Object {},
        },
        "name": "",
      }
    }
    spacePrivileges={Object {}}
    spaces={
      Array [
        Object {
          "_reserved": true,
          "id": "default",
          "name": "Default Space",
        },
        Object {
          "id": "marketing",
          "name": "Marketing",
        },
      ]
    }
  />
</InjectIntl(PrivilegeSpaceTableUI)>
`;

exports[`<SpaceAwarePrivilegeForm> renders without crashing 1`] = `
<Fragment>
  <EuiDescribedFormGroup
    description={
      <p>
        <FormattedMessage
          defaultMessage="Specify the minimum actions users can perform in your spaces."
          id="xpack.security.management.editRoles.spaceAwarePrivilegeForm.minimumActionsUserCanPerformInYourSpacesDescription"
          values={Object {}}
        />
      </p>
    }
    fullWidth={false}
    gutterSize="l"
    title={
      <h3>
        <FormattedMessage
          defaultMessage="Minimum privileges for all spaces"
          id="xpack.security.management.editRoles.spaceAwarePrivilegeForm.minPrivilegesForAllSpacesTitle"
          values={Object {}}
        />
      </h3>
    }
    titleSize="xs"
  >
    <EuiFormRow
      describedByIds={Array []}
      fullWidth={false}
      hasEmptyLabelSpace={true}
      helpText="No access to spaces"
      labelType="label"
    >
      <PrivilegeSelector
        allowNone={true}
        availablePrivileges={
          Array [
            "all",
            "read",
          ]
        }
        data-test-subj="kibanaMinimumPrivilege"
        disabled={false}
        onChange={[Function]}
        value="none"
      />
    </EuiFormRow>
  </EuiDescribedFormGroup>
  <EuiSpacer />
  <EuiTitle
    size="xs"
    textTransform="none"
  >
    <h3>
      <FormattedMessage
        defaultMessage="Higher privileges for individual spaces"
        id="xpack.security.management.editRoles.spaceAwarePrivilegeForm.higherPrivilegesForIndividualSpacesTitle"
        values={Object {}}
      />
    </h3>
  </EuiTitle>
  <EuiSpacer
    size="s"
  />
  <EuiText
    color="subdued"
    grow={false}
    size="s"
  >
    <p>
      <FormattedMessage
        defaultMessage="Grant more privileges on a per space basis. For example, if the privileges are
              {read} for all spaces, you can set the privileges to {all}
              for an individual space."
        id="xpack.security.management.editRoles.spaceAwarePrivilegeForm.grantMorePrivilegesTitle"
        values={
          Object {
            "all": <strong>
              <FormattedMessage
                defaultMessage="all"
                id="xpack.security.management.editRoles.spaceAwarePrivilegeForm.allText"
                values={Object {}}
              />
            </strong>,
            "read": <strong>
              <FormattedMessage
                defaultMessage="read"
                id="xpack.security.management.editRoles.spaceAwarePrivilegeForm.readText"
                values={Object {}}
              />
            </strong>,
          }
        }
      />
    </p>
  </EuiText>
  <EuiSpacer
    size="s"
  />
  <InjectIntl(PrivilegeSpaceTableUI)
    availablePrivileges={
      Array [
        "all",
        "read",
      ]
    }
    onChange={[Function]}
    role={
      Object {
        "elasticsearch": Object {
          "cluster": Array [
            "manage",
          ],
          "indices": Array [],
          "run_as": Array [],
        },
        "kibana": Object {
          "global": Array [],
          "space": Object {},
        },
        "name": "",
      }
    }
    spacePrivileges={Object {}}
    spaces={
      Array [
        Object {
          "_reserved": true,
          "id": "default",
          "name": "Default Space",
        },
        Object {
          "id": "marketing",
          "name": "Marketing",
        },
      ]
    }
  />
  <EuiFlexGroup
    alignItems="baseline"
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiButton
        color="primary"
        data-test-subj="addSpacePrivilegeButton"
        fill={false}
        iconSide="left"
        iconType="plusInCircle"
        onClick={[Function]}
        size="s"
        type="button"
      >
        <FormattedMessage
          defaultMessage="Add space privilege"
          id="xpack.security.management.editRoles.spaceAwarePrivilegeForm.addSpacePrivilegeTitle"
          values={Object {}}
        />
      </EuiButton>
    </EuiFlexItem>
    <EuiFlexItem>
      <InjectIntl(ImpactedSpacesFlyoutUI)
        role={
          Object {
            "elasticsearch": Object {
              "cluster": Array [
                "manage",
              ],
              "indices": Array [],
              "run_as": Array [],
            },
            "kibana": Object {
              "global": Array [],
              "space": Object {},
            },
            "name": "",
          }
        }
        spaces={
          Array [
            Object {
              "_reserved": true,
              "id": "default",
              "name": "Default Space",
            },
            Object {
              "id": "marketing",
              "name": "Marketing",
            },
          ]
        }
        userProfile={
          Object {
            "hasCapability": [Function],
          }
        }
      />
    </EuiFlexItem>
  </EuiFlexGroup>
</Fragment>
`;

exports[`<SpaceAwarePrivilegeForm> with user profile disabling "manageSpaces" renders a warning message instead of the privilege form 1`] = `
<EuiCallOut
  color="danger"
  iconType="alert"
  size="m"
  title={
    <p>
      <FormattedMessage
        defaultMessage="Insufficient Privileges"
        id="xpack.security.management.editRoles.spaceAwarePrivilegeForm.insufficientPrivilegesDescription"
        values={Object {}}
      />
    </p>
  }
>
  <p>
    <FormattedMessage
      defaultMessage="You are not authorized to view all available spaces."
      id="xpack.security.management.editRoles.spaceAwarePrivilegeForm.howToViewAllAvailableSpacesDescription"
      values={Object {}}
    />
  </p>
  <p>
    <FormattedMessage
      defaultMessage="Please ensure your account has all privileges granted by the
              {kibanaUser} role, and try again."
      id="xpack.security.management.editRoles.spaceAwarePrivilegeForm.ensureAccountHasAllPrivilegesGrantedDescription"
      values={
        Object {
          "kibanaUser": <strong>
            <FormattedMessage
              defaultMessage="kibana_user"
              id="xpack.security.management.editRoles.spaceAwarePrivilegeForm.kibanaUserTitle"
              values={Object {}}
            />
          </strong>,
        }
      }
    />
  </p>
</EuiCallOut>
`;
