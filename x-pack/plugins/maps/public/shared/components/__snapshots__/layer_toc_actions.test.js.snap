// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LayerTocActions is rendered 1`] = `
<EuiPopover
  anchorPosition="leftUp"
  button={
    <EuiButtonEmpty
      color="text"
      data-test-subj="layerTocActionsPanelToggleButtonlayer1"
      flush="left"
      iconSide="left"
      onClick={[Function]}
      size="xs"
      type="button"
    >
      <div>
        icon mock
      </div>
    </EuiButtonEmpty>
  }
  closePopover={[Function]}
  hasArrow={true}
  id="contextMenu"
  isOpen={false}
  ownFocus={false}
  panelPaddingSize="none"
  withTitle={true}
>
  <EuiContextMenu
    data-test-subj="layerTocActionsPanellayer1"
    initialPanelId={0}
    panels={
      Array [
        Object {
          "id": 0,
          "items": Array [
            Object {
              "data-test-subj": "fitToBoundsButton",
              "disabled": false,
              "icon": <EuiIcon
                size="m"
                type="search"
              />,
              "name": "Fit to data",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "layerVisibilityToggleButton",
              "icon": <EuiIcon
                size="m"
                type="eye"
              />,
              "name": "Hide layer",
              "onClick": [Function],
            },
            Object {
              "data-test-subj": "cloneLayerButton",
              "icon": <EuiIcon
                size="m"
                type="copy"
              />,
              "name": "Clone layer",
              "onClick": [Function],
            },
          ],
          "title": "Layer actions",
        },
      ]
    }
  />
</EuiPopover>
`;

exports[`LayerTocActions should disable fit to data when supportsFitToBounds is false 1`] = `
<EuiPopover
  anchorPosition="leftUp"
  button={
    <EuiButtonEmpty
      color="text"
      data-test-subj="layerTocActionsPanelToggleButtonlayer1"
      flush="left"
      iconSide="left"
      onClick={[Function]}
      size="xs"
      type="button"
    >
      <div>
        icon mock
      </div>
    </EuiButtonEmpty>
  }
  closePopover={[Function]}
  hasArrow={true}
  id="contextMenu"
  isOpen={false}
  ownFocus={false}
  panelPaddingSize="none"
  withTitle={true}
>
  <EuiContextMenu
    data-test-subj="layerTocActionsPanellayer1"
    initialPanelId={0}
    panels={
      Array [
        Object {
          "id": 0,
          "items": Array [
            Object {
              "data-test-subj": "fitToBoundsButton",
              "disabled": true,
              "icon": <EuiIcon
                size="m"
                type="search"
              />,
              "name": "Fit to data",
              "onClick": [Function],
              "toolTipContent": "Layer does not support fit to data",
            },
            Object {
              "data-test-subj": "layerVisibilityToggleButton",
              "icon": <EuiIcon
                size="m"
                type="eye"
              />,
              "name": "Hide layer",
              "onClick": [Function],
            },
            Object {
              "data-test-subj": "cloneLayerButton",
              "icon": <EuiIcon
                size="m"
                type="copy"
              />,
              "name": "Clone layer",
              "onClick": [Function],
            },
          ],
          "title": "Layer actions",
        },
      ]
    }
  />
</EuiPopover>
`;

exports[`LayerTocActions should display spinner when layer is loading 1`] = `
<EuiPopover
  anchorPosition="leftUp"
  button={
    <EuiButtonEmpty
      color="text"
      data-test-subj="layerTocActionsPanelToggleButtonlayer1"
      flush="left"
      iconSide="left"
      onClick={[Function]}
      size="xs"
      type="button"
    >
      <EuiLoadingSpinner
        size="m"
      />
    </EuiButtonEmpty>
  }
  closePopover={[Function]}
  hasArrow={true}
  id="contextMenu"
  isOpen={false}
  ownFocus={false}
  panelPaddingSize="none"
  withTitle={true}
>
  <EuiContextMenu
    data-test-subj="layerTocActionsPanellayer1"
    initialPanelId={0}
    panels={
      Array [
        Object {
          "id": 0,
          "items": Array [
            Object {
              "data-test-subj": "fitToBoundsButton",
              "disabled": false,
              "icon": <EuiIcon
                size="m"
                type="search"
              />,
              "name": "Fit to data",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "layerVisibilityToggleButton",
              "icon": <EuiIcon
                size="m"
                type="eye"
              />,
              "name": "Hide layer",
              "onClick": [Function],
            },
            Object {
              "data-test-subj": "cloneLayerButton",
              "icon": <EuiIcon
                size="m"
                type="copy"
              />,
              "name": "Clone layer",
              "onClick": [Function],
            },
          ],
          "title": "Layer actions",
        },
      ]
    }
  />
</EuiPopover>
`;

exports[`LayerTocActions should not show edit actions in read only mode 1`] = `
<EuiPopover
  anchorPosition="leftUp"
  button={
    <EuiButtonEmpty
      color="text"
      data-test-subj="layerTocActionsPanelToggleButtonlayer1"
      flush="left"
      iconSide="left"
      onClick={[Function]}
      size="xs"
      type="button"
    >
      <div>
        icon mock
      </div>
    </EuiButtonEmpty>
  }
  closePopover={[Function]}
  hasArrow={true}
  id="contextMenu"
  isOpen={false}
  ownFocus={false}
  panelPaddingSize="none"
  withTitle={true}
>
  <EuiContextMenu
    data-test-subj="layerTocActionsPanellayer1"
    initialPanelId={0}
    panels={
      Array [
        Object {
          "id": 0,
          "items": Array [
            Object {
              "data-test-subj": "fitToBoundsButton",
              "disabled": false,
              "icon": <EuiIcon
                size="m"
                type="search"
              />,
              "name": "Fit to data",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "layerVisibilityToggleButton",
              "icon": <EuiIcon
                size="m"
                type="eye"
              />,
              "name": "Hide layer",
              "onClick": [Function],
            },
          ],
          "title": "Layer actions",
        },
      ]
    }
  />
</EuiPopover>
`;

exports[`LayerTocActions should provide feedback when layer is not visible because of current zoom level 1`] = `
<EuiPopover
  anchorPosition="leftUp"
  button={
    <EuiButtonEmpty
      color="text"
      data-test-subj="layerTocActionsPanelToggleButtonlayer1"
      flush="left"
      iconSide="left"
      onClick={[Function]}
      size="xs"
      type="button"
    >
      <EuiToolTip
        content="Map is at zoom level 0.
          This layer is only visible between zoom levels 2 to 3."
        delay="regular"
        position="top"
      >
        <div>
          icon mock
        </div>
      </EuiToolTip>
    </EuiButtonEmpty>
  }
  closePopover={[Function]}
  hasArrow={true}
  id="contextMenu"
  isOpen={false}
  ownFocus={false}
  panelPaddingSize="none"
  withTitle={true}
>
  <EuiContextMenu
    data-test-subj="layerTocActionsPanellayer1"
    initialPanelId={0}
    panels={
      Array [
        Object {
          "id": 0,
          "items": Array [
            Object {
              "data-test-subj": "fitToBoundsButton",
              "disabled": false,
              "icon": <EuiIcon
                size="m"
                type="search"
              />,
              "name": "Fit to data",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "layerVisibilityToggleButton",
              "icon": <EuiIcon
                size="m"
                type="eye"
              />,
              "name": "Hide layer",
              "onClick": [Function],
            },
            Object {
              "data-test-subj": "cloneLayerButton",
              "icon": <EuiIcon
                size="m"
                type="copy"
              />,
              "name": "Clone layer",
              "onClick": [Function],
            },
          ],
          "title": "Layer actions",
        },
      ]
    }
  />
</EuiPopover>
`;

exports[`LayerTocActions should show visible toggle when layer is not visible 1`] = `
<EuiPopover
  anchorPosition="leftUp"
  button={
    <EuiButtonEmpty
      color="text"
      data-test-subj="layerTocActionsPanelToggleButtonlayer1"
      flush="left"
      iconSide="left"
      onClick={[Function]}
      size="xs"
      type="button"
    >
      <div>
        icon mock
      </div>
    </EuiButtonEmpty>
  }
  closePopover={[Function]}
  hasArrow={true}
  id="contextMenu"
  isOpen={false}
  ownFocus={false}
  panelPaddingSize="none"
  withTitle={true}
>
  <EuiContextMenu
    data-test-subj="layerTocActionsPanellayer1"
    initialPanelId={0}
    panels={
      Array [
        Object {
          "id": 0,
          "items": Array [
            Object {
              "data-test-subj": "fitToBoundsButton",
              "disabled": false,
              "icon": <EuiIcon
                size="m"
                type="search"
              />,
              "name": "Fit to data",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "layerVisibilityToggleButton",
              "icon": <EuiIcon
                size="m"
                type="eyeClosed"
              />,
              "name": "Show layer",
              "onClick": [Function],
            },
            Object {
              "data-test-subj": "cloneLayerButton",
              "icon": <EuiIcon
                size="m"
                type="copy"
              />,
              "name": "Clone layer",
              "onClick": [Function],
            },
          ],
          "title": "Layer actions",
        },
      ]
    }
  />
</EuiPopover>
`;

exports[`LayerTocActions should show warning when layer has errors 1`] = `
<EuiPopover
  anchorPosition="leftUp"
  button={
    <EuiButtonEmpty
      color="text"
      data-test-subj="layerTocActionsPanelToggleButtonlayer1"
      flush="left"
      iconSide="left"
      onClick={[Function]}
      size="xs"
      type="button"
    >
      <EuiIconTip
        aria-label="Load warning"
        color="warning"
        content="simulated layer error"
        size="m"
        type="alert"
      />
    </EuiButtonEmpty>
  }
  closePopover={[Function]}
  hasArrow={true}
  id="contextMenu"
  isOpen={false}
  ownFocus={false}
  panelPaddingSize="none"
  withTitle={true}
>
  <EuiContextMenu
    data-test-subj="layerTocActionsPanellayer1"
    initialPanelId={0}
    panels={
      Array [
        Object {
          "id": 0,
          "items": Array [
            Object {
              "data-test-subj": "fitToBoundsButton",
              "disabled": false,
              "icon": <EuiIcon
                size="m"
                type="search"
              />,
              "name": "Fit to data",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "layerVisibilityToggleButton",
              "icon": <EuiIcon
                size="m"
                type="eye"
              />,
              "name": "Hide layer",
              "onClick": [Function],
            },
            Object {
              "data-test-subj": "cloneLayerButton",
              "icon": <EuiIcon
                size="m"
                type="copy"
              />,
              "name": "Clone layer",
              "onClick": [Function],
            },
          ],
          "title": "Layer actions",
        },
      ]
    }
  />
</EuiPopover>
`;
