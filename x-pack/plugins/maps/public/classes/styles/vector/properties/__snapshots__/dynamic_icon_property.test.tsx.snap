// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renderLegendDetailRow Should render categorical legend with breaks 1`] = `
<div>
  <EuiFlexGroup
    gutterSize="xs"
    justifyContent="spaceBetween"
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiToolTip
        content="foobar_label"
        delay="regular"
        display="inlineBlock"
        position="top"
        title="Icon"
      >
        <EuiText
          className="eui-textTruncate"
          size="xs"
          style={
            Object {
              "maxWidth": "180px",
            }
          }
        >
          <small>
            <strong>
              foobar_label
            </strong>
          </small>
        </EuiText>
      </EuiToolTip>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiFlexGroup
    direction="column"
    gutterSize="none"
  >
    <EuiFlexItem
      key="0"
    >
      <Category
        color="grey"
        icon={
          Object {
            "svg": undefined,
            "value": "circle",
          }
        }
        isLinesOnly={false}
        isPointsOnly={true}
        label="US_format"
        styleName="icon"
      />
    </EuiFlexItem>
    <EuiFlexItem
      key="1"
    >
      <Category
        color="grey"
        icon={
          Object {
            "svg": undefined,
            "value": "marker",
          }
        }
        isLinesOnly={false}
        isPointsOnly={true}
        label="CN_format"
        styleName="icon"
      />
    </EuiFlexItem>
    <EuiFlexItem
      key="2"
    >
      <Category
        color="grey"
        icon={
          Object {
            "svg": undefined,
            "value": "square",
          }
        }
        isLinesOnly={false}
        isPointsOnly={true}
        label={
          <EuiTextColor
            color="success"
          >
            Other
          </EuiTextColor>
        }
        styleName="icon"
      />
    </EuiFlexItem>
  </EuiFlexGroup>
</div>
`;

exports[`renderLegendDetailRow Should render categorical legend with custom icons in breaks 1`] = `
<div>
  <EuiFlexGroup
    gutterSize="xs"
    justifyContent="spaceBetween"
  >
    <EuiFlexItem
      grow={false}
    >
      <EuiToolTip
        content="foobar_label"
        delay="regular"
        display="inlineBlock"
        position="top"
        title="Icon"
      >
        <EuiText
          className="eui-textTruncate"
          size="xs"
          style={
            Object {
              "maxWidth": "180px",
            }
          }
        >
          <small>
            <strong>
              foobar_label
            </strong>
          </small>
        </EuiText>
      </EuiToolTip>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiFlexGroup
    direction="column"
    gutterSize="none"
  >
    <EuiFlexItem
      key="0"
    >
      <Category
        color="grey"
        icon={
          Object {
            "svg": undefined,
            "value": "marker",
          }
        }
        isLinesOnly={false}
        isPointsOnly={true}
        label="MX_format"
        styleName="icon"
      />
    </EuiFlexItem>
    <EuiFlexItem
      key="1"
    >
      <Category
        color="grey"
        icon={
          Object {
            "svg": "<svg width=\\"200\\" height=\\"250\\" xmlns=\\"http://www.w3.org/2000/svg\\"><path stroke=\\"#000\\" fill=\\"transparent\\" stroke-width=\\"5\\" d=\\"M10 10h30v30H10z\\"/></svg>",
            "value": "kbn__custom_icon_sdf__foobar",
          }
        }
        isLinesOnly={false}
        isPointsOnly={true}
        label={
          <EuiTextColor
            color="success"
          >
            Other
          </EuiTextColor>
        }
        styleName="icon"
      />
    </EuiFlexItem>
  </EuiFlexGroup>
</div>
`;
