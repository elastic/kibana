// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TOCEntryActionsPopover is rendered 1`] = `
<EuiPopover
  anchorClassName="mapLayTocActions__popoverAnchor"
  anchorPosition="leftUp"
  button={
    <Memo(Connect(TOCEntryButton))
      displayName="layer 1"
      escapedDisplayName="layer1"
      layer={
        LayerMock {
          "_dataRequests": Array [],
          "_descriptor": Object {
            "__dataRequests": Array [],
            "alpha": 0.75,
            "id": "testLayer",
            "label": null,
            "maxZoom": 24,
            "minZoom": 0,
            "sourceDescriptor": Object {
              "type": "mySourceType",
            },
            "style": null,
            "visible": true,
          },
          "_source": MockSource {
            "_descriptor": Object {
              "type": "mySourceType",
            },
            "_inspectorAdapters": undefined,
          },
        }
      }
      onClick={[Function]}
    />
  }
  className="mapLayTocActions"
  closePopover={[Function]}
  display="inlineBlock"
  hasArrow={true}
  id="testLayer"
  isOpen={false}
  ownFocus={true}
  panelPaddingSize="none"
>
  <EuiContextMenu
    data-test-subj="layerTocActionsPanellayer1"
    initialPanelId={0}
    panels={
      Array [
        Object {
          "id": 0,
          "items": Array [
            Object {
              "data-test-subj": "fitToBoundsButton",
              "disabled": false,
              "icon": <EuiIcon
                size="m"
                type="expand"
              />,
              "name": "Fit to data",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "layerVisibilityToggleButton",
              "icon": <EuiIcon
                size="m"
                type="eyeClosed"
              />,
              "name": "Hide layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "editLayerButton",
              "disabled": false,
              "icon": <EuiIcon
                size="m"
                type="pencil"
              />,
              "name": "Edit layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "cloneLayerButton",
              "icon": <EuiIcon
                size="m"
                type="copy"
              />,
              "name": "Clone layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "removeLayerButton",
              "icon": <EuiIcon
                size="m"
                type="trash"
              />,
              "name": "Remove layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
          ],
          "title": "Layer actions",
        },
      ]
    }
    size="m"
  />
</EuiPopover>
`;

exports[`TOCEntryActionsPopover should disable fit to data when supportsFitToBounds is false 1`] = `
<EuiPopover
  anchorClassName="mapLayTocActions__popoverAnchor"
  anchorPosition="leftUp"
  button={
    <Memo(Connect(TOCEntryButton))
      displayName="layer 1"
      escapedDisplayName="layer1"
      layer={
        LayerMock {
          "_dataRequests": Array [],
          "_descriptor": Object {
            "__dataRequests": Array [],
            "alpha": 0.75,
            "id": "testLayer",
            "label": null,
            "maxZoom": 24,
            "minZoom": 0,
            "sourceDescriptor": Object {
              "type": "mySourceType",
            },
            "style": null,
            "visible": true,
          },
          "_source": MockSource {
            "_descriptor": Object {
              "type": "mySourceType",
            },
            "_inspectorAdapters": undefined,
          },
        }
      }
      onClick={[Function]}
    />
  }
  className="mapLayTocActions"
  closePopover={[Function]}
  display="inlineBlock"
  hasArrow={true}
  id="testLayer"
  isOpen={false}
  ownFocus={true}
  panelPaddingSize="none"
>
  <EuiContextMenu
    data-test-subj="layerTocActionsPanellayer1"
    initialPanelId={0}
    panels={
      Array [
        Object {
          "id": 0,
          "items": Array [
            Object {
              "data-test-subj": "fitToBoundsButton",
              "disabled": true,
              "icon": <EuiIcon
                size="m"
                type="expand"
              />,
              "name": "Fit to data",
              "onClick": [Function],
              "toolTipContent": "Layer does not support fit to data",
            },
            Object {
              "data-test-subj": "layerVisibilityToggleButton",
              "icon": <EuiIcon
                size="m"
                type="eyeClosed"
              />,
              "name": "Hide layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "editLayerButton",
              "disabled": false,
              "icon": <EuiIcon
                size="m"
                type="pencil"
              />,
              "name": "Edit layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "cloneLayerButton",
              "icon": <EuiIcon
                size="m"
                type="copy"
              />,
              "name": "Clone layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "removeLayerButton",
              "icon": <EuiIcon
                size="m"
                type="trash"
              />,
              "name": "Remove layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
          ],
          "title": "Layer actions",
        },
      ]
    }
    size="m"
  />
</EuiPopover>
`;

exports[`TOCEntryActionsPopover should have "show layer" action when layer is not visible 1`] = `
<EuiPopover
  anchorClassName="mapLayTocActions__popoverAnchor"
  anchorPosition="leftUp"
  button={
    <Memo(Connect(TOCEntryButton))
      displayName="layer 1"
      escapedDisplayName="layer1"
      layer={
        LayerMock {
          "_dataRequests": Array [],
          "_descriptor": Object {
            "__dataRequests": Array [],
            "alpha": 0.75,
            "id": "testLayer",
            "label": null,
            "maxZoom": 24,
            "minZoom": 0,
            "sourceDescriptor": Object {
              "type": "mySourceType",
            },
            "style": null,
            "visible": true,
          },
          "_source": MockSource {
            "_descriptor": Object {
              "type": "mySourceType",
            },
            "_inspectorAdapters": undefined,
          },
          "isVisible": [Function],
        }
      }
      onClick={[Function]}
    />
  }
  className="mapLayTocActions"
  closePopover={[Function]}
  display="inlineBlock"
  hasArrow={true}
  id="testLayer"
  isOpen={false}
  ownFocus={true}
  panelPaddingSize="none"
>
  <EuiContextMenu
    data-test-subj="layerTocActionsPanellayer1"
    initialPanelId={0}
    panels={
      Array [
        Object {
          "id": 0,
          "items": Array [
            Object {
              "data-test-subj": "fitToBoundsButton",
              "disabled": false,
              "icon": <EuiIcon
                size="m"
                type="expand"
              />,
              "name": "Fit to data",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "layerVisibilityToggleButton",
              "icon": <EuiIcon
                size="m"
                type="eye"
              />,
              "name": "Show layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "editLayerButton",
              "disabled": false,
              "icon": <EuiIcon
                size="m"
                type="pencil"
              />,
              "name": "Edit layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "cloneLayerButton",
              "icon": <EuiIcon
                size="m"
                type="copy"
              />,
              "name": "Clone layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "removeLayerButton",
              "icon": <EuiIcon
                size="m"
                type="trash"
              />,
              "name": "Remove layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
          ],
          "title": "Layer actions",
        },
      ]
    }
    size="m"
  />
</EuiPopover>
`;

exports[`TOCEntryActionsPopover should not show edit actions in read only mode 1`] = `
<EuiPopover
  anchorClassName="mapLayTocActions__popoverAnchor"
  anchorPosition="leftUp"
  button={
    <Memo(Connect(TOCEntryButton))
      displayName="layer 1"
      escapedDisplayName="layer1"
      layer={
        LayerMock {
          "_dataRequests": Array [],
          "_descriptor": Object {
            "__dataRequests": Array [],
            "alpha": 0.75,
            "id": "testLayer",
            "label": null,
            "maxZoom": 24,
            "minZoom": 0,
            "sourceDescriptor": Object {
              "type": "mySourceType",
            },
            "style": null,
            "visible": true,
          },
          "_source": MockSource {
            "_descriptor": Object {
              "type": "mySourceType",
            },
            "_inspectorAdapters": undefined,
          },
        }
      }
      onClick={[Function]}
    />
  }
  className="mapLayTocActions"
  closePopover={[Function]}
  display="inlineBlock"
  hasArrow={true}
  id="testLayer"
  isOpen={false}
  ownFocus={true}
  panelPaddingSize="none"
>
  <EuiContextMenu
    data-test-subj="layerTocActionsPanellayer1"
    initialPanelId={0}
    panels={
      Array [
        Object {
          "id": 0,
          "items": Array [
            Object {
              "data-test-subj": "fitToBoundsButton",
              "disabled": false,
              "icon": <EuiIcon
                size="m"
                type="expand"
              />,
              "name": "Fit to data",
              "onClick": [Function],
              "toolTipContent": null,
            },
            Object {
              "data-test-subj": "layerVisibilityToggleButton",
              "icon": <EuiIcon
                size="m"
                type="eyeClosed"
              />,
              "name": "Hide layer",
              "onClick": [Function],
              "toolTipContent": null,
            },
          ],
          "title": "Layer actions",
        },
      ]
    }
    size="m"
  />
</EuiPopover>
`;
