// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TOCEntry is rendered 1`] = `
<div
  className="mapTocEntry"
  data-layerid="1"
  id="1"
>
  <EuiFlexGroup
    alignItems="center"
    className="mapTocEntry-visible"
    gutterSize="none"
    responsive={false}
  >
    <EuiFlexItem
      grow={false}
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <LayerTocActions
        cloneLayer={[Function]}
        displayName="layer 1"
        editLayer={[Function]}
        escapedDisplayName="layer_1"
        fitToBounds={[Function]}
        layer={
          Object {
            "getDisplayName": [Function],
            "getId": [Function],
            "getTOCDetails": [Function],
            "hasErrors": [Function],
            "isVisible": [Function],
            "showAtZoomLevel": [Function],
          }
        }
        toggleVisible={[Function]}
        zoom={0}
      />
      <span
        className="mapTocEntry__detailsToggle"
      >
        <EuiButtonIcon
          aria-label="Show layer details"
          className="mapTocEntry__detailsToggleButton"
          color="primary"
          iconSize="m"
          iconType="arrowDown"
          onClick={[Function]}
          title="Show layer details"
          type="button"
        />
      </span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <span
    className="mapTocEntry__layerIcons"
  >
    <EuiButtonIcon
      aria-label="Edit layer"
      color="primary"
      iconSize="m"
      iconType="pencil"
      onClick={[Function]}
      title="Edit layer"
      type="button"
    />
    <span
      className="mapTocEntry__grab"
    >
      <EuiIcon
        type="grab"
      />
    </span>
  </span>
</div>
`;

exports[`TOCEntry props isReadOnly 1`] = `
<div
  className="mapTocEntry"
  data-layerid="1"
  id="1"
>
  <EuiFlexGroup
    alignItems="center"
    className="mapTocEntry-visible"
    gutterSize="none"
    responsive={false}
  >
    <EuiFlexItem
      grow={false}
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <LayerTocActions
        cloneLayer={[Function]}
        displayName="layer 1"
        editLayer={[Function]}
        escapedDisplayName="layer_1"
        fitToBounds={[Function]}
        isReadOnly={true}
        layer={
          Object {
            "getDisplayName": [Function],
            "getId": [Function],
            "getTOCDetails": [Function],
            "hasErrors": [Function],
            "isVisible": [Function],
            "showAtZoomLevel": [Function],
          }
        }
        toggleVisible={[Function]}
        zoom={0}
      />
      <span
        className="mapTocEntry__detailsToggle"
      >
        <EuiButtonIcon
          aria-label="Show layer details"
          className="mapTocEntry__detailsToggleButton"
          color="primary"
          iconSize="m"
          iconType="arrowDown"
          onClick={[Function]}
          title="Show layer details"
          type="button"
        />
      </span>
    </EuiFlexItem>
  </EuiFlexGroup>
</div>
`;

exports[`TOCEntry props should display layer details when layer id is in openTOCDetails 1`] = `
<div
  className="mapTocEntry"
  data-layerid="1"
  id="1"
>
  <EuiFlexGroup
    alignItems="center"
    className="mapTocEntry-visible"
    gutterSize="none"
    responsive={false}
  >
    <EuiFlexItem
      grow={false}
      style={
        Object {
          "position": "relative",
        }
      }
    >
      <LayerTocActions
        cloneLayer={[Function]}
        displayName="layer 1"
        editLayer={[Function]}
        escapedDisplayName="layer_1"
        fitToBounds={[Function]}
        layer={
          Object {
            "getDisplayName": [Function],
            "getId": [Function],
            "getTOCDetails": [Function],
            "hasErrors": [Function],
            "isVisible": [Function],
            "showAtZoomLevel": [Function],
          }
        }
        toggleVisible={[Function]}
        zoom={0}
      />
      <span
        className="mapTocEntry__detailsToggle"
      >
        <EuiButtonIcon
          aria-label="Hide layer details"
          className="mapTocEntry__detailsToggleButton"
          color="primary"
          iconSize="m"
          iconType="arrowUp"
          onClick={[Function]}
          title="Hide layer details"
          type="button"
        />
      </span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <div
    data-test-subj="mapLayerTOCDetailslayer_1"
  >
    <div>
      TOC details mock
    </div>
  </div>
  <span
    className="mapTocEntry__layerIcons"
  >
    <EuiButtonIcon
      aria-label="Edit layer"
      color="primary"
      iconSize="m"
      iconType="pencil"
      onClick={[Function]}
      title="Edit layer"
      type="button"
    />
    <span
      className="mapTocEntry__grab"
    >
      <EuiIcon
        type="grab"
      />
    </span>
  </span>
</div>
`;
