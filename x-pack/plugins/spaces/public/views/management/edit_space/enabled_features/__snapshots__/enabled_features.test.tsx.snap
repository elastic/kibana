// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EnabledFeatures renders as expected 1`] = `
<SectionPanel
  collapsible={true}
  data-test-subj="enabled-features-panel"
  description="Customize visible features"
  initiallyCollapsed={true}
  intl={
    Object {
      "defaultFormats": Object {},
      "defaultLocale": "en",
      "formatDate": [Function],
      "formatHTMLMessage": [Function],
      "formatMessage": [Function],
      "formatNumber": [Function],
      "formatPlural": [Function],
      "formatRelative": [Function],
      "formatTime": [Function],
      "formats": Object {
        "date": Object {
          "full": Object {
            "day": "numeric",
            "month": "long",
            "weekday": "long",
            "year": "numeric",
          },
          "long": Object {
            "day": "numeric",
            "month": "long",
            "year": "numeric",
          },
          "medium": Object {
            "day": "numeric",
            "month": "short",
            "year": "numeric",
          },
          "short": Object {
            "day": "numeric",
            "month": "numeric",
            "year": "2-digit",
          },
        },
        "number": Object {
          "currency": Object {
            "style": "currency",
          },
          "percent": Object {
            "style": "percent",
          },
        },
        "relative": Object {
          "days": Object {
            "units": "day",
          },
          "hours": Object {
            "units": "hour",
          },
          "minutes": Object {
            "units": "minute",
          },
          "months": Object {
            "units": "month",
          },
          "seconds": Object {
            "units": "second",
          },
          "years": Object {
            "units": "year",
          },
        },
        "time": Object {
          "full": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "long": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
            "timeZoneName": "short",
          },
          "medium": Object {
            "hour": "numeric",
            "minute": "numeric",
            "second": "numeric",
          },
          "short": Object {
            "hour": "numeric",
            "minute": "numeric",
          },
        },
      },
      "formatters": Object {
        "getDateTimeFormat": [Function],
        "getMessageFormat": [Function],
        "getNumberFormat": [Function],
        "getPluralFormat": [Function],
        "getRelativeFormat": [Function],
      },
      "locale": "en",
      "messages": Object {},
      "now": [Function],
      "onError": [Function],
      "textComponent": Symbol(react.fragment),
      "timeZone": null,
    }
  }
  title={
    <span>
      <FormattedMessage
        defaultMessage="Customize feature display"
        id="xpack.spaces.management.enabledSpaceFeatures.enabledFeaturesSectionMessage"
        values={Object {}}
      />
       
      <EuiText
        grow={true}
        size="s"
        style={
          Object {
            "display": "inline-block",
          }
        }
      >
        <em>
          <FormattedMessage
            defaultMessage="(all features visible)"
            id="xpack.spaces.management.enabledSpaceFeatures.allFeaturesEnabledMessage"
            values={Object {}}
          />
        </em>
      </EuiText>
    </span>
  }
>
  <EuiFlexGroup
    alignItems="stretch"
    component="div"
    direction="row"
    gutterSize="l"
    justifyContent="flexStart"
    responsive={true}
    wrap={false}
  >
    <EuiFlexItem
      component="div"
      grow={true}
    >
      <EuiTitle
        size="xs"
        textTransform="none"
      >
        <h3>
          <FormattedMessage
            defaultMessage="Control which features are visible in this space."
            id="xpack.spaces.management.enabledSpaceFeatures.enableFeaturesInSpaceMessage"
            values={Object {}}
          />
        </h3>
      </EuiTitle>
      <EuiSpacer
        size="s"
      />
      <EuiText
        color="subdued"
        grow={true}
        size="s"
      >
        <p>
          <FormattedMessage
            defaultMessage="This is not a security mechanism."
            id="xpack.spaces.management.enabledSpaceFeatures.notASecurityMechanismMessage"
            values={Object {}}
          />
        </p>
      </EuiText>
    </EuiFlexItem>
    <EuiFlexItem
      component="div"
      grow={true}
    >
      <FeatureTable
        features={
          Array [
            Object {
              "icon": "discoverApp",
              "id": "some-feature",
              "name": "Some Feature",
              "privileges": Object {},
            },
          ]
        }
        intl={
          Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {
              "date": Object {
                "full": Object {
                  "day": "numeric",
                  "month": "long",
                  "weekday": "long",
                  "year": "numeric",
                },
                "long": Object {
                  "day": "numeric",
                  "month": "long",
                  "year": "numeric",
                },
                "medium": Object {
                  "day": "numeric",
                  "month": "short",
                  "year": "numeric",
                },
                "short": Object {
                  "day": "numeric",
                  "month": "numeric",
                  "year": "2-digit",
                },
              },
              "number": Object {
                "currency": Object {
                  "style": "currency",
                },
                "percent": Object {
                  "style": "percent",
                },
              },
              "relative": Object {
                "days": Object {
                  "units": "day",
                },
                "hours": Object {
                  "units": "hour",
                },
                "minutes": Object {
                  "units": "minute",
                },
                "months": Object {
                  "units": "month",
                },
                "seconds": Object {
                  "units": "second",
                },
                "years": Object {
                  "units": "year",
                },
              },
              "time": Object {
                "full": Object {
                  "hour": "numeric",
                  "minute": "numeric",
                  "second": "numeric",
                  "timeZoneName": "short",
                },
                "long": Object {
                  "hour": "numeric",
                  "minute": "numeric",
                  "second": "numeric",
                  "timeZoneName": "short",
                },
                "medium": Object {
                  "hour": "numeric",
                  "minute": "numeric",
                  "second": "numeric",
                },
                "short": Object {
                  "hour": "numeric",
                  "minute": "numeric",
                },
              },
            },
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {},
            "now": [Function],
            "onError": [Function],
            "textComponent": Symbol(react.fragment),
            "timeZone": null,
          }
        }
        onChange={[MockFunction]}
        space={
          Object {
            "id": "my-space",
          }
        }
      />
    </EuiFlexItem>
  </EuiFlexGroup>
</SectionPanel>
`;
