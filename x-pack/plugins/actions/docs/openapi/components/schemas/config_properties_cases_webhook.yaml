title: Connector request properties for Webhook - Case Management connector
required:
  - createIncidentJson
  - createIncidentResponseKey
  - createIncidentUrl
  - getIncidentResponseExternalTitleKey
  - getIncidentUrl
  - updateIncidentJson
  - updateIncidentUrl
  - viewIncidentUrl
description: Defines properties for connectors when type is `.cases-webhook`.
type: object
properties:
  createCommentJson:
    type: string
    description: >
      A JSON payload sent to the create comment URL to create a case comment.
      You can use variables to add Kibana Cases data to the payload.
      The required variable is `case.comment`. Due to Mustache template
      variables (the text enclosed in triple braces, for example,
      `{{{case.title}}}`), the JSON is not validated when you create the
      connector. The JSON is validated once the Mustache variables have been
      placed when the REST method runs. Manually ensure that the JSON is valid,
      disregarding the Mustache variables, so the later validation will pass.
    example: {"body": {{{case.comment}}}}
  createCommentMethod:
    type: string
    description: >
      The REST API HTTP request method to create a case comment in the
      third-party system. Valid values are `patch`, `post`, and `put`.
    default: put
    enum: 
      - patch
      - post
      - put
  createCommentUrl:
    type: string
    description: >
      The REST API URL to create a case comment by ID in the third-party system.
      You can use a variable to add the external system ID to the URL. If you
      are using the `xpack.actions.allowedHosts setting`, add the hostname to
      the allowed hosts.
    example: https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}/comment
  createIncidentJson:
    type: string
    description: >
      A JSON payload sent to the create case URL to create a case. You can use
      variables to add case data to the payload. Required variables are
      `case.title` and `case.description`. Due to Mustache template variables
      (which is the text enclosed in triple braces, for example,
      `{{{case.title}}}`), the JSON is not validated when you create the
      connector. The JSON is validated after the Mustache variables have been
      placed when REST method runs. Manually ensure that the JSON is valid to
      avoid future validation errors; disregard Mustache variables during your review.
    example: {"fields": {"summary": {{{case.title}}},"description": {{{case.description}}},"labels": {{{case.tags}}}}}
  createIncidentMethod:
    type: string
    description: >
      The REST API HTTP request method to create a case in the third-party
      system. Valid values are `patch`, `post`, and `put`.
    enum:
      - patch
      - post
      - put
    default: post
  createIncidentResponseKey:
    type: string
    description: The JSON key in the create case response that contains the external case ID.
  createIncidentUrl:
    type: string
    description: >
      The REST API URL to create a case in the third-party system. If you are
      using the `xpack.actions.allowedHosts` setting, add the hostname to the allowed hosts.
  getIncidentResponseExternalTitleKey:
    type: string
    description: The JSON key in get case response that contains the external case title.
  getIncidentUrl:
    type: string
    description: >
      The REST API URL to get the case by ID from the third-party system. If you
      are using the `xpack.actions.allowedHosts` setting, add the hostname to
      the allowed hosts. You can use a variable to add the external system ID to
      the URL. Due to Mustache template variables (the text enclosed in triple
      braces, for example, `{{{case.title}}}`), the JSON is not validated when
      you create the connector. The JSON is validated after the Mustache
      variables have been placed when REST method runs. Manually ensure that the
      JSON is valid, disregarding the Mustache variables, so the later
      validation will pass.
    example: https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}
  hasAuth:
    type: boolean
    description: If true, a username and password for login type authentication must be provided.
    default: true
  headers:
    type: string
    description: >
      A set of key-value pairs sent as headers with the request URLs for the
      create case, update case, get case, and create comment methods.
  updateIncidentJson:
    type: string
    description: >
      The JSON payload sent to the update case URL to update the case. You can
      use variables to add Kibana Cases data to the payload. Required variables
      are `case.title` and `case.description`. Due to Mustache template
      variables (which is the text enclosed in triple braces, for example,
      `{{{case.title}}}`), the JSON is not validated when you create the
      connector. The JSON is validated after the Mustache variables have been
      placed when REST method runs. Manually ensure that the JSON is valid to
      avoid future validation errors; disregard Mustache variables during your review.
    example: {"fields": {"summary": {{{case.title}}},"description": {{{case.description}}},"labels": {{{case.tags}}}}}
  updateIncidentMethod:
    type: string
    description: >
      The REST API HTTP request method to update the case in the third-party
      system. Valid values are `patch`, `post`, and `put`.
    default: put
    enum:
      - patch
      - post
      - put
  updateIncidentUrl:
    type: string
    description: >
      The REST API URL to update the case by ID in the third-party system. You
      can use a variable to add the external system ID to the URL. If you are
      using the `xpack.actions.allowedHosts` setting, add the hostname to the allowed hosts.
    example: https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.ID}}}
  viewIncidentUrl:
    type: string
    description: >
      The URL to view the case in the external system. You can use variables to
      add the external system ID or external system title to the URL.
    example: https://testing-jira.atlassian.net/browse/{{{external.system.title}}}


