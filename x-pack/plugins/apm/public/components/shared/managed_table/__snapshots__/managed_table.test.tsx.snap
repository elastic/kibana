// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ManagedTable should render a page-full of items, with defaults 1`] = `
<EuiBasicTable
  columns={
    Array [
      Object {
        "field": "name",
        "name": "Name",
        "render": [Function],
        "sortable": true,
      },
      Object {
        "field": "age",
        "name": "Age",
        "render": [Function],
      },
    ]
  }
  error=""
  items={
    Array [
      Object {
        "age": 43,
        "name": "Becky",
      },
      Object {
        "age": 29,
        "name": "Jess",
      },
      Object {
        "age": 31,
        "name": "Thomas",
      },
    ]
  }
  loading={false}
  noItemsMessage={
    <EuiI18n
      default="No items found"
      token="euiBasicTable.noItemsMessage"
    />
  }
  onChange={[Function]}
  pagination={
    Object {
      "pageIndex": 0,
      "pageSize": 25,
      "pageSizeOptions": Array [
        10,
        25,
        50,
      ],
      "showPerPageOptions": true,
      "totalItemCount": 3,
    }
  }
  responsive={true}
  sorting={
    Object {
      "sort": Object {
        "direction": "asc",
        "field": "name",
      },
    }
  }
  tableLayout="fixed"
/>
`;

exports[`ManagedTable should render when specifying initial values 1`] = `
<EuiBasicTable
  columns={
    Array [
      Object {
        "field": "name",
        "name": "Name",
        "render": [Function],
        "sortable": true,
      },
      Object {
        "field": "age",
        "name": "Age",
        "render": [Function],
      },
    ]
  }
  error=""
  items={
    Array [
      Object {
        "age": 29,
        "name": "Jess",
      },
    ]
  }
  loading={false}
  noItemsMessage={
    <EuiI18n
      default="No items found"
      token="euiBasicTable.noItemsMessage"
    />
  }
  onChange={[Function]}
  pagination={
    Object {
      "pageIndex": 1,
      "pageSize": 2,
      "pageSizeOptions": Array [
        10,
        25,
        50,
      ],
      "showPerPageOptions": false,
      "totalItemCount": 3,
    }
  }
  responsive={true}
  sorting={
    Object {
      "sort": Object {
        "direction": "desc",
        "field": "age",
      },
    }
  }
  tableLayout="fixed"
/>
`;
