// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DetailView should render empty state 1`] = `""`;

exports[`DetailView should render with data 1`] = `
<styled.div>
  <styled.div>
    <styled.h2
      css="
            margin: 0;
          "
    >
      Error occurrence
    </styled.h2>
    <Component
      groupId="c00e245c2fbebaf178fc31eeb2bb0250"
      serviceName="opbeans-node"
    >
      <EuiButtonEmpty
        color="primary"
        iconSide="left"
        iconType="discoverApp"
        type="button"
      >
        View 18 occurences in Discover
      </EuiButtonEmpty>
    </Component>
  </styled.div>
  <styled.div>
    <StickyProperties
      stickyProperties={
        Array [
          Object {
            "fieldName": "@timestamp",
            "label": "Timestamp",
            "val": "2018-01-09T14:39:00.274Z",
            "width": "50%",
          },
          Object {
            "fieldName": "context.request.url.full",
            "label": "URL",
            "truncated": true,
            "val": "N/A",
            "width": "50%",
          },
          Object {
            "fieldName": "context.request.method",
            "label": "Request method",
            "val": "GET",
            "width": "25%",
          },
          Object {
            "fieldName": "error.exception.handled",
            "label": "Handled",
            "val": "N/A",
            "width": "25%",
          },
          Object {
            "fieldName": "context.user.id",
            "label": "User ID",
            "val": "N/A",
            "width": "50%",
          },
        ]
      }
    />
  </styled.div>
  <styled.div>
    <styled.div
      key="exception_stacktrace"
      onClick={[Function]}
      selected={true}
    >
      Exception stacktrace
    </styled.div>
    <styled.div
      key="request"
      onClick={[Function]}
      selected={false}
    >
      Request
    </styled.div>
    <styled.div
      key="response"
      onClick={[Function]}
      selected={false}
    >
      Response
    </styled.div>
    <styled.div
      key="system"
      onClick={[Function]}
      selected={false}
    >
      System
    </styled.div>
    <styled.div
      key="service"
      onClick={[Function]}
      selected={false}
    >
      Service
    </styled.div>
    <styled.div
      key="process"
      onClick={[Function]}
      selected={false}
    >
      Process
    </styled.div>
    <styled.div
      key="user"
      onClick={[Function]}
      selected={false}
    >
      User
    </styled.div>
    <styled.div
      key="tags"
      onClick={[Function]}
      selected={false}
    >
      Tags
    </styled.div>
    <styled.div
      key="custom"
      onClick={[Function]}
      selected={false}
    >
      Custom
    </styled.div>
  </styled.div>
  <styled.div>
    <TabContent
      agentName="nodejs"
      codeLanguage="javascript"
      currentTab="exception_stacktrace"
      errorGroup={
        Object {
          "args": Object {
            "end": "2018-01-09T14:39:42.561Z",
            "errorGroupId": "c00e245c2fbebaf178fc31eeb2bb0250",
            "serviceName": "opbeans-node",
            "start": "2018-01-09T14:24:42.561Z",
          },
          "data": Object {
            "error": Object {
              "@timestamp": "2018-01-09T14:39:00.274Z",
              "beat": Object {
                "hostname": "8be8857dbeda",
                "name": "8be8857dbeda",
                "version": "7.0.0-alpha1",
              },
              "context": Object {
                "custom": Object {},
                "process": Object {
                  "argv": Array [
                    "/usr/local/bin/node",
                    "/usr/local/lib/node_modules/pm2/lib/ProcessContainer.js",
                  ],
                  "pid": 36,
                  "title": "node /app/server.js",
                },
                "request": Object {
                  "headers": Object {
                    "connection": "close",
                    "host": "opbeans-node:3000",
                    "user-agent": "workload/2.4.3",
                  },
                  "http_version": "1.1",
                  "method": "GET",
                  "socket": Object {
                    "encrypted": false,
                    "remote_address": "::ffff:172.19.0.7",
                  },
                  "url": Object {
                    "hostname": "opbeans-node",
                    "pathname": "/is-it-coffee-time",
                    "port": "3000",
                    "raw": "/is-it-coffee-time",
                  },
                },
                "response": Object {
                  "finished": false,
                  "headers": Object {},
                  "headers_sent": false,
                  "status_code": 200,
                },
                "service": Object {
                  "agent": Object {
                    "name": "nodejs",
                    "version": "0.9.0",
                  },
                  "framework": Object {
                    "name": "express",
                    "version": "4.16.2",
                  },
                  "language": Object {
                    "name": "javascript",
                  },
                  "name": "opbeans-node",
                  "runtime": Object {
                    "name": "node",
                    "version": "v6.12.0",
                  },
                },
                "system": Object {
                  "architecture": "x64",
                  "hostname": "b4cb1df7e088",
                  "platform": "linux",
                },
                "tags": Object {
                  "foo": "bar",
                  "lorem": "ipsum dolor sit amet, consectetur adipiscing elit. Nulla finibus, ipsum id scelerisque consequat, enim leo vulputate massa, vel ultricies ante neque ac risus. Curabitur tincidunt vitae sapien id pulvinar. Mauris eu vestibulum tortor. Integer sit amet lorem fringilla, egestas tellus vitae, vulputate purus. Nulla feugiat blandit nunc et semper. Morbi purus libero, mattis sed mauris non, euismod iaculis lacus. Curabitur eleifend ante eros, non faucibus velit lacinia id. Duis posuere libero augue, at dignissim urna consectetur eget. Praesent eu congue est, iaculis finibus augue.",
                  "multi-line": "foo
bar
baz",
                  "this-is-a-very-long-tag-name-without-any-spaces": "test",
                },
                "user": Object {},
              },
              "error": Object {
                "culprit": "<anonymous> (server/coffee.js)",
                "exception": Object {
                  "message": "Cannot read property 'level' of undefined",
                  "stacktrace": Array [
                    Object {
                      "absPath": "/app/server/coffee.js",
                      "context": Object {
                        "post": Array [
                          "    res.send('Of course!')",
                          "  } else {",
                          "    res.send('You can\\\\'t have any!')",
                          "  }",
                          "})",
                          "",
                          "app.get('/log-error', function (req, res) {",
                        ],
                        "pre": Array [
                          "",
                          "var express = require('express')",
                          "var apm = require('elastic-apm-node')",
                          "",
                          "var app = module.exports = new express.Router()",
                          "",
                          "app.get('/is-it-coffee-time', function (req, res) {",
                        ],
                      },
                      "filename": "server/coffee.js",
                      "function": "<anonymous>",
                      "libraryFrame": false,
                      "line": Object {
                        "context": "  if (req.paarms.level === 11) {",
                        "number": 9,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/layer.js",
                      "context": Object {
                        "post": Array [
                          "  } catch (err) {",
                          "    next(err);",
                          "  }",
                          "};",
                          "",
                          "/**",
                          " * Check if this route matches \`path\`, if so",
                        ],
                        "pre": Array [
                          "",
                          "  if (fn.length > 3) {",
                          "    // not a standard request handler",
                          "    return next();",
                          "  }",
                          "",
                          "  try {",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/layer.js",
                      "function": "handle",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    fn(req, res, next);",
                        "number": 95,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/route.js",
                      "context": Object {
                        "post": Array [
                          "    }",
                          "  }",
                          "};",
                          "",
                          "/**",
                          " * Add a handler for all HTTP verbs to this route.",
                          " *",
                        ],
                        "pre": Array [
                          "    if (layer.method && layer.method !== method) {",
                          "      return next(err);",
                          "    }",
                          "",
                          "    if (err) {",
                          "      layer.handle_error(err, req, res, next);",
                          "    } else {",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/route.js",
                      "function": "next",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "      layer.handle_request(req, res, next);",
                        "number": 137,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/route.js",
                      "context": Object {
                        "post": Array [
                          "",
                          "  function next(err) {",
                          "    // signal to exit route",
                          "    if (err && err === 'route') {",
                          "      return done();",
                          "    }",
                          "",
                        ],
                        "pre": Array [
                          "  var method = req.method.toLowerCase();",
                          "  if (method === 'head' && !this.methods['head']) {",
                          "    method = 'get';",
                          "  }",
                          "",
                          "  req.route = this;",
                          "",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/route.js",
                      "function": "dispatch",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "  next();",
                        "number": 112,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/layer.js",
                      "context": Object {
                        "post": Array [
                          "  } catch (err) {",
                          "    next(err);",
                          "  }",
                          "};",
                          "",
                          "/**",
                          " * Check if this route matches \`path\`, if so",
                        ],
                        "pre": Array [
                          "",
                          "  if (fn.length > 3) {",
                          "    // not a standard request handler",
                          "    return next();",
                          "  }",
                          "",
                          "  try {",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/layer.js",
                      "function": "handle",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    fn(req, res, next);",
                        "number": 95,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "      }",
                          "",
                          "      trim_prefix(layer, layerError, layerPath, path);",
                          "    });",
                          "  }",
                          "",
                          "  function trim_prefix(layer, layerError, layerPath, path) {",
                        ],
                        "pre": Array [
                          "    // this should be done for the layer",
                          "    self.process_params(layer, paramcalled, req, res, function (err) {",
                          "      if (err) {",
                          "        return next(layerError || err);",
                          "      }",
                          "",
                          "      if (route) {",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "<anonymous>",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "        return layer.handle_request(req, res, next);",
                        "number": 281,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "  }",
                          "",
                          "  var i = 0;",
                          "  var name;",
                          "  var paramIndex = 0;",
                          "  var key;",
                          "  var paramVal;",
                        ],
                        "pre": Array [
                          "  var params = this.params;",
                          "",
                          "  // captured parameters from the layer, keys and values",
                          "  var keys = layer.keys;",
                          "",
                          "  // fast track",
                          "  if (!keys || keys.length === 0) {",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "process_params",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    return done();",
                        "number": 335,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "      if (err) {",
                          "        return next(layerError || err);",
                          "      }",
                          "",
                          "      if (route) {",
                          "        return layer.handle_request(req, res, next);",
                          "      }",
                        ],
                        "pre": Array [
                          "    // Capture one-time layer values",
                          "    req.params = self.mergeParams",
                          "      ? mergeParams(layer.params, parentParams)",
                          "      : layer.params;",
                          "    var layerPath = layer.path;",
                          "",
                          "    // this should be done for the layer",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "next",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    self.process_params(layer, paramcalled, req, res, function (err) {",
                        "number": 275,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "",
                          "  function next(err) {",
                          "    var layerError = err === 'route'",
                          "      ? null",
                          "      : err;",
                          "",
                          "    // remove added slash",
                        ],
                        "pre": Array [
                          "    });",
                          "  }",
                          "",
                          "  // setup basic req values",
                          "  req.baseUrl = parentUrl;",
                          "  req.originalUrl = req.originalUrl || req.url;",
                          "",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "handle",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "  next();",
                        "number": 174,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "  }",
                          "",
                          "  // mixin Router class functions",
                          "  setPrototypeOf(router, proto)",
                          "",
                          "  router.params = {};",
                          "  router._params = [];",
                        ],
                        "pre": Array [
                          " * @public",
                          " */",
                          "",
                          "var proto = module.exports = function(options) {",
                          "  var opts = options || {};",
                          "",
                          "  function router(req, res, next) {",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "router",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    router.handle(req, res, next);",
                        "number": 47,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/layer.js",
                      "context": Object {
                        "post": Array [
                          "  } catch (err) {",
                          "    next(err);",
                          "  }",
                          "};",
                          "",
                          "/**",
                          " * Check if this route matches \`path\`, if so",
                        ],
                        "pre": Array [
                          "",
                          "  if (fn.length > 3) {",
                          "    // not a standard request handler",
                          "    return next();",
                          "  }",
                          "",
                          "  try {",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/layer.js",
                      "function": "handle",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    fn(req, res, next);",
                        "number": 95,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "    }",
                          "  }",
                          "};",
                          "",
                          "/**",
                          " * Process any parameters for the layer.",
                          " * @private",
                        ],
                        "pre": Array [
                          "    }",
                          "",
                          "    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);",
                          "",
                          "    if (layerError) {",
                          "      layer.handle_error(layerError, req, res, next);",
                          "    } else {",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "trim_prefix",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "      layer.handle_request(req, res, next);",
                        "number": 317,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "    });",
                          "  }",
                          "",
                          "  function trim_prefix(layer, layerError, layerPath, path) {",
                          "    if (layerPath.length !== 0) {",
                          "      // Validate path breaks on a path separator",
                          "      var c = path[layerPath.length]",
                        ],
                        "pre": Array [
                          "        return next(layerError || err);",
                          "      }",
                          "",
                          "      if (route) {",
                          "        return layer.handle_request(req, res, next);",
                          "      }",
                          "",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "<anonymous>",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "      trim_prefix(layer, layerError, layerPath, path);",
                        "number": 284,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "  }",
                          "",
                          "  var i = 0;",
                          "  var name;",
                          "  var paramIndex = 0;",
                          "  var key;",
                          "  var paramVal;",
                        ],
                        "pre": Array [
                          "  var params = this.params;",
                          "",
                          "  // captured parameters from the layer, keys and values",
                          "  var keys = layer.keys;",
                          "",
                          "  // fast track",
                          "  if (!keys || keys.length === 0) {",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "process_params",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    return done();",
                        "number": 335,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "      if (err) {",
                          "        return next(layerError || err);",
                          "      }",
                          "",
                          "      if (route) {",
                          "        return layer.handle_request(req, res, next);",
                          "      }",
                        ],
                        "pre": Array [
                          "    // Capture one-time layer values",
                          "    req.params = self.mergeParams",
                          "      ? mergeParams(layer.params, parentParams)",
                          "      : layer.params;",
                          "    var layerPath = layer.path;",
                          "",
                          "    // this should be done for the layer",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "next",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    self.process_params(layer, paramcalled, req, res, function (err) {",
                        "number": 275,
                      },
                    },
                    Object {
                      "absPath": "/app/server.js",
                      "context": Object {
                        "post": Array [
                          "})",
                          "",
                          "app.use(require('./server/coffee'))",
                          "app.use('/api', require('./server/routes'))",
                          "app.get('*', function (req, res) {",
                          "  res.sendFile(path.resolve(__dirname, 'client/build', 'index.html'))",
                          "})",
                        ],
                        "pre": Array [
                          "app.use(require('body-parser').json())",
                          "app.use(express.static('client/build'))",
                          "app.use(function (req, res, next) {",
                          "  apm.setTag('foo', 'bar')",
                          "  apm.setTag('lorem', 'ipsum dolor sit amet, consectetur adipiscing elit. Nulla finibus, ipsum id scelerisque consequat, enim leo vulputate massa, vel ultricies ante neque ac risus. Curabitur tincidunt vitae sapien id pulvinar. Mauris eu vestibulum tortor. Integer sit amet lorem fringilla, egestas tellus vitae, vulputate purus. Nulla feugiat blandit nunc et semper. Morbi purus libero, mattis sed mauris non, euismod iaculis lacus. Curabitur eleifend ante eros, non faucibus velit lacinia id. Duis posuere libero augue, at dignissim urna consectetur eget. Praesent eu congue est, iaculis finibus augue.')",
                          "  apm.setTag('this-is-a-very-long-tag-name-without-any-spaces', 'test')",
                          "  apm.setTag('multi-line', 'foo\\\\nbar\\\\nbaz')",
                        ],
                      },
                      "filename": "server.js",
                      "function": "<anonymous>",
                      "libraryFrame": false,
                      "line": Object {
                        "context": "  next()",
                        "number": 27,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/layer.js",
                      "context": Object {
                        "post": Array [
                          "  } catch (err) {",
                          "    next(err);",
                          "  }",
                          "};",
                          "",
                          "/**",
                          " * Check if this route matches \`path\`, if so",
                        ],
                        "pre": Array [
                          "",
                          "  if (fn.length > 3) {",
                          "    // not a standard request handler",
                          "    return next();",
                          "  }",
                          "",
                          "  try {",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/layer.js",
                      "function": "handle",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    fn(req, res, next);",
                        "number": 95,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "    }",
                          "  }",
                          "};",
                          "",
                          "/**",
                          " * Process any parameters for the layer.",
                          " * @private",
                        ],
                        "pre": Array [
                          "    }",
                          "",
                          "    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);",
                          "",
                          "    if (layerError) {",
                          "      layer.handle_error(layerError, req, res, next);",
                          "    } else {",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "trim_prefix",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "      layer.handle_request(req, res, next);",
                        "number": 317,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "    });",
                          "  }",
                          "",
                          "  function trim_prefix(layer, layerError, layerPath, path) {",
                          "    if (layerPath.length !== 0) {",
                          "      // Validate path breaks on a path separator",
                          "      var c = path[layerPath.length]",
                        ],
                        "pre": Array [
                          "        return next(layerError || err);",
                          "      }",
                          "",
                          "      if (route) {",
                          "        return layer.handle_request(req, res, next);",
                          "      }",
                          "",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "<anonymous>",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "      trim_prefix(layer, layerError, layerPath, path);",
                        "number": 284,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "  }",
                          "",
                          "  var i = 0;",
                          "  var name;",
                          "  var paramIndex = 0;",
                          "  var key;",
                          "  var paramVal;",
                        ],
                        "pre": Array [
                          "  var params = this.params;",
                          "",
                          "  // captured parameters from the layer, keys and values",
                          "  var keys = layer.keys;",
                          "",
                          "  // fast track",
                          "  if (!keys || keys.length === 0) {",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "process_params",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    return done();",
                        "number": 335,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/express/lib/router/index.js",
                      "context": Object {
                        "post": Array [
                          "      if (err) {",
                          "        return next(layerError || err);",
                          "      }",
                          "",
                          "      if (route) {",
                          "        return layer.handle_request(req, res, next);",
                          "      }",
                        ],
                        "pre": Array [
                          "    // Capture one-time layer values",
                          "    req.params = self.mergeParams",
                          "      ? mergeParams(layer.params, parentParams)",
                          "      : layer.params;",
                          "    var layerPath = layer.path;",
                          "",
                          "    // this should be done for the layer",
                        ],
                      },
                      "filename": "node_modules/express/lib/router/index.js",
                      "function": "next",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    self.process_params(layer, paramcalled, req, res, function (err) {",
                        "number": 275,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/elastic-apm-node/lib/instrumentation/modules/express.js",
                      "context": Object {
                        "post": Array [
                          "        }",
                          "      }",
                          "    }",
                          "  })",
                          "",
                          "  return express",
                          "}",
                        ],
                        "pre": Array [
                          "      return function serveStatic (req, res, next) {",
                          "        req._elastic_apm_static = true",
                          "",
                          "        return origServeStatic(req, res, nextHook)",
                          "",
                          "        function nextHook (err) {",
                          "          if (!err) req._elastic_apm_static = false",
                        ],
                      },
                      "filename": "node_modules/elastic-apm-node/lib/instrumentation/modules/express.js",
                      "function": "nextHook",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "          return next.apply(this, arguments)",
                        "number": 90,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/serve-static/index.js",
                      "context": Object {
                        "post": Array [
                          "    })",
                          "",
                          "    // pipe",
                          "    stream.pipe(res)",
                          "  }",
                          "}",
                          "",
                        ],
                        "pre": Array [
                          "    // forward errors",
                          "    stream.on('error', function error (err) {",
                          "      if (forwardError || !(err.statusCode < 500)) {",
                          "        next(err)",
                          "        return",
                          "      }",
                          "",
                        ],
                      },
                      "filename": "node_modules/serve-static/index.js",
                      "function": "error",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "      next()",
                        "number": 121,
                      },
                    },
                    Object {
                      "absPath": "events.js",
                      "filename": "events.js",
                      "function": "emitOne",
                      "libraryFrame": true,
                      "line": Object {
                        "number": 96,
                      },
                    },
                    Object {
                      "absPath": "events.js",
                      "filename": "events.js",
                      "function": "emit",
                      "libraryFrame": true,
                      "line": Object {
                        "number": 188,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/send/index.js",
                      "context": Object {
                        "post": Array [
                          "      expose: false",
                          "    }))",
                          "  }",
                          "",
                          "  var res = this.res",
                          "  var msg = statuses[status] || String(status)",
                          "  var doc = createHtmlDocument('Error', escapeHtml(msg))",
                        ],
                        "pre": Array [
                          " * @param {Error} [err]",
                          " * @private",
                          " */",
                          "",
                          "SendStream.prototype.error = function error (status, err) {",
                          "  // emit if listeners instead of responding",
                          "  if (hasListeners(this, 'error')) {",
                        ],
                      },
                      "filename": "node_modules/send/index.js",
                      "function": "error",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    return this.emit('error', createError(status, err, {",
                        "number": 270,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/send/index.js",
                      "context": Object {
                        "post": Array [
                          "      break",
                          "    default:",
                          "      this.error(500, error)",
                          "      break",
                          "  }",
                          "}",
                          "",
                        ],
                        "pre": Array [
                          " */",
                          "",
                          "SendStream.prototype.onStatError = function onStatError (error) {",
                          "  switch (error.code) {",
                          "    case 'ENAMETOOLONG':",
                          "    case 'ENOENT':",
                          "    case 'ENOTDIR':",
                        ],
                      },
                      "filename": "node_modules/send/index.js",
                      "function": "onStatError",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "      this.error(404, error)",
                        "number": 421,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/send/index.js",
                      "context": Object {
                        "post": Array [
                          "        : self.error(404)",
                          "    }",
                          "",
                          "    var p = path + '.' + self._extensions[i++]",
                          "",
                          "    debug('stat \\"%s\\"', p)",
                          "    fs.stat(p, function (err, stat) {",
                        ],
                        "pre": Array [
                          "    self.emit('file', path, stat)",
                          "    self.send(path, stat)",
                          "  })",
                          "",
                          "  function next (err) {",
                          "    if (self._extensions.length <= i) {",
                          "      return err",
                        ],
                      },
                      "filename": "node_modules/send/index.js",
                      "function": "next",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "        ? self.onStatError(err)",
                        "number": 736,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/send/index.js",
                      "context": Object {
                        "post": Array [
                          "    }",
                          "    if (err) return self.onStatError(err)",
                          "    if (stat.isDirectory()) return self.redirect(path)",
                          "    self.emit('file', path, stat)",
                          "    self.send(path, stat)",
                          "  })",
                          "",
                        ],
                        "pre": Array [
                          "  var i = 0",
                          "  var self = this",
                          "",
                          "  debug('stat \\"%s\\"', path)",
                          "  fs.stat(path, function onstat (err, stat) {",
                          "    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {",
                          "      // not found, check extensions",
                        ],
                      },
                      "filename": "node_modules/send/index.js",
                      "function": "onstat",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "      return next(err)",
                        "number": 725,
                      },
                    },
                    Object {
                      "absPath": "/app/node_modules/elastic-apm-node/lib/instrumentation/index.js",
                      "context": Object {
                        "post": Array [
                          "    ins.currentTransaction = prev",
                          "    return result",
                          "  }",
                          "}",
                          "",
                          "Instrumentation.prototype._recoverTransaction = function (trans) {",
                          "  if (this.currentTransaction === trans) return",
                        ],
                        "pre": Array [
                          "  var trans = this.currentTransaction",
                          "",
                          "  return elasticAPMCallbackWrapper",
                          "",
                          "  function elasticAPMCallbackWrapper () {",
                          "    var prev = ins.currentTransaction",
                          "    ins.currentTransaction = trans",
                        ],
                      },
                      "filename": "node_modules/elastic-apm-node/lib/instrumentation/index.js",
                      "function": "elasticAPMCallbackWrapper",
                      "libraryFrame": true,
                      "line": Object {
                        "context": "    var result = original.apply(this, arguments)",
                        "number": 116,
                      },
                    },
                    Object {
                      "absPath": "fs.js",
                      "filename": "fs.js",
                      "function": "FSReqWrap.oncomplete",
                      "libraryFrame": true,
                      "line": Object {
                        "number": 123,
                      },
                    },
                  ],
                  "type": "TypeError",
                },
                "groupingKey": "c00e245c2fbebaf178fc31eeb2bb0250",
                "id": "c5e55dfc-09cc-4e0d-ace3-1ba4233f66eb",
              },
              "processor": Object {
                "event": "error",
                "name": "error",
              },
            },
            "groupId": "c00e245c2fbebaf178fc31eeb2bb0250",
            "occurrencesCount": 18,
          },
          "status": "SUCCESS",
        }
      }
      excStackframes={
        Array [
          Object {
            "absPath": "/app/server/coffee.js",
            "context": Object {
              "post": Array [
                "    res.send('Of course!')",
                "  } else {",
                "    res.send('You can\\\\'t have any!')",
                "  }",
                "})",
                "",
                "app.get('/log-error', function (req, res) {",
              ],
              "pre": Array [
                "",
                "var express = require('express')",
                "var apm = require('elastic-apm-node')",
                "",
                "var app = module.exports = new express.Router()",
                "",
                "app.get('/is-it-coffee-time', function (req, res) {",
              ],
            },
            "filename": "server/coffee.js",
            "function": "<anonymous>",
            "libraryFrame": false,
            "line": Object {
              "context": "  if (req.paarms.level === 11) {",
              "number": 9,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/layer.js",
            "context": Object {
              "post": Array [
                "  } catch (err) {",
                "    next(err);",
                "  }",
                "};",
                "",
                "/**",
                " * Check if this route matches \`path\`, if so",
              ],
              "pre": Array [
                "",
                "  if (fn.length > 3) {",
                "    // not a standard request handler",
                "    return next();",
                "  }",
                "",
                "  try {",
              ],
            },
            "filename": "node_modules/express/lib/router/layer.js",
            "function": "handle",
            "libraryFrame": true,
            "line": Object {
              "context": "    fn(req, res, next);",
              "number": 95,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/route.js",
            "context": Object {
              "post": Array [
                "    }",
                "  }",
                "};",
                "",
                "/**",
                " * Add a handler for all HTTP verbs to this route.",
                " *",
              ],
              "pre": Array [
                "    if (layer.method && layer.method !== method) {",
                "      return next(err);",
                "    }",
                "",
                "    if (err) {",
                "      layer.handle_error(err, req, res, next);",
                "    } else {",
              ],
            },
            "filename": "node_modules/express/lib/router/route.js",
            "function": "next",
            "libraryFrame": true,
            "line": Object {
              "context": "      layer.handle_request(req, res, next);",
              "number": 137,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/route.js",
            "context": Object {
              "post": Array [
                "",
                "  function next(err) {",
                "    // signal to exit route",
                "    if (err && err === 'route') {",
                "      return done();",
                "    }",
                "",
              ],
              "pre": Array [
                "  var method = req.method.toLowerCase();",
                "  if (method === 'head' && !this.methods['head']) {",
                "    method = 'get';",
                "  }",
                "",
                "  req.route = this;",
                "",
              ],
            },
            "filename": "node_modules/express/lib/router/route.js",
            "function": "dispatch",
            "libraryFrame": true,
            "line": Object {
              "context": "  next();",
              "number": 112,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/layer.js",
            "context": Object {
              "post": Array [
                "  } catch (err) {",
                "    next(err);",
                "  }",
                "};",
                "",
                "/**",
                " * Check if this route matches \`path\`, if so",
              ],
              "pre": Array [
                "",
                "  if (fn.length > 3) {",
                "    // not a standard request handler",
                "    return next();",
                "  }",
                "",
                "  try {",
              ],
            },
            "filename": "node_modules/express/lib/router/layer.js",
            "function": "handle",
            "libraryFrame": true,
            "line": Object {
              "context": "    fn(req, res, next);",
              "number": 95,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "      }",
                "",
                "      trim_prefix(layer, layerError, layerPath, path);",
                "    });",
                "  }",
                "",
                "  function trim_prefix(layer, layerError, layerPath, path) {",
              ],
              "pre": Array [
                "    // this should be done for the layer",
                "    self.process_params(layer, paramcalled, req, res, function (err) {",
                "      if (err) {",
                "        return next(layerError || err);",
                "      }",
                "",
                "      if (route) {",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "<anonymous>",
            "libraryFrame": true,
            "line": Object {
              "context": "        return layer.handle_request(req, res, next);",
              "number": 281,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "  }",
                "",
                "  var i = 0;",
                "  var name;",
                "  var paramIndex = 0;",
                "  var key;",
                "  var paramVal;",
              ],
              "pre": Array [
                "  var params = this.params;",
                "",
                "  // captured parameters from the layer, keys and values",
                "  var keys = layer.keys;",
                "",
                "  // fast track",
                "  if (!keys || keys.length === 0) {",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "process_params",
            "libraryFrame": true,
            "line": Object {
              "context": "    return done();",
              "number": 335,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "      if (err) {",
                "        return next(layerError || err);",
                "      }",
                "",
                "      if (route) {",
                "        return layer.handle_request(req, res, next);",
                "      }",
              ],
              "pre": Array [
                "    // Capture one-time layer values",
                "    req.params = self.mergeParams",
                "      ? mergeParams(layer.params, parentParams)",
                "      : layer.params;",
                "    var layerPath = layer.path;",
                "",
                "    // this should be done for the layer",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "next",
            "libraryFrame": true,
            "line": Object {
              "context": "    self.process_params(layer, paramcalled, req, res, function (err) {",
              "number": 275,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "",
                "  function next(err) {",
                "    var layerError = err === 'route'",
                "      ? null",
                "      : err;",
                "",
                "    // remove added slash",
              ],
              "pre": Array [
                "    });",
                "  }",
                "",
                "  // setup basic req values",
                "  req.baseUrl = parentUrl;",
                "  req.originalUrl = req.originalUrl || req.url;",
                "",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "handle",
            "libraryFrame": true,
            "line": Object {
              "context": "  next();",
              "number": 174,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "  }",
                "",
                "  // mixin Router class functions",
                "  setPrototypeOf(router, proto)",
                "",
                "  router.params = {};",
                "  router._params = [];",
              ],
              "pre": Array [
                " * @public",
                " */",
                "",
                "var proto = module.exports = function(options) {",
                "  var opts = options || {};",
                "",
                "  function router(req, res, next) {",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "router",
            "libraryFrame": true,
            "line": Object {
              "context": "    router.handle(req, res, next);",
              "number": 47,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/layer.js",
            "context": Object {
              "post": Array [
                "  } catch (err) {",
                "    next(err);",
                "  }",
                "};",
                "",
                "/**",
                " * Check if this route matches \`path\`, if so",
              ],
              "pre": Array [
                "",
                "  if (fn.length > 3) {",
                "    // not a standard request handler",
                "    return next();",
                "  }",
                "",
                "  try {",
              ],
            },
            "filename": "node_modules/express/lib/router/layer.js",
            "function": "handle",
            "libraryFrame": true,
            "line": Object {
              "context": "    fn(req, res, next);",
              "number": 95,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "    }",
                "  }",
                "};",
                "",
                "/**",
                " * Process any parameters for the layer.",
                " * @private",
              ],
              "pre": Array [
                "    }",
                "",
                "    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);",
                "",
                "    if (layerError) {",
                "      layer.handle_error(layerError, req, res, next);",
                "    } else {",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "trim_prefix",
            "libraryFrame": true,
            "line": Object {
              "context": "      layer.handle_request(req, res, next);",
              "number": 317,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "    });",
                "  }",
                "",
                "  function trim_prefix(layer, layerError, layerPath, path) {",
                "    if (layerPath.length !== 0) {",
                "      // Validate path breaks on a path separator",
                "      var c = path[layerPath.length]",
              ],
              "pre": Array [
                "        return next(layerError || err);",
                "      }",
                "",
                "      if (route) {",
                "        return layer.handle_request(req, res, next);",
                "      }",
                "",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "<anonymous>",
            "libraryFrame": true,
            "line": Object {
              "context": "      trim_prefix(layer, layerError, layerPath, path);",
              "number": 284,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "  }",
                "",
                "  var i = 0;",
                "  var name;",
                "  var paramIndex = 0;",
                "  var key;",
                "  var paramVal;",
              ],
              "pre": Array [
                "  var params = this.params;",
                "",
                "  // captured parameters from the layer, keys and values",
                "  var keys = layer.keys;",
                "",
                "  // fast track",
                "  if (!keys || keys.length === 0) {",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "process_params",
            "libraryFrame": true,
            "line": Object {
              "context": "    return done();",
              "number": 335,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "      if (err) {",
                "        return next(layerError || err);",
                "      }",
                "",
                "      if (route) {",
                "        return layer.handle_request(req, res, next);",
                "      }",
              ],
              "pre": Array [
                "    // Capture one-time layer values",
                "    req.params = self.mergeParams",
                "      ? mergeParams(layer.params, parentParams)",
                "      : layer.params;",
                "    var layerPath = layer.path;",
                "",
                "    // this should be done for the layer",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "next",
            "libraryFrame": true,
            "line": Object {
              "context": "    self.process_params(layer, paramcalled, req, res, function (err) {",
              "number": 275,
            },
          },
          Object {
            "absPath": "/app/server.js",
            "context": Object {
              "post": Array [
                "})",
                "",
                "app.use(require('./server/coffee'))",
                "app.use('/api', require('./server/routes'))",
                "app.get('*', function (req, res) {",
                "  res.sendFile(path.resolve(__dirname, 'client/build', 'index.html'))",
                "})",
              ],
              "pre": Array [
                "app.use(require('body-parser').json())",
                "app.use(express.static('client/build'))",
                "app.use(function (req, res, next) {",
                "  apm.setTag('foo', 'bar')",
                "  apm.setTag('lorem', 'ipsum dolor sit amet, consectetur adipiscing elit. Nulla finibus, ipsum id scelerisque consequat, enim leo vulputate massa, vel ultricies ante neque ac risus. Curabitur tincidunt vitae sapien id pulvinar. Mauris eu vestibulum tortor. Integer sit amet lorem fringilla, egestas tellus vitae, vulputate purus. Nulla feugiat blandit nunc et semper. Morbi purus libero, mattis sed mauris non, euismod iaculis lacus. Curabitur eleifend ante eros, non faucibus velit lacinia id. Duis posuere libero augue, at dignissim urna consectetur eget. Praesent eu congue est, iaculis finibus augue.')",
                "  apm.setTag('this-is-a-very-long-tag-name-without-any-spaces', 'test')",
                "  apm.setTag('multi-line', 'foo\\\\nbar\\\\nbaz')",
              ],
            },
            "filename": "server.js",
            "function": "<anonymous>",
            "libraryFrame": false,
            "line": Object {
              "context": "  next()",
              "number": 27,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/layer.js",
            "context": Object {
              "post": Array [
                "  } catch (err) {",
                "    next(err);",
                "  }",
                "};",
                "",
                "/**",
                " * Check if this route matches \`path\`, if so",
              ],
              "pre": Array [
                "",
                "  if (fn.length > 3) {",
                "    // not a standard request handler",
                "    return next();",
                "  }",
                "",
                "  try {",
              ],
            },
            "filename": "node_modules/express/lib/router/layer.js",
            "function": "handle",
            "libraryFrame": true,
            "line": Object {
              "context": "    fn(req, res, next);",
              "number": 95,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "    }",
                "  }",
                "};",
                "",
                "/**",
                " * Process any parameters for the layer.",
                " * @private",
              ],
              "pre": Array [
                "    }",
                "",
                "    debug('%s %s : %s', layer.name, layerPath, req.originalUrl);",
                "",
                "    if (layerError) {",
                "      layer.handle_error(layerError, req, res, next);",
                "    } else {",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "trim_prefix",
            "libraryFrame": true,
            "line": Object {
              "context": "      layer.handle_request(req, res, next);",
              "number": 317,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "    });",
                "  }",
                "",
                "  function trim_prefix(layer, layerError, layerPath, path) {",
                "    if (layerPath.length !== 0) {",
                "      // Validate path breaks on a path separator",
                "      var c = path[layerPath.length]",
              ],
              "pre": Array [
                "        return next(layerError || err);",
                "      }",
                "",
                "      if (route) {",
                "        return layer.handle_request(req, res, next);",
                "      }",
                "",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "<anonymous>",
            "libraryFrame": true,
            "line": Object {
              "context": "      trim_prefix(layer, layerError, layerPath, path);",
              "number": 284,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "  }",
                "",
                "  var i = 0;",
                "  var name;",
                "  var paramIndex = 0;",
                "  var key;",
                "  var paramVal;",
              ],
              "pre": Array [
                "  var params = this.params;",
                "",
                "  // captured parameters from the layer, keys and values",
                "  var keys = layer.keys;",
                "",
                "  // fast track",
                "  if (!keys || keys.length === 0) {",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "process_params",
            "libraryFrame": true,
            "line": Object {
              "context": "    return done();",
              "number": 335,
            },
          },
          Object {
            "absPath": "/app/node_modules/express/lib/router/index.js",
            "context": Object {
              "post": Array [
                "      if (err) {",
                "        return next(layerError || err);",
                "      }",
                "",
                "      if (route) {",
                "        return layer.handle_request(req, res, next);",
                "      }",
              ],
              "pre": Array [
                "    // Capture one-time layer values",
                "    req.params = self.mergeParams",
                "      ? mergeParams(layer.params, parentParams)",
                "      : layer.params;",
                "    var layerPath = layer.path;",
                "",
                "    // this should be done for the layer",
              ],
            },
            "filename": "node_modules/express/lib/router/index.js",
            "function": "next",
            "libraryFrame": true,
            "line": Object {
              "context": "    self.process_params(layer, paramcalled, req, res, function (err) {",
              "number": 275,
            },
          },
          Object {
            "absPath": "/app/node_modules/elastic-apm-node/lib/instrumentation/modules/express.js",
            "context": Object {
              "post": Array [
                "        }",
                "      }",
                "    }",
                "  })",
                "",
                "  return express",
                "}",
              ],
              "pre": Array [
                "      return function serveStatic (req, res, next) {",
                "        req._elastic_apm_static = true",
                "",
                "        return origServeStatic(req, res, nextHook)",
                "",
                "        function nextHook (err) {",
                "          if (!err) req._elastic_apm_static = false",
              ],
            },
            "filename": "node_modules/elastic-apm-node/lib/instrumentation/modules/express.js",
            "function": "nextHook",
            "libraryFrame": true,
            "line": Object {
              "context": "          return next.apply(this, arguments)",
              "number": 90,
            },
          },
          Object {
            "absPath": "/app/node_modules/serve-static/index.js",
            "context": Object {
              "post": Array [
                "    })",
                "",
                "    // pipe",
                "    stream.pipe(res)",
                "  }",
                "}",
                "",
              ],
              "pre": Array [
                "    // forward errors",
                "    stream.on('error', function error (err) {",
                "      if (forwardError || !(err.statusCode < 500)) {",
                "        next(err)",
                "        return",
                "      }",
                "",
              ],
            },
            "filename": "node_modules/serve-static/index.js",
            "function": "error",
            "libraryFrame": true,
            "line": Object {
              "context": "      next()",
              "number": 121,
            },
          },
          Object {
            "absPath": "events.js",
            "filename": "events.js",
            "function": "emitOne",
            "libraryFrame": true,
            "line": Object {
              "number": 96,
            },
          },
          Object {
            "absPath": "events.js",
            "filename": "events.js",
            "function": "emit",
            "libraryFrame": true,
            "line": Object {
              "number": 188,
            },
          },
          Object {
            "absPath": "/app/node_modules/send/index.js",
            "context": Object {
              "post": Array [
                "      expose: false",
                "    }))",
                "  }",
                "",
                "  var res = this.res",
                "  var msg = statuses[status] || String(status)",
                "  var doc = createHtmlDocument('Error', escapeHtml(msg))",
              ],
              "pre": Array [
                " * @param {Error} [err]",
                " * @private",
                " */",
                "",
                "SendStream.prototype.error = function error (status, err) {",
                "  // emit if listeners instead of responding",
                "  if (hasListeners(this, 'error')) {",
              ],
            },
            "filename": "node_modules/send/index.js",
            "function": "error",
            "libraryFrame": true,
            "line": Object {
              "context": "    return this.emit('error', createError(status, err, {",
              "number": 270,
            },
          },
          Object {
            "absPath": "/app/node_modules/send/index.js",
            "context": Object {
              "post": Array [
                "      break",
                "    default:",
                "      this.error(500, error)",
                "      break",
                "  }",
                "}",
                "",
              ],
              "pre": Array [
                " */",
                "",
                "SendStream.prototype.onStatError = function onStatError (error) {",
                "  switch (error.code) {",
                "    case 'ENAMETOOLONG':",
                "    case 'ENOENT':",
                "    case 'ENOTDIR':",
              ],
            },
            "filename": "node_modules/send/index.js",
            "function": "onStatError",
            "libraryFrame": true,
            "line": Object {
              "context": "      this.error(404, error)",
              "number": 421,
            },
          },
          Object {
            "absPath": "/app/node_modules/send/index.js",
            "context": Object {
              "post": Array [
                "        : self.error(404)",
                "    }",
                "",
                "    var p = path + '.' + self._extensions[i++]",
                "",
                "    debug('stat \\"%s\\"', p)",
                "    fs.stat(p, function (err, stat) {",
              ],
              "pre": Array [
                "    self.emit('file', path, stat)",
                "    self.send(path, stat)",
                "  })",
                "",
                "  function next (err) {",
                "    if (self._extensions.length <= i) {",
                "      return err",
              ],
            },
            "filename": "node_modules/send/index.js",
            "function": "next",
            "libraryFrame": true,
            "line": Object {
              "context": "        ? self.onStatError(err)",
              "number": 736,
            },
          },
          Object {
            "absPath": "/app/node_modules/send/index.js",
            "context": Object {
              "post": Array [
                "    }",
                "    if (err) return self.onStatError(err)",
                "    if (stat.isDirectory()) return self.redirect(path)",
                "    self.emit('file', path, stat)",
                "    self.send(path, stat)",
                "  })",
                "",
              ],
              "pre": Array [
                "  var i = 0",
                "  var self = this",
                "",
                "  debug('stat \\"%s\\"', path)",
                "  fs.stat(path, function onstat (err, stat) {",
                "    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {",
                "      // not found, check extensions",
              ],
            },
            "filename": "node_modules/send/index.js",
            "function": "onstat",
            "libraryFrame": true,
            "line": Object {
              "context": "      return next(err)",
              "number": 725,
            },
          },
          Object {
            "absPath": "/app/node_modules/elastic-apm-node/lib/instrumentation/index.js",
            "context": Object {
              "post": Array [
                "    ins.currentTransaction = prev",
                "    return result",
                "  }",
                "}",
                "",
                "Instrumentation.prototype._recoverTransaction = function (trans) {",
                "  if (this.currentTransaction === trans) return",
              ],
              "pre": Array [
                "  var trans = this.currentTransaction",
                "",
                "  return elasticAPMCallbackWrapper",
                "",
                "  function elasticAPMCallbackWrapper () {",
                "    var prev = ins.currentTransaction",
                "    ins.currentTransaction = trans",
              ],
            },
            "filename": "node_modules/elastic-apm-node/lib/instrumentation/index.js",
            "function": "elasticAPMCallbackWrapper",
            "libraryFrame": true,
            "line": Object {
              "context": "    var result = original.apply(this, arguments)",
              "number": 116,
            },
          },
          Object {
            "absPath": "fs.js",
            "filename": "fs.js",
            "function": "FSReqWrap.oncomplete",
            "libraryFrame": true,
            "line": Object {
              "number": 123,
            },
          },
        ]
      }
    />
  </styled.div>
</styled.div>
`;
