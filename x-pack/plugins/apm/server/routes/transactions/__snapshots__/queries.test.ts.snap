// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transaction queries fetches a transaction 1`] = `
Object {
  "apm": Object {
    "events": Array [
      "transaction",
    ],
  },
  "body": Object {
    "query": Object {
      "bool": Object {
        "filter": Array [
          Object {
            "term": Object {
              "transaction.id": "foo",
            },
          },
          Object {
            "term": Object {
              "trace.id": "bar",
            },
          },
        ],
      },
    },
    "size": 1,
  },
}
`;

exports[`transaction queries fetches breakdown data for transactions 1`] = `
Object {
  "apm": Object {
    "events": Array [
      "metric",
    ],
  },
  "body": Object {
    "aggs": Object {
      "by_date": Object {
        "aggs": Object {
          "sum_all_self_times": Object {
            "sum": Object {
              "field": "span.self_time.sum.us",
            },
          },
          "types": Object {
            "aggs": Object {
              "subtypes": Object {
                "aggs": Object {
                  "total_self_time_per_subtype": Object {
                    "sum": Object {
                      "field": "span.self_time.sum.us",
                    },
                  },
                },
                "terms": Object {
                  "field": "span.subtype",
                  "missing": "",
                  "order": Object {
                    "_count": "desc",
                  },
                  "size": 20,
                },
              },
            },
            "terms": Object {
              "field": "span.type",
              "order": Object {
                "_count": "desc",
              },
              "size": 20,
            },
          },
        },
        "date_histogram": Object {
          "extended_bounds": Object {
            "max": 50000,
            "min": 0,
          },
          "field": "@timestamp",
          "fixed_interval": "30s",
          "min_doc_count": 0,
        },
      },
      "sum_all_self_times": Object {
        "sum": Object {
          "field": "span.self_time.sum.us",
        },
      },
      "types": Object {
        "aggs": Object {
          "subtypes": Object {
            "aggs": Object {
              "total_self_time_per_subtype": Object {
                "sum": Object {
                  "field": "span.self_time.sum.us",
                },
              },
            },
            "terms": Object {
              "field": "span.subtype",
              "missing": "",
              "order": Object {
                "_count": "desc",
              },
              "size": 20,
            },
          },
        },
        "terms": Object {
          "field": "span.type",
          "order": Object {
            "_count": "desc",
          },
          "size": 20,
        },
      },
    },
    "query": Object {
      "bool": Object {
        "filter": Array [
          Object {
            "term": Object {
              "service.name": "foo",
            },
          },
          Object {
            "term": Object {
              "transaction.type": "bar",
            },
          },
          Object {
            "range": Object {
              "@timestamp": Object {
                "format": "epoch_millis",
                "gte": 0,
                "lte": 50000,
              },
            },
          },
          Object {
            "exists": Object {
              "field": "span.self_time.sum.us",
            },
          },
        ],
      },
    },
    "size": 0,
  },
}
`;

exports[`transaction queries fetches breakdown data for transactions for a transaction name 1`] = `
Object {
  "apm": Object {
    "events": Array [
      "metric",
    ],
  },
  "body": Object {
    "aggs": Object {
      "by_date": Object {
        "aggs": Object {
          "sum_all_self_times": Object {
            "sum": Object {
              "field": "span.self_time.sum.us",
            },
          },
          "types": Object {
            "aggs": Object {
              "subtypes": Object {
                "aggs": Object {
                  "total_self_time_per_subtype": Object {
                    "sum": Object {
                      "field": "span.self_time.sum.us",
                    },
                  },
                },
                "terms": Object {
                  "field": "span.subtype",
                  "missing": "",
                  "order": Object {
                    "_count": "desc",
                  },
                  "size": 20,
                },
              },
            },
            "terms": Object {
              "field": "span.type",
              "order": Object {
                "_count": "desc",
              },
              "size": 20,
            },
          },
        },
        "date_histogram": Object {
          "extended_bounds": Object {
            "max": 50000,
            "min": 0,
          },
          "field": "@timestamp",
          "fixed_interval": "30s",
          "min_doc_count": 0,
        },
      },
      "sum_all_self_times": Object {
        "sum": Object {
          "field": "span.self_time.sum.us",
        },
      },
      "types": Object {
        "aggs": Object {
          "subtypes": Object {
            "aggs": Object {
              "total_self_time_per_subtype": Object {
                "sum": Object {
                  "field": "span.self_time.sum.us",
                },
              },
            },
            "terms": Object {
              "field": "span.subtype",
              "missing": "",
              "order": Object {
                "_count": "desc",
              },
              "size": 20,
            },
          },
        },
        "terms": Object {
          "field": "span.type",
          "order": Object {
            "_count": "desc",
          },
          "size": 20,
        },
      },
    },
    "query": Object {
      "bool": Object {
        "filter": Array [
          Object {
            "term": Object {
              "service.name": "foo",
            },
          },
          Object {
            "term": Object {
              "transaction.type": "bar",
            },
          },
          Object {
            "range": Object {
              "@timestamp": Object {
                "format": "epoch_millis",
                "gte": 0,
                "lte": 50000,
              },
            },
          },
          Object {
            "exists": Object {
              "field": "span.self_time.sum.us",
            },
          },
          Object {
            "term": Object {
              "transaction.name": "baz",
            },
          },
        ],
      },
    },
    "size": 0,
  },
}
`;

exports[`transaction queries fetches transaction trace samples 1`] = `
Object {
  "apm": Object {
    "events": Array [
      "transaction",
    ],
  },
  "body": Object {
    "query": Object {
      "bool": Object {
        "filter": Array [
          Object {
            "term": Object {
              "service.name": "foo",
            },
          },
          Object {
            "term": Object {
              "transaction.type": "baz",
            },
          },
          Object {
            "term": Object {
              "transaction.name": "bar",
            },
          },
          Object {
            "range": Object {
              "@timestamp": Object {
                "format": "epoch_millis",
                "gte": 0,
                "lte": 50000,
              },
            },
          },
          Object {
            "term": Object {
              "transaction.sampled": true,
            },
          },
        ],
        "should": Array [
          Object {
            "term": Object {
              "trace.id": "qux",
            },
          },
          Object {
            "term": Object {
              "transaction.id": "quz",
            },
          },
        ],
      },
    },
    "size": 500,
  },
}
`;
