/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import type { KibanaRequest, KibanaResponseFactory } from '@kbn/core/server';
import type { SecuritySolutionRequestHandlerContext } from '../../../../types';
import type { {{operationId}}Response } from '../../../../../common/generated_schema/{{snakeCase operationId}}/{{snakeCase operationId}}_response_schema.gen';
import type { {{operationId}}RequestParams, {{operationId}}RequestQuery, {{operationId}}RequestBody } from '../../../../../common/generated_schema/{{snakeCase operationId}}/{{snakeCase operationId}}_request_schema.gen';

export const {{camelCase operationId}}Implementation = async (
  context: SecuritySolutionRequestHandlerContext,
  request: KibanaRequest<{{operationId}}RequestParams, {{operationId}}RequestQuery, {{operationId}}RequestBody, '{{method}}'>,
  response: KibanaResponseFactory,
): Promise<{{operationId}}Response> => {
  throw new Error('Not implemented');
};
