/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { z } from 'zod';
import * as CommonSchema from '../common_schema.gen';

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator `yarn openapi:generate`.
 */

export const GetRuleExecutionResultsRequestQuery = z.object({
  /**
   * The start date in ISO format for the execution results.
   */
  start: z.string().datetime(),
  /**
   * The end date in ISO format for the execution results.
   */
  end: z.string().datetime(),
  /**
   * The query text to filter the execution results.
   */
  query_text: z.string().optional().default(''),
  status_filters: z
    .preprocess(CommonSchema.CsvToArray, z.array(CommonSchema.RuleExecutionStatus))
    .optional()
    .default([]),
  /**
   * The field to sort the execution results.
   */
  sort_field: z
    .enum([
      'timestamp',
      'duration_ms',
      'gap_duration_s',
      'indexing_duration_ms',
      'search_duration_ms',
      'schedule_delay_ms',
    ])
    .optional()
    .default('timestamp'),
  /**
   * The order to sort the execution results.
   */
  sort_order: CommonSchema.SortOrder.optional().default('desc'),
  /**
   * The number of execution results per page.
   */
  per_page: z.number().optional().default(20),
  /**
   * The page number for the execution results.
   */
  page: z.number().optional().default(1),
});
export type GetRuleExecutionResultsRequestQuery = z.infer<
  typeof GetRuleExecutionResultsRequestQuery
>;
export type GetRuleExecutionResultsRequestQueryInput = z.input<
  typeof GetRuleExecutionResultsRequestQuery
>;

export const GetRuleExecutionResultsRequestParams = z.object({
  /**
   * Rule's saved object ID (`rule.id`)
   */
  ruleId: z.string(),
});
export type GetRuleExecutionResultsRequestParams = z.infer<
  typeof GetRuleExecutionResultsRequestParams
>;
export type GetRuleExecutionResultsRequestParamsInput = z.input<
  typeof GetRuleExecutionResultsRequestParams
>;

export const GetRuleExecutionResultsRequestBody = z.undefined();
export type GetRuleExecutionResultsRequestBody = z.infer<typeof GetRuleExecutionResultsRequestBody>;
export type GetRuleExecutionResultsRequestBodyInput = z.input<
  typeof GetRuleExecutionResultsRequestBody
>;
