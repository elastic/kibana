{
  "openapi": "3.0.0",
  "info": {
    "title": "Elastic Security - Timeline - Install Prepackaged Timelines API",
    "version": "8.9.0"
  },
  "servers": [
    {
      "url": "http://{kibana_host}:{port}",
      "variables": {
        "kibana_host": {
          "default": "localhost"
        },
        "port": {
          "default": "5601"
        }
      }
    }
  ],
  "paths": {
    "/api/timeline/_prepackaged": {
      "post": {
        "operationId": "installPrepackedTimelines",
        "description": "Installs prepackaged timelines.",
        "tags": [
          "access:securitySolution"
        ],
        "requestBody": {
          "description": "The timelines to install or update.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "timelinesToInstall": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/ImportTimelines"
                        },
                        {
                          "nullable": true
                        }
                      ]
                    }
                  },
                  "timelinesToUpdate": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/ImportTimelines"
                        },
                        {
                          "nullable": true
                        }
                      ]
                    }
                  },
                  "prepackagedTimelines": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/SavedTimeline"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates the installation of prepackaged timelines was successful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ImportTimelineResult"
                    }
                  },
                  "required": [
                    "data"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Indicates the installation of prepackaged timelines was unsuccessful.",
            "content": {
              "application:json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "body": {
                      "type": "string"
                    },
                    "statusCode": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ColumnHeaderResult": {
        "type": "object",
        "properties": {
          "aggregatable": {
            "type": "boolean"
          },
          "category": {
            "type": "string"
          },
          "columnHeaderType": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "example": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          },
          "indexes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "placeholder": {
            "type": "string"
          },
          "searchable": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "QueryMatchResult": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "displayField": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "displayValue": {
            "type": "string"
          },
          "operator": {
            "type": "string"
          }
        }
      },
      "DataProviderResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "excluded": {
            "type": "boolean"
          },
          "kqlQuery": {
            "type": "string"
          },
          "queryMatch": {
            "$ref": "#/components/schemas/QueryMatchResult"
          },
          "and": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataProviderResult"
            }
          },
          "type": {
            "$ref": "#/components/schemas/DataProviderType"
          }
        }
      },
      "DataProviderType": {
        "type": "string",
        "enum": [
          "default",
          "template"
        ],
        "default": "default",
        "description": "The type of data provider to create. Valid values are `default` and `template`."
      },
      "RowRendererId": {
        "type": "string",
        "enum": [
          "alert",
          "alerts",
          "auditd",
          "auditd_file",
          "library",
          "netflow",
          "plain",
          "registry",
          "suricata",
          "system",
          "system_dns",
          "system_endgame_process",
          "system_file",
          "system_fim",
          "system_security_event",
          "system_socket",
          "threat_match",
          "zeek"
        ]
      },
      "FavoriteTimelineResult": {
        "type": "object",
        "properties": {
          "fullName": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          },
          "favoriteDate": {
            "type": "number"
          }
        }
      },
      "FilterTimelineResult": {
        "type": "object",
        "properties": {
          "exists": {
            "type": "boolean"
          },
          "meta": {
            "type": "object",
            "properties": {
              "alias": {
                "type": "string"
              },
              "controlledBy": {
                "type": "string"
              },
              "disabled": {
                "type": "boolean"
              },
              "field": {
                "type": "string"
              },
              "formattedValue": {
                "type": "string"
              },
              "index": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "negate": {
                "type": "boolean"
              },
              "params": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "value": {
                "type": "string"
              }
            }
          },
          "match_all": {
            "type": "string"
          },
          "missing": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "range": {
            "type": "string"
          },
          "script": {
            "type": "string"
          }
        }
      },
      "SerializedFilterQueryResult": {
        "type": "object",
        "properties": {
          "filterQuery": {
            "type": "object",
            "properties": {
              "kuery": {
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string"
                  },
                  "expression": {
                    "type": "string"
                  }
                }
              },
              "serializedQuery": {
                "type": "string"
              }
            }
          }
        }
      },
      "Sort": {
        "type": "object",
        "properties": {
          "columnId": {
            "type": "string"
          },
          "sortDirection": {
            "type": "string"
          }
        }
      },
      "TimelineType": {
        "type": "string",
        "enum": [
          "default",
          "template"
        ],
        "default": "default",
        "description": "The type of timeline to create. Valid values are `default` and `template`."
      },
      "SavedTimeline": {
        "type": "object",
        "properties": {
          "columns": {
            "$ref": "#/components/schemas/ColumnHeaderResult"
          },
          "created": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "dataProviders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataProviderResult"
            }
          },
          "dataViewId": {
            "type": "string"
          },
          "dateRange": {
            "type": "object",
            "properties": {
              "end": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "start": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "number"
                  }
                ]
              }
            }
          },
          "description": {
            "type": "string"
          },
          "eqlOptions": {
            "type": "object",
            "properties": {
              "eventCategoryField": {
                "type": "string"
              },
              "tiebreakerField": {
                "type": "string"
              },
              "timestampField": {
                "type": "string"
              }
            }
          },
          "eventType": {
            "type": "string"
          },
          "excludedRowRendererIds": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RowRendererId"
            }
          },
          "favorite": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FavoriteTimelineResult"
            }
          },
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterTimelineResult"
            }
          },
          "kqlMode": {
            "type": "string"
          },
          "kqlQuery": {
            "$ref": "#/components/schemas/SerializedFilterQueryResult"
          },
          "indexNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "savedQueryId": {
            "type": "string"
          },
          "sort": {
            "$ref": "#/components/schemas/Sort"
          },
          "status": {
            "type": "string",
            "enum": [
              "active",
              "draft",
              "immutable"
            ]
          },
          "title": {
            "type": "string"
          },
          "templateTimelineId": {
            "type": "string"
          },
          "templateTimelineVersion": {
            "type": "number"
          },
          "timelineType": {
            "$ref": "#/components/schemas/TimelineType"
          },
          "updated": {
            "type": "number"
          },
          "updatedBy": {
            "type": "string"
          }
        }
      },
      "BareNote": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string"
          },
          "note": {
            "type": "string"
          },
          "timelineId": {
            "type": "string"
          },
          "created": {
            "type": "number"
          },
          "createdBy": {
            "type": "string"
          },
          "updated": {
            "type": "number"
          },
          "updatedBy": {
            "type": "string"
          }
        }
      },
      "ImportTimelines": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SavedTimeline"
          },
          {
            "type": "object",
            "properties": {
              "savedObjectId": {
                "type": "string",
                "nullable": true
              },
              "version": {
                "type": "string",
                "nullable": true
              },
              "globalNotes": {
                "nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BareNote"
                }
              },
              "eventNotes": {
                "nullable": true,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BareNote"
                }
              },
              "pinnedEventIds": {
                "nullable": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "ImportTimelineResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "success_count": {
            "type": "number"
          },
          "timelines_installed": {
            "type": "number"
          },
          "timelines_updated": {
            "type": "number"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status_code": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}