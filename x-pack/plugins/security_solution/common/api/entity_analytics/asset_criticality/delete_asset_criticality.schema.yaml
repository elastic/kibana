openapi: 3.0.0
info:
  version: '1'
  title: Asset Criticality Delete Record Schema
servers:
  - url: 'http://{kibana_host}:{port}'
    variables:
      kibana_host:
        default: localhost
      port:
        default: '5601'
paths:
  /internal/asset_criticality:
    delete:
      x-labels: [ess, serverless]
      x-internal: true
      x-codegen-enabled: true
      operationId: InternalDeleteAssetCriticalityRecord
      summary: Deprecated Internal Delete Criticality Record
      deprecated: true
      parameters:
        - name: id_value
          in: query
          required: true
          schema:
            type: string
          description: The ID value of the asset.
        - name: id_field
          in: query
          required: true
          schema:
            $ref: './common.schema.yaml#/components/schemas/IdField'
          example: 'host.name'
          description: The field representing the ID.
        - name: refresh
          in: query
          required: false
          schema:
            type: string
            enum: [wait_for]
          description: If 'wait_for' the request will wait for the index refresh.
      responses:
        '200':
          description: Successful response
        '400':
          description: Invalid request
  /api/asset_criticality:
    delete:
      x-labels: [ess, serverless]
      x-codegen-enabled: true
      operationId: DeleteAssetCriticalityRecord
      summary: Delete Criticality Record
      parameters:
        - name: id_value
          in: query
          required: true
          schema:
            type: string
          description: The ID value of the asset.
        - name: id_field
          in: query
          required: true
          schema:
            $ref: './common.schema.yaml#/components/schemas/IdField'
          example: 'host.name'
          description: The field representing the ID.
        - name: refresh
          in: query
          required: false
          schema:
            type: string
            enum: [wait_for]
          description: If 'wait_for' the request will wait for the index refresh.
      responses:
        '200':
          description: Successful response
        '400':
          description: Invalid request
