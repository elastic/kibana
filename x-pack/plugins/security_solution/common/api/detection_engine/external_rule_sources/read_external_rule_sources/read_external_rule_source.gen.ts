/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Read External Rule Sources API endpoint
 *   version: 1
 */

import { z } from 'zod';

import { ExternalRuleSourceOutput } from '../model/external_rule_source.gen';

export type ReadExternalRuleSourceRequestBody = z.infer<typeof ReadExternalRuleSourceRequestBody>;
export const ReadExternalRuleSourceRequestBody = z.object({
  /**
   * The page number to return
   */
  page: z.number().int().min(1).optional().default(1),
  /**
   * The number of items to return per page
   */
  perPage: z.number().int().min(1).max(100).optional().default(20),
  filter: z
    .object({
      /**
       * The type of the external rule source
       */
      type: z.string().optional(),
      /**
       * The unique identifiers of the external rule sources
       */
      ids: z.array(z.string()).optional(),
    })
    .optional(),
});
export type ReadExternalRuleSourceRequestBodyInput = z.input<
  typeof ReadExternalRuleSourceRequestBody
>;

export type ReadExternalRuleSourceResponse = z.infer<typeof ReadExternalRuleSourceResponse>;
export const ReadExternalRuleSourceResponse = z.object({
  results: z.array(ExternalRuleSourceOutput),
  total: z.number().int().min(0).optional(),
  page: z.number().int().min(1).optional(),
  perPage: z.number().int().min(1).max(100).optional(),
});
