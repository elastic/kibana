/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { z } from 'zod';
import { BooleanFromString } from '@kbn/zod-helpers';

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Import Rules API endpoint
 *   version: 2024-05-15
 */

import { RuleCreateProps } from '../../model/rule_schema/rule_schemas.gen';
import { ErrorSchema } from '../../model/error_schema.gen';

export type ImportRulesV2RequestQuery = z.infer<typeof ImportRulesV2RequestQuery>;
export const ImportRulesV2RequestQuery = z.object({
  /**
   * Determines whether existing rules with the same `rule_id` are overwritten.
   */
  overwrite: BooleanFromString.optional().default(false),
  /**
   * Determines whether existing exception lists with the same `list_id` are overwritten.
   */
  overwrite_exceptions: BooleanFromString.optional().default(false),
  /**
   * Determines whether existing actions with the same `kibana.alert.rule.actions.id` are overwritten.
   */
  overwrite_action_connectors: BooleanFromString.optional().default(false),
  /**
   * Generates a new list ID for each imported exception list.
   */
  as_new_list: BooleanFromString.optional().default(false),
});
export type ImportRulesV2RequestQueryInput = z.input<typeof ImportRulesV2RequestQuery>;

export type ImportRulesV2RequestBody = z.infer<typeof ImportRulesV2RequestBody>;
export const ImportRulesV2RequestBody = z.array(RuleCreateProps);
export type ImportRulesV2RequestBodyInput = z.input<typeof ImportRulesV2RequestBody>;

export type ImportRulesV2Response = z.infer<typeof ImportRulesV2Response>;
export const ImportRulesV2Response = z
  .object({
    imported_rules_count: z.number().int().min(0),
    success: z.boolean(),
    errors: z.array(ErrorSchema),
  })
  .strict();
