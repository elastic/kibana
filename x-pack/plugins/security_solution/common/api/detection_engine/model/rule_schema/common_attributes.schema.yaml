openapi: 3.0.0
info:
  title: Common Rule Attributes
  version: 'not applicable'
paths: {}
components:
  x-codegen-enabled: true
  schemas:
    UUID:
      type: string
      format: uuid
      description: A universally unique identifier

    RuleObjectId:
      type: string
      format: uuid

    RuleSignatureId:
      type: string
      description: Could be any string, not necessarily a UUID

    RuleName:
      type: string
      minLength: 1

    RuleDescription:
      type: string
      minLength: 1

    RuleVersion:
      type: integer
      minimum: 1
      description: The rule's version number.

    IsRuleImmutable:
      type: boolean

    IsRuleEnabled:
      type: boolean
      description: Determines whether the rule is enabled.

    RuleTagArray:
      type: array
      items:
        type: string
      description: String array containing words and phrases to help categorize, filter, and search rules. Defaults to an empty array.

    RuleMetadata:
      type: object
      additionalProperties: true

    RuleLicense:
      type: string
      description: The rule's license.

    RuleAuthorArray:
      type: array
      items:
        type: string

    RuleFalsePositiveArray:
      type: array
      items:
        type: string

    RuleReferenceArray:
      type: array
      items:
        type: string

    InvestigationGuide:
      type: string

    SetupGuide:
      type: string

    BuildingBlockType:
      type: string

    AlertsIndex:
      type: string

    AlertsIndexNamespace:
      type: string

    MaxSignals:
      type: integer
      minimum: 1

    Subtechnique:
      type: object
      properties:
        id:
          type: string
          description: Subtechnique ID
        name:
          type: string
          description: Subtechnique name
        reference:
          type: string
          description: Subtechnique reference
      required:
        - id
        - name
        - reference

    Technique:
      type: object
      properties:
        id:
          type: string
          description: Technique ID
        name:
          type: string
          description: Technique name
        reference:
          type: string
          description: Technique reference
        subtechnique:
          type: array
          items:
            $ref: '#/components/schemas/Subtechnique'
          description: Array containing more specific information on the attack technique
      required:
        - id
        - name
        - reference

    Tactic:
      type: object
      properties:
        id:
          type: string
          description: Tactic ID
        name:
          type: string
          description: Tactic name
        reference:
          type: string
          description: Tactic reference
      required:
        - id
        - name
        - reference

    Threat:
      type: object
      properties:
        framework:
          type: string
          description: Relevant attack framework
        tactic:
          $ref: '#/components/schemas/Tactic'
        technique:
          type: array
          items:
            $ref: '#/components/schemas/Technique'
          description: Array containing information on the attack techniques (optional)
      required:
        - framework
        - tactic

    ThreatArray:
      type: array
      items:
        $ref: '#/components/schemas/Threat'

    IndexPatternArray:
      type: array
      items:
        type: string

    DataViewId:
      type: string

    RuleQuery:
      type: string

    RuleFilterArray:
      type: array
      items: {} # unknown

    RuleNameOverride:
      type: string

    TimestampOverride:
      type: string

    TimestampOverrideFallbackDisabled:
      type: boolean

    RequiredField:
      type: object
      properties:
        name:
          type: string
          minLength: 1
        type:
          type: string
          minLength: 1
        ecs:
          type: boolean
      required:
        - name
        - type
        - ecs

    RequiredFieldArray:
      type: array
      items:
        $ref: '#/components/schemas/RequiredField'

    TimelineTemplateId:
      type: string

    TimelineTemplateTitle:
      type: string

    SavedObjectResolveOutcome:
      type: string
      enum:
        - exactMatch
        - aliasMatch
        - conflict

    SavedObjectResolveAliasTargetId:
      type: string

    SavedObjectResolveAliasPurpose:
      type: string
      enum:
        - savedObjectConversion
        - savedObjectImport

    RelatedIntegration:
      type: object
      properties:
        package:
          type: string
          minLength: 1
        version:
          type: string
          minLength: 1
        integration:
          type: string
          minLength: 1
      required:
        - package
        - version

    RelatedIntegrationArray:
      type: array
      items:
        $ref: '#/components/schemas/RelatedIntegration'

    # Schema for fields relating to investigation fields, these are user defined fields we use to highlight in various features in the UI such as alert details flyout and exceptions auto-population from alert. Added in PR #163235
    # Right now we only have a single field but anticipate adding more related fields to store various configuration states such as `override` - where a user might say if they want only these fields to display, or if they want these fields + the fields we select.
    InvestigationFields:
      type: object
      properties:
        field_names:
          type: array
          items:
            type: string
          minItems: 1
      required:
        - field_names

    RuleActionThrottle:
      description: Defines the interval on which a rule's actions are executed.
      oneOf:
        - type: string
          enum:
            - 'no_actions'
            - 'rule'
        - type: string
          # any number except zero followed by one of the suffixes 's', 'm', 'h', 'd'
          pattern: '^[1-9]\d*[smhd]$'

    RuleActionFrequency:
      type: object
      description: The action frequency defines when the action runs (for example, only on rule execution or at specific time intervals).
      properties:
        summary:
          type: boolean
        notifyWhen:
          type: string
          enum:
            - onActionGroupChange
            - onActiveAlert
            - onThrottleInterval
        throttle:
          $ref: '#/components/schemas/RuleActionThrottle'
          nullable: true
      required:
        - summary
        - notifyWhen
        - throttle

    RuleAction:
      type: object
      properties:
        action_type_id:
          type: string
          description: The action type used for sending notifications.
        group:
          type: string
          description: Optionally groups actions by use cases. Use `default` for alert notifications.
        id:
          type: string
          description: The connector ID.
        params:
          type: object
          description: Object containing the allowed connector fields, which varies according to the connector type.
          additionalProperties: true
        uuid:
          type: string
        alerts_filter:
          type: object
          description: TODO implement the schema type
        frequency:
          $ref: '#/components/schemas/RuleActionFrequency'
      required:
        - action_type_id
        - group
        - id
        - params
