openapi: 3.0.0
info:
  title: Security Rule Schema
  version: 'not applicable'
paths: {}
components:
  x-codegen-enabled: true
  schemas:
    BaseRequiredFields:
      type: object
      properties:
        name:
          $ref: './common_attributes.schema.yaml#/components/schemas/RuleName'
        description:
          $ref: './common_attributes.schema.yaml#/components/schemas/RuleDescription'
        risk_score:
          type: integer
          minimum: 0
          maximum: 100
          description: A numerical representation of the alertâ€™s severity from 0 to 100.
          example: |-
            0 - 21 represents low severity
            22 - 47 represents medium severity
            48 - 73 represents high severity
            74 - 100 represents critical severity
        severity:
          type: string
          enum: [low, medium, high, critical]
          description: Severity level of alerts produced by the rule
          example: |-
            'low' Alerts that are of interest but generally not considered to be security incidents
            'medium' Alerts that require investigation
            'high' Alerts that require immediate investigation
            'critical' Alerts that indicate it is highly likely a security incident has occurred

      required:
        - name
        - description
        - risk_score
        - severity

    BaseOptionalFields:
      type: object
      properties:
        # Field overrides
        rule_name_override:
          type: string
          description: Sets the source field for the alert's signal.rule.name value
        timestamp_override:
          type: string
          description: Sets the time field used to query indices
        timestamp_override_fallback_disabled:
          type: boolean
          description: Disables the fallback to the event's @timestamp field

        # Timeline template
        timeline_id:
          type: string
          description: Timeline template ID
        timeline_title:
          type: string
          description: Timeline template title

        # Attributes related to SavedObjectsClient.resolve API
        outcome:
          type: string
          enum:
            - exactMatch
            - aliasMatch
            - conflict
          description: Outcome is a property of the saved object resolve API. It will provide information about the rule following the 8.0 migrations
        alias_target_id:
          type: string
        alias_purpose:
          type: string
          enum:
            - savedObjectConversion
            - savedObjectImport

        # Misc attributes
        license:
          $ref: './common_attributes.schema.yaml#/components/schemas/RuleLicense'
        note:
          type: string
          description: Notes to help investigate alerts produced by the rule.
        building_block_type:
          type: string
          description: Determines if the rule acts as a building block. By default, building-block alerts are not displayed in the UI. These rules are used as a foundation for other rules that do generate alerts. Its value must be default. For more information, refer to https://www.elastic.co/guide/en/security/current/building-block-rule.html.
        output_index:
          type: string
          description: (deprecated) Has no effect.
          deprecated: true
        namespace:
          type: string
          description: Has no effect.
        meta:
          $ref: './common_attributes.schema.yaml#/components/schemas/RuleMetadata'
        investigation_fields:
          $ref: './common_attributes.schema.yaml#/components/schemas/InvestigationFields'

        # Throttle
        throttle:
          $ref: './common_attributes.schema.yaml#/components/schemas/RuleActionThrottle'

    BaseDefaultableFields:
      type: object
      properties:
        # Main attributes
        version:
          $ref: './common_attributes.schema.yaml#/components/schemas/RuleVersion'
        tags:
          $ref: './common_attributes.schema.yaml#/components/schemas/RuleTagArray'
        enabled:
          $ref: './common_attributes.schema.yaml#/components/schemas/IsRuleEnabled'

        # Field overrides
        risk_score_mapping:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              operator:
                type: string
                enum:
                  - equals
              value:
                type: string
              risk_score:
                type: integer
                minimum: 0
                maximum: 100
            required:
              - field
              - operator
              - value
            x-modify: requiredOptional
          description: Overrides generated alerts' risk_score with a value from the source event
        severity_mapping:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              operator:
                type: string
                enum:
                  - equals
              severity:
                type: string
                enum:
                  - low
                  - medium
                  - high
                  - critical
              value:
                type: string
            required:
              - field
              - operator
              - severity
              - value
          description: Overrides generated alerts' severity with values from the source event

        # Rule schedule
        interval:
          type: string
          description: Frequency of rule execution, using a date math range. For example, "1h" means the rule runs every hour. Defaults to 5m (5 minutes).
        from:
          type: string
          description: Time from which data is analyzed each time the rule executes, using a date math range. Defaults to now-6m (analyzes data from 6 minutes before the start time).
          example: |-
            'now-4200s' - Means the rule analyzes data from 70 minutes before its start time
          format: date-math
        to:
          type: string

        # Rule actions
        actions:
          type: array
          items:
            $ref: './common_attributes.schema.yaml#/components/schemas/RuleAction'

        # Rule exceptions
        exceptions_list:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                description: ID of the exception container
                minLength: 1
              list_id:
                type: string
                description: List ID of the exception container
                minLength: 1
              type:
                type: string
                description: The exception type
                enum:
                  - detection
                  - rule_default
                  - endpoint
                  - endpoint_trusted_apps
                  - endpoint_events
                  - endpoint_host_isolation_exceptions
                  - endpoint_blocklists
              namespace_type:
                type: string
                description: Determines the exceptions validity in rule's Kibana space
                enum:
                  - agnostic
                  - single
            required:
              - id
              - list_id
              - type
              - namespace_type

        # Misc attributes
        author:
          type: array
          items:
            type: string
        false_positives:
          type: array
          items:
            type: string
        references:
          type: array
          items:
            type: string
          description: Array containing notes about or references to relevant information about the rule. Defaults to an empty array.
        # maxSignals not used in ML rules but probably should be used
        max_signals:
          type: integer
          minimum: 1
          description: Maximum number of alerts the rule can create during a single execution. Defaults to 100.
        threat:
          $ref: './common_attributes.schema.yaml#/components/schemas/ThreatArray'

    BaseCreateProps:
      allOf:
        - $ref: '#/components/schemas/BaseRequiredFields'
        - $ref: '#/components/schemas/BaseOptionalFields'
        - $ref: '#/components/schemas/BaseDefaultableFields'

    BasePatchProps:
      allOf:
        - $ref: '#/components/schemas/BaseRequiredFields'
          x-modify: partial
        - $ref: '#/components/schemas/BaseOptionalFields'
        - $ref: '#/components/schemas/BaseDefaultableFields'

    BaseResponseProps:
      allOf:
        - $ref: '#/components/schemas/BaseRequiredFields'
        - $ref: '#/components/schemas/BaseOptionalFields'
          # `requiredOptional` is needed to force all fields to be accounted for in
          # conversions from the internal rule schema to the response schema. Rather than
          # use `partial`, which makes each field optional, we make each field required
          # but possibly undefined. The result is that if a field is forgotten in the
          # conversion from internal schema to response schema TS will report an error. If
          # we just used `partial` instead, then optional fields can be accidentally
          # omitted from the conversion - and any actual values in those fields internally
          # will be stripped in the response.
          x-modify: requiredOptional
        - $ref: '#/components/schemas/BaseDefaultableFields'
          x-modify: required

    ResponseRequiredFields:
      type: object
      properties:
        id:
          $ref: './common_attributes.schema.yaml#/components/schemas/RuleObjectId'
        rule_id:
          $ref: './common_attributes.schema.yaml#/components/schemas/RuleSignatureId'
        immutable:
          type: boolean
          description: Immutable rules are prebuilt Elastic rules that cannot be modified by users.
        updated_at:
          type: string
          format: date-time
        updated_by:
          type: string
        created_at:
          type: string
          format: date-time
        created_by:
          type: string
        revision:
          type: integer
          minimum: 0
          description: Revision is a monotonic counter that is incremented each time the rule is updated. It is used to implement optimistic concurrency control.
        # NOTE: For now, Related Integrations, Required Fields and Setup Guide are
        # supported for prebuilt rules only. We don't want to allow users to edit these 3
        # fields via the API. If we added them to baseParams.defaultable, they would
        # become a part of the request schema as optional fields. This is why we add them
        # here, in order to add them only to the response schema.
        related_integrations:
          $ref: './common_attributes.schema.yaml#/components/schemas/RelatedIntegrationArray'
        required_fields:
          $ref: './common_attributes.schema.yaml#/components/schemas/RequiredFieldArray'
        setup:
          $ref: './common_attributes.schema.yaml#/components/schemas/SetupGuide'
      required:
        - id
        - rule_id
        - immutable
        - updated_at
        - updated_by
        - created_at
        - created_by
        - revision
        - related_integrations
        - required_fields
        - setup

    ResponseOptionalFields:
      type: object
      properties:
        execution_summary:
          $ref: '../../rule_monitoring/model/execution_summary.schema.yaml#/components/schemas/RuleExecutionSummary'

    SharedCreateProps:
      allOf:
        - $ref: '#/components/schemas/BaseCreateProps'
        - type: object
          properties:
            rule_id:
              $ref: './common_attributes.schema.yaml#/components/schemas/RuleSignatureId'

    SharedUpdateProps:
      allOf:
        - $ref: '#/components/schemas/BaseCreateProps'
        - type: object
          properties:
            id:
              $ref: './common_attributes.schema.yaml#/components/schemas/RuleObjectId'
            rule_id:
              $ref: './common_attributes.schema.yaml#/components/schemas/RuleSignatureId'

    SharedPatchProps:
      allOf:
        - $ref: '#/components/schemas/BasePatchProps'
        - type: object
          properties:
            id:
              $ref: './common_attributes.schema.yaml#/components/schemas/RuleObjectId'
            rule_id:
              $ref: './common_attributes.schema.yaml#/components/schemas/RuleSignatureId'

    SharedResponseProps:
      allOf:
        - $ref: '#/components/schemas/BaseResponseProps'
        - $ref: '#/components/schemas/ResponseRequiredFields'
        - $ref: '#/components/schemas/ResponseOptionalFields'

    ############
    # EQL Rule #
    ############

    QueryLanguage:
      type: string
      enum:
        - kuery
        - lucene
        - eql
        - esql

    KqlQueryLanguage:
      type: string
      enum:
        - kuery
        - lucene

    EqlQueryLanguage:
      type: string
      enum:
        - eql

    EqlRequiredFields:
      type: object
      properties:
        type:
          type: string
          enum: [eql]
          description: Rule type
        query:
          type: string
          description: EQL query to execute
        language:
          $ref: '#/components/schemas/EqlQueryLanguage'
          description: Query language to use
      required:
        - type
        - query
        - language

    EqlOptionalFields:
      type: object
      properties:
        index:
          type: array
          items:
            type: string
        data_view_id:
          type: string
        filters:
          type: array
          items: {} # unknown
        event_category_override:
          $ref: './specific_attributes/eql_attributes.schema.yaml#/components/schemas/EventCategoryOverride'
        tiebreaker_field:
          $ref: './specific_attributes/eql_attributes.schema.yaml#/components/schemas/TiebreakerField'
        timestamp_field:
          $ref: './specific_attributes/eql_attributes.schema.yaml#/components/schemas/TimestampField'

    EqlRuleCreateFields:
      allOf:
        - $ref: '#/components/schemas/EqlRequiredFields'
        - $ref: '#/components/schemas/EqlOptionalFields'

    EqlRuleResponseFields:
      allOf:
        - $ref: '#/components/schemas/EqlRequiredFields'
        - $ref: '#/components/schemas/EqlOptionalFields'
          x-modify: requiredOptional

    EqlRulePatchFields:
      allOf:
        - $ref: '#/components/schemas/EqlRequiredFields'
          x-modify: partial
        - $ref: '#/components/schemas/EqlOptionalFields'

    EqlRule:
      allOf:
        - $ref: '#/components/schemas/SharedResponseProps'
        - $ref: '#/components/schemas/EqlRuleResponseFields'

    EqlRuleCreateProps:
      allOf:
        - $ref: '#/components/schemas/SharedCreateProps'
        - $ref: '#/components/schemas/EqlRuleCreateFields'

    EqlRuleUpdateProps:
      allOf:
        - $ref: '#/components/schemas/SharedUpdateProps'
        - $ref: '#/components/schemas/EqlRuleCreateFields'

    EqlRulePatchProps:
      allOf:
        - $ref: '#/components/schemas/SharedPatchProps'
        - $ref: '#/components/schemas/EqlRulePatchFields'

    ##############
    # Query Rule #
    ##############

    QueryRuleRequiredFields:
      type: object
      properties:
        type:
          type: string
          enum: [query]
          description: Rule type
      required:
        - type

    QueryRuleOptionalFields:
      type: object
      properties:
        index:
          type: array
          items:
            type: string
        data_view_id:
          type: string
        filters:
          type: array
          items: {} # unknown
        saved_id:
          type: string
          description: Kibana saved search used by the rule to create alerts.
        response_actions:
          type: array
          items:
            $ref: '../rule_response_actions/response_actions.schema.yaml#/components/schemas/ResponseAction'
        alert_suppression:
          $ref: './specific_attributes/query_attributes.schema.yaml#/components/schemas/AlertSuppression'

    QueryRuleDefaultableFields:
      type: object
      properties:
        query:
          type: string
          description: Query to execute
        language:
          $ref: '#/components/schemas/KqlQueryLanguage'

    QueryRuleCreateFields:
      allOf:
        - $ref: '#/components/schemas/QueryRuleRequiredFields'
        - $ref: '#/components/schemas/QueryRuleOptionalFields'
        - $ref: '#/components/schemas/QueryRuleDefaultableFields'

    QueryRulePatchFields:
      allOf:
        - $ref: '#/components/schemas/QueryRuleRequiredFields'
          x-modify: partial
        - $ref: '#/components/schemas/QueryRuleOptionalFields'
        - $ref: '#/components/schemas/QueryRuleDefaultableFields'

    QueryRuleResponseFields:
      allOf:
        - $ref: '#/components/schemas/QueryRuleRequiredFields'
        - $ref: '#/components/schemas/QueryRuleOptionalFields'
          x-modify: requiredOptional
        - $ref: '#/components/schemas/QueryRuleDefaultableFields'
          x-modify: required

    QueryRule:
      allOf:
        - $ref: '#/components/schemas/SharedResponseProps'
        - $ref: '#/components/schemas/QueryRuleResponseFields'

    QueryRuleCreateProps:
      allOf:
        - $ref: '#/components/schemas/SharedCreateProps'
        - $ref: '#/components/schemas/QueryRuleCreateFields'

    QueryRuleUpdateProps:
      allOf:
        - $ref: '#/components/schemas/SharedUpdateProps'
        - $ref: '#/components/schemas/QueryRuleCreateFields'

    QueryRulePatchProps:
      allOf:
        - $ref: '#/components/schemas/SharedPatchProps'
        - $ref: '#/components/schemas/QueryRulePatchFields'

    ####################
    # Saved Query Rule #
    ####################

    SavedQueryRuleRequiredFields:
      type: object
      properties:
        type:
          type: string
          enum: [saved_query]
          description: Rule type
        saved_id:
          type: string
      required:
        - type
        - saved_id

    SavedQueryRuleOptionalFields:
      type: object
      properties:
        index:
          type: array
          items:
            type: string
        data_view_id:
          type: string
        filters:
          type: array
          items: {} # unknown
        response_actions:
          type: array
          items:
            $ref: '../rule_response_actions/response_actions.schema.yaml#/components/schemas/ResponseAction'
        alert_suppression:
          $ref: './specific_attributes/query_attributes.schema.yaml#/components/schemas/AlertSuppression'
        query:
          type: string
          description: Query to execute

    SavedQueryRuleDefaultableFields:
      type: object
      properties:
        language:
          $ref: '#/components/schemas/KqlQueryLanguage'

    SavedQueryRuleCreateFields:
      allOf:
        - $ref: '#/components/schemas/SavedQueryRuleRequiredFields'
        - $ref: '#/components/schemas/SavedQueryRuleOptionalFields'
        - $ref: '#/components/schemas/SavedQueryRuleDefaultableFields'

    SavedQueryRulePatchFields:
      allOf:
        - $ref: '#/components/schemas/SavedQueryRuleRequiredFields'
          x-modify: partial
        - $ref: '#/components/schemas/SavedQueryRuleOptionalFields'
        - $ref: '#/components/schemas/SavedQueryRuleDefaultableFields'

    SavedQueryRuleResponseFields:
      allOf:
        - $ref: '#/components/schemas/SavedQueryRuleRequiredFields'
        - $ref: '#/components/schemas/SavedQueryRuleOptionalFields'
          x-modify: requiredOptional
        - $ref: '#/components/schemas/SavedQueryRuleDefaultableFields'
          x-modify: required

    SavedQueryRule:
      allOf:
        - $ref: '#/components/schemas/SharedResponseProps'
        - $ref: '#/components/schemas/SavedQueryRuleResponseFields'

    SavedQueryRuleCreateProps:
      allOf:
        - $ref: '#/components/schemas/SharedCreateProps'
        - $ref: '#/components/schemas/SavedQueryRuleCreateFields'

    SavedQueryRuleUpdateProps:
      allOf:
        - $ref: '#/components/schemas/SharedUpdateProps'
        - $ref: '#/components/schemas/SavedQueryRuleCreateFields'

    SavedQueryRulePatchProps:
      allOf:
        - $ref: '#/components/schemas/SharedPatchProps'
        - $ref: '#/components/schemas/SavedQueryRulePatchFields'

    ##################
    # Threshold Rule #
    ##################

    ThresholdRuleRequiredFields:
      type: object
      properties:
        type:
          type: string
          enum: [threshold]
          description: Rule type
        query:
          type: string
        threshold:
          $ref: './specific_attributes/threshold_attributes.schema.yaml#/components/schemas/Threshold'
      required:
        - type
        - query
        - threshold

    ThresholdRuleOptionalFields:
      type: object
      properties:
        index:
          type: array
          items:
            type: string
        data_view_id:
          type: string
        filters:
          type: array
          items: {} # unknown
        saved_id:
          type: string

    ThresholdRuleDefaultableFields:
      type: object
      properties:
        language:
          $ref: '#/components/schemas/KqlQueryLanguage'

    ThresholdRuleCreateFields:
      allOf:
        - $ref: '#/components/schemas/ThresholdRuleRequiredFields'
        - $ref: '#/components/schemas/ThresholdRuleOptionalFields'
        - $ref: '#/components/schemas/ThresholdRuleDefaultableFields'

    ThresholdRulePatchFields:
      allOf:
        - $ref: '#/components/schemas/ThresholdRuleRequiredFields'
          x-modify: partial
        - $ref: '#/components/schemas/ThresholdRuleOptionalFields'
        - $ref: '#/components/schemas/ThresholdRuleDefaultableFields'

    ThresholdRuleResponseFields:
      allOf:
        - $ref: '#/components/schemas/ThresholdRuleRequiredFields'
        - $ref: '#/components/schemas/ThresholdRuleOptionalFields'
          x-modify: requiredOptional
        - $ref: '#/components/schemas/ThresholdRuleDefaultableFields'
          x-modify: required

    ThresholdRule:
      allOf:
        - $ref: '#/components/schemas/SharedResponseProps'
        - $ref: '#/components/schemas/ThresholdRuleResponseFields'

    ThresholdRuleCreateProps:
      allOf:
        - $ref: '#/components/schemas/SharedCreateProps'
        - $ref: '#/components/schemas/ThresholdRuleCreateFields'

    ThresholdRuleUpdateProps:
      allOf:
        - $ref: '#/components/schemas/SharedUpdateProps'
        - $ref: '#/components/schemas/ThresholdRuleCreateFields'

    ThresholdRulePatchProps:
      allOf:
        - $ref: '#/components/schemas/SharedPatchProps'
        - $ref: '#/components/schemas/ThresholdRulePatchFields'

    #####################
    # Threat Match Rule #
    #####################

    ThreatMatchRuleRequiredFields:
      type: object
      properties:
        type:
          type: string
          enum: [threat_match]
          description: Rule type
        query:
          type: string
        threat_query:
          type: string
          description: Query used to determine which fields in the Elasticsearch index are used for generating alerts.
        threat_mapping:
          type: array
          minItems: 1
          items:
            type: object
            properties:
              entries:
                type: array
                items:
                  type: object
                  properties:
                    field:
                      type: string
                      minLength: 1
                      description: Field from the event indices on which the rule runs
                    type:
                      type: string
                      enum:
                        - mapping
                    value:
                      type: string
                      minLength: 1
                      description: Field from the Elasticsearch threat index
                  required:
                    - field
                    - type
                    - value
            required:
              - entries
          description: |-
            Array of entries objects that define mappings between the source event fields and the values in the Elasticsearch threat index.

            You can use Boolean and and or logic to define the conditions for when matching fields and values generate alerts. Sibling entries objects are evaluated using or logic, whereas multiple entries in a single entries object use and logic. See below for an example that uses both and and or logic.

        threat_index:
          type: array
          items:
            type: string
          description: Elasticsearch indices used to check which field values generate alerts
      required:
        - type
        - query
        - threat_query
        - threat_mapping
        - threat_index

    ThreatMatchRuleOptionalFields:
      type: object
      properties:
        index:
          type: array
          items:
            type: string
        data_view_id:
          type: string
        filters:
          type: array
          items: {} # unknown
        saved_id:
          type: string
        threat_filters:
          type: array
          items:
            description: Query and filter context array used to filter documents from the Elasticsearch index containing the threat values
        threat_indicator_path:
          type: string
          description: Defines the path to the threat indicator in the indicator documents (optional)
        threat_language:
          $ref: '#/components/schemas/KqlQueryLanguage'
        concurrent_searches:
          type: integer
          minimum: 1
        items_per_search:
          type: integer
          minimum: 1

    ThreatMatchRuleDefaultableFields:
      type: object
      properties:
        language:
          $ref: '#/components/schemas/KqlQueryLanguage'

    ThreatMatchRuleCreateFields:
      allOf:
        - $ref: '#/components/schemas/ThreatMatchRuleRequiredFields'
        - $ref: '#/components/schemas/ThreatMatchRuleOptionalFields'
        - $ref: '#/components/schemas/ThreatMatchRuleDefaultableFields'

    ThreatMatchRulePatchFields:
      allOf:
        - $ref: '#/components/schemas/ThreatMatchRuleRequiredFields'
          x-modify: partial
        - $ref: '#/components/schemas/ThreatMatchRuleOptionalFields'
        - $ref: '#/components/schemas/ThreatMatchRuleDefaultableFields'

    ThreatMatchRuleResponseFields:
      allOf:
        - $ref: '#/components/schemas/ThreatMatchRuleRequiredFields'
        - $ref: '#/components/schemas/ThreatMatchRuleOptionalFields'
          x-modify: requiredOptional
        - $ref: '#/components/schemas/ThreatMatchRuleDefaultableFields'
          x-modify: required

    ThreatMatchRule:
      allOf:
        - $ref: '#/components/schemas/SharedResponseProps'
        - $ref: '#/components/schemas/ThreatMatchRuleResponseFields'

    ThreatMatchRuleCreateProps:
      allOf:
        - $ref: '#/components/schemas/SharedCreateProps'
        - $ref: '#/components/schemas/ThreatMatchRuleCreateFields'

    ThreatMatchRuleUpdateProps:
      allOf:
        - $ref: '#/components/schemas/SharedUpdateProps'
        - $ref: '#/components/schemas/ThreatMatchRuleCreateFields'

    ThreatMatchRulePatchProps:
      allOf:
        - $ref: '#/components/schemas/SharedPatchProps'
        - $ref: '#/components/schemas/ThreatMatchRulePatchFields'

    ###########
    # ML Rule #
    ###########

    MachineLearningRuleRequiredFields:
      type: object
      properties:
        type:
          type: string
          enum: [machine_learning]
          description: Rule type
        anomaly_threshold:
          type: integer
          minimum: 0
          description: Anomaly score threshold above which the rule creates an alert. Valid values are from 0 to 100
        machine_learning_job_id:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
              minItems: 1
          description: Machine learning job ID the rule monitors for anomaly scores.
      required:
        - type
        - machine_learning_job_id
        - anomaly_threshold

    MachineLearningRulePatchFields:
      allOf:
        - $ref: '#/components/schemas/MachineLearningRuleRequiredFields'
          x-modify: partial

    MachineLearningRuleResponseFields:
      allOf:
        - $ref: '#/components/schemas/MachineLearningRuleRequiredFields'

    MachineLearningRuleCreateFields:
      allOf:
        - $ref: '#/components/schemas/MachineLearningRuleRequiredFields'

    MachineLearningRule:
      allOf:
        - $ref: '#/components/schemas/SharedResponseProps'
        - $ref: '#/components/schemas/MachineLearningRuleResponseFields'

    MachineLearningRuleCreateProps:
      allOf:
        - $ref: '#/components/schemas/SharedCreateProps'
        - $ref: '#/components/schemas/MachineLearningRuleCreateFields'

    MachineLearningRuleUpdateProps:
      allOf:
        - $ref: '#/components/schemas/SharedUpdateProps'
        - $ref: '#/components/schemas/MachineLearningRuleCreateFields'

    MachineLearningRulePatchProps:
      allOf:
        - $ref: '#/components/schemas/SharedPatchProps'
        - $ref: '#/components/schemas/MachineLearningRulePatchFields'

    ##################
    # New Terms Rule #
    ##################

    NewTermsRuleRequiredFields:
      type: object
      properties:
        type:
          type: string
          enum: [new_terms]
          description: Rule type
        query:
          type: string
        new_terms_fields:
          $ref: './specific_attributes/new_terms_attributes.schema.yaml#/components/schemas/NewTermsFields'
        history_window_start:
          $ref: './specific_attributes/new_terms_attributes.schema.yaml#/components/schemas/HistoryWindowStart'
      required:
        - type
        - query
        - new_terms_fields
        - history_window_start

    NewTermsRuleOptionalFields:
      type: object
      properties:
        index:
          type: array
          items:
            type: string
        data_view_id:
          type: string
        filters:
          type: array
          items: {} # unknown

    NewTermsRuleDefaultableFields:
      type: object
      properties:
        language:
          $ref: '#/components/schemas/KqlQueryLanguage'

    NewTermsRulePatchFields:
      allOf:
        - $ref: '#/components/schemas/NewTermsRuleRequiredFields'
          x-modify: partial
        - $ref: '#/components/schemas/NewTermsRuleOptionalFields'
        - $ref: '#/components/schemas/NewTermsRuleDefaultableFields'

    NewTermsRuleResponseFields:
      allOf:
        - $ref: '#/components/schemas/NewTermsRuleRequiredFields'
        - $ref: '#/components/schemas/NewTermsRuleOptionalFields'
          x-modify: requiredOptional
        - $ref: '#/components/schemas/NewTermsRuleDefaultableFields'
          x-modify: required

    NewTermsRuleCreateFields:
      allOf:
        - $ref: '#/components/schemas/NewTermsRuleRequiredFields'
        - $ref: '#/components/schemas/NewTermsRuleOptionalFields'
        - $ref: '#/components/schemas/NewTermsRuleDefaultableFields'

    NewTermsRule:
      allOf:
        - $ref: '#/components/schemas/SharedResponseProps'
        - $ref: '#/components/schemas/NewTermsRuleResponseFields'

    NewTermsRuleCreateProps:
      allOf:
        - $ref: '#/components/schemas/SharedCreateProps'
        - $ref: '#/components/schemas/NewTermsRuleCreateFields'

    NewTermsRuleUpdateProps:
      allOf:
        - $ref: '#/components/schemas/SharedUpdateProps'
        - $ref: '#/components/schemas/NewTermsRuleCreateFields'

    NewTermsRulePatchProps:
      allOf:
        - $ref: '#/components/schemas/SharedPatchProps'
        - $ref: '#/components/schemas/NewTermsRulePatchFields'

    ###########
    # ESQL Rule #
    ###########

    EsqlQueryLanguage:
      type: string
      enum:
        - esql

    EsqlRuleRequiredFields:
      type: object
      properties:
        type:
          type: string
          enum: [esql]
          description: Rule type
        language:
          $ref: '#/components/schemas/EsqlQueryLanguage'
        query:
          type: string
          description: ESQL query to execute
      required:
        - type
        - language
        - query

    EsqlRulePatchFields:
      allOf:
        - $ref: '#/components/schemas/EsqlRuleRequiredFields'
          x-modify: partial

    EsqlRuleResponseFields:
      allOf:
        - $ref: '#/components/schemas/EsqlRuleRequiredFields'

    EsqlRuleCreateFields:
      allOf:
        - $ref: '#/components/schemas/EsqlRuleRequiredFields'

    EsqlRule:
      allOf:
        - $ref: '#/components/schemas/SharedResponseProps'
        - $ref: '#/components/schemas/EsqlRuleResponseFields'

    EsqlRuleCreateProps:
      allOf:
        - $ref: '#/components/schemas/SharedCreateProps'
        - $ref: '#/components/schemas/EsqlRuleCreateFields'

    EsqlRuleUpdateProps:
      allOf:
        - $ref: '#/components/schemas/SharedUpdateProps'
        - $ref: '#/components/schemas/EsqlRuleCreateFields'

    EsqlRulePatchProps:
      allOf:
        - $ref: '#/components/schemas/SharedPatchProps'
        - $ref: '#/components/schemas/EsqlRulePatchFields'
          x-modify: partial

    ##########################
    # Final combined schemas #
    ##########################

    TypeSpecificCreateProps:
      anyOf:
        - $ref: '#/components/schemas/EqlRuleCreateFields'
        - $ref: '#/components/schemas/QueryRuleCreateFields'
        - $ref: '#/components/schemas/SavedQueryRuleCreateFields'
        - $ref: '#/components/schemas/ThresholdRuleCreateFields'
        - $ref: '#/components/schemas/ThreatMatchRuleCreateFields'
        - $ref: '#/components/schemas/MachineLearningRuleCreateFields'
        - $ref: '#/components/schemas/NewTermsRuleCreateFields'
        - $ref: '#/components/schemas/EsqlRuleCreateFields'

    TypeSpecificPatchProps:
      anyOf:
        - $ref: '#/components/schemas/EqlRulePatchFields'
        - $ref: '#/components/schemas/QueryRulePatchFields'
        - $ref: '#/components/schemas/SavedQueryRulePatchFields'
        - $ref: '#/components/schemas/ThresholdRulePatchFields'
        - $ref: '#/components/schemas/ThreatMatchRulePatchFields'
        - $ref: '#/components/schemas/MachineLearningRulePatchFields'
        - $ref: '#/components/schemas/NewTermsRulePatchFields'
        - $ref: '#/components/schemas/EsqlRulePatchFields'

    TypeSpecificResponse:
      anyOf:
        - $ref: '#/components/schemas/EqlRuleResponseFields'
        - $ref: '#/components/schemas/QueryRuleResponseFields'
        - $ref: '#/components/schemas/SavedQueryRuleResponseFields'
        - $ref: '#/components/schemas/ThresholdRuleResponseFields'
        - $ref: '#/components/schemas/ThreatMatchRuleResponseFields'
        - $ref: '#/components/schemas/MachineLearningRuleResponseFields'
        - $ref: '#/components/schemas/NewTermsRuleResponseFields'
        - $ref: '#/components/schemas/EsqlRuleResponseFields'

    RuleCreateProps:
      anyOf:
        - $ref: '#/components/schemas/EqlRuleCreateProps'
        - $ref: '#/components/schemas/QueryRuleCreateProps'
        - $ref: '#/components/schemas/SavedQueryRuleCreateProps'
        - $ref: '#/components/schemas/ThresholdRuleCreateProps'
        - $ref: '#/components/schemas/ThreatMatchRuleCreateProps'
        - $ref: '#/components/schemas/MachineLearningRuleCreateProps'
        - $ref: '#/components/schemas/NewTermsRuleCreateProps'
        - $ref: '#/components/schemas/EsqlRuleCreateProps'

    RuleUpdateProps:
      anyOf:
        - $ref: '#/components/schemas/EqlRuleUpdateProps'
        - $ref: '#/components/schemas/QueryRuleUpdateProps'
        - $ref: '#/components/schemas/SavedQueryRuleUpdateProps'
        - $ref: '#/components/schemas/ThresholdRuleUpdateProps'
        - $ref: '#/components/schemas/ThreatMatchRuleUpdateProps'
        - $ref: '#/components/schemas/MachineLearningRuleUpdateProps'
        - $ref: '#/components/schemas/NewTermsRuleUpdateProps'
        - $ref: '#/components/schemas/EsqlRuleUpdateProps'

    RulePatchProps:
      anyOf:
        - $ref: '#/components/schemas/EqlRulePatchProps'
        - $ref: '#/components/schemas/QueryRulePatchProps'
        - $ref: '#/components/schemas/SavedQueryRulePatchProps'
        - $ref: '#/components/schemas/ThresholdRulePatchProps'
        - $ref: '#/components/schemas/ThreatMatchRulePatchProps'
        - $ref: '#/components/schemas/MachineLearningRulePatchProps'
        - $ref: '#/components/schemas/NewTermsRulePatchProps'
        - $ref: '#/components/schemas/EsqlRulePatchProps'

    RuleResponse:
      anyOf:
        - $ref: '#/components/schemas/EqlRule'
        - $ref: '#/components/schemas/QueryRule'
        - $ref: '#/components/schemas/SavedQueryRule'
        - $ref: '#/components/schemas/ThresholdRule'
        - $ref: '#/components/schemas/ThreatMatchRule'
        - $ref: '#/components/schemas/MachineLearningRule'
        - $ref: '#/components/schemas/NewTermsRule'
        - $ref: '#/components/schemas/EsqlRule'
