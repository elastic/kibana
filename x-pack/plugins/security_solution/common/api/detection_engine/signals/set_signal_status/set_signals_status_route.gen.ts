/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { z } from 'zod';

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Set alerts status API endpoint
 *   version: 2023-10-31
 */

import { NonEmptyString } from '../../../model/primitives.gen';
import { AlertStatus } from '../../../model/alert.gen';

export type SetAlertsStatusRequestBody = z.infer<typeof SetAlertsStatusRequestBody>;
export const SetAlertsStatusRequestBody = z.union([
  z.object({
    signal_ids: z.array(NonEmptyString).min(1),
    status: AlertStatus.optional(),
  }),
  z.object({
    query: z.object({}).catchall(z.unknown()),
    status: AlertStatus.optional(),
    conflicts: z.enum(['abort', 'proceed']).optional().default('abort'),
  }),
]);
export type SetAlertsStatusRequestBodyInput = z.input<typeof SetAlertsStatusRequestBody>;

/**
 * Elasticsearch update by query response
 */
export type SetAlertsStatusResponse = z.infer<typeof SetAlertsStatusResponse>;
export const SetAlertsStatusResponse = z.object({}).catchall(z.unknown());
