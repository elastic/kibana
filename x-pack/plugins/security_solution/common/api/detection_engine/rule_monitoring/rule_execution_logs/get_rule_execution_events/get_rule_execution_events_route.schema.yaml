openapi: 3.0.0
info:
  title: Get Rule Execution Events API endpoint
  version: '1'
paths:
  /internal/detection_engine/rules/{ruleId}/execution/events:
    put:
      x-labels: [ess, serverless]
      x-internal: true
      x-codegen-enabled: true
      operationId: GetRuleExecutionEvents
      summary: Returns execution events of a given rule (aggregated by execution UUID) from Event Log.
      tags:
        - Rule Execution Log API
      parameters:
        - name: ruleId
          in: path
          required: true
          schema:
            type: string
            minLength: 1
        - name: search_term
          in: query
          required: false
          description: Include events of matching the search term. If omitted, all events will be included.
          schema:
            type: string
        - name: event_types
          in: query
          required: false
          description: Include events of the specified types. If omitted, all types of events will be included.
          schema:
            type: array
            items:
              $ref: '../../model/execution_event.schema.yaml#/components/schemas/RuleExecutionEventType'
            default: []
        - name: log_levels
          in: query
          required: false
          description: Include events having these log levels. If omitted, events of all levels will be included.
          schema:
            type: array
            items:
              $ref: '../../model/execution_event.schema.yaml#/components/schemas/LogLevel'
            default: []
        - name: date_start
          in: query
          required: false
          description: Start date of the time range to query
          schema:
            type: string
            format: date-time
        - name: date_end
          in: query
          required: false
          description: End date of the time range to query
          schema:
            type: string
            format: date-time
        - name: sort_order
          in: query
          required: false
          description: Sort order to sort results by
          schema:
            $ref: '../../../model/sorting.schema.yaml#/components/schemas/SortOrder'
            default: desc
        - name: page
          in: query
          required: false
          description: Page number to return
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          required: false
          description: Number of results per page
          schema:
            type: integer
            default: 20
      responses:
        200:
          description: Indicates a successful call
          content:
            application/json:
              schema:
                type: object
                properties:
                  events:
                    type: array
                    items:
                      $ref: '../../model/execution_event.schema.yaml#/components/schemas/RuleExecutionEvent'
                  pagination:
                    $ref: '../../../model/pagination.schema.yaml#/components/schemas/PaginationResult'
                required:
                  - events
                  - pagination
