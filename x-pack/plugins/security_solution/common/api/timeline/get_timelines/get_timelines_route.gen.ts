/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { z } from 'zod';

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 */

import {
  TimelineType,
  SortFieldTimeline,
  TimelineStatus,
  TimelineResponse,
} from '../model/components.gen';

export type GetTimelinesRequestQuery = z.infer<typeof GetTimelinesRequestQuery>;
export const GetTimelinesRequestQuery = z.object({
  /**
   * If true, only timelines that are marked as favorites by the user are returned.
   */
  only_user_favorite: z.enum(['true', 'false']).nullable(),
  timeline_type: TimelineType.nullable(),
  sort_field: SortFieldTimeline,
  sort_order: z.enum(['asc', 'desc']),
  page_size: z.string().nullable(),
  page_index: z.string().nullable(),
  search: z.string().nullable(),
  status: TimelineStatus.nullable(),
});
export type GetTimelinesRequestQueryInput = z.input<typeof GetTimelinesRequestQuery>;

export type GetTimelinesResponse = z.infer<typeof GetTimelinesResponse>;
export const GetTimelinesResponse = z.object({
  data: z.object({
    timelines: z.array(TimelineResponse),
    totalCount: z.number(),
    defaultTimelineCount: z.number(),
    templateTimelineCount: z.number(),
    favoriteCount: z.number(),
    elasticTemplateTimelineCount: z.number(),
    customTemplateTimelineCount: z.number(),
  }),
});
