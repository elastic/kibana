/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Elastic Security - Timeline - Pinned Event API
 *   version: 2023-10-31
 */

import { z } from '@kbn/zod';

import { PinnedEvent } from '../model/components.gen';

export type PinnedEventBaseResponseBody = z.infer<typeof PinnedEventBaseResponseBody>;
export const PinnedEventBaseResponseBody = z.object({
  code: z.number(),
  message: z.string().optional(),
});

export type PersistPinnedEventResponse = z.infer<typeof PersistPinnedEventResponse>;
export const PersistPinnedEventResponse = z.union([
  PinnedEvent.merge(PinnedEventBaseResponseBody),
  z.object({}).nullable(),
]);

export type PersistPinnedEventRouteRequestBody = z.infer<typeof PersistPinnedEventRouteRequestBody>;
export const PersistPinnedEventRouteRequestBody = z.object({
  eventId: z.string(),
  pinnedEventId: z.string().nullable().optional(),
  timelineId: z.string(),
});
export type PersistPinnedEventRouteRequestBodyInput = z.input<
  typeof PersistPinnedEventRouteRequestBody
>;

export type PersistPinnedEventRouteResponse = z.infer<typeof PersistPinnedEventRouteResponse>;
export const PersistPinnedEventRouteResponse = z.object({
  data: z.object({
    persistPinnedEventOnTimeline: PersistPinnedEventResponse,
  }),
});
