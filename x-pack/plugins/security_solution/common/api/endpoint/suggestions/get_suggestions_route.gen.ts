/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { z } from 'zod';

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Get Suggestions Schema
 *   version: 2023-10-31
 */

import { SuccessResponse } from '../model/schema/common.gen';

export type GetSuggestionsRequestParams = z.infer<typeof GetSuggestionsRequestParams>;
export const GetSuggestionsRequestParams = z.object({
  query: z.object({
    suggestion_type: z.literal('eventFilters').optional(),
  }),
});
export type GetSuggestionsRequestParamsInput = z.input<typeof GetSuggestionsRequestParams>;

export type GetSuggestionsRequestBody = z.infer<typeof GetSuggestionsRequestBody>;
export const GetSuggestionsRequestBody = z.object({
  field: z.string().optional(),
  query: z.string().optional(),
  filters: z.unknown(),
  fieldMeta: z.unknown(),
});
export type GetSuggestionsRequestBodyInput = z.input<typeof GetSuggestionsRequestBody>;

export type GetSuggestionsResponse = z.infer<typeof GetSuggestionsResponse>;
export const GetSuggestionsResponse = SuccessResponse;
