/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Get Action status schema
 *   version: 2023-10-31
 */

import { z } from 'zod';

import { AgentIds, AgentId } from '../../model/schema/common.gen';

export type PendingActionsSchema = z.infer<typeof PendingActionsSchema>;
export const PendingActionsSchema = z.object({
  isolate: z.number().int().optional(),
  unisolate: z.number().int().optional(),
  'kill-process': z.number().int().optional(),
  'suspend-process': z.number().int().optional(),
  'running-processes': z.number().int().optional(),
  'get-file': z.number().int().optional(),
  execute: z.number().int().optional(),
  upload: z.number().int().optional(),
  scan: z.number().int().optional(),
});

export type ActionStatusSuccessResponse = z.infer<typeof ActionStatusSuccessResponse>;
export const ActionStatusSuccessResponse = z.object({
  body: z
    .object({
      data: z
        .object({
          agent_id: AgentId.optional(),
          pending_actions: PendingActionsSchema.optional(),
        })
        .optional(),
    })
    .optional(),
});

export type EndpointGetActionsStatusRequestQuery = z.infer<
  typeof EndpointGetActionsStatusRequestQuery
>;
export const EndpointGetActionsStatusRequestQuery = z.object({
  query: z.object({
    agent_ids: AgentIds.optional(),
  }),
});
export type EndpointGetActionsStatusRequestQueryInput = z.input<
  typeof EndpointGetActionsStatusRequestQuery
>;

export type EndpointGetActionsStatusResponse = z.infer<typeof EndpointGetActionsStatusResponse>;
export const EndpointGetActionsStatusResponse = ActionStatusSuccessResponse;
