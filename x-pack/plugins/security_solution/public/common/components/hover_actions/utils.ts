/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import {
  ALERT_RULE_CREATED_BY,
  ALERT_RULE_DESCRIPTION,
  ALERT_RULE_ENABLED,
  ALERT_RULE_FROM,
  ALERT_RULE_ID,
  ALERT_RULE_INTERVAL,
  ALERT_RULE_NAME,
  ALERT_RULE_NOTE,
  ALERT_RULE_REFERENCES,
  ALERT_RULE_RISK_SCORE,
  ALERT_RULE_RULE_ID,
  ALERT_RULE_SEVERITY,
  ALERT_RULE_TAGS,
  ALERT_RULE_TO,
  ALERT_RULE_TYPE,
  ALERT_RULE_UPDATED_BY,
  ALERT_RULE_VERSION,
  ALERT_STATUS,
} from '@kbn/rule-data-utils';
import { BrowserField } from '../../containers/source';
import {
  ALERT_ANCESTORS_DEPTH,
  ALERT_ANCESTORS_ID,
  ALERT_ANCESTORS_INDEX,
  ALERT_ANCESTORS_RULE,
  ALERT_ANCESTORS_TYPE,
  ALERT_ORIGINAL_EVENT_ACTION,
  ALERT_ORIGINAL_EVENT_CATEGORY,
  ALERT_ORIGINAL_EVENT_CODE,
  ALERT_ORIGINAL_EVENT_CREATED,
  ALERT_ORIGINAL_EVENT_DATASET,
  ALERT_ORIGINAL_EVENT_DURATION,
  ALERT_ORIGINAL_EVENT_END,
  ALERT_ORIGINAL_EVENT_HASH,
  ALERT_ORIGINAL_EVENT_ID,
  ALERT_ORIGINAL_EVENT_KIND,
  ALERT_ORIGINAL_EVENT_MODULE,
  ALERT_ORIGINAL_EVENT_ORIGINAL,
  ALERT_ORIGINAL_EVENT_OUTCOME,
  ALERT_ORIGINAL_EVENT_PROVIDER,
  ALERT_ORIGINAL_EVENT_RISK_SCORE,
  ALERT_ORIGINAL_EVENT_RISK_SCORE_NORM,
  ALERT_ORIGINAL_EVENT_SEQUENCE,
  ALERT_ORIGINAL_EVENT_SEVERITY,
  ALERT_ORIGINAL_EVENT_START,
  ALERT_ORIGINAL_EVENT_TIMEZONE,
  ALERT_ORIGINAL_EVENT_TYPE,
  ALERT_ORIGINAL_TIME,
  ALERT_RULE_FALSE_POSITIVES,
  ALERT_RULE_FILTERS,
  ALERT_RULE_IMMUTABLE,
  ALERT_RULE_INDEX,
  ALERT_RULE_LANGUAGE,
  ALERT_RULE_MAX_SIGNALS,
  ALERT_RULE_OUTPUT_INDEX,
  ALERT_RULE_QUERY,
  ALERT_RULE_SAVED_ID,
  ALERT_RULE_SIZE,
  ALERT_RULE_THREAT,
  ALERT_RULE_THREAT_TACTIC_ID,
  ALERT_RULE_THREAT_TACTIC_NAME,
  ALERT_RULE_THREAT_TACTIC_REFERENCE,
  ALERT_RULE_THREAT_TECHNIQUE_ID,
  ALERT_RULE_THREAT_TECHNIQUE_NAME,
  ALERT_RULE_THREAT_TECHNIQUE_REFERENCE,
  ALERT_RULE_TIMELINE_ID,
  ALERT_RULE_TIMELINE_TITLE,
} from './../../../../common/alert_constants';

export const getAdditionalScreenReaderOnlyContext = ({
  field,
  value,
}: {
  field: string;
  value?: string[] | string | null;
}): string => {
  if (value == null) {
    return field;
  }

  return Array.isArray(value) ? `${field} ${value.join(' ')}` : `${field} ${value}`;
};

export const allowTopN = ({
  browserField,
  fieldName,
}: {
  browserField: Partial<BrowserField> | undefined;
  fieldName: string;
}): boolean => {
  const isAggregatable = browserField?.aggregatable ?? false;
  const fieldType = browserField?.type ?? '';
  const isAllowedType = [
    'boolean',
    'geo-point',
    'geo-shape',
    'ip',
    'keyword',
    'number',
    'numeric',
    'string',
  ].includes(fieldType);

  // TODO: remove this explicit allowlist when the ECS documentation includes alerts
  const isAllowlistedNonBrowserField = [
    ALERT_ANCESTORS_DEPTH,
    ALERT_ANCESTORS_ID,
    ALERT_ANCESTORS_INDEX,
    ALERT_ANCESTORS_RULE,
    ALERT_ANCESTORS_TYPE,
    ALERT_ORIGINAL_EVENT_ACTION,
    ALERT_ORIGINAL_EVENT_CATEGORY,
    ALERT_ORIGINAL_EVENT_CODE,
    ALERT_ORIGINAL_EVENT_CREATED,
    ALERT_ORIGINAL_EVENT_DATASET,
    ALERT_ORIGINAL_EVENT_DURATION,
    ALERT_ORIGINAL_EVENT_END,
    ALERT_ORIGINAL_EVENT_HASH,
    ALERT_ORIGINAL_EVENT_ID,
    ALERT_ORIGINAL_EVENT_KIND,
    ALERT_ORIGINAL_EVENT_MODULE,
    ALERT_ORIGINAL_EVENT_ORIGINAL,
    ALERT_ORIGINAL_EVENT_OUTCOME,
    ALERT_ORIGINAL_EVENT_PROVIDER,
    ALERT_ORIGINAL_EVENT_RISK_SCORE,
    ALERT_ORIGINAL_EVENT_RISK_SCORE_NORM,
    ALERT_ORIGINAL_EVENT_SEQUENCE,
    ALERT_ORIGINAL_EVENT_SEVERITY,
    ALERT_ORIGINAL_EVENT_START,
    ALERT_ORIGINAL_EVENT_TIMEZONE,
    ALERT_ORIGINAL_EVENT_TYPE,
    ALERT_ORIGINAL_TIME,
    ALERT_RULE_CREATED_BY,
    ALERT_RULE_DESCRIPTION,
    ALERT_RULE_ENABLED,
    ALERT_RULE_FALSE_POSITIVES,
    ALERT_RULE_FILTERS,
    ALERT_RULE_FROM,
    ALERT_RULE_ID,
    ALERT_RULE_IMMUTABLE,
    ALERT_RULE_INDEX,
    ALERT_RULE_INTERVAL,
    ALERT_RULE_LANGUAGE,
    ALERT_RULE_MAX_SIGNALS,
    ALERT_RULE_NAME,
    ALERT_RULE_NOTE,
    ALERT_RULE_OUTPUT_INDEX,
    ALERT_RULE_QUERY,
    ALERT_RULE_REFERENCES,
    ALERT_RULE_RISK_SCORE,
    ALERT_RULE_RULE_ID,
    ALERT_RULE_SAVED_ID,
    ALERT_RULE_SEVERITY,
    ALERT_RULE_SIZE,
    ALERT_RULE_TAGS,
    ALERT_RULE_THREAT,
    ALERT_RULE_THREAT_TACTIC_ID,
    ALERT_RULE_THREAT_TACTIC_NAME,
    ALERT_RULE_THREAT_TACTIC_REFERENCE,
    ALERT_RULE_THREAT_TECHNIQUE_ID,
    ALERT_RULE_THREAT_TECHNIQUE_NAME,
    ALERT_RULE_THREAT_TECHNIQUE_REFERENCE,
    ALERT_RULE_TIMELINE_ID,
    ALERT_RULE_TIMELINE_TITLE,
    ALERT_RULE_TO,
    ALERT_RULE_TYPE,
    ALERT_RULE_UPDATED_BY,
    ALERT_RULE_VERSION,
    ALERT_STATUS,
    // @ts-expect-error fieldName does not need to match the string literals above
  ].includes(fieldName);

  return isAllowlistedNonBrowserField || (isAggregatable && isAllowedType);
};
