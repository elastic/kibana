/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

export const commands = [
  'cat',
  'cd',
  'clear',
  'env',
  'eventlog',
  'filehash',
  'getsid',
  'help',
  'history',
  'ifconfig',
  'ls',
  'mount',
  'netstat',
  'ps',
  'pwd',
  'reg query',
];

export const activeResponderCommands = [
  'cp',
  'encrypt',
  'get',
  'kill',
  'map',
  'memdump',
  'mkdir',
  'mv',
  'reg set',
  'reg delete',
  'reg load',
  'reg unload',
  'restart',
  'rm',
  'runscript',
  'shutdown',
  'unmap',
  'update history',
  'update install',
  'update list',
  'update query',
  'xmemdump',
  'zip',
];

export const adminCommands = ['put', 'run'];

export const allRTRCommands = [...commands, ...activeResponderCommands, ...adminCommands].sort();

export const scriptsList = [
  {
    command: 'cat',
    description: 'Read a file from disk and display as ASCII',
    examples: 'cat foo.txt\r\ncat -n foo.txt\r\ncat -t foo.txt\r\ncat -t -n foo.txt',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 671,
        created_at: '2020-09-12T00:11:30Z',
        updated_at: '2020-09-12T00:11:30Z',
        script_id: 94,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Path',
        description: 'path to cat',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 672,
        created_at: '2020-09-12T00:11:30Z',
        updated_at: '2020-09-12T00:11:30Z',
        script_id: 94,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'n',
        description: 'Number the output lines starting from 1',
        default_value: '',
        required: false,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 673,
        created_at: '2020-09-12T00:11:30Z',
        updated_at: '2020-09-12T00:11:30Z',
        script_id: 94,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 't',
        description: "Display non-printing characters, and display tab characters as `^I'.",
        default_value: '',
        required: false,
        sequence: 3,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'cd',
    description: 'Change the current working directory',
    examples: '',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 674,
        created_at: '2020-09-12T00:11:37Z',
        updated_at: '2020-09-12T00:11:37Z',
        script_id: 95,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Path',
        description: 'path',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'cp',
    description: 'Copy a file or directory',
    examples: 'cp SourceFile.txt TargetFile.txt\r\ncp -R sourcedir targetdir',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 675,
        created_at: '2020-09-12T00:11:37Z',
        updated_at: '2020-09-12T00:11:37Z',
        script_id: 96,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Source',
        description: 'The source file/directory to copy',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 676,
        created_at: '2020-09-12T00:11:37Z',
        updated_at: '2020-09-12T00:11:37Z',
        script_id: 96,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Destination',
        description: 'The destination file/directory',
        default_value: '',
        required: true,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 677,
        created_at: '2020-09-12T00:11:37Z',
        updated_at: '2020-09-12T00:11:37Z',
        script_id: 96,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'R',
        description: 'Flag to allow recursive copy when a directory is given as a source',
        default_value: '',
        required: false,
        sequence: 3,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'encrypt',
    description: 'Encrypt a file with AES-256',
    examples:
      'encrypt cleartextsecret.pdf\r\n    Encrypt the file cleartextsecret.pdf with an auto-generated encryption key\r\n\r\nencrypt cleartextsecret.pdf bXlzdXBlcnNlY3JldHBhc3N3b3JkNDRjaGFyYWN0ZXI=\r\n    Encrypt the file cleartextsecret.pdf with the specified 44-character Base64 encoded encryption key',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 678,
        created_at: '2020-09-12T00:11:36Z',
        updated_at: '2020-09-12T00:11:36Z',
        script_id: 98,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Path',
        description: 'File to encrypt',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 679,
        created_at: '2020-09-12T00:11:36Z',
        updated_at: '2020-09-12T00:11:36Z',
        script_id: 98,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Key',
        description: 'AES-256 key in plain text to encrypt file',
        default_value: '',
        required: false,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'env',
    description: 'Print out the environment',
    examples: 'env',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [],
  },
  {
    command: 'filehash',
    description: 'Generate the MD5, SHA1, and SHA256 hashes of a file',
    examples: 'filehash /tmp/test',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 680,
        created_at: '2020-09-12T00:11:36Z',
        updated_at: '2020-09-12T00:11:36Z',
        script_id: 100,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Path',
        description: 'File to hash',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'get',
    description: 'Upload a file to the CrowdStrike cloud',
    examples: 'get Suspicious.txt',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 681,
        created_at: '2024-07-16T22:36:53Z',
        updated_at: '2024-07-16T22:36:53Z',
        script_id: 101,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Path',
        description: 'Path to file',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'ifconfig',
    description: 'Show network configuration information',
    examples: 'ifconfig',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [],
  },
  {
    command: 'kill',
    description: 'Kill a process',
    examples: 'kill 10\r\nkill -s=15 10',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 682,
        created_at: '2020-10-22T22:32:42Z',
        updated_at: '2020-10-22T22:32:42Z',
        script_id: 103,
        arg_type: 'arg',
        data_type: 'int',
        requires_value: false,
        arg_name: 'PID',
        description: 'Process ID',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 683,
        created_at: '2020-10-22T22:32:42Z',
        updated_at: '2020-10-22T22:32:42Z',
        script_id: 103,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: true,
        arg_name: 's',
        description:
          'A symbolic signal name or a non-negative decimal integer specifying the signal to be sent instead of the default TERM.',
        default_value: '',
        required: false,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'ls',
    description: 'Display the contents of the specified path',
    examples: 'ls\r\nls -l\r\nls -L\r\nls -t\r\nls -l -@\r\nls -R\r\nls -l -R\r\nls -l -t -R -L',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 684,
        created_at: '2020-09-12T00:11:34Z',
        updated_at: '2020-09-12T00:11:34Z',
        script_id: 104,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Path',
        description: 'Path',
        default_value: '.',
        required: false,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 685,
        created_at: '2020-09-12T00:11:34Z',
        updated_at: '2020-09-12T00:11:34Z',
        script_id: 104,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'l',
        description: 'List in long format.',
        default_value: '',
        required: false,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 686,
        created_at: '2020-09-12T00:11:34Z',
        updated_at: '2020-09-12T00:11:34Z',
        script_id: 104,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'L',
        description:
          'Follow all symbolic links to final target and list the file or directory the link references rather than the link itself.',
        default_value: '',
        required: false,
        sequence: 3,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 687,
        created_at: '2020-09-12T00:11:34Z',
        updated_at: '2020-09-12T00:11:34Z',
        script_id: 104,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'R',
        description: 'Recursively list subdirectories encountered.',
        default_value: '',
        required: false,
        sequence: 4,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 688,
        created_at: '2020-09-12T00:11:34Z',
        updated_at: '2020-09-12T00:11:34Z',
        script_id: 104,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 't',
        description:
          'Sort by time modified (most recently modified first) before sorting the operands by lexicographical order.',
        default_value: '',
        required: false,
        sequence: 5,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'mkdir',
    description: 'Create a new directory (access restricted to root)',
    examples: 'mkdir /tmp/new_directory',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 689,
        created_at: '2020-09-12T00:11:35Z',
        updated_at: '2020-09-12T00:11:35Z',
        script_id: 105,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Directory',
        description: 'Absolute or relative path of directory to create',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 690,
        created_at: '2020-09-12T00:11:35Z',
        updated_at: '2020-09-12T00:11:35Z',
        script_id: 105,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'p',
        description: 'Flag to create intermediate directories as required.',
        default_value: '',
        required: false,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'mount',
    description: 'List or mount filesystem volumes',
    examples:
      'Executable by all RTR roles:\r\nmount\r\nExecutable by privileged RTR users only:\r\nmount -t=nfs "host:/exports/filesystem" "/mnt/filesystem"\r\n    Mount the NFS filesystem located at "/exports/filesystem" on "host" to the local destination "/mnt/filesystem"\r\nmount -t=smbfs "//user:password@host/filesystem" "/mnt/mountpoint"\r\n    Mount the SMB "/filesystem" on "host" as "user" with "password" to "/mnt/mountpoint"\r\nmount -t=smbfs -o=nobrowse "//user:password@host/filesystem" "/mnt/mountpoint"\r\n    Mount the SMB "/filesystem" with option "nobrowse" on "host" as "user" with "password" to "/mnt/mountpoint"',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 691,
        created_at: '2020-09-19T23:11:31Z',
        updated_at: '2020-09-19T23:11:31Z',
        script_id: 106,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Source',
        description: 'Source filesystem, possibly a URL including username and password',
        default_value: '',
        required: false,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'destructive',
      },
      {
        id: 692,
        created_at: '2020-09-19T23:11:31Z',
        updated_at: '2020-09-19T23:11:31Z',
        script_id: 106,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Mountpoint',
        description: 'Mount point',
        default_value: '',
        required: false,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'destructive',
      },
      {
        id: 693,
        created_at: '2020-09-19T23:11:31Z',
        updated_at: '2020-09-19T23:11:31Z',
        script_id: 106,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: true,
        arg_name: 't',
        description: 'Filesystem type',
        default_value: '',
        required: false,
        sequence: 3,
        options: null,
        encoding: '',
        command_level: 'destructive',
      },
      {
        id: 694,
        created_at: '2020-09-19T23:11:31Z',
        updated_at: '2020-09-19T23:11:31Z',
        script_id: 106,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: true,
        arg_name: 'o',
        description: 'Mount options',
        default_value: '',
        required: false,
        sequence: 4,
        options: null,
        encoding: '',
        command_level: 'destructive',
      },
      {
        id: 695,
        created_at: '2020-09-19T23:11:31Z',
        updated_at: '2020-09-19T23:11:31Z',
        script_id: 106,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'type',
        description: 'Filesystem type (supports Mac style options)',
        default_value: '',
        required: false,
        sequence: 5,
        options: null,
        encoding: '',
        command_level: 'destructive',
      },
      {
        id: 696,
        created_at: '2020-09-19T23:11:31Z',
        updated_at: '2020-09-19T23:11:31Z',
        script_id: 106,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'options',
        description: 'Mount options (supports Mac style options)',
        default_value: '',
        required: false,
        sequence: 6,
        options: null,
        encoding: '',
        command_level: 'destructive',
      },
    ],
  },
  {
    command: 'mv',
    description: 'Move a file or directory',
    examples: 'mv /Users/JohnDoe/suspicious_file /tmp/investigate',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 697,
        created_at: '2020-09-12T00:11:32Z',
        updated_at: '2020-09-12T00:11:32Z',
        script_id: 107,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Source',
        description: 'Source file or directory.  Absolute or relative path',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 698,
        created_at: '2020-09-12T00:11:32Z',
        updated_at: '2020-09-12T00:11:32Z',
        script_id: 107,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Destination',
        description: 'Destination.  Absolute or relative path',
        default_value: '',
        required: true,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'netstat',
    description: 'Display routing information or network connections',
    examples: 'netstat\r\nnetstat -nr',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 699,
        created_at: '2020-09-12T00:11:32Z',
        updated_at: '2020-09-12T00:11:32Z',
        script_id: 108,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'nr',
        description: 'Flag to show routing information',
        default_value: '',
        required: false,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'ps',
    description: 'Display process information',
    examples: 'ps',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [],
  },
  {
    command: 'put',
    description: 'Put a file from the CrowdStrike cloud onto the machine',
    examples:
      'put MyCustomExecutable\r\n        Puts MyCustomExecutable from the CrowdStrike cloud into the current working directory',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 733,
        created_at: '2021-04-08T02:52:34Z',
        updated_at: '2021-04-08T02:52:34Z',
        script_id: 129,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Filename',
        description: 'Filename from available files',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'pwd',
    description: 'Prints present working directory',
    examples: '',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [],
  },
  {
    command: 'restart',
    description: 'Restart target system',
    examples: '',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 700,
        created_at: '2020-09-12T00:11:32Z',
        updated_at: '2020-09-12T00:11:32Z',
        script_id: 111,
        arg_type: 'flag',
        data_type: 'bool',
        requires_value: false,
        arg_name: 'Confirm',
        description: 'Confirms restart is ok',
        default_value: '',
        required: false,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'rm',
    description: 'Remove a file or directory',
    examples: 'rm foo\r\nrm -r foo\r\nrm -r -d foo',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 701,
        created_at: '2020-09-12T00:11:33Z',
        updated_at: '2020-09-12T00:11:33Z',
        script_id: 112,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'path',
        description: 'File or Directory to delete',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 702,
        created_at: '2020-09-12T00:11:33Z',
        updated_at: '2020-09-12T00:11:33Z',
        script_id: 112,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'r',
        description: 'Flag to allow recursive deletes.  Implies -d.',
        default_value: '',
        required: false,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 703,
        created_at: '2020-09-12T00:11:33Z',
        updated_at: '2020-09-12T00:11:33Z',
        script_id: 112,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'd',
        description: 'Flag to attempt removal of directories as well as other types of files.',
        default_value: '',
        required: false,
        sequence: 3,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'rmdir',
    description: 'Remove a directory',
    examples: 'rmdir /path/to/dir\r\nrmdir -p /path/to/dir',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 704,
        created_at: '2020-09-12T00:11:30Z',
        updated_at: '2020-09-12T00:11:30Z',
        script_id: 113,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Path',
        description: 'Directory to remove',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 705,
        created_at: '2020-09-12T00:11:30Z',
        updated_at: '2020-09-12T00:11:30Z',
        script_id: 113,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'p',
        description: 'Flag to allow removal of all intermediate parent directories as required.',
        default_value: '',
        required: false,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'run',
    description: 'Run an executable\r\n',
    examples: '',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 735,
        created_at: '2022-03-01T00:23:37Z',
        updated_at: '2022-03-01T00:23:37Z',
        script_id: 132,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Executable',
        description: 'executable path ',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 736,
        created_at: '2022-03-01T00:23:37Z',
        updated_at: '2022-03-01T00:23:37Z',
        script_id: 132,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: true,
        arg_name: 'CommandLine',
        description: 'Command line sent to executable',
        default_value: '',
        required: false,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 737,
        created_at: '2022-03-01T00:23:37Z',
        updated_at: '2022-03-01T00:23:37Z',
        script_id: 132,
        arg_type: 'flag',
        data_type: 'bool',
        requires_value: false,
        arg_name: 'Wait',
        description: 'Flag to wait for command to complete',
        default_value: '',
        required: false,
        sequence: 3,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'runscript',
    description: 'Run a custom script',
    examples: '',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 738,
        created_at: '2023-09-13T22:31:47Z',
        updated_at: '2023-09-13T22:31:47Z',
        script_id: 133,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: true,
        arg_name: 'Raw',
        description: 'Raw script content',
        default_value: '',
        required: false,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'high-privilege',
      },
      {
        id: 739,
        created_at: '2023-09-13T22:31:47Z',
        updated_at: '2023-09-13T22:31:47Z',
        script_id: 133,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: true,
        arg_name: 'CommandLine',
        description: 'Command line arguments',
        default_value: '',
        required: false,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'destructive',
      },
      {
        id: 740,
        created_at: '2023-09-13T22:31:47Z',
        updated_at: '2023-09-13T22:31:47Z',
        script_id: 133,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: true,
        arg_name: 'HostPath',
        description: 'Absolute or relative path of script on host machine',
        default_value: '',
        required: false,
        sequence: 3,
        options: null,
        encoding: '',
        command_level: 'high-privilege',
      },
      {
        id: 741,
        created_at: '2023-09-13T22:31:47Z',
        updated_at: '2023-09-13T22:31:47Z',
        script_id: 133,
        arg_type: 'flag',
        data_type: 'int',
        requires_value: true,
        arg_name: 'Timeout',
        description: 'Timeout in seconds',
        default_value: '60',
        required: false,
        sequence: 4,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 742,
        created_at: '2023-09-13T22:31:47Z',
        updated_at: '2023-09-13T22:31:47Z',
        script_id: 133,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: true,
        arg_name: 'CloudFile',
        description: 'Script name in cloud storage',
        default_value: '',
        required: false,
        sequence: 5,
        options: null,
        encoding: '',
        command_level: 'destructive',
      },
    ],
  },
  {
    command: 'shutdown',
    description: 'Shutdown target system',
    examples: '',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 706,
        created_at: '2020-09-12T00:11:39Z',
        updated_at: '2020-09-12T00:11:39Z',
        script_id: 114,
        arg_type: 'flag',
        data_type: 'bool',
        requires_value: false,
        arg_name: 'Confirm',
        description: 'Confirms shutdown is ok',
        default_value: '',
        required: false,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'tar',
    description:
      'Compress a file or directory into a tar file (note: either option -c or -u must be specified)',
    examples:
      'tar -f=/path/to/output -c /path/to/source\r\ntar -f=/path/to/output -c -z /path/to/source',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 707,
        created_at: '2020-10-08T23:12:30Z',
        updated_at: '2020-10-08T23:12:30Z',
        script_id: 115,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: true,
        arg_name: 'f',
        description: 'Target tar file name.  Relative or absolute.',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 708,
        created_at: '2020-10-08T23:12:30Z',
        updated_at: '2020-10-08T23:12:30Z',
        script_id: 115,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Source',
        description: 'Source file or directory',
        default_value: '',
        required: false,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 709,
        created_at: '2020-10-08T23:12:30Z',
        updated_at: '2020-10-08T23:12:30Z',
        script_id: 115,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'c',
        description: 'Operation mode create',
        default_value: '',
        required: false,
        sequence: 3,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 710,
        created_at: '2020-10-08T23:12:30Z',
        updated_at: '2020-10-08T23:12:30Z',
        script_id: 115,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'u',
        description: 'Operation mode update',
        default_value: '',
        required: false,
        sequence: 4,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 711,
        created_at: '2020-10-08T23:12:30Z',
        updated_at: '2020-10-08T23:12:30Z',
        script_id: 115,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'z',
        description: 'Compression type gzip',
        default_value: '',
        required: false,
        sequence: 5,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 712,
        created_at: '2020-10-08T23:12:30Z',
        updated_at: '2020-10-08T23:12:30Z',
        script_id: 115,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'j',
        description: 'Compression type bzip2',
        default_value: '',
        required: false,
        sequence: 6,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 713,
        created_at: '2020-10-08T23:12:30Z',
        updated_at: '2020-10-08T23:12:30Z',
        script_id: 115,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'J',
        description: 'Compression type xz/lzma',
        default_value: '',
        required: false,
        sequence: 7,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 714,
        created_at: '2020-10-08T23:12:30Z',
        updated_at: '2020-10-08T23:12:30Z',
        script_id: 115,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'a',
        description: 'Compression type auto-compress',
        default_value: '',
        required: false,
        sequence: 8,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'umount',
    description: 'Unmount a filesystem',
    examples:
      'umount /Volumes/fs\r\n    Gracefully unmount the filesystem at /Volumes/fs\r\numount -f /Volumes/fs\r\n    Forcibly unmount the filesystem at /Volumes/fs',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 717,
        created_at: '2020-09-12T00:11:38Z',
        updated_at: '2020-09-12T00:11:38Z',
        script_id: 116,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: true,
        arg_name: 'Filesystem',
        description: 'Filesystem to unmount',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'destructive',
      },
      {
        id: 718,
        created_at: '2020-09-12T00:11:38Z',
        updated_at: '2020-09-12T00:11:38Z',
        script_id: 116,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'f',
        description: 'Force the operation',
        default_value: '',
        required: false,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'destructive',
      },
    ],
  },
  {
    command: 'users',
    description: 'Get details about local users',
    examples:
      'users\r\n    List details about all local users\r\nusers foo\r\n    List details about local user "foo"',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 719,
        created_at: '2023-03-15T00:28:54Z',
        updated_at: '2023-03-15T00:28:54Z',
        script_id: 117,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'UserName',
        description: 'Username to filter results',
        default_value: '',
        required: false,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
  {
    command: 'zip',
    description: 'Compress a file or directory into a zip file',
    examples: 'zip upload.zip /tmp/lastfile.txt\r\nzip -r upload.zip /tmp/lastdirectory',
    internal_only: false,
    runnable: true,
    sub_commands: [],
    args: [
      {
        id: 720,
        created_at: '2020-09-12T00:11:37Z',
        updated_at: '2020-09-12T00:11:37Z',
        script_id: 118,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Destination',
        description: 'Target zip file name.  Relative or absolute.',
        default_value: '',
        required: true,
        sequence: 1,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 721,
        created_at: '2020-09-12T00:11:37Z',
        updated_at: '2020-09-12T00:11:37Z',
        script_id: 118,
        arg_type: 'arg',
        data_type: 'string',
        requires_value: false,
        arg_name: 'Source',
        description: 'Source file or directory',
        default_value: '',
        required: true,
        sequence: 2,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
      {
        id: 722,
        created_at: '2020-09-12T00:11:37Z',
        updated_at: '2020-09-12T00:11:37Z',
        script_id: 118,
        arg_type: 'flag',
        data_type: 'string',
        requires_value: false,
        arg_name: 'r',
        description: 'Flag to travel the directory structure recursively',
        default_value: '',
        required: false,
        sequence: 3,
        options: null,
        encoding: '',
        command_level: 'non-destructive',
      },
    ],
  },
];
