openapi: 3.0.0
info:
  version: 1.0.0
  title: Risk Scoring API
  description: These APIs allow the consumer to manage Entity Risk Scores within Entity Analytics.
paths:
  /preview:
    post:
      summary: Preview the calculation of Risk Scores
      description: Calculates and returns a list of Risk Scores, sorted by identifier_type and risk score.
      requestBody:
        description: Details about the Risk Scores being requested
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RiskScoresRequest'
        required: true
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskScoresResponse'
        '400':
          description: Invalid request

components:
  schemas:
    RiskScoresRequest:
      type: object
      required:
        - data_view_id
      properties:
        after_keys:
          description: Used to retrieve a specific "page" of risk scores. If unspecified, the first "page" of scores is returned. See also the `after_keys` key in a risk scores response.
          allOf:
            - $ref: '#/components/schemas/AfterKeys'
        data_view_id:
          description: The identifier of the Kibana data view to be used when generating risk scores. If a data view is not found, the provided ID will be used as the query's index pattern instead.
          example: security-solution-default
          type: string
        debug:
          description: If set to `true`, a `debug` key is added to the response, containing both the internal request and response with elasticsearch.
          type: boolean
        filter:
          description: An elasticsearch DSL filter object. Used to filter the data being scored, which implicitly filters the risk scores returned.
          $ref: 'https://cloud.elastic.co/api/v1/api-docs/spec.json#/definitions/QueryContainer'
        page_size:
          description: Specifies how many scores will be returned in a given response. Note that this value is per `identifier_type`, i.e. a value of 10 will return 10 host scores and 10 user scores, if available. To avoid missed data, keep this value consistent while paginating through scores.
          default: 1000
          type: number
        identifier_type:
          description: Used to restrict the type of risk scores being returned. If unspecified, both `host` and `user` scores will be returned.
          allOf:
            - $ref: '#/components/schemas/IdentifierType'
        range:
          description: Defines the time period over which scores will be evaluated. If unspecified, a range of `[now, now-30d]` will be used.
          type: object
          required:
            - start
            - end
          properties:
            start:
              $ref: '#/components/schemas/KibanaDate'
            end:
              $ref: '#/components/schemas/KibanaDate'
        weights:
          description: 'A list of weights to be applied to the scoring calculation.'
          type: array
          items:
            $ref: '#/components/schemas/RiskScoreWeight'
          example:
            - type: 'risk_category'
              value: 'category_1'
              host: 0.8
              user: 0.4
            - type: 'global_identifier'
              host: 0.5
              user: 0.1
    RiskScoresResponse:
      type: object
      required:
        - scores
      properties:
        after_keys:
          description: Used to obtain the next "page" of risk scores. See also the `after_keys` key in a risk scores request.
          allOf:
            - $ref: '#/components/schemas/AfterKeys'
        debug:
          description: Object containing debug information, particularly the internal request and response from elasticsearch
          type: object
          properties:
            request:
              type: string
            response:
              type: string
        scores:
          type: array
          description: A list of risk scores
          items:
            $ref: '#/components/schemas/RiskScore'

    AfterKeys:
      type: object
      properties:
        host:
          type: object
          additionalProperties:
            type: string
        user:
          type: object
          additionalProperties:
            type: string
      example:
        host:
          'host.name': 'example.host'
        user:
          'user.name': 'example_user_name'
    KibanaDate:
      type: string
      oneOf:
        - format: date
        - format: date-time
        - format: datemath
      example: '2017-07-21T17:32:28Z'
    IdentifierType:
      type: string
      enum:
        - host
        - user
    RiskScore:
      type: object
      required:
        - '@timestamp'
        - identifier_field
        - identifier_value
        - calculated_level
        - calculated_score
        - calculated_score_norm
        - category_1_score
        - category_1_count
        - riskiest_inputs
      properties:
        '@timestamp':
          type: string
          format: 'date-time'
          example: '2017-07-21T17:32:28Z'
          description: The time at which the risk score was calculated.
        identifier_field:
          type: string
          example: 'host.name'
          description: The identifier field defining this risk score. Coupled with `identifier_value`, uniquely identifies the entity being scored.
        identifier_value:
          type: string
          example: 'example.host'
          description: The identifier value defining this risk score. Coupled with `identifier_field`, uniquely identifies the entity being scored.
        calculated_level:
          type: string
          example: 'Critical'
          description: Lexical description of the entity's risk.
        calculated_score:
          type: number
          format: double
          description: The raw numeric value of the given entity's risk score.
        calculated_score_norm:
          type: number
          format: double
          minimum: 0
          maximum: 100
          description: The normalized numeric value of the given entity's risk score. Useful for comparing with other entities.
        category_1_score:
          type: number
          format: double
          description: The contribution of Category 1 to the overall risk score (`calculated_score`). Category 1 contains Detection Engine Alerts.
        category_1_count:
          type: number
          format: integer
          description: The number of risk input documents that contributed to the Category 1 score (`category_1_score`).
        riskiest_inputs:
          type: array
          description: A list of the highest-risk documents contributing to this risk score. Useful for investigative purposes.
          items:
            $ref: '#/components/schemas/RiskScoreInput'

    RiskScoreInput:
      description: A generic representation of a document contributing to a Risk Score.
      type: object
      properties:
        id:
          type: string
          example: 91a93376a507e86cfbf282166275b89f9dbdb1f0be6c8103c6ff2909ca8e1a1c
          description: The unique identifier (`_id`) of the original source document
        index:
          type: string
          example: .internal.alerts-security.alerts-default-000001
          description: The unique index (`_index`) of the original source document
        risk_category:
          type: string
          example: category_1
          description: The risk category of the risk input document.
        risk_description:
          type: string
          example: "Generated from Detection Engine Rule: Malware Prevention Alert"
          description: A human-readable description of the risk input document.
        risk_score:
          type: number
          format: double
          minimum: 0
          maximum: 100
          description: The weighted risk score of the risk input document.
        timestamp:
          type: string
          example: '2017-07-21T17:32:28Z'
          description: The @timestamp of the risk input document.
    RiskScoreWeight:
      description: "Configuration used to tune risk scoring. Weights can be used to change the score contribution of risk inputs for hosts and users at both a global level and also for Risk Input categories (e.g. 'category_1')."
      type: object
      required:
        - type
      properties:
        type:
          type: string
        value:
          type: string
        host:
          type: number
          format: double
          minimum: 0
          maximum: 1
        user:
          type: number
          format: double
          minimum: 0
          maximum: 1
      example:
        type: 'risk_category'
        value: 'category_1'
        host: 0.8
        user: 0.4
