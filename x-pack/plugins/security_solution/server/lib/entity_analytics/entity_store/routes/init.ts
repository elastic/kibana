/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Init Entity Store types
 *   version: 1
 */

import type { IKibanaResponse, Logger } from '@kbn/core/server';
import { buildSiemResponse } from '@kbn/lists-plugin/server/routes/utils';
import {
  InitEntityStoreRequestParams,
  InitEntityStoreResponse,
} from '@kbn/security-solution-plugin/common/api/entity_analytics/entity_store/init.gen';
import { transformError } from '@kbn/securitysolution-es-utils';
import { buildRouteValidationWithZod } from '@kbn/zod-helpers';
import { EntityAnalyticsRoutesDeps } from '../../types';
import { API_VERSIONS } from '@kbn/security-solution-plugin/common/constants';

export const initEntityStoreRoute = (
  router: EntityAnalyticsRoutesDeps['router'],
  logger: EntityAnalyticsRoutesDeps['logger'],
  getStartServices: EntityAnalyticsRoutesDeps['getStartServices']
) => {
  router.versioned
    .post({
      access: 'public',
      path: '/api/entity_store/engines/{entityType}/init',
      options: {},
    })
    .addVersion(
      {
        version: API_VERSIONS.public.v1,
        validate: {
          request: {
            query: undefined,
            params: buildRouteValidationWithZod(InitEntityStoreRequestParams),
            body: undefined,
          },
        },
      },

      async (context, request, response): Promise<IKibanaResponse<InitEntityStoreResponse>> => {
        const siemResponse = buildSiemResponse(response);
        const [core] = await getStartServices();

        core.http.put();
        // HttpSetup

        try {
          const body: InitEntityStoreResponse = { started: true };

          // Create an api call like the following curl
          // curl -H 'Content-Type: application/json' \
          // -d '{"id":"ea_user_entity_store","name":"EA User Store","type":"node","indexPatterns":["log*"],"filter":"@timestamp >= now-5m","identityFields":["user.name"],"displayNameTemplate":"{{user.name}}","metadata":["user.domain","user.email","user.full_name","user.hash","user.id","user.name","user.roles"],"history":{"timestampField":"@timestamp","interval":"1m"},"version":"1.0.0"}' \
          // -X POST \
          // -H 'kbn-xsrf: true' \
          //   -H 'elastic-api-version: 1' \
          // http:///elastic:changeme@localhost:5601/internal/entities/definition

          return response.ok({ body });
        } catch (e) {
          logger.error('Error in InitEntityStore:', e);
          const error = transformError(e);
          return siemResponse.error({
            statusCode: error.statusCode,
            body: error.message,
          });
        }
      }
    );
};
