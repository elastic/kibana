/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

// eslint-disable-next-line @typescript-eslint/naming-convention
export const detection_rules = {
  detection_rule_usage: {
    query: {
      enabled: { type: 'long', _meta: { description: 'Number of query rules enabled' } },
      disabled: { type: 'long', _meta: { description: 'Number of query rules disabled' } },
      alerts: {
        type: 'long',
        _meta: { description: 'Number of alerts generated by query rules' },
      },
      cases: {
        type: 'long',
        _meta: { description: 'Number of cases attached to query detection rule alerts' },
      },
      legacy_notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications enabled' },
      },
      legacy_notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications disabled' },
      },
      notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
      notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
    },
    threshold: {
      enabled: {
        type: 'long',
        _meta: { description: 'Number of threshold rules enabled' },
      },
      disabled: {
        type: 'long',
        _meta: { description: 'Number of threshold rules disabled' },
      },
      alerts: {
        type: 'long',
        _meta: { description: 'Number of alerts generated by threshold rules' },
      },
      cases: {
        type: 'long',
        _meta: {
          description: 'Number of cases attached to threshold detection rule alerts',
        },
      },
      legacy_notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications enabled' },
      },
      legacy_notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications disabled' },
      },
      notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
      notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
    },
    eql: {
      enabled: { type: 'long', _meta: { description: 'Number of eql rules enabled' } },
      disabled: { type: 'long', _meta: { description: 'Number of eql rules disabled' } },
      alerts: {
        type: 'long',
        _meta: { description: 'Number of alerts generated by eql rules' },
      },
      cases: {
        type: 'long',
        _meta: { description: 'Number of cases attached to eql detection rule alerts' },
      },
      legacy_notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications enabled' },
      },
      legacy_notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications disabled' },
      },
      notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
      notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
    },
    machine_learning: {
      enabled: {
        type: 'long',
        _meta: { description: 'Number of machine_learning rules enabled' },
      },
      disabled: {
        type: 'long',
        _meta: { description: 'Number of machine_learning rules disabled' },
      },
      alerts: {
        type: 'long',
        _meta: { description: 'Number of alerts generated by machine_learning rules' },
      },
      cases: {
        type: 'long',
        _meta: {
          description: 'Number of cases attached to machine_learning detection rule alerts',
        },
      },
      legacy_notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications enabled' },
      },
      legacy_notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications disabled' },
      },
      notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
      notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
    },
    threat_match: {
      enabled: {
        type: 'long',
        _meta: { description: 'Number of threat_match rules enabled' },
      },
      disabled: {
        type: 'long',
        _meta: { description: 'Number of threat_match rules disabled' },
      },
      alerts: {
        type: 'long',
        _meta: { description: 'Number of alerts generated by threat_match rules' },
      },
      cases: {
        type: 'long',
        _meta: {
          description: 'Number of cases attached to threat_match detection rule alerts',
        },
      },
      legacy_notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications enabled' },
      },
      legacy_notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications disabled' },
      },
      notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
      notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
    },
    elastic_total: {
      enabled: { type: 'long', _meta: { description: 'Number of elastic rules enabled' } },
      disabled: {
        type: 'long',
        _meta: { description: 'Number of elastic rules disabled' },
      },
      alerts: {
        type: 'long',
        _meta: { description: 'Number of alerts generated by elastic rules' },
      },
      cases: {
        type: 'long',
        _meta: { description: 'Number of cases attached to elastic detection rule alerts' },
      },
      legacy_notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications enabled' },
      },
      legacy_notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications disabled' },
      },
      notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
      notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
    },
    custom_total: {
      enabled: { type: 'long', _meta: { description: 'Number of custom rules enabled' } },
      disabled: { type: 'long', _meta: { description: 'Number of custom rules disabled' } },
      alerts: {
        type: 'long',
        _meta: { description: 'Number of alerts generated by custom rules' },
      },
      cases: {
        type: 'long',
        _meta: { description: 'Number of cases attached to custom detection rule alerts' },
      },
      legacy_notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications enabled' },
      },
      legacy_notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of legacy notifications disabled' },
      },
      notifications_enabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
      notifications_disabled: {
        type: 'long',
        _meta: { description: 'Number of notifications enabled' },
      },
    },
  },
  detection_rule_detail: {
    type: 'array',
    items: {
      rule_name: {
        type: 'keyword',
        _meta: { description: 'The name of the detection rule' },
      },
      rule_id: {
        type: 'keyword',
        _meta: { description: 'The UUID id of the detection rule' },
      },
      rule_type: {
        type: 'keyword',
        _meta: { description: 'The type of detection rule. ie eql, query...' },
      },
      rule_version: { type: 'long', _meta: { description: 'The version of the rule' } },
      enabled: {
        type: 'boolean',
        _meta: { description: 'If the detection rule has been enabled by the user' },
      },
      elastic_rule: {
        type: 'boolean',
        _meta: { description: 'If the detection rule has been authored by Elastic' },
      },
      created_on: {
        type: 'keyword',
        _meta: { description: 'When the detection rule was created on the cluster' },
      },
      updated_on: {
        type: 'keyword',
        _meta: { description: 'When the detection rule was updated on the cluster' },
      },
      alert_count_daily: {
        type: 'long',
        _meta: { description: 'The number of daily alerts generated by a rule' },
      },
      cases_count_total: {
        type: 'long',
        _meta: { description: 'The number of total cases generated by a rule' },
      },
      has_legacy_notification: {
        type: 'boolean',
        _meta: { description: 'True if this rule has a legacy notification' },
      },
      has_notification: {
        type: 'boolean',
        _meta: { description: 'True if this rule has a notification' },
      },
    },
  },
};
