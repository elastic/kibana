patch:
  description: >
    Updates external connection details, such as the closure type and default connector for cases.
    You must have all privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case configuration.
    Connectors are used to interface with external systems. You must create a connector before you can it in your cases. Refer to the add connectors API.
  parameters:
    - $ref: ../components/headers/kbn_xsrf.yaml
    - $ref: ../components/parameters/configuration_id.yaml
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            closure_type:
              $ref: '../components/schemas/closure_types.yaml'
            connector:
              description: An object that contains the connector configuration.
              type: object
              properties:
                fields: 
                  description: >
                    An object that contains the connector fields.
                    TIP: The fields specified in the case configuration are not used and are not propagated to individual cases, therefore it is recommended to set it to null.
                  type: object
                  additionalProperties: true
                  example: null
                id:
                  description: The identifier for the connector. To To retrieve connector IDs, use the find connectors API.
                  type: string
                  example: "none"
                name:
                  description: The name of the connector.
                  type: string
                  example: "none"
                type:
                  $ref: '../components/schemas/connector_types.yaml'
              required:
                - fields
                - id
                - name
                - type
            version:
              description: The version of the connector. To retrieve the version value, use the get configuration API.
              type: string
              example: "WzIwMiwxXQ=="
          required: 
            - version
  responses:
    '200':
      description: Indicates a successful call.
      content:
        application/json; charset=utf-8:
          schema:
            type: string
          examples: {}
  servers:
        - url: https://localhost:5601
servers:
      - url: https://localhost:5601