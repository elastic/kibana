get:
  description: >
    Retrieves external connection details, such as the closure type and default connector for cases.
    You must have read privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case configuration.
  parameters:
    - $ref: '../components/parameters/space_id.yaml'
    - in: query
      name: owner
      description: A filter to limit the retrieved case statistics to a specific set of applications. If this parameter is omitted, the response contains all cases that the user has access to read.
      schema:
        oneOf:
          - $ref: '../components/schemas/owners.yaml'
          - type: array
            items:
              $ref: '../components/schemas/owners.yaml'
  responses:
    '200':
      description: Indicates a successful call.
      content:
        application/json; charset=utf-8:
          schema:
            type: string
          examples: {}
  servers:
        - url: https://localhost:5601

post:
  description: >
    Sets external connection details, such as the closure type and default connector for cases.
    You must have all privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case configuration.
    Connectors are used to interface with external systems. You must create a connector before you can use it in your cases. Refer to the add connectors API.
    If you set a default connector, it is automatically selected when you create cases in Kibana. If you use the create case API, however, you must still specify all of the connector details.
  parameters:
    - $ref: ../components/headers/kbn_xsrf.yaml
    - $ref: '../components/parameters/space_id.yaml'
  requestBody:
    content:
      application/json:
        schema:
          type: object
          properties:
            closure_type:
              $ref: '../components/schemas/closure_types.yaml'
            connector:
              description: An object that contains the connector configuration.
              type: object
              properties:
                fields: 
                  description: >
                    An object that contains the connector fields.
                    TIP: The fields specified in the case configuration are not used and are not propagated to individual cases, therefore it is recommended to set it to null.
                  type: object
                  additionalProperties: true
                  example: null
                id:
                  description: The identifier for the connector. If you do not want a default connector, use `none`. To retrieve connector IDs, use the find connectors API.
                  type: string
                  example: "none"
                name:
                  description:  The name of the connector. If you do not want a default connector, use `none`. To retrieve connector names, use the find connectors API.
                  type: string
                  example: "none"
                type: 
                  $ref: '../components/schemas/connector_types.yaml'
              required:
                - fields
                - id
                - name
                - type
            owner:
              $ref: '../components/schemas/owners.yaml'
            settings:
              description: An object that contains the case settings.
              type: object
              properties:
                syncAlerts:
                  description: Turns alert syncing on or off.
                  type: boolean
              required: 
                - syncAlerts
          required:
            - closure_type
            - connector
            - owner
  responses:
    '200':
      description: Indicates a successful call.
      content:
         application/json; charset=utf-8:
          schema:
            type: string
          examples: {}
  servers:
     - url: https://localhost:5601

servers:
      - url: https://localhost:5601