{
  "openapi": "3.0.1",
  "tags": [],
  "info": {
    "title": "Cases",
    "description": "OpenAPI schema for Cases endpoints",
    "version": "0.1",
    "contact": {
      "name": "Cases Team"
    },
    "license": {
      "name": "Elastic License 2.0",
      "url": "https://www.elastic.co/licensing/elastic-license"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5601",
      "description": "local"
    }
  ],
  "paths": {
    "/api/cases": {
      "post": {
        "description": "Creates a case.",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connector": {
                    "description": "An object that contains the connector configuration.",
                    "type": "object",
                    "properties": {
                      "fields": {
                        "description": "An object containing the connector fields. To create a case without a connector, specify null. If you want to omit any individual field, specify null as its value.",
                        "nullable": true,
                        "type": "object",
                        "properties": {
                          "caseId": {
                            "description": "The case identifier for Swimlane connectors.",
                            "type": "string"
                          },
                          "category": {
                            "description": "The category of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "destIp": {
                            "description": "A comma-separated list of destination IPs for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "impact": {
                            "description": "The effect an incident had on business for ServiceNow ITSM connectors.",
                            "type": "string"
                          },
                          "issueType": {
                            "description": "The type of issue for Jira connectors.",
                            "type": "string"
                          },
                          "issueTypes": {
                            "description": "The type of incident for IBM Resilient connectors.",
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          "malwareHash": {
                            "description": "A comma-separated list of malware hashes for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "malwareUrl": {
                            "description": "A comma-separated list of malware URLs for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "parent": {
                            "description": "The key of the parent issue, when the issue type is sub-task for Jira connectors.",
                            "type": "string"
                          },
                          "priority": {
                            "description": "The priority of the issue for Jira and ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "severity": {
                            "description": "The severity of the incident for ServiceNow ITSM connectors.",
                            "type": "string"
                          },
                          "severityCode": {
                            "description": "The severity code of the incident for IBM Resilient connectors.",
                            "type": "number"
                          },
                          "sourceIp": {
                            "description": "A comma-separated list of source IPs for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "subcategory": {
                            "description": "The subcategory of the incident for ServiceNow ITSM connectors.",
                            "type": "string"
                          },
                          "urgency": {
                            "description": "The extent to which the incident resolution can be delayed for ServiceNow ITSM connectors.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "fields",
                          "id",
                          "name",
                          "type"
                        ]
                      },
                      "id": {
                        "description": "The identifier for the connector. To create a case without a connector, use `none`.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the connector. To create a case without a connector, use `none`.",
                        "type": "string"
                      },
                      "type": {
                        "$ref": "#/components/schemas/connector_types"
                      }
                    }
                  },
                  "description": {
                    "description": "The description for the case.",
                    "type": "string"
                  },
                  "owner": {
                    "$ref": "#/components/schemas/owners"
                  },
                  "settings": {
                    "description": "An object that contains the case settings.",
                    "type": "object",
                    "properties": {
                      "syncAlerts": {
                        "description": "Turns alert syncing on or off.",
                        "type": "boolean"
                      }
                    }
                  },
                  "tags": {
                    "description": "The words and phrases that help categorize cases. It can be an empty array.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "title": {
                    "description": "A title for the case.",
                    "type": "string"
                  }
                },
                "required": [
                  "connector",
                  "description",
                  "owner",
                  "settings",
                  "tags",
                  "title"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "delete": {
        "description": "Deletes one or more cases.",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "name": "ids",
            "description": "The cases that you want to removed. All non-ASCII characters must be URL encoded.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "%5B%22d4e7abb0-b462-11ec-9a8d-698504725a43%22%5D"
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "patch": {
        "description": "Updates one or more cases. You must have all privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case you're updating.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connector": {
                    "description": "An object that contains the connector configuration.",
                    "type": "object",
                    "properties": {
                      "fields": {
                        "description": "An object containing the connector fields. To create a case without a connector, specify null. If you want to omit any individual field, specify null as its value.",
                        "nullable": true,
                        "type": "object",
                        "properties": {
                          "caseId": {
                            "description": "The case identifier for Swimlane connectors.",
                            "type": "string"
                          },
                          "category": {
                            "description": "The category of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "destIp": {
                            "description": "A comma-separated list of destination IPs for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "impact": {
                            "description": "The effect an incident had on business for ServiceNow ITSM connectors.",
                            "type": "string"
                          },
                          "issueType": {
                            "description": "The type of issue for Jira connectors.",
                            "type": "string"
                          },
                          "issueTypes": {
                            "description": "The type of incident for IBM Resilient connectors.",
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          "malwareHash": {
                            "description": "A comma-separated list of malware hashes for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "malwareUrl": {
                            "description": "A comma-separated list of malware URLs for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "parent": {
                            "description": "The key of the parent issue, when the issue type is sub-task for Jira connectors.",
                            "type": "string"
                          },
                          "priority": {
                            "description": "The priority of the issue for Jira and ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "severity": {
                            "description": "The severity of the incident for ServiceNow ITSM connectors.",
                            "type": "string"
                          },
                          "severityCode": {
                            "description": "The severity code of the incident for IBM Resilient connectors.",
                            "type": "number"
                          },
                          "sourceIp": {
                            "description": "A comma-separated list of source IPs for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "subcategory": {
                            "description": "The subcategory of the incident for ServiceNow ITSM connectors.",
                            "type": "string"
                          },
                          "urgency": {
                            "description": "The extent to which the incident resolution can be delayed for ServiceNow ITSM connectors.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "fields",
                          "id",
                          "name",
                          "type"
                        ]
                      },
                      "id": {
                        "description": "The identifier for the connector. To create a case without a connector, use `none`.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the connector. To create a case without a connector, use `none`.",
                        "type": "string"
                      },
                      "type": {
                        "$ref": "#/components/schemas/connector_types"
                      }
                    }
                  },
                  "description": {
                    "description": "The description for the case.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The identifier for the case.",
                    "type": "string"
                  },
                  "settings": {
                    "description": "An object that contains the case settings.",
                    "type": "object",
                    "properties": {
                      "syncAlerts": {
                        "description": "Turns alert syncing on or off.",
                        "type": "boolean"
                      }
                    }
                  },
                  "status": {
                    "$ref": "#/components/schemas/status"
                  },
                  "tags": {
                    "description": "The words and phrases that help categorize cases.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "title": {
                    "description": "A title for the case.",
                    "type": "string"
                  },
                  "version": {
                    "description": "The current version of the case.",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "version"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/api/cases/_find": {
      "get": {
        "description": "Retrieves a paginated subset of cases.",
        "parameters": [
          {
            "$ref": "#/components/parameters/default_search_operator"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/from"
          },
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/reporters"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/search_fields"
          },
          {
            "$ref": "#/components/parameters/sort_field"
          },
          {
            "$ref": "#/components/parameters/sort_order"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/tags"
          },
          {
            "$ref": "#/components/parameters/to"
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/api/cases/alerts/{alertId}": {
      "get": {
        "description": "Returns the cases associated with a specific alert. You must have read privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the cases you're seeking.\n",
        "x-technical-preview": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/alert_id"
          },
          {
            "in": "query",
            "name": "owner",
            "description": "A filter to limit the retrieved case statistics to a specific set of applications. If this parameter is omitted, the response contains all cases that the user has access to read.",
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/owners"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/owners"
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/api/cases/configure": {
      "get": {
        "description": "Retrieves external connection details, such as the closure type and default connector for cases. You must have read privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case configuration.\n",
        "parameters": [
          {
            "in": "query",
            "name": "owner",
            "description": "A filter to limit the retrieved case statistics to a specific set of applications. If this parameter is omitted, the response contains all cases that the user has access to read.",
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/owners"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/owners"
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "post": {
        "description": "Sets external connection details, such as the closure type and default connector for cases. You must have all privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case configuration. Connectors are used to interface with external systems. You must create a connector before you can use it in your cases. Refer to the add connectors API. If you set a default connector, it is automatically selected when you create cases in Kibana. If you use the create case API, however, you must still specify all of the connector details.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "closure_type": {
                    "$ref": "#/components/schemas/closure_types"
                  },
                  "connector": {
                    "description": "An object that contains the connector configuration.",
                    "type": "object",
                    "properties": {
                      "fields": {
                        "description": "An object that contains the connector fields. TIP: The fields specified in the case configuration are not used and are not propagated to individual cases, therefore it is recommended to set it to null.\n",
                        "type": "object",
                        "additionalProperties": true,
                        "example": null
                      },
                      "id": {
                        "description": "The identifier for the connector. If you do not want a default connector, use `none`. To retrieve connector IDs, use the find connectors API.",
                        "type": "string",
                        "example": "none"
                      },
                      "name": {
                        "description": "The name of the connector. If you do not want a default connector, use `none`. To retrieve connector names, use the find connectors API.",
                        "type": "string",
                        "example": "none"
                      },
                      "type": {
                        "$ref": "#/components/schemas/connector_types"
                      }
                    },
                    "required": [
                      "fields",
                      "id",
                      "name",
                      "type"
                    ]
                  },
                  "owner": {
                    "$ref": "#/components/schemas/owners"
                  },
                  "settings": {
                    "description": "An object that contains the case settings.",
                    "type": "object",
                    "properties": {
                      "syncAlerts": {
                        "description": "Turns alert syncing on or off.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "syncAlerts"
                    ]
                  }
                },
                "required": [
                  "closure_type",
                  "connector",
                  "owner"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/api/cases/configure/{configurationId}": {
      "patch": {
        "description": "Updates external connection details, such as the closure type and default connector for cases. You must have all privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case configuration. Connectors are used to interface with external systems. You must create a connector before you can it in your cases. Refer to the add connectors API.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/configuration_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "closure_type": {
                    "$ref": "#/components/schemas/closure_types"
                  },
                  "connector": {
                    "description": "An object that contains the connector configuration.",
                    "type": "object",
                    "properties": {
                      "fields": {
                        "description": "An object that contains the connector fields. TIP: The fields specified in the case configuration are not used and are not propagated to individual cases, therefore it is recommended to set it to null.\n",
                        "type": "object",
                        "additionalProperties": true,
                        "example": null
                      },
                      "id": {
                        "description": "The identifier for the connector. To To retrieve connector IDs, use the find connectors API.",
                        "type": "string",
                        "example": "none"
                      },
                      "name": {
                        "description": "The name of the connector.",
                        "type": "string",
                        "example": "none"
                      },
                      "type": {
                        "$ref": "#/components/schemas/connector_types"
                      }
                    },
                    "required": [
                      "fields",
                      "id",
                      "name",
                      "type"
                    ]
                  },
                  "version": {
                    "description": "The version of the connector. To retrieve the version value, use the get configuration API.",
                    "type": "string",
                    "example": "WzIwMiwxXQ=="
                  }
                },
                "required": [
                  "version"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/api/cases/configure/connectors/_find": {
      "get": {
        "description": "Retrieves information about connectors. In particular, only the connectors that are supported for use in cases are returned.",
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/api/cases/status": {
      "get": {
        "description": "Returns the number of cases that are open, closed, and in progress.",
        "deprecated": true,
        "parameters": [
          {
            "in": "query",
            "name": "owner",
            "description": "A filter to limit the retrieved case statistics to a specific set of applications. If this parameter is omitted, the response contains all cases that the user has access to read.",
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/owners"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/owners"
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/api/cases/tags": {
      "get": {
        "description": "Aggregates and returns a list of case tags.",
        "parameters": [
          {
            "in": "query",
            "name": "owner",
            "description": "A filter to limit the retrieved case statistics to a specific set of applications. If this parameter is omitted, the response contains tags from all cases that the user has access to read.",
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/owners"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/owners"
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/api/cases/{caseId}": {
      "get": {
        "description": "Retrieves a specified case.",
        "parameters": [
          {
            "$ref": "#/components/parameters/case_id"
          },
          {
            "in": "query",
            "name": "includeComments",
            "description": "Determines whether case comments are returned.",
            "deprecated": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/api/cases/{caseId}/alerts": {
      "get": {
        "description": "Gets all alerts attached to a case. You must have read privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the cases you're seeking.\n",
        "x-technical-preview": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/case_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/api/cases/{caseId}/comments": {
      "post": {
        "description": "Adds a comment to a case.",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/case_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alertId": {
                    "description": "The alert identifier. It is required only when `type` is `alert`. This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
                    "type": "string"
                  },
                  "comment": {
                    "description": "The new comment. It is required only when `type` is `user`.",
                    "type": "string"
                  },
                  "index": {
                    "description": "The alert index. It is required only when `type` is `alert`. This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
                    "type": "string"
                  },
                  "owner": {
                    "$ref": "#/components/schemas/owners"
                  },
                  "rule": {
                    "description": "The rule that is associated with the alert.  It is required only when type is alert. This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The rule identifier.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The rule name.",
                        "type": "string"
                      }
                    }
                  },
                  "type": {
                    "$ref": "#/components/schemas/comment_types"
                  }
                },
                "required": [
                  "owner",
                  "type"
                ]
              },
              "examples": {
                "0": {
                  "value": "{\n\n  \"type\": \"user\",\n\n  \"owner\": \"cases\",\n\n  \"comment\": \"That is nothing - Ethan Hunt answered a targeted\n    social media campaign promoting phishy pension schemes to IMF\n    operatives.\"\n\n}\n"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "patch": {
        "description": "Updates a comment in a case. You must have all privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case you're updating.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/case_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alertId": {
                    "description": "The alert identifier. It is required only when `type` is `alert`. This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
                    "type": "string"
                  },
                  "comment": {
                    "description": "The new comment. It is required only when `type` is `user`.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The identifier for the comment.",
                    "type": "string"
                  },
                  "index": {
                    "description": "The alert index. It is required only when `type` is `alert`. This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
                    "type": "string"
                  },
                  "owner": {
                    "$ref": "#/components/schemas/owners"
                  },
                  "rule": {
                    "description": "The rule that is associated with the alert.  It is required only when type is alert. This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The rule identifier.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The rule name.",
                        "type": "string"
                      }
                    }
                  },
                  "type": {
                    "$ref": "#/components/schemas/comment_types"
                  },
                  "version": {
                    "description": "The current version of the comment.",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "owner",
                  "type",
                  "version"
                ]
              },
              "examples": {
                "0": {
                  "value": "{\n        \"id\": \"c7740680-b5e9-11ec-b141-0fdb20a7f9a9\",\n         \"version\": \"WzI2NiwzXQ==\",\n         \"type\": \"user\",\n          \"comment\": \"Updated comment\",\n          \"owner\": \"cases\"\n    }\n'1':\n  value: |\n    {\n    \"type\": \"user\",\n    \"owner\": \"cases\",\n    \"comment\": \"no2.\"\n}"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "delete": {
        "description": "Deletes all comments from a case.",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/case_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "get": {
        "description": "Retrieves all the comments from a case.",
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/case_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/api/cases/{caseId}/comments/{commentId}": {
      "delete": {
        "description": "Deletes a comment from a case.",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/case_id"
          },
          {
            "$ref": "#/components/parameters/comment_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "get": {
        "description": "Retrieves a comment from a case.",
        "parameters": [
          {
            "$ref": "#/components/parameters/case_id"
          },
          {
            "$ref": "#/components/parameters/comment_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/api/cases/{caseId}/user_actions": {
      "get": {
        "description": "Returns all user activity for the specified case.",
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/case_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases": {
      "post": {
        "description": "Creates a case.",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connector": {
                    "description": "An object that contains the connector configuration.",
                    "type": "object",
                    "properties": {
                      "fields": {
                        "description": "An object containing the connector fields. To create a case without a connector, specify null. If you want to omit any individual field, specify null as its value.",
                        "nullable": true,
                        "type": "object",
                        "properties": {
                          "caseId": {
                            "description": "The case identifier for Swimlane connectors.",
                            "type": "string"
                          },
                          "category": {
                            "description": "The category of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "destIp": {
                            "description": "A comma-separated list of destination IPs for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "impact": {
                            "description": "The effect an incident had on business for ServiceNow ITSM connectors.",
                            "type": "string"
                          },
                          "issueType": {
                            "description": "The type of issue for Jira connectors.",
                            "type": "string"
                          },
                          "issueTypes": {
                            "description": "The type of incident for IBM Resilient connectors.",
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          "malwareHash": {
                            "description": "A comma-separated list of malware hashes for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "malwareUrl": {
                            "description": "A comma-separated list of malware URLs for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "parent": {
                            "description": "The key of the parent issue, when the issue type is sub-task for Jira connectors.",
                            "type": "string"
                          },
                          "priority": {
                            "description": "The priority of the issue for Jira and ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "severity": {
                            "description": "The severity of the incident for ServiceNow ITSM connectors.",
                            "type": "string"
                          },
                          "severityCode": {
                            "description": "The severity code of the incident for IBM Resilient connectors.",
                            "type": "number"
                          },
                          "sourceIp": {
                            "description": "A comma-separated list of source IPs for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "subcategory": {
                            "description": "The subcategory of the incident for ServiceNow ITSM connectors.",
                            "type": "string"
                          },
                          "urgency": {
                            "description": "The extent to which the incident resolution can be delayed for ServiceNow ITSM connectors.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "fields",
                          "id",
                          "name",
                          "type"
                        ]
                      },
                      "id": {
                        "description": "The identifier for the connector. To create a case without a connector, use `none`.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the connector. To create a case without a connector, use `none`.",
                        "type": "string"
                      },
                      "type": {
                        "$ref": "#/components/schemas/connector_types"
                      }
                    }
                  },
                  "description": {
                    "description": "The description for the case.",
                    "type": "string"
                  },
                  "owner": {
                    "$ref": "#/components/schemas/owners"
                  },
                  "settings": {
                    "description": "An object that contains the case settings.",
                    "type": "object",
                    "properties": {
                      "syncAlerts": {
                        "description": "Turns alert syncing on or off.",
                        "type": "boolean"
                      }
                    }
                  },
                  "tags": {
                    "description": "The words and phrases that help categorize cases. It can be an empty array.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "title": {
                    "description": "A title for the case.",
                    "type": "string"
                  }
                },
                "required": [
                  "connector",
                  "description",
                  "owner",
                  "settings",
                  "tags",
                  "title"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "delete": {
        "description": "Deletes one or more cases.",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "name": "ids",
            "description": "The cases that you want to removed. All non-ASCII characters must be URL encoded.",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "%5B%22d4e7abb0-b462-11ec-9a8d-698504725a43%22%5D"
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "patch": {
        "description": "Updates one or more cases. You must have all privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case you're updating.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "connector": {
                    "description": "An object that contains the connector configuration.",
                    "type": "object",
                    "properties": {
                      "fields": {
                        "description": "An object containing the connector fields. To create a case without a connector, specify null. If you want to omit any individual field, specify null as its value.",
                        "nullable": true,
                        "type": "object",
                        "properties": {
                          "caseId": {
                            "description": "The case identifier for Swimlane connectors.",
                            "type": "string"
                          },
                          "category": {
                            "description": "The category of the incident for ServiceNow ITSM and ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "destIp": {
                            "description": "A comma-separated list of destination IPs for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "impact": {
                            "description": "The effect an incident had on business for ServiceNow ITSM connectors.",
                            "type": "string"
                          },
                          "issueType": {
                            "description": "The type of issue for Jira connectors.",
                            "type": "string"
                          },
                          "issueTypes": {
                            "description": "The type of incident for IBM Resilient connectors.",
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          "malwareHash": {
                            "description": "A comma-separated list of malware hashes for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "malwareUrl": {
                            "description": "A comma-separated list of malware URLs for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "parent": {
                            "description": "The key of the parent issue, when the issue type is sub-task for Jira connectors.",
                            "type": "string"
                          },
                          "priority": {
                            "description": "The priority of the issue for Jira and ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "severity": {
                            "description": "The severity of the incident for ServiceNow ITSM connectors.",
                            "type": "string"
                          },
                          "severityCode": {
                            "description": "The severity code of the incident for IBM Resilient connectors.",
                            "type": "number"
                          },
                          "sourceIp": {
                            "description": "A comma-separated list of source IPs for ServiceNow SecOps connectors.",
                            "type": "string"
                          },
                          "subcategory": {
                            "description": "The subcategory of the incident for ServiceNow ITSM connectors.",
                            "type": "string"
                          },
                          "urgency": {
                            "description": "The extent to which the incident resolution can be delayed for ServiceNow ITSM connectors.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "fields",
                          "id",
                          "name",
                          "type"
                        ]
                      },
                      "id": {
                        "description": "The identifier for the connector. To create a case without a connector, use `none`.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The name of the connector. To create a case without a connector, use `none`.",
                        "type": "string"
                      },
                      "type": {
                        "$ref": "#/components/schemas/connector_types"
                      }
                    }
                  },
                  "description": {
                    "description": "The description for the case.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The identifier for the case.",
                    "type": "string"
                  },
                  "settings": {
                    "description": "An object that contains the case settings.",
                    "type": "object",
                    "properties": {
                      "syncAlerts": {
                        "description": "Turns alert syncing on or off.",
                        "type": "boolean"
                      }
                    }
                  },
                  "status": {
                    "$ref": "#/components/schemas/status"
                  },
                  "tags": {
                    "description": "The words and phrases that help categorize cases.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "title": {
                    "description": "A title for the case.",
                    "type": "string"
                  },
                  "version": {
                    "description": "The current version of the case.",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "version"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases/_find": {
      "get": {
        "description": "Retrieves a paginated subset of cases.",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/default_search_operator"
          },
          {
            "$ref": "#/components/parameters/fields"
          },
          {
            "$ref": "#/components/parameters/from"
          },
          {
            "$ref": "#/components/parameters/owner"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/per_page"
          },
          {
            "$ref": "#/components/parameters/reporters"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "$ref": "#/components/parameters/search_fields"
          },
          {
            "$ref": "#/components/parameters/sort_field"
          },
          {
            "$ref": "#/components/parameters/sort_order"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/tags"
          },
          {
            "$ref": "#/components/parameters/to"
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases/alerts/{alertId}": {
      "get": {
        "description": "Returns the cases associated with a specific alert. You must have read privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the cases you're seeking.\n",
        "x-technical-preview": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/alert_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "in": "query",
            "name": "owner",
            "description": "A filter to limit the retrieved case statistics to a specific set of applications. If this parameter is omitted, the response contains all cases that the user has access to read.",
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/owners"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/owners"
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases/configure": {
      "get": {
        "description": "Retrieves external connection details, such as the closure type and default connector for cases. You must have read privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case configuration.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "in": "query",
            "name": "owner",
            "description": "A filter to limit the retrieved case statistics to a specific set of applications. If this parameter is omitted, the response contains all cases that the user has access to read.",
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/owners"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/owners"
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "post": {
        "description": "Sets external connection details, such as the closure type and default connector for cases. You must have all privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case configuration. Connectors are used to interface with external systems. You must create a connector before you can use it in your cases. Refer to the add connectors API. If you set a default connector, it is automatically selected when you create cases in Kibana. If you use the create case API, however, you must still specify all of the connector details.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "closure_type": {
                    "$ref": "#/components/schemas/closure_types"
                  },
                  "connector": {
                    "description": "An object that contains the connector configuration.",
                    "type": "object",
                    "properties": {
                      "fields": {
                        "description": "An object that contains the connector fields. TIP: The fields specified in the case configuration are not used and are not propagated to individual cases, therefore it is recommended to set it to null.\n",
                        "type": "object",
                        "additionalProperties": true,
                        "example": null
                      },
                      "id": {
                        "description": "The identifier for the connector. If you do not want a default connector, use `none`. To retrieve connector IDs, use the find connectors API.",
                        "type": "string",
                        "example": "none"
                      },
                      "name": {
                        "description": "The name of the connector. If you do not want a default connector, use `none`. To retrieve connector names, use the find connectors API.",
                        "type": "string",
                        "example": "none"
                      },
                      "type": {
                        "$ref": "#/components/schemas/connector_types"
                      }
                    },
                    "required": [
                      "fields",
                      "id",
                      "name",
                      "type"
                    ]
                  },
                  "owner": {
                    "$ref": "#/components/schemas/owners"
                  },
                  "settings": {
                    "description": "An object that contains the case settings.",
                    "type": "object",
                    "properties": {
                      "syncAlerts": {
                        "description": "Turns alert syncing on or off.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "syncAlerts"
                    ]
                  }
                },
                "required": [
                  "closure_type",
                  "connector",
                  "owner"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases/configure/{configurationId}": {
      "patch": {
        "description": "Updates external connection details, such as the closure type and default connector for cases. You must have all privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case configuration. Connectors are used to interface with external systems. You must create a connector before you can it in your cases. Refer to the add connectors API.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/configuration_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "closure_type": {
                    "$ref": "#/components/schemas/closure_types"
                  },
                  "connector": {
                    "description": "An object that contains the connector configuration.",
                    "type": "object",
                    "properties": {
                      "fields": {
                        "description": "An object that contains the connector fields. TIP: The fields specified in the case configuration are not used and are not propagated to individual cases, therefore it is recommended to set it to null.\n",
                        "type": "object",
                        "additionalProperties": true,
                        "example": null
                      },
                      "id": {
                        "description": "The identifier for the connector. To To retrieve connector IDs, use the find connectors API.",
                        "type": "string",
                        "example": "none"
                      },
                      "name": {
                        "description": "The name of the connector.",
                        "type": "string",
                        "example": "none"
                      },
                      "type": {
                        "$ref": "#/components/schemas/connector_types"
                      }
                    },
                    "required": [
                      "fields",
                      "id",
                      "name",
                      "type"
                    ]
                  },
                  "version": {
                    "description": "The version of the connector. To retrieve the version value, use the get configuration API.",
                    "type": "string",
                    "example": "WzIwMiwxXQ=="
                  }
                },
                "required": [
                  "version"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases/configure/connectors/_find": {
      "get": {
        "description": "Retrieves information about connectors. In particular, only the connectors that are supported for use in cases are returned.",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases/status": {
      "get": {
        "description": "Returns the number of cases that are open, closed, and in progress.",
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "in": "query",
            "name": "owner",
            "description": "A filter to limit the retrieved case statistics to a specific set of applications. If this parameter is omitted, the response contains all cases that the user has access to read.",
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/owners"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/owners"
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases/tags": {
      "get": {
        "description": "Aggregates and returns a list of case tags.",
        "parameters": [
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "in": "query",
            "name": "owner",
            "description": "A filter to limit the retrieved case statistics to a specific set of applications. If this parameter is omitted, the response contains tags from all cases that the user has access to read.",
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/owners"
                },
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/owners"
                  }
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases/{caseId}": {
      "get": {
        "description": "Retrieves a specified case.",
        "parameters": [
          {
            "$ref": "#/components/parameters/case_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "in": "query",
            "name": "includeComments",
            "description": "Determines whether case comments are returned.",
            "deprecated": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases/{caseId}/alerts": {
      "get": {
        "description": "Gets all alerts attached to a case. You must have read privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the cases you're seeking.\n",
        "x-technical-preview": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/case_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases/{caseId}/comments": {
      "post": {
        "description": "Adds a comment to a case.",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/case_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alertId": {
                    "description": "The alert identifier. It is required only when `type` is `alert`. This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
                    "type": "string"
                  },
                  "comment": {
                    "description": "The new comment. It is required only when `type` is `user`.",
                    "type": "string"
                  },
                  "index": {
                    "description": "The alert index. It is required only when `type` is `alert`. This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
                    "type": "string"
                  },
                  "owner": {
                    "$ref": "#/components/schemas/owners"
                  },
                  "rule": {
                    "description": "The rule that is associated with the alert.  It is required only when type is alert. This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The rule identifier.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The rule name.",
                        "type": "string"
                      }
                    }
                  },
                  "type": {
                    "$ref": "#/components/schemas/comment_types"
                  }
                },
                "required": [
                  "owner",
                  "type"
                ]
              },
              "examples": {
                "0": {
                  "value": "{\n\n  \"type\": \"user\",\n\n  \"owner\": \"cases\",\n\n  \"comment\": \"That is nothing - Ethan Hunt answered a targeted\n    social media campaign promoting phishy pension schemes to IMF\n    operatives.\"\n\n}\n"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "patch": {
        "description": "Updates a comment in a case. You must have all privileges for the **Cases** feature in the **Management**, **Observability**, or **Security** section of the Kibana feature privileges, depending on the owner of the case you're updating.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/case_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alertId": {
                    "description": "The alert identifier. It is required only when `type` is `alert`. This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
                    "type": "string"
                  },
                  "comment": {
                    "description": "The new comment. It is required only when `type` is `user`.",
                    "type": "string"
                  },
                  "id": {
                    "description": "The identifier for the comment.",
                    "type": "string"
                  },
                  "index": {
                    "description": "The alert index. It is required only when `type` is `alert`. This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
                    "type": "string"
                  },
                  "owner": {
                    "$ref": "#/components/schemas/owners"
                  },
                  "rule": {
                    "description": "The rule that is associated with the alert.  It is required only when type is alert. This functionality is in technical preview and may be changed or removed in a future release. Elastic will apply best effort to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The rule identifier.",
                        "type": "string"
                      },
                      "name": {
                        "description": "The rule name.",
                        "type": "string"
                      }
                    }
                  },
                  "type": {
                    "$ref": "#/components/schemas/comment_types"
                  },
                  "version": {
                    "description": "The current version of the comment.",
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "owner",
                  "type",
                  "version"
                ]
              },
              "examples": {
                "0": {
                  "value": "{\n        \"id\": \"c7740680-b5e9-11ec-b141-0fdb20a7f9a9\",\n         \"version\": \"WzI2NiwzXQ==\",\n         \"type\": \"user\",\n          \"comment\": \"Updated comment\",\n          \"owner\": \"cases\"\n    }\n'1':\n  value: |\n    {\n    \"type\": \"user\",\n    \"owner\": \"cases\",\n    \"comment\": \"no2.\"\n}"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {}
              }
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "delete": {
        "description": "Deletes all comments from a case.",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/case_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "get": {
        "description": "Retrieves all the comments from a case.\n",
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/case_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases/{caseId}/comments/{commentId}": {
      "delete": {
        "description": "Deletes a comment from a case.",
        "parameters": [
          {
            "$ref": "#/components/parameters/kbn_xsrf"
          },
          {
            "$ref": "#/components/parameters/space_id"
          },
          {
            "$ref": "#/components/parameters/case_id"
          },
          {
            "$ref": "#/components/parameters/comment_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "get": {
        "description": "Retrieves a comment from a case.",
        "parameters": [
          {
            "$ref": "#/components/parameters/case_id"
          },
          {
            "$ref": "#/components/parameters/comment_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    },
    "/s/{spaceId}/api/cases/{caseId}/user_actions": {
      "get": {
        "description": "Returns all user activity for the specified case.",
        "deprecated": true,
        "parameters": [
          {
            "$ref": "#/components/parameters/case_id"
          },
          {
            "$ref": "#/components/parameters/space_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call.",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "string"
                }
              },
              "examples": {}
            }
          }
        },
        "servers": [
          {
            "url": "https://localhost:5601"
          }
        ]
      },
      "servers": [
        {
          "url": "https://localhost:5601"
        }
      ]
    }
  },
  "components": {
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      }
    },
    "parameters": {
      "kbn_xsrf": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "kbn-xsrf",
        "required": true
      },
      "default_search_operator": {
        "in": "query",
        "name": "defaultSearchOperator",
        "description": "The default operator to use for the simple_query_string.",
        "schema": {
          "type": "string",
          "default": "OR"
        },
        "example": "OR"
      },
      "fields": {
        "in": "query",
        "name": "fields",
        "description": "The fields in the entity to return in the response.",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "from": {
        "in": "query",
        "name": "from",
        "description": "Returns only cases that were created after a specific date. The date must be specified as a KQL data range or date match expression.",
        "schema": {
          "type": "string"
        },
        "example": "now-1d"
      },
      "owner": {
        "in": "query",
        "name": "owner",
        "description": "A filter to limit the retrieved cases to a specific set of applications. Valid values are:cases, observability, and securitySolution. If this parameter is omitted, the response contains all cases that the user has access to read.",
        "schema": {
          "oneOf": [
            {
              "$ref": "#/components/schemas/owners"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/owners"
              }
            }
          ]
        },
        "example": "cases"
      },
      "page": {
        "in": "query",
        "name": "page",
        "description": "The page number to return.",
        "schema": {
          "type": "integer",
          "default": 1
        },
        "example": 1
      },
      "per_page": {
        "in": "query",
        "name": "perPage",
        "description": "The number of rules to return per page.",
        "schema": {
          "type": "integer",
          "default": 20
        },
        "example": 20
      },
      "reporters": {
        "in": "query",
        "name": "reporters",
        "description": "Filters the returned cases by the user name of the reporter.",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "example": "elastic"
      },
      "search": {
        "in": "query",
        "name": "search",
        "description": "An Elasticsearch simple_query_string query that filters the objects in the response.",
        "schema": {
          "type": "string"
        },
        "example": "%2A"
      },
      "search_fields": {
        "in": "query",
        "name": "searchFields",
        "description": "The fields to perform the simple_query_string parsed query against.",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        }
      },
      "sort_field": {
        "in": "query",
        "name": "sortField",
        "description": "Determines which field is used to sort the results.",
        "schema": {
          "type": "string",
          "enum": [
            "createdAt",
            "updatedAt"
          ],
          "default": "createdAt"
        },
        "example": "updatedAt"
      },
      "sort_order": {
        "in": "query",
        "name": "sortOrder",
        "description": "Determines the sort order.",
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ],
          "default": "desc"
        },
        "example": "asc"
      },
      "status": {
        "in": "query",
        "name": "status",
        "description": "Filters the returned cases by state.",
        "schema": {
          "type": "string",
          "enum": [
            "closed",
            "in-progress",
            "open"
          ]
        },
        "example": "open"
      },
      "tags": {
        "in": "query",
        "name": "tags",
        "description": "Filters the returned cases by tags.",
        "schema": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          ]
        },
        "example": "phishing"
      },
      "to": {
        "in": "query",
        "name": "to",
        "description": "Returns only cases that were created before a specific date. The date must be specified as a KQL data range or date match expression.",
        "schema": {
          "type": "string"
        },
        "example": "now%2B1d"
      },
      "alert_id": {
        "in": "path",
        "name": "alertId",
        "description": "An identifier for the alert.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "09f0c261e39e36351d75995b78bb83673774d1bc2cca9df2d15f0e5c0a99a540"
        }
      },
      "configuration_id": {
        "in": "path",
        "name": "configurationId",
        "description": "An identifier for the configuration.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "3297a0f0-b5ec-11ec-b141-0fdb20a7f9a9"
        }
      },
      "case_id": {
        "in": "path",
        "name": "caseId",
        "description": "An identifier for the case.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "a18b38a0-71b0-11ea-a0b2-c51ea50a58e2"
        }
      },
      "comment_id": {
        "in": "path",
        "name": "commentId",
        "description": "An identifier for the comment.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "71ec1870-725b-11ea-a0b2-c51ea50a58e2"
        }
      },
      "space_id": {
        "in": "path",
        "name": "spaceId",
        "description": "An identifier for the space.",
        "required": true,
        "schema": {
          "type": "string",
          "example": "default"
        }
      }
    },
    "schemas": {
      "connector_types": {
        "type": "string",
        "description": "The type of connector.",
        "enum": [
          ".jira",
          ".none",
          ".resilient",
          ".servicenow",
          ".servicenow-sir",
          ".swimlane"
        ]
      },
      "owners": {
        "type": "string",
        "description": "Owner apps",
        "enum": [
          "cases",
          "observability",
          "securitySolution"
        ]
      },
      "status": {
        "type": "string",
        "description": "The status of the case.",
        "enum": [
          "closed",
          "in-progress",
          "open"
        ]
      },
      "closure_types": {
        "type": "string",
        "description": "Indicates whether a case is automatically closed when it is pushed to external systems (`close-by-pushing`) or not automatically closed (`close-by-user`).",
        "enum": [
          "close-by-pushing",
          "close-by-user"
        ]
      },
      "comment_types": {
        "type": "string",
        "description": "The type of comment.",
        "enum": [
          "alert",
          "user"
        ]
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ]
}