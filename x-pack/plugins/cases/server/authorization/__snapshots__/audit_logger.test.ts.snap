// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`audit_logger log function event structure creates the correct audit event for operation: "createCase" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_create",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "creation",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases",
    },
  },
  "message": "Failed attempt to create cases [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "createCase" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_create",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "creation",
    ],
  },
  "message": "Failed attempt to create a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "createCase" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_create",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "creation",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases",
    },
  },
  "message": "User is creating cases [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "createCase" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_create",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "creation",
    ],
  },
  "message": "User is creating a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "createComment" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_create",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "creation",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases-comments",
    },
  },
  "message": "Failed attempt to create cases-comments [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "createComment" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_create",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "creation",
    ],
  },
  "message": "Failed attempt to create a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "createComment" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_create",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "creation",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases-comments",
    },
  },
  "message": "User is creating cases-comments [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "createComment" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_create",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "creation",
    ],
  },
  "message": "User is creating a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "createConfiguration" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_configuration_create",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "creation",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases-configure",
    },
  },
  "message": "Failed attempt to create cases-configure [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "createConfiguration" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_configuration_create",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "creation",
    ],
  },
  "message": "Failed attempt to create a case configuration as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "createConfiguration" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_configuration_create",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "creation",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases-configure",
    },
  },
  "message": "User is creating cases-configure [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "createConfiguration" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_configuration_create",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "creation",
    ],
  },
  "message": "User is creating a case configuration as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "deleteAllComments" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_delete_all",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "deletion",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases-comments",
    },
  },
  "message": "Failed attempt to delete cases-comments [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "deleteAllComments" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_delete_all",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "deletion",
    ],
  },
  "message": "Failed attempt to delete a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "deleteAllComments" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_delete_all",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "deletion",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases-comments",
    },
  },
  "message": "User is deleting cases-comments [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "deleteAllComments" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_delete_all",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "deletion",
    ],
  },
  "message": "User is deleting a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "deleteCase" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_delete",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "deletion",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases",
    },
  },
  "message": "Failed attempt to delete cases [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "deleteCase" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_delete",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "deletion",
    ],
  },
  "message": "Failed attempt to delete a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "deleteCase" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_delete",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "deletion",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases",
    },
  },
  "message": "User is deleting cases [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "deleteCase" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_delete",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "deletion",
    ],
  },
  "message": "User is deleting a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "deleteComment" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_delete",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "deletion",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases-comments",
    },
  },
  "message": "Failed attempt to delete cases-comments [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "deleteComment" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_delete",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "deletion",
    ],
  },
  "message": "Failed attempt to delete a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "deleteComment" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_delete",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "deletion",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases-comments",
    },
  },
  "message": "User is deleting cases-comments [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "deleteComment" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_delete",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "deletion",
    ],
  },
  "message": "User is deleting a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "findCases" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_find",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases",
    },
  },
  "message": "Failed attempt to access cases [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "findCases" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_find",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "message": "Failed attempt to access a cases as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "findCases" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_find",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases",
    },
  },
  "message": "User has accessed cases [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "findCases" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_find",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "message": "User has accessed a cases as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "findComments" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_find",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases-comments",
    },
  },
  "message": "Failed attempt to access cases-comments [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "findComments" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_find",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "message": "Failed attempt to access a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "findComments" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_find",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases-comments",
    },
  },
  "message": "User has accessed cases-comments [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "findComments" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_find",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "message": "User has accessed a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "findConfigurations" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_configuration_find",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases-configure",
    },
  },
  "message": "Failed attempt to access cases-configure [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "findConfigurations" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_configuration_find",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "message": "Failed attempt to access a case configurations as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "findConfigurations" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_configuration_find",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases-configure",
    },
  },
  "message": "User has accessed cases-configure [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "findConfigurations" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_configuration_find",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "message": "User has accessed a case configurations as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getAllComments" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_get_all",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases-comments",
    },
  },
  "message": "Failed attempt to access cases-comments [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getAllComments" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_get_all",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "message": "Failed attempt to access a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getAllComments" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_get_all",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases-comments",
    },
  },
  "message": "User has accessed cases-comments [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getAllComments" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_get_all",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "message": "User has accessed a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getCase" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_get",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases",
    },
  },
  "message": "Failed attempt to access cases [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getCase" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_get",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "message": "Failed attempt to access a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getCase" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_get",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases",
    },
  },
  "message": "User has accessed cases [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getCase" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_get",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "message": "User has accessed a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getCaseIDsByAlertID" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_ids_by_alert_id_get",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases-comments",
    },
  },
  "message": "Failed attempt to access cases-comments [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getCaseIDsByAlertID" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_ids_by_alert_id_get",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "message": "Failed attempt to access a cases as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getCaseIDsByAlertID" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_ids_by_alert_id_get",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases-comments",
    },
  },
  "message": "User has accessed cases-comments [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getCaseIDsByAlertID" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_ids_by_alert_id_get",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "message": "User has accessed a cases as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getCaseStatuses" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_find_statuses",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases",
    },
  },
  "message": "Failed attempt to access cases [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getCaseStatuses" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_find_statuses",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "message": "Failed attempt to access a cases as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getCaseStatuses" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_find_statuses",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases",
    },
  },
  "message": "User has accessed cases [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getCaseStatuses" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_find_statuses",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "message": "User has accessed a cases as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getComment" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_get",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases-comments",
    },
  },
  "message": "Failed attempt to access cases-comments [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getComment" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_get",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "message": "Failed attempt to access a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getComment" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_get",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases-comments",
    },
  },
  "message": "User has accessed cases-comments [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getComment" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_get",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "message": "User has accessed a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getReporters" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_reporters_get",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases",
    },
  },
  "message": "Failed attempt to access cases [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getReporters" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_reporters_get",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "message": "Failed attempt to access a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getReporters" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_reporters_get",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases",
    },
  },
  "message": "User has accessed cases [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getReporters" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_reporters_get",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "message": "User has accessed a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getTags" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_tags_get",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases",
    },
  },
  "message": "Failed attempt to access cases [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getTags" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_tags_get",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "message": "Failed attempt to access a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getTags" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_tags_get",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases",
    },
  },
  "message": "User has accessed cases [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getTags" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_tags_get",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "message": "User has accessed a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getUserActions" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_user_actions_get",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases-user-actions",
    },
  },
  "message": "Failed attempt to access cases-user-actions [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getUserActions" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_user_actions_get",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "access",
    ],
  },
  "message": "Failed attempt to access a user actions as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getUserActions" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_user_actions_get",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases-user-actions",
    },
  },
  "message": "User has accessed cases-user-actions [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "getUserActions" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_user_actions_get",
    "category": Array [
      "database",
    ],
    "outcome": "success",
    "type": Array [
      "access",
    ],
  },
  "message": "User has accessed a user actions as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "pushCase" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_push",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "change",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases",
    },
  },
  "message": "Failed attempt to update cases [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "pushCase" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_push",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "change",
    ],
  },
  "message": "Failed attempt to update a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "pushCase" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_push",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "change",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases",
    },
  },
  "message": "User is updating cases [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "pushCase" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_push",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "change",
    ],
  },
  "message": "User is updating a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "updateCase" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_update",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "change",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases",
    },
  },
  "message": "Failed attempt to update cases [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "updateCase" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_update",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "change",
    ],
  },
  "message": "Failed attempt to update a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "updateCase" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_update",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "change",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases",
    },
  },
  "message": "User is updating cases [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "updateCase" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_update",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "change",
    ],
  },
  "message": "User is updating a case as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "updateComment" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_update",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "change",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases-comments",
    },
  },
  "message": "Failed attempt to update cases-comments [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "updateComment" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_comment_update",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "change",
    ],
  },
  "message": "Failed attempt to update a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "updateComment" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_update",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "change",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases-comments",
    },
  },
  "message": "User is updating cases-comments [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "updateComment" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_comment_update",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "change",
    ],
  },
  "message": "User is updating a comments as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "updateConfiguration" with an error and entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_configuration_update",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "change",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "1",
      "type": "cases-configure",
    },
  },
  "message": "Failed attempt to update cases-configure [id=1] as owner \\"awesome\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "updateConfiguration" with an error but no entity 1`] = `
Object {
  "error": Object {
    "code": "Error",
    "message": "an error",
  },
  "event": Object {
    "action": "case_configuration_update",
    "category": Array [
      "database",
    ],
    "outcome": "failure",
    "type": Array [
      "change",
    ],
  },
  "message": "Failed attempt to update a case configuration as any owners",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "updateConfiguration" without an error but with an entity 1`] = `
Object {
  "event": Object {
    "action": "case_configuration_update",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "change",
    ],
  },
  "kibana": Object {
    "saved_object": Object {
      "id": "5",
      "type": "cases-configure",
    },
  },
  "message": "User is updating cases-configure [id=5] as owner \\"super\\"",
}
`;

exports[`audit_logger log function event structure creates the correct audit event for operation: "updateConfiguration" without an error or entity 1`] = `
Object {
  "event": Object {
    "action": "case_configuration_update",
    "category": Array [
      "database",
    ],
    "outcome": "unknown",
    "type": Array [
      "change",
    ],
  },
  "message": "User is updating a case configuration as any owners",
}
`;
