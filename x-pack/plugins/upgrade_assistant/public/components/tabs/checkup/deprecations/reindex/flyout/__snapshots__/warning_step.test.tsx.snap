// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WarningsFlyoutStep renders 1`] = `
<Fragment>
  <EuiFlyoutBody>
    <EuiCallOut
      color="danger"
      iconType="alert"
      size="m"
      title="This index requires destructive changes that can't be undone"
    >
      <p>
        Back up your index, then proceed with the reindex by accepting each breaking change.
      </p>
    </EuiCallOut>
    <EuiSpacer
      size="l"
    />
    <EuiText
      grow={true}
      size="m"
    >
      <EuiCheckbox
        checked={false}
        compressed={false}
        disabled={false}
        id="reindexWarning-0"
        indeterminate={false}
        label={
          <strong>
            <EuiCode>
              _all
            </EuiCode>
             field will be removed
          </strong>
        }
        onChange={[Function]}
      />
      <p
        className="upgWarningsStep__warningDescription"
      >
        The 
        <EuiCode>
          _all
        </EuiCode>
         meta field is no longer supported in 7.0. Reindexing removes the 
        <EuiCode>
          _all
        </EuiCode>
         field in the new index. Ensure that no application code or scripts reply on this field.
        <br />
        <EuiLink
          color="primary"
          href="https://www.elastic.co/guide/en/elasticsearch/reference/6.0/breaking_60_mappings_changes.html#_the_literal__all_literal_meta_field_is_now_disabled_by_default"
          target="_blank"
          type="button"
        >
          Documentation
        </EuiLink>
      </p>
    </EuiText>
    <EuiSpacer
      size="l"
    />
    <EuiText
      grow={true}
      size="m"
    >
      <EuiCheckbox
        checked={false}
        compressed={false}
        disabled={false}
        id="reindexWarning-1"
        indeterminate={false}
        label={
          <strong>
            Boolean data in 
            <EuiCode>
              _source
            </EuiCode>
             might change
          </strong>
        }
        onChange={[Function]}
      />
      <p
        className="upgWarningsStep__warningDescription"
      >
        If a documents contain a boolean field that is neither 
        <EuiCode>
          true
        </EuiCode>
         or
         
        <EuiCode>
          false
        </EuiCode>
         (for example, 
        <EuiCode>
          "yes"
        </EuiCode>
        ,
         
        <EuiCode>
          "on"
        </EuiCode>
        , 
        <EuiCode>
          1
        </EuiCode>
        ), reindexing converts these fields to 
        <EuiCode>
          true
        </EuiCode>
         or 
        <EuiCode>
          false
        </EuiCode>
        . Ensure that no application code or scripts rely on boolean fields in the deprecated format.
        <br />
        <EuiLink
          color="primary"
          href="https://www.elastic.co/guide/en/elasticsearch/reference/6.0/breaking_60_mappings_changes.html#_coercion_of_boolean_fields"
          target="_blank"
          type="button"
        >
          Documentation
        </EuiLink>
      </p>
    </EuiText>
    <EuiSpacer
      size="l"
    />
  </EuiFlyoutBody>
  <EuiFlyoutFooter>
    <EuiFlexGroup
      alignItems="stretch"
      component="div"
      direction="row"
      gutterSize="l"
      justifyContent="spaceBetween"
      responsive={true}
      wrap={false}
    >
      <EuiFlexItem
        component="div"
        grow={false}
      >
        <EuiButtonEmpty
          color="primary"
          flush="left"
          iconSide="left"
          iconType="cross"
          onClick={[MockFunction]}
          type="button"
        >
          Cancel
        </EuiButtonEmpty>
      </EuiFlexItem>
      <EuiFlexItem
        component="div"
        grow={false}
      >
        <EuiButton
          color="danger"
          disabled={true}
          fill={true}
          iconSide="left"
          onClick={[MockFunction]}
          type="button"
        >
          Continue with reindex
        </EuiButton>
      </EuiFlexItem>
    </EuiFlexGroup>
  </EuiFlyoutFooter>
</Fragment>
`;
