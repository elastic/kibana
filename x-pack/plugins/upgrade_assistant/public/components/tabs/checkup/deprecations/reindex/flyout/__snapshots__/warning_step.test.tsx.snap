// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`WarningsFlyoutStep renders 1`] = `
<React.Fragment>
  <EuiFlyoutBody>
    <EuiCallOut
      color="danger"
      iconType="alert"
      size="m"
      title="This index required destructive changes"
    >
      <p>
        <strong>
          This cannot be undone.
        </strong>
         It is highly advised you backup this index before proceeding.
      </p>
      <p>
        To proceed with the reindex, you must accept each breaking change by checking the box next to it.
      </p>
    </EuiCallOut>
    <EuiSpacer
      size="l"
    />
    <EuiText
      grow={true}
      size="m"
    >
      <EuiCheckbox
        checked={false}
        compressed={false}
        disabled={false}
        id="reindexWarning-0"
        indeterminate={false}
        label={
          <strong>
            <EuiCode>
              _all
            </EuiCode>
             field will be removed
          </strong>
        }
        onChange={[Function]}
      />
      <p
        className="upgWarningsStep__warningDescription"
      >
        The 
        <EuiCode>
          _all
        </EuiCode>
         meta field is no longer supported in 7.0 and reindexing will remove this field in the new index. Ensure that you have no application code or scripts relying on this field to exist before reindexing.
        <br />
        <EuiLink
          color="primary"
          href="https://www.elastic.co/guide/en/elasticsearch/reference/6.0/breaking_60_mappings_changes.html#_the_literal__all_literal_meta_field_is_now_disabled_by_default"
          target="_blank"
          type="button"
        >
          Documentation
        </EuiLink>
      </p>
    </EuiText>
    <EuiSpacer
      size="l"
    />
    <EuiText
      grow={true}
      size="m"
    >
      <EuiCheckbox
        checked={false}
        compressed={false}
        disabled={false}
        id="reindexWarning-1"
        indeterminate={false}
        label={
          <strong>
            Boolean data in 
            <EuiCode>
              _source
            </EuiCode>
             may change
          </strong>
        }
        onChange={[Function]}
      />
      <p
        className="upgWarningsStep__warningDescription"
      >
        If any documents contain any boolean fields that are not 
        <EuiCode>
          true
        </EuiCode>
         or
         
        <EuiCode>
          false
        </EuiCode>
         (eg. 
        <EuiCode>
          "yes"
        </EuiCode>
        , 
        <EuiCode>
          "on"
        </EuiCode>
        ,
         
        <EuiCode>
          1
        </EuiCode>
        ), reindexing will convert these fields in the
         
        <strong>
          source document
        </strong>
         to be 
        <EuiCode>
          true
        </EuiCode>
         or
         
        <EuiCode>
          false
        </EuiCode>
        . Ensure that you have no application code or scripts relying on boolean fields in the deprecated format before reindexing.
        <br />
        <EuiLink
          color="primary"
          href="https://www.elastic.co/guide/en/elasticsearch/reference/6.0/breaking_60_mappings_changes.html#_coercion_of_boolean_fields"
          target="_blank"
          type="button"
        >
          Documentation
        </EuiLink>
      </p>
    </EuiText>
  </EuiFlyoutBody>
  <EuiFlyoutFooter>
    <EuiFlexGroup
      alignItems="stretch"
      component="div"
      direction="row"
      gutterSize="l"
      justifyContent="spaceBetween"
      responsive={true}
      wrap={false}
    >
      <EuiFlexItem
        component="div"
        grow={false}
      >
        <EuiButtonEmpty
          color="primary"
          flush="left"
          iconSide="left"
          iconType="cross"
          onClick={[MockFunction]}
          type="button"
        >
          Cancel
        </EuiButtonEmpty>
      </EuiFlexItem>
      <EuiFlexItem
        component="div"
        grow={false}
      >
        <EuiButton
          color="danger"
          disabled={true}
          fill={true}
          iconSide="left"
          onClick={[MockFunction]}
          type="button"
        >
          Continue with reindex
        </EuiButton>
      </EuiFlexItem>
    </EuiFlexGroup>
  </EuiFlyoutFooter>
</React.Fragment>
`;
