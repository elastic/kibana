/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */
import React, { useMemo } from 'react';
import { EuiFlexGroup, EuiFlexItem, EuiHealth } from '@elastic/eui';
import { i18n } from '@kbn/i18n';
import { useNavigateVulnerabilities } from '@kbn/cloud-security-posture/src/hooks/use_navigate_findings';
import { VULNERABILITIES_SEVERITY } from '@kbn/cloud-security-posture-common';
import { getSeverityStatusColor } from '@kbn/cloud-security-posture';
import { VulnCounterCard, type VulnCounterCardProps } from '../../components/vuln_counter_card';
import { useVulnerabilityDashboardApi } from '../../common/api/use_vulnerability_dashboard_api';
import { CompactFormattedNumber } from '../../components/compact_formatted_number';

export const VulnerabilityStatistics = () => {
  const navToVulnerabilities = useNavigateVulnerabilities();
  const getVulnerabilityDashboard = useVulnerabilityDashboardApi();

  const stats: VulnCounterCardProps[] = useMemo(
    () => [
      {
        id: 'critical-count-stat',
        title: (
          <CompactFormattedNumber
            number={getVulnerabilityDashboard.data?.cnvmStatistics.criticalCount}
          />
        ),
        description: (
          <EuiHealth
            color={getSeverityStatusColor(VULNERABILITIES_SEVERITY.CRITICAL)}
            textSize={'xs'}
          >
            {i18n.translate('xpack.csp.cnvmDashboard.statistics.criticalTitle', {
              defaultMessage: 'Critical',
            })}
          </EuiHealth>
        ),
        onClick: () => {
          navToVulnerabilities({ 'vulnerability.severity': VULNERABILITIES_SEVERITY.CRITICAL });
        },
      },
      {
        id: 'high-count-stat',
        title: (
          <CompactFormattedNumber
            number={getVulnerabilityDashboard.data?.cnvmStatistics.highCount}
          />
        ),
        description: (
          <EuiHealth color={getSeverityStatusColor(VULNERABILITIES_SEVERITY.HIGH)} textSize={'xs'}>
            {i18n.translate('xpack.csp.cnvmDashboard.statistics.highTitle', {
              defaultMessage: 'High',
            })}
          </EuiHealth>
        ),
        onClick: () => {
          navToVulnerabilities({ 'vulnerability.severity': VULNERABILITIES_SEVERITY.HIGH });
        },
      },
      {
        id: 'medium-count-stat',
        title: (
          <CompactFormattedNumber
            number={getVulnerabilityDashboard.data?.cnvmStatistics.mediumCount}
          />
        ),
        description: (
          <EuiHealth
            color={getSeverityStatusColor(VULNERABILITIES_SEVERITY.MEDIUM)}
            textSize={'xs'}
          >
            {i18n.translate('xpack.csp.cnvmDashboard.statistics.mediumTitle', {
              defaultMessage: 'Medium',
            })}
          </EuiHealth>
        ),
        onClick: () => {
          navToVulnerabilities({ 'vulnerability.severity': VULNERABILITIES_SEVERITY.MEDIUM });
        },
      },
      {
        id: 'cloud-regions-stat',
        title: (
          <CompactFormattedNumber
            number={getVulnerabilityDashboard.data?.cnvmStatistics.cloudAccounts}
          />
        ),
        description: i18n.translate('xpack.csp.cnvmDashboard.statistics.cloudRegionTitle', {
          defaultMessage: 'Cloud Accounts',
        }),
      },
      {
        id: 'assets-scanned-stat',
        title: (
          <CompactFormattedNumber
            number={getVulnerabilityDashboard.data?.cnvmStatistics.resourcesScanned}
          />
        ),
        description: i18n.translate('xpack.csp.cnvmDashboard.statistics.resourcesScannedTitle', {
          defaultMessage: 'Resources Scanned',
        }),
      },
    ],
    [getVulnerabilityDashboard.data, navToVulnerabilities]
  );

  return (
    <EuiFlexGroup>
      {stats.map((stat) => (
        <EuiFlexItem key={stat.id}>
          <VulnCounterCard {...stat} />
        </EuiFlexItem>
      ))}
    </EuiFlexGroup>
  );
};
