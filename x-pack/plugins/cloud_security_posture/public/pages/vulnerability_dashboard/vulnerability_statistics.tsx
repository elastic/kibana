/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */
import React, { useMemo } from 'react';
import { EuiFlexGroup, EuiFlexItem, EuiHealth } from '@elastic/eui';
import { i18n } from '@kbn/i18n';
import { SEVERITY } from '../../../common/constants';
import { useCnvmStatisticsApi } from '../../common/api/use_vulnerabilities_stats_api';
import { useNavigateVulnerabilities } from '../../common/hooks/use_navigate_findings';
import { CompactFormattedNumber } from '../../components/compact_formatted_number';
import { getSeverityStatusColor } from '../../common/utils/get_vulnerability_colors';
import { CspCounterCard } from '../../components/csp_counter_card';

export const VulnerabilityStatistics = () => {
  const navToVulnerabilities = useNavigateVulnerabilities();
  const getCnvmStats = useCnvmStatisticsApi();

  const stats = useMemo(
    () => [
      {
        id: 'cloud-regions-stat',
        title: <CompactFormattedNumber number={getCnvmStats.data?.cnvmStatistics.cloudRegions} />,
        description: i18n.translate('xpack.csp.cnvmDashboard.statistics.cloudRegionTitle', {
          defaultMessage: 'Cloud Regions',
        }),
      },
      {
        id: 'assets-scanned-stat',
        title: (
          <CompactFormattedNumber number={getCnvmStats.data?.cnvmStatistics.resourcesScanned} />
        ),
        description: i18n.translate('xpack.csp.cnvmDashboard.statistics.resourcesScannedTitle', {
          defaultMessage: 'Resources Scanned',
        }),
      },
      {
        id: 'critical-count-stat',
        title: <CompactFormattedNumber number={getCnvmStats.data?.cnvmStatistics.criticalCount} />,
        description: (
          <EuiHealth color={getSeverityStatusColor(SEVERITY.CRITICAL)}>
            {i18n.translate('xpack.csp.cnvmDashboard.statistics.criticalTitle', {
              defaultMessage: 'Critical',
            })}
          </EuiHealth>
        ),
        onClick: () => {
          navToVulnerabilities({ 'vulnerability.severity': SEVERITY.CRITICAL });
        },
      },
      {
        id: 'high-count-stat',
        title: <CompactFormattedNumber number={getCnvmStats.data?.cnvmStatistics.highCount} />,
        description: (
          <EuiHealth color={getSeverityStatusColor(SEVERITY.HIGH)}>
            {i18n.translate('xpack.csp.cnvmDashboard.statistics.highTitle', {
              defaultMessage: 'High',
            })}
          </EuiHealth>
        ),
        onClick: () => {
          navToVulnerabilities({ 'vulnerability.severity': SEVERITY.HIGH });
        },
      },
      {
        id: 'medium-count-stat',
        title: <CompactFormattedNumber number={getCnvmStats.data?.cnvmStatistics.mediumCount} />,
        description: (
          <EuiHealth color={getSeverityStatusColor(SEVERITY.MEDIUM)}>
            {i18n.translate('xpack.csp.cnvmDashboard.statistics.mediumTitle', {
              defaultMessage: 'Medium',
            })}
          </EuiHealth>
        ),
        onClick: () => {
          navToVulnerabilities({ 'vulnerability.severity': SEVERITY.MEDIUM });
        },
      },
    ],
    [getCnvmStats.data, navToVulnerabilities]
  );

  return (
    <EuiFlexGroup>
      {stats.map((stat) => (
        <EuiFlexItem>
          <CspCounterCard {...stat} />
        </EuiFlexItem>
      ))}
    </EuiFlexGroup>
  );
};
