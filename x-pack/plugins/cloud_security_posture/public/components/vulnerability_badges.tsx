/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { EuiBadge, EuiIcon, EuiTextColor, useEuiFontSize } from '@elastic/eui';
import React from 'react';
import { css } from '@emotion/react';
import { float } from '@elastic/elasticsearch/lib/api/typesWithBodyKey';
import { getCvsScoreColor } from '../common/utils/get_cvsscore_color';

interface CVSScoreBadgeProps {
  score: float;
  version?: string;
}

interface SeverityStatusBadgeProps {
  status: string;
  score: float;
}

interface ExploitsStatusBadgeProps {
  totalExploits: number;
}

export const CVSScoreBadge = ({ score, version }: CVSScoreBadgeProps) => {
  const color = getCvsScoreColor(score);
  const versionDisplay = version ? `v${version.split('.')[0]}` : null;
  return (
    <EuiBadge
      color={color}
      css={css`
        border: none;
        .euiBadge__text {
          display: flex;
        }
      `}
    >
      {versionDisplay && (
        <>
          <EuiTextColor color="ghost">{score}</EuiTextColor>
          <hr
            css={css`
              width: 1px;
              border: 0 none;
              background-color: rgba(255, 255, 255, 0.2);
              margin: 0px 6px;
            `}
          />
          <EuiTextColor color="ghost">{versionDisplay}</EuiTextColor>
        </>
      )}
    </EuiBadge>
  );
};

export const SeverityStatusBadge = ({ score, status }: SeverityStatusBadgeProps) => {
  const color = getCvsScoreColor(score);

  return (
    <>
      <EuiIcon type="dot" color={color} />
      {status}
    </>
  );
};

export const ExploitsStatusBadge = ({ totalExploits }: ExploitsStatusBadgeProps) => {
  const xxsFontSize = useEuiFontSize('xxs').fontSize;

  return (
    <EuiBadge
      color={'hollow'}
      iconType="bug"
      css={css`
        .euiBadge__text {
          font-weight: 400;
          font-size: ${xxsFontSize};
        }
      `}
    >
      {totalExploits}
    </EuiBadge>
  );
};
