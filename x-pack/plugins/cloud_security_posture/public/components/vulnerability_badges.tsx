/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { EuiBadge, EuiText, EuiTextColor, useEuiFontSize, useEuiTheme } from '@elastic/eui';
import React from 'react';
import { css } from '@emotion/react';
import { float } from '@elastic/elasticsearch/lib/api/typesWithBodyKey';
import { i18n } from '@kbn/i18n';
import { CVSSVersion, SeverityStatus } from '../../common/types';

interface CVSScoreBadgeProps {
  score: float;
  version: CVSSVersion;
  color: string;
}

interface SeverityStatusBadgeProps {
  status: SeverityStatus;
  color: string | undefined;
}

interface ExploitsStatusBadgeProps {
  totalExploits: number;
}

export const CVSScoreBadge = ({ score, color, version }: CVSScoreBadgeProps) => {
  const versionDisplay = `v${version.split('.')[0]}`;
  return (
    <EuiBadge
      color={color}
      css={css`
        border: none;
        .euiBadge__text {
          display: flex;
        }
      `}
    >
      <EuiTextColor color="ghost">{score}</EuiTextColor>
      <hr
        css={css`
          width: 1px;
          border: 0 none;
          background-color: rgba(255, 255, 255, 0.2);
          margin: 0px 6px;
        `}
      />
      <EuiTextColor color="ghost">{versionDisplay}</EuiTextColor>
    </EuiBadge>
  );
};

export const SeverityStatusBadge = ({ color, status }: SeverityStatusBadgeProps) => {
  const xxsFontSize = useEuiFontSize('xxs').fontSize;
  const { euiTheme } = useEuiTheme();

  return (
    <EuiBadge
      color={'hollow'}
      css={css`
        border: none;
        .euiBadge__text {
          display: flex;
          font-weight: 400;
          font-size: ${xxsFontSize};
          align-items: center;
        }
      `}
    >
      {color && (
        <span
          css={css`
            border-radius: 50%;
            background-color: ${color};
            width: ${euiTheme.size.s};
            height: ${euiTheme.size.s};
            margin-right: 6px;
          `}
        />
      )}
      <EuiText>
        {i18n.translate('xpack.csp.vulnerabilityBadges.severityStatusBadge', {
          defaultMessage: '{status}',
          values: { status },
        })}
      </EuiText>
    </EuiBadge>
  );
};

export const ExploitsStatusBadge = ({ totalExploits }: ExploitsStatusBadgeProps) => {
  const xxsFontSize = useEuiFontSize('xxs').fontSize;

  return (
    <EuiBadge
      color={'hollow'}
      iconType="bug"
      css={css`
        .euiBadge__text {
          font-weight: 400;
          font-size: ${xxsFontSize};
        }
      `}
    >
      {totalExploits}
    </EuiBadge>
  );
};
