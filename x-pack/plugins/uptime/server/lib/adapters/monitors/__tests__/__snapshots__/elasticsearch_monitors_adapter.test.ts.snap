// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ElasticsearchMonitorsAdapter getMonitorChartsData will provide expected filters when a location is specified 1`] = `
Array [
  Object {},
  Object {
    "body": Object {
      "aggs": Object {
        "timeseries": Object {
          "aggs": Object {
            "duration": Object {
              "stats": Object {
                "field": "monitor.duration.us",
              },
            },
            "status": Object {
              "terms": Object {
                "field": "monitor.status",
                "shard_size": 2,
                "size": 2,
              },
            },
          },
          "date_histogram": Object {
            "field": "@timestamp",
            "interval": "36000ms",
          },
        },
      },
      "query": Object {
        "bool": Object {
          "filter": Array [
            Object {
              "range": Object {
                "@timestamp": Object {
                  "gte": "now-15m",
                  "lte": "now",
                },
              },
            },
            Object {
              "term": Object {
                "monitor.id": "fooID",
              },
            },
            Object {
              "term": Object {
                "observer.geo.name": "Philadelphia",
              },
            },
          ],
        },
      },
      "size": 0,
    },
    "index": "heartbeat-8*",
  },
]
`;

exports[`ElasticsearchMonitorsAdapter getMonitorChartsData will run expected parameters when no location is specified 1`] = `
Array [
  Object {},
  Object {
    "body": Object {
      "aggs": Object {
        "timeseries": Object {
          "aggs": Object {
            "duration": Object {
              "stats": Object {
                "field": "monitor.duration.us",
              },
            },
            "status": Object {
              "terms": Object {
                "field": "monitor.status",
                "shard_size": 2,
                "size": 2,
              },
            },
          },
          "date_histogram": Object {
            "field": "@timestamp",
            "interval": "36000ms",
          },
        },
      },
      "query": Object {
        "bool": Object {
          "filter": Array [
            Object {
              "range": Object {
                "@timestamp": Object {
                  "gte": "now-15m",
                  "lte": "now",
                },
              },
            },
            Object {
              "term": Object {
                "monitor.id": "fooID",
              },
            },
          ],
        },
      },
      "size": 0,
    },
    "index": "heartbeat-8*",
  },
]
`;

exports[`ElasticsearchMonitorsAdapter will return kubernetes information if contained in hits 1`] = `
Object {
  "downSeries": Array [],
  "id": Object {
    "key": "foo",
    "url": "bar",
  },
  "ping": Object {
    "@timestamp": "2018-10-30T18:51:59.800Z",
    "container": Object {
      "id": "container_id",
    },
    "kubernetes": Object {
      "pod": Object {
        "uid": "kubernetes_pod_uid",
      },
    },
    "monitor": Object {
      "status": "up",
    },
    "timestamp": "2018-10-30T18:51:59.800Z",
  },
  "upSeries": Array [],
}
`;
