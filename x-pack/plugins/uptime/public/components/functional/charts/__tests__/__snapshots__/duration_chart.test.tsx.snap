// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DurationChart passes duration data to a chart 1`] = `
<Fragment>
  <EuiTitle
    size="xs"
  >
    <h4>
      <FormattedMessage
        defaultMessage="Monitor duration"
        description="The 'ms' is an abbreviation for milliseconds."
        id="xpack.uptime.monitorCharts.monitorDuration.titleLabel"
        values={Object {}}
      />
    </h4>
  </EuiTitle>
  <EuiPanel
    grow={true}
    hasShadow={false}
    paddingSize="m"
  >
    <Chart
      className="story-chart"
      renderer="canvas"
    >
      <inject-AxisSpec-with-chartStore
        id="bottom"
        position="bottom"
        showOverlappingTicks={true}
        tickFormat={[Function]}
        title="timestamp"
      />
      <inject-AxisSpec-with-chartStore
        domain={
          Object {
            "min": 0,
          }
        }
        id="left"
        position="left"
        tickFormat={[Function]}
        title="Duration ms"
      />
      <inject-AreaSeriesSpecComponent-with-chartStore
        curve={2}
        customSeriesColors={
          Map {
            Object {
              "colorValues": Array [],
              "specId": "area",
            } => "bar",
          }
        }
        data={
          Array [
            Object {
              "Max": 2642,
              "Min": 2342,
              "x": 123,
            },
            Object {
              "Max": 2742,
              "Min": 2442,
              "x": 124,
            },
            Object {
              "Max": 2642,
              "Min": 2342,
              "x": 125,
            },
          ]
        }
        id="area"
        name="Duration range"
        xAccessor="x"
        xScaleType="time"
        y0Accessors={
          Array [
            "Min",
          ]
        }
        yAccessors={
          Array [
            "Max",
          ]
        }
        yScaleToDataExtent={false}
        yScaleType="linear"
      />
      <inject-LineSeriesSpecComponent-with-chartStore
        curve={2}
        customSeriesColors={
          Map {
            Object {
              "colorValues": Array [],
              "specId": "average",
            } => "foo",
          }
        }
        data={
          Array [
            Array [
              123,
              2542,
            ],
            Array [
              124,
              2642,
            ],
            Array [
              125,
              2542,
            ],
          ]
        }
        id="average"
        name="Mean duration"
        xAccessor={0}
        xScaleType="time"
        yAccessors={
          Array [
            1,
          ]
        }
        yScaleToDataExtent={true}
        yScaleType="linear"
      />
    </Chart>
  </EuiPanel>
</Fragment>
`;
