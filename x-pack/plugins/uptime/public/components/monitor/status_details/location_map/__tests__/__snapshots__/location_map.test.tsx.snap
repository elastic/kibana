// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LocationMap component doesnt shows warning if geo is provided 1`] = `
<EuiErrorBoundary>
  <EuiFlexGroup
    gutterSize="none"
    responsive={false}
    style={
      Object {
        "flexGrow": 0,
      }
    }
  >
    <EuiFlexItem />
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        <EuiButtonGroup
          idToSelectedMap={
            Object {
              "listBtn": false,
              "mapBtn": true,
            }
          }
          isIconOnly={true}
          onChange={[Function]}
          options={
            Array [
              Object {
                "data-test-subj": "uptimeMonitorToggleListBtn",
                "iconType": "list",
                "id": "listBtn",
                "label": "Bold",
                "name": "bold",
              },
              Object {
                "data-test-subj": "uptimeMonitorToggleMapBtn",
                "iconType": "mapMarker",
                "id": "mapBtn",
                "label": "Italic",
                "name": "italic",
              },
            ]
          }
          style={
            Object {
              "marginLeft": "auto",
            }
          }
          type="multi"
        />
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <Styled(EuiFlexGroup)
    gutterSize="none"
    justifyContent="flexEnd"
    wrap={true}
  >
    <EuiFlexItem
      grow={false}
    >
      <styled.div>
        <EmbeddedMap
          downPoints={Array []}
          upPoints={
            Array [
              Object {
                "location": Object {
                  "lat": "40.730610",
                  "lon": " -73.935242",
                },
                "name": "New York",
              },
              Object {
                "location": Object {
                  "lat": "52.487448",
                  "lon": " 13.394798",
                },
                "name": "Tokyo",
              },
            ]
          }
        />
      </styled.div>
    </EuiFlexItem>
  </Styled(EuiFlexGroup)>
</EuiErrorBoundary>
`;

exports[`LocationMap component renders correctly against snapshot 1`] = `
<EuiErrorBoundary>
  <EuiFlexGroup
    gutterSize="none"
    responsive={false}
    style={
      Object {
        "flexGrow": 0,
      }
    }
  >
    <EuiFlexItem>
      <EuiTitle
        size="s"
      >
        <h3>
          Monitoring from
        </h3>
      </EuiTitle>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        <EuiButtonGroup
          idToSelectedMap={
            Object {
              "listBtn": true,
              "mapBtn": false,
            }
          }
          isIconOnly={true}
          onChange={[Function]}
          options={
            Array [
              Object {
                "data-test-subj": "uptimeMonitorToggleListBtn",
                "iconType": "list",
                "id": "listBtn",
                "label": "Bold",
                "name": "bold",
              },
              Object {
                "data-test-subj": "uptimeMonitorToggleMapBtn",
                "iconType": "mapMarker",
                "id": "mapBtn",
                "label": "Italic",
                "name": "italic",
              },
            ]
          }
          style={
            Object {
              "marginLeft": "auto",
            }
          }
          type="multi"
        />
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <Styled(EuiFlexGroup)
    gutterSize="none"
    justifyContent="flexEnd"
    wrap={true}
  >
    <Styled(EuiFlexItem)
      grow={true}
    >
      <LocationStatusTags
        locations={
          Array [
            Object {
              "downs": 0,
              "geo": Object {
                "location": Object {
                  "lat": "40.730610",
                  "lon": " -73.935242",
                },
                "name": "New York",
              },
              "summary": Object {
                "down": 0,
                "up": 4,
              },
              "timestamp": "2020-01-13T22:50:06.536Z",
              "ups": 4,
            },
            Object {
              "downs": 0,
              "geo": Object {
                "location": Object {
                  "lat": "52.487448",
                  "lon": " 13.394798",
                },
                "name": "Tokyo",
              },
              "summary": Object {
                "down": 0,
                "up": 4,
              },
              "timestamp": "2020-01-13T22:50:04.354Z",
              "ups": 4,
            },
            Object {
              "downs": 0,
              "geo": Object {
                "name": "Unnamed-location",
              },
              "summary": Object {
                "down": 0,
                "up": 4,
              },
              "timestamp": "2020-01-13T22:50:02.753Z",
              "ups": 4,
            },
          ]
        }
      />
    </Styled(EuiFlexItem)>
  </Styled(EuiFlexGroup)>
</EuiErrorBoundary>
`;

exports[`LocationMap component renders named locations that have missing geo data 1`] = `
<EuiErrorBoundary>
  <EuiFlexGroup
    gutterSize="none"
    responsive={false}
    style={
      Object {
        "flexGrow": 0,
      }
    }
  >
    <EuiFlexItem>
      <LocationMissingWarning />
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        <EuiButtonGroup
          idToSelectedMap={
            Object {
              "listBtn": false,
              "mapBtn": true,
            }
          }
          isIconOnly={true}
          onChange={[Function]}
          options={
            Array [
              Object {
                "data-test-subj": "uptimeMonitorToggleListBtn",
                "iconType": "list",
                "id": "listBtn",
                "label": "Bold",
                "name": "bold",
              },
              Object {
                "data-test-subj": "uptimeMonitorToggleMapBtn",
                "iconType": "mapMarker",
                "id": "mapBtn",
                "label": "Italic",
                "name": "italic",
              },
            ]
          }
          style={
            Object {
              "marginLeft": "auto",
            }
          }
          type="multi"
        />
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <Styled(EuiFlexGroup)
    gutterSize="none"
    justifyContent="flexEnd"
    wrap={true}
  >
    <EuiFlexItem
      grow={false}
    >
      <styled.div>
        <EmbeddedMap
          downPoints={Array []}
          upPoints={Array []}
        />
      </styled.div>
    </EuiFlexItem>
  </Styled(EuiFlexGroup)>
</EuiErrorBoundary>
`;

exports[`LocationMap component shows warning if geo information is missing 1`] = `
<EuiErrorBoundary>
  <EuiFlexGroup
    gutterSize="none"
    responsive={false}
    style={
      Object {
        "flexGrow": 0,
      }
    }
  >
    <EuiFlexItem>
      <LocationMissingWarning />
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        <EuiButtonGroup
          idToSelectedMap={
            Object {
              "listBtn": false,
              "mapBtn": true,
            }
          }
          isIconOnly={true}
          onChange={[Function]}
          options={
            Array [
              Object {
                "data-test-subj": "uptimeMonitorToggleListBtn",
                "iconType": "list",
                "id": "listBtn",
                "label": "Bold",
                "name": "bold",
              },
              Object {
                "data-test-subj": "uptimeMonitorToggleMapBtn",
                "iconType": "mapMarker",
                "id": "mapBtn",
                "label": "Italic",
                "name": "italic",
              },
            ]
          }
          style={
            Object {
              "marginLeft": "auto",
            }
          }
          type="multi"
        />
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <Styled(EuiFlexGroup)
    gutterSize="none"
    justifyContent="flexEnd"
    wrap={true}
  >
    <EuiFlexItem
      grow={false}
    >
      <styled.div>
        <EmbeddedMap
          downPoints={Array []}
          upPoints={
            Array [
              Object {
                "location": Object {
                  "lat": "52.487448",
                  "lon": " 13.394798",
                },
                "name": "Tokyo",
              },
            ]
          }
        />
      </styled.div>
    </EuiFlexItem>
  </Styled(EuiFlexGroup)>
</EuiErrorBoundary>
`;
