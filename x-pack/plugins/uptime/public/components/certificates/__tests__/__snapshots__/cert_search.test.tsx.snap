// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CertificatesSearch renders expected elements for valid props 1`] = `
.c0 {
  max-width: 700px;
}

<div
  class="c0"
>
  <div
    class="euiFormControlLayout euiFormControlLayout--fullWidth"
  >
    <div
      class="euiFormControlLayout__childrenWrapper"
    >
      <input
        aria-label="Search certificates"
        class="euiFieldSearch euiFieldSearch--fullWidth"
        data-test-subj="uptimeCertSearch"
        placeholder="Search certificates"
        type="search"
      />
      <div
        class="euiFormControlLayoutIcons"
      >
        <span
          class="euiFormControlLayoutCustomIcon"
        >
          <div
            aria-hidden="true"
            class="euiFormControlLayoutCustomIcon__icon"
            data-euiicon-type="search"
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`CertificatesSearch shallow renders expected elements for valid props 1`] = `
<ContextProvider
  value={
    Object {
      "history": Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "TestKeyForTesting",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "TestKeyForTesting",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
      "location": Object {
        "hash": "",
        "key": "TestKeyForTesting",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "match": Object {
        "isExact": true,
        "params": Object {},
        "path": "/",
        "url": "/",
      },
      "staticContext": undefined,
    }
  }
>
  <CertificateSearch
    setSearch={[MockFunction]}
  />
</ContextProvider>
`;
