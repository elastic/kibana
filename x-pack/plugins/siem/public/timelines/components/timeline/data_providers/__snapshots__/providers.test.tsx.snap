// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Providers rendering renders correctly against snapshot 1`] = `
<div>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="none"
    key="droppable-0"
  >
    <Styled(EuiFlexItem)
      grow={false}
    >
      <styled.div
        hideBadge={true}
      >
        <AndOrBadge
          type="or"
        />
      </styled.div>
    </Styled(EuiFlexItem)>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        (
      </styled.span>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <Connect(Droppable)
        direction="horizontal"
        droppableId="droppableId.timelineProviders.foo.group.0"
        getContainerForClone={[Function]}
        ignoreContainerClipping={false}
        isCombineEnabled={false}
        isDropDisabled={false}
        mode="standard"
        renderClone={null}
        type="DEFAULT"
      >
        <Component />
      </Connect(Droppable)>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        )
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="none"
    key="droppable-1"
  >
    <Styled(EuiFlexItem)
      grow={false}
    >
      <styled.div
        hideBadge={false}
      >
        <AndOrBadge
          type="or"
        />
      </styled.div>
    </Styled(EuiFlexItem)>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        (
      </styled.span>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <Connect(Droppable)
        direction="horizontal"
        droppableId="droppableId.timelineProviders.foo.group.1"
        getContainerForClone={[Function]}
        ignoreContainerClipping={false}
        isCombineEnabled={false}
        isDropDisabled={false}
        mode="standard"
        renderClone={null}
        type="DEFAULT"
      >
        <Component />
      </Connect(Droppable)>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        )
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="none"
    key="droppable-2"
  >
    <Styled(EuiFlexItem)
      grow={false}
    >
      <styled.div
        hideBadge={false}
      >
        <AndOrBadge
          type="or"
        />
      </styled.div>
    </Styled(EuiFlexItem)>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        (
      </styled.span>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <Connect(Droppable)
        direction="horizontal"
        droppableId="droppableId.timelineProviders.foo.group.2"
        getContainerForClone={[Function]}
        ignoreContainerClipping={false}
        isCombineEnabled={false}
        isDropDisabled={false}
        mode="standard"
        renderClone={null}
        type="DEFAULT"
      >
        <Component />
      </Connect(Droppable)>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        )
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="none"
    key="droppable-3"
  >
    <Styled(EuiFlexItem)
      grow={false}
    >
      <styled.div
        hideBadge={false}
      >
        <AndOrBadge
          type="or"
        />
      </styled.div>
    </Styled(EuiFlexItem)>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        (
      </styled.span>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <Connect(Droppable)
        direction="horizontal"
        droppableId="droppableId.timelineProviders.foo.group.3"
        getContainerForClone={[Function]}
        ignoreContainerClipping={false}
        isCombineEnabled={false}
        isDropDisabled={false}
        mode="standard"
        renderClone={null}
        type="DEFAULT"
      >
        <Component />
      </Connect(Droppable)>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        )
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="none"
    key="droppable-4"
  >
    <Styled(EuiFlexItem)
      grow={false}
    >
      <styled.div
        hideBadge={false}
      >
        <AndOrBadge
          type="or"
        />
      </styled.div>
    </Styled(EuiFlexItem)>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        (
      </styled.span>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <Connect(Droppable)
        direction="horizontal"
        droppableId="droppableId.timelineProviders.foo.group.4"
        getContainerForClone={[Function]}
        ignoreContainerClipping={false}
        isCombineEnabled={false}
        isDropDisabled={false}
        mode="standard"
        renderClone={null}
        type="DEFAULT"
      >
        <Component />
      </Connect(Droppable)>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        )
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="none"
    key="droppable-5"
  >
    <Styled(EuiFlexItem)
      grow={false}
    >
      <styled.div
        hideBadge={false}
      >
        <AndOrBadge
          type="or"
        />
      </styled.div>
    </Styled(EuiFlexItem)>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        (
      </styled.span>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <Connect(Droppable)
        direction="horizontal"
        droppableId="droppableId.timelineProviders.foo.group.5"
        getContainerForClone={[Function]}
        ignoreContainerClipping={false}
        isCombineEnabled={false}
        isDropDisabled={false}
        mode="standard"
        renderClone={null}
        type="DEFAULT"
      >
        <Component />
      </Connect(Droppable)>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        )
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="none"
    key="droppable-6"
  >
    <Styled(EuiFlexItem)
      grow={false}
    >
      <styled.div
        hideBadge={false}
      >
        <AndOrBadge
          type="or"
        />
      </styled.div>
    </Styled(EuiFlexItem)>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        (
      </styled.span>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <Connect(Droppable)
        direction="horizontal"
        droppableId="droppableId.timelineProviders.foo.group.6"
        getContainerForClone={[Function]}
        ignoreContainerClipping={false}
        isCombineEnabled={false}
        isDropDisabled={false}
        mode="standard"
        renderClone={null}
        type="DEFAULT"
      >
        <Component />
      </Connect(Droppable)>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        )
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="none"
    key="droppable-7"
  >
    <Styled(EuiFlexItem)
      grow={false}
    >
      <styled.div
        hideBadge={false}
      >
        <AndOrBadge
          type="or"
        />
      </styled.div>
    </Styled(EuiFlexItem)>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        (
      </styled.span>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <Connect(Droppable)
        direction="horizontal"
        droppableId="droppableId.timelineProviders.foo.group.7"
        getContainerForClone={[Function]}
        ignoreContainerClipping={false}
        isCombineEnabled={false}
        isDropDisabled={false}
        mode="standard"
        renderClone={null}
        type="DEFAULT"
      >
        <Component />
      </Connect(Droppable)>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        )
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="none"
    key="droppable-8"
  >
    <Styled(EuiFlexItem)
      grow={false}
    >
      <styled.div
        hideBadge={false}
      >
        <AndOrBadge
          type="or"
        />
      </styled.div>
    </Styled(EuiFlexItem)>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        (
      </styled.span>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <Connect(Droppable)
        direction="horizontal"
        droppableId="droppableId.timelineProviders.foo.group.8"
        getContainerForClone={[Function]}
        ignoreContainerClipping={false}
        isCombineEnabled={false}
        isDropDisabled={false}
        mode="standard"
        renderClone={null}
        type="DEFAULT"
      >
        <Component />
      </Connect(Droppable)>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        )
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="none"
    key="droppable-9"
  >
    <Styled(EuiFlexItem)
      grow={false}
    >
      <styled.div
        hideBadge={false}
      >
        <AndOrBadge
          type="or"
        />
      </styled.div>
    </Styled(EuiFlexItem)>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        (
      </styled.span>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <Connect(Droppable)
        direction="horizontal"
        droppableId="droppableId.timelineProviders.foo.group.9"
        getContainerForClone={[Function]}
        ignoreContainerClipping={false}
        isCombineEnabled={false}
        isDropDisabled={false}
        mode="standard"
        renderClone={null}
        type="DEFAULT"
      >
        <Component />
      </Connect(Droppable)>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        )
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="none"
    key="droppable-10"
  >
    <Styled(EuiFlexItem)
      grow={false}
    >
      <styled.div
        hideBadge={false}
      >
        <AndOrBadge
          type="or"
        />
      </styled.div>
    </Styled(EuiFlexItem)>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        (
      </styled.span>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <Connect(Droppable)
        direction="horizontal"
        droppableId="droppableId.timelineProviders.foo.group.10"
        getContainerForClone={[Function]}
        ignoreContainerClipping={false}
        isCombineEnabled={false}
        isDropDisabled={false}
        mode="standard"
        renderClone={null}
        type="DEFAULT"
      >
        <Component />
      </Connect(Droppable)>
    </EuiFlexItem>
    <EuiFlexItem
      grow={false}
    >
      <styled.span>
        )
      </styled.span>
    </EuiFlexItem>
  </EuiFlexGroup>
</div>
`;
