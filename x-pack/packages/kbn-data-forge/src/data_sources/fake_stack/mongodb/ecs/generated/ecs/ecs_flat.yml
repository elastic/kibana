'@timestamp':
  dashed_name: timestamp
  description: 'Date/time when the event originated.

    This is the date/time extracted from the event, typically representing when the
    event was generated by the source.

    If the event source has no original timestamp, this value is typically populated
    by the first time the event was received by the pipeline.

    Required field for all events.'
  example: '2016-05-23T08:05:34.853Z'
  flat_name: '@timestamp'
  level: core
  name: '@timestamp'
  normalize: []
  required: true
  short: Date/time when the event originated.
  type: date
host.name:
  dashed_name: host-name
  description: 'Name of the host.

    It can contain what `hostname` returns on Unix systems, the fully qualified domain
    name, or a name specified by the user. The sender decides which value to use.'
  flat_name: host.name
  ignore_above: 1024
  level: core
  name: name
  normalize: []
  short: Name of the host.
  type: keyword
labels:
  dashed_name: labels
  description: 'Custom key/value pairs.

    Can be used to add meta information to events. Should not contain nested objects.
    All values are stored as keyword.

    Example: `docker` and `k8s` labels.'
  example: '{"application": "foo-bar", "env": "production"}'
  flat_name: labels
  level: core
  name: labels
  normalize: []
  object_type: keyword
  short: Custom key/value pairs.
  type: object
log.level:
  dashed_name: log-level
  description: 'Original log level of the log event.

    If the source of the event provides a log level or textual severity, this is the
    one that goes in `log.level`. If your source doesn''t specify one, you may put
    your event transport''s severity here (e.g. Syslog severity).

    Some examples are `warn`, `err`, `i`, `informational`.'
  example: error
  flat_name: log.level
  ignore_above: 1024
  level: core
  name: level
  normalize: []
  short: Log level of the log event.
  type: keyword
log.logger:
  dashed_name: log-logger
  description: The name of the logger inside an application. This is usually the name
    of the class which initialized the logger, or can be a custom name.
  example: org.elasticsearch.bootstrap.Bootstrap
  flat_name: log.logger
  ignore_above: 1024
  level: core
  name: logger
  normalize: []
  short: Name of the logger.
  type: keyword
message:
  dashed_name: message
  description: 'For log events the message field contains the log message, optimized
    for viewing in a log viewer.

    For structured logs without an original message field, other fields can be concatenated
    to form a human-readable summary of the event.

    If multiple messages exist, they can be combined into one message.'
  example: Hello World
  flat_name: message
  level: core
  name: message
  normalize: []
  short: Log message optimized for viewing in a log viewer.
  type: match_only_text
mongodb.action:
  dashed_name: mongodb-action
  description: The action being taken
  flat_name: mongodb.action
  ignore_above: 1024
  level: custom
  name: action
  normalize: []
  short: The action being taken
  type: keyword
mongodb.collection:
  dashed_name: mongodb-collection
  description: The name of the collection
  flat_name: mongodb.collection
  ignore_above: 1024
  level: custom
  name: collection
  normalize: []
  short: The name of the collection
  type: keyword
mongodb.component:
  dashed_name: mongodb-component
  description: Component of the message
  flat_name: mongodb.component
  ignore_above: 1024
  level: custom
  name: component
  normalize: []
  short: Component of the message
  type: keyword
mongodb.context:
  dashed_name: mongodb-context
  description: Context of the message
  flat_name: mongodb.context
  ignore_above: 1024
  level: custom
  name: context
  normalize: []
  short: Context of the message
  type: keyword
mongodb.database:
  dashed_name: mongodb-database
  description: The name of the database
  flat_name: mongodb.database
  ignore_above: 1024
  level: custom
  name: database
  normalize: []
  short: The name of the database
  type: keyword
tags:
  dashed_name: tags
  description: List of keywords used to tag each event.
  example: '["production", "env2"]'
  flat_name: tags
  ignore_above: 1024
  level: core
  name: tags
  normalize:
  - array
  short: List of keywords used to tag each event.
  type: keyword
