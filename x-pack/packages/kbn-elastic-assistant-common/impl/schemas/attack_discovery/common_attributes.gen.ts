/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { z } from 'zod';

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Common Attack Discovery Attributes
 *   version: not applicable
 */

import { AttackDiscovery } from './post_attack_discovery_route.gen';
import { NonEmptyString, User } from '../common_attributes.gen';
import { Replacements, ApiConfig } from '../conversations/common_attributes.gen';

/**
 * Array of attack discoveries
 */
export type AttackDiscoveries = z.infer<typeof AttackDiscoveries>;
export const AttackDiscoveries = z.array(AttackDiscovery);

export type AttackDiscoveryResponse = z.infer<typeof AttackDiscoveryResponse>;
export const AttackDiscoveryResponse = z.object({
  id: NonEmptyString,
  timestamp: NonEmptyString.optional(),
  /**
   * The last time attack discovery was updated.
   */
  updatedAt: z.string().optional(),
  /**
   * The time attack discovery was created.
   */
  createdAt: z.string(),
  replacements: Replacements.optional(),
  users: z.array(User),
  /**
   * The attack discoveries.
   */
  attackDiscoveries: AttackDiscoveries,
  /**
   * LLM API configuration.
   */
  apiConfig: ApiConfig.optional(),
  /**
   * Kibana space
   */
  namespace: z.string(),
});

export type AttackDiscoveryUpdateProps = z.infer<typeof AttackDiscoveryUpdateProps>;
export const AttackDiscoveryUpdateProps = z.object({
  id: NonEmptyString,
  /**
   * LLM API configuration.
   */
  apiConfig: ApiConfig.optional(),
  /**
   * The attack discoveries.
   */
  attackDiscoveries: AttackDiscoveries.optional(),
  replacements: Replacements.optional(),
});

export type AttackDiscoveryCreateProps = z.infer<typeof AttackDiscoveryCreateProps>;
export const AttackDiscoveryCreateProps = z.object({
  /**
   * The attack discovery id.
   */
  id: z.string().optional(),
  /**
   * The attack discoveries.
   */
  attackDiscoveries: AttackDiscoveries,
  /**
   * LLM API configuration.
   */
  apiConfig: ApiConfig,
  replacements: Replacements.optional(),
});
