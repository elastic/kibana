/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { z } from 'zod';

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Post Datasets API endpoint
 *   version: 1
 */

export type DatasetItem = z.infer<typeof DatasetItem>;
export const DatasetItem = z.object({
  id: z.string().optional(),
  input: z.string(),
  prediction: z.string().optional(),
  reference: z.string(),
  tags: z.array(z.string()).optional(),
});

export type Dataset = z.infer<typeof Dataset>;
export const Dataset = z.array(DatasetItem).default([]);

export type PostDatasetsBody = z.infer<typeof PostDatasetsBody>;
export const PostDatasetsBody = z.object({
  dataset: Dataset,
});

export type PostDatasetsRequestQuery = z.infer<typeof PostDatasetsRequestQuery>;
export const PostDatasetsRequestQuery = z.object({
  /**
   * Id of dataset to add datasetItem to
   */
  datasetId: z.string(),
});
export type PostDatasetsRequestQueryInput = z.input<typeof PostDatasetsRequestQuery>;

export type PostDatasetsRequestBody = z.infer<typeof PostDatasetsRequestBody>;
export const PostDatasetsRequestBody = PostDatasetsBody;
export type PostDatasetsRequestBodyInput = z.input<typeof PostDatasetsRequestBody>;

export type PostDatasetsResponse = z.infer<typeof PostDatasetsResponse>;
export const PostDatasetsResponse = z.object({
  datasetId: z.string(),
  success: z.boolean(),
});
