/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { z } from 'zod';
import { ArrayFromString } from '@kbn/zod-helpers';

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Find Prompts API endpoint
 *   version: 2023-10-31
 */

import { PromptResponse } from './bulk_crud_prompts_route.gen';

export type FindPromptsSortField = z.infer<typeof FindPromptsSortField>;
export const FindPromptsSortField = z.enum(['created_at', 'is_default', 'name', 'updated_at']);
export type FindPromptsSortFieldEnum = typeof FindPromptsSortField.enum;
export const FindPromptsSortFieldEnum = FindPromptsSortField.enum;

export type SortOrder = z.infer<typeof SortOrder>;
export const SortOrder = z.enum(['asc', 'desc']);
export type SortOrderEnum = typeof SortOrder.enum;
export const SortOrderEnum = SortOrder.enum;

export type FindPromptsRequestQuery = z.infer<typeof FindPromptsRequestQuery>;
export const FindPromptsRequestQuery = z.object({
  fields: ArrayFromString(z.string()).optional(),
  /**
   * Search query
   */
  filter: z.string().optional(),
  /**
   * Field to sort by
   */
  sort_field: FindPromptsSortField.optional(),
  /**
   * Sort order
   */
  sort_order: SortOrder.optional(),
  /**
   * Page number
   */
  page: z.coerce.number().int().min(1).optional().default(1),
  /**
   * Prompts per page
   */
  per_page: z.coerce.number().int().min(0).optional().default(20),
});
export type FindPromptsRequestQueryInput = z.input<typeof FindPromptsRequestQuery>;

export type FindPromptsResponse = z.infer<typeof FindPromptsResponse>;
export const FindPromptsResponse = z.object({
  page: z.number().int(),
  perPage: z.number().int(),
  total: z.number().int(),
  data: z.array(PromptResponse),
});
