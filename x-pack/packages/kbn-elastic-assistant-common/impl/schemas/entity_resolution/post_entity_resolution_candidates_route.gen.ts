/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Post Entity Search discovery API endpoint
 *   version: 1
 */

import { z } from 'zod';

import { SearchEntity } from './common.gen';

export type EntityResolutionCandidate = z.infer<typeof EntityResolutionCandidate>;
export const EntityResolutionCandidate = z.object({
  index: z.string().optional(),
  id: z.string().optional(),
  document: z.object({}).optional(),
  entity: z.object({}).optional(),
});

export type EntityResolutionCandidatesPostRequestBody = z.infer<
  typeof EntityResolutionCandidatesPostRequestBody
>;
export const EntityResolutionCandidatesPostRequestBody = z.object({
  entity: SearchEntity,
  filter: z.object({}).optional(),
  entitiesIndexPattern: z.string(),
  size: z.number().min(1).max(100),
});
export type EntityResolutionCandidatesPostRequestBodyInput = z.input<
  typeof EntityResolutionCandidatesPostRequestBody
>;

export type EntityResolutionCandidatesPostResponse = z.infer<
  typeof EntityResolutionCandidatesPostResponse
>;
export const EntityResolutionCandidatesPostResponse = z.object({
  entity: SearchEntity.optional(),
  candidates: z.array(EntityResolutionCandidate).optional(),
});
