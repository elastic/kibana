openapi: 3.0.3
info:
  description: Manage and interact with Security Assistant resources.
  title: Security AI Assistant API (Elastic Cloud Serverless)
  version: '1'
servers:
  - url: 'http://{kibana_host}:{port}'
    variables:
      kibana_host:
        default: localhost
      port:
        default: '5601'
paths:
  /api/security_ai_assistant/current_user/conversations:
    post:
      description: Create a conversation
      operationId: CreateConversation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationCreateProps'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
          description: Indicates a successful call.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                  statusCode:
                    type: number
          description: Generic Error
      summary: Create a conversation
      tags:
        - Conversation API
  /api/security_ai_assistant/current_user/conversations/_find:
    get:
      description: Finds conversations that match the given query.
      operationId: FindConversations
      parameters:
        - in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Search query
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: Field to sort by
          in: query
          name: sort_field
          required: false
          schema:
            $ref: '#/components/schemas/FindConversationsSortField'
        - description: Sort order
          in: query
          name: sort_order
          required: false
          schema:
            $ref: '#/components/schemas/SortOrder'
        - description: Page number
          in: query
          name: page
          required: false
          schema:
            default: 1
            minimum: 1
            type: integer
        - description: Conversations per page
          in: query
          name: per_page
          required: false
          schema:
            default: 20
            minimum: 0
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/ConversationResponse'
                    type: array
                  page:
                    type: integer
                  perPage:
                    type: integer
                  total:
                    type: integer
                required:
                  - page
                  - perPage
                  - total
                  - data
          description: Successful response
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                  statusCode:
                    type: number
          description: Generic Error
      summary: Finds conversations that match the given query.
      tags:
        - Conversations API
  '/api/security_ai_assistant/current_user/conversations/{id}':
    delete:
      description: Deletes a single conversation using the `id` field.
      operationId: DeleteConversation
      parameters:
        - description: The conversation's `id` value.
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
          description: Indicates a successful call.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                  statusCode:
                    type: number
          description: Generic Error
      summary: Deletes a single conversation using the `id` field.
      tags:
        - Conversation API
    get:
      description: Read a single conversation
      operationId: ReadConversation
      parameters:
        - description: The conversation's `id` value.
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
          description: Indicates a successful call.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                  statusCode:
                    type: number
          description: Generic Error
      summary: Read a single conversation
      tags:
        - Conversations API
    put:
      description: Update a single conversation
      operationId: UpdateConversation
      parameters:
        - description: The conversation's `id` value.
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConversationUpdateProps'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversationResponse'
          description: Indicates a successful call.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                  statusCode:
                    type: number
          description: Generic Error
      summary: Update a conversation
      tags:
        - Conversation API
components:
  schemas:
    ApiConfig:
      type: object
      properties:
        actionTypeId:
          description: action type id
          type: string
        connectorId:
          description: connector id
          type: string
        defaultSystemPromptId:
          description: defaultSystemPromptId
          type: string
        model:
          description: model
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
          description: Provider
      required:
        - connectorId
        - actionTypeId
    ConversationCategory:
      description: The conversation category.
      enum:
        - assistant
        - insights
      type: string
    ConversationConfidence:
      description: The conversation confidence.
      enum:
        - low
        - medium
        - high
      type: string
    ConversationCreateProps:
      type: object
      properties:
        apiConfig:
          $ref: '#/components/schemas/ApiConfig'
          description: LLM API configuration.
        category:
          $ref: '#/components/schemas/ConversationCategory'
          description: The conversation category.
        excludeFromLastConversationStorage:
          description: excludeFromLastConversationStorage.
          type: boolean
        id:
          description: The conversation id.
          type: string
        isDefault:
          description: Is default conversation.
          type: boolean
        messages:
          description: The conversation messages.
          items:
            $ref: '#/components/schemas/Message'
          type: array
        replacements:
          $ref: '#/components/schemas/Replacements'
        title:
          description: The conversation title.
          type: string
      required:
        - title
    ConversationResponse:
      type: object
      properties:
        apiConfig:
          $ref: '#/components/schemas/ApiConfig'
          description: LLM API configuration.
        category:
          $ref: '#/components/schemas/ConversationCategory'
          description: The conversation category.
        createdAt:
          description: The last time conversation was updated.
          type: string
        excludeFromLastConversationStorage:
          description: excludeFromLastConversationStorage.
          type: boolean
        id:
          $ref: '#/components/schemas/NonEmptyString'
        isDefault:
          description: Is default conversation.
          type: boolean
        messages:
          description: The conversation messages.
          items:
            $ref: '#/components/schemas/Message'
          type: array
        namespace:
          description: Kibana space
          type: string
        replacements:
          $ref: '#/components/schemas/Replacements'
        summary:
          $ref: '#/components/schemas/ConversationSummary'
        timestamp:
          $ref: '#/components/schemas/NonEmptyString'
        title:
          description: The conversation title.
          type: string
        updatedAt:
          description: The last time conversation was updated.
          type: string
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
        - id
        - title
        - createdAt
        - users
        - namespace
        - category
    ConversationSummary:
      type: object
      properties:
        confidence:
          $ref: '#/components/schemas/ConversationConfidence'
          description: >-
            How confident you are about this being a correct and useful
            learning.
        content:
          description: Summary text of the conversation over time.
          type: string
        public:
          description: Define if summary is marked as publicly available.
          type: boolean
        timestamp:
          $ref: '#/components/schemas/NonEmptyString'
          description: The timestamp summary was updated.
    ConversationUpdateProps:
      type: object
      properties:
        apiConfig:
          $ref: '#/components/schemas/ApiConfig'
          description: LLM API configuration.
        category:
          $ref: '#/components/schemas/ConversationCategory'
          description: The conversation category.
        excludeFromLastConversationStorage:
          description: excludeFromLastConversationStorage.
          type: boolean
        id:
          $ref: '#/components/schemas/NonEmptyString'
        messages:
          description: The conversation messages.
          items:
            $ref: '#/components/schemas/Message'
          type: array
        replacements:
          $ref: '#/components/schemas/Replacements'
        summary:
          $ref: '#/components/schemas/ConversationSummary'
        title:
          description: The conversation title.
          type: string
      required:
        - id
    FindConversationsSortField:
      enum:
        - created_at
        - is_default
        - title
        - updated_at
      type: string
    Message:
      description: AI assistant conversation message.
      type: object
      properties:
        content:
          description: Message content.
          type: string
        isError:
          description: Is error message.
          type: boolean
        reader:
          $ref: '#/components/schemas/Reader'
          description: Message content.
        role:
          $ref: '#/components/schemas/MessageRole'
          description: Message role.
        timestamp:
          $ref: '#/components/schemas/NonEmptyString'
          description: The timestamp message was sent or received.
        traceData:
          $ref: '#/components/schemas/TraceData'
          description: trace Data
      required:
        - timestamp
        - content
        - role
    MessageRole:
      description: Message role.
      enum:
        - system
        - user
        - assistant
      type: string
    NonEmptyString:
      description: A string that is not empty and does not contain only whitespace
      minLength: 1
      pattern: ^(?! *$).+$
      type: string
    Provider:
      description: Provider
      enum:
        - OpenAI
        - Azure OpenAI
      type: string
    Reader:
      additionalProperties: true
      type: object
    Replacements:
      additionalProperties:
        type: string
      description: Replacements object used to anonymize/deanomymize messsages
      type: object
    SortOrder:
      enum:
        - asc
        - desc
      type: string
    TraceData:
      description: trace Data
      type: object
      properties:
        traceId:
          description: 'Could be any string, not necessarily a UUID'
          type: string
        transactionId:
          description: 'Could be any string, not necessarily a UUID'
          type: string
    User:
      description: 'Could be any string, not necessarily a UUID'
      type: object
      properties:
        id:
          description: User id
          type: string
        name:
          description: User name
          type: string
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
security:
  - BasicAuth: []
tags: !<tag:yaml.org,2002:js/undefined> ''
