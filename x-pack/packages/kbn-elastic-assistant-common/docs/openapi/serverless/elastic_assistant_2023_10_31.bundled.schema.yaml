openapi: 3.0.3
info:
  description: >-
    The AI Assistant aids users in navigating complex workflows, providing smart
    insights, and enhancing interactive experiences across our solutions.
  title: Security Solution AI Assistant API (Elastic Cloud Serverless)
  version: '2023-10-31'
servers:
  - url: 'http://{kibana_host}:{port}'
    variables:
      kibana_host:
        default: localhost
      port:
        default: '5601'
paths:
  /api/elastic_assistant/chat/complete:
    post:
      description: Creates a model response for the given chat conversation.
      operationId: ChatComplete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatCompleteProps'
        required: true
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Indicates a successful call.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                  statusCode:
                    type: number
          description: Generic Error
      summary: Creates a model response for the given chat conversation.
      tags:
        - Chat Complete API
  /api/elastic_assistant/knowledge_base/entries:
    post:
      description: Create a Knowledge Base Entry
      operationId: CreateKnowledgeBaseEntry
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseEntryCreateProps'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryResponse'
          description: Successful request returning Knowledge Base Entries
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryErrorSchema'
          description: Generic Error
      summary: Create a Knowledge Base Entry
      tags:
        - Knowledge Base Entries API
  /api/elastic_assistant/knowledge_base/entries/_bulk_action:
    post:
      description: >-
        The bulk action is applied to all Knowledge Base Entries that match the
        filter or to the list of Knowledge Base Entries by their IDs
      operationId: PerformKnowledgeBaseEntryBulkAction
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                create:
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseEntryCreateProps'
                  type: array
                delete:
                  type: object
                  properties:
                    ids:
                      description: Array of Knowledge base Entry IDs
                      items:
                        type: string
                      minItems: 1
                      type: array
                    query:
                      description: Query to filter Knowledge Base Entries
                      type: string
                update:
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseEntryUpdateProps'
                  type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryBulkCrudActionResponse'
          description: Successful bulk operation request
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryErrorSchema'
          description: Generic Error
      summary: Applies a bulk action to multiple Knowledge Base Entries
      tags:
        - Knowledge Base Entries Bulk API
  '/api/elastic_assistant/knowledge_base/entries/{id}':
    delete:
      description: Deletes a single Knowledge Base Entry using the `id` field
      operationId: DeleteKnowledgeBaseEntry
      parameters:
        - description: The Knowledge Base Entry's `id` value
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryResponse'
          description: Successful request returning the deleted Knowledge Base Entry
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryErrorSchema'
          description: Generic Error
      summary: Deletes a single Knowledge Base Entry using the `id` field
      tags:
        - Knowledge Base Entries API
    get:
      description: Read a Knowledge Base Entry
      operationId: ReadKnowledgeBaseEntry
      parameters:
        - description: The Knowledge Base Entry's `id` value.
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryResponse'
          description: Successful request returning a Knowledge Base Entry
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryErrorSchema'
          description: Generic Error
      summary: Read a Knowledge Base Entry
      tags:
        - Knowledge Base Entries API
    put:
      description: Update a Knowledge Base Entry
      operationId: UpdateKnowledgeBaseEntry
      parameters:
        - description: The Knowledge Base Entry's `id` value
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KnowledgeBaseEntryUpdateProps'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryResponse'
          description: Successful request returning the updated Knowledge Base Entry
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryErrorSchema'
          description: Generic Error
      summary: Update a Knowledge Base Entry
      tags:
        - Knowledge Base Entries API
components:
  schemas:
    ChatCompleteProps:
      type: object
      properties:
        connectorId:
          type: string
        conversationId:
          type: string
        isStream:
          type: boolean
        langSmithApiKey:
          type: string
        langSmithProject:
          type: string
        messages:
          items:
            $ref: '#/components/schemas/ChatMessage'
          type: array
        model:
          type: string
        persist:
          type: boolean
        promptId:
          type: string
        responseLanguage:
          type: string
      required:
        - messages
        - persist
        - connectorId
    ChatMessage:
      description: AI assistant message.
      type: object
      properties:
        content:
          description: Message content.
          type: string
        data:
          $ref: '#/components/schemas/MessageData'
          description: ECS object to attach to the context of the message.
        fields_to_anonymize:
          items:
            type: string
          type: array
        role:
          $ref: '#/components/schemas/ChatMessageRole'
          description: Message role.
      required:
        - role
    ChatMessageRole:
      description: Message role.
      enum:
        - system
        - user
        - assistant
      type: string
    KnowledgeBaseEntryBulkActionSkipReason:
      enum:
        - KNOWLEDGE_BASE_ENTRY_NOT_MODIFIED
      type: string
    KnowledgeBaseEntryBulkActionSkipResult:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        skip_reason:
          $ref: '#/components/schemas/KnowledgeBaseEntryBulkActionSkipReason'
      required:
        - id
        - skip_reason
    KnowledgeBaseEntryBulkCrudActionResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            errors:
              items:
                $ref: '#/components/schemas/NormalizedKnowledgeBaseEntryError'
              type: array
            results:
              $ref: '#/components/schemas/KnowledgeBaseEntryBulkCrudActionResults'
            summary:
              $ref: '#/components/schemas/KnowledgeBaseEntryBulkCrudActionSummary'
          required:
            - results
            - summary
        knowledgeBaseEntriesCount:
          type: integer
        message:
          type: string
        statusCode:
          type: integer
        success:
          type: boolean
      required:
        - attributes
    KnowledgeBaseEntryBulkCrudActionResults:
      type: object
      properties:
        created:
          items:
            $ref: '#/components/schemas/KnowledgeBaseEntryResponse'
          type: array
        deleted:
          items:
            type: string
          type: array
        skipped:
          items:
            $ref: '#/components/schemas/KnowledgeBaseEntryBulkActionSkipResult'
          type: array
        updated:
          items:
            $ref: '#/components/schemas/KnowledgeBaseEntryResponse'
          type: array
      required:
        - updated
        - created
        - deleted
        - skipped
    KnowledgeBaseEntryBulkCrudActionSummary:
      type: object
      properties:
        failed:
          type: integer
        skipped:
          type: integer
        succeeded:
          type: integer
        total:
          type: integer
      required:
        - failed
        - skipped
        - succeeded
        - total
    KnowledgeBaseEntryCreateProps:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/Metadata'
          description: Metadata about the Knowledge Base Entry
        text:
          description: Knowledge Base Entry content
          type: string
      required:
        - metadata
        - text
    KnowledgeBaseEntryDetailsInError:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
      required:
        - id
    KnowledgeBaseEntryErrorSchema:
      additionalProperties: false
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        statusCode:
          type: number
      required:
        - statusCode
        - error
        - message
    KnowledgeBaseEntryResponse:
      type: object
      properties:
        createdAt:
          description: Time the Knowledge Base Entry was created
          type: string
        createdBy:
          description: User who created the Knowledge Base Entry
          type: string
        id:
          $ref: '#/components/schemas/NonEmptyString'
        metadata:
          $ref: '#/components/schemas/Metadata'
          description: Metadata about the Knowledge Base Entry
        namespace:
          description: Kibana space
          type: string
        text:
          description: Knowledge Base Entry content
          type: string
        timestamp:
          $ref: '#/components/schemas/NonEmptyString'
        updatedAt:
          description: Time the Knowledge Base Entry was last updated
          type: string
        updatedBy:
          description: User who last updated the Knowledge Base Entry
          type: string
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
        vector:
          $ref: '#/components/schemas/Vector'
      required:
        - id
        - createdAt
        - users
        - namespace
        - text
    KnowledgeBaseEntryUpdateProps:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NonEmptyString'
        metadata:
          $ref: '#/components/schemas/Metadata'
          description: Metadata about the Knowledge Base Entry
      required:
        - id
    MessageData:
      additionalProperties: true
      type: object
    Metadata:
      description: Metadata about an Knowledge Base Entry
      type: object
      properties:
        kbResource:
          description: >-
            Knowledge Base resource name for grouping entries, e.g. 'esql',
            'lens-docs', etc
          type: string
        required:
          description: Whether or not this resource should always be included
          type: boolean
        source:
          description: Source document name or filepath
          type: string
      required:
        - kbResource
        - source
        - required
    NonEmptyString:
      description: A string that is not empty and does not contain only whitespace
      minLength: 1
      pattern: ^(?! *$).+$
      type: string
    NormalizedKnowledgeBaseEntryError:
      type: object
      properties:
        err_code:
          type: string
        knowledgeBaseEntries:
          items:
            $ref: '#/components/schemas/KnowledgeBaseEntryDetailsInError'
          type: array
        message:
          type: string
        statusCode:
          type: integer
      required:
        - message
        - statusCode
        - knowledgeBaseEntries
    User:
      description: 'Could be any string, not necessarily a UUID'
      type: object
      properties:
        id:
          description: User id
          type: string
        name:
          description: User name
          type: string
    Vector:
      description: >-
        Object containing Knowledge Base Entry text embeddings and modelId used
        to create the embeddings
      type: object
      properties:
        modelId:
          description: ID of the model used to create the embeddings
          type: string
        tokens:
          additionalProperties:
            type: number
          description: Tokens with their corresponding values
          type: object
      required:
        - modelId
        - tokens
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
security:
  - BasicAuth: []
tags: !<tag:yaml.org,2002:js/undefined> ''
