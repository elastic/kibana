/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Cel Input Attributes
 *   version: not applicable
 */

import { z } from '@kbn/zod';

export type PathOptions = z.infer<typeof PathOptions>;
export const PathOptions = z.object({}).catchall(z.unknown());

/**
 * The type of auth utilized for the input.
 */
export type CelAuthType = z.infer<typeof CelAuthType>;
export const CelAuthType = z.enum(['basic', 'digest', 'oauth2', 'header']);
export type CelAuthTypeEnum = typeof CelAuthType.enum;
export const CelAuthTypeEnum = CelAuthType.enum;

/**
 * Necessary OpenAPI spec details for building a CEL program.
 */
export type OpenApiDetails = z.infer<typeof OpenApiDetails>;
export const OpenApiDetails = z.object({
  operation: z.string(),
  schemas: z.string(),
  auth: z.string().optional(),
});

/**
 * Details for building a CEL program.
 */
export type CelDetails = z.infer<typeof CelDetails>;
export const CelDetails = z.object({
  path: z.string(),
  auth: CelAuthType,
  openApiDetails: OpenApiDetails.optional(),
});

/**
 * Generated CEL details.
 */
export type GeneratedCelDetails = z.infer<typeof GeneratedCelDetails>;
export const GeneratedCelDetails = z.object({
  configFields: z.object({}).catchall(z.unknown()),
  program: z.string(),
  needsAuthConfigBlock: z.boolean(),
  stateSettings: z.object({}).catchall(z.unknown()),
  redactVars: z.array(z.string()),
});

/**
 * Optional CEL input details.
 */
export type CelInput = z.infer<typeof CelInput>;
export const CelInput = z.object({
  authType: CelAuthType,
  configFields: z.object({}).catchall(z.unknown()),
  needsAuthConfigBlock: z.boolean(),
  program: z.string(),
  stateSettings: z.object({}).catchall(z.unknown()),
  redactVars: z.array(z.string()),
  url: z.string(),
});
