// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Connector type config checks detect connector type changes for: .bedrock 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiUrl": Object {
          "type": "string",
        },
        "contextWindowLength": Object {
          "type": "number",
        },
        "defaultModel": Object {
          "default": "us.anthropic.claude-3-7-sonnet-20250219-v1:0",
          "type": "string",
        },
      },
      "required": Array [
        "apiUrl",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .bedrock 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "accessKey": Object {
          "type": "string",
        },
        "secret": Object {
          "type": "string",
        },
      },
      "required": Array [
        "accessKey",
        "secret",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .bedrock 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .cases 1`] = `
Object {
  "flags": Object {
    "default": Object {
      "special": "deep",
    },
    "error": [Function],
    "presence": "optional",
  },
  "keys": Object {
    "alerts": Object {
      "flags": Object {
        "error": [Function],
      },
      "items": Array [
        Object {
          "flags": Object {
            "error": [Function],
            "presence": "optional",
          },
          "metas": Array [
            Object {
              "x-oas-get-additional-properties": [Function],
            },
          ],
          "rules": Array [
            Object {
              "args": Object {
                "key": Object {
                  "flags": Object {
                    "error": [Function],
                  },
                  "rules": Array [
                    Object {
                      "args": Object {
                        "method": [Function],
                      },
                      "name": "custom",
                    },
                  ],
                  "type": "string",
                },
                "value": Object {
                  "flags": Object {
                    "error": [Function],
                  },
                  "metas": Array [
                    Object {
                      "x-oas-any-type": true,
                    },
                  ],
                  "type": "any",
                },
              },
              "name": "entries",
            },
            Object {
              "args": Object {
                "method": [Function],
              },
              "name": "custom",
            },
          ],
          "type": "record",
        },
      ],
      "type": "array",
    },
    "groupedAlerts": Object {
      "flags": Object {
        "default": null,
        "error": [Function],
        "presence": "optional",
      },
      "matches": Array [
        Object {
          "schema": Object {
            "flags": Object {
              "default": Array [],
              "error": [Function],
              "presence": "optional",
            },
            "items": Array [
              Object {
                "flags": Object {
                  "default": Object {
                    "special": "deep",
                  },
                  "error": [Function],
                  "presence": "optional",
                },
                "keys": Object {
                  "alerts": Object {
                    "flags": Object {
                      "error": [Function],
                    },
                    "items": Array [
                      Object {
                        "flags": Object {
                          "error": [Function],
                          "presence": "optional",
                        },
                        "metas": Array [
                          Object {
                            "x-oas-get-additional-properties": [Function],
                          },
                        ],
                        "rules": Array [
                          Object {
                            "args": Object {
                              "key": Object {
                                "flags": Object {
                                  "error": [Function],
                                },
                                "rules": Array [
                                  Object {
                                    "args": Object {
                                      "method": [Function],
                                    },
                                    "name": "custom",
                                  },
                                ],
                                "type": "string",
                              },
                              "value": Object {
                                "flags": Object {
                                  "error": [Function],
                                },
                                "metas": Array [
                                  Object {
                                    "x-oas-any-type": true,
                                  },
                                ],
                                "type": "any",
                              },
                            },
                            "name": "entries",
                          },
                          Object {
                            "args": Object {
                              "method": [Function],
                            },
                            "name": "custom",
                          },
                        ],
                        "type": "record",
                      },
                    ],
                    "rules": Array [
                      Object {
                        "args": Object {
                          "limit": 1000,
                        },
                        "name": "max",
                      },
                    ],
                    "type": "array",
                  },
                  "comments": Object {
                    "flags": Object {
                      "default": [Function],
                      "error": [Function],
                      "presence": "optional",
                    },
                    "items": Array [
                      Object {
                        "flags": Object {
                          "error": [Function],
                          "presence": "optional",
                        },
                        "rules": Array [
                          Object {
                            "args": Object {
                              "method": [Function],
                            },
                            "name": "custom",
                          },
                        ],
                        "type": "string",
                      },
                    ],
                    "metas": Array [
                      Object {
                        "x-oas-optional": true,
                      },
                    ],
                    "rules": Array [
                      Object {
                        "args": Object {
                          "limit": 5000,
                        },
                        "name": "max",
                      },
                    ],
                    "type": "array",
                  },
                  "grouping": Object {
                    "flags": Object {
                      "error": [Function],
                    },
                    "metas": Array [
                      Object {
                        "x-oas-get-additional-properties": [Function],
                      },
                    ],
                    "rules": Array [
                      Object {
                        "args": Object {
                          "key": Object {
                            "flags": Object {
                              "error": [Function],
                            },
                            "rules": Array [
                              Object {
                                "args": Object {
                                  "method": [Function],
                                },
                                "name": "custom",
                              },
                            ],
                            "type": "string",
                          },
                          "value": Object {
                            "flags": Object {
                              "error": [Function],
                            },
                            "metas": Array [
                              Object {
                                "x-oas-any-type": true,
                              },
                            ],
                            "type": "any",
                          },
                        },
                        "name": "entries",
                      },
                    ],
                    "type": "record",
                  },
                  "title": Object {
                    "flags": Object {
                      "default": [Function],
                      "error": [Function],
                      "presence": "optional",
                    },
                    "metas": Array [
                      Object {
                        "x-oas-max-length": 160,
                      },
                      Object {
                        "x-oas-optional": true,
                      },
                    ],
                    "rules": Array [
                      Object {
                        "args": Object {
                          "method": [Function],
                        },
                        "name": "custom",
                      },
                      Object {
                        "args": Object {
                          "method": [Function],
                        },
                        "name": "custom",
                      },
                    ],
                    "type": "string",
                  },
                },
                "type": "object",
              },
            ],
            "rules": Array [
              Object {
                "args": Object {
                  "limit": 0,
                },
                "name": "min",
              },
              Object {
                "args": Object {
                  "limit": 20,
                },
                "name": "max",
              },
            ],
            "type": "array",
          },
        },
        Object {
          "schema": Object {
            "allow": Array [
              null,
            ],
            "flags": Object {
              "error": [Function],
              "only": true,
            },
            "type": "any",
          },
        },
      ],
      "type": "alternatives",
    },
    "groupingBy": Object {
      "flags": Object {
        "error": [Function],
      },
      "items": Array [
        Object {
          "flags": Object {
            "error": [Function],
            "presence": "optional",
          },
          "rules": Array [
            Object {
              "args": Object {
                "method": [Function],
              },
              "name": "custom",
            },
          ],
          "type": "string",
        },
      ],
      "rules": Array [
        Object {
          "args": Object {
            "limit": 0,
          },
          "name": "min",
        },
        Object {
          "args": Object {
            "limit": 1,
          },
          "name": "max",
        },
      ],
      "type": "array",
    },
    "internallyManagedAlerts": Object {
      "flags": Object {
        "default": null,
        "error": [Function],
        "presence": "optional",
      },
      "matches": Array [
        Object {
          "schema": Object {
            "flags": Object {
              "default": false,
              "error": [Function],
              "presence": "optional",
            },
            "type": "boolean",
          },
        },
        Object {
          "schema": Object {
            "allow": Array [
              null,
            ],
            "flags": Object {
              "error": [Function],
              "only": true,
            },
            "type": "any",
          },
        },
      ],
      "type": "alternatives",
    },
    "maximumCasesToOpen": Object {
      "flags": Object {
        "default": 5,
        "error": [Function],
        "presence": "optional",
      },
      "rules": Array [
        Object {
          "args": Object {
            "limit": 1,
          },
          "name": "min",
        },
        Object {
          "args": Object {
            "limit": 20,
          },
          "name": "max",
        },
      ],
      "type": "number",
    },
    "owner": Object {
      "flags": Object {
        "error": [Function],
      },
      "rules": Array [
        Object {
          "args": Object {
            "method": [Function],
          },
          "name": "custom",
        },
      ],
      "type": "string",
    },
    "reopenClosedCases": Object {
      "flags": Object {
        "default": false,
        "error": [Function],
        "presence": "optional",
      },
      "type": "boolean",
    },
    "rule": Object {
      "flags": Object {
        "default": Object {
          "special": "deep",
        },
        "error": [Function],
        "presence": "optional",
      },
      "keys": Object {
        "id": Object {
          "flags": Object {
            "error": [Function],
          },
          "rules": Array [
            Object {
              "args": Object {
                "method": [Function],
              },
              "name": "custom",
            },
          ],
          "type": "string",
        },
        "name": Object {
          "flags": Object {
            "error": [Function],
          },
          "rules": Array [
            Object {
              "args": Object {
                "method": [Function],
              },
              "name": "custom",
            },
          ],
          "type": "string",
        },
        "ruleUrl": Object {
          "flags": Object {
            "default": null,
            "error": [Function],
            "presence": "optional",
          },
          "matches": Array [
            Object {
              "schema": Object {
                "flags": Object {
                  "error": [Function],
                },
                "rules": Array [
                  Object {
                    "args": Object {
                      "method": [Function],
                    },
                    "name": "custom",
                  },
                ],
                "type": "string",
              },
            },
            Object {
              "schema": Object {
                "allow": Array [
                  null,
                ],
                "flags": Object {
                  "error": [Function],
                  "only": true,
                },
                "type": "any",
              },
            },
          ],
          "type": "alternatives",
        },
        "tags": Object {
          "flags": Object {
            "default": Array [],
            "error": [Function],
            "presence": "optional",
          },
          "items": Array [
            Object {
              "flags": Object {
                "error": [Function],
                "presence": "optional",
              },
              "rules": Array [
                Object {
                  "args": Object {
                    "method": [Function],
                  },
                  "name": "custom",
                },
              ],
              "type": "string",
            },
          ],
          "type": "array",
        },
      },
      "type": "object",
    },
    "templateId": Object {
      "flags": Object {
        "default": null,
        "error": [Function],
        "presence": "optional",
      },
      "matches": Array [
        Object {
          "schema": Object {
            "flags": Object {
              "error": [Function],
            },
            "rules": Array [
              Object {
                "args": Object {
                  "method": [Function],
                },
                "name": "custom",
              },
            ],
            "type": "string",
          },
        },
        Object {
          "schema": Object {
            "allow": Array [
              null,
            ],
            "flags": Object {
              "error": [Function],
              "only": true,
            },
            "type": "any",
          },
        },
      ],
      "type": "alternatives",
    },
    "timeWindow": Object {
      "flags": Object {
        "default": "7d",
        "error": [Function],
        "presence": "optional",
      },
      "rules": Array [
        Object {
          "args": Object {
            "method": [Function],
          },
          "name": "custom",
        },
        Object {
          "args": Object {
            "method": [Function],
          },
          "name": "custom",
        },
      ],
      "type": "string",
    },
  },
  "type": "object",
}
`;

exports[`Connector type config checks detect connector type changes for: .cases 2`] = `
Object {
  "flags": Object {
    "default": Object {
      "special": "deep",
    },
    "error": [Function],
    "presence": "optional",
  },
  "keys": Object {},
  "type": "object",
}
`;

exports[`Connector type config checks detect connector type changes for: .cases 3`] = `
Object {
  "flags": Object {
    "default": Object {
      "special": "deep",
    },
    "error": [Function],
    "presence": "optional",
  },
  "keys": Object {},
  "type": "object",
}
`;

exports[`Connector type config checks detect connector type changes for: .cases 4`] = `
Object {
  "flags": Object {
    "default": Object {
      "special": "deep",
    },
    "error": [Function],
    "presence": "optional",
  },
  "keys": Object {
    "subAction": Object {
      "flags": Object {
        "error": [Function],
      },
      "rules": Array [
        Object {
          "args": Object {
            "method": [Function],
          },
          "name": "custom",
        },
      ],
      "type": "string",
    },
    "subActionParams": Object {
      "flags": Object {
        "default": Object {
          "special": "deep",
        },
        "error": [Function],
        "presence": "optional",
        "unknown": true,
      },
      "keys": Object {},
      "preferences": Object {
        "stripUnknown": Object {
          "objects": false,
        },
      },
      "type": "object",
    },
  },
  "type": "object",
}
`;

exports[`Connector type config checks detect connector type changes for: .cases-webhook 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "accessTokenUrl": Object {
          "type": "string",
        },
        "additionalFields": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "authType": Object {
          "default": "webhook-authentication-basic",
          "enum": Array [
            "webhook-authentication-basic",
            "webhook-authentication-ssl",
            "webhook-oauth2-client-credentials",
            null,
          ],
          "type": Array [
            "string",
            "null",
          ],
        },
        "ca": Object {
          "type": "string",
        },
        "certType": Object {
          "enum": Array [
            "ssl-crt-key",
            "ssl-pfx",
          ],
          "type": "string",
        },
        "clientId": Object {
          "type": "string",
        },
        "createCommentJson": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "createCommentMethod": Object {
          "anyOf": Array [
            Object {
              "default": "put",
              "enum": Array [
                "post",
                "put",
                "patch",
              ],
              "type": "string",
            },
            Object {
              "type": "null",
            },
          ],
        },
        "createCommentUrl": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "createIncidentJson": Object {
          "type": "string",
        },
        "createIncidentMethod": Object {
          "default": "post",
          "enum": Array [
            "post",
            "put",
          ],
          "type": "string",
        },
        "createIncidentResponseKey": Object {
          "type": "string",
        },
        "createIncidentUrl": Object {
          "type": "string",
        },
        "getIncidentJson": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "getIncidentMethod": Object {
          "default": "get",
          "enum": Array [
            "get",
            "post",
          ],
          "type": "string",
        },
        "getIncidentResponseExternalTitleKey": Object {
          "type": "string",
        },
        "getIncidentUrl": Object {
          "type": "string",
        },
        "hasAuth": Object {
          "default": true,
          "type": "boolean",
        },
        "headers": Object {
          "anyOf": Array [
            Object {
              "additionalProperties": Object {
                "type": "string",
              },
              "type": "object",
            },
            Object {
              "type": "null",
            },
          ],
        },
        "scope": Object {
          "type": "string",
        },
        "updateIncidentJson": Object {
          "type": "string",
        },
        "updateIncidentMethod": Object {
          "default": "put",
          "enum": Array [
            "post",
            "patch",
            "put",
          ],
          "type": "string",
        },
        "updateIncidentUrl": Object {
          "type": "string",
        },
        "verificationMode": Object {
          "enum": Array [
            "none",
            "certificate",
            "full",
          ],
          "type": "string",
        },
        "viewIncidentUrl": Object {
          "type": "string",
        },
      },
      "required": Array [
        "createIncidentUrl",
        "createIncidentJson",
        "createIncidentResponseKey",
        "getIncidentUrl",
        "getIncidentJson",
        "getIncidentResponseExternalTitleKey",
        "viewIncidentUrl",
        "updateIncidentUrl",
        "updateIncidentJson",
        "createCommentUrl",
        "createCommentJson",
        "headers",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .cases-webhook 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "clientSecret": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "crt": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "key": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "password": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "pfx": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "secretHeaders": Object {
          "anyOf": Array [
            Object {
              "additionalProperties": Object {
                "type": "string",
              },
              "type": "object",
            },
            Object {
              "type": "null",
            },
          ],
        },
        "user": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
      },
      "required": Array [
        "user",
        "password",
        "crt",
        "key",
        "pfx",
        "clientSecret",
        "secretHeaders",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .cases-webhook 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "anyOf": Array [
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "pushToService",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "comments": Object {
                  "anyOf": Array [
                    Object {
                      "items": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "comment": Object {
                            "type": "string",
                          },
                          "commentId": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "comment",
                          "commentId",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    Object {
                      "type": "null",
                    },
                  ],
                },
                "incident": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "description": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "externalId": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "id": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "severity": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "status": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "tags": Object {
                      "anyOf": Array [
                        Object {
                          "items": Object {
                            "type": "string",
                          },
                          "type": "array",
                        },
                        Object {
                          "type": "null",
                        },
                      ],
                    },
                    "title": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "title",
                    "description",
                    "id",
                    "severity",
                    "status",
                    "externalId",
                    "tags",
                  ],
                  "type": "object",
                },
              },
              "required": Array [
                "incident",
                "comments",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
      ],
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .crowdstrike 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "url": Object {
          "type": "string",
        },
      },
      "required": Array [
        "url",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .crowdstrike 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "clientId": Object {
          "type": "string",
        },
        "clientSecret": Object {
          "type": "string",
        },
      },
      "required": Array [
        "clientId",
        "clientSecret",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .crowdstrike 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .d3security 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "url": Object {
          "type": "string",
        },
      },
      "required": Array [
        "url",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .d3security 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "token": Object {
          "type": "string",
        },
      },
      "required": Array [
        "token",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .d3security 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .email 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "clientId": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "from": Object {
          "type": "string",
        },
        "hasAuth": Object {
          "default": true,
          "type": "boolean",
        },
        "host": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "oauthTokenUrl": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "port": Object {
          "anyOf": Array [
            Object {
              "maximum": 65535,
              "minimum": 1,
              "type": "number",
            },
            Object {
              "type": "null",
            },
          ],
        },
        "secure": Object {
          "type": Array [
            "boolean",
            "null",
          ],
        },
        "service": Object {
          "default": "other",
          "type": "string",
        },
        "tenantId": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
      },
      "required": Array [
        "host",
        "port",
        "secure",
        "from",
        "tenantId",
        "clientId",
        "oauthTokenUrl",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .email 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "clientSecret": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "password": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "user": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
      },
      "required": Array [
        "user",
        "password",
        "clientSecret",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .email 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "attachments": Object {
          "items": Object {
            "additionalProperties": false,
            "properties": Object {
              "content": Object {
                "type": "string",
              },
              "contentType": Object {
                "type": "string",
              },
              "encoding": Object {
                "type": "string",
              },
              "filename": Object {
                "type": "string",
              },
            },
            "required": Array [
              "content",
              "filename",
            ],
            "type": "object",
          },
          "type": "array",
        },
        "bcc": Object {
          "default": Array [],
          "items": Object {
            "type": "string",
          },
          "type": "array",
        },
        "cc": Object {
          "default": Array [],
          "items": Object {
            "type": "string",
          },
          "type": "array",
        },
        "kibanaFooterLink": Object {
          "additionalProperties": false,
          "properties": Object {
            "path": Object {
              "default": "/",
              "type": "string",
            },
            "text": Object {
              "default": "Go to Elastic",
              "type": "string",
            },
          },
          "type": "object",
        },
        "message": Object {
          "type": "string",
        },
        "messageHTML": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "subject": Object {
          "type": "string",
        },
        "to": Object {
          "default": Array [],
          "items": Object {
            "type": "string",
          },
          "type": "array",
        },
      },
      "required": Array [
        "subject",
        "message",
        "messageHTML",
        "kibanaFooterLink",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .gemini 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiUrl": Object {
          "type": "string",
        },
        "contextWindowLength": Object {
          "type": "number",
        },
        "defaultModel": Object {
          "default": "gemini-2.5-pro",
          "type": "string",
        },
        "gcpProjectID": Object {
          "type": "string",
        },
        "gcpRegion": Object {
          "type": "string",
        },
      },
      "required": Array [
        "apiUrl",
        "gcpRegion",
        "gcpProjectID",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .gemini 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "credentialsJson": Object {
          "type": "string",
        },
      },
      "required": Array [
        "credentialsJson",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .gemini 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .gen-ai 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "anyOf": Array [
        Object {
          "additionalProperties": false,
          "properties": Object {
            "apiProvider": Object {
              "enum": Array [
                "Azure OpenAI",
              ],
              "type": "string",
            },
            "apiUrl": Object {
              "type": "string",
            },
            "contextWindowLength": Object {
              "type": "number",
            },
            "headers": Object {
              "additionalProperties": Object {
                "type": "string",
              },
              "type": "object",
            },
          },
          "required": Array [
            "apiProvider",
            "apiUrl",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "apiProvider": Object {
              "enum": Array [
                "OpenAI",
              ],
              "type": "string",
            },
            "apiUrl": Object {
              "type": "string",
            },
            "contextWindowLength": Object {
              "type": "number",
            },
            "defaultModel": Object {
              "default": "gpt-4.1",
              "type": "string",
            },
            "headers": Object {
              "additionalProperties": Object {
                "type": "string",
              },
              "type": "object",
            },
            "organizationId": Object {
              "type": "string",
            },
            "projectId": Object {
              "type": "string",
            },
          },
          "required": Array [
            "apiProvider",
            "apiUrl",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "apiProvider": Object {
              "enum": Array [
                "Other",
              ],
              "type": "string",
            },
            "apiUrl": Object {
              "type": "string",
            },
            "contextWindowLength": Object {
              "type": "number",
            },
            "defaultModel": Object {
              "type": "string",
            },
            "enableNativeFunctionCalling": Object {
              "type": "boolean",
            },
            "headers": Object {
              "additionalProperties": Object {
                "type": "string",
              },
              "type": "object",
            },
            "verificationMode": Object {
              "default": "full",
              "enum": Array [
                "full",
                "certificate",
                "none",
              ],
              "type": "string",
            },
          },
          "required": Array [
            "apiProvider",
            "apiUrl",
            "defaultModel",
          ],
          "type": "object",
        },
      ],
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .gen-ai 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "anyOf": Array [
        Object {
          "additionalProperties": false,
          "properties": Object {
            "apiKey": Object {
              "type": "string",
            },
          },
          "required": Array [
            "apiKey",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "apiKey": Object {
              "minLength": 1,
              "type": "string",
            },
            "caData": Object {
              "minLength": 1,
              "type": "string",
            },
            "certificateData": Object {
              "minLength": 1,
              "type": "string",
            },
            "privateKeyData": Object {
              "minLength": 1,
              "type": "string",
            },
          },
          "type": "object",
        },
      ],
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .gen-ai 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .index 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "executionTimeField": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "index": Object {
          "type": "string",
        },
        "refresh": Object {
          "default": false,
          "type": "boolean",
        },
      },
      "required": Array [
        "index",
        "executionTimeField",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .index 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "default": Object {},
      "properties": Object {},
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .index 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "documents": Object {
          "items": Object {
            "additionalProperties": Object {},
            "type": "object",
          },
          "type": "array",
        },
        "indexOverride": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
      },
      "required": Array [
        "documents",
        "indexOverride",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .inference 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "contextWindowLength": Object {
          "type": "number",
        },
        "inferenceId": Object {
          "type": "string",
        },
        "provider": Object {
          "type": "string",
        },
        "providerConfig": Object {
          "additionalProperties": true,
          "default": Object {},
          "properties": Object {},
          "type": "object",
        },
        "taskType": Object {
          "type": "string",
        },
        "taskTypeConfig": Object {
          "additionalProperties": true,
          "default": Object {},
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "provider",
        "taskType",
        "inferenceId",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .inference 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "providerSecrets": Object {
          "additionalProperties": true,
          "default": Object {},
          "properties": Object {},
          "type": "object",
        },
      },
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .inference 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .jira 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiUrl": Object {
          "type": "string",
        },
        "projectKey": Object {
          "type": "string",
        },
      },
      "required": Array [
        "apiUrl",
        "projectKey",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .jira 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiToken": Object {
          "type": "string",
        },
        "email": Object {
          "type": "string",
        },
      },
      "required": Array [
        "email",
        "apiToken",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .jira 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "anyOf": Array [
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "getFields",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {},
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "getIncident",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "externalId": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "externalId",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "handshake",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {},
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "pushToService",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "comments": Object {
                  "anyOf": Array [
                    Object {
                      "items": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "comment": Object {
                            "type": "string",
                          },
                          "commentId": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "comment",
                          "commentId",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    Object {
                      "type": "null",
                    },
                  ],
                },
                "incident": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "description": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "externalId": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "issueType": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "labels": Object {
                      "anyOf": Array [
                        Object {
                          "items": Object {
                            "type": "string",
                          },
                          "type": "array",
                        },
                        Object {
                          "type": "null",
                        },
                      ],
                    },
                    "otherFields": Object {
                      "anyOf": Array [
                        Object {
                          "additionalProperties": Object {},
                          "type": "object",
                        },
                        Object {
                          "type": "null",
                        },
                      ],
                    },
                    "parent": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "priority": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "summary": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "summary",
                    "description",
                    "externalId",
                    "issueType",
                    "priority",
                    "labels",
                    "parent",
                    "otherFields",
                  ],
                  "type": "object",
                },
              },
              "required": Array [
                "incident",
                "comments",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "issueTypes",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {},
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "fieldsByIssueType",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "id": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "id",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "issues",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "title": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "title",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "issue",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "id": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "id",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
      ],
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .jira-service-management 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiUrl": Object {
          "type": "string",
        },
      },
      "required": Array [
        "apiUrl",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .jira-service-management 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiKey": Object {
          "type": "string",
        },
      },
      "required": Array [
        "apiKey",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .jira-service-management 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .microsoft_defender_endpoint 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiUrl": Object {
          "minLength": 1,
          "type": "string",
        },
        "clientId": Object {
          "minLength": 1,
          "type": "string",
        },
        "oAuthScope": Object {
          "minLength": 1,
          "type": "string",
        },
        "oAuthServerUrl": Object {
          "minLength": 1,
          "type": "string",
        },
        "tenantId": Object {
          "minLength": 1,
          "type": "string",
        },
      },
      "required": Array [
        "clientId",
        "tenantId",
        "oAuthServerUrl",
        "oAuthScope",
        "apiUrl",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .microsoft_defender_endpoint 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "clientSecret": Object {
          "minLength": 1,
          "type": "string",
        },
      },
      "required": Array [
        "clientSecret",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .microsoft_defender_endpoint 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .observability-ai-assistant 1`] = `
Object {
  "flags": Object {
    "default": Object {
      "special": "deep",
    },
    "error": [Function],
    "presence": "optional",
  },
  "keys": Object {},
  "type": "object",
}
`;

exports[`Connector type config checks detect connector type changes for: .observability-ai-assistant 2`] = `
Object {
  "flags": Object {
    "default": Object {
      "special": "deep",
    },
    "error": [Function],
    "presence": "optional",
  },
  "keys": Object {},
  "type": "object",
}
`;

exports[`Connector type config checks detect connector type changes for: .observability-ai-assistant 3`] = `
Object {
  "flags": Object {
    "default": Object {
      "special": "deep",
    },
    "error": [Function],
    "presence": "optional",
  },
  "keys": Object {
    "alerts": Object {
      "flags": Object {
        "default": Object {
          "special": "deep",
        },
        "error": [Function],
        "presence": "optional",
      },
      "keys": Object {
        "new": Object {
          "flags": Object {
            "error": [Function],
          },
          "items": Array [
            Object {
              "flags": Object {
                "error": [Function],
                "presence": "optional",
              },
              "metas": Array [
                Object {
                  "x-oas-get-additional-properties": [Function],
                },
              ],
              "rules": Array [
                Object {
                  "args": Object {
                    "key": Object {
                      "flags": Object {
                        "error": [Function],
                      },
                      "rules": Array [
                        Object {
                          "args": Object {
                            "method": [Function],
                          },
                          "name": "custom",
                        },
                      ],
                      "type": "string",
                    },
                    "value": Object {
                      "flags": Object {
                        "error": [Function],
                      },
                      "metas": Array [
                        Object {
                          "x-oas-any-type": true,
                        },
                      ],
                      "type": "any",
                    },
                  },
                  "name": "entries",
                },
              ],
              "type": "record",
            },
          ],
          "type": "array",
        },
        "recovered": Object {
          "flags": Object {
            "error": [Function],
          },
          "items": Array [
            Object {
              "flags": Object {
                "error": [Function],
                "presence": "optional",
              },
              "metas": Array [
                Object {
                  "x-oas-get-additional-properties": [Function],
                },
              ],
              "rules": Array [
                Object {
                  "args": Object {
                    "key": Object {
                      "flags": Object {
                        "error": [Function],
                      },
                      "rules": Array [
                        Object {
                          "args": Object {
                            "method": [Function],
                          },
                          "name": "custom",
                        },
                      ],
                      "type": "string",
                    },
                    "value": Object {
                      "flags": Object {
                        "error": [Function],
                      },
                      "metas": Array [
                        Object {
                          "x-oas-any-type": true,
                        },
                      ],
                      "type": "any",
                    },
                  },
                  "name": "entries",
                },
              ],
              "type": "record",
            },
          ],
          "type": "array",
        },
      },
      "type": "object",
    },
    "connector": Object {
      "flags": Object {
        "error": [Function],
      },
      "rules": Array [
        Object {
          "args": Object {
            "method": [Function],
          },
          "name": "custom",
        },
      ],
      "type": "string",
    },
    "prompts": Object {
      "flags": Object {
        "error": [Function],
      },
      "items": Array [
        Object {
          "flags": Object {
            "default": Object {
              "special": "deep",
            },
            "error": [Function],
            "presence": "optional",
          },
          "keys": Object {
            "message": Object {
              "flags": Object {
                "error": [Function],
              },
              "metas": Array [
                Object {
                  "x-oas-min-length": 1,
                },
              ],
              "rules": Array [
                Object {
                  "args": Object {
                    "method": [Function],
                  },
                  "name": "custom",
                },
                Object {
                  "args": Object {
                    "method": [Function],
                  },
                  "name": "custom",
                },
              ],
              "type": "string",
            },
            "statuses": Object {
              "flags": Object {
                "error": [Function],
              },
              "items": Array [
                Object {
                  "flags": Object {
                    "error": [Function],
                    "presence": "optional",
                  },
                  "rules": Array [
                    Object {
                      "args": Object {
                        "method": [Function],
                      },
                      "name": "custom",
                    },
                  ],
                  "type": "string",
                },
              ],
              "type": "array",
            },
          },
          "type": "object",
        },
      ],
      "type": "array",
    },
    "rule": Object {
      "flags": Object {
        "default": Object {
          "special": "deep",
        },
        "error": [Function],
        "presence": "optional",
      },
      "keys": Object {
        "id": Object {
          "flags": Object {
            "error": [Function],
          },
          "rules": Array [
            Object {
              "args": Object {
                "method": [Function],
              },
              "name": "custom",
            },
          ],
          "type": "string",
        },
        "name": Object {
          "flags": Object {
            "error": [Function],
          },
          "rules": Array [
            Object {
              "args": Object {
                "method": [Function],
              },
              "name": "custom",
            },
          ],
          "type": "string",
        },
        "ruleUrl": Object {
          "flags": Object {
            "default": null,
            "error": [Function],
            "presence": "optional",
          },
          "matches": Array [
            Object {
              "schema": Object {
                "flags": Object {
                  "error": [Function],
                },
                "rules": Array [
                  Object {
                    "args": Object {
                      "method": [Function],
                    },
                    "name": "custom",
                  },
                ],
                "type": "string",
              },
            },
            Object {
              "schema": Object {
                "allow": Array [
                  null,
                ],
                "flags": Object {
                  "error": [Function],
                  "only": true,
                },
                "type": "any",
              },
            },
          ],
          "type": "alternatives",
        },
        "tags": Object {
          "flags": Object {
            "default": Array [],
            "error": [Function],
            "presence": "optional",
          },
          "items": Array [
            Object {
              "flags": Object {
                "error": [Function],
                "presence": "optional",
              },
              "rules": Array [
                Object {
                  "args": Object {
                    "method": [Function],
                  },
                  "name": "custom",
                },
              ],
              "type": "string",
            },
          ],
          "type": "array",
        },
      },
      "type": "object",
    },
  },
  "type": "object",
}
`;

exports[`Connector type config checks detect connector type changes for: .opsgenie 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiUrl": Object {
          "type": "string",
        },
      },
      "required": Array [
        "apiUrl",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .opsgenie 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiKey": Object {
          "type": "string",
        },
      },
      "required": Array [
        "apiKey",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .opsgenie 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .pagerduty 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiUrl": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
      },
      "required": Array [
        "apiUrl",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .pagerduty 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "routingKey": Object {
          "type": "string",
        },
      },
      "required": Array [
        "routingKey",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .pagerduty 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "class": Object {
          "type": "string",
        },
        "component": Object {
          "type": "string",
        },
        "customDetails": Object {
          "additionalProperties": Object {},
          "type": "object",
        },
        "dedupKey": Object {
          "maxLength": 255,
          "type": "string",
        },
        "eventAction": Object {
          "enum": Array [
            "trigger",
            "resolve",
            "acknowledge",
          ],
          "type": "string",
        },
        "group": Object {
          "type": "string",
        },
        "links": Object {
          "items": Object {
            "additionalProperties": false,
            "properties": Object {
              "href": Object {
                "type": "string",
              },
              "text": Object {
                "type": "string",
              },
            },
            "required": Array [
              "href",
              "text",
            ],
            "type": "object",
          },
          "type": "array",
        },
        "severity": Object {
          "enum": Array [
            "critical",
            "error",
            "warning",
            "info",
          ],
          "type": "string",
        },
        "source": Object {
          "type": "string",
        },
        "summary": Object {
          "maxLength": 1024,
          "type": "string",
        },
        "timestamp": Object {
          "type": "string",
        },
      },
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .resilient 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiUrl": Object {
          "type": "string",
        },
        "orgId": Object {
          "type": "string",
        },
      },
      "required": Array [
        "apiUrl",
        "orgId",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .resilient 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiKeyId": Object {
          "type": "string",
        },
        "apiKeySecret": Object {
          "type": "string",
        },
      },
      "required": Array [
        "apiKeyId",
        "apiKeySecret",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .resilient 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .sentinelone 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "url": Object {
          "type": "string",
        },
      },
      "required": Array [
        "url",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .sentinelone 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "token": Object {
          "type": "string",
        },
      },
      "required": Array [
        "token",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .sentinelone 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .server-log 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "default": Object {},
      "properties": Object {},
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .server-log 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "default": Object {},
      "properties": Object {},
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .server-log 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "level": Object {
          "default": "info",
          "enum": Array [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal",
          ],
          "type": "string",
        },
        "message": Object {
          "type": "string",
        },
      },
      "required": Array [
        "message",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .servicenow 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiUrl": Object {
          "type": "string",
        },
        "clientId": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "isOAuth": Object {
          "default": false,
          "type": "boolean",
        },
        "jwtKeyId": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "userIdentifierValue": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "usesTableApi": Object {
          "default": true,
          "type": "boolean",
        },
      },
      "required": Array [
        "apiUrl",
        "userIdentifierValue",
        "clientId",
        "jwtKeyId",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .servicenow 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "clientSecret": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "password": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "privateKey": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "privateKeyPassword": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "username": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
      },
      "required": Array [
        "password",
        "username",
        "clientSecret",
        "privateKey",
        "privateKeyPassword",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .servicenow 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "anyOf": Array [
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "getFields",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {},
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "getIncident",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "externalId": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "externalId",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "handshake",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {},
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "pushToService",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "comments": Object {
                  "anyOf": Array [
                    Object {
                      "items": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "comment": Object {
                            "type": "string",
                          },
                          "commentId": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "comment",
                          "commentId",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    Object {
                      "type": "null",
                    },
                  ],
                },
                "incident": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "additional_fields": Object {
                      "anyOf": Array [
                        Object {
                          "additionalProperties": Object {},
                          "type": "object",
                        },
                        Object {
                          "type": "null",
                        },
                      ],
                    },
                    "category": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "correlation_display": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "correlation_id": Object {
                      "default": "{{rule.id}}:{{alert.id}}",
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "description": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "externalId": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "impact": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "severity": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "short_description": Object {
                      "type": "string",
                    },
                    "subcategory": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "urgency": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                  },
                  "required": Array [
                    "short_description",
                    "description",
                    "externalId",
                    "category",
                    "subcategory",
                    "correlation_display",
                    "additional_fields",
                    "severity",
                    "urgency",
                    "impact",
                  ],
                  "type": "object",
                },
              },
              "required": Array [
                "incident",
                "comments",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "getChoices",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "fields": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
              "required": Array [
                "fields",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "closeIncident",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "incident": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "correlation_id": Object {
                      "anyOf": Array [
                        Object {
                          "default": "{{rule.id}}:{{alert.id}}",
                          "type": "string",
                        },
                        Object {
                          "type": "null",
                        },
                      ],
                    },
                    "externalId": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                  },
                  "required": Array [
                    "externalId",
                  ],
                  "type": "object",
                },
              },
              "required": Array [
                "incident",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
      ],
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .servicenow-itom 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiUrl": Object {
          "type": "string",
        },
        "clientId": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "isOAuth": Object {
          "default": false,
          "type": "boolean",
        },
        "jwtKeyId": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "userIdentifierValue": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
      },
      "required": Array [
        "apiUrl",
        "userIdentifierValue",
        "clientId",
        "jwtKeyId",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .servicenow-itom 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "clientSecret": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "password": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "privateKey": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "privateKeyPassword": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "username": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
      },
      "required": Array [
        "password",
        "username",
        "clientSecret",
        "privateKey",
        "privateKeyPassword",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .servicenow-itom 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "anyOf": Array [
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "addEvent",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "additional_info": Object {
                  "type": Array [
                    "string",
                    "null",
                  ],
                },
                "description": Object {
                  "type": Array [
                    "string",
                    "null",
                  ],
                },
                "event_class": Object {
                  "type": Array [
                    "string",
                    "null",
                  ],
                },
                "message_key": Object {
                  "default": "{{rule.id}}:{{alert.id}}",
                  "type": Array [
                    "string",
                    "null",
                  ],
                },
                "metric_name": Object {
                  "type": Array [
                    "string",
                    "null",
                  ],
                },
                "node": Object {
                  "type": Array [
                    "string",
                    "null",
                  ],
                },
                "resource": Object {
                  "type": Array [
                    "string",
                    "null",
                  ],
                },
                "severity": Object {
                  "type": Array [
                    "string",
                    "null",
                  ],
                },
                "source": Object {
                  "type": Array [
                    "string",
                    "null",
                  ],
                },
                "time_of_event": Object {
                  "type": Array [
                    "string",
                    "null",
                  ],
                },
                "type": Object {
                  "type": Array [
                    "string",
                    "null",
                  ],
                },
              },
              "required": Array [
                "source",
                "event_class",
                "resource",
                "node",
                "metric_name",
                "type",
                "severity",
                "description",
                "additional_info",
                "time_of_event",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "getChoices",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "fields": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
              "required": Array [
                "fields",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
      ],
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .servicenow-sir 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiUrl": Object {
          "type": "string",
        },
        "clientId": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "isOAuth": Object {
          "default": false,
          "type": "boolean",
        },
        "jwtKeyId": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "userIdentifierValue": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "usesTableApi": Object {
          "default": true,
          "type": "boolean",
        },
      },
      "required": Array [
        "apiUrl",
        "userIdentifierValue",
        "clientId",
        "jwtKeyId",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .servicenow-sir 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "clientSecret": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "password": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "privateKey": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "privateKeyPassword": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "username": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
      },
      "required": Array [
        "password",
        "username",
        "clientSecret",
        "privateKey",
        "privateKeyPassword",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .servicenow-sir 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "anyOf": Array [
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "getFields",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {},
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "getIncident",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "externalId": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "externalId",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "handshake",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {},
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "pushToService",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "comments": Object {
                  "anyOf": Array [
                    Object {
                      "items": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "comment": Object {
                            "type": "string",
                          },
                          "commentId": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "comment",
                          "commentId",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    Object {
                      "type": "null",
                    },
                  ],
                },
                "incident": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "additional_fields": Object {
                      "anyOf": Array [
                        Object {
                          "additionalProperties": Object {},
                          "type": "object",
                        },
                        Object {
                          "type": "null",
                        },
                      ],
                    },
                    "category": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "correlation_display": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "correlation_id": Object {
                      "default": "{{rule.id}}:{{alert.id}}",
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "description": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "dest_ip": Object {
                      "anyOf": Array [
                        Object {
                          "type": Array [
                            "string",
                            "null",
                          ],
                        },
                        Object {
                          "items": Object {
                            "type": Array [
                              "string",
                              "null",
                            ],
                          },
                          "type": "array",
                        },
                      ],
                      "default": null,
                    },
                    "externalId": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "malware_hash": Object {
                      "anyOf": Array [
                        Object {
                          "type": Array [
                            "string",
                            "null",
                          ],
                        },
                        Object {
                          "items": Object {
                            "type": Array [
                              "string",
                              "null",
                            ],
                          },
                          "type": "array",
                        },
                      ],
                      "default": null,
                    },
                    "malware_url": Object {
                      "anyOf": Array [
                        Object {
                          "type": Array [
                            "string",
                            "null",
                          ],
                        },
                        Object {
                          "items": Object {
                            "type": Array [
                              "string",
                              "null",
                            ],
                          },
                          "type": "array",
                        },
                      ],
                      "default": null,
                    },
                    "priority": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "short_description": Object {
                      "type": "string",
                    },
                    "source_ip": Object {
                      "anyOf": Array [
                        Object {
                          "type": Array [
                            "string",
                            "null",
                          ],
                        },
                        Object {
                          "items": Object {
                            "type": Array [
                              "string",
                              "null",
                            ],
                          },
                          "type": "array",
                        },
                      ],
                      "default": null,
                    },
                    "subcategory": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                  },
                  "required": Array [
                    "short_description",
                    "description",
                    "externalId",
                    "category",
                    "subcategory",
                    "correlation_display",
                    "additional_fields",
                    "priority",
                  ],
                  "type": "object",
                },
              },
              "required": Array [
                "incident",
                "comments",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "getChoices",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "fields": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "type": "array",
                },
              },
              "required": Array [
                "fields",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
      ],
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .slack 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "default": Object {},
      "properties": Object {},
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .slack 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "webhookUrl": Object {
          "type": "string",
        },
      },
      "required": Array [
        "webhookUrl",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .slack 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "message": Object {
          "minLength": 1,
          "type": "string",
        },
      },
      "required": Array [
        "message",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .slack_api 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "allowedChannels": Object {
          "items": Object {
            "additionalProperties": false,
            "properties": Object {
              "id": Object {
                "minLength": 1,
                "type": "string",
              },
              "name": Object {
                "minLength": 1,
                "type": "string",
              },
            },
            "required": Array [
              "id",
              "name",
            ],
            "type": "object",
          },
          "maxItems": 25,
          "type": "array",
        },
        "defaultChannel": Object {
          "minLength": 1,
          "type": "string",
        },
      },
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .slack_api 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "token": Object {
          "minLength": 1,
          "type": "string",
        },
      },
      "required": Array [
        "token",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .slack_api 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "anyOf": Array [
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "validChannelId",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "channelId": Object {
                  "type": "string",
                },
              },
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "postMessage",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "channelIds": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "maxItems": 1,
                  "type": "array",
                },
                "channels": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "maxItems": 1,
                  "type": "array",
                },
                "text": Object {
                  "minLength": 1,
                  "type": "string",
                },
              },
              "required": Array [
                "text",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "postBlockkit",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "channelIds": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "maxItems": 1,
                  "type": "array",
                },
                "channels": Object {
                  "items": Object {
                    "type": "string",
                  },
                  "maxItems": 1,
                  "type": "array",
                },
                "text": Object {
                  "type": "string",
                },
              },
              "required": Array [
                "text",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
      ],
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .swimlane 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiUrl": Object {
          "type": "string",
        },
        "appId": Object {
          "type": "string",
        },
        "connectorType": Object {
          "enum": Array [
            "all",
            "alerts",
            "cases",
          ],
          "type": "string",
        },
        "mappings": Object {
          "additionalProperties": false,
          "properties": Object {
            "alertIdConfig": Object {
              "anyOf": Array [
                Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "fieldType": Object {
                      "type": "string",
                    },
                    "id": Object {
                      "type": "string",
                    },
                    "key": Object {
                      "type": "string",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "id",
                    "key",
                    "name",
                    "fieldType",
                  ],
                  "type": "object",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "caseIdConfig": Object {
              "anyOf": Array [
                Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "fieldType": Object {
                      "type": "string",
                    },
                    "id": Object {
                      "type": "string",
                    },
                    "key": Object {
                      "type": "string",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "id",
                    "key",
                    "name",
                    "fieldType",
                  ],
                  "type": "object",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "caseNameConfig": Object {
              "anyOf": Array [
                Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "fieldType": Object {
                      "type": "string",
                    },
                    "id": Object {
                      "type": "string",
                    },
                    "key": Object {
                      "type": "string",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "id",
                    "key",
                    "name",
                    "fieldType",
                  ],
                  "type": "object",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "commentsConfig": Object {
              "anyOf": Array [
                Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "fieldType": Object {
                      "type": "string",
                    },
                    "id": Object {
                      "type": "string",
                    },
                    "key": Object {
                      "type": "string",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "id",
                    "key",
                    "name",
                    "fieldType",
                  ],
                  "type": "object",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "descriptionConfig": Object {
              "anyOf": Array [
                Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "fieldType": Object {
                      "type": "string",
                    },
                    "id": Object {
                      "type": "string",
                    },
                    "key": Object {
                      "type": "string",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "id",
                    "key",
                    "name",
                    "fieldType",
                  ],
                  "type": "object",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "ruleNameConfig": Object {
              "anyOf": Array [
                Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "fieldType": Object {
                      "type": "string",
                    },
                    "id": Object {
                      "type": "string",
                    },
                    "key": Object {
                      "type": "string",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "id",
                    "key",
                    "name",
                    "fieldType",
                  ],
                  "type": "object",
                },
                Object {
                  "type": "null",
                },
              ],
            },
            "severityConfig": Object {
              "anyOf": Array [
                Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "fieldType": Object {
                      "type": "string",
                    },
                    "id": Object {
                      "type": "string",
                    },
                    "key": Object {
                      "type": "string",
                    },
                    "name": Object {
                      "type": "string",
                    },
                  },
                  "required": Array [
                    "id",
                    "key",
                    "name",
                    "fieldType",
                  ],
                  "type": "object",
                },
                Object {
                  "type": "null",
                },
              ],
            },
          },
          "required": Array [
            "ruleNameConfig",
            "alertIdConfig",
            "caseIdConfig",
            "caseNameConfig",
            "commentsConfig",
            "severityConfig",
            "descriptionConfig",
          ],
          "type": "object",
        },
      },
      "required": Array [
        "apiUrl",
        "appId",
        "connectorType",
        "mappings",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .swimlane 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiToken": Object {
          "type": "string",
        },
      },
      "required": Array [
        "apiToken",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .swimlane 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "anyOf": Array [
        Object {
          "additionalProperties": false,
          "properties": Object {
            "subAction": Object {
              "const": "pushToService",
              "type": "string",
            },
            "subActionParams": Object {
              "additionalProperties": false,
              "properties": Object {
                "comments": Object {
                  "anyOf": Array [
                    Object {
                      "items": Object {
                        "additionalProperties": false,
                        "properties": Object {
                          "comment": Object {
                            "type": "string",
                          },
                          "commentId": Object {
                            "type": "string",
                          },
                        },
                        "required": Array [
                          "comment",
                          "commentId",
                        ],
                        "type": "object",
                      },
                      "type": "array",
                    },
                    Object {
                      "type": "null",
                    },
                  ],
                },
                "incident": Object {
                  "additionalProperties": false,
                  "properties": Object {
                    "alertId": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "caseId": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "caseName": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "description": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "externalId": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "ruleName": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                    "severity": Object {
                      "type": Array [
                        "string",
                        "null",
                      ],
                    },
                  },
                  "required": Array [
                    "alertId",
                    "ruleName",
                    "caseId",
                    "caseName",
                    "severity",
                    "description",
                    "externalId",
                  ],
                  "type": "object",
                },
              },
              "required": Array [
                "incident",
                "comments",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "subAction",
            "subActionParams",
          ],
          "type": "object",
        },
      ],
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .teams 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "default": Object {},
      "properties": Object {},
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .teams 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "webhookUrl": Object {
          "type": "string",
        },
      },
      "required": Array [
        "webhookUrl",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .teams 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "message": Object {
          "minLength": 1,
          "type": "string",
        },
      },
      "required": Array [
        "message",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .thehive 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "organisation": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "url": Object {
          "type": "string",
        },
      },
      "required": Array [
        "url",
        "organisation",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .thehive 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiKey": Object {
          "type": "string",
        },
      },
      "required": Array [
        "apiKey",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .thehive 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .tines 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "url": Object {
          "type": "string",
        },
      },
      "required": Array [
        "url",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .tines 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "email": Object {
          "type": "string",
        },
        "token": Object {
          "type": "string",
        },
      },
      "required": Array [
        "email",
        "token",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .tines 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .torq 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "webhookIntegrationUrl": Object {
          "type": "string",
        },
      },
      "required": Array [
        "webhookIntegrationUrl",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .torq 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "token": Object {
          "type": "string",
        },
      },
      "required": Array [
        "token",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .torq 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "body": Object {
          "type": "string",
        },
      },
      "required": Array [
        "body",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .webhook 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "accessTokenUrl": Object {
          "type": "string",
        },
        "additionalFields": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "authType": Object {
          "default": "webhook-authentication-basic",
          "enum": Array [
            "webhook-authentication-basic",
            "webhook-authentication-ssl",
            "webhook-oauth2-client-credentials",
            null,
          ],
          "type": Array [
            "string",
            "null",
          ],
        },
        "ca": Object {
          "type": "string",
        },
        "certType": Object {
          "enum": Array [
            "ssl-crt-key",
            "ssl-pfx",
          ],
          "type": "string",
        },
        "clientId": Object {
          "type": "string",
        },
        "hasAuth": Object {
          "default": true,
          "type": "boolean",
        },
        "headers": Object {
          "anyOf": Array [
            Object {
              "additionalProperties": Object {
                "type": "string",
              },
              "type": "object",
            },
            Object {
              "type": "null",
            },
          ],
        },
        "method": Object {
          "default": "post",
          "enum": Array [
            "post",
            "put",
            "patch",
            "get",
            "delete",
          ],
          "type": "string",
        },
        "scope": Object {
          "type": "string",
        },
        "url": Object {
          "type": "string",
        },
        "verificationMode": Object {
          "enum": Array [
            "none",
            "certificate",
            "full",
          ],
          "type": "string",
        },
      },
      "required": Array [
        "url",
        "headers",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .webhook 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "clientSecret": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "crt": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "key": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "password": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "pfx": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "secretHeaders": Object {
          "anyOf": Array [
            Object {
              "additionalProperties": Object {
                "type": "string",
              },
              "type": "object",
            },
            Object {
              "type": "null",
            },
          ],
        },
        "user": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
      },
      "required": Array [
        "user",
        "password",
        "crt",
        "key",
        "pfx",
        "clientSecret",
        "secretHeaders",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .webhook 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "body": Object {
          "type": "string",
        },
      },
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .xmatters 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "configUrl": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "usesBasic": Object {
          "default": true,
          "type": "boolean",
        },
      },
      "required": Array [
        "configUrl",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .xmatters 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "password": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "secretsUrl": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
        "user": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
      },
      "required": Array [
        "user",
        "password",
        "secretsUrl",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .xmatters 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "alertActionGroupName": Object {
          "type": "string",
        },
        "date": Object {
          "type": "string",
        },
        "ruleName": Object {
          "type": "string",
        },
        "severity": Object {
          "type": "string",
        },
        "signalId": Object {
          "type": "string",
        },
        "spaceId": Object {
          "type": "string",
        },
        "tags": Object {
          "type": "string",
        },
      },
      "required": Array [
        "severity",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .xsoar 1`] = `
Object {
  "$ref": "#/definitions/config",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "config": Object {
      "additionalProperties": false,
      "properties": Object {
        "url": Object {
          "type": "string",
        },
      },
      "required": Array [
        "url",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .xsoar 2`] = `
Object {
  "$ref": "#/definitions/secrets",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "secrets": Object {
      "additionalProperties": false,
      "properties": Object {
        "apiKey": Object {
          "type": "string",
        },
        "apiKeyID": Object {
          "type": Array [
            "string",
            "null",
          ],
        },
      },
      "required": Array [
        "apiKey",
        "apiKeyID",
      ],
      "type": "object",
    },
  },
}
`;

exports[`Connector type config checks detect connector type changes for: .xsoar 3`] = `
Object {
  "$ref": "#/definitions/params",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": Object {
    "params": Object {
      "additionalProperties": false,
      "properties": Object {
        "subAction": Object {
          "type": "string",
        },
        "subActionParams": Object {
          "additionalProperties": true,
          "properties": Object {},
          "type": "object",
        },
      },
      "required": Array [
        "subAction",
        "subActionParams",
      ],
      "type": "object",
    },
  },
}
`;
