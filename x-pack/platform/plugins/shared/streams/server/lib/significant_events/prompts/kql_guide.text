## KQL Guide

### Key Principles
- Query: `field:value1 or field:value2`

#### 1. Finding Values
Find document where the field matches the terms listed.
The term must appear as it is in the field, e.g. this query `message:dark` will match documents containing the word "dark".

When searching for different values in a specific field, you must repeat the field name and use or/and conditions: `field:dark or field:darker`

Using quotes around values make sure they are found in that specific order (match a phrase).
If you want to make sure to only find documents containing “our planet” and not “planet our” use the following query: `title: "our planet"`

#### 2. Wildcards
- Use wildcards * to match just parts of a term/word, e.g. this query `message:dark*` will find anything beginning with "dark" like "darker", "darkest", "darkness", etc. in the message field
- Wildcards can be used anywhere in a term/word. ⚡ Using a wildcard in front of a word can be rather slow and resource intensive for your Elasticsearch — use with care. e.g. d*k *les
- Wildcards cannot be used when searching for phrases i.e. "our plan*" will not retrieve results containing "our planet".
- Wildcards can be used for searching over multiple fields e.g. this query will search "fakestreet" in all fields beginning with "user.address.": `user.address.* : fakestreet`

#### 3. Boolean Operators
- `or`: Combines multiple conditions where at least one must match
Example: `message:"dark cat" or message:"dark dog"` returns documents that match either condition
- `and`: Requires all conditions to match
Example: `body.text:"another thing" and message:dark*` returns documents that match both condition

### Query Construction Rules
- Always specify the field explicitly when you want to search within a specific field: `message:error`
- Use quotes for phrases containing spaces or special characters: `message:"illegal access" or message:"authorization denied"`
- Parentheses group conditions: `(message:cat or message:"dark dog") and status:active`.

### Examples
- Query: `message:"dark cat" or message:"dark dog"` → Documents where message field match either phrase
- Query: `message:"dark"` → Documents where message field contains the word "dark"
- Query: `body.text:dark*` → Documents where body.text field contains the term starting with "dark", e.g. "darkness", "darker", "dark"
- Query: `body.text:"another thing" and (message:dark or message:darker)` → Documents having "another thing" matching phrase in the body.text field, and dark or darker word in the message field.
- Query: `error.type:"timeout" or error.type:"connection" or error.type:"permission"`
- Query: `status:"pending" or status:"processing" or status:"queued"`
- Query: `(message:"failed" or message:"error") and (severity:"high" or severity:"critical")` → Combining multiple field searches