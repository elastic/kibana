openapi: 3.0.3
info:
  description: Run live queries, manage packs and saved queries.
  title: Security Osquery API (Elastic Cloud Serverless)
  version: '2023-10-31'
servers:
  - url: http://{kibana_host}:{port}
    variables:
      kibana_host:
        default: localhost
      port:
        default: '5601'
paths:
  /api/osquery/live_queries:
    get:
      description: Get a list of all live queries.
      operationId: OsqueryFindLiveQueries
      parameters:
        - in: query
          name: kuery
          required: false
          schema:
            $ref: '#/components/schemas/KueryOrUndefined'
        - in: query
          name: page
          required: false
          schema:
            $ref: '#/components/schemas/PageOrUndefined'
        - in: query
          name: pageSize
          required: false
          schema:
            $ref: '#/components/schemas/PageSizeOrUndefined'
        - in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/SortOrUndefined'
        - in: query
          name: sortOrder
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderOrUndefined'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindLiveQueryResponse'
          description: OK
      summary: Get live queries
      tags:
        - Security Osquery API
    post:
      description: Create and run a live query.
      operationId: OsqueryCreateLiveQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLiveQueryRequestBody'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLiveQueryResponse'
          description: OK
      summary: Create a live query
      tags:
        - Security Osquery API
  /api/osquery/live_queries/{id}:
    get:
      description: Get the details of a live query using the query ID.
      operationId: OsqueryGetLiveQueryDetails
      parameters:
        - in: path
          name: id
          required: true
          schema:
            description: The ID of the live query result you want to retrieve.
            example: 3c42c847-eb30-4452-80e0-728584042334
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindLiveQueryDetailsResponse'
          description: OK
      summary: Get live query details
      tags:
        - Security Osquery API
  /api/osquery/live_queries/{id}/results/{actionId}:
    get:
      description: Get the results of a live query using the query action ID.
      operationId: OsqueryGetLiveQueryResults
      parameters:
        - in: path
          name: id
          required: true
          schema:
            description: The ID of the live query result you want to retrieve.
            example: 3c42c847-eb30-4452-80e0-728584042334
            type: string
        - in: path
          name: actionId
          required: true
          schema:
            description: The ID of the query action that generated the live query results.
            example: 609c4c66-ba3d-43fa-afdd-53e244577aa0
            type: string
        - in: query
          name: kuery
          required: false
          schema:
            $ref: '#/components/schemas/KueryOrUndefined'
        - in: query
          name: page
          required: false
          schema:
            $ref: '#/components/schemas/PageOrUndefined'
        - in: query
          name: pageSize
          required: false
          schema:
            $ref: '#/components/schemas/PageSizeOrUndefined'
        - in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/SortOrUndefined'
        - in: query
          name: sortOrder
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderOrUndefined'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLiveQueryResultsResponse'
          description: OK
      summary: Get live query results
      tags:
        - Security Osquery API
  /api/osquery/packs:
    get:
      description: Get a list of all query packs.
      operationId: OsqueryFindPacks
      parameters:
        - in: query
          name: page
          required: false
          schema:
            $ref: '#/components/schemas/PageOrUndefined'
        - in: query
          name: pageSize
          required: false
          schema:
            $ref: '#/components/schemas/PageSizeOrUndefined'
        - in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/SortOrUndefined'
        - in: query
          name: sortOrder
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderOrUndefined'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindPacksResponse'
          description: OK
      summary: Get packs
      tags:
        - Security Osquery API
    post:
      description: Create a query pack.
      operationId: OsqueryCreatePacks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePacksRequestBody'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePacksResponse'
          description: OK
      summary: Create a pack
      tags:
        - Security Osquery API
  /api/osquery/packs/{id}:
    delete:
      description: Delete a query pack using the pack ID.
      operationId: OsqueryDeletePacks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/PackId'
      responses:
        '200':
          content:
            application/json:
              schema:
                example: {}
                type: object
                properties: {}
          description: OK
      summary: Delete a pack
      tags:
        - Security Osquery API
    get:
      description: Get the details of a query pack using the pack ID.
      operationId: OsqueryGetPacksDetails
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/PackId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindPackResponse'
          description: OK
      summary: Get pack details
      tags:
        - Security Osquery API
    put:
      description: |
        Update a query pack using the pack ID.
        > info
        > You cannot update a prebuilt pack.
      operationId: OsqueryUpdatePacks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/PackId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePacksRequestBody'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePacksResponse'
          description: OK
      summary: Update a pack
      tags:
        - Security Osquery API
  /api/osquery/saved_queries:
    get:
      description: Get a list of all saved queries.
      operationId: OsqueryFindSavedQueries
      parameters:
        - in: query
          name: page
          required: false
          schema:
            $ref: '#/components/schemas/PageOrUndefined'
        - in: query
          name: pageSize
          required: false
          schema:
            $ref: '#/components/schemas/PageSizeOrUndefined'
        - in: query
          name: sort
          required: false
          schema:
            $ref: '#/components/schemas/SortOrUndefined'
        - in: query
          name: sortOrder
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderOrUndefined'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindSavedQueryResponse'
          description: OK
      summary: Get saved queries
      tags:
        - Security Osquery API
    post:
      description: Create and run a saved query.
      operationId: OsqueryCreateSavedQuery
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSavedQueryRequestBody'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSavedQueryResponse'
          description: OK
      summary: Create a saved query
      tags:
        - Security Osquery API
  /api/osquery/saved_queries/{id}:
    delete:
      description: Delete a saved query using the query ID.
      operationId: OsqueryDeleteSavedQuery
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/SavedQueryId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultSuccessResponse'
          description: OK
      summary: Delete a saved query
      tags:
        - Security Osquery API
    get:
      description: Get the details of a saved query using the query ID.
      operationId: OsqueryGetSavedQueryDetails
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/SavedQueryId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindSavedQueryDetailResponse'
          description: OK
      summary: Get saved query details
      tags:
        - Security Osquery API
    put:
      description: |
        Update a saved query using the query ID.
        > info
        > You cannot update a prebuilt saved query.
      operationId: OsqueryUpdateSavedQuery
      parameters:
        - in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/SavedQueryId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSavedQueryRequestBody'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSavedQueryResponse'
          description: OK
      summary: Update a saved query
      tags:
        - Security Osquery API
components:
  schemas:
    ArrayQueries:
      description: An array of queries to run.
      items:
        $ref: '#/components/schemas/ArrayQueriesItem'
      type: array
    ArrayQueriesItem:
      type: object
      properties:
        ecs_mapping:
          $ref: '#/components/schemas/ECSMappingOrUndefined'
        id:
          $ref: '#/components/schemas/QueryId'
        platform:
          $ref: '#/components/schemas/PlatformOrUndefined'
        query:
          $ref: '#/components/schemas/Query'
        removed:
          $ref: '#/components/schemas/RemovedOrUndefined'
        snapshot:
          $ref: '#/components/schemas/SnapshotOrUndefined'
        version:
          $ref: '#/components/schemas/VersionOrUndefined'
    CreateLiveQueryRequestBody:
      example:
        agent_all: true
        ecs_mapping:
          host.uptime:
            field: total_seconds
        query: select * from uptime;
      type: object
      properties:
        agent_all:
          description: When `true`, the query runs on all agents.
          type: boolean
        agent_ids:
          description: A list of agent IDs to run the query on.
          items:
            type: string
          type: array
        agent_platforms:
          description: A list of agent platforms to run the query on.
          items:
            type: string
          type: array
        agent_policy_ids:
          description: A list of agent policy IDs to run the query on.
          items:
            type: string
          type: array
        alert_ids:
          description: A list of alert IDs associated with the live query.
          items:
            type: string
          type: array
        case_ids:
          description: A list of case IDs associated with the live query.
          items:
            type: string
          type: array
        ecs_mapping:
          $ref: '#/components/schemas/ECSMappingOrUndefined'
        event_ids:
          description: A list of event IDs associated with the live query.
          items:
            type: string
          type: array
        metadata:
          description: Custom metadata object associated with the live query.
          nullable: true
          type: object
        pack_id:
          $ref: '#/components/schemas/PackIdOrUndefined'
        queries:
          $ref: '#/components/schemas/ArrayQueries'
        query:
          $ref: '#/components/schemas/QueryOrUndefined'
        saved_query_id:
          $ref: '#/components/schemas/SavedQueryIdOrUndefined'
    CreateLiveQueryResponse:
      example:
        data:
          '@timestamp': '2022-07-26T09:59:32.220Z'
          action_id: 3c42c847-eb30-4452-80e0-728584042334
          agent_all: true
          agent_ids: []
          agent_platforms: []
          agent_policy_ids: []
          agents:
            - 16d7caf5-efd2-4212-9b62-73dafc91fa13
          expiration: '2022-07-26T10:04:32.220Z'
          input_type: osquery
          metadata:
            execution_context:
              name: osquery
              url: /app/osquery/live_queries/new
          queries:
            - action_id: 609c4c66-ba3d-43fa-afdd-53e244577aa0
              agents:
                - 16d7caf5-efd2-4212-9b62-73dafc91fa13
              ecs_mapping:
                host.uptime:
                  field: total_seconds
              id: 6724a474-cbba-41ef-a1aa-66aebf0879e2
              query: select * from uptime;
              timeout: 120
          type: INPUT_ACTION
          user_id: elastic
      type: object
      properties: {}
    CreatePacksRequestBody:
      example:
        description: My pack
        enabled: true
        name: my_pack
        policy_ids:
          - my_policy_id
          - fleet-server-policy
        queries:
          my_query:
            ecs_mapping:
              client.port:
                field: port
              tags:
                value:
                  - tag1
                  - tag2
            interval: 60
            query: SELECT * FROM listening_ports;
            timeout: 120
        shards:
          fleet-server-policy: 58
          my_policy_id: 35
      type: object
      properties:
        description:
          $ref: '#/components/schemas/PackDescriptionOrUndefined'
        enabled:
          $ref: '#/components/schemas/EnabledOrUndefined'
        name:
          $ref: '#/components/schemas/PackName'
        policy_ids:
          $ref: '#/components/schemas/PolicyIdsOrUndefined'
        queries:
          $ref: '#/components/schemas/ObjectQueries'
        shards:
          $ref: '#/components/schemas/Shards'
    CreatePacksResponse:
      example:
        data:
          created_at: '2025-02-26T13:37:30.452Z'
          created_by: elastic
          description: My pack
          enabled: true
          name: my_pack
          queries:
            ports:
              ecs_mapping:
                client.port:
                  field: port
              interval: 60
              query: SELECT * FROM listening_ports;
              removed: false
              snapshot: true
              timeout: 120
          saved_object_id: 1c266590-381f-428c-878f-c80c1334f856
          shards:
            - key: 47638692-7c4c-4053-aa3e-7186f28df349
              value: 35
            - key: 5e267651-fe50-443e-8d3f-3bbc9171b618
              value: 58
          updated_at: '2025-02-26T13:37:30.452Z'
          updated_by: elastic
      type: object
      properties: {}
    CreateSavedQueryRequestBody:
      example:
        description: Saved query description
        ecs_mapping:
          host.uptime:
            field: total_seconds
        id: saved_query_id
        interval: '60'
        platform: linux,darwin
        query: select * from uptime;
        timeout: 120
        version: 2.8.0
      type: object
      properties:
        description:
          $ref: '#/components/schemas/SavedQueryDescriptionOrUndefined'
        ecs_mapping:
          $ref: '#/components/schemas/ECSMappingOrUndefined'
        id:
          $ref: '#/components/schemas/SavedQueryId'
        interval:
          $ref: '#/components/schemas/Interval'
        platform:
          $ref: '#/components/schemas/PlatformOrUndefined'
        query:
          $ref: '#/components/schemas/QueryOrUndefined'
        removed:
          $ref: '#/components/schemas/RemovedOrUndefined'
        snapshot:
          $ref: '#/components/schemas/SnapshotOrUndefined'
        version:
          $ref: '#/components/schemas/VersionOrUndefined'
    CreateSavedQueryResponse:
      example:
        data: {}
      type: object
      properties: {}
    DefaultSuccessResponse:
      type: object
      properties: {}
    ECSMapping:
      additionalProperties:
        $ref: '#/components/schemas/ECSMappingItem'
      description: >-
        Map osquery results columns or static values to Elastic Common Schema
        (ECS) fields
      example:
        host.uptime:
          field: total_seconds
      type: object
    ECSMappingItem:
      type: object
      properties:
        field:
          description: The ECS field to map to.
          example: host.uptime
          type: string
        value:
          description: The value to map to the ECS field.
          example: total_seconds
          oneOf:
            - type: string
            - items:
                type: string
              type: array
    ECSMappingOrUndefined:
      $ref: '#/components/schemas/ECSMapping'
      nullable: true
    Enabled:
      description: Enables the pack.
      example: true
      type: boolean
    EnabledOrUndefined:
      $ref: '#/components/schemas/Enabled'
      nullable: true
    FindLiveQueryDetailsResponse:
      example:
        data:
          '@timestamp': '2022-07-26T09:59:32.220Z'
          action_id: 3c42c847-eb30-4452-80e0-728584042334
          agents:
            - 16d7caf5-efd2-4212-9b62-73dafc91fa13
          expiration: '2022-07-26T10:04:32.220Z'
          queries:
            - action_id: 609c4c66-ba3d-43fa-afdd-53e244577aa0
              agents:
                - 16d7caf5-efd2-4212-9b62-73dafc91fa13
              docs: 0
              ecs_mapping:
                host.uptime:
                  field: total_seconds
              failed: 1
              id: 6724a474-cbba-41ef-a1aa-66aebf0879e2
              pending: 0
              query: select * from uptime;
              responded: 1
              saved_query_id: 42ba9c50-0cc5-11ed-aa1d-2b27890bc90d
              status: completed
              successful: 0
          status: completed
          user_id: elastic
      type: object
      properties: {}
    FindLiveQueryResponse:
      example:
        data:
          items:
            - fields:
                '@timestamp': '2023-10-31T00:00:00Z'
                action_id: 3c42c847-eb30-4452-80e0-728584042334
                agents:
                  - 16d7caf5-efd2-4212-9b62-73dafc91fa13
                expiration: '2023-10-31T00:00:00Z'
                queries:
                  - action_id: 609c4c66-ba3d-43fa-afdd-53e244577aa0
                    agents:
                      - 16d7caf5-efd2-4212-9b62-73dafc91fa13
                    ecs_mapping:
                      host.uptime:
                        field: total_seconds
                    id: 6724a474-cbba-41ef-a1aa-66aebf0879e2
                    query: select * from uptime;
                    saved_query_id: 42ba9c50-0cc5-11ed-aa1d-2b27890bc90d
                user_id: elastic
      type: object
      properties: {}
    FindPackResponse:
      example:
        data:
          created_at: '2022-07-25T19:41:10.263Z'
          created_by: elastic
          description: ''
          enabled: true
          id: 3c42c847-eb30-4452-80e0-728584042334
          name: test_pack
          namespaces:
            - default
          policy_ids: []
          queries:
            uptime:
              ecs_mapping:
                message:
                  field: days
              interval: 3600
              query: select * from uptime
          read_only: false
          type: osquery-pack
          updated_at: '2022-07-25T20:12:01.455Z'
          updated_by: elastic
      type: object
      properties: {}
    FindPacksResponse:
      example:
        data:
          - attributes:
              created_at: '2023-10-31T00:00:00Z'
              created_by: elastic
              description: My pack description
              enabled: true
              name: My Pack
              queries:
                - ecs_mapping:
                    - host.uptime:
                        field: total_seconds
                  id: uptime
                  interval: '3600'
                  query: select * from uptime;
              updated_at: '2023-10-31T00:00:00Z'
              updated_by: elastic
            id: 42ba9c50-0cc5-11ed-aa1d-2b27890bc90d
            namespaces:
              - default
            type: osquery-pack
        page: 1
        pageSize: 10
        policy_ids: []
        total: 1
      type: object
      properties: {}
    FindSavedQueryDetailResponse:
      example:
        data:
          attributes:
            created_at: '2022-07-26T09:28:08.597Z'
            created_by: elastic
            description: Saved query description
            ecs_mapping:
              host.uptime:
                field: total_seconds
            id: saved_query_id
            interval: '60'
            platform: linux,darwin
            prebuilt: false
            query: select * from uptime;
            updated_at: '2022-07-26T09:28:08.597Z'
            updated_by: elastic
            version: 2.8.0
          coreMigrationVersion: 8.4.0
          id: 3c42c847-eb30-4452-80e0-728584042334
          namespaces:
            - default
          references: []
          type: osquery-saved-query
          updated_at: '2022-07-26T09:28:08.600Z'
          version: WzQzMTcsMV0=
      type: object
      properties: {}
    FindSavedQueryResponse:
      example:
        data:
          - attributes:
              created_at: '2022-07-26T09:28:08.597Z'
              created_by: elastic
              description: Saved query description
              ecs_mapping:
                host.uptime:
                  field: total_seconds
              id: saved_query_id
              interval: '60'
              platform: linux,darwin
              prebuilt: false
              query: select * from uptime;
              updated_at: '2022-07-26T09:28:08.597Z'
              updated_by: elastic
              version: 2.8.0
            id: 42ba9c50-0cc5-11ed-aa1d-2b27890bc90d
            namespaces:
              - default
            type: osquery-saved-query
        page: 1
        per_page: 100
        total: 11
      type: object
      properties: {}
    GetLiveQueryResultsResponse:
      description: The response for getting live query results.
      example:
        data:
          edges:
            - {}
            - {}
          total: 2
      type: object
      properties: {}
    Interval:
      description: An interval, in seconds, on which to run the query.
      example: '60'
      type: string
    IntervalOrUndefined:
      $ref: '#/components/schemas/Interval'
      nullable: true
    KueryOrUndefined:
      description: The kuery to filter the results by.
      example: 'agent.id: 16d7caf5-efd2-4212-9b62-73dafc91fa13'
      nullable: true
      type: string
    ObjectQueries:
      additionalProperties:
        $ref: '#/components/schemas/ObjectQueriesItem'
      description: An object of queries.
      type: object
    ObjectQueriesItem:
      type: object
      properties:
        ecs_mapping:
          $ref: '#/components/schemas/ECSMappingOrUndefined'
        id:
          $ref: '#/components/schemas/QueryId'
        platform:
          $ref: '#/components/schemas/PlatformOrUndefined'
        query:
          $ref: '#/components/schemas/Query'
        removed:
          $ref: '#/components/schemas/RemovedOrUndefined'
        saved_query_id:
          $ref: '#/components/schemas/SavedQueryIdOrUndefined'
        snapshot:
          $ref: '#/components/schemas/SnapshotOrUndefined'
        version:
          $ref: '#/components/schemas/VersionOrUndefined'
    PackDescription:
      description: The pack description.
      example: Pack description
      type: string
    PackDescriptionOrUndefined:
      $ref: '#/components/schemas/PackDescription'
      nullable: true
    PackId:
      description: The ID of the pack you want to run, retrieve, update, or delete.
      example: 3c42c847-eb30-4452-80e0-728584042334
      type: string
    PackIdOrUndefined:
      $ref: '#/components/schemas/PackId'
      nullable: true
    PackName:
      description: The pack name.
      type: string
    PageOrUndefined:
      description: The page number to return. The default is 1.
      example: 1
      nullable: true
      type: integer
    PageSizeOrUndefined:
      description: The number of results to return per page. The default is 20.
      example: 20
      nullable: true
      type: integer
    Platform:
      description: >-
        Restricts the query to a specified platform. The default is all
        platforms. To specify multiple platforms, use commas. For example,
        `linux,darwin`.
      example: linux,darwin
      type: string
    PlatformOrUndefined:
      $ref: '#/components/schemas/Platform'
      nullable: true
    PolicyIds:
      description: A list of agents policy IDs.
      example:
        - policyId1
        - policyId2
      items:
        type: string
      type: array
    PolicyIdsOrUndefined:
      $ref: '#/components/schemas/PolicyIds'
      nullable: true
    Query:
      description: The SQL query you want to run.
      example: select * from uptime;
      type: string
    QueryId:
      description: The ID of the query.
      example: 3c42c847-eb30-4452-80e0-728584042334
      type: string
    QueryOrUndefined:
      $ref: '#/components/schemas/Query'
      nullable: true
    Removed:
      description: Indicates whether the query is removed.
      example: false
      type: boolean
    RemovedOrUndefined:
      $ref: '#/components/schemas/Removed'
      nullable: true
    SavedQueryDescription:
      description: The saved query description.
      example: Saved query description
      type: string
    SavedQueryDescriptionOrUndefined:
      $ref: '#/components/schemas/SavedQueryDescription'
      nullable: true
    SavedQueryId:
      description: The ID of a saved query.
      example: 3c42c847-eb30-4452-80e0-728584042334
      type: string
    SavedQueryIdOrUndefined:
      $ref: '#/components/schemas/SavedQueryId'
      nullable: true
    Shards:
      additionalProperties:
        type: number
      description: >-
        An object with shard configuration for policies included in the pack.
        For each policy, set the shard configuration to a percentage (1–100) of
        target hosts.
      example:
        policy_id: 50
      type: object
    Snapshot:
      description: Indicates whether the query is a snapshot.
      example: true
      type: boolean
    SnapshotOrUndefined:
      $ref: '#/components/schemas/Snapshot'
      nullable: true
    SortOrderOrUndefined:
      description: Specifies the sort order.
      enum:
        - asc
        - desc
      example: desc
      type: string
    SortOrUndefined:
      default: createdAt
      description: The field that is used to sort the results.
      example: createdAt
      nullable: true
      type: string
    UpdatePacksRequestBody:
      example:
        name: updated_my_pack_name
      type: object
      properties:
        description:
          $ref: '#/components/schemas/PackDescriptionOrUndefined'
        enabled:
          $ref: '#/components/schemas/EnabledOrUndefined'
        name:
          $ref: '#/components/schemas/PackName'
        policy_ids:
          $ref: '#/components/schemas/PolicyIdsOrUndefined'
        queries:
          $ref: '#/components/schemas/ObjectQueries'
        shards:
          $ref: '#/components/schemas/Shards'
    UpdatePacksResponse:
      example:
        data:
          created_at: '2025-02-26T13:37:30.452Z'
          created_by: elastic
          description: My pack
          enabled: true
          name: updated_my_pack_name
          queries:
            ports:
              ecs_mapping:
                client.port:
                  field: port
              interval: 60
              query: SELECT * FROM listening_ports;
              removed: false
              snapshot: true
              timeout: 120
          saved_object_id: 1c266590-381f-428c-878f-c80c1334f856
          shards:
            - key: 47638692-7c4c-4053-aa3e-7186f28df349
              value: 35
            - key: 5e267651-fe50-443e-8d3f-3bbc9171b618
              value: 58
          updated_at: '2025-02-26T13:40:16.297Z'
          updated_by: elastic
      type: object
      properties: {}
    UpdateSavedQueryRequestBody:
      example:
        id: updated_my_saved_query_name
      type: object
      properties:
        description:
          $ref: '#/components/schemas/SavedQueryDescriptionOrUndefined'
        ecs_mapping:
          $ref: '#/components/schemas/ECSMappingOrUndefined'
        id:
          $ref: '#/components/schemas/SavedQueryId'
        interval:
          $ref: '#/components/schemas/IntervalOrUndefined'
        platform:
          $ref: '#/components/schemas/PlatformOrUndefined'
        query:
          $ref: '#/components/schemas/QueryOrUndefined'
        removed:
          $ref: '#/components/schemas/RemovedOrUndefined'
        snapshot:
          $ref: '#/components/schemas/SnapshotOrUndefined'
        version:
          $ref: '#/components/schemas/VersionOrUndefined'
    UpdateSavedQueryResponse:
      example:
        data: {}
      type: object
      properties: {}
    Version:
      description: >-
        Uses the Osquery versions greater than or equal to the specified version
        string.
      example: 1.0.0
      type: string
    VersionOrUndefined:
      $ref: '#/components/schemas/Version'
      nullable: true
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
security:
  - BasicAuth: []
tags:
  - description: Run live queries, manage packs and saved queries.
    name: Security Osquery API
    x-displayName: Security Osquery
