# COUNT

The `COUNT` function calculates the total number of input values. If no field is specified, it counts the number of rows.

## Syntax

`COUNT(field)`

### Parameters

#### `field`

An expression that outputs values to be counted. If omitted, the function is equivalent to `COUNT(*)`, which counts the number of rows.

## Examples

### Example 1: Count specific field values

Count the number of non-null values in the `height` field.

```esql
FROM employees
| STATS COUNT(height)
```

### Example 2: Count the number of rows

Count the total number of rows, grouped by the `languages` column.

```esql
FROM employees
| STATS count = COUNT(*) BY languages
| SORT languages DESC
```

### Example 3: Count values using inline functions

Split a string into multiple values using the `SPLIT` function and count the resulting values.

```esql
ROW words="foo;bar;baz;qux;quux;foo"
| STATS word_count = COUNT(SPLIT(words, ";"))
```

### Example 4: Count values based on a condition

Count the number of rows where the condition `n < 0` is true.

```esql
ROW n=1
| WHERE n < 0
| STATS COUNT(n)
```

### Example 5: Count based on two different expressions

Count the same stream of data based on two different conditions using the pattern `COUNT(<expression> OR NULL)`. This approach leverages three-valued logic (3VL), where `TRUE OR NULL` evaluates to `TRUE`, but `FALSE OR NULL` evaluates to `NULL`. The `COUNT` function ignores `NULL` values.

```esql
ROW n=1
| STATS COUNT(n > 0 OR NULL), COUNT(n < 0 OR NULL)
```