# TO_DATE_NANOS

Converts an input to a nanosecond-resolution date value (`date_nanos`).

## Syntax

`TO_DATE_NANOS(field)`

### Parameters

#### `field`

The input value to be converted. This can be a single- or multi-valued column or an expression.

## Examples

### Example 1: Converting a valid date to `date_nanos`

```esql
ROW date = "2023-01-01T12:00:00.123456789Z"
| EVAL nanos_date = TO_DATE_NANOS(date)
```

This example converts a string representation of a date with nanosecond precision into a `date_nanos` value.

### Example 2: Handling values outside the `date_nanos` range

```esql
ROW date = "2500-01-01T00:00:00.000000000Z"
| EVAL nanos_date = TO_DATE_NANOS(date)
```

This example attempts to convert a date outside the supported range for `date_nanos`. The result will be `null`, and a warning will be issued.

### Example 3: Attempting to convert integers to `date_nanos`

```esql
ROW timestamp = 1234567890
| EVAL nanos_date = TO_DATE_NANOS(timestamp)
```

This example demonstrates that integers cannot be converted into `date_nanos`. The result will be `null`, and a warning will be issued.

## Limitations

- The valid range for `date_nanos` is from `1970-01-01T00:00:00.000000000Z` to `2262-04-11T23:47:16.854775807Z`. Values outside this range will result in `null` and trigger a warning.
- Integers cannot be converted into `date_nanos` because the range of integer nanoseconds only covers approximately 2 seconds after the epoch.