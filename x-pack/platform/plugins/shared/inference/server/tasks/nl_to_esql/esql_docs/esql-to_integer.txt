# TO_INTEGER

Converts an input value to an integer. If the input is a date type, it is interpreted as milliseconds since the Unix epoch and converted to an integer. Boolean values are converted to `1` for `true` and `0` for `false`.

## Syntax

`TO_INTEGER(field)`

### Parameters

#### `field`

The input value to be converted. This can be a single- or multi-valued column or an expression.

## Examples

### Example 1: Converting a multi-valued column to integers

```esql
ROW long = [5013792, 2147483647, 501379200000]
| EVAL int = TO_INTEGER(long)
```

In this example:
- The function attempts to convert each value in the multi-valued column `long` to an integer.
- If a value cannot be converted (e.g., it exceeds the integer range), the result is `null`. 

When a conversion fails, a **Warning** header is added to the response. The header provides details about the failure, including the source of the issue:

```plaintext
"Line 1:61: evaluation of [TO_INTEGER(long)] failed, treating result as null. Only first 20 failures recorded."
```

Another header specifies the failure reason and the problematic value:

```plaintext
"org.elasticsearch.xpack.esql.core.InvalidArgumentException: [501379200000] out of [integer] range"
```

## Limitations

- If a value exceeds the integer range, it cannot be converted, and the result is `null`.
- A warning is generated for failed conversions, with details provided in the response headers.