# TO_UNSIGNED_LONG

Converts an input value to an unsigned long value. If the input is of a date type, its value is interpreted as milliseconds since the Unix epoch and converted to an unsigned long. Boolean values are converted as follows: `true` becomes `1`, and `false` becomes `0`.

## Syntax

`TO_UNSIGNED_LONG(field)`

### Parameters

#### `field`

The input value to be converted. This can be a single- or multi-valued column or an expression.

## Examples

### Example 1: Converting strings to unsigned long values

```esql
ROW str1 = "2147483648", str2 = "2147483648.2", str3 = "foo"
| EVAL long1 = TO_UNSIGNED_LONG(str1), long2 = TO_ULONG(str2), long3 = TO_UL(str3)
```

- `str1` is successfully converted to an unsigned long value.
- `str2` is also converted, but only the integer part is retained.
- `str3` cannot be converted, resulting in a `null` value.

When a conversion fails, a warning is added to the response. For example:

```esql
"Line 1:133: evaluation of [TO_UL(str3)] failed, treating result as null. Only first 20 failures recorded."
```

A subsequent header provides details about the failure and the problematic value:

```esql
"java.lang.NumberFormatException: Character f is neither a decimal digit number, decimal point,
nor "e" notation exponential mark."
```

## Limitations

- If the input cannot be converted to an unsigned long, the result is `null`, and a warning is issued in the response.
- The function does not support all input types explicitly; unsupported types may result in conversion failures.