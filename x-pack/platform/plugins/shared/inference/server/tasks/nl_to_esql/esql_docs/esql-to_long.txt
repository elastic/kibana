# TO_LONG

Converts an input value to a long value. If the input is of a date type, it is interpreted as milliseconds since the Unix epoch and converted to a long. Boolean values are converted to `1` for `true` and `0` for `false`.

## Syntax

`TO_LONG(field)`

### Parameters

#### `field`

The input value to be converted. This can be a single- or multi-valued column or an expression.

## Examples

### Example 1: Converting strings to long values

```esql
ROW str1 = "2147483648", str2 = "2147483648.2", str3 = "foo"
| EVAL long1 = TO_LONG(str1), long2 = TO_LONG(str2), long3 = TO_LONG(str3)
```

- `str1` is successfully converted to a long value.
- `str2` is also converted to a long value, truncating the decimal part.
- `str3` cannot be converted, resulting in a `null` value. 

When a conversion fails, a *Warning* header is added to the response, providing details about the failure. For example:

```esql
"Line 1:113: evaluation of [TO_LONG(str3)] failed, treating result as null. Only first 20 failures recorded."
```

A subsequent header will include the failure reason and the problematic value:

```esql
"java.lang.NumberFormatException: For input string: \"foo\""
```