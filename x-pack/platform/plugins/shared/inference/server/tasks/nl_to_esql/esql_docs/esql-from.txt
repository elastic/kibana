## FROM

The `FROM` command retrieves data from a data stream, index, or alias and returns it as a table. Each row in the table represents a document, and each column corresponds to a field that can be accessed by its name.

## Syntax

`FROM index_pattern [METADATA fields]`

### Parameters

#### `index_pattern`

A list of indices, data streams, or aliases. Supports wildcards and date math.

#### `fields`

A comma-separated list of metadata fields to retrieve.

## Examples

### Basic Example

Retrieve all documents from the `employees` index:

```esql
FROM employees
```

### Using Date Math

Access indices, aliases, or data streams using date math. For example, retrieve todayâ€™s index for time series data:

```esql
FROM <logs-{now/d}>
```

### Querying Multiple Data Streams, Indices, or Aliases

Query multiple data streams, indices, or aliases using a comma-separated list or wildcards:

```esql
FROM employees-00001,other-employees-*
```

### Querying Across Clusters

Query data streams and indices on remote clusters using the format `<remote_cluster_name>:<target>`:

```esql
FROM cluster_one:employees-00001,cluster_two:other-employees-*
```

### Using the `METADATA` Directive

Enable metadata fields by using the optional `METADATA` directive:

```esql
FROM employees METADATA _id
```

### Escaping Index Names

Escape index names containing special characters using double quotes (`"`) or triple double quotes (`"""`):

```esql
FROM "this=that","""this[that"""
```

## Limitations

- By default, the `FROM` command applies an implicit limit of 1,000 rows if no explicit `LIMIT` is specified. For example:
  ```esql
FROM employees
```
  is equivalent to:
  ```esql
FROM employees
| LIMIT 1000
```
- Queries cannot return more than 10,000 rows, even if a higher `LIMIT` is specified. This is a configurable upper limit. For more details, refer to the [LIMIT command](#LIMIT).