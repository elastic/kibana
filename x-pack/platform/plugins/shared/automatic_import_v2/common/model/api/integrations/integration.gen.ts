/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Automatic Import Integrations API endpoint
 *   version: 1
 */

import { z } from '@kbn/zod';

import { NonEmptyString } from '../primitive.gen';

export type CreateAutoImportIntegrationRequestBody = z.infer<
  typeof CreateAutoImportIntegrationRequestBody
>;
export const CreateAutoImportIntegrationRequestBody = z
  .object({
    /**
     * The integration title
     */
    title: NonEmptyString,
    /**
     * The integration description
     */
    description: z.string().optional(),
    /**
     * The integration logo
     */
    logo: z.string().optional(),
  })
  .strict();
export type CreateAutoImportIntegrationRequestBodyInput = z.input<
  typeof CreateAutoImportIntegrationRequestBody
>;

export type CreateAutoImportIntegrationResponse = z.infer<
  typeof CreateAutoImportIntegrationResponse
>;
export const CreateAutoImportIntegrationResponse = z.object({
  /**
   * The integration id created in state.
   */
  integration_id: NonEmptyString,
});

export type UpdateAutoImportIntegrationRequestParams = z.infer<
  typeof UpdateAutoImportIntegrationRequestParams
>;
export const UpdateAutoImportIntegrationRequestParams = z.object({
  /**
   * The integration identifier
   */
  integration_id: NonEmptyString,
});
export type UpdateAutoImportIntegrationRequestParamsInput = z.input<
  typeof UpdateAutoImportIntegrationRequestParams
>;

export type UpdateAutoImportIntegrationRequestBody = z.infer<
  typeof UpdateAutoImportIntegrationRequestBody
>;
export const UpdateAutoImportIntegrationRequestBody = z
  .object({
    /**
     * Integration description
     */
    description: z.string().optional(),
    /**
     * Integration logo image blob
     */
    logo: z.string().optional(),
  })
  .strict();
export type UpdateAutoImportIntegrationRequestBodyInput = z.input<
  typeof UpdateAutoImportIntegrationRequestBody
>;
