// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`graph_visualization should render to svg elements 1`] = `
<svg
  className="gphGraph"
  height="100%"
  id="graphSvg"
  pointerEvents="all"
  width="100%"
  xmlns="http://www.w3.org/2000/svg"
>
  <g>
    <g>
      <g
        css={
          Object {
            "map": undefined,
            "name": "qqu03v",
            "next": undefined,
            "styles": "&:hover{.gphEdge{stroke-opacity:0.95;cursor:pointer;}}",
            "toString": [Function],
          }
        }
        key="A..1-B..2"
      >
        <line
          className="gphEdge"
          strokeLinecap="round"
          style={
            Object {
              "strokeWidth": 2,
            }
          }
          x1={5}
          x2={7}
          y1={5}
          y2={9}
        />
        <line
          className="gphEdge gphEdge--clickable"
          onClick={[Function]}
          style={
            Object {
              "strokeWidth": 15,
            }
          }
          x1={5}
          x2={7}
          y1={5}
          y2={9}
        />
      </g>
      <g
        css={
          Object {
            "map": undefined,
            "name": "qqu03v",
            "next": undefined,
            "styles": "&:hover{.gphEdge{stroke-opacity:0.95;cursor:pointer;}}",
            "toString": [Function],
          }
        }
        key="B..2-C..3"
      >
        <line
          className="gphEdge"
          strokeLinecap="round"
          style={
            Object {
              "strokeWidth": 2.2,
            }
          }
          x1={7}
          x2={12}
          y1={9}
          y2={2}
        />
        <line
          className="gphEdge gphEdge--clickable"
          onClick={[Function]}
          style={
            Object {
              "strokeWidth": 15,
            }
          }
          x1={7}
          x2={12}
          y1={9}
          y2={2}
        />
      </g>
    </g>
    <g
      className="gphNode"
      key="A..1"
      onClick={[Function]}
      onMouseDown={[Function]}
    >
      <circle
        css={
          Array [
            Object {
              "map": undefined,
              "name": "8r5wwo",
              "next": undefined,
              "styles": "
                        fill: black;
                      ",
              "toString": [Function],
            },
            Object {
              "map": undefined,
              "name": "1e54f3",
              "next": undefined,
              "styles": "
                          stroke-width: 4px;
                          stroke: rgba(11,100,221,0.25);
                        ",
              "toString": [Function],
            },
          ]
        }
        cx={5}
        cy={5}
        r={10}
      />
      <IconRenderer
        color="black"
        icon={
          Object {
            "id": "a",
            "label": "",
            "package": "eui",
            "prevName": "",
          }
        }
        x={-2.5}
        y={-3.5}
      />
      <text
        className="gphNode__label"
        textAnchor="middle"
        transform="translate(0,22)"
        x={5}
        y={5}
      >
        1
      </text>
      <g>
        <circle
          css={[Function]}
          cx={5}
          cy={5}
          r="5"
          transform="translate(10,10)"
        />
        <text
          css={
            Array [
              [Function],
              Object {
                "map": undefined,
                "name": "u1rg7h",
                "next": undefined,
                "styles": "
                            font-size: calc(8px - 2px);
                            fill: #FFFFFF;
                          ",
                "toString": [Function],
              },
            ]
          }
          textAnchor="middle"
          transform="translate(10,12)"
          x={5}
          y={5}
        >
          1
        </text>
      </g>
    </g>
    <g
      className="gphNode"
      key="B..2"
      onClick={[Function]}
      onMouseDown={[Function]}
    >
      <circle
        css={
          Array [
            Object {
              "map": undefined,
              "name": "1cbm3l8",
              "next": undefined,
              "styles": "
                        fill: red;
                      ",
              "toString": [Function],
            },
            false,
          ]
        }
        cx={7}
        cy={9}
        r={10}
      />
      <IconRenderer
        color="red"
        icon={
          Object {
            "id": "b",
            "label": "",
            "package": "eui",
            "prevName": "",
          }
        }
        x={-0.5}
        y={0.5}
      />
      <text
        className="gphNode__label"
        textAnchor="middle"
        transform="translate(0,22)"
        x={7}
        y={9}
      >
        2
      </text>
    </g>
    <g
      className="gphNode"
      key="C..3"
      onClick={[Function]}
      onMouseDown={[Function]}
    >
      <circle
        css={
          Array [
            Object {
              "map": undefined,
              "name": "1yit9pb",
              "next": undefined,
              "styles": "
                        fill: yellow;
                      ",
              "toString": [Function],
            },
            false,
          ]
        }
        cx={12}
        cy={2}
        r={10}
      />
      <IconRenderer
        color="yellow"
        icon={
          Object {
            "id": "c",
            "label": "",
            "package": "eui",
            "prevName": "",
          }
        }
        x={4.5}
        y={-6.5}
      />
      <text
        className="gphNode__label"
        textAnchor="middle"
        transform="translate(0,22)"
        x={12}
        y={2}
      >
        3
      </text>
    </g>
  </g>
</svg>
`;
