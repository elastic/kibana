'@timestamp':
  dashed_name: timestamp
  description: 'Date/time when the event originated.

    This is the date/time extracted from the event, typically representing when the
    event was generated by the source.

    If the event source has no original timestamp, this value is typically populated
    by the first time the event was received by the pipeline.

    Required field for all events.'
  example: '2016-05-23T08:05:34.853Z'
  flat_name: '@timestamp'
  level: core
  name: '@timestamp'
  normalize: []
  required: true
  short: Date/time when the event originated.
  type: date
event.code:
  dashed_name: event-code
  description: 'Identification code for this event, if one exists.

    Some event sources use event codes to identify messages unambiguously, regardless
    of message language or wording adjustments over time. An example of this is the
    Windows Event ID.'
  example: 4648
  flat_name: event.code
  ignore_above: 1024
  level: extended
  name: code
  normalize: []
  short: Identification code for this event.
  type: keyword
event.dataset:
  dashed_name: event-dataset
  description: 'Name of the dataset.

    If an event source publishes more than one type of log or events (e.g. access
    log, error log), the dataset is used to specify which one the event comes from.

    It''s recommended but not required to start the dataset name with the module name,
    followed by a dot, then the dataset name.'
  example: apache.access
  flat_name: event.dataset
  ignore_above: 1024
  level: core
  name: dataset
  normalize: []
  short: Name of the dataset.
  type: keyword
event.duration:
  dashed_name: event-duration
  description: 'Duration of the event in nanoseconds.

    If event.start and event.end are known this value should be the difference between
    the end and start time.'
  flat_name: event.duration
  format: duration
  input_format: nanoseconds
  level: core
  name: duration
  normalize: []
  output_format: asMilliseconds
  output_precision: 1
  short: Duration of the event in nanoseconds.
  type: long
event.module:
  dashed_name: event-module
  description: 'Name of the module this data is coming from.

    If your monitoring agent supports the concept of modules or plugins to process
    events of a given source (e.g. Apache logs), `event.module` should contain the
    name of this module.'
  example: apache
  flat_name: event.module
  ignore_above: 1024
  level: core
  name: module
  normalize: []
  short: Name of the module this data is coming from.
  type: keyword
host.name:
  dashed_name: host-name
  description: 'Name of the host.

    It can contain what `hostname` returns on Unix systems, the fully qualified domain
    name, or a name specified by the user. The sender decides which value to use.'
  flat_name: host.name
  ignore_above: 1024
  level: core
  name: name
  normalize: []
  short: Name of the host.
  type: keyword
labels:
  dashed_name: labels
  description: 'Custom key/value pairs.

    Can be used to add meta information to events. Should not contain nested objects.
    All values are stored as keyword.

    Example: `docker` and `k8s` labels.'
  example: '{"application": "foo-bar", "env": "production"}'
  flat_name: labels
  level: core
  name: labels
  normalize: []
  object_type: keyword
  short: Custom key/value pairs.
  type: object
log.level:
  dashed_name: log-level
  description: 'Original log level of the log event.

    If the source of the event provides a log level or textual severity, this is the
    one that goes in `log.level`. If your source doesn''t specify one, you may put
    your event transport''s severity here (e.g. Syslog severity).

    Some examples are `warn`, `err`, `i`, `informational`.'
  example: error
  flat_name: log.level
  ignore_above: 1024
  level: core
  name: level
  normalize: []
  short: Log level of the log event.
  type: keyword
log.logger:
  dashed_name: log-logger
  description: The name of the logger inside an application. This is usually the name
    of the class which initialized the logger, or can be a custom name.
  example: org.elasticsearch.bootstrap.Bootstrap
  flat_name: log.logger
  ignore_above: 1024
  level: core
  name: logger
  normalize: []
  short: Name of the logger.
  type: keyword
message:
  dashed_name: message
  description: 'For log events the message field contains the log message, optimized
    for viewing in a log viewer.

    For structured logs without an original message field, other fields can be concatenated
    to form a human-readable summary of the event.

    If multiple messages exist, they can be combined into one message.'
  example: Hello World
  flat_name: message
  level: core
  name: message
  normalize: []
  short: Log message optimized for viewing in a log viewer.
  type: match_only_text
metricset.interval:
  dashed_name: metricset-interval
  description: The interval of the data
  flat_name: metricset.interval
  level: custom
  name: interval
  normalize: []
  short: The interval of the data
  type: long
tags:
  dashed_name: tags
  description: List of keywords used to tag each event.
  example: '["production", "env2"]'
  flat_name: tags
  ignore_above: 1024
  level: core
  name: tags
  normalize:
  - array
  short: List of keywords used to tag each event.
  type: keyword
