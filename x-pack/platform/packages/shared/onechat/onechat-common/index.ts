/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

export type { OnechatEvent } from './base/events';
export {
  type ToolDescriptor,
  type ToolDescriptorMeta,
  type PlainIdToolIdentifier,
  type SerializedToolIdentifier,
  type StructuredToolIdentifier,
  type ToolIdentifier,
  type ToolProviderId,
  isSerializedToolIdentifier,
  isStructuredToolIdentifier,
  isPlainToolIdentifier,
  toStructuredToolIdentifier,
  toSerializedToolIdentifier,
  toolDescriptorToIdentifier,
  createBuiltinToolId,
  builtinToolProviderId,
  unknownToolProviderId,
} from './tools';
export {
  OnechatErrorCode,
  OnechatErrorUtils,
  isInternalError,
  isToolNotFoundError,
  isOnechatError,
  isAgentNotFoundError,
  isConversationNotFoundError,
  createOnechatError,
  createInternalError,
  createToolNotFoundError,
  createAgentNotFoundError,
  createConversationNotFoundError,
  type OnechatError,
  type OnechatInternalError,
  type OnechatToolNotFoundError,
} from './base/errors';
export { type UserIdAndName } from './base/users';
export {
  OneChatDefaultAgentId,
  OneChatDefaultAgentProviderId,
  AgentType,
  type AgentDescriptor,
  type AgentIdentifier,
  type PlainIdAgentIdentifier,
  type SerializedAgentIdentifier,
  type StructuredAgentIdentifier,
  ChatAgentEventType,
  type ChatAgentEvent,
  type ChatAgentEventBase,
  type ToolResultEvent,
  type ToolResultEventData,
  type ToolCallEvent,
  type ToolCallEventData,
  type MessageChunkEventData,
  type MessageChunkEvent,
  type MessageCompleteEventData,
  type MessageCompleteEvent,
  type RoundCompleteEventData,
  type RoundCompleteEvent,
  isToolCallEvent,
  isToolResultEvent,
  isMessageChunkEvent,
  isMessageCompleteEvent,
  isRoundCompleteEvent,
  isSerializedAgentIdentifier,
  isPlainAgentIdentifier,
  isStructuredAgentIdentifier,
  toSerializedAgentIdentifier,
  toStructuredAgentIdentifier,
} from './agents';
export {
  type RoundInput,
  type AssistantResponse,
  type ToolCallWithResult,
  type ConversationRound,
  type Conversation,
  ChatEventType,
  type ChatEventBase,
  type ChatEvent,
  type ConversationCreatedEvent,
  type ConversationCreatedEventData,
  type ConversationUpdatedEvent,
  type ConversationUpdatedEventData,
  isConversationCreatedEvent,
  isConversationUpdatedEvent,
  type ToolCallStep,
  type ConversationRoundStep,
  ConversationRoundStepType,
  isToolCallStep,
} from './chat';
