// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`transpile (Streamlang DSL to ingest pipeline) should handle manual_ingest_pipeline with nested and top-level if 1`] = `
Object {
  "processors": Array [
    Object {
      "set": Object {
        "field": "foo",
        "if": "ctx._source.active == true",
        "ignore_failure": true,
        "on_failure": Array [
          Object {
            "set": Object {
              "field": "error",
              "value": "failed",
            },
          },
        ],
        "tag": "custom-pipeline",
        "value": "bar",
      },
    },
    Object {
      "rename": Object {
        "field": "foo",
        "if": "
  try {
  if (($('attributes.status', null) !== null && (($('attributes.status', null) instanceof Number && $('attributes.status', null).toString() == \\"active\\") || $('attributes.status', null) == \\"active\\"))) {
    return true;
  }
  return false;
} catch (Exception e) {
  return false;
}
",
        "ignore_failure": true,
        "on_failure": Array [
          Object {
            "set": Object {
              "field": "error",
              "value": "failed",
            },
          },
        ],
        "tag": "custom-pipeline",
        "target_field": "baz",
      },
    },
    Object {
      "set": Object {
        "field": "baz",
        "if": "ctx._source.env == 'prod'",
        "ignore_failure": true,
        "on_failure": Array [
          Object {
            "set": Object {
              "field": "error",
              "value": "failed",
            },
          },
        ],
        "tag": "custom-pipeline",
        "value": "qux",
      },
    },
  ],
}
`;

exports[`transpile (Streamlang DSL to ingest pipeline) should handle not conditions 1`] = `
Object {
  "processors": Array [
    Object {
      "set": Object {
        "field": "attributes.not_flag",
        "if": "
  try {
  if (!(($('attributes.status', null) !== null && (($('attributes.status', null) instanceof Number && $('attributes.status', null).toString() == \\"active\\") || $('attributes.status', null) == \\"active\\")))) {
    return true;
  }
  return false;
} catch (Exception e) {
  return false;
}
",
        "value": "not-active",
      },
    },
    Object {
      "set": Object {
        "field": "attributes.not_nested",
        "if": "
  try {
  if (!((($('attributes.a', null) !== null && (($('attributes.a', null) instanceof Number && $('attributes.a', null).toString() == \\"1\\") || $('attributes.a', null) == 1)) || ($('attributes.b', null) !== null && (($('attributes.b', null) instanceof Number && $('attributes.b', null).toString() == \\"2\\") || $('attributes.b', null) == 2))))) {
    return true;
  }
  return false;
} catch (Exception e) {
  return false;
}
",
        "value": "not-a-or-b",
      },
    },
  ],
}
`;

exports[`transpile (Streamlang DSL to ingest pipeline) should handle type coercions 1`] = `
Object {
  "processors": Array [
    Object {
      "set": Object {
        "field": "attributes.boolean_true_test",
        "if": "
  try {
  if (($('attributes.is_active', null) !== null && (($('attributes.is_active', null) instanceof Number && $('attributes.is_active', null).toString() == \\"true\\") || $('attributes.is_active', null) == true)) && ($('attributes.is_active_str', null) !== null && (($('attributes.is_active_str', null) instanceof Number && $('attributes.is_active_str', null).toString() == \\"true\\") || $('attributes.is_active_str', null) == \\"true\\")) && ($('attributes.is_inactive', null) !== null && (($('attributes.is_inactive', null) instanceof Number && $('attributes.is_inactive', null).toString() != \\"true\\") || $('attributes.is_inactive', null) != true)) && ($('attributes.is_inactive_str', null) !== null && (($('attributes.is_inactive_str', null) instanceof Number && $('attributes.is_inactive_str', null).toString() != \\"true\\") || $('attributes.is_inactive_str', null) != \\"true\\"))) {
    return true;
  }
  return false;
} catch (Exception e) {
  return false;
}
",
        "value": "matched_true_test",
      },
    },
    Object {
      "set": Object {
        "field": "attributes.boolean_false_test",
        "if": "
  try {
  if (($('attributes.is_disabled', null) !== null && (($('attributes.is_disabled', null) instanceof Number && $('attributes.is_disabled', null).toString() == \\"false\\") || $('attributes.is_disabled', null) == false)) && ($('attributes.is_disabled_str', null) !== null && (($('attributes.is_disabled_str', null) instanceof Number && $('attributes.is_disabled_str', null).toString() == \\"false\\") || $('attributes.is_disabled_str', null) == \\"false\\")) && ($('attributes.is_enabled', null) !== null && (($('attributes.is_enabled', null) instanceof Number && $('attributes.is_enabled', null).toString() != \\"false\\") || $('attributes.is_enabled', null) != false)) && ($('attributes.is_enabled_str', null) !== null && (($('attributes.is_enabled_str', null) instanceof Number && $('attributes.is_enabled_str', null).toString() != \\"false\\") || $('attributes.is_enabled_str', null) != \\"false\\"))) {
    return true;
  }
  return false;
} catch (Exception e) {
  return false;
}
",
        "value": "matched_false_test",
      },
    },
    Object {
      "set": Object {
        "field": "attributes.numeric_450_test",
        "if": "
  try {
  if (($('attributes.status_code', null) !== null && (($('attributes.status_code', null) instanceof Number && $('attributes.status_code', null).toString() == \\"450\\") || $('attributes.status_code', null) == 450)) && ($('attributes.status_code_str', null) !== null && (($('attributes.status_code_str', null) instanceof Number && $('attributes.status_code_str', null).toString() == \\"450\\") || $('attributes.status_code_str', null) == \\"450\\")) && ($('attributes.other_code', null) !== null && (($('attributes.other_code', null) instanceof Number && $('attributes.other_code', null).toString() != \\"450\\") || $('attributes.other_code', null) != 450)) && ($('attributes.other_code_str', null) !== null && (($('attributes.other_code_str', null) instanceof Number && $('attributes.other_code_str', null).toString() != \\"450\\") || $('attributes.other_code_str', null) != \\"450\\"))) {
    return true;
  }
  return false;
} catch (Exception e) {
  return false;
}
",
        "value": "matched_450_test",
      },
    },
    Object {
      "set": Object {
        "field": "attributes.mixed_coercion_test",
        "if": "
  try {
  if (($('attributes.response_time', null) !== null && (($('attributes.response_time', null) instanceof String && Float.parseFloat($('attributes.response_time', null)) > 100) || $('attributes.response_time', null) > 100)) && ($('attributes.response_time_str', null) !== null && (($('attributes.response_time_str', null) instanceof String && Float.parseFloat($('attributes.response_time_str', null)) > 100) || $('attributes.response_time_str', null) > 100)) && ($('attributes.port', null) !== null && (($('attributes.port', null) instanceof Number && $('attributes.port', null) >= 8000 && $('attributes.port', null) <= 9000) || ($('attributes.port', null) instanceof String && Float.parseFloat($('attributes.port', null)) >= 8000 && Float.parseFloat($('attributes.port', null)) <= 9000))) && ($('attributes.is_enabled', null) !== null && (($('attributes.is_enabled', null) instanceof Number && $('attributes.is_enabled', null).toString() == \\"true\\") || $('attributes.is_enabled', null) == true)) && ($('attributes.count_str', null) !== null && (($('attributes.count_str', null) instanceof Number && $('attributes.count_str', null).toString() == \\"42\\") || $('attributes.count_str', null) == \\"42\\"))) {
    return true;
  }
  return false;
} catch (Exception e) {
  return false;
}
",
        "value": "matched_mixed_coercion",
      },
    },
  ],
}
`;

exports[`transpile (Streamlang DSL to ingest pipeline) should transpile a variety of processor steps and where blocks 1`] = `
Object {
  "processors": Array [
    Object {
      "rename": Object {
        "field": "attributes.old_name",
        "target_field": "attributes.new_name",
      },
    },
    Object {
      "set": Object {
        "field": "attributes.status",
        "value": "active",
      },
    },
    Object {
      "grok": Object {
        "ecs_compatibility": "v1",
        "field": "body.message",
        "patterns": Array [
          "%{IP:attributes.client_ip} - %{WORD:attributes.method}",
        ],
      },
    },
    Object {
      "date": Object {
        "field": "attributes.timestamp",
        "formats": Array [
          "yyyy-MM-dd'T'HH:mm:ss.SSSZ",
          "yyyy-MM-dd HH:mm:ss",
        ],
        "output_format": "yyyy-MM-dd",
        "target_field": "attributes.parsed_time",
      },
    },
    Object {
      "dissect": Object {
        "field": "body.log",
        "pattern": "%{attributes.client} %{attributes.method} %{attributes.path}",
      },
    },
    Object {
      "append": Object {
        "field": "attributes.tags",
        "value": Array [
          "new_tag",
        ],
      },
    },
    Object {
      "set": Object {
        "field": "attributes.flag",
        "if": "
  try {
  if (($('attributes.status', null) !== null && (($('attributes.status', null) instanceof Number && $('attributes.status', null).toString() == \\"active\\") || $('attributes.status', null) == \\"active\\"))) {
    return true;
  }
  return false;
} catch (Exception e) {
  return false;
}
",
        "value": "yes",
      },
    },
    Object {
      "set": Object {
        "field": "attributes.prod_flag",
        "if": "
  try {
  if (($('attributes.env', null) !== null && (($('attributes.env', null) instanceof Number && $('attributes.env', null).toString() == \\"prod\\") || $('attributes.env', null) == \\"prod\\"))) {
    return true;
  }
  return false;
} catch (Exception e) {
  return false;
}
",
        "value": "prod-env",
      },
    },
    Object {
      "set": Object {
        "field": "attributes.prod_flag",
        "if": "
  try {
  if (($('attributes.a', null) !== null && (($('attributes.a', null) instanceof Number && $('attributes.a', null).toString() == \\"1\\") || $('attributes.a', null) == 1)) || ($('attributes.b', null) !== null && (($('attributes.b', null) instanceof Number && $('attributes.b', null).toString() == \\"2\\") || $('attributes.b', null) == 2))) {
    return true;
  }
  return false;
} catch (Exception e) {
  return false;
}
",
        "value": "prod-env",
      },
    },
    Object {
      "set": Object {
        "field": "attributes.department_flag",
        "if": "
  try {
  if ((($('attributes.a', null) !== null && (($('attributes.a', null) instanceof Number && $('attributes.a', null).toString() == \\"1\\") || $('attributes.a', null) == 1)) || ($('attributes.b', null) !== null && (($('attributes.b', null) instanceof Number && $('attributes.b', null).toString() == \\"2\\") || $('attributes.b', null) == 2))) && ($('attributes.department', null) !== null && (($('attributes.department', null) instanceof Number && $('attributes.department', null).toString() == \\"legal\\") || $('attributes.department', null) == \\"legal\\"))) {
    return true;
  }
  return false;
} catch (Exception e) {
  return false;
}
",
        "value": "legal-department",
      },
    },
    Object {
      "set": Object {
        "field": "attributes.test",
        "if": "
  try {
  if (($('attributes.status', null) !== null && (($('attributes.status', null) instanceof Number && $('attributes.status', null).toString() == \\"active\\") || $('attributes.status', null) == \\"active\\")) || (($('attributes.status', null) !== null && (($('attributes.status', null) instanceof Number && $('attributes.status', null).toString() == \\"inactive\\") || $('attributes.status', null) == \\"inactive\\")) && ($('attributes.read_only', null) !== null && (($('attributes.read_only', null) instanceof Number && $('attributes.read_only', null).toString() == \\"false\\") || $('attributes.read_only', null) == false)))) {
    return true;
  }
  return false;
} catch (Exception e) {
  return false;
}
",
        "value": "yes",
      },
    },
    Object {
      "set": Object {
        "field": "attributes.my_field",
        "ignore_failure": undefined,
        "on_failure": undefined,
        "tag": undefined,
        "value": "my_value",
      },
    },
  ],
}
`;
