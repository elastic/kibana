openapi: 3.0.3
info:
  description: Manage and interact with Security Assistant resources.
  title: Security AI Assistant API (Elastic Cloud & self-hosted)
  version: '2023-10-31'
servers:
  - url: http://{kibana_host}:{port}
    variables:
      kibana_host:
        default: localhost
      port:
        default: '5601'
paths:
  /api/attack_discovery/_bulk:
    post:
      description: >-
        Performs bulk updates on multiple Attack discovery alerts, including
        workflow status changes and visibility settings. This endpoint allows
        efficient batch processing of alert modifications without requiring
        individual API calls for each alert.
      operationId: PostAttackDiscoveryBulk
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                update:
                  description: >-
                    Configuration object containing all parameters for the bulk
                    update operation
                  type: object
                  properties:
                    enable_field_rendering:
                      default: false
                      description: >-
                        Enables a markdown syntax used to render pivot fields,
                        for example `{{ user.name james }}`. When disabled, the
                        same example would be rendered as `james`. This is
                        primarily used for Attack discovery views within Kibana.
                        Defaults to `false`.
                      example: false
                      type: boolean
                    ids:
                      description: Array of Attack discovery IDs to update
                      example:
                        - >-
                          c0c8a8bbb4a6561856a974ee9e461f0c82e673a1f0d83f86c5a8d80fc8de4c4f
                        - >-
                          5aa8f2900c0b03854b3b1a52a19558c5ea9893865c78235d4ad3dcc46196f4c7
                      items:
                        type: string
                      type: array
                    kibana_alert_workflow_status:
                      description: >-
                        When provided, update the kibana.alert.workflow_status
                        of the attack discovery alerts
                      enum:
                        - open
                        - acknowledged
                        - closed
                      example: acknowledged
                      type: string
                    visibility:
                      description: >-
                        When provided, update the visibility of the alert, as
                        determined by the kibana.alert.attack_discovery.users
                        field
                      enum:
                        - not_shared
                        - shared
                      example: shared
                      type: string
                    with_replacements:
                      default: true
                      description: >-
                        When true, returns the updated Attack discoveries with
                        text replacements applied to the detailsMarkdown,
                        entitySummaryMarkdown, summaryMarkdown, and title
                        fields. This substitutes anonymized values with
                        human-readable equivalents. Defaults to `true`.
                      example: true
                      type: boolean
                  required:
                    - ids
              required:
                - update
        description: Bulk update parameters for Attack discovery alerts
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    description: >-
                      Array of updated Attack discovery alert objects. Each item
                      includes the applied modifications from the bulk update
                      request.
                    items:
                      $ref: '#/components/schemas/AttackDiscoveryApiAlert'
                    type: array
                required:
                  - data
          description: Successful response containing the updated Attack discovery alerts
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: Error type
                    example: Bad Request
                    type: string
                  message:
                    description: >-
                      Human-readable error message describing what went wrong
                      with the bulk update request
                    example: Invalid request parameters
                    type: string
                  status_code:
                    description: HTTP status code
                    example: 400
                    type: number
                required:
                  - status_code
                  - error
                  - message
          description: Generic Error
      summary: Bulk update Attack discovery alerts
      tags:
        - Security AI Assistant API
        - Attack discovery API
      x-code-samples:
        - label: Example request
          lang: curl
          source: |
            curl \
             --request POST 'http://localhost:5601/api/attack_discovery/_bulk' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json" \
             --data-raw '{
               "update": {
                 "ids": [
                   "c0c8a8bbb4a6561856a974ee9e461f0c82e673a1f0d83f86c5a8d80fc8de4c4f",
                   "5aa8f2900c0b03854b3b1a52a19558c5ea9893865c78235d4ad3dcc46196f4c7"
                 ],
                 "kibana_alert_workflow_status": "acknowledged"
               }
             }'
  /api/attack_discovery/_find:
    get:
      description: >-
        Finds Attack discoveries that match the search criteria. Supports free
        text search, filtering, pagination, and sorting.
      operationId: AttackDiscoveryFind
      parameters:
        - description: >-
            Filter results to Attack discoveries that include any of the
            provided alert IDs
          in: query
          name: alert_ids
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Filter results to Attack discoveries created by any of the provided
            human readable connector names. Note that values must match the
            human readable `connector_name` property of an Attack discovery,
            e.g. "GPT-5 Chat", which are distinct from `connector_id` values
            used to generate Attack discoveries.
          in: query
          name: connector_names
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            Enables a markdown syntax used to render pivot fields, for example
            `{{ user.name james }}`. When disabled, the same example would be
            rendered as `james`. This is primarily used for Attack discovery
            views within Kibana. Defaults to `false`.
          example: false
          in: query
          name: enable_field_rendering
          required: false
          schema:
            default: false
            type: boolean
        - description: >-
            End of the time range for the search. Accepts absolute timestamps
            (ISO 8601) or relative date math (e.g. "now", "now-24h").
          example: now
          in: query
          name: end
          required: false
          schema:
            type: string
        - description: Filter results to the Attack discoveries with the specified IDs
          in: query
          name: ids
          required: false
          schema:
            items:
              type: string
            type: array
        - description: >-
            If `true`, the response will include `unique_alert_ids` and
            `unique_alert_ids_count` aggregated across the matched Attack
            discoveries
          example: false
          in: query
          name: include_unique_alert_ids
          required: false
          schema:
            type: boolean
        - description: Page number to return (used for pagination). Defaults to 1.
          example: 1
          in: query
          name: page
          required: false
          schema:
            default: 1
            minimum: 1
            type: integer
        - description: >-
            Number of Attack discoveries to return per page (used for
            pagination). Defaults to 10.
          example: 10
          in: query
          name: per_page
          required: false
          schema:
            default: 10
            minimum: 1
            type: integer
        - description: >-
            Free-text search query applied to relevant text fields of Attack
            discoveries (title, description, tags, etc.)
          example: ''
          in: query
          name: search
          required: false
          schema:
            type: string
        - description: >-
            Whether to filter by shared visibility. If omitted, both shared and
            privately visible Attack discoveries are returned. Use `true` to
            return only shared discoveries, `false` to return only those visible
            to the current user.
          in: query
          name: shared
          required: false
          schema:
            type: boolean
        - description: >-
            Field used to sort results. See `AttackDiscoveryFindSortField` for
            allowed values.
          example: '@timestamp'
          in: query
          name: sort_field
          required: false
          schema:
            $ref: '#/components/schemas/AttackDiscoveryFindSortField'
            default: '@timestamp'
        - description: >-
            Sort order direction `asc` for ascending or `desc` for descending.
            Defaults to `desc`.
          example: desc
          in: query
          name: sort_order
          required: false
          schema:
            $ref: '#/components/schemas/SortOrder'
            default: desc
        - description: >-
            Start of the time range for the search. Accepts absolute timestamps
            (ISO 8601) or relative date math (e.g. "now-7d").
          example: now-24h
          in: query
          name: start
          required: false
          schema:
            type: string
        - description: >-
            Filter by alert workflow status. Provide one or more of the allowed
            workflow states.
          example:
            - open
            - acknowledged
          in: query
          name: status
          required: false
          schema:
            items:
              enum:
                - acknowledged
                - closed
                - open
              type: string
            type: array
        - description: >-
            When true, return the created Attack discoveries with text
            replacements applied to the detailsMarkdown, entitySummaryMarkdown,
            summaryMarkdown, and title fields. Defaults to `true`.
          example: true
          in: query
          name: with_replacements
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  connector_names:
                    description: >-
                      List of human readable connector names that are present in
                      the matched Attack discoveries. Useful for building client
                      filters or summaries.
                    items:
                      type: string
                    type: array
                  data:
                    description: >-
                      Array of matched Attack discovery objects. Each item
                      follows the `AttackDiscoveryApiAlert` schema.
                    items:
                      $ref: '#/components/schemas/AttackDiscoveryApiAlert'
                    type: array
                  page:
                    description: Current page number of the paginated result set.
                    type: integer
                  per_page:
                    description: Number of items requested per page.
                    type: integer
                  total:
                    description: >-
                      Total number of Attack discoveries matching the query
                      (across all pages).
                    type: integer
                  unique_alert_ids:
                    description: >-
                      List of unique alert IDs aggregated from the matched
                      Attack discoveries. Only present if
                      `include_unique_alert_ids=true` in the request.
                    items:
                      type: string
                    type: array
                  unique_alert_ids_count:
                    description: >-
                      Number of unique alert IDs across all matched Attack
                      discoveries. Only present if
                      `include_unique_alert_ids=true` in the request.
                    type: integer
                required:
                  - connector_names
                  - data
                  - page
                  - per_page
                  - total
                  - unique_alert_ids_count
          description: Successful response
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: Error type
                    example: Bad Request
                    type: string
                  message:
                    description: Human-readable error message
                    example: Invalid request payload.
                    type: string
                  status_code:
                    description: HTTP status code
                    example: 400
                    type: number
          description: Generic Error
      summary: Finds Attack discoveries that match the search criteria
      tags:
        - Security AI Assistant API
        - Attack discovery API
      x-code-samples:
        - label: Example request
          lang: curl
          source: |
            curl \
             --request GET 'http://localhost:5601/api/attack_discovery/_find?end=now&include_unique_alert_ids=false&page=1&per_page=10&search=&sort_field=%40timestamp&sort_order=desc&start=now-24h&status=open&status=acknowledged' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json"
  /api/attack_discovery/_generate:
    post:
      description: >-
        Initiates the generation of attack discoveries by analyzing security
        alerts using AI. Returns an execution UUID that can be used to track the
        generation progress and retrieve results. Results may also be retrieved
        via the find endpoint.
      operationId: PostAttackDiscoveryGenerate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttackDiscoveryGenerationConfig'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  execution_uuid:
                    $ref: '#/components/schemas/NonEmptyString'
                    description: >-
                      The unique identifier for the attack discovery generation
                      process. Use this UUID to track the generation progress
                      and retrieve results via the find endpoint.
                    example: edd26039-0990-4d9f-9829-2a1fcacb77b5
                required:
                  - execution_uuid
          description: Attack discovery generation initiated successfully
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: Error type
                    example: Bad Request
                    type: string
                  message:
                    description: Human-readable error message describing what went wrong
                    example: Invalid request parameters
                    type: string
                  status_code:
                    description: HTTP status code
                    example: 400
                    type: number
                required:
                  - status_code
                  - error
                  - message
          description: Bad request - Invalid input parameters or configuration
      summary: Generate attack discoveries from alerts
      tags:
        - Security AI Assistant API
        - Attack discovery API
      x-code-samples:
        - label: Example request
          lang: curl
          source: |
            curl \
             --request POST 'http://localhost:5601/api/attack_discovery/_generate' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json" \
             --header "elastic-api-version: 2023-10-31" \
             --data '{
               "alertsIndexPattern": ".alerts-security.alerts-default",
               "anonymizationFields": [
                 {
                   "field": "host.name",
                   "allowed": true,
                   "anonymized": true
                 },
                 {
                   "field": "user.name",
                   "allowed": true,
                   "anonymized": true
                 },
                 {
                   "field": "_id",
                   "allowed": true,
                   "anonymized": false
                 },
                 {
                   "field": "source.ip",
                   "allowed": true,
                   "anonymized": false
                 },
                 {
                   "field": "destination.ip",
                   "allowed": true,
                   "anonymized": false
                 },
                 {
                   "field": "rule.name",
                   "allowed": true,
                   "anonymized": false
                 },
                 {
                   "field": "kibana.alert.risk_score",
                   "allowed": true,
                   "anonymized": false
                 }
               ],
               "apiConfig": {
                 "connectorId": "my-connector-id",
                 "actionTypeId": ".gen-ai"
               },
               "connectorName": "GPT-4 Chat",
               "size": 100,
               "subAction": "invokeAI",
               "start": "now-24h",
               "end": "now"
             }'
  /api/attack_discovery/generations:
    get:
      description: >-
        Get the latest attack discovery generations (that are not dismissed) for
        the current user. This endpoint retrieves generation metadata including
        execution status and statistics for Attack discovery generations.
      operationId: GetAttackDiscoveryGenerations
      parameters:
        - description: >-
            End of the time range for filtering generations. Accepts absolute
            timestamps (ISO 8601) or relative date math (e.g. "now", "now-24h").
          example: now
          in: query
          name: end
          required: false
          schema:
            type: string
        - description: The maximum number of generations to retrieve
          example: 50
          in: query
          name: size
          required: true
          schema:
            minimum: 1
            type: number
        - description: >-
            Start of the time range for filtering generations. Accepts absolute
            timestamps (ISO 8601) or relative date math (e.g. "now-7d").
          example: now-24h
          in: query
          name: start
          required: false
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  generations:
                    description: List of attack discovery generations
                    items:
                      $ref: '#/components/schemas/AttackDiscoveryGeneration'
                    type: array
                required:
                  - generations
          description: Successful response
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: Error type
                    example: Bad Request
                    type: string
                  message:
                    description: Human-readable error message
                    example: Invalid size parameter. Must be a positive number.
                    type: string
                  status_code:
                    description: HTTP status code
                    example: 400
                    type: number
          description: Bad request
      summary: >-
        Get the latest attack discovery generations (that are not dismissed) for
        the current user
      tags:
        - Security AI Assistant API
        - attack_discovery
        - attack_discovery_generations
      x-code-samples:
        - label: Example request
          lang: curl
          source: |
            curl \
             --request GET 'http://localhost:5601/api/attack_discovery/generations?size=50&start=now-24h&end=now' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json"
  /api/attack_discovery/generations/{execution_uuid}:
    get:
      description: >-
        Returns a specific Attack discovery generation, including all generated
        Attack discoveries and associated metadata, including execution status
        and statistics.
      operationId: GetAttackDiscoveryGeneration
      parameters:
        - description: >-
            The unique identifier for the Attack discovery generation execution.
            This UUID is returned at the start of an Attack discovery
            generation.
          example: 2e13f386-46cf-4d65-9e2b-68609e132ba5
          in: path
          name: execution_uuid
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
        - description: >-
            Enables a markdown syntax used to render pivot fields, for example
            `{{ user.name james }}`. When disabled, the same example would be
            rendered as `james`. This is primarily used for Attack discovery
            views within Kibana. Defaults to `false`.
          example: false
          in: query
          name: enable_field_rendering
          required: false
          schema:
            default: false
            type: boolean
        - description: >-
            When true, return the created Attack discoveries with text
            replacements applied to the detailsMarkdown, entitySummaryMarkdown,
            summaryMarkdown, and title fields. Defaults to `true`.
          example: true
          in: query
          name: with_replacements
          required: false
          schema:
            default: true
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    description: >-
                      Array of Attack discoveries generated during this
                      execution.
                    items:
                      $ref: '#/components/schemas/AttackDiscoveryApiAlert'
                    type: array
                  generation:
                    $ref: '#/components/schemas/AttackDiscoveryGeneration'
                    description: >-
                      Optional metadata about the attack discovery generation
                      process, metadata including execution status and
                      statistics. This metadata may not be available for all
                      generations.
                required:
                  - data
          description: Successful response
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: Error type
                    example: Bad Request
                    type: string
                  message:
                    description: >-
                      Human-readable error message describing what went wrong
                      with the request
                    example: Invalid request parameters
                    type: string
                  status_code:
                    description: HTTP status code
                    example: 400
                    type: number
                required:
                  - status_code
                  - error
                  - message
          description: Generic Error
      summary: >-
        Get a single Attack discovery generation, including its discoveries and
        (optional) generation metadata
      tags:
        - Security AI Assistant API
        - Attack discovery API
      x-code-samples:
        - label: Example request
          lang: curl
          source: |
            curl \
             --request GET 'http://localhost:5601/api/attack_discovery/generations/2e13f386-46cf-4d65-9e2b-68609e132ba5' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json"
  /api/attack_discovery/generations/{execution_uuid}/_dismiss:
    post:
      description: >-
        Dismisses an attack discovery generation for the current user,
        indicating that it's status should not be reported in the UI. This sets
        the generation's status to "dismissed" and affects how the generation
        appears in subsequent queries.
      operationId: PostAttackDiscoveryGenerationsDismiss
      parameters:
        - description: >-
            The unique identifier for the Attack discovery generation execution.
            This UUID is returned when an attack discovery generation is created
            and can be found in generation responses.
          example: 46b218d5-535d-4329-be56-d0f6af6986b7
          in: path
          name: execution_uuid
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  alerts_context_count:
                    description: >-
                      The number of alerts that were sent as context to the LLM
                      for this generation.
                    example: 75
                    type: number
                  connector_id:
                    description: >-
                      The unique identifier of the connector used to generate
                      the attack discoveries.
                    example: chatGpt5_0ChatAzure
                    type: string
                  connector_stats:
                    description: >-
                      Statistical information about the connector's performance
                      for this user, providing insights into usage patterns and
                      success rates.
                    type: object
                    properties:
                      average_successful_duration_nanoseconds:
                        description: >-
                          The average duration in nanoseconds for successful
                          generations using this connector by the current user.
                        example: 47958500000
                        type: number
                      successful_generations:
                        description: >-
                          The total number of Attack discoveries successfully
                          created for this generation
                        example: 2
                        type: number
                  discoveries:
                    description: >-
                      The number of attack discoveries that were generated
                      during this execution.
                    example: 3
                    type: number
                  end:
                    description: >-
                      The timestamp when the generation process completed, in
                      ISO 8601 format. This field may be absent for generations
                      that haven't finished.
                    example: '2025-09-29T06:42:44.810Z'
                    type: string
                  execution_uuid:
                    description: >-
                      The unique identifier for this attack discovery generation
                      execution. This UUID can be used to reference this
                      specific generation in other API calls.
                    example: 46b218d5-535d-4329-be56-d0f6af6986b7
                    type: string
                  loading_message:
                    description: >-
                      A human-readable message describing the current state or
                      progress of the generation process. Provides context about
                      what the AI is analyzing.
                    example: >-
                      AI is analyzing up to 100 alerts in the last 24 hours to
                      generate discoveries.
                    type: string
                  reason:
                    description: >-
                      Additional context or reasoning provided when a generation
                      fails or encounters issues. This field helps diagnose
                      problems with the generation process.
                    example: Connection timeout to AI service
                    type: string
                  start:
                    description: >-
                      The timestamp when the generation process began, in ISO
                      8601 format. This marks the beginning of the AI analysis.
                    example: '2025-09-29T06:42:08.962Z'
                    type: string
                  status:
                    description: >-
                      The current status of the attack discovery generation.
                      After dismissing, this will be set to "dismissed".
                    enum:
                      - canceled
                      - dismissed
                      - failed
                      - started
                      - succeeded
                    example: dismissed
                    type: string
                required:
                  - connector_id
                  - discoveries
                  - execution_uuid
                  - loading_message
                  - start
                  - status
          description: >-
            Successful response - The attack discovery generation has been
            dismissed
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: Error type or category
                    example: Bad Request
                    type: string
                  message:
                    description: >-
                      Human-readable error message describing what went wrong
                      with the request.
                    example: Invalid request parameters
                    type: string
                  status_code:
                    description: HTTP status code indicating the type of client error
                    example: 400
                    type: number
                required:
                  - status_code
                  - error
                  - message
          description: Generic Error
      summary: Dismiss an attack discovery generation
      tags:
        - Security AI Assistant API
        - Attack discovery API
      x-code-samples:
        - label: Example request
          lang: curl
          source: |
            curl \
             --request POST 'http://localhost:5601/api/attack_discovery/generations/46b218d5-535d-4329-be56-d0f6af6986b7/_dismiss' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json"
  /api/attack_discovery/schedules:
    post:
      description: >-
        Creates a new Attack discovery schedule that analyzes security alerts at
        specified intervals. The schedule defines when and how Attack discovery
        analysis should run, including which alerts to analyze, which AI
        connector to use, and what actions to take when discoveries are found.
      operationId: CreateAttackDiscoverySchedules
      requestBody:
        content:
          application/json:
            example:
              actions: []
              enabled: true
              name: Daily Security Analysis
              params:
                alerts_index_pattern: .alerts-security.alerts-*
                api_config:
                  actionTypeId: bedrock
                  connectorId: my-bedrock-connector
                  name: Claude 3.5 Sonnet
                end: now
                size: 100
                start: now-24h
              schedule:
                interval: 24h
            schema:
              $ref: '#/components/schemas/AttackDiscoveryApiScheduleCreateProps'
        description: >-
          Attack discovery schedule configuration including name, parameters,
          schedule interval, and actions
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                actions: []
                created_at: '2023-10-31T10:00:00.000Z'
                created_by: elastic
                enabled: true
                id: 12345678-1234-1234-1234-123456789012
                name: Daily Security Analysis
                params:
                  alerts_index_pattern: .alerts-security.alerts-*
                  api_config:
                    actionTypeId: bedrock
                    connectorId: my-bedrock-connector
                    name: Claude 3.5 Sonnet
                  end: now
                  size: 100
                  start: now-24h
                schedule:
                  interval: 24h
                updated_at: '2023-10-31T10:00:00.000Z'
                updated_by: elastic
              schema:
                $ref: '#/components/schemas/AttackDiscoveryApiSchedule'
          description: Successfully created Attack discovery schedule
        '400':
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid request parameters
                status_code: 400
              schema:
                $ref: '#/components/schemas/AttackDiscoveryGenericError'
          description: Generic Error
      summary: Create Attack discovery schedule
      tags:
        - Security AI Assistant API
        - Attack discovery API
      x-code-samples:
        - label: Create an Attack discovery schedule
          lang: curl
          source: |
            curl \
             --request POST 'http://localhost:5601/api/attack_discovery/schedules' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json" \
             --data '{
               "name": "Daily Security Analysis",
               "enabled": true,
               "params": {
                 "alerts_index_pattern": ".alerts-security.alerts-*",
                 "api_config": {
                   "actionTypeId": "bedrock",
                   "connectorId": "my-bedrock-connector",
                   "name": "Claude 3.5 Sonnet"
                 },
                 "size": 100,
                 "start": "now-24h",
                 "end": "now"
               },
               "schedule": {
                 "interval": "24h"
               },
               "actions": []
             }'
  /api/attack_discovery/schedules/_find:
    get:
      description: >-
        Finds Attack discovery schedules that match the search criteria.
        Supports pagination and sorting by various fields.
      operationId: FindAttackDiscoverySchedules
      parameters:
        - description: Page number to return (used for pagination). Defaults to 1.
          example: 1
          in: query
          name: page
          required: false
          schema:
            type: number
        - description: >-
            Number of Attack discovery schedules to return per page (used for
            pagination). Defaults to 10.
          example: 10
          in: query
          name: per_page
          required: false
          schema:
            type: number
        - description: >-
            Field used to sort results. Common fields include 'name',
            'created_at', 'updated_at', and 'enabled'.
          example: name
          in: query
          name: sort_field
          required: false
          schema:
            $ref: '#/components/schemas/NonEmptyString'
        - description: >-
            Sort order direction. Use 'asc' for ascending or 'desc' for
            descending. Defaults to 'asc'.
          example: asc
          in: query
          name: sort_direction
          required: false
          schema:
            enum:
              - asc
              - desc
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    description: Array of matched Attack discovery schedule objects.
                    items:
                      $ref: '#/components/schemas/AttackDiscoveryApiSchedule'
                    type: array
                  page:
                    description: Current page number of the paginated result set.
                    type: number
                  per_page:
                    description: Number of items requested per page.
                    type: number
                  total:
                    description: >-
                      Total number of Attack discovery schedules matching the
                      query (across all pages).
                    type: number
                required:
                  - page
                  - per_page
                  - total
                  - data
          description: Successful response
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: Error type
                    example: Bad Request
                    type: string
                  message:
                    description: Human-readable error message
                    example: Invalid request payload
                    type: string
                  status_code:
                    description: HTTP status code
                    example: 400
                    type: number
          description: Generic Error
      summary: Finds Attack discovery schedules that match the search criteria
      tags:
        - Security AI Assistant API
        - Attack discovery API
      x-code-samples:
        - label: Example request
          lang: curl
          source: |
            curl \
             --request GET 'http://localhost:5601/api/attack_discovery/schedules/_find?page=1&per_page=10&sort_field=name&sort_direction=asc' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json"
  /api/attack_discovery/schedules/{id}:
    delete:
      description: >-
        Permanently deletes an Attack discovery schedule and all associated
        configuration.
      operationId: DeleteAttackDiscoverySchedules
      parameters:
        - description: >-
            The unique identifier (UUID) of the Attack Discovery schedule to
            delete. This ID is returned when creating a schedule and can be
            found in schedule listings.
          example: 12345678-1234-1234-1234-123456789012
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              example:
                id: 12345678-1234-1234-1234-123456789012
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/NonEmptyString'
                    description: >-
                      The unique identifier of the deleted Attack Discovery
                      schedule
                required:
                  - id
          description: >-
            Successfully deleted Attack Discovery schedule, returning the ID of
            the deleted schedule for confirmation
        '400':
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid request parameters
                status_code: 400
              schema:
                $ref: '#/components/schemas/AttackDiscoveryGenericError'
          description: Generic Error
      summary: Delete Attack discovery schedule
      tags:
        - Security AI Assistant API
        - Attack discovery API
      x-code-samples:
        - label: Delete an Attack discovery schedule
          lang: curl
          source: |
            curl \
             --request DELETE 'http://localhost:5601/api/attack_discovery/schedules/12345678-1234-1234-1234-123456789012' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json"
    get:
      description: >-
        Retrieves a specific Attack discovery schedule by its unique identifier.
        Returns complete schedule configuration including parameters, interval
        settings, associated actions, and execution history.
      operationId: GetAttackDiscoverySchedules
      parameters:
        - description: >-
            The unique identifier (UUID) of the Attack Discovery schedule to
            retrieve. This ID is returned when creating a schedule and can be
            found in schedule listings.
          example: 12345678-1234-1234-1234-123456789012
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              example:
                actions: []
                created_at: '2023-10-31T10:00:00.000Z'
                created_by: elastic
                enabled: true
                id: 12345678-1234-1234-1234-123456789012
                last_execution:
                  date: '2023-10-31T10:00:00.000Z'
                  last_duration: 45.2
                  status: ok
                name: Daily Security Analysis
                params:
                  alerts_index_pattern: .alerts-security.alerts-*
                  api_config:
                    actionTypeId: bedrock
                    connectorId: my-bedrock-connector
                    name: Claude 3.5 Sonnet
                  end: now
                  size: 100
                  start: now-24h
                schedule:
                  interval: 24h
                updated_at: '2023-10-31T10:00:00.000Z'
                updated_by: elastic
              schema:
                $ref: '#/components/schemas/AttackDiscoveryApiSchedule'
          description: >-
            Successfully retrieved Attack Discovery schedule with complete
            configuration and metadata
        '400':
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid request parameters
                status_code: 400
              schema:
                $ref: '#/components/schemas/AttackDiscoveryGenericError'
          description: Generic Error
      summary: Get Attack discovery schedule by ID
      tags:
        - Security AI Assistant API
        - Attack discovery API
      x-code-samples:
        - label: Get an Attack discovery schedule by ID
          lang: curl
          source: |
            curl \
             --request GET 'http://localhost:5601/api/attack_discovery/schedules/12345678-1234-1234-1234-123456789012' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json"
    put:
      description: >-
        Updates an existing Attack discovery schedule with new configuration.
        All schedule properties can be modified including name, parameters,
        interval, and actions. The update operation replaces the entire schedule
        configuration with the provided values.
      operationId: UpdateAttackDiscoverySchedules
      parameters:
        - description: >-
            The unique identifier (UUID) of the Attack Discovery schedule to
            update. This ID is returned when creating a schedule and can be
            found in schedule listings.
          example: 12345678-1234-1234-1234-123456789012
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        content:
          application/json:
            example:
              actions: []
              name: Updated Daily Security Analysis
              params:
                alerts_index_pattern: .alerts-security.alerts-*
                api_config:
                  actionTypeId: bedrock
                  connectorId: my-bedrock-connector
                  name: Claude 3.5 Sonnet
                end: now
                size: 200
                start: now-48h
              schedule:
                interval: 12h
            schema:
              $ref: '#/components/schemas/AttackDiscoveryApiScheduleUpdateProps'
        description: >-
          Updated Attack discovery schedule configuration. All fields are
          required as this replaces the entire schedule configuration.
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                actions: []
                created_at: '2023-10-31T10:00:00.000Z'
                created_by: elastic
                enabled: true
                id: 12345678-1234-1234-1234-123456789012
                name: Updated Daily Security Analysis
                params:
                  alerts_index_pattern: .alerts-security.alerts-*
                  api_config:
                    actionTypeId: bedrock
                    connectorId: my-bedrock-connector
                    name: Claude 3.5 Sonnet
                  end: now
                  size: 200
                  start: now-48h
                schedule:
                  interval: 12h
                updated_at: '2023-10-31T12:00:00.000Z'
                updated_by: elastic
              schema:
                $ref: '#/components/schemas/AttackDiscoveryApiSchedule'
          description: >-
            Successfully updated Attack Discovery schedule with the new
            configuration and metadata
        '400':
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid request parameters
                status_code: 400
              schema:
                $ref: '#/components/schemas/AttackDiscoveryGenericError'
          description: Generic Error
      summary: Update Attack discovery schedule
      tags:
        - Security AI Assistant API
        - Attack discovery API
      x-code-samples:
        - label: Update an Attack discovery schedule
          lang: curl
          source: |
            curl \
             --request PUT 'http://localhost:5601/api/attack_discovery/schedules/12345678-1234-1234-1234-123456789012' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json" \
             --data '{
               "name": "Updated Daily Security Analysis",
               "params": {
                 "alerts_index_pattern": ".alerts-security.alerts-*",
                 "api_config": {
                   "actionTypeId": "bedrock",
                   "connectorId": "my-bedrock-connector",
                   "name": "Claude 3.5 Sonnet"
                 },
                 "size": 200,
                 "start": "now-48h",
                 "end": "now"
               },
               "schedule": {
                 "interval": "12h"
               },
               "actions": []
             }'
  /api/attack_discovery/schedules/{id}/_disable:
    put:
      description: >-
        Disables an Attack discovery schedule, preventing it from running
        according to its configured interval. The schedule configuration is
        preserved and can be re-enabled later. Any currently running executions
        will complete, but no new executions will be started.
      operationId: DisableAttackDiscoverySchedules
      parameters:
        - description: >-
            The unique identifier (UUID) of the Attack Discovery schedule to
            disable. This ID is returned when creating a schedule and can be
            found in schedule listings.
          example: 12345678-1234-1234-1234-123456789012
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              example:
                id: 12345678-1234-1234-1234-123456789012
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/NonEmptyString'
                    description: >-
                      The unique identifier of the disabled Attack Discovery
                      schedule
                required:
                  - id
          description: >-
            Successfully disabled Attack Discovery schedule, returning the
            schedule ID for confirmation
        '400':
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid request parameters
                status_code: 400
              schema:
                $ref: '#/components/schemas/AttackDiscoveryGenericError'
          description: Generic Error
      summary: Disable Attack discovery schedule
      tags:
        - Security AI Assistant API
        - Attack discovery API
      x-code-samples:
        - label: Disable an Attack discovery schedule
          lang: curl
          source: |
            curl \
             --request PUT 'http://localhost:5601/api/attack_discovery/schedules/12345678-1234-1234-1234-123456789012/_disable' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json"
  /api/attack_discovery/schedules/{id}/_enable:
    put:
      description: >-
        Enables a previously disabled Attack discovery schedule, allowing it to
        run according to its configured interval. Once enabled, the schedule
        will begin executing at the next scheduled time based on its interval
        configuration.
      operationId: EnableAttackDiscoverySchedules
      parameters:
        - description: >-
            The unique identifier (UUID) of the Attack Discovery schedule to
            enable. This ID is returned when creating a schedule and can be
            found in schedule listings.
          example: 12345678-1234-1234-1234-123456789012
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              example:
                id: 12345678-1234-1234-1234-123456789012
              schema:
                type: object
                properties:
                  id:
                    $ref: '#/components/schemas/NonEmptyString'
                    description: >-
                      The unique identifier of the enabled Attack Discovery
                      schedule
                required:
                  - id
          description: >-
            Successfully enabled Attack Discovery schedule, returning the
            schedule ID for confirmation
        '400':
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid request parameters
                status_code: 400
              schema:
                $ref: '#/components/schemas/AttackDiscoveryGenericError'
          description: Generic Error
      summary: Enable Attack discovery schedule
      tags:
        - Security AI Assistant API
        - Attack discovery API
      x-code-samples:
        - label: Enable an Attack discovery schedule
          lang: curl
          source: |
            curl \
             --request PUT 'http://localhost:5601/api/attack_discovery/schedules/12345678-1234-1234-1234-123456789012/_enable' \
             --header "Authorization: $API_KEY" \
             --header "Content-Type: application/json"
  /api/security_ai_assistant/anonymization_fields/_bulk_action:
    post:
      description: >-
        Apply a bulk action to multiple anonymization fields. The bulk action is
        applied to all anonymization fields that match the filter or to the list
        of anonymization fields by their IDs.
      operationId: PerformAnonymizationFieldsBulkAction
      requestBody:
        content:
          application/json:
            schema:
              example:
                create:
                  - allowed: true
                    anonymized: false
                    field: host.name
                  - allowed: false
                    anonymized: true
                    field: user.name
                delete:
                  ids:
                    - field5
                    - field6
                  query: 'field: host.name'
                update:
                  - allowed: true
                    anonymized: false
                    id: field8
                  - allowed: false
                    anonymized: true
                    id: field9
              type: object
              properties:
                create:
                  description: Array of anonymization fields to create.
                  items:
                    $ref: '#/components/schemas/AnonymizationFieldCreateProps'
                  type: array
                delete:
                  description: >-
                    Object containing the query to filter anonymization fields
                    and/or an array of anonymization field IDs to delete.
                  type: object
                  properties:
                    ids:
                      description: Array of IDs to apply the action to.
                      example:
                        - '1234'
                        - '5678'
                      items:
                        type: string
                      minItems: 1
                      type: array
                    query:
                      description: Query to filter the bulk action.
                      example: 'status: ''inactive'''
                      type: string
                update:
                  description: Array of anonymization fields to update.
                  items:
                    $ref: '#/components/schemas/AnonymizationFieldUpdateProps'
                  type: array
      responses:
        '200':
          content:
            application/json:
              example:
                anonymization_fields_count: 5
                attributes:
                  results:
                    created:
                      - allowed: false
                        anonymized: true
                        createdAt: '2023-10-31T12:00:00Z'
                        createdBy: user1
                        field: host.name
                        id: field2
                        namespace: default
                        timestamp: '2023-10-31T12:00:00Z'
                        updatedAt: '2023-10-31T12:00:00Z'
                        updatedBy: user1
                    deleted:
                      - field3
                    skipped:
                      - id: field4
                        name: user.name
                        skip_reason: ANONYMIZATION_FIELD_NOT_MODIFIED
                    updated:
                      - allowed: true
                        anonymized: false
                        createdAt: '2023-10-31T12:00:00Z'
                        createdBy: user1
                        field: url.domain
                        id: field8
                        namespace: default
                        timestamp: '2023-10-31T12:00:00Z'
                        updatedAt: '2023-10-31T12:00:00Z'
                        updatedBy: user1
                  summary:
                    failed: 1
                    skipped: 1
                    succeeded: 2
                    total: 5
                message: Bulk action completed successfully
                status_code: 200
                success: true
              schema:
                $ref: '#/components/schemas/AnonymizationFieldsBulkCrudActionResponse'
          description: Indicates a successful call.
        '400':
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid request body
                statusCode: 400
              schema:
                type: object
                properties:
                  error:
                    description: Error type or name.
                    type: string
                  message:
                    description: Detailed error message.
                    type: string
                  statusCode:
                    description: Status code of the response.
                    type: number
          description: Generic Error
      summary: Apply a bulk action to anonymization fields
      tags:
        - Security AI Assistant API
        - Bulk API
  /api/security_ai_assistant/anonymization_fields/_find:
    get:
      description: Get a list of all anonymization fields.
      operationId: FindAnonymizationFields
      parameters:
        - description: Fields to return
          example:
            - id
            - field
            - anonymized
            - allowed
          in: query
          name: fields
          required: false
          schema:
            items:
              type: string
            type: array
        - description: Search query
          example: 'field: "user.name"'
          in: query
          name: filter
          required: false
          schema:
            type: string
        - description: Field to sort by
          example: created_at
          in: query
          name: sort_field
          required: false
          schema:
            $ref: '#/components/schemas/FindAnonymizationFieldsSortField'
        - description: Sort order
          example: asc
          in: query
          name: sort_order
          required: false
          schema:
            $ref: '#/components/schemas/SortOrder'
        - description: Page number
          example: 1
          in: query
          name: page
          required: false
          schema:
            default: 1
            minimum: 1
            type: integer
        - description: AnonymizationFields per page
          example: 20
          in: query
          name: per_page
          required: false
          schema:
            default: 20
            minimum: 0
            type: integer
        - description: >-
            If true, additionally fetch all anonymization fields, otherwise
            fetch only the provided page
          in: query
          name: all_data
          required: false
          schema:
            type: boolean
      responses:
        '200':
          content:
            application/json:
              example:
                aggregations:
                  anonymized:
                    buckets:
                      allowed:
                        doc_count: 1
                      anonymized:
                        doc_count: 1
                      denied:
                        doc_count: 1
                all:
                  - allowed: true
                    anonymized: true
                    createdAt: '2023-10-31T12:00:00Z'
                    createdBy: user1
                    field: user.name
                    id: '1'
                    namespace: default
                    timestamp: '2023-10-31T12:00:00Z'
                    updatedAt: '2023-10-31T12:00:00Z'
                    updatedBy: user1
                data:
                  - allowed: true
                    anonymized: true
                    createdAt: '2023-10-31T12:00:00Z'
                    createdBy: user1
                    field: user.name
                    id: '1'
                    namespace: default
                    timestamp: '2023-10-31T12:00:00Z'
                    updatedAt: '2023-10-31T12:00:00Z'
                    updatedBy: user1
                page: 1
                perPage: 20
                total: 100
              schema:
                type: object
                properties:
                  aggregations:
                    type: object
                    properties:
                      field_status:
                        type: object
                        properties:
                          buckets:
                            type: object
                            properties:
                              allowed:
                                type: object
                                properties:
                                  doc_count:
                                    default: 0
                                    type: integer
                              anonymized:
                                type: object
                                properties:
                                  doc_count:
                                    default: 0
                                    type: integer
                              denied:
                                type: object
                                properties:
                                  doc_count:
                                    default: 0
                                    type: integer
                  all:
                    items:
                      $ref: '#/components/schemas/AnonymizationFieldResponse'
                    type: array
                  data:
                    items:
                      $ref: '#/components/schemas/AnonymizationFieldResponse'
                    type: array
                  page:
                    type: integer
                  perPage:
                    type: integer
                  total:
                    type: integer
                required:
                  - page
                  - perPage
                  - total
                  - data
          description: Successful response
        '400':
          content:
            application/json:
              example:
                error: Bad Request
                message: Invalid request parameters
                statusCode: 400
              schema:
                type: object
                properties:
                  error:
                    type: string
                  message:
                    type: string
                  statusCode:
                    type: number
          description: Generic Error
      summary: Get anonymization fields
      tags:
        - Security AI Assistant API
        - AnonymizationFields API
  /api/security_ai_assistant/chat/complete:
    post:
      description: Create a model response for the given chat conversation.
      operationId: ChatComplete
      parameters:
        - description: If true, the response will not include content references.
          example: false
          in: query
          name: content_references_disabled
          required: false
          schema:
            default: false
            type: boolean
      requestBody:
        content:
          application/json:
            example:
              connectorId: conn-001
              conversationId: abc123
              isStream: true
              langSmithApiKey: sk-abc123
              langSmithProject: security_ai_project
              messages:
                - content: What are some common phishing techniques?
                  data:
                    user_id: user_789
                  fields_to_anonymize:
                    - user.name
                    - source.ip
                  role: user
              model: gpt-4
              persist: true
              promptId: prompt_456
              responseLanguage: en
            schema:
              $ref: '#/components/schemas/ChatCompleteProps'
        required: true
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Indicates a successful model response call.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: Error type.
                    example: Bad Request
                    type: string
                  message:
                    description: Human-readable error message.
                    example: Invalid request payload.
                    type: string
                  statusCode:
                    description: HTTP status code.
                    example: 400
                    type: number
          description: Generic Error
      summary: Create a model response
      tags:
        - Security AI Assistant API
        - Chat Complete API
  /api/security_ai_assistant/current_user/conversations:
    delete:
      description: This endpoint allows users to permanently delete all conversations.
      operationId: DeleteAllConversations
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                excludedIds:
                  description: Optional list of conversation IDs to delete.
                  example:
                    - abc123
                    - def456
                  items:
                    type: string
                  type: array
        required: false
      responses:
        '200':
          content:
            application/json:
              example:
                success: true
              schema:
                type: object
                properties:
                  failures:
                    items:
                      type: string
                    type: array
                  success:
                    example: true
                    type: boolean
                  totalDeleted:
                    example: 10
                    type: number
          description: >-
            Indicates a successful call. The conversations were deleted
            successfully.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    example: Bad Request
                    type: string
                  message:
                    example: Invalid conversation ID
                    type: string
                  statusCode:
                    example: 400
                    type: number
          description: Generic Error. This response indicates an issue with the request.
      summary: Delete conversations
      tags:
        - Security AI Assistant API
        - Conversation API
    post:
      description: >-
        Create a new Security AI Assistant conversation. This endpoint allows
        the user to initiate a conversation with the Security AI Assistant by
        providing the required parameters.
      operationId: CreateConversation
      requestBody:
        content:
          application/json:
            example:
              apiConfig:
                actionTypeId: '67890'
                connectorId: '12345'
              category: assistant
              excludeFromLastConversationStorage: false
              messages:
                - content: Hello, how can I assist you today?
                  role: system
                  timestamp: '2023-10-31T12:00:00Z'
              replacements: {}
              title: Security Discussion
            schema:
              $ref: '#/components/schemas/ConversationCreateProps'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                apiConfig:
                  actionTypeId: '67890'
                  connectorId: '12345'
                category: assistant
                createdAt: '2023-10-31T12:01:00Z'
                excludeFromLastConversationStorage: false
                id: abc123
                messages:
                  - content: Hello, how can I assist you today?
                    role: system
                    timestamp: '2023-10-31T12:00:00Z'
                replacements: {}
                title: Security Discussion
                updatedAt: '2023-10-31T12:01:00Z'
                users:
                  - id: user1
                    name: John Doe
              schema:
                $ref: '#/components/schemas/ConversationResponse'
          description: >-
            Indicates a successful call. The conversation was created
            successfully.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    example: Bad Request
                    type: string
                  message:
                    example: 'Missing required parameter: title'
                    type: string
                  statusCode:
                    example: 400
                    type: number
          description: >-
            Generic Error. This response indicates an issue with the request,
            such as missing required parameters or incorrect data.
      summary: Create a conversation
      tags:
        - Security AI Assistant API
        - Conversation API
  /api/security_ai_assistant/current_user/conversations/_find:
    get:
      description: >-
        Get a list of all conversations for the current user. This endpoint
        allows users to search, filter, sort, and paginate through their
        conversations.
      operationId: FindConversations
      parameters:
        - description: >-
            A list of fields to include in the response. If omitted, all fields
            are returned.
          in: query
          name: fields
          required: false
          schema:
            example:
              - id
              - title
              - createdAt
            items:
              type: string
            type: array
        - description: >-
            A search query to filter the conversations. Can match against
            titles, messages, or other conversation attributes.
          in: query
          name: filter
          required: false
          schema:
            example: Security Issue
            type: string
        - description: >-
            The field by which to sort the results. Valid fields are
            `created_at`, `title`, and `updated_at`.
          in: query
          name: sort_field
          required: false
          schema:
            $ref: '#/components/schemas/FindConversationsSortField'
            example: created_at
        - description: >-
            The order in which to sort the results. Can be either `asc` for
            ascending or `desc` for descending.
          in: query
          name: sort_order
          required: false
          schema:
            $ref: '#/components/schemas/SortOrder'
            example: desc
        - description: The page number of the results to retrieve. Default is 1.
          in: query
          name: page
          required: false
          schema:
            default: 1
            example: 1
            minimum: 1
            type: integer
        - description: The number of conversations to return per page. Default is 20.
          in: query
          name: per_page
          required: false
          schema:
            default: 20
            example: 20
            minimum: 0
            type: integer
        - description: >-
            Whether to return conversations that the current user owns. If true,
            only conversations owned by the user are returned.
          in: query
          name: is_owner
          required: false
          schema:
            default: false
            example: true
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    description: A list of conversations.
                    items:
                      $ref: '#/components/schemas/ConversationResponse'
                    type: array
                  page:
                    description: The current page of the results.
                    example: 1
                    type: integer
                  perPage:
                    description: The number of results returned per page.
                    example: 20
                    type: integer
                  total:
                    description: >-
                      The total number of conversations matching the filter
                      criteria.
                    example: 100
                    type: integer
                required:
                  - page
                  - perPage
                  - total
                  - data
          description: >-
            Successful response, returns a paginated list of conversations
            matching the specified criteria.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    example: Bad Request
                    type: string
                  message:
                    example: Invalid filter query parameter
                    type: string
                  statusCode:
                    example: 400
                    type: number
          description: >-
            Generic Error. The request could not be processed due to an invalid
            query parameter or other issue.
      summary: Get conversations
      tags:
        - Security AI Assistant API
        - Conversations API
  /api/security_ai_assistant/current_user/conversations/{id}:
    delete:
      description: >-
        Delete an existing conversation using the conversation ID. This endpoint
        allows users to permanently delete a conversation.
      operationId: DeleteConversation
      parameters:
        - description: The conversation's `id` value.
          example: abc123
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              example:
                apiConfig:
                  actionTypeId: '67890'
                  connectorId: '12345'
                category: assistant
                createdAt: '2023-10-31T12:01:00Z'
                excludeFromLastConversationStorage: false
                id: abc123
                messages:
                  - content: The conversation has been deleted.
                    role: system
                    timestamp: '2023-10-31T12:35:00Z'
                replacements: {}
                title: Deleted Security Discussion
                updatedAt: '2023-10-31T12:01:00Z'
                users:
                  - id: user1
                    name: John Doe
              schema:
                $ref: '#/components/schemas/ConversationResponse'
          description: >-
            Indicates a successful call. The conversation was deleted
            successfully.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    example: Bad Request
                    type: string
                  message:
                    example: Invalid conversation ID
                    type: string
                  statusCode:
                    example: 400
                    type: number
          description: Generic Error. This response indicates an issue with the request.
      summary: Delete a conversation
      tags:
        - Security AI Assistant API
        - Conversation API
    get:
      description: >-
        Get the details of an existing conversation using the conversation ID.
        This allows users to fetch the specific conversation data by its unique
        ID.
      operationId: ReadConversation
      parameters:
        - description: >-
            The conversation's `id` value, a unique identifier for the
            conversation.
          example: abc123
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              example:
                apiConfig:
                  actionTypeId: '67890'
                  connectorId: '12345'
                category: assistant
                createdAt: '2023-10-31T12:01:00Z'
                excludeFromLastConversationStorage: false
                id: abc123
                messages:
                  - content: Hello, how can I assist you today?
                    role: system
                    timestamp: '2023-10-31T12:00:00Z'
                replacements: {}
                title: Security Discussion
                updatedAt: '2023-10-31T12:01:00Z'
                users:
                  - id: user1
                    name: John Doe
              schema:
                $ref: '#/components/schemas/ConversationResponse'
          description: Indicates a successful call. The conversation details are returned.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    example: Bad Request
                    type: string
                  message:
                    example: Invalid conversation ID
                    type: string
                  statusCode:
                    example: 400
                    type: number
          description: Generic Error. The request could not be processed due to an error.
      summary: Get a conversation
      tags:
        - Security AI Assistant API
        - Conversations API
    put:
      description: >-
        Update an existing conversation using the conversation ID. This endpoint
        allows users to modify the details of an existing conversation.
      operationId: UpdateConversation
      parameters:
        - description: The conversation's `id` value.
          example: abc123
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        content:
          application/json:
            example:
              apiConfig:
                actionTypeId: '09876'
                connectorId: '54321'
              category: insights
              excludeFromLastConversationStorage: true
              messages:
                - content: The issue was resolved.
                  role: assistant
                  timestamp: '2023-10-31T12:30:00Z'
              replacements: {}
              title: Updated Security Discussion
            schema:
              $ref: '#/components/schemas/ConversationUpdateProps'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                apiConfig:
                  actionTypeId: '09876'
                  connectorId: '54321'
                category: insights
                createdAt: '2023-10-31T12:01:00Z'
                excludeFromLastConversationStorage: true
                id: abc123
                messages:
                  - content: The issue was resolved.
                    role: assistant
                    timestamp: '2023-10-31T12:30:00Z'
                replacements: {}
                title: Updated Security Discussion
                updatedAt: '2023-10-31T12:31:00Z'
                users:
                  - id: user1
                    name: John Doe
              schema:
                $ref: '#/components/schemas/ConversationResponse'
          description: >-
            Indicates a successful call. The conversation was updated
            successfully.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    example: Bad Request
                    type: string
                  message:
                    example: 'Missing required field: title'
                    type: string
                  statusCode:
                    example: 400
                    type: number
          description: >-
            Generic Error. This response indicates an issue with the request,
            such as missing required parameters or incorrect data.
      summary: Update a conversation
      tags:
        - Security AI Assistant API
        - Conversation API
  /api/security_ai_assistant/knowledge_base/{resource}:
    get:
      description: Read a single KB
      operationId: ReadKnowledgeBase
      parameters:
        - description: The KnowledgeBase `resource` value.
          example: kb12345
          in: path
          name: resource
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  defend_insights_exists:
                    description: >-
                      Indicates if Defend Insights documentation exists in the
                      KnowledgeBase.
                    example: true
                    type: boolean
                  elser_exists:
                    description: Indicates if the ELSER model exists for the KnowledgeBase.
                    example: true
                    type: boolean
                  is_setup_available:
                    description: >-
                      Indicates if the setup process is available for the
                      KnowledgeBase.
                    example: true
                    type: boolean
                  is_setup_in_progress:
                    description: Indicates if the setup process is currently in progress.
                    example: false
                    type: boolean
                  product_documentation_status:
                    description: >-
                      The status of the product documentation in the
                      KnowledgeBase.
                    example: complete
                    type: string
                  security_labs_exists:
                    description: >-
                      Indicates if Security Labs documentation exists in the
                      KnowledgeBase.
                    example: true
                    type: boolean
                  user_data_exists:
                    description: Indicates if user data exists in the KnowledgeBase.
                    example: false
                    type: boolean
          description: Indicates a successful call.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: A short description of the error.
                    example: Bad Request
                    type: string
                  message:
                    description: A detailed error message.
                    example: Invalid resource ID provided.
                    type: string
                  statusCode:
                    description: The HTTP status code of the error.
                    example: 400
                    type: number
          description: Generic Error
      summary: Read a KnowledgeBase
      tags:
        - Security AI Assistant API
        - KnowledgeBase API
    post:
      description: Create a KnowledgeBase
      operationId: CreateKnowledgeBase
      parameters:
        - description: The KnowledgeBase `resource` value.
          example: kb12345
          in: path
          name: resource
          schema:
            type: string
        - description: >-
            ELSER modelId to use when setting up the Knowledge Base. If not
            provided, a default model will be used.
          example: elser-model-001
          in: query
          name: modelId
          required: false
          schema:
            type: string
        - description: >-
            Indicates whether we should or should not install Security Labs docs
            when setting up the Knowledge Base. Defaults to `false`.
          example: true
          in: query
          name: ignoreSecurityLabs
          required: false
          schema:
            default: false
            type: boolean
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseResponse'
          description: Indicates a successful call.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: A short description of the error.
                    example: Bad Request
                    type: string
                  message:
                    description: A detailed error message.
                    example: Invalid resource ID provided.
                    type: string
                  statusCode:
                    description: The HTTP status code of the error.
                    example: 400
                    type: number
          description: Generic Error
      summary: Create a KnowledgeBase
      tags:
        - Security AI Assistant API
        - KnowledgeBase API
  /api/security_ai_assistant/knowledge_base/entries:
    post:
      description: Create a Knowledge Base Entry
      operationId: CreateKnowledgeBaseEntry
      requestBody:
        content:
          application/json:
            example:
              content: >-
                To reset your password, go to the settings page and click 'Reset
                Password'.
              tags:
                - password
                - reset
                - help
              title: How to reset a password
            schema:
              $ref: '#/components/schemas/KnowledgeBaseEntryCreateProps'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                content: >-
                  To reset your password, go to the settings page and click
                  'Reset Password'.
                id: '12345'
                tags:
                  - password
                  - reset
                  - help
                title: How to reset a password
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryResponse'
          description: Successful request returning Knowledge Base Entries
        '400':
          content:
            application/json:
              example:
                error: Invalid input
                message: The 'title' field is required.
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryErrorSchema'
          description: >-
            A generic error occurred, such as invalid input or missing required
            fields.
      summary: Create a Knowledge Base Entry
      tags:
        - Security AI Assistant API
        - Knowledge Base Entries API
  /api/security_ai_assistant/knowledge_base/entries/_bulk_action:
    post:
      description: >-
        The bulk action is applied to all Knowledge Base Entries that match the
        filter or to the list of Knowledge Base Entries by their IDs.
      operationId: PerformKnowledgeBaseEntryBulkAction
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                create:
                  description: List of Knowledge Base Entries to create.
                  example:
                    - content: This is the content of the new entry.
                      title: New Entry
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseEntryCreateProps'
                  type: array
                delete:
                  type: object
                  properties:
                    ids:
                      description: Array of Knowledge Base Entry IDs.
                      example:
                        - '123'
                        - '456'
                        - '789'
                      items:
                        type: string
                      minItems: 1
                      type: array
                    query:
                      description: Query to filter Knowledge Base Entries.
                      example: status:active AND category:technology
                      type: string
                update:
                  description: List of Knowledge Base Entries to update.
                  example:
                    - content: Updated content.
                      id: '123'
                      title: Updated Entry
                  items:
                    $ref: '#/components/schemas/KnowledgeBaseEntryUpdateProps'
                  type: array
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryBulkCrudActionResponse'
          description: Successful bulk operation request
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryErrorSchema'
          description: Generic Error
      summary: Applies a bulk action to multiple Knowledge Base Entries
      tags:
        - Security AI Assistant API
        - Knowledge Base Entries Bulk API
  /api/security_ai_assistant/knowledge_base/entries/_find:
    get:
      description: Finds Knowledge Base Entries that match the given query.
      operationId: FindKnowledgeBaseEntries
      parameters:
        - description: >-
            A list of fields to include in the response. If not provided, all
            fields will be included.
          in: query
          name: fields
          required: false
          schema:
            example:
              - title
              - created_at
            items:
              type: string
            type: array
        - description: Search query to filter Knowledge Base Entries by specific criteria.
          in: query
          name: filter
          required: false
          schema:
            example: error handling
            type: string
        - description: Field to sort the Knowledge Base Entries by.
          in: query
          name: sort_field
          required: false
          schema:
            $ref: '#/components/schemas/FindKnowledgeBaseEntriesSortField'
            example: created_at
        - description: Sort order for the results, either asc or desc.
          in: query
          name: sort_order
          required: false
          schema:
            $ref: '#/components/schemas/SortOrder'
            example: asc
        - description: Page number for paginated results. Defaults to 1.
          in: query
          name: page
          required: false
          schema:
            default: 1
            example: 2
            minimum: 1
            type: integer
        - description: Number of Knowledge Base Entries to return per page. Defaults to 20.
          in: query
          name: per_page
          required: false
          schema:
            default: 20
            example: 10
            minimum: 0
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    description: The list of Knowledge Base Entries for the current page.
                    items:
                      $ref: '#/components/schemas/KnowledgeBaseEntryResponse'
                    type: array
                  page:
                    description: The current page number.
                    example: 1
                    type: integer
                  perPage:
                    description: The number of Knowledge Base Entries returned per page.
                    example: 20
                    type: integer
                  total:
                    description: The total number of Knowledge Base Entries available.
                    example: 100
                    type: integer
                required:
                  - page
                  - perPage
                  - total
                  - data
          description: Successful response containing the paginated Knowledge Base Entries.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: A short description of the error.
                    example: Bad Request
                    type: string
                  message:
                    description: A detailed message explaining the error.
                    example: 'Invalid query parameter: sort_order'
                    type: string
                  statusCode:
                    description: The HTTP status code of the error.
                    example: 400
                    type: number
          description: Generic Error indicating an issue with the request.
      summary: Finds Knowledge Base Entries that match the given query.
      tags:
        - Security AI Assistant API
        - Knowledge Base Entries API
  /api/security_ai_assistant/knowledge_base/entries/{id}:
    delete:
      description: Delete a Knowledge Base Entry by its unique `id`.
      operationId: DeleteKnowledgeBaseEntry
      parameters:
        - description: The unique identifier (`id`) of the Knowledge Base Entry to delete.
          example: '12345'
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              example:
                id: '12345'
                message: Knowledge Base Entry successfully deleted.
              schema:
                $ref: '#/components/schemas/DeleteResponseFields'
          description: >-
            Successful request returning the `id` of the deleted Knowledge Base
            Entry.
        '400':
          content:
            application/json:
              example:
                error: Not Found
                message: No Knowledge Base Entry found with the provided `id`.
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryErrorSchema'
          description: >-
            A generic error occurred, such as an invalid `id` or the entry not
            being found.
      summary: Deletes a single Knowledge Base Entry using the `id` field
      tags:
        - Security AI Assistant API
        - Knowledge Base Entries API
    get:
      description: Retrieve a Knowledge Base Entry by its unique `id`.
      operationId: ReadKnowledgeBaseEntry
      parameters:
        - description: >-
            The unique identifier (`id`) of the Knowledge Base Entry to
            retrieve.
          example: '12345'
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      responses:
        '200':
          content:
            application/json:
              example:
                content: >-
                  To reset your password, go to the settings page and click
                  'Reset Password'.
                id: '12345'
                tags:
                  - password
                  - reset
                  - help
                title: How to reset a password
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryResponse'
          description: Successful request returning the requested Knowledge Base Entry.
        '400':
          content:
            application/json:
              example:
                error: Not Found
                message: No Knowledge Base Entry found with the provided `id`.
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryErrorSchema'
          description: >-
            A generic error occurred, such as an invalid `id` or the entry not
            being found.
      summary: Read a Knowledge Base Entry
      tags:
        - Security AI Assistant API
        - Knowledge Base Entries API
    put:
      description: Update an existing Knowledge Base Entry by its unique `id`.
      operationId: UpdateKnowledgeBaseEntry
      parameters:
        - description: The unique identifier (`id`) of the Knowledge Base Entry to update.
          example: '12345'
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/NonEmptyString'
      requestBody:
        content:
          application/json:
            example:
              content: >-
                To reset your password, go to the settings page, click 'Reset
                Password', and follow the instructions.
              tags:
                - password
                - reset
                - help
                - update
              title: How to reset a password (updated)
            schema:
              $ref: '#/components/schemas/KnowledgeBaseEntryUpdateRouteProps'
        required: true
      responses:
        '200':
          content:
            application/json:
              example:
                content: >-
                  To reset your password, go to the settings page, click 'Reset
                  Password', and follow the instructions.
                id: '12345'
                tags:
                  - password
                  - reset
                  - help
                  - update
                title: How to reset a password (updated)
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryResponse'
          description: Successful request returning the updated Knowledge Base Entry.
        '400':
          content:
            application/json:
              example:
                error: Invalid input
                message: The 'content' field cannot be empty.
              schema:
                $ref: '#/components/schemas/KnowledgeBaseEntryErrorSchema'
          description: >-
            A generic error occurred, such as invalid input or the entry not
            being found.
      summary: Update a Knowledge Base Entry
      tags:
        - Security AI Assistant API
        - Knowledge Base Entries API
  /api/security_ai_assistant/prompts/_bulk_action:
    post:
      description: >-
        Apply a bulk action to multiple prompts. The bulk action is applied to
        all prompts that match the filter or to the list of prompts by their
        IDs. This action allows for bulk create, update, or delete operations.
      operationId: PerformPromptsBulkAction
      requestBody:
        content:
          application/json:
            example:
              create:
                - content: Please verify the security settings.
                  name: New Security Prompt
                  promptType: system
              delete:
                ids:
                  - prompt1
                  - prompt2
              update:
                - content: Updated content for security prompt.
                  id: prompt123
            schema:
              type: object
              properties:
                create:
                  description: List of prompts to be created.
                  items:
                    $ref: '#/components/schemas/PromptCreateProps'
                  type: array
                delete:
                  description: Criteria for deleting prompts in bulk.
                  type: object
                  properties:
                    ids:
                      description: Array of IDs to apply the action to.
                      example:
                        - '1234'
                        - '5678'
                      items:
                        type: string
                      minItems: 1
                      type: array
                    query:
                      description: Query to filter the bulk action.
                      example: 'status: ''inactive'''
                      type: string
                update:
                  description: List of prompts to be updated.
                  items:
                    $ref: '#/components/schemas/PromptUpdateProps'
                  type: array
      responses:
        '200':
          content:
            application/json:
              examples:
                success:
                  value:
                    attributes:
                      errors: []
                      results:
                        created:
                          - content: Please verify the security settings.
                            id: prompt6
                            name: New Security Prompt
                            promptType: system
                        deleted:
                          - prompt2
                          - prompt3
                        skipped:
                          - id: prompt4
                            name: Security Prompt
                            skip_reason: PROMPT_FIELD_NOT_MODIFIED
                        updated:
                          - content: Updated security settings prompt
                            id: prompt1
                            name: Security Prompt
                            promptType: system
                      summary:
                        failed: 0
                        skipped: 1
                        succeeded: 4
                        total: 5
                    message: Bulk action completed successfully.
                    prompts_count: 5
                    status_code: 200
                    success: true
              schema:
                $ref: '#/components/schemas/PromptsBulkCrudActionResponse'
          description: Indicates a successful call with the results of the bulk action.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: A short error message.
                    example: Bad Request
                    type: string
                  message:
                    description: A detailed error message.
                    example: Invalid prompt ID or missing required fields.
                    type: string
                  statusCode:
                    description: The HTTP status code for the error.
                    example: 400
                    type: number
          description: Indicates a generic error due to a bad request.
      summary: Apply a bulk action to prompts
      tags:
        - Security AI Assistant API
        - Bulk API
  /api/security_ai_assistant/prompts/_find:
    get:
      description: >-
        Get a list of all prompts based on optional filters, sorting, and
        pagination.
      operationId: FindPrompts
      parameters:
        - description: List of specific fields to include in each returned prompt.
          in: query
          name: fields
          required: false
          schema:
            example:
              - id
              - name
              - content
            items:
              type: string
            type: array
        - description: Search query string to filter prompts by matching fields.
          in: query
          name: filter
          required: false
          schema:
            example: error handling
            type: string
        - description: Field to sort prompts by.
          in: query
          name: sort_field
          required: false
          schema:
            $ref: '#/components/schemas/FindPromptsSortField'
        - description: Sort order, either asc or desc.
          in: query
          name: sort_order
          required: false
          schema:
            $ref: '#/components/schemas/SortOrder'
        - description: Page number for pagination.
          in: query
          name: page
          required: false
          schema:
            default: 1
            example: 1
            minimum: 1
            type: integer
        - description: Number of prompts per page.
          in: query
          name: per_page
          required: false
          schema:
            default: 20
            example: 20
            minimum: 0
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                example:
                  data:
                    - categories:
                        - troubleshooting
                        - logging
                      color: '#FF5733'
                      consumer: security
                      content: If you encounter an error, check the logs and retry.
                      createdAt: '2025-04-20T21:00:00Z'
                      createdBy: jdoe
                      id: prompt-123
                      isDefault: true
                      isNewConversationDefault: false
                      name: Error Troubleshooting Prompt
                      namespace: default
                      promptType: standard
                      timestamp: '2025-04-30T22:30:00Z'
                      updatedAt: '2025-04-30T22:45:00Z'
                      updatedBy: jdoe
                      users:
                        - full_name: John Doe
                          username: jdoe
                  page: 1
                  perPage: 20
                  total: 142
                type: object
                properties:
                  data:
                    description: >-
                      The list of prompts returned based on the search query,
                      sorting, and pagination.
                    items:
                      $ref: '#/components/schemas/PromptResponse'
                    type: array
                  page:
                    description: Current page number.
                    example: 1
                    type: integer
                  perPage:
                    description: Number of prompts per page.
                    example: 20
                    type: integer
                  total:
                    description: Total number of prompts matching the query.
                    example: 142
                    type: integer
                required:
                  - page
                  - perPage
                  - total
                  - data
          description: Successful response containing a list of prompts.
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    description: Short error message.
                    example: Bad Request
                    type: string
                  message:
                    description: Detailed description of the error.
                    example: Invalid sort order value provided.
                    type: string
                  statusCode:
                    description: HTTP status code for the error.
                    example: 400
                    type: number
          description: Bad request due to invalid parameters or malformed query.
      summary: Get prompts
      tags:
        - Security AI Assistant API
        - Prompts API
components:
  schemas:
    AnonymizationFieldCreateProps:
      type: object
      properties:
        allowed:
          description: Whether this field is allowed to be sent to the model.
          example: true
          type: boolean
        anonymized:
          description: Whether this field should be anonymized.
          example: false
          type: boolean
        field:
          description: Name of the anonymization field to create.
          example: host.name
          type: string
      required:
        - field
    AnonymizationFieldDetailsInError:
      type: object
      properties:
        id:
          description: The ID of the anonymization field.
          example: field12
          type: string
        name:
          description: Name of the anonymization field.
          example: host.name
          type: string
      required:
        - id
    AnonymizationFieldResponse:
      type: object
      properties:
        allowed:
          description: Whether this field is allowed to be sent to the model.
          example: true
          type: boolean
        anonymized:
          description: Whether this field should be anonymized.
          example: false
          type: boolean
        createdAt:
          description: Timestamp of when the anonymization field was created.
          example: '2023-10-31T12:00:00Z'
          type: string
        createdBy:
          description: Username of the person who created the anonymization field.
          example: user1
          type: string
        field:
          description: Name of the anonymization field.
          example: url.domain
          type: string
        id:
          $ref: '#/components/schemas/NonEmptyString'
          description: The ID of the anonymization field.
        namespace:
          description: Kibana space in which this anonymization field exists.
          example: default
          type: string
        timestamp:
          $ref: '#/components/schemas/NonEmptyTimestamp'
          description: Timestamp when the anonymization field was initially created.
        updatedAt:
          description: Timestamp of the last update.
          example: '2023-10-31T12:00:00Z'
          type: string
        updatedBy:
          description: Username of the person who last updated the field.
          example: user1
          type: string
      required:
        - id
        - field
    AnonymizationFieldsBulkActionSkipReason:
      description: Reason why the anonymization field was not modified.
      enum:
        - ANONYMIZATION_FIELD_NOT_MODIFIED
      type: string
    AnonymizationFieldsBulkActionSkipResult:
      type: object
      properties:
        id:
          description: The ID of the anonymization field that was not modified.
          example: field4
          type: string
        name:
          description: Name of the anonymization field that was not modified.
          example: user.name
          type: string
        skip_reason:
          $ref: '#/components/schemas/AnonymizationFieldsBulkActionSkipReason'
          description: Reason why the anonymization field was not modified.
      required:
        - id
        - skip_reason
    AnonymizationFieldsBulkCrudActionResponse:
      type: object
      properties:
        anonymization_fields_count:
          description: Total number of anonymization fields processed.
          example: 5
          type: integer
        attributes:
          type: object
          properties:
            errors:
              description: List of errors that occurred during the bulk operation.
              items:
                $ref: '#/components/schemas/NormalizedAnonymizationFieldError'
              type: array
            results:
              $ref: '#/components/schemas/AnonymizationFieldsBulkCrudActionResults'
            summary:
              $ref: '#/components/schemas/BulkCrudActionSummary'
          required:
            - results
            - summary
        message:
          description: Message providing information about the bulk action result.
          example: Bulk action completed successfully
          type: string
        status_code:
          description: HTTP status code returned.
          example: 200
          type: integer
        success:
          description: Indicates if the bulk action was successful.
          example: true
          type: boolean
      required:
        - attributes
    AnonymizationFieldsBulkCrudActionResults:
      type: object
      properties:
        created:
          description: List of anonymization fields successfully created.
          items:
            $ref: '#/components/schemas/AnonymizationFieldResponse'
          type: array
        deleted:
          items:
            description: Array of IDs of anonymization fields that were deleted.
            example: field3
            type: string
          type: array
        skipped:
          description: List of anonymization fields that were skipped during the operation.
          items:
            $ref: '#/components/schemas/AnonymizationFieldsBulkActionSkipResult'
          type: array
        updated:
          description: List of anonymization fields successfully updated.
          items:
            $ref: '#/components/schemas/AnonymizationFieldResponse'
          type: array
      required:
        - updated
        - created
        - deleted
        - skipped
    AnonymizationFieldUpdateProps:
      type: object
      properties:
        allowed:
          description: Whether this field is allowed to be sent to the model.
          example: true
          type: boolean
        anonymized:
          description: Whether this field should be anonymized.
          example: false
          type: boolean
        id:
          description: The ID of the anonymization field to update.
          example: field8
          type: string
      required:
        - id
    ApiConfig:
      type: object
      properties:
        actionTypeId:
          description: Action type ID
          example: actionType456
          type: string
        connectorId:
          description: Connector ID
          example: connector123
          type: string
        defaultSystemPromptId:
          description: Default system prompt ID
          example: systemPrompt001
          type: string
        model:
          description: Model
          example: gpt-4
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
          description: Provider
          example: OpenAI
      required:
        - connectorId
        - actionTypeId
    AttackDiscoveryApiAlert:
      description: An attack discovery that's also an alert (Public API with snake_case)
      type: object
      properties:
        alert_ids:
          description: The alert IDs that the attack discovery is based on
          items:
            type: string
          type: array
        alert_rule_uuid:
          description: >-
            The optional kibana.alert.rule.uuid of the rule that generated this
            attack discovery (not applicable to ad hock runs)
          type: string
        alert_start:
          description: The optional time the attack discovery alert was created
          type: string
        alert_updated_at:
          description: The optional time the attack discovery alert was last updated
          type: string
        alert_updated_by_user_id:
          description: >-
            The optional id of the user who last updated the attack discovery
            alert
          type: string
        alert_updated_by_user_name:
          description: >-
            The optional username of the user who updated the attack discovery
            alert
          type: string
        alert_workflow_status:
          description: The optional kibana.alert.workflow_status of this attack discovery
          type: string
        alert_workflow_status_updated_at:
          description: >-
            The optional time the attack discovery alert workflow status was
            last updated
          type: string
        connector_id:
          description: The ID of the connector that generated the attack discovery
          type: string
        connector_name:
          description: >-
            The (human readable) name of the connector that generated the attack
            discovery
          type: string
        details_markdown:
          description: >-
            Details of the attack with bulleted markdown that always uses
            special syntax for field names and values from the source data.
          type: string
        entity_summary_markdown:
          description: >-
            An optional, short (no more than a sentence) summary of the attack
            discovery featuring only the host.name and user.name fields (when
            they are applicable), using the same syntax
          type: string
        generation_uuid:
          description: The generation ID of the run that created the attack discovery
          type: string
        id:
          description: The unique ID of the attack discovery
          type: string
        mitre_attack_tactics:
          description: An optional array of MITRE ATT&CK tactic for the attack discovery
          items:
            type: string
          type: array
        replacements:
          $ref: '#/components/schemas/Replacements'
          description: >-
            Key-value pairs that are used to replace placeholders in the
            markdown fields
        risk_score:
          description: >-
            The optional, (but typically populated after generation) risk score
            of the alert
          type: integer
        summary_markdown:
          description: A markdown summary of attack discovery, using the same syntax
          type: string
        timestamp:
          $ref: '#/components/schemas/NonEmptyTimestamp'
          description: The time the attack discovery was generated
        title:
          description: A title for the attack discovery, in plain text
          type: string
        user_id:
          description: The optional id of the user who generated the attack discovery
          type: string
        user_name:
          description: >-
            The optional username of the user who generated the attack
            discovery, (not applicable to attack discoveries generated by rules)
          type: string
        users:
          description: >-
            The optional array of users who may view the attack discovery. When
            empty, (or not present), all users may view the attack discovery.
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
        - alert_ids
        - connector_id
        - connector_name
        - details_markdown
        - generation_uuid
        - id
        - summary_markdown
        - timestamp
        - title
    AttackDiscoveryApiSchedule:
      description: An attack discovery schedule
      type: object
      properties:
        actions:
          description: The attack discovery schedule actions
          items:
            $ref: '#/components/schemas/AttackDiscoveryApiScheduleAction'
          type: array
        created_at:
          description: The date the schedule was created
          format: date-time
          type: string
        created_by:
          description: The name of the user that created the schedule
          type: string
        enabled:
          description: Indicates whether the schedule is enabled
          type: boolean
        id:
          description: UUID of attack discovery schedule
          type: string
        last_execution:
          $ref: '#/components/schemas/AttackDiscoveryApiScheduleExecution'
          description: The attack discovery schedule last execution summary
        name:
          description: The name of the schedule
          type: string
        params:
          $ref: '#/components/schemas/AttackDiscoveryApiScheduleParams'
          description: The attack discovery schedule configuration parameters
        schedule:
          $ref: '#/components/schemas/IntervalApiSchedule'
          description: The attack discovery schedule interval
        updated_at:
          description: The date the schedule was updated
          format: date-time
          type: string
        updated_by:
          description: The name of the user that updated the schedule
          type: string
      required:
        - id
        - name
        - created_by
        - updated_by
        - created_at
        - updated_at
        - enabled
        - params
        - schedule
        - actions
    AttackDiscoveryApiScheduleAction:
      type: object
      properties:
        action_type_id:
          description: The action type used for sending notifications.
          type: string
        alerts_filter:
          $ref: '#/components/schemas/AttackDiscoveryApiScheduleActionAlertsFilter'
        frequency:
          $ref: '#/components/schemas/AttackDiscoveryApiScheduleActionFrequency'
        group:
          $ref: '#/components/schemas/AttackDiscoveryApiScheduleActionGroup'
        id:
          $ref: '#/components/schemas/AttackDiscoveryApiScheduleActionId'
        params:
          $ref: '#/components/schemas/AttackDiscoveryApiScheduleActionParams'
        uuid:
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - action_type_id
        - id
        - params
    AttackDiscoveryApiScheduleActionAlertsFilter:
      additionalProperties: true
      type: object
    AttackDiscoveryApiScheduleActionFrequency:
      description: >-
        The action frequency defines when the action runs (for example, only on
        schedule execution or at specific time intervals).
      type: object
      properties:
        notify_when:
          $ref: '#/components/schemas/AttackDiscoveryApiScheduleActionNotifyWhen'
        summary:
          description: >-
            Action summary indicates whether we will send a summary notification
            about all the generate alerts or notification per individual alert
          type: boolean
        throttle:
          $ref: '#/components/schemas/AttackDiscoveryApiScheduleActionThrottle'
          nullable: true
      required:
        - summary
        - notify_when
        - throttle
    AttackDiscoveryApiScheduleActionGroup:
      description: Groups actions by use cases. Use `default` for alert notifications.
      type: string
    AttackDiscoveryApiScheduleActionId:
      description: The connector ID.
      type: string
    AttackDiscoveryApiScheduleActionNotifyWhen:
      description: >-
        The condition for throttling the notification: `onActionGroupChange`,
        `onActiveAlert`,  or `onThrottleInterval`
      enum:
        - onActiveAlert
        - onThrottleInterval
        - onActionGroupChange
      type: string
    AttackDiscoveryApiScheduleActionParams:
      additionalProperties: true
      description: >-
        Object containing the allowed connector fields, which varies according
        to the connector type.
      type: object
    AttackDiscoveryApiScheduleActionThrottle:
      description: >-
        Defines how often schedule actions are taken. Time interval in seconds,
        minutes, hours, or days.
      example: 1h
      pattern: ^[1-9]\d*[smhd]$
      type: string
    AttackDiscoveryApiScheduleCreateProps:
      description: An attack discovery schedule create properties
      type: object
      properties:
        actions:
          description: The attack discovery schedule actions
          items:
            $ref: '#/components/schemas/AttackDiscoveryApiScheduleAction'
          type: array
        enabled:
          description: Indicates whether the schedule is enabled
          type: boolean
        name:
          description: The name of the schedule
          type: string
        params:
          $ref: '#/components/schemas/AttackDiscoveryApiScheduleParams'
          description: The attack discovery schedule configuration parameters
        schedule:
          $ref: '#/components/schemas/IntervalApiSchedule'
          description: The attack discovery schedule interval
      required:
        - name
        - params
        - schedule
    AttackDiscoveryApiScheduleExecution:
      description: An attack discovery schedule execution information
      type: object
      properties:
        date:
          description: Date of the execution
          format: date-time
          type: string
        duration:
          description: Duration of the execution
          type: number
        message:
          type: string
        status:
          $ref: '#/components/schemas/AttackDiscoveryApiScheduleExecutionStatus'
          description: Status of the execution
      required:
        - date
        - status
        - last_duration
    AttackDiscoveryApiScheduleExecutionStatus:
      description: An attack discovery schedule execution status
      enum:
        - ok
        - active
        - error
        - unknown
        - warning
      type: string
    AttackDiscoveryApiScheduleParams:
      description: An attack discovery schedule params
      type: object
      properties:
        alerts_index_pattern:
          description: The index pattern to get alerts from
          type: string
        api_config:
          allOf:
            - $ref: '#/components/schemas/ApiConfig'
            - type: object
              properties:
                name:
                  description: The name of the connector
                  type: string
              required:
                - name
          description: LLM API configuration.
        combined_filter:
          additionalProperties: true
          type: object
        end:
          type: string
        filters:
          $ref: '#/components/schemas/Filters'
        query:
          $ref: '#/components/schemas/Query'
        size:
          type: number
        start:
          type: string
      required:
        - alerts_index_pattern
        - api_config
        - size
    AttackDiscoveryApiScheduleUpdateProps:
      description: An attack discovery schedule update properties
      type: object
      properties:
        actions:
          description: The attack discovery schedule actions
          items:
            $ref: '#/components/schemas/AttackDiscoveryApiScheduleAction'
          type: array
        name:
          description: The name of the schedule
          type: string
        params:
          $ref: '#/components/schemas/AttackDiscoveryApiScheduleParams'
          description: The attack discovery schedule configuration parameters
        schedule:
          $ref: '#/components/schemas/IntervalApiSchedule'
          description: The attack discovery schedule interval
      required:
        - name
        - params
        - schedule
        - actions
    AttackDiscoveryFindSortField:
      description: >-
        Allowed field names to sort Attack discovery results by. Clients should
        only pass one of the listed values.
      enum:
        - '@timestamp'
      type: string
    AttackDiscoveryGeneration:
      type: object
      properties:
        alerts_context_count:
          description: >-
            The number of alerts sent as context (max
            kibana.alert.rule.execution.metrics.alert_counts.active) to the LLM
            for the generation
          type: number
        connector_id:
          description: The connector id (event.dataset) for this generation
          type: string
        connector_stats:
          description: Stats applicable to the connector for this generation
          type: object
          properties:
            average_successful_duration_nanoseconds:
              description: >-
                The average duration (avg event.duration) in nanoseconds of
                successful generations for the same connector id, for the
                current user
              type: number
            successful_generations:
              description: >-
                The number of successful generations for the same connector id,
                for the current user
              type: number
        discoveries:
          description: >-
            The number of new Attack discovery alerts (max
            kibana.alert.rule.execution.metrics.alert_counts.new) for this
            generation
          type: number
        end:
          description: When generation ended (max event.end)
          type: string
        execution_uuid:
          description: >-
            The unique identifier (kibana.alert.rule.execution.uuid) for the
            generation
          type: string
        loading_message:
          description: Generation loading message (kibana.alert.rule.execution.status)
          type: string
        reason:
          description: Reason for failed generations (event.reason)
          type: string
        start:
          description: When generation started (min event.start)
          type: string
        status:
          description: The status of the attack discovery generation
          enum:
            - canceled
            - dismissed
            - failed
            - started
            - succeeded
          type: string
      required:
        - connector_id
        - discoveries
        - execution_uuid
        - loading_message
        - start
        - status
    AttackDiscoveryGenerationConfig:
      type: object
      properties:
        alertsIndexPattern:
          type: string
        anonymizationFields:
          items:
            $ref: '#/components/schemas/AnonymizationFieldResponse'
          type: array
        apiConfig:
          $ref: '#/components/schemas/ApiConfig'
          description: LLM API configuration.
        connectorName:
          type: string
        end:
          type: string
        filter:
          additionalProperties: true
          type: object
        langSmithApiKey:
          type: string
        langSmithProject:
          type: string
        model:
          type: string
        replacements:
          $ref: '#/components/schemas/Replacements'
        size:
          type: number
        start:
          type: string
        subAction:
          enum:
            - invokeAI
            - invokeStream
          type: string
      required:
        - apiConfig
        - alertsIndexPattern
        - anonymizationFields
        - size
        - subAction
    AttackDiscoveryGenericError:
      description: Generic error response for Attack discovery schedule operations
      type: object
      properties:
        error:
          description: Error type
          example: Bad Request
          type: string
        message:
          description: Human-readable error message describing what went wrong
          example: Invalid request parameters
          type: string
        status_code:
          description: HTTP status code
          example: 400
          type: number
    BaseContentReference:
      description: The basis of a content reference
      type: object
      properties:
        id:
          description: Id of the content reference
          example: content123
          type: string
        type:
          description: Type of the content reference
          example: SecurityAlert
          type: string
      required:
        - id
        - type
    BulkCrudActionSummary:
      type: object
      properties:
        failed:
          description: The number of failed actions.
          example: 0
          type: integer
        skipped:
          description: The number of skipped actions.
          example: 1
          type: integer
        succeeded:
          description: The number of successfully performed actions.
          example: 10
          type: integer
        total:
          description: The total number of actions attempted.
          example: 12
          type: integer
      required:
        - failed
        - skipped
        - succeeded
        - total
    ChatCompleteProps:
      description: The request payload for creating a chat completion.
      example:
        connectorId: conn-001
        conversationId: abc123
        isStream: true
        langSmithApiKey: sk-abc123
        langSmithProject: security_ai_project
        messages:
          - content: How do I detect ransomware on my endpoints?
            data:
              device_id: device-567
            fields_to_anonymize:
              - device.name
              - file.path
            role: user
        model: gpt-4
        persist: true
        promptId: prompt_456
        responseLanguage: en
      type: object
      properties:
        connectorId:
          description: Required connector identifier to route the request.
          example: conn-001
          type: string
        conversationId:
          $ref: '#/components/schemas/NonEmptyString'
          description: Existing conversation ID to continue.
        isStream:
          description: If true, the response will be streamed in chunks.
          example: true
          type: boolean
        langSmithApiKey:
          description: API key for LangSmith integration.
          example: sk-abc123
          type: string
        langSmithProject:
          description: LangSmith project name for tracing.
          example: security_ai_project
          type: string
        messages:
          description: List of chat messages exchanged so far.
          items:
            $ref: '#/components/schemas/ChatMessage'
          type: array
        model:
          description: Model ID or name to use for the response.
          example: gpt-4
          type: string
        persist:
          description: Whether to persist the chat and response to storage.
          example: true
          type: boolean
        promptId:
          description: Prompt template identifier.
          example: prompt_001
          type: string
        responseLanguage:
          description: ISO language code for the assistant's response.
          example: en
          type: string
      required:
        - messages
        - persist
        - connectorId
    ChatMessage:
      description: A message exchanged within the AI chat conversation.
      type: object
      properties:
        content:
          description: The textual content of the message.
          example: What security incidents have been reported today?
          type: string
        data:
          $ref: '#/components/schemas/MessageData'
          description: Metadata to attach to the context of the message.
        fields_to_anonymize:
          description: >-
            List of field names within the data object that should be
            anonymized.
          example:
            - user.name
            - source.ip
          items:
            type: string
          type: array
        role:
          $ref: '#/components/schemas/ChatMessageRole'
          description: The sender role of the message.
      required:
        - role
    ChatMessageRole:
      description: The role associated with the message in the chat.
      enum:
        - system
        - user
        - assistant
      example: user
      type: string
    ContentReferences:
      additionalProperties:
        oneOf:
          - $ref: '#/components/schemas/KnowledgeBaseEntryContentReference'
          - $ref: '#/components/schemas/SecurityAlertContentReference'
          - $ref: '#/components/schemas/SecurityAlertsPageContentReference'
          - $ref: '#/components/schemas/ProductDocumentationContentReference'
          - $ref: '#/components/schemas/EsqlContentReference'
          - $ref: '#/components/schemas/HrefContentReference'
            additionalProperties: false
      description: A union of all content reference types
      type: object
    ConversationCategory:
      description: The conversation category.
      enum:
        - assistant
        - insights
      example: assistant
      type: string
    ConversationCreateProps:
      type: object
      properties:
        apiConfig:
          $ref: '#/components/schemas/ApiConfig'
          description: LLM API configuration.
        category:
          $ref: '#/components/schemas/ConversationCategory'
          description: The conversation category.
          example: assistant
        excludeFromLastConversationStorage:
          description: Exclude from last conversation storage.
          type: boolean
        id:
          description: The conversation id.
          example: conversation123
          type: string
        messages:
          description: The conversation messages.
          items:
            $ref: '#/components/schemas/Message'
          type: array
        replacements:
          $ref: '#/components/schemas/Replacements'
        title:
          description: The conversation title.
          example: Security AI Assistant Setup
          type: string
      required:
        - title
    ConversationResponse:
      type: object
      properties:
        apiConfig:
          $ref: '#/components/schemas/ApiConfig'
          description: LLM API configuration.
        category:
          $ref: '#/components/schemas/ConversationCategory'
          description: The conversation category.
          example: assistant
        createdAt:
          description: The time conversation was created.
          example: '2025-04-30T14:00:00Z'
          type: string
        createdBy:
          $ref: '#/components/schemas/User'
          description: The user who created the conversation.
        excludeFromLastConversationStorage:
          description: Exclude from last conversation storage.
          type: boolean
        id:
          $ref: '#/components/schemas/NonEmptyString'
        messages:
          description: The conversation messages.
          items:
            $ref: '#/components/schemas/Message'
          type: array
        namespace:
          description: Kibana space
          example: default
          type: string
        replacements:
          $ref: '#/components/schemas/Replacements'
        timestamp:
          $ref: '#/components/schemas/NonEmptyTimestamp'
        title:
          description: The conversation title.
          example: Security AI Assistant Setup
          type: string
        updatedAt:
          description: The last time conversation was updated.
          example: '2025-04-30T16:30:00Z'
          type: string
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
        - id
        - title
        - createdAt
        - createdBy
        - users
        - namespace
        - category
    ConversationUpdateProps:
      type: object
      properties:
        apiConfig:
          $ref: '#/components/schemas/ApiConfig'
          description: LLM API configuration.
        category:
          $ref: '#/components/schemas/ConversationCategory'
          description: The conversation category.
          example: assistant
        excludeFromLastConversationStorage:
          description: Exclude from last conversation storage.
          type: boolean
        id:
          $ref: '#/components/schemas/NonEmptyString'
        messages:
          description: The conversation messages.
          items:
            $ref: '#/components/schemas/Message'
          type: array
        replacements:
          $ref: '#/components/schemas/Replacements'
        title:
          description: The conversation title.
          example: Updated Security AI Assistant Setup
          type: string
        users:
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
        - id
    DeleteResponseFields:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - id
    DocumentEntry:
      allOf:
        - type: object
          properties:
            global:
              description: Whether this Knowledge Base Entry is global, defaults to false.
              example: false
              type: boolean
            name:
              description: Name of the Knowledge Base Entry.
              example: Example Entry
              type: string
            namespace:
              description: Kibana Space, defaults to 'default' space.
              example: default
              type: string
            users:
              description: >-
                Users who have access to the Knowledge Base Entry, defaults to
                current user. Empty array provides access to all users.
              items:
                $ref: '#/components/schemas/User'
              type: array
          required:
            - name
            - namespace
            - global
            - users
        - $ref: '#/components/schemas/ResponseFields'
        - $ref: '#/components/schemas/DocumentEntryResponseFields'
    DocumentEntryCreateFields:
      allOf:
        - type: object
          properties:
            global:
              description: Whether this Knowledge Base Entry is global, defaults to false.
              example: false
              type: boolean
            name:
              description: Name of the Knowledge Base Entry.
              example: Example Entry
              type: string
            namespace:
              description: Kibana Space, defaults to 'default' space.
              example: default
              type: string
            users:
              description: >-
                Users who have access to the Knowledge Base Entry, defaults to
                current user. Empty array provides access to all users.
              items:
                $ref: '#/components/schemas/User'
              type: array
          required:
            - name
        - $ref: '#/components/schemas/DocumentEntryRequiredFields'
        - $ref: '#/components/schemas/DocumentEntryOptionalFields'
    DocumentEntryOptionalFields:
      type: object
      properties:
        required:
          description: Whether this resource should always be included, defaults to false.
          example: false
          type: boolean
        vector:
          $ref: '#/components/schemas/Vector'
    DocumentEntryRequiredFields:
      type: object
      properties:
        kbResource:
          $ref: '#/components/schemas/KnowledgeBaseResource'
        source:
          description: Source document name or filepath.
          example: /documents/example.txt
          type: string
        text:
          description: Knowledge Base Entry content.
          example: This is the content of the document.
          type: string
        type:
          description: Entry type.
          enum:
            - document
          example: document
          type: string
      required:
        - type
        - kbResource
        - source
        - text
    DocumentEntryResponseFields:
      allOf:
        - $ref: '#/components/schemas/DocumentEntryRequiredFields'
        - $ref: '#/components/schemas/DocumentEntryOptionalFields'
    DocumentEntryUpdateFields:
      allOf:
        - type: object
          properties:
            global:
              description: Whether this Knowledge Base Entry is global, defaults to false.
              example: false
              type: boolean
            id:
              $ref: '#/components/schemas/NonEmptyString'
            name:
              description: Name of the Knowledge Base Entry.
              example: Example Entry
              type: string
            namespace:
              description: Kibana Space, defaults to 'default' space.
              example: default
              type: string
            users:
              description: >-
                Users who have access to the Knowledge Base Entry, defaults to
                current user. Empty array provides access to all users.
              items:
                $ref: '#/components/schemas/User'
              type: array
          required:
            - id
        - $ref: '#/components/schemas/DocumentEntryCreateFields'
    EsqlContentReference:
      allOf:
        - $ref: '#/components/schemas/BaseContentReference'
        - type: object
          properties:
            label:
              description: Label of the query
              example: High Severity Alerts
              type: string
            query:
              description: An ESQL query
              example: SELECT * FROM alerts WHERE severity = "high"
              type: string
            timerange:
              description: Time range to select in the time picker.
              type: object
              properties:
                from:
                  example: '2025-04-01T00:00:00Z'
                  type: string
                to:
                  example: '2025-04-30T23:59:59Z'
                  type: string
              required:
                - from
                - to
            type:
              enum:
                - EsqlQuery
              example: EsqlQuery
              type: string
          required:
            - type
            - query
            - label
      description: References an ESQL query
    Filters:
      description: >-
        The filter array used to define the conditions for when alerts are
        selected as an attack discovery context. Defaults to an empty array.
      items: {}
      type: array
    FindAnonymizationFieldsSortField:
      enum:
        - created_at
        - anonymized
        - allowed
        - field
        - updated_at
      type: string
    FindConversationsSortField:
      description: >-
        The field by which to sort the conversations. Possible values are
        `created_at`, `title`, and `updated_at`.
      enum:
        - created_at
        - title
        - updated_at
      example: created_at
      type: string
    FindKnowledgeBaseEntriesSortField:
      description: Fields available for sorting Knowledge Base Entries.
      enum:
        - created_at
        - is_default
        - title
        - updated_at
      example: title
      type: string
    FindPromptsSortField:
      description: Field by which to sort the prompts.
      enum:
        - created_at
        - is_default
        - name
        - updated_at
      example: created_at
      type: string
    HrefContentReference:
      allOf:
        - $ref: '#/components/schemas/BaseContentReference'
        - type: object
          properties:
            href:
              description: URL to the external resource
              type: string
            label:
              description: Label of the query
              type: string
            type:
              enum:
                - Href
              type: string
          required:
            - type
            - href
      description: References an external URL
    IndexEntry:
      allOf:
        - type: object
          properties:
            global:
              description: Whether this Knowledge Base Entry is global, defaults to false.
              example: false
              type: boolean
            name:
              description: Name of the Knowledge Base Entry.
              example: Example Entry
              type: string
            namespace:
              description: Kibana Space, defaults to 'default' space.
              example: default
              type: string
            users:
              description: >-
                Users who have access to the Knowledge Base Entry, defaults to
                current user. Empty array provides access to all users.
              items:
                $ref: '#/components/schemas/User'
              type: array
          required:
            - name
            - namespace
            - global
            - users
        - $ref: '#/components/schemas/ResponseFields'
        - $ref: '#/components/schemas/IndexEntryResponseFields'
    IndexEntryCreateFields:
      allOf:
        - type: object
          properties:
            global:
              description: Whether this Knowledge Base Entry is global, defaults to false.
              example: false
              type: boolean
            name:
              description: Name of the Knowledge Base Entry.
              example: Example Entry
              type: string
            namespace:
              description: Kibana Space, defaults to 'default' space.
              example: default
              type: string
            users:
              description: >-
                Users who have access to the Knowledge Base Entry, defaults to
                current user. Empty array provides access to all users.
              items:
                $ref: '#/components/schemas/User'
              type: array
          required:
            - name
        - $ref: '#/components/schemas/IndexEntryRequiredFields'
        - $ref: '#/components/schemas/IndexEntryOptionalFields'
    IndexEntryOptionalFields:
      type: object
      properties:
        inputSchema:
          $ref: '#/components/schemas/InputSchema'
        outputFields:
          description: >-
            Fields to extract from the query result, defaults to all fields if
            not provided or empty.
          example:
            - title
            - author
          items:
            type: string
          type: array
    IndexEntryRequiredFields:
      type: object
      properties:
        description:
          description: >-
            Description for when this index or data stream should be queried for
            Knowledge Base content. Passed to the LLM as a tool description.
          example: Query this index for general knowledge base content.
          type: string
        field:
          description: Field to query for Knowledge Base content.
          example: content
          type: string
        index:
          description: Index or Data Stream to query for Knowledge Base content.
          example: knowledge_base_index
          type: string
        queryDescription:
          description: >-
            Description of query field used to fetch Knowledge Base content.
            Passed to the LLM as part of the tool input schema.
          example: Search for documents containing the specified keywords.
          type: string
        type:
          description: Entry type.
          enum:
            - index
          example: index
          type: string
      required:
        - type
        - index
        - field
        - description
        - queryDescription
    IndexEntryResponseFields:
      allOf:
        - $ref: '#/components/schemas/IndexEntryRequiredFields'
        - $ref: '#/components/schemas/IndexEntryOptionalFields'
    IndexEntryUpdateFields:
      allOf:
        - type: object
          properties:
            global:
              description: Whether this Knowledge Base Entry is global, defaults to false.
              example: false
              type: boolean
            id:
              $ref: '#/components/schemas/NonEmptyString'
            name:
              description: Name of the Knowledge Base Entry.
              example: Example Entry
              type: string
            namespace:
              description: Kibana Space, defaults to 'default' space.
              example: default
              type: string
            users:
              description: >-
                Users who have access to the Knowledge Base Entry, defaults to
                current user. Empty array provides access to all users.
              items:
                $ref: '#/components/schemas/User'
              type: array
          required:
            - id
        - $ref: '#/components/schemas/IndexEntryCreateFields'
    InputSchema:
      description: >-
        Array of objects defining the input schema, allowing the LLM to extract
        structured data to be used in retrieval.
      items:
        type: object
        properties:
          description:
            description: Description of the field.
            example: The title of the document.
            type: string
          fieldName:
            description: Name of the field.
            example: title
            type: string
          fieldType:
            description: Type of the field.
            example: string
            type: string
        required:
          - fieldName
          - fieldType
          - description
      type: array
    IntervalApiSchedule:
      type: object
      properties:
        interval:
          description: The schedule interval
          type: string
      required:
        - interval
    KnowledgeBaseEntryBulkActionSkipReason:
      description: Reason why a Knowledge Base Entry was skipped during the bulk action.
      enum:
        - KNOWLEDGE_BASE_ENTRY_NOT_MODIFIED
      type: string
    KnowledgeBaseEntryBulkActionSkipResult:
      type: object
      properties:
        id:
          description: ID of the skipped Knowledge Base Entry.
          example: '123'
          type: string
        name:
          description: Name of the skipped Knowledge Base Entry.
          example: Skipped Entry
          type: string
        skip_reason:
          $ref: '#/components/schemas/KnowledgeBaseEntryBulkActionSkipReason'
      required:
        - id
        - skip_reason
    KnowledgeBaseEntryBulkCrudActionResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            errors:
              description: List of errors encountered during the bulk action.
              example:
                - err_code: UPDATE_FAILED
                  knowledgeBaseEntries:
                    - id: '456'
                      name: Error Entry
                  message: Failed to update entry.
                  statusCode: 400
              items:
                $ref: '#/components/schemas/NormalizedKnowledgeBaseEntryError'
              type: array
            results:
              $ref: '#/components/schemas/KnowledgeBaseEntryBulkCrudActionResults'
            summary:
              $ref: '#/components/schemas/KnowledgeBaseEntryBulkCrudActionSummary'
          required:
            - results
            - summary
        knowledgeBaseEntriesCount:
          description: Total number of Knowledge Base Entries processed.
          example: 8
          type: integer
        message:
          description: Message describing the result of the bulk action.
          example: Bulk action completed successfully.
          type: string
        statusCode:
          description: HTTP status code of the response.
          example: 200
          type: integer
        success:
          description: Indicates whether the bulk action was successful.
          example: true
          type: boolean
      required:
        - attributes
    KnowledgeBaseEntryBulkCrudActionResults:
      type: object
      properties:
        created:
          description: List of Knowledge Base Entries that were successfully created.
          example:
            - content: This is the content of the new entry.
              id: '456'
              title: New Entry
          items:
            $ref: '#/components/schemas/KnowledgeBaseEntryResponse'
          type: array
        deleted:
          description: >-
            List of IDs of Knowledge Base Entries that were successfully
            deleted.
          example:
            - '789'
          items:
            type: string
          type: array
        skipped:
          description: >-
            List of Knowledge Base Entries that were skipped during the bulk
            action.
          example:
            - id: '123'
              name: Skipped Entry
              skip_reason: KNOWLEDGE_BASE_ENTRY_NOT_MODIFIED
          items:
            $ref: '#/components/schemas/KnowledgeBaseEntryBulkActionSkipResult'
          type: array
        updated:
          description: List of Knowledge Base Entries that were successfully updated.
          example:
            - content: Updated content.
              id: '123'
              title: Updated Entry
          items:
            $ref: '#/components/schemas/KnowledgeBaseEntryResponse'
          type: array
      required:
        - updated
        - created
        - deleted
        - skipped
    KnowledgeBaseEntryBulkCrudActionSummary:
      type: object
      properties:
        failed:
          description: Number of Knowledge Base Entries that failed during the bulk action.
          example: 2
          type: integer
        skipped:
          description: >-
            Number of Knowledge Base Entries that were skipped during the bulk
            action.
          example: 1
          type: integer
        succeeded:
          description: >-
            Number of Knowledge Base Entries that were successfully processed
            during the bulk action.
          example: 5
          type: integer
        total:
          description: Total number of Knowledge Base Entries involved in the bulk action.
          example: 8
          type: integer
      required:
        - failed
        - skipped
        - succeeded
        - total
    KnowledgeBaseEntryContentReference:
      allOf:
        - $ref: '#/components/schemas/BaseContentReference'
        - type: object
          properties:
            knowledgeBaseEntryId:
              description: Id of the Knowledge Base Entry
              example: kbentry456
              type: string
            knowledgeBaseEntryName:
              description: Name of the knowledge base entry
              example: Network Security Best Practices
              type: string
            type:
              enum:
                - KnowledgeBaseEntry
              example: KnowledgeBaseEntry
              type: string
          required:
            - type
            - knowledgeBaseEntryId
            - knowledgeBaseEntryName
      description: References a knowledge base entry
    KnowledgeBaseEntryCreateProps:
      anyOf:
        - $ref: '#/components/schemas/DocumentEntryCreateFields'
        - $ref: '#/components/schemas/IndexEntryCreateFields'
      discriminator:
        propertyName: type
    KnowledgeBaseEntryDetailsInError:
      type: object
      properties:
        id:
          description: ID of the Knowledge Base Entry that encountered an error.
          example: '456'
          type: string
        name:
          description: Name of the Knowledge Base Entry that encountered an error.
          example: Error Entry
          type: string
      required:
        - id
    KnowledgeBaseEntryErrorSchema:
      additionalProperties: false
      type: object
      properties:
        error:
          description: Error type or category.
          example: Not Found
          type: string
        message:
          description: Detailed error message.
          example: The requested Knowledge Base Entry was not found.
          type: string
        statusCode:
          description: HTTP status code of the error.
          example: 404
          type: number
      required:
        - statusCode
        - error
        - message
    KnowledgeBaseEntryResponse:
      anyOf:
        - $ref: '#/components/schemas/DocumentEntry'
        - $ref: '#/components/schemas/IndexEntry'
      discriminator:
        propertyName: type
    KnowledgeBaseEntryUpdateProps:
      anyOf:
        - $ref: '#/components/schemas/DocumentEntryUpdateFields'
        - $ref: '#/components/schemas/IndexEntryUpdateFields'
      discriminator:
        propertyName: type
    KnowledgeBaseEntryUpdateRouteProps:
      anyOf:
        - $ref: '#/components/schemas/DocumentEntryCreateFields'
        - $ref: '#/components/schemas/IndexEntryCreateFields'
      discriminator:
        propertyName: type
    KnowledgeBaseResource:
      description: >-
        Knowledge Base resource name for grouping entries, e.g. 'security_labs',
        'user', etc.
      enum:
        - security_labs
        - defend_insights
        - user
      example: security_labs
      type: string
    KnowledgeBaseResponse:
      description: AI assistant KnowledgeBase.
      type: object
      properties:
        success:
          description: Identify the success of the method execution.
          example: true
          type: boolean
    Message:
      description: AI assistant conversation message.
      type: object
      properties:
        content:
          description: Message content.
          example: Hello, how can I assist you today?
          type: string
        id:
          $ref: '#/components/schemas/NonEmptyString'
          description: Message id
        isError:
          description: Is error message.
          example: false
          type: boolean
        metadata:
          $ref: '#/components/schemas/MessageMetadata'
          description: Metadata
        reader:
          $ref: '#/components/schemas/Reader'
          description: Message content.
        role:
          $ref: '#/components/schemas/MessageRole'
          description: Message role.
          example: assistant
        timestamp:
          $ref: '#/components/schemas/NonEmptyTimestamp'
          description: The timestamp message was sent or received.
          example: '2025-04-30T15:30:00Z'
        traceData:
          $ref: '#/components/schemas/TraceData'
          description: Trace data
        user:
          $ref: '#/components/schemas/User'
          description: The user who sent the message.
      required:
        - timestamp
        - content
        - role
    MessageData:
      additionalProperties: true
      description: ECS-style metadata attached to the message.
      example:
        alert_id: alert-456
        user_id: abc123
      type: object
    MessageMetadata:
      description: Message metadata
      type: object
      properties:
        contentReferences:
          $ref: '#/components/schemas/ContentReferences'
          description: Data referred to by the message content.
    MessageRole:
      description: Message role.
      enum:
        - system
        - user
        - assistant
      example: assistant
      type: string
    NonEmptyString:
      description: A string that does not contain only whitespace characters.
      example: I am a string
      format: nonempty
      minLength: 1
      type: string
    NonEmptyTimestamp:
      description: >-
        A string that represents a timestamp in ISO 8601 format and does not
        contain only whitespace characters.
      example: '2023-10-31T12:00:00Z'
      format: nonempty
      minLength: 1
      type: string
    NormalizedAnonymizationFieldError:
      type: object
      properties:
        anonymization_fields:
          description: Array of anonymization fields that caused the error.
          items:
            $ref: '#/components/schemas/AnonymizationFieldDetailsInError'
          type: array
        err_code:
          description: Error code indicating the type of failure.
          example: UPDATE_FAILED
          type: string
        message:
          description: Error message.
          example: Failed to update anonymization field.
          type: string
        status_code:
          description: Status code of the response.
          example: 400
          type: integer
      required:
        - message
        - status_code
        - anonymization_fields
    NormalizedKnowledgeBaseEntryError:
      type: object
      properties:
        err_code:
          description: Specific error code for the issue.
          example: UPDATE_FAILED
          type: string
        knowledgeBaseEntries:
          description: List of Knowledge Base Entries that encountered the error.
          items:
            $ref: '#/components/schemas/KnowledgeBaseEntryDetailsInError'
          type: array
        message:
          description: Error message describing the issue.
          example: Failed to update entry.
          type: string
        statusCode:
          description: HTTP status code associated with the error.
          example: 400
          type: integer
      required:
        - message
        - statusCode
        - knowledgeBaseEntries
    NormalizedPromptError:
      type: object
      properties:
        err_code:
          description: A code representing the error type.
          type: string
        message:
          description: A message describing the error encountered.
          type: string
        prompts:
          description: List of prompts that encountered errors.
          items:
            $ref: '#/components/schemas/PromptDetailsInError'
          type: array
        status_code:
          description: The HTTP status code associated with the error.
          type: integer
      required:
        - message
        - status_code
        - prompts
    ProductDocumentationContentReference:
      allOf:
        - $ref: '#/components/schemas/BaseContentReference'
        - type: object
          properties:
            title:
              description: Title of the documentation
              example: Getting Started with Security AI Assistant
              type: string
            type:
              enum:
                - ProductDocumentation
              example: ProductDocumentation
              type: string
            url:
              description: URL to the documentation
              example: https://docs.example.com/security-ai-assistant
              type: string
          required:
            - type
            - title
            - url
      description: References the product documentation
    PromptCreateProps:
      type: object
      properties:
        categories:
          description: List of categories for the prompt.
          example:
            - security
            - verification
          items:
            type: string
          type: array
        color:
          description: The color associated with the prompt.
          example: blue
          type: string
        consumer:
          description: The consumer associated with the prompt.
          example: admin
          type: string
        content:
          description: The content of the prompt.
          example: Please verify the security settings.
          type: string
        isDefault:
          description: Whether this prompt should be the default.
          example: false
          type: boolean
        isNewConversationDefault:
          description: Whether this prompt should be the default for new conversations.
          example: true
          type: boolean
        name:
          description: The name of the prompt.
          example: New Security Prompt
          type: string
        promptType:
          $ref: '#/components/schemas/PromptType'
          description: The type of the prompt.
          example: system
      required:
        - name
        - content
        - promptType
    PromptDetailsInError:
      type: object
      properties:
        id:
          description: The ID of the prompt that encountered an error.
          type: string
        name:
          description: The name of the prompt that encountered an error.
          type: string
      required:
        - id
    PromptResponse:
      type: object
      properties:
        categories:
          description: Categories associated with the prompt.
          items:
            type: string
          type: array
        color:
          description: The color associated with the prompt.
          type: string
        consumer:
          description: The consumer that the prompt is associated with.
          type: string
        content:
          description: The content of the prompt.
          type: string
        createdAt:
          description: The timestamp of when the prompt was created.
          type: string
        createdBy:
          description: The user who created the prompt.
          type: string
        id:
          $ref: '#/components/schemas/NonEmptyString'
        isDefault:
          description: Whether this prompt is the default.
          type: boolean
        isNewConversationDefault:
          description: Whether this prompt is the default for new conversations.
          type: boolean
        name:
          description: The name of the prompt.
          type: string
        namespace:
          description: Kibana space where the prompt is located.
          type: string
        promptType:
          $ref: '#/components/schemas/PromptType'
          description: The type of the prompt.
        timestamp:
          $ref: '#/components/schemas/NonEmptyTimestamp'
        updatedAt:
          description: The timestamp of when the prompt was last updated.
          type: string
        updatedBy:
          description: The user who last updated the prompt.
          type: string
        users:
          description: List of users associated with the prompt.
          items:
            $ref: '#/components/schemas/User'
          type: array
      required:
        - id
        - name
        - promptType
        - content
    PromptsBulkActionSkipReason:
      description: Reason why a prompt was skipped during the bulk action.
      enum:
        - PROMPT_FIELD_NOT_MODIFIED
      type: string
    PromptsBulkActionSkipResult:
      type: object
      properties:
        id:
          description: The ID of the prompt that was skipped.
          type: string
        name:
          description: The name of the prompt that was skipped.
          type: string
        skip_reason:
          $ref: '#/components/schemas/PromptsBulkActionSkipReason'
          description: The reason for skipping the prompt.
      required:
        - id
        - skip_reason
    PromptsBulkCrudActionResponse:
      type: object
      properties:
        attributes:
          type: object
          properties:
            errors:
              items:
                $ref: '#/components/schemas/NormalizedPromptError'
              type: array
            results:
              $ref: '#/components/schemas/PromptsBulkCrudActionResults'
            summary:
              $ref: '#/components/schemas/BulkCrudActionSummary'
          required:
            - results
            - summary
        message:
          description: A message describing the result of the bulk action.
          example: Bulk action completed successfully.
          type: string
        prompts_count:
          description: The number of prompts processed in the bulk action.
          example: 6
          type: integer
        status_code:
          description: The HTTP status code of the response.
          example: 200
          type: integer
        success:
          description: Indicates if the bulk action was successful.
          example: true
          type: boolean
      required:
        - attributes
    PromptsBulkCrudActionResults:
      type: object
      properties:
        created:
          description: List of prompts that were created.
          items:
            $ref: '#/components/schemas/PromptResponse'
          type: array
        deleted:
          description: List of IDs of prompts that were deleted.
          items:
            type: string
          type: array
        skipped:
          description: List of prompts that were skipped.
          items:
            $ref: '#/components/schemas/PromptsBulkActionSkipResult'
          type: array
        updated:
          description: List of prompts that were updated.
          items:
            $ref: '#/components/schemas/PromptResponse'
          type: array
      required:
        - updated
        - created
        - deleted
        - skipped
    PromptType:
      description: Type of the prompt (either system or quick).
      enum:
        - system
        - quick
      type: string
    PromptUpdateProps:
      type: object
      properties:
        categories:
          description: The updated categories for the prompt.
          example:
            - security
            - alert
          items:
            type: string
          type: array
        color:
          description: The updated color associated with the prompt.
          example: green
          type: string
        consumer:
          description: The updated consumer for the prompt.
          example: user123
          type: string
        content:
          description: The updated content for the prompt.
          example: Updated content for security prompt.
          type: string
        id:
          description: The ID of the prompt to update.
          example: prompt123
          type: string
        isDefault:
          description: Whether this prompt should be the default.
          example: true
          type: boolean
        isNewConversationDefault:
          description: Whether the prompt should be the default for new conversations.
          example: false
          type: boolean
      required:
        - id
    Provider:
      description: Provider
      enum:
        - OpenAI
        - Azure OpenAI
        - Other
      example: OpenAI
      type: string
    Query:
      description: An query condition to filter alerts
      type: object
      properties:
        language:
          type: string
        query:
          oneOf:
            - type: string
            - additionalProperties: true
              type: object
      required:
        - query
        - language
    Reader:
      additionalProperties: true
      type: object
    Replacements:
      additionalProperties:
        type: string
      description: Replacements object used to anonymize/deanonymize messages
      type: object
    ResponseFields:
      type: object
      properties:
        createdAt:
          description: Time the Knowledge Base Entry was created.
          example: '2023-01-01T12:00:00Z'
          type: string
        createdBy:
          description: User who created the Knowledge Base Entry.
          example: admin
          type: string
        id:
          $ref: '#/components/schemas/NonEmptyString'
        updatedAt:
          description: Time the Knowledge Base Entry was last updated.
          example: '2023-01-02T12:00:00Z'
          type: string
        updatedBy:
          description: User who last updated the Knowledge Base Entry.
          example: editor
          type: string
      required:
        - id
        - createdAt
        - createdBy
        - updatedAt
        - updatedBy
    SecurityAlertContentReference:
      allOf:
        - $ref: '#/components/schemas/BaseContentReference'
        - type: object
          properties:
            alertId:
              description: ID of the Alert
              example: alert789
              type: string
            type:
              enum:
                - SecurityAlert
              example: SecurityAlert
              type: string
          required:
            - type
            - alertId
      description: References a security alert
    SecurityAlertsPageContentReference:
      allOf:
        - $ref: '#/components/schemas/BaseContentReference'
        - type: object
          properties:
            type:
              enum:
                - SecurityAlertsPage
              example: SecurityAlertsPage
              type: string
          required:
            - type
      description: References the security alerts page
    SortOrder:
      description: The order in which results are sorted.
      enum:
        - asc
        - desc
      example: asc
      type: string
    TraceData:
      description: Trace Data
      type: object
      properties:
        traceId:
          description: Could be any string, not necessarily a UUID
          example: d9876543-f0a1-2345-6789-abcdef123456
          type: string
        transactionId:
          description: Could be any string, not necessarily a UUID
          example: a1234567-bc89-0def-1234-56789abcdef0
          type: string
    User:
      description: Could be any string, not necessarily a UUID.
      type: object
      properties:
        id:
          description: User id.
          example: user123
          type: string
        name:
          description: User name.
          example: John Doe
          type: string
    Vector:
      description: >-
        Object containing Knowledge Base Entry text embeddings and modelId used
        to create the embeddings.
      type: object
      properties:
        modelId:
          description: ID of the model used to create the embeddings.
          example: bert-base-uncased
          type: string
        tokens:
          additionalProperties:
            type: number
          description: Tokens with their corresponding values.
          example:
            token1: 0.123
            token2: 0.456
          type: object
      required:
        - modelId
        - tokens
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
security:
  - BasicAuth: []
tags:
  - description: Manage and interact with Security Assistant resources.
    name: Security AI Assistant API
    x-displayName: Security AI assistant
