/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Suggest users API
 *   version: 1
 */

import { z } from '@kbn/zod';

export type SuggestUsersRequestBody = z.infer<typeof SuggestUsersRequestBody>;
export const SuggestUsersRequestBody = z.object({
  /**
   * Search term to filter users
   */
  searchTerm: z.string().optional(),
  /**
   * Number of users to return
   */
  size: z.number().optional(),
});
export type SuggestUsersRequestBodyInput = z.input<typeof SuggestUsersRequestBody>;

/**
 * Array of user profiles
 */
export type SuggestUsersResponse = z.infer<typeof SuggestUsersResponse>;
export const SuggestUsersResponse = z.array(
  z.object({
    /**
     * A unique identifier for the user profile.
     */
    uid: z.string(),
    /**
     * Indicates whether user profile is enabled or not.
     */
    enabled: z.boolean(),
    /**
     * User specific data associated with the profile.
     */
    data: z.object({}).catchall(z.unknown()),
    /**
     * Information about the user that owns profile.
     */
    user: z.object({
      /**
       * The username of the user.
       */
      username: z.string(),
      /**
       * The full name of the user.
       */
      full_name: z.string().optional(),
      /**
       * The email address of the user.
       */
      email: z.string().optional(),
    }),
  })
);
