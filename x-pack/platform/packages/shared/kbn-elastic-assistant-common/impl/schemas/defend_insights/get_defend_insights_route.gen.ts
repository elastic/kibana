/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Get Defend Insights API endpoint
 *   version: 1
 */

import { z } from '@kbn/zod';
import { ArrayFromString } from '@kbn/zod-helpers';

import { NonEmptyString } from '../common_attributes.gen';
import {
  DefendInsightType,
  DefendInsightStatus,
  DefendInsightsResponse,
} from './common_attributes.gen';

export type DefendInsightsGetRequestQuery = z.infer<typeof DefendInsightsGetRequestQuery>;
export const DefendInsightsGetRequestQuery = z.object({
  /**
   * The insight ids for which to get Defend insights
   */
  ids: ArrayFromString(NonEmptyString).optional(),
  /**
   * The connector id for which to get Defend insights
   */
  connector_id: NonEmptyString.optional(),
  /**
   * The insight type for which to get Defend insights
   */
  type: DefendInsightType.optional(),
  /**
   * The status for which to get Defend insights
   */
  status: DefendInsightStatus.optional(),
  /**
   * The endpoint ids for which to get Defend insights
   */
  endpoint_ids: ArrayFromString(NonEmptyString).optional(),
  /**
   * The number of Defend insights to return
   */
  size: z.coerce.number().optional(),
});
export type DefendInsightsGetRequestQueryInput = z.input<typeof DefendInsightsGetRequestQuery>;

export type DefendInsightsGetResponse = z.infer<typeof DefendInsightsGetResponse>;
export const DefendInsightsGetResponse = z.object({
  data: z.array(DefendInsightsResponse),
});
