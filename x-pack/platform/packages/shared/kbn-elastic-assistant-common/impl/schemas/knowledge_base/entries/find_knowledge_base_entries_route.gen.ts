/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Find Knowledge Base Entries API endpoint
 *   version: 2023-10-31
 */

import { z } from '@kbn/zod';
import { ArrayFromString } from '@kbn/zod-helpers';

import { SortOrder } from '../../common_attributes.gen';
import { KnowledgeBaseEntryResponse } from './common_attributes.gen';

/**
 * Fields available for sorting Knowledge Base Entries.
 */
export type FindKnowledgeBaseEntriesSortField = z.infer<typeof FindKnowledgeBaseEntriesSortField>;
export const FindKnowledgeBaseEntriesSortField = z.enum([
  'created_at',
  'is_default',
  'title',
  'updated_at',
]);
export type FindKnowledgeBaseEntriesSortFieldEnum = typeof FindKnowledgeBaseEntriesSortField.enum;
export const FindKnowledgeBaseEntriesSortFieldEnum = FindKnowledgeBaseEntriesSortField.enum;

export type FindKnowledgeBaseEntriesRequestQuery = z.infer<
  typeof FindKnowledgeBaseEntriesRequestQuery
>;
export const FindKnowledgeBaseEntriesRequestQuery = z.object({
  /**
   * A list of fields to include in the response. If not provided, all fields will be included.
   */
  fields: ArrayFromString(z.string()).optional(),
  /**
   * Search query to filter Knowledge Base Entries by specific criteria.
   */
  filter: z.string().optional(),
  /**
   * Field to sort the Knowledge Base Entries by.
   */
  sort_field: FindKnowledgeBaseEntriesSortField.optional(),
  /**
   * Sort order for the results, either asc or desc.
   */
  sort_order: SortOrder.optional(),
  /**
   * Page number for paginated results. Defaults to 1.
   */
  page: z.coerce.number().int().min(1).optional().default(1),
  /**
   * Number of Knowledge Base Entries to return per page. Defaults to 20.
   */
  per_page: z.coerce.number().int().min(0).optional().default(20),
});
export type FindKnowledgeBaseEntriesRequestQueryInput = z.input<
  typeof FindKnowledgeBaseEntriesRequestQuery
>;

export type FindKnowledgeBaseEntriesResponse = z.infer<typeof FindKnowledgeBaseEntriesResponse>;
export const FindKnowledgeBaseEntriesResponse = z.object({
  /**
   * The current page number.
   */
  page: z.number().int(),
  /**
   * The number of Knowledge Base Entries returned per page.
   */
  perPage: z.number().int(),
  /**
   * The total number of Knowledge Base Entries available.
   */
  total: z.number().int(),
  /**
   * The list of Knowledge Base Entries for the current page.
   */
  data: z.array(KnowledgeBaseEntryResponse),
});
