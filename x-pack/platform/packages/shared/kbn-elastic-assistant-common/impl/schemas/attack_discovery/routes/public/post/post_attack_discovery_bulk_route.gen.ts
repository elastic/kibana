/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Attack discovery bulk API endpoint
 *   version: 2023-10-31
 */

import { z } from '@kbn/zod';

import { AttackDiscoveryApiAlert } from '../../../attack_discovery_api_alert.gen';

export type PostAttackDiscoveryBulkRequestBody = z.infer<typeof PostAttackDiscoveryBulkRequestBody>;
export const PostAttackDiscoveryBulkRequestBody = z.object({
  /**
   * Configuration object containing all parameters for the bulk update operation
   */
  update: z.object({
    /**
     * Array of Attack discovery IDs to update
     */
    ids: z.array(z.string()),
    /**
     * When provided, update the kibana.alert.workflow_status of the attack discovery alerts
     */
    kibana_alert_workflow_status: z.enum(['open', 'acknowledged', 'closed']).optional(),
    /**
     * When provided, update the visibility of the alert, as determined by the kibana.alert.attack_discovery.users field
     */
    visibility: z.enum(['not_shared', 'shared']).optional(),
    /**
     * When true, returns the updated Attack discoveries with text replacements applied to the detailsMarkdown, entitySummaryMarkdown, summaryMarkdown, and title fields. This substitutes anonymized values with human-readable equivalents. Defaults to `true`.
     */
    with_replacements: z.boolean().optional().default(true),
    /**
     * Enables a markdown syntax used to render pivot fields, for example `{{ user.name james }}`. When disabled, the same example would be rendered as `james`. This is primarily used for Attack discovery views within Kibana. Defaults to `false`.
     */
    enable_field_rendering: z.boolean().optional().default(false),
  }),
});
export type PostAttackDiscoveryBulkRequestBodyInput = z.input<
  typeof PostAttackDiscoveryBulkRequestBody
>;

export type PostAttackDiscoveryBulkResponse = z.infer<typeof PostAttackDiscoveryBulkResponse>;
export const PostAttackDiscoveryBulkResponse = z.object({
  /**
   * Array of updated Attack discovery alert objects. Each item includes the applied modifications from the bulk update request.
   */
  data: z.array(AttackDiscoveryApiAlert),
});
