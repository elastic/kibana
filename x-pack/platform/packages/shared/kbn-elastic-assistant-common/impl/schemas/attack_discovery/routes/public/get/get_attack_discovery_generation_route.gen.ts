/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Get Attack discovery generation API endpoint
 *   version: 2023-10-31
 */

import { z } from '@kbn/zod';
import { BooleanFromString } from '@kbn/zod-helpers';

import { NonEmptyString } from '../../../../common_attributes.gen';
import { AttackDiscoveryApiAlert } from '../../../attack_discovery_api_alert.gen';
import { AttackDiscoveryGeneration } from '../../../generation.gen';

export type GetAttackDiscoveryGenerationRequestQuery = z.infer<
  typeof GetAttackDiscoveryGenerationRequestQuery
>;
export const GetAttackDiscoveryGenerationRequestQuery = z.object({
  /**
   * Enables a markdown syntax used to render pivot fields, for example `{{ user.name james }}`. When disabled, the same example would be rendered as `james`. This is primarily used for Attack discovery views within Kibana. Defaults to `false`.
   */
  enable_field_rendering: BooleanFromString.optional().default(false),
  /**
   * When true, return the created Attack discoveries with text replacements applied to the detailsMarkdown, entitySummaryMarkdown, summaryMarkdown, and title fields. Defaults to `true`.
   */
  with_replacements: BooleanFromString.optional().default(true),
});
export type GetAttackDiscoveryGenerationRequestQueryInput = z.input<
  typeof GetAttackDiscoveryGenerationRequestQuery
>;

export type GetAttackDiscoveryGenerationRequestParams = z.infer<
  typeof GetAttackDiscoveryGenerationRequestParams
>;
export const GetAttackDiscoveryGenerationRequestParams = z.object({
  /**
   * The unique identifier for the Attack discovery generation execution. This UUID is returned at the start of an Attack discovery generation.
   */
  execution_uuid: NonEmptyString,
});
export type GetAttackDiscoveryGenerationRequestParamsInput = z.input<
  typeof GetAttackDiscoveryGenerationRequestParams
>;

export type GetAttackDiscoveryGenerationResponse = z.infer<
  typeof GetAttackDiscoveryGenerationResponse
>;
export const GetAttackDiscoveryGenerationResponse = z.object({
  /**
   * Array of Attack discoveries generated during this execution.
   */
  data: z.array(AttackDiscoveryApiAlert),
  /**
   * Optional metadata about the attack discovery generation process, metadata including execution status and statistics. This metadata may not be available for all generations.
   */
  generation: AttackDiscoveryGeneration.optional(),
});
