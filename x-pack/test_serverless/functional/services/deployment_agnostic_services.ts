/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { services as functionalPlatformServices } from '@kbn/test-suites-xpack-platform/functional/services';
import { services as deploymentAgnosticSharedServices } from '../../shared/services/deployment_agnostic_services';

export const services = {
  ...deploymentAgnosticSharedServices,
  __webdriver__: functionalPlatformServices.__webdriver__,
  aceEditor: functionalPlatformServices.aceEditor,
  actions: functionalPlatformServices.actions,
  appsMenu: functionalPlatformServices.appsMenu,
  browser: functionalPlatformServices.browser,
  canvasElement: functionalPlatformServices.canvasElement,
  cases: functionalPlatformServices.cases,
  comboBox: functionalPlatformServices.comboBox,
  selectable: functionalPlatformServices.selectable,
  dashboardAddPanel: functionalPlatformServices.dashboardAddPanel,
  dashboardBadgeActions: functionalPlatformServices.dashboardBadgeActions,
  dashboardCustomizePanel: functionalPlatformServices.dashboardCustomizePanel,
  dashboardDrilldownPanelActions: functionalPlatformServices.dashboardDrilldownPanelActions,
  dashboardDrilldownsManage: functionalPlatformServices.dashboardDrilldownsManage,
  dashboardExpect: functionalPlatformServices.dashboardExpect,
  dashboardPanelActions: functionalPlatformServices.dashboardPanelActions,
  dashboardSettings: functionalPlatformServices.dashboardSettings,
  dashboardVisualizations: functionalPlatformServices.dashboardVisualizations,
  dataGrid: functionalPlatformServices.dataGrid,
  dataStreams: functionalPlatformServices.dataStreams,
  dataViews: functionalPlatformServices.dataViews,
  elasticChart: functionalPlatformServices.elasticChart,
  embedding: functionalPlatformServices.embedding,
  failureDebugging: functionalPlatformServices.failureDebugging,
  fieldEditor: functionalPlatformServices.fieldEditor,
  filterBar: functionalPlatformServices.filterBar,
  find: functionalPlatformServices.find,
  flyout: functionalPlatformServices.flyout,
  globalNav: functionalPlatformServices.globalNav,
  inspector: functionalPlatformServices.inspector,
  listingTable: functionalPlatformServices.listingTable,
  managementMenu: functionalPlatformServices.managementMenu,
  menuToggle: functionalPlatformServices.menuToggle,
  ml: functionalPlatformServices.ml,
  monacoEditor: functionalPlatformServices.monacoEditor,
  esql: functionalPlatformServices.esql,
  pieChart: functionalPlatformServices.pieChart,
  pipelineEditor: functionalPlatformServices.pipelineEditor,
  pipelineList: functionalPlatformServices.pipelineList,
  png: functionalPlatformServices.png,
  queryBar: functionalPlatformServices.queryBar,
  random: functionalPlatformServices.random,
  renderable: functionalPlatformServices.renderable,
  reporting: functionalPlatformServices.reporting,
  retryOnStale: functionalPlatformServices.retryOnStale,
  rules: functionalPlatformServices.rules,
  sampleData: functionalPlatformServices.sampleData,
  savedObjectsFinder: functionalPlatformServices.savedObjectsFinder,
  savedQueryManagementComponent: functionalPlatformServices.savedQueryManagementComponent,
  screenshots: functionalPlatformServices.screenshots,
  snapshots: functionalPlatformServices.snapshots,
  supertest: functionalPlatformServices.supertest,
  testSubjects: functionalPlatformServices.testSubjects,
  transform: functionalPlatformServices.transform,
  toasts: functionalPlatformServices.toasts,
  usageCollection: functionalPlatformServices.usageCollection,
  userMenu: functionalPlatformServices.userMenu,
  vegaDebugInspector: functionalPlatformServices.vegaDebugInspector,
};
