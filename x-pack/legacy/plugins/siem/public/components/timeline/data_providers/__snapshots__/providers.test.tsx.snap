// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Providers rendering renders correctly against snapshot 1`] = `
<PanelProviders
  className="timeline-drop-area"
  data-test-subj="providers"
>
  <Empty
    showSmallMsg={true}
  />
  <PanelProvidersGroupContainer
    alignItems="flexStart"
    className="provider-items-container"
    direction="column"
    gutterSize="none"
  >
    <EuiFlexItem
      grow={true}
    >
      <PanelProviderGroupContainer
        alignItems="center"
        direction="row"
        gutterSize="none"
        justifyContent="flexStart"
        key="id-Provider 1"
      >
        <PanelProviderItemContainer
          className="provider-item-filter-container"
          grow={false}
        >
          <PublicDraggable
            draggableId="draggableId.timeline.foo.dataProvider.id-Provider 1"
            index={0}
          >
            <Component />
          </PublicDraggable>
        </PanelProviderItemContainer>
        <EuiFlexItem
          grow={false}
        >
          <ProviderItemAndDragDrop
            browserFields={Object {}}
            dataProvider={
              Object {
                "and": Array [],
                "enabled": true,
                "excluded": false,
                "id": "id-Provider 1",
                "kqlQuery": "",
                "name": "Provider 1",
                "queryMatch": Object {
                  "field": "name",
                  "operator": ":",
                  "value": "Provider 1",
                },
              }
            }
            onChangeDataProviderKqlQuery={[MockFunction]}
            onChangeDroppableAndProvider={[MockFunction]}
            onDataProviderEdited={[MockFunction]}
            onDataProviderRemoved={[MockFunction]}
            onToggleDataProviderEnabled={[MockFunction]}
            onToggleDataProviderExcluded={[MockFunction]}
            timelineId="foo"
          />
        </EuiFlexItem>
      </PanelProviderGroupContainer>
      <PanelProviderGroupContainer
        alignItems="center"
        direction="row"
        gutterSize="none"
        justifyContent="flexStart"
        key="id-Provider 2"
      >
        <PanelProviderItemContainer
          className="provider-item-filter-container"
          grow={false}
        >
          <PublicDraggable
            draggableId="draggableId.timeline.foo.dataProvider.id-Provider 2"
            index={1}
          >
            <Component />
          </PublicDraggable>
        </PanelProviderItemContainer>
        <EuiFlexItem
          grow={false}
        >
          <ProviderItemAndDragDrop
            browserFields={Object {}}
            dataProvider={
              Object {
                "and": Array [],
                "enabled": true,
                "excluded": false,
                "id": "id-Provider 2",
                "kqlQuery": "",
                "name": "Provider 2",
                "queryMatch": Object {
                  "field": "name",
                  "operator": ":",
                  "value": "Provider 2",
                },
              }
            }
            onChangeDataProviderKqlQuery={[MockFunction]}
            onChangeDroppableAndProvider={[MockFunction]}
            onDataProviderEdited={[MockFunction]}
            onDataProviderRemoved={[MockFunction]}
            onToggleDataProviderEnabled={[MockFunction]}
            onToggleDataProviderExcluded={[MockFunction]}
            timelineId="foo"
          />
        </EuiFlexItem>
      </PanelProviderGroupContainer>
      <PanelProviderGroupContainer
        alignItems="center"
        direction="row"
        gutterSize="none"
        justifyContent="flexStart"
        key="id-Provider 3"
      >
        <PanelProviderItemContainer
          className="provider-item-filter-container"
          grow={false}
        >
          <PublicDraggable
            draggableId="draggableId.timeline.foo.dataProvider.id-Provider 3"
            index={2}
          >
            <Component />
          </PublicDraggable>
        </PanelProviderItemContainer>
        <EuiFlexItem
          grow={false}
        >
          <ProviderItemAndDragDrop
            browserFields={Object {}}
            dataProvider={
              Object {
                "and": Array [],
                "enabled": true,
                "excluded": false,
                "id": "id-Provider 3",
                "kqlQuery": "",
                "name": "Provider 3",
                "queryMatch": Object {
                  "field": "name",
                  "operator": ":",
                  "value": "Provider 3",
                },
              }
            }
            onChangeDataProviderKqlQuery={[MockFunction]}
            onChangeDroppableAndProvider={[MockFunction]}
            onDataProviderEdited={[MockFunction]}
            onDataProviderRemoved={[MockFunction]}
            onToggleDataProviderEnabled={[MockFunction]}
            onToggleDataProviderExcluded={[MockFunction]}
            timelineId="foo"
          />
        </EuiFlexItem>
      </PanelProviderGroupContainer>
      <PanelProviderGroupContainer
        alignItems="center"
        direction="row"
        gutterSize="none"
        justifyContent="flexStart"
        key="id-Provider 4"
      >
        <PanelProviderItemContainer
          className="provider-item-filter-container"
          grow={false}
        >
          <PublicDraggable
            draggableId="draggableId.timeline.foo.dataProvider.id-Provider 4"
            index={3}
          >
            <Component />
          </PublicDraggable>
        </PanelProviderItemContainer>
        <EuiFlexItem
          grow={false}
        >
          <ProviderItemAndDragDrop
            browserFields={Object {}}
            dataProvider={
              Object {
                "and": Array [],
                "enabled": true,
                "excluded": false,
                "id": "id-Provider 4",
                "kqlQuery": "",
                "name": "Provider 4",
                "queryMatch": Object {
                  "field": "name",
                  "operator": ":",
                  "value": "Provider 4",
                },
              }
            }
            onChangeDataProviderKqlQuery={[MockFunction]}
            onChangeDroppableAndProvider={[MockFunction]}
            onDataProviderEdited={[MockFunction]}
            onDataProviderRemoved={[MockFunction]}
            onToggleDataProviderEnabled={[MockFunction]}
            onToggleDataProviderExcluded={[MockFunction]}
            timelineId="foo"
          />
        </EuiFlexItem>
      </PanelProviderGroupContainer>
      <PanelProviderGroupContainer
        alignItems="center"
        direction="row"
        gutterSize="none"
        justifyContent="flexStart"
        key="id-Provider 5"
      >
        <PanelProviderItemContainer
          className="provider-item-filter-container"
          grow={false}
        >
          <PublicDraggable
            draggableId="draggableId.timeline.foo.dataProvider.id-Provider 5"
            index={4}
          >
            <Component />
          </PublicDraggable>
        </PanelProviderItemContainer>
        <EuiFlexItem
          grow={false}
        >
          <ProviderItemAndDragDrop
            browserFields={Object {}}
            dataProvider={
              Object {
                "and": Array [],
                "enabled": true,
                "excluded": false,
                "id": "id-Provider 5",
                "kqlQuery": "",
                "name": "Provider 5",
                "queryMatch": Object {
                  "field": "name",
                  "operator": ":",
                  "value": "Provider 5",
                },
              }
            }
            onChangeDataProviderKqlQuery={[MockFunction]}
            onChangeDroppableAndProvider={[MockFunction]}
            onDataProviderEdited={[MockFunction]}
            onDataProviderRemoved={[MockFunction]}
            onToggleDataProviderEnabled={[MockFunction]}
            onToggleDataProviderExcluded={[MockFunction]}
            timelineId="foo"
          />
        </EuiFlexItem>
      </PanelProviderGroupContainer>
      <PanelProviderGroupContainer
        alignItems="center"
        direction="row"
        gutterSize="none"
        justifyContent="flexStart"
        key="id-Provider 6"
      >
        <PanelProviderItemContainer
          className="provider-item-filter-container"
          grow={false}
        >
          <PublicDraggable
            draggableId="draggableId.timeline.foo.dataProvider.id-Provider 6"
            index={5}
          >
            <Component />
          </PublicDraggable>
        </PanelProviderItemContainer>
        <EuiFlexItem
          grow={false}
        >
          <ProviderItemAndDragDrop
            browserFields={Object {}}
            dataProvider={
              Object {
                "and": Array [],
                "enabled": true,
                "excluded": false,
                "id": "id-Provider 6",
                "kqlQuery": "",
                "name": "Provider 6",
                "queryMatch": Object {
                  "field": "name",
                  "operator": ":",
                  "value": "Provider 6",
                },
              }
            }
            onChangeDataProviderKqlQuery={[MockFunction]}
            onChangeDroppableAndProvider={[MockFunction]}
            onDataProviderEdited={[MockFunction]}
            onDataProviderRemoved={[MockFunction]}
            onToggleDataProviderEnabled={[MockFunction]}
            onToggleDataProviderExcluded={[MockFunction]}
            timelineId="foo"
          />
        </EuiFlexItem>
      </PanelProviderGroupContainer>
      <PanelProviderGroupContainer
        alignItems="center"
        direction="row"
        gutterSize="none"
        justifyContent="flexStart"
        key="id-Provider 7"
      >
        <PanelProviderItemContainer
          className="provider-item-filter-container"
          grow={false}
        >
          <PublicDraggable
            draggableId="draggableId.timeline.foo.dataProvider.id-Provider 7"
            index={6}
          >
            <Component />
          </PublicDraggable>
        </PanelProviderItemContainer>
        <EuiFlexItem
          grow={false}
        >
          <ProviderItemAndDragDrop
            browserFields={Object {}}
            dataProvider={
              Object {
                "and": Array [],
                "enabled": true,
                "excluded": false,
                "id": "id-Provider 7",
                "kqlQuery": "",
                "name": "Provider 7",
                "queryMatch": Object {
                  "field": "name",
                  "operator": ":",
                  "value": "Provider 7",
                },
              }
            }
            onChangeDataProviderKqlQuery={[MockFunction]}
            onChangeDroppableAndProvider={[MockFunction]}
            onDataProviderEdited={[MockFunction]}
            onDataProviderRemoved={[MockFunction]}
            onToggleDataProviderEnabled={[MockFunction]}
            onToggleDataProviderExcluded={[MockFunction]}
            timelineId="foo"
          />
        </EuiFlexItem>
      </PanelProviderGroupContainer>
      <PanelProviderGroupContainer
        alignItems="center"
        direction="row"
        gutterSize="none"
        justifyContent="flexStart"
        key="id-Provider 8"
      >
        <PanelProviderItemContainer
          className="provider-item-filter-container"
          grow={false}
        >
          <PublicDraggable
            draggableId="draggableId.timeline.foo.dataProvider.id-Provider 8"
            index={7}
          >
            <Component />
          </PublicDraggable>
        </PanelProviderItemContainer>
        <EuiFlexItem
          grow={false}
        >
          <ProviderItemAndDragDrop
            browserFields={Object {}}
            dataProvider={
              Object {
                "and": Array [],
                "enabled": true,
                "excluded": false,
                "id": "id-Provider 8",
                "kqlQuery": "",
                "name": "Provider 8",
                "queryMatch": Object {
                  "field": "name",
                  "operator": ":",
                  "value": "Provider 8",
                },
              }
            }
            onChangeDataProviderKqlQuery={[MockFunction]}
            onChangeDroppableAndProvider={[MockFunction]}
            onDataProviderEdited={[MockFunction]}
            onDataProviderRemoved={[MockFunction]}
            onToggleDataProviderEnabled={[MockFunction]}
            onToggleDataProviderExcluded={[MockFunction]}
            timelineId="foo"
          />
        </EuiFlexItem>
      </PanelProviderGroupContainer>
      <PanelProviderGroupContainer
        alignItems="center"
        direction="row"
        gutterSize="none"
        justifyContent="flexStart"
        key="id-Provider 9"
      >
        <PanelProviderItemContainer
          className="provider-item-filter-container"
          grow={false}
        >
          <PublicDraggable
            draggableId="draggableId.timeline.foo.dataProvider.id-Provider 9"
            index={8}
          >
            <Component />
          </PublicDraggable>
        </PanelProviderItemContainer>
        <EuiFlexItem
          grow={false}
        >
          <ProviderItemAndDragDrop
            browserFields={Object {}}
            dataProvider={
              Object {
                "and": Array [],
                "enabled": true,
                "excluded": false,
                "id": "id-Provider 9",
                "kqlQuery": "",
                "name": "Provider 9",
                "queryMatch": Object {
                  "field": "name",
                  "operator": ":",
                  "value": "Provider 9",
                },
              }
            }
            onChangeDataProviderKqlQuery={[MockFunction]}
            onChangeDroppableAndProvider={[MockFunction]}
            onDataProviderEdited={[MockFunction]}
            onDataProviderRemoved={[MockFunction]}
            onToggleDataProviderEnabled={[MockFunction]}
            onToggleDataProviderExcluded={[MockFunction]}
            timelineId="foo"
          />
        </EuiFlexItem>
      </PanelProviderGroupContainer>
      <PanelProviderGroupContainer
        alignItems="center"
        direction="row"
        gutterSize="none"
        justifyContent="flexStart"
        key="id-Provider 10"
      >
        <PanelProviderItemContainer
          className="provider-item-filter-container"
          grow={false}
        >
          <PublicDraggable
            draggableId="draggableId.timeline.foo.dataProvider.id-Provider 10"
            index={9}
          >
            <Component />
          </PublicDraggable>
        </PanelProviderItemContainer>
        <EuiFlexItem
          grow={false}
        >
          <ProviderItemAndDragDrop
            browserFields={Object {}}
            dataProvider={
              Object {
                "and": Array [],
                "enabled": true,
                "excluded": false,
                "id": "id-Provider 10",
                "kqlQuery": "",
                "name": "Provider 10",
                "queryMatch": Object {
                  "field": "name",
                  "operator": ":",
                  "value": "Provider 10",
                },
              }
            }
            onChangeDataProviderKqlQuery={[MockFunction]}
            onChangeDroppableAndProvider={[MockFunction]}
            onDataProviderEdited={[MockFunction]}
            onDataProviderRemoved={[MockFunction]}
            onToggleDataProviderEnabled={[MockFunction]}
            onToggleDataProviderExcluded={[MockFunction]}
            timelineId="foo"
          />
        </EuiFlexItem>
      </PanelProviderGroupContainer>
    </EuiFlexItem>
  </PanelProvidersGroupContainer>
  <TimelineEuiFormHelpText>
    <span>
      Drop here
       
      to build an
       
      OR
       
      query
    </span>
  </TimelineEuiFormHelpText>
</PanelProviders>
`;
