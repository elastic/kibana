// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EventDetails rendering should match snapshot 1`] = `
<Component>
  <EventDetails
    browserFields={
      Object {
        "agent": Object {
          "fields": Object {
            "agent.ephemeral_id": Object {
              "aggregatable": true,
              "category": "agent",
              "description": "Ephemeral identifier of this agent (if one exists). This id normally changes across restarts, but \`agent.id\` does not.",
              "example": "8a4f500f",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "agent.ephemeral_id",
              "searchable": true,
              "type": "string",
            },
            "agent.hostname": Object {
              "aggregatable": true,
              "category": "agent",
              "description": null,
              "example": null,
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "agent.hostname",
              "searchable": true,
              "type": "string",
            },
            "agent.id": Object {
              "aggregatable": true,
              "category": "agent",
              "description": "Unique identifier of this agent (if one exists). Example: For Beats this would be beat.id.",
              "example": "8a4f500d",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "agent.id",
              "searchable": true,
              "type": "string",
            },
            "agent.name": Object {
              "aggregatable": true,
              "category": "agent",
              "description": "Name of the agent. This is a name that can be given to an agent. This can be helpful if for example two Filebeat instances are running on the same host but a human readable separation is needed on which Filebeat instance data is coming from. If no name is given, the name is often left empty.",
              "example": "foo",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "agent.name",
              "searchable": true,
              "type": "string",
            },
          },
        },
        "auditd": Object {
          "fields": Object {
            "auditd.data.a0": Object {
              "aggregatable": true,
              "category": "auditd",
              "description": null,
              "example": null,
              "format": "",
              "indexes": Array [
                "auditbeat",
              ],
              "name": "auditd.data.a0",
              "searchable": true,
              "type": "string",
            },
            "auditd.data.a1": Object {
              "aggregatable": true,
              "category": "auditd",
              "description": null,
              "example": null,
              "format": "",
              "indexes": Array [
                "auditbeat",
              ],
              "name": "auditd.data.a1",
              "searchable": true,
              "type": "string",
            },
            "auditd.data.a2": Object {
              "aggregatable": true,
              "category": "auditd",
              "description": null,
              "example": null,
              "format": "",
              "indexes": Array [
                "auditbeat",
              ],
              "name": "auditd.data.a2",
              "searchable": true,
              "type": "string",
            },
          },
        },
        "base": Object {
          "fields": Object {
            "@timestamp": Object {
              "aggregatable": true,
              "category": "base",
              "description": "Date/time when the event originated. For log events this is the date/time when the event was generated, and not when it was read. Required field for all events.",
              "example": "2016-05-23T08:05:34.853Z",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "@timestamp",
              "searchable": true,
              "type": "date",
            },
          },
        },
        "client": Object {
          "fields": Object {
            "client.address": Object {
              "aggregatable": true,
              "category": "client",
              "description": "Some event client addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the \`.address\` field. Then it should be duplicated to \`.ip\` or \`.domain\`, depending on which one it is.",
              "example": null,
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "client.address",
              "searchable": true,
              "type": "string",
            },
            "client.bytes": Object {
              "aggregatable": true,
              "category": "client",
              "description": "Bytes sent from the client to the server.",
              "example": "184",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "client.bytes",
              "searchable": true,
              "type": "number",
            },
            "client.domain": Object {
              "aggregatable": true,
              "category": "client",
              "description": "Client domain.",
              "example": null,
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "client.domain",
              "searchable": true,
              "type": "string",
            },
            "client.geo.country_iso_code": Object {
              "aggregatable": true,
              "category": "client",
              "description": "Country ISO code.",
              "example": "CA",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "client.geo.country_iso_code",
              "searchable": true,
              "type": "string",
            },
          },
        },
        "cloud": Object {
          "fields": Object {
            "cloud.account.id": Object {
              "aggregatable": true,
              "category": "cloud",
              "description": "The cloud account or organization id used to identify different entities in a multi-tenant environment. Examples: AWS account id, Google Cloud ORG Id, or other unique identifier.",
              "example": "666777888999",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "cloud.account.id",
              "searchable": true,
              "type": "string",
            },
            "cloud.availability_zone": Object {
              "aggregatable": true,
              "category": "cloud",
              "description": "Availability zone in which this host is running.",
              "example": "us-east-1c",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "cloud.availability_zone",
              "searchable": true,
              "type": "string",
            },
          },
        },
        "container": Object {
          "fields": Object {
            "container.id": Object {
              "aggregatable": true,
              "category": "container",
              "description": "Unique container id.",
              "example": null,
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "container.id",
              "searchable": true,
              "type": "string",
            },
            "container.image.name": Object {
              "aggregatable": true,
              "category": "container",
              "description": "Name of the image the container was built on.",
              "example": null,
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "container.image.name",
              "searchable": true,
              "type": "string",
            },
            "container.image.tag": Object {
              "aggregatable": true,
              "category": "container",
              "description": "Container image tag.",
              "example": null,
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "container.image.tag",
              "searchable": true,
              "type": "string",
            },
          },
        },
        "destination": Object {
          "fields": Object {
            "destination.address": Object {
              "aggregatable": true,
              "category": "destination",
              "description": "Some event destination addresses are defined ambiguously. The event will sometimes list an IP, a domain or a unix socket.  You should always store the raw address in the \`.address\` field. Then it should be duplicated to \`.ip\` or \`.domain\`, depending on which one it is.",
              "example": null,
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "destination.address",
              "searchable": true,
              "type": "string",
            },
            "destination.bytes": Object {
              "aggregatable": true,
              "category": "destination",
              "description": "Bytes sent from the destination to the source.",
              "example": "184",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "destination.bytes",
              "searchable": true,
              "type": "number",
            },
            "destination.domain": Object {
              "aggregatable": true,
              "category": "destination",
              "description": "Destination domain.",
              "example": null,
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "destination.domain",
              "searchable": true,
              "type": "string",
            },
            "destination.ip": Object {
              "aggregatable": true,
              "category": "destination",
              "description": "IP address of the destination. Can be one or multiple IPv4 or IPv6 addresses.",
              "example": "",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "destination.ip",
              "searchable": true,
              "type": "ip",
            },
            "destination.port": Object {
              "aggregatable": true,
              "category": "destination",
              "description": "Port of the destination.",
              "example": "",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "destination.port",
              "searchable": true,
              "type": "long",
            },
          },
        },
        "event": Object {
          "fields": Object {
            "event.end": Object {
              "aggregatable": true,
              "category": "event",
              "description": "event.end contains the date when the event ended or when the activity was last observed.",
              "example": null,
              "format": "",
              "indexes": Array [
                "auditbeat-*",
                "endgame-*",
                "filebeat-*",
                "packetbeat-*",
                "winlogbeat-*",
              ],
              "name": "event.end",
              "searchable": true,
              "type": "date",
            },
          },
        },
        "source": Object {
          "fields": Object {
            "source.ip": Object {
              "aggregatable": true,
              "category": "source",
              "description": "IP address of the source. Can be one or multiple IPv4 or IPv6 addresses.",
              "example": "",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "source.ip",
              "searchable": true,
              "type": "ip",
            },
            "source.port": Object {
              "aggregatable": true,
              "category": "source",
              "description": "Port of the source.",
              "example": "",
              "format": "",
              "indexes": Array [
                "auditbeat",
                "filebeat",
                "packetbeat",
              ],
              "name": "source.port",
              "searchable": true,
              "type": "long",
            },
          },
        },
      }
    }
    columnHeaders={
      Array [
        Object {
          "aggregatable": true,
          "category": "base",
          "columnHeaderType": "not-filtered",
          "description": "Date/time when the event originated.
For log events this is the date/time when the event was generated, and not when it was read.
Required field for all events.",
          "example": "2016-05-23T08:05:34.853Z",
          "id": "@timestamp",
          "type": "date",
          "width": 190,
        },
        Object {
          "aggregatable": true,
          "category": "event",
          "columnHeaderType": "not-filtered",
          "description": "Severity describes the severity of the event. What the different severity values mean can very different between use cases. It's up to the implementer to make sure severities are consistent across events.",
          "example": "7",
          "id": "event.severity",
          "type": "long",
          "width": 180,
        },
        Object {
          "aggregatable": true,
          "category": "event",
          "columnHeaderType": "not-filtered",
          "description": "Event category.
This contains high-level information about the contents of the event. It is more generic than \`event.action\`, in the sense that typically a category contains multiple actions. Warning: In future versions of ECS, we plan to provide a list of acceptable values for this field, please use with caution.",
          "example": "user-management",
          "id": "event.category",
          "type": "keyword",
          "width": 180,
        },
        Object {
          "aggregatable": true,
          "category": "event",
          "columnHeaderType": "not-filtered",
          "description": "The action captured by the event.
This describes the information in the event. It is more specific than \`event.category\`. Examples are \`group-add\`, \`process-started\`, \`file-created\`. The value is normally defined by the implementer.",
          "example": "user-password-change",
          "id": "event.action",
          "type": "keyword",
          "width": 180,
        },
        Object {
          "aggregatable": true,
          "category": "host",
          "columnHeaderType": "not-filtered",
          "description": "Name of the host.
It can contain what \`hostname\` returns on Unix systems, the fully qualified domain name, or a name specified by the user. The sender decides which value to use.",
          "example": "",
          "id": "host.name",
          "type": "keyword",
          "width": 180,
        },
        Object {
          "aggregatable": true,
          "category": "source",
          "columnHeaderType": "not-filtered",
          "description": "IP address of the source.
Can be one or multiple IPv4 or IPv6 addresses.",
          "example": "",
          "id": "source.ip",
          "type": "ip",
          "width": 180,
        },
        Object {
          "aggregatable": true,
          "category": "destination",
          "columnHeaderType": "not-filtered",
          "description": "IP address of the destination.
Can be one or multiple IPv4 or IPv6 addresses.",
          "example": "",
          "id": "destination.ip",
          "type": "ip",
          "width": 180,
        },
        Object {
          "aggregatable": true,
          "category": "destination",
          "columnHeaderType": "not-filtered",
          "description": "Bytes sent from the source to the destination",
          "example": "123",
          "format": "bytes",
          "id": "destination.bytes",
          "type": "number",
          "width": 180,
        },
        Object {
          "aggregatable": true,
          "category": "user",
          "columnHeaderType": "not-filtered",
          "description": "Short name or login of the user.",
          "example": "albert",
          "id": "user.name",
          "type": "keyword",
          "width": 180,
        },
        Object {
          "aggregatable": true,
          "category": "base",
          "columnHeaderType": "not-filtered",
          "description": "Each document has an _id that uniquely identifies it",
          "example": "Y-6TfmcB0WOhS6qyMv3s",
          "id": "_id",
          "type": "keyword",
          "width": 180,
        },
        Object {
          "aggregatable": false,
          "category": "base",
          "columnHeaderType": "not-filtered",
          "description": "For log events the message field contains the log message.
In other use cases the message field can be used to concatenate different values which are then freely searchable. If multiple messages exist, they can be combined into one message.",
          "example": "Hello World",
          "id": "message",
          "type": "text",
          "width": 180,
        },
      ]
    }
    data={
      Array [
        Object {
          "field": "_id",
          "originalValue": "pEMaMmkBUV60JmNWmWVi",
          "values": Array [
            "pEMaMmkBUV60JmNWmWVi",
          ],
        },
        Object {
          "field": "_index",
          "originalValue": "filebeat-8.0.0-2019.02.19-000001",
          "values": Array [
            "filebeat-8.0.0-2019.02.19-000001",
          ],
        },
        Object {
          "field": "_type",
          "originalValue": "_doc",
          "values": Array [
            "_doc",
          ],
        },
        Object {
          "field": "_score",
          "originalValue": 1,
          "values": Array [
            "1",
          ],
        },
        Object {
          "field": "@timestamp",
          "originalValue": "2019-02-28T16:50:54.621Z",
          "values": Array [
            "2019-02-28T16:50:54.621Z",
          ],
        },
        Object {
          "field": "agent.ephemeral_id",
          "originalValue": "9d391ef2-a734-4787-8891-67031178c641",
          "values": Array [
            "9d391ef2-a734-4787-8891-67031178c641",
          ],
        },
        Object {
          "field": "agent.hostname",
          "originalValue": "siem-kibana",
          "values": Array [
            "siem-kibana",
          ],
        },
        Object {
          "field": "agent.id",
          "originalValue": "5de03d5f-52f3-482e-91d4-853c7de073c3",
          "values": Array [
            "5de03d5f-52f3-482e-91d4-853c7de073c3",
          ],
        },
        Object {
          "field": "agent.type",
          "originalValue": "filebeat",
          "values": Array [
            "filebeat",
          ],
        },
        Object {
          "field": "agent.version",
          "originalValue": "8.0.0",
          "values": Array [
            "8.0.0",
          ],
        },
        Object {
          "field": "cloud.availability_zone",
          "originalValue": "projects/189716325846/zones/us-east1-b",
          "values": Array [
            "projects/189716325846/zones/us-east1-b",
          ],
        },
        Object {
          "field": "cloud.instance.id",
          "originalValue": "5412578377715150143",
          "values": Array [
            "5412578377715150143",
          ],
        },
        Object {
          "field": "cloud.instance.name",
          "originalValue": "siem-kibana",
          "values": Array [
            "siem-kibana",
          ],
        },
        Object {
          "field": "cloud.machine.type",
          "originalValue": "projects/189716325846/machineTypes/n1-standard-1",
          "values": Array [
            "projects/189716325846/machineTypes/n1-standard-1",
          ],
        },
        Object {
          "field": "cloud.project.id",
          "originalValue": "elastic-beats",
          "values": Array [
            "elastic-beats",
          ],
        },
        Object {
          "field": "cloud.provider",
          "originalValue": "gce",
          "values": Array [
            "gce",
          ],
        },
        Object {
          "field": "destination.bytes",
          "originalValue": 584,
          "values": Array [
            "584",
          ],
        },
        Object {
          "field": "destination.ip",
          "originalValue": "10.47.8.200",
          "values": Array [
            "10.47.8.200",
          ],
        },
        Object {
          "field": "destination.packets",
          "originalValue": 4,
          "values": Array [
            "4",
          ],
        },
        Object {
          "field": "destination.port",
          "originalValue": 902,
          "values": Array [
            "902",
          ],
        },
      ]
    }
    id="Y-6TfmcB0WOhS6qyMv3s"
    onUpdateColumns={[MockFunction]}
    onViewSelected={[MockFunction]}
    timelineId="test"
    toggleColumn={[MockFunction]}
    view="table-view"
  />
</Component>
`;
