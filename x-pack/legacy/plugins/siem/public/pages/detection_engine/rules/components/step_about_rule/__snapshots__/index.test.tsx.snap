// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StepAboutRuleComponent renders name, description, severity, riskScore and tags inputs disabled initially when isReadOnly is false and isLoading is true 1`] = `
.c4 .euiFormRow__labelWrapper .euiText {
  padding-right: 32px;
}

.c5 {
  margin-top: 4px;
}

.c5.euiButtonEmpty--xSmall {
  font-size: 12px;
}

.c5 .euiIcon {
  width: 12px;
  height: 12px;
}

.c6 {
  margin-top: 16px;
}

.c7 {
  width: 280px;
}

.c1 {
  line-height: inherit;
}

.c0 {
  padding-left: 53px;
}

.c9 {
  width: 100%;
}

.c10 {
  min-height: 200px;
  width: 100%;
}

.c8 {
  margin-top: 16px;
}

.c2 {
  margin-top: 16px;
}

.c3 .euiAccordion__iconWrapper {
  display: none;
}

.c3 .euiAccordion__childWrapper {
  -webkit-transition-duration: 1ms;
  transition-duration: 1ms;
}

.c3.euiAccordion-isOpen .euiButtonEmpty__content > svg {
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg);
}

<StepAboutRuleComponent
  addPadding={true}
  defaultValues={
    Object {
      "description": "",
      "documentation": "",
      "falsePositives": Array [
        "",
      ],
      "isNew": true,
      "name": "",
      "references": Array [
        "",
      ],
      "riskScore": 50,
      "severity": "low",
      "tags": Array [],
      "threat": Array [
        Object {
          "framework": "MITRE ATT&CK",
          "tactic": Object {
            "id": "none",
            "name": "none",
            "reference": "none",
          },
          "technique": Array [],
        },
      ],
      "timeline": Object {
        "id": null,
        "title": "Default blank timeline",
      },
    }
  }
  descriptionDirection="row"
  isLoading={true}
  isReadOnlyView={false}
  setForm={
    [MockFunction] {
      "calls": Array [
        Array [
          "about-rule",
          Object {
            "__addField": [Function],
            "__formData$": Object {
              "current": Subject {
                "callbacks": Set {
                  [Function],
                },
                "value": Object {
                  "description": "",
                  "documentation": "",
                  "falsePositives": Array [
                    "",
                  ],
                  "isNew": true,
                  "name": "",
                  "references": Array [
                    "",
                  ],
                  "riskScore": 50,
                  "severity": "low",
                  "tags": Array [],
                  "threat": Array [
                    Object {
                      "framework": "MITRE ATT&CK",
                      "tactic": Object {
                        "id": "none",
                        "name": "none",
                        "reference": "none",
                      },
                      "technique": Array [],
                    },
                  ],
                  "timeline": Object {
                    "id": null,
                    "title": "Default blank timeline",
                  },
                  "timeline.id": null,
                  "timeline.title": "Default blank timeline",
                },
              },
            },
            "__options": Object {
              "errorDisplayDelay": 500,
              "stripEmptyFields": false,
            },
            "__readFieldConfigFromSchema": [Function],
            "__removeField": [Function],
            "__updateFormDataAt": [Function],
            "__validateFields": [Function],
            "getErrors": [Function],
            "getFieldDefaultValue": [Function],
            "getFields": [Function],
            "getFormData": [Function],
            "isSubmitted": false,
            "isSubmitting": false,
            "isValid": undefined,
            "reset": [Function],
            "setFieldErrors": [Function],
            "setFieldValue": [Function],
            "submit": [Function],
            "subscribe": [Function],
          },
        ],
        Array [
          "about-rule",
          Object {
            "__addField": [Function],
            "__formData$": Object {
              "current": Subject {
                "callbacks": Set {
                  [Function],
                },
                "value": Object {
                  "description": "",
                  "documentation": "",
                  "falsePositives": Array [
                    "",
                  ],
                  "isNew": true,
                  "name": "",
                  "references": Array [
                    "",
                  ],
                  "riskScore": 50,
                  "severity": "low",
                  "tags": Array [],
                  "threat": Array [
                    Object {
                      "framework": "MITRE ATT&CK",
                      "tactic": Object {
                        "id": "none",
                        "name": "none",
                        "reference": "none",
                      },
                      "technique": Array [],
                    },
                  ],
                  "timeline": Object {
                    "id": null,
                    "title": "Default blank timeline",
                  },
                  "timeline.id": null,
                  "timeline.title": "Default blank timeline",
                },
              },
            },
            "__options": Object {
              "errorDisplayDelay": 500,
              "stripEmptyFields": false,
            },
            "__readFieldConfigFromSchema": [Function],
            "__removeField": [Function],
            "__updateFormDataAt": [Function],
            "__validateFields": [Function],
            "getErrors": [Function],
            "getFieldDefaultValue": [Function],
            "getFields": [Function],
            "getFormData": [Function],
            "isSubmitted": false,
            "isSubmitting": false,
            "isValid": undefined,
            "reset": [Function],
            "setFieldErrors": [Function],
            "setFieldValue": [Function],
            "submit": [Function],
            "subscribe": [Function],
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setStepData={[MockFunction]}
>
  <styled.div
    addPadding={true}
  >
    <div
      className="c0"
    >
      <Form
        data-test-subj="stepAboutRule"
        form={
          Object {
            "__addField": [Function],
            "__formData$": Object {
              "current": Subject {
                "callbacks": Set {
                  [Function],
                },
                "value": Object {
                  "description": "",
                  "documentation": "",
                  "falsePositives": Array [
                    "",
                  ],
                  "isNew": true,
                  "name": "",
                  "references": Array [
                    "",
                  ],
                  "riskScore": 50,
                  "severity": "low",
                  "tags": Array [],
                  "threat": Array [
                    Object {
                      "framework": "MITRE ATT&CK",
                      "tactic": Object {
                        "id": "none",
                        "name": "none",
                        "reference": "none",
                      },
                      "technique": Array [],
                    },
                  ],
                  "timeline": Object {
                    "id": null,
                    "title": "Default blank timeline",
                  },
                  "timeline.id": null,
                  "timeline.title": "Default blank timeline",
                },
              },
            },
            "__options": Object {
              "errorDisplayDelay": 500,
              "stripEmptyFields": false,
            },
            "__readFieldConfigFromSchema": [Function],
            "__removeField": [Function],
            "__updateFormDataAt": [Function],
            "__validateFields": [Function],
            "getErrors": [Function],
            "getFieldDefaultValue": [Function],
            "getFields": [Function],
            "getFormData": [Function],
            "isSubmitted": false,
            "isSubmitting": false,
            "isValid": undefined,
            "reset": [Function],
            "setFieldErrors": [Function],
            "setFieldValue": [Function],
            "submit": [Function],
            "subscribe": [Function],
          }
        }
      >
        <FormProvider
          form={
            Object {
              "__addField": [Function],
              "__formData$": Object {
                "current": Subject {
                  "callbacks": Set {
                    [Function],
                  },
                  "value": Object {
                    "description": "",
                    "documentation": "",
                    "falsePositives": Array [
                      "",
                    ],
                    "isNew": true,
                    "name": "",
                    "references": Array [
                      "",
                    ],
                    "riskScore": 50,
                    "severity": "low",
                    "tags": Array [],
                    "threat": Array [
                      Object {
                        "framework": "MITRE ATT&CK",
                        "tactic": Object {
                          "id": "none",
                          "name": "none",
                          "reference": "none",
                        },
                        "technique": Array [],
                      },
                    ],
                    "timeline": Object {
                      "id": null,
                      "title": "Default blank timeline",
                    },
                    "timeline.id": null,
                    "timeline.title": "Default blank timeline",
                  },
                },
              },
              "__options": Object {
                "errorDisplayDelay": 500,
                "stripEmptyFields": false,
              },
              "__readFieldConfigFromSchema": [Function],
              "__removeField": [Function],
              "__updateFormDataAt": [Function],
              "__validateFields": [Function],
              "getErrors": [Function],
              "getFieldDefaultValue": [Function],
              "getFields": [Function],
              "getFormData": [Function],
              "isSubmitted": false,
              "isSubmitting": false,
              "isValid": undefined,
              "reset": [Function],
              "setFieldErrors": [Function],
              "setFieldValue": [Function],
              "submit": [Function],
              "subscribe": [Function],
            }
          }
        >
          <EuiForm
            data-test-subj="stepAboutRule"
          >
            <div
              className="euiForm"
              data-test-subj="stepAboutRule"
            >
              <Component
                componentProps={
                  Object {
                    "data-test-subj": "detectionEngineStepAboutRuleName",
                    "euiFieldProps": Object {
                      "disabled": true,
                      "fullWidth": false,
                    },
                    "idAria": "detectionEngineStepAboutRuleName",
                  }
                }
                path="name"
              >
                <Component
                  component={[Function]}
                  componentProps={
                    Object {
                      "data-test-subj": "detectionEngineStepAboutRuleName",
                      "euiFieldProps": Object {
                        "disabled": true,
                        "fullWidth": false,
                      },
                      "idAria": "detectionEngineStepAboutRuleName",
                    }
                  }
                  path="name"
                >
                  <TextField
                    data-test-subj="detectionEngineStepAboutRuleName"
                    euiFieldProps={
                      Object {
                        "disabled": true,
                        "fullWidth": false,
                      }
                    }
                    field={
                      Object {
                        "__serializeOutput": [Function],
                        "clearErrors": [Function],
                        "errors": Array [],
                        "form": Object {
                          "__addField": [Function],
                          "__formData$": Object {
                            "current": Subject {
                              "callbacks": Set {
                                [Function],
                              },
                              "value": Object {
                                "description": "",
                                "documentation": "",
                                "falsePositives": Array [
                                  "",
                                ],
                                "isNew": true,
                                "name": "",
                                "references": Array [
                                  "",
                                ],
                                "riskScore": 50,
                                "severity": "low",
                                "tags": Array [],
                                "threat": Array [
                                  Object {
                                    "framework": "MITRE ATT&CK",
                                    "tactic": Object {
                                      "id": "none",
                                      "name": "none",
                                      "reference": "none",
                                    },
                                    "technique": Array [],
                                  },
                                ],
                                "timeline": Object {
                                  "id": null,
                                  "title": "Default blank timeline",
                                },
                                "timeline.id": null,
                                "timeline.title": "Default blank timeline",
                              },
                            },
                          },
                          "__options": Object {
                            "errorDisplayDelay": 500,
                            "stripEmptyFields": false,
                          },
                          "__readFieldConfigFromSchema": [Function],
                          "__removeField": [Function],
                          "__updateFormDataAt": [Function],
                          "__validateFields": [Function],
                          "getErrors": [Function],
                          "getFieldDefaultValue": [Function],
                          "getFields": [Function],
                          "getFormData": [Function],
                          "isSubmitted": false,
                          "isSubmitting": false,
                          "isValid": undefined,
                          "reset": [Function],
                          "setFieldErrors": [Function],
                          "setFieldValue": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                        },
                        "getErrorsMessages": [Function],
                        "helpText": "",
                        "isChangingValue": false,
                        "isPristine": false,
                        "isValidated": false,
                        "isValidating": false,
                        "label": "Name",
                        "labelAppend": "",
                        "onChange": [Function],
                        "path": "name",
                        "reset": [Function],
                        "setErrors": [Function],
                        "setValue": [Function],
                        "type": "text",
                        "validate": [Function],
                        "value": "",
                      }
                    }
                    idAria="detectionEngineStepAboutRuleName"
                  >
                    <EuiFormRow
                      data-test-subj="detectionEngineStepAboutRuleName"
                      describedByIds={
                        Array [
                          "detectionEngineStepAboutRuleName",
                        ]
                      }
                      display="row"
                      error={null}
                      fullWidth={true}
                      hasChildLabel={true}
                      hasEmptyLabelSpace={false}
                      helpText=""
                      isInvalid={false}
                      label="Name"
                      labelType="label"
                    >
                      <div
                        className="euiFormRow euiFormRow--fullWidth"
                        data-test-subj="detectionEngineStepAboutRuleName"
                        id="u7m0wjci-row"
                      >
                        <div
                          className="euiFormRow__labelWrapper"
                        >
                          <EuiFormLabel
                            aria-invalid={false}
                            className="euiFormRow__label"
                            htmlFor="u7m0wjci"
                            isFocused={false}
                            isInvalid={false}
                            type="label"
                          >
                            <label
                              aria-invalid={false}
                              className="euiFormLabel euiFormRow__label"
                              htmlFor="u7m0wjci"
                            >
                              Name
                            </label>
                          </EuiFormLabel>
                        </div>
                        <div
                          className="euiFormRow__fieldWrapper"
                        >
                          <EuiFieldText
                            aria-describedby="detectionEngineStepAboutRuleName"
                            data-test-subj="input"
                            disabled={true}
                            fullWidth={false}
                            id="u7m0wjci"
                            isInvalid={false}
                            isLoading={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            value=""
                          >
                            <EuiFormControlLayout
                              fullWidth={false}
                              inputId="u7m0wjci"
                              isLoading={false}
                            >
                              <div
                                className="euiFormControlLayout"
                              >
                                <div
                                  className="euiFormControlLayout__childrenWrapper"
                                >
                                  <EuiValidatableControl
                                    isInvalid={false}
                                  >
                                    <input
                                      aria-describedby="detectionEngineStepAboutRuleName"
                                      className="euiFieldText"
                                      data-test-subj="input"
                                      disabled={true}
                                      id="u7m0wjci"
                                      onBlur={[Function]}
                                      onChange={[Function]}
                                      onFocus={[Function]}
                                      type="text"
                                      value=""
                                    />
                                  </EuiValidatableControl>
                                  <EuiFormControlLayoutIcons
                                    isLoading={false}
                                  />
                                </div>
                              </div>
                            </EuiFormControlLayout>
                          </EuiFieldText>
                        </div>
                      </div>
                    </EuiFormRow>
                  </TextField>
                </Component>
              </Component>
              <Component
                componentProps={
                  Object {
                    "data-test-subj": "detectionEngineStepAboutRuleDescription",
                    "euiFieldProps": Object {
                      "disabled": true,
                    },
                    "idAria": "detectionEngineStepAboutRuleDescription",
                  }
                }
                path="description"
              >
                <Component
                  component={[Function]}
                  componentProps={
                    Object {
                      "data-test-subj": "detectionEngineStepAboutRuleDescription",
                      "euiFieldProps": Object {
                        "disabled": true,
                      },
                      "idAria": "detectionEngineStepAboutRuleDescription",
                    }
                  }
                  path="description"
                >
                  <TextAreaField
                    data-test-subj="detectionEngineStepAboutRuleDescription"
                    euiFieldProps={
                      Object {
                        "disabled": true,
                      }
                    }
                    field={
                      Object {
                        "__serializeOutput": [Function],
                        "clearErrors": [Function],
                        "errors": Array [],
                        "form": Object {
                          "__addField": [Function],
                          "__formData$": Object {
                            "current": Subject {
                              "callbacks": Set {
                                [Function],
                              },
                              "value": Object {
                                "description": "",
                                "documentation": "",
                                "falsePositives": Array [
                                  "",
                                ],
                                "isNew": true,
                                "name": "",
                                "references": Array [
                                  "",
                                ],
                                "riskScore": 50,
                                "severity": "low",
                                "tags": Array [],
                                "threat": Array [
                                  Object {
                                    "framework": "MITRE ATT&CK",
                                    "tactic": Object {
                                      "id": "none",
                                      "name": "none",
                                      "reference": "none",
                                    },
                                    "technique": Array [],
                                  },
                                ],
                                "timeline": Object {
                                  "id": null,
                                  "title": "Default blank timeline",
                                },
                                "timeline.id": null,
                                "timeline.title": "Default blank timeline",
                              },
                            },
                          },
                          "__options": Object {
                            "errorDisplayDelay": 500,
                            "stripEmptyFields": false,
                          },
                          "__readFieldConfigFromSchema": [Function],
                          "__removeField": [Function],
                          "__updateFormDataAt": [Function],
                          "__validateFields": [Function],
                          "getErrors": [Function],
                          "getFieldDefaultValue": [Function],
                          "getFields": [Function],
                          "getFormData": [Function],
                          "isSubmitted": false,
                          "isSubmitting": false,
                          "isValid": undefined,
                          "reset": [Function],
                          "setFieldErrors": [Function],
                          "setFieldValue": [Function],
                          "submit": [Function],
                          "subscribe": [Function],
                        },
                        "getErrorsMessages": [Function],
                        "helpText": "",
                        "isChangingValue": false,
                        "isPristine": false,
                        "isValidated": false,
                        "isValidating": false,
                        "label": "Description",
                        "labelAppend": "",
                        "onChange": [Function],
                        "path": "description",
                        "reset": [Function],
                        "setErrors": [Function],
                        "setValue": [Function],
                        "type": "textarea",
                        "validate": [Function],
                        "value": "",
                      }
                    }
                    idAria="detectionEngineStepAboutRuleDescription"
                  >
                    <EuiFormRow
                      data-test-subj="detectionEngineStepAboutRuleDescription"
                      describedByIds={
                        Array [
                          "detectionEngineStepAboutRuleDescription",
                        ]
                      }
                      display="row"
                      error={null}
                      fullWidth={true}
                      hasChildLabel={true}
                      hasEmptyLabelSpace={false}
                      helpText=""
                      isInvalid={false}
                      label="Description"
                      labelType="label"
                    >
                      <div
                        className="euiFormRow euiFormRow--fullWidth"
                        data-test-subj="detectionEngineStepAboutRuleDescription"
                        id="uwqvjd4h-row"
                      >
                        <div
                          className="euiFormRow__labelWrapper"
                        >
                          <EuiFormLabel
                            aria-invalid={false}
                            className="euiFormRow__label"
                            htmlFor="uwqvjd4h"
                            isFocused={false}
                            isInvalid={false}
                            type="label"
                          >
                            <label
                              aria-invalid={false}
                              className="euiFormLabel euiFormRow__label"
                              htmlFor="uwqvjd4h"
                            >
                              Description
                            </label>
                          </EuiFormLabel>
                        </div>
                        <div
                          className="euiFormRow__fieldWrapper"
                        >
                          <EuiTextArea
                            aria-describedby="detectionEngineStepAboutRuleDescription"
                            data-test-subj="input"
                            disabled={true}
                            fullWidth={true}
                            id="uwqvjd4h"
                            isInvalid={false}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            value=""
                          >
                            <EuiValidatableControl
                              isInvalid={false}
                            >
                              <textarea
                                aria-describedby="detectionEngineStepAboutRuleDescription"
                                className="euiTextArea euiTextArea--resizeVertical euiTextArea--fullWidth"
                                data-test-subj="input"
                                disabled={true}
                                id="uwqvjd4h"
                                onBlur={[Function]}
                                onChange={[Function]}
                                onFocus={[Function]}
                                rows={6}
                                value=""
                              />
                            </EuiValidatableControl>
                          </EuiTextArea>
                        </div>
                      </div>
                    </EuiFormRow>
                  </TextAreaField>
                </Component>
              </Component>
              <EuiSpacer
                size="m"
              >
                <div
                  className="euiSpacer euiSpacer--m"
                />
              </EuiSpacer>
              <EuiFlexGroup>
                <div
                  className="euiFlexGroup euiFlexGroup--gutterLarge euiFlexGroup--directionRow euiFlexGroup--responsive"
                >
                  <EuiFlexItem>
                    <div
                      className="euiFlexItem"
                    >
                      <Component
                        componentProps={
                          Object {
                            "data-test-subj": "detectionEngineStepAboutRuleSeverity",
                            "euiFieldProps": Object {
                              "disabled": true,
                              "fullWidth": false,
                              "options": Array [
                                Object {
                                  "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                    color="#54b399"
                                  >
                                    Low
                                  </ForwardRef(Styled(EuiHealth))>,
                                  "value": "low",
                                },
                                Object {
                                  "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                    color="#d6bf57"
                                  >
                                    Medium
                                  </ForwardRef(Styled(EuiHealth))>,
                                  "value": "medium",
                                },
                                Object {
                                  "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                    color="#da8b45"
                                  >
                                    High
                                  </ForwardRef(Styled(EuiHealth))>,
                                  "value": "high",
                                },
                                Object {
                                  "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                    color="#e7664c"
                                  >
                                    Critical
                                  </ForwardRef(Styled(EuiHealth))>,
                                  "value": "critical",
                                },
                              ],
                            },
                            "idAria": "detectionEngineStepAboutRuleSeverity",
                          }
                        }
                        path="severity"
                      >
                        <Component
                          component={[Function]}
                          componentProps={
                            Object {
                              "data-test-subj": "detectionEngineStepAboutRuleSeverity",
                              "euiFieldProps": Object {
                                "disabled": true,
                                "fullWidth": false,
                                "options": Array [
                                  Object {
                                    "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                      color="#54b399"
                                    >
                                      Low
                                    </ForwardRef(Styled(EuiHealth))>,
                                    "value": "low",
                                  },
                                  Object {
                                    "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                      color="#d6bf57"
                                    >
                                      Medium
                                    </ForwardRef(Styled(EuiHealth))>,
                                    "value": "medium",
                                  },
                                  Object {
                                    "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                      color="#da8b45"
                                    >
                                      High
                                    </ForwardRef(Styled(EuiHealth))>,
                                    "value": "high",
                                  },
                                  Object {
                                    "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                      color="#e7664c"
                                    >
                                      Critical
                                    </ForwardRef(Styled(EuiHealth))>,
                                    "value": "critical",
                                  },
                                ],
                              },
                              "idAria": "detectionEngineStepAboutRuleSeverity",
                            }
                          }
                          path="severity"
                        >
                          <SuperSelectField
                            data-test-subj="detectionEngineStepAboutRuleSeverity"
                            euiFieldProps={
                              Object {
                                "disabled": true,
                                "fullWidth": false,
                                "options": Array [
                                  Object {
                                    "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                      color="#54b399"
                                    >
                                      Low
                                    </ForwardRef(Styled(EuiHealth))>,
                                    "value": "low",
                                  },
                                  Object {
                                    "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                      color="#d6bf57"
                                    >
                                      Medium
                                    </ForwardRef(Styled(EuiHealth))>,
                                    "value": "medium",
                                  },
                                  Object {
                                    "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                      color="#da8b45"
                                    >
                                      High
                                    </ForwardRef(Styled(EuiHealth))>,
                                    "value": "high",
                                  },
                                  Object {
                                    "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                      color="#e7664c"
                                    >
                                      Critical
                                    </ForwardRef(Styled(EuiHealth))>,
                                    "value": "critical",
                                  },
                                ],
                              }
                            }
                            field={
                              Object {
                                "__serializeOutput": [Function],
                                "clearErrors": [Function],
                                "errors": Array [],
                                "form": Object {
                                  "__addField": [Function],
                                  "__formData$": Object {
                                    "current": Subject {
                                      "callbacks": Set {
                                        [Function],
                                      },
                                      "value": Object {
                                        "description": "",
                                        "documentation": "",
                                        "falsePositives": Array [
                                          "",
                                        ],
                                        "isNew": true,
                                        "name": "",
                                        "references": Array [
                                          "",
                                        ],
                                        "riskScore": 50,
                                        "severity": "low",
                                        "tags": Array [],
                                        "threat": Array [
                                          Object {
                                            "framework": "MITRE ATT&CK",
                                            "tactic": Object {
                                              "id": "none",
                                              "name": "none",
                                              "reference": "none",
                                            },
                                            "technique": Array [],
                                          },
                                        ],
                                        "timeline": Object {
                                          "id": null,
                                          "title": "Default blank timeline",
                                        },
                                        "timeline.id": null,
                                        "timeline.title": "Default blank timeline",
                                      },
                                    },
                                  },
                                  "__options": Object {
                                    "errorDisplayDelay": 500,
                                    "stripEmptyFields": false,
                                  },
                                  "__readFieldConfigFromSchema": [Function],
                                  "__removeField": [Function],
                                  "__updateFormDataAt": [Function],
                                  "__validateFields": [Function],
                                  "getErrors": [Function],
                                  "getFieldDefaultValue": [Function],
                                  "getFields": [Function],
                                  "getFormData": [Function],
                                  "isSubmitted": false,
                                  "isSubmitting": false,
                                  "isValid": undefined,
                                  "reset": [Function],
                                  "setFieldErrors": [Function],
                                  "setFieldValue": [Function],
                                  "submit": [Function],
                                  "subscribe": [Function],
                                },
                                "getErrorsMessages": [Function],
                                "helpText": "",
                                "isChangingValue": false,
                                "isPristine": false,
                                "isValidated": false,
                                "isValidating": false,
                                "label": "Severity",
                                "labelAppend": "",
                                "onChange": [Function],
                                "path": "severity",
                                "reset": [Function],
                                "setErrors": [Function],
                                "setValue": [Function],
                                "type": "superSelect",
                                "validate": [Function],
                                "value": "low",
                              }
                            }
                            idAria="detectionEngineStepAboutRuleSeverity"
                          >
                            <EuiFormRow
                              data-test-subj="detectionEngineStepAboutRuleSeverity"
                              describedByIds={
                                Array [
                                  "detectionEngineStepAboutRuleSeverity",
                                ]
                              }
                              display="row"
                              error={null}
                              fullWidth={true}
                              hasChildLabel={true}
                              hasEmptyLabelSpace={false}
                              helpText=""
                              isInvalid={false}
                              label="Severity"
                              labelType="label"
                            >
                              <div
                                className="euiFormRow euiFormRow--fullWidth"
                                data-test-subj="detectionEngineStepAboutRuleSeverity"
                                id="dfjk2q15-row"
                              >
                                <div
                                  className="euiFormRow__labelWrapper"
                                >
                                  <EuiFormLabel
                                    aria-invalid={false}
                                    className="euiFormRow__label"
                                    htmlFor="dfjk2q15"
                                    isFocused={false}
                                    isInvalid={false}
                                    type="label"
                                  >
                                    <label
                                      aria-invalid={false}
                                      className="euiFormLabel euiFormRow__label"
                                      htmlFor="dfjk2q15"
                                    >
                                      Severity
                                    </label>
                                  </EuiFormLabel>
                                </div>
                                <div
                                  className="euiFormRow__fieldWrapper"
                                >
                                  <EuiSuperSelect
                                    aria-describedby="detectionEngineStepAboutRuleSeverity"
                                    compressed={false}
                                    data-test-subj="select"
                                    disabled={true}
                                    fullWidth={false}
                                    hasDividers={false}
                                    id="dfjk2q15"
                                    isInvalid={false}
                                    isLoading={false}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    options={
                                      Array [
                                        Object {
                                          "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                            color="#54b399"
                                          >
                                            Low
                                          </ForwardRef(Styled(EuiHealth))>,
                                          "value": "low",
                                        },
                                        Object {
                                          "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                            color="#d6bf57"
                                          >
                                            Medium
                                          </ForwardRef(Styled(EuiHealth))>,
                                          "value": "medium",
                                        },
                                        Object {
                                          "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                            color="#da8b45"
                                          >
                                            High
                                          </ForwardRef(Styled(EuiHealth))>,
                                          "value": "high",
                                        },
                                        Object {
                                          "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                            color="#e7664c"
                                          >
                                            Critical
                                          </ForwardRef(Styled(EuiHealth))>,
                                          "value": "critical",
                                        },
                                      ]
                                    }
                                    valueOfSelected="low"
                                  >
                                    <EuiPopover
                                      anchorPosition="downCenter"
                                      button={
                                        <EuiSuperSelectControl
                                          aria-describedby="detectionEngineStepAboutRuleSeverity"
                                          className=""
                                          compressed={false}
                                          data-test-subj="select"
                                          disabled={true}
                                          fullWidth={false}
                                          id="dfjk2q15"
                                          isInvalid={false}
                                          isLoading={false}
                                          onBlur={[Function]}
                                          onClick={[Function]}
                                          onFocus={[Function]}
                                          onKeyDown={[Function]}
                                          options={
                                            Array [
                                              Object {
                                                "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                                  color="#54b399"
                                                >
                                                  Low
                                                </ForwardRef(Styled(EuiHealth))>,
                                                "value": "low",
                                              },
                                              Object {
                                                "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                                  color="#d6bf57"
                                                >
                                                  Medium
                                                </ForwardRef(Styled(EuiHealth))>,
                                                "value": "medium",
                                              },
                                              Object {
                                                "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                                  color="#da8b45"
                                                >
                                                  High
                                                </ForwardRef(Styled(EuiHealth))>,
                                                "value": "high",
                                              },
                                              Object {
                                                "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                                  color="#e7664c"
                                                >
                                                  Critical
                                                </ForwardRef(Styled(EuiHealth))>,
                                                "value": "critical",
                                              },
                                            ]
                                          }
                                          value="low"
                                        />
                                      }
                                      className="euiSuperSelect"
                                      closePopover={[Function]}
                                      display="block"
                                      hasArrow={false}
                                      isOpen={false}
                                      ownFocus={false}
                                      panelClassName="euiSuperSelect__popoverPanel"
                                      panelPaddingSize="none"
                                      popoverRef={[Function]}
                                    >
                                      <EuiOutsideClickDetector
                                        isDisabled={true}
                                        onOutsideClick={[Function]}
                                      >
                                        <div
                                          className="euiPopover euiPopover--anchorDownCenter euiPopover--displayBlock euiSuperSelect"
                                          onKeyDown={[Function]}
                                          onMouseDown={[Function]}
                                          onMouseUp={[Function]}
                                          onTouchEnd={[Function]}
                                          onTouchStart={[Function]}
                                        >
                                          <div
                                            className="euiPopover__anchor"
                                          >
                                            <EuiSuperSelectControl
                                              aria-describedby="detectionEngineStepAboutRuleSeverity"
                                              className=""
                                              compressed={false}
                                              data-test-subj="select"
                                              disabled={true}
                                              fullWidth={false}
                                              id="dfjk2q15"
                                              isInvalid={false}
                                              isLoading={false}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              options={
                                                Array [
                                                  Object {
                                                    "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                                      color="#54b399"
                                                    >
                                                      Low
                                                    </ForwardRef(Styled(EuiHealth))>,
                                                    "value": "low",
                                                  },
                                                  Object {
                                                    "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                                      color="#d6bf57"
                                                    >
                                                      Medium
                                                    </ForwardRef(Styled(EuiHealth))>,
                                                    "value": "medium",
                                                  },
                                                  Object {
                                                    "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                                      color="#da8b45"
                                                    >
                                                      High
                                                    </ForwardRef(Styled(EuiHealth))>,
                                                    "value": "high",
                                                  },
                                                  Object {
                                                    "inputDisplay": <ForwardRef(Styled(EuiHealth))
                                                      color="#e7664c"
                                                    >
                                                      Critical
                                                    </ForwardRef(Styled(EuiHealth))>,
                                                    "value": "critical",
                                                  },
                                                ]
                                              }
                                              value="low"
                                            >
                                              <input
                                                id="dfjk2q15"
                                                type="hidden"
                                                value="low"
                                              />
                                              <EuiFormControlLayout
                                                compressed={false}
                                                fullWidth={false}
                                                icon={
                                                  Object {
                                                    "side": "right",
                                                    "type": "arrowDown",
                                                  }
                                                }
                                                isLoading={false}
                                              >
                                                <div
                                                  className="euiFormControlLayout"
                                                >
                                                  <div
                                                    className="euiFormControlLayout__childrenWrapper"
                                                  >
                                                    <EuiScreenReaderOnly>
                                                      <span
                                                        className="euiScreenReaderOnly"
                                                        id="gnhl6kqa"
                                                      >
                                                        <EuiI18n
                                                          default="Select an option: {selectedValue}, is selected"
                                                          token="euiSuperSelectControl.selectAnOption"
                                                          values={
                                                            Object {
                                                              "selectedValue": <ForwardRef(Styled(EuiHealth))
                                                                color="#54b399"
                                                              >
                                                                Low
                                                              </ForwardRef(Styled(EuiHealth))>,
                                                            }
                                                          }
                                                        >
                                                          <Component
                                                            selectedValue={
                                                              <ForwardRef(Styled(EuiHealth))
                                                                color="#54b399"
                                                              >
                                                                Low
                                                              </ForwardRef(Styled(EuiHealth))>
                                                            }
                                                          >
                                                            Select an option: 
                                                            <Styled(EuiHealth)
                                                              color="#54b399"
                                                              key="1"
                                                            >
                                                              <EuiHealth
                                                                className="c1"
                                                                color="#54b399"
                                                              >
                                                                <div
                                                                  className="euiHealth c1"
                                                                >
                                                                  <EuiFlexGroup
                                                                    alignItems="center"
                                                                    gutterSize="xs"
                                                                    responsive={false}
                                                                  >
                                                                    <div
                                                                      className="euiFlexGroup euiFlexGroup--gutterExtraSmall euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow"
                                                                    >
                                                                      <EuiFlexItem
                                                                        grow={false}
                                                                      >
                                                                        <div
                                                                          className="euiFlexItem euiFlexItem--flexGrowZero"
                                                                        >
                                                                          <EuiIcon
                                                                            color="#54b399"
                                                                            type="dot"
                                                                          >
                                                                            <EuiIconEmpty
                                                                              aria-hidden={true}
                                                                              className="euiIcon euiIcon--medium euiIcon-isLoading"
                                                                              focusable="false"
                                                                              role="img"
                                                                              style={
                                                                                Object {
                                                                                  "fill": "#54b399",
                                                                                }
                                                                              }
                                                                            >
                                                                              <svg
                                                                                aria-hidden={true}
                                                                                className="euiIcon euiIcon--medium euiIcon-isLoading"
                                                                                focusable="false"
                                                                                height={16}
                                                                                role="img"
                                                                                style={
                                                                                  Object {
                                                                                    "fill": "#54b399",
                                                                                  }
                                                                                }
                                                                                viewBox="0 0 16 16"
                                                                                width={16}
                                                                                xmlns="http://www.w3.org/2000/svg"
                                                                              />
                                                                            </EuiIconEmpty>
                                                                          </EuiIcon>
                                                                        </div>
                                                                      </EuiFlexItem>
                                                                      <EuiFlexItem
                                                                        grow={false}
                                                                      >
                                                                        <div
                                                                          className="euiFlexItem euiFlexItem--flexGrowZero"
                                                                        >
                                                                          Low
                                                                        </div>
                                                                      </EuiFlexItem>
                                                                    </div>
                                                                  </EuiFlexGroup>
                                                                </div>
                                                              </EuiHealth>
                                                            </Styled(EuiHealth)>
                                                            , is selected
                                                          </Component>
                                                        </EuiI18n>
                                                      </span>
                                                    </EuiScreenReaderOnly>
                                                    <button
                                                      aria-describedby="detectionEngineStepAboutRuleSeverity"
                                                      aria-haspopup="true"
                                                      aria-labelledby="dfjk2q15 gnhl6kqa"
                                                      aria-selected={true}
                                                      className="euiSuperSelectControl"
                                                      data-test-subj="select"
                                                      disabled={true}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      role="option"
                                                      type="button"
                                                    >
                                                      <Styled(EuiHealth)
                                                        color="#54b399"
                                                      >
                                                        <EuiHealth
                                                          className="c1"
                                                          color="#54b399"
                                                        >
                                                          <div
                                                            className="euiHealth c1"
                                                          >
                                                            <EuiFlexGroup
                                                              alignItems="center"
                                                              gutterSize="xs"
                                                              responsive={false}
                                                            >
                                                              <div
                                                                className="euiFlexGroup euiFlexGroup--gutterExtraSmall euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow"
                                                              >
                                                                <EuiFlexItem
                                                                  grow={false}
                                                                >
                                                                  <div
                                                                    className="euiFlexItem euiFlexItem--flexGrowZero"
                                                                  >
                                                                    <EuiIcon
                                                                      color="#54b399"
                                                                      type="dot"
                                                                    >
                                                                      <EuiIconEmpty
                                                                        aria-hidden={true}
                                                                        className="euiIcon euiIcon--medium euiIcon-isLoading"
                                                                        focusable="false"
                                                                        role="img"
                                                                        style={
                                                                          Object {
                                                                            "fill": "#54b399",
                                                                          }
                                                                        }
                                                                      >
                                                                        <svg
                                                                          aria-hidden={true}
                                                                          className="euiIcon euiIcon--medium euiIcon-isLoading"
                                                                          focusable="false"
                                                                          height={16}
                                                                          role="img"
                                                                          style={
                                                                            Object {
                                                                              "fill": "#54b399",
                                                                            }
                                                                          }
                                                                          viewBox="0 0 16 16"
                                                                          width={16}
                                                                          xmlns="http://www.w3.org/2000/svg"
                                                                        />
                                                                      </EuiIconEmpty>
                                                                    </EuiIcon>
                                                                  </div>
                                                                </EuiFlexItem>
                                                                <EuiFlexItem
                                                                  grow={false}
                                                                >
                                                                  <div
                                                                    className="euiFlexItem euiFlexItem--flexGrowZero"
                                                                  >
                                                                    Low
                                                                  </div>
                                                                </EuiFlexItem>
                                                              </div>
                                                            </EuiFlexGroup>
                                                          </div>
                                                        </EuiHealth>
                                                      </Styled(EuiHealth)>
                                                    </button>
                                                    <EuiFormControlLayoutIcons
                                                      icon={
                                                        Object {
                                                          "side": "right",
                                                          "type": "arrowDown",
                                                        }
                                                      }
                                                      isLoading={false}
                                                    >
                                                      <div
                                                        className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                                      >
                                                        <EuiFormControlLayoutCustomIcon
                                                          type="arrowDown"
                                                        >
                                                          <span
                                                            className="euiFormControlLayoutCustomIcon"
                                                          >
                                                            <EuiIcon
                                                              aria-hidden="true"
                                                              className="euiFormControlLayoutCustomIcon__icon"
                                                              type="arrowDown"
                                                            >
                                                              <EuiIconEmpty
                                                                aria-hidden={true}
                                                                className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                focusable="false"
                                                                role="img"
                                                                style={null}
                                                              >
                                                                <svg
                                                                  aria-hidden={true}
                                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                  focusable="false"
                                                                  height={16}
                                                                  role="img"
                                                                  style={null}
                                                                  viewBox="0 0 16 16"
                                                                  width={16}
                                                                  xmlns="http://www.w3.org/2000/svg"
                                                                />
                                                              </EuiIconEmpty>
                                                            </EuiIcon>
                                                          </span>
                                                        </EuiFormControlLayoutCustomIcon>
                                                      </div>
                                                    </EuiFormControlLayoutIcons>
                                                  </div>
                                                </div>
                                              </EuiFormControlLayout>
                                            </EuiSuperSelectControl>
                                          </div>
                                        </div>
                                      </EuiOutsideClickDetector>
                                    </EuiPopover>
                                  </EuiSuperSelect>
                                </div>
                              </div>
                            </EuiFormRow>
                          </SuperSelectField>
                        </Component>
                      </Component>
                    </div>
                  </EuiFlexItem>
                  <EuiFlexItem>
                    <div
                      className="euiFlexItem"
                    >
                      <Component
                        componentProps={
                          Object {
                            "data-test-subj": "detectionEngineStepAboutRuleRiskScore",
                            "euiFieldProps": Object {
                              "disabled": true,
                              "fullWidth": false,
                              "max": 100,
                              "min": 0,
                              "showTicks": true,
                              "tickInterval": 25,
                            },
                            "idAria": "detectionEngineStepAboutRuleRiskScore",
                          }
                        }
                        path="riskScore"
                      >
                        <Component
                          component={[Function]}
                          componentProps={
                            Object {
                              "data-test-subj": "detectionEngineStepAboutRuleRiskScore",
                              "euiFieldProps": Object {
                                "disabled": true,
                                "fullWidth": false,
                                "max": 100,
                                "min": 0,
                                "showTicks": true,
                                "tickInterval": 25,
                              },
                              "idAria": "detectionEngineStepAboutRuleRiskScore",
                            }
                          }
                          path="riskScore"
                        >
                          <RangeField
                            data-test-subj="detectionEngineStepAboutRuleRiskScore"
                            euiFieldProps={
                              Object {
                                "disabled": true,
                                "fullWidth": false,
                                "max": 100,
                                "min": 0,
                                "showTicks": true,
                                "tickInterval": 25,
                              }
                            }
                            field={
                              Object {
                                "__serializeOutput": [Function],
                                "clearErrors": [Function],
                                "errors": Array [],
                                "form": Object {
                                  "__addField": [Function],
                                  "__formData$": Object {
                                    "current": Subject {
                                      "callbacks": Set {
                                        [Function],
                                      },
                                      "value": Object {
                                        "description": "",
                                        "documentation": "",
                                        "falsePositives": Array [
                                          "",
                                        ],
                                        "isNew": true,
                                        "name": "",
                                        "references": Array [
                                          "",
                                        ],
                                        "riskScore": 50,
                                        "severity": "low",
                                        "tags": Array [],
                                        "threat": Array [
                                          Object {
                                            "framework": "MITRE ATT&CK",
                                            "tactic": Object {
                                              "id": "none",
                                              "name": "none",
                                              "reference": "none",
                                            },
                                            "technique": Array [],
                                          },
                                        ],
                                        "timeline": Object {
                                          "id": null,
                                          "title": "Default blank timeline",
                                        },
                                        "timeline.id": null,
                                        "timeline.title": "Default blank timeline",
                                      },
                                    },
                                  },
                                  "__options": Object {
                                    "errorDisplayDelay": 500,
                                    "stripEmptyFields": false,
                                  },
                                  "__readFieldConfigFromSchema": [Function],
                                  "__removeField": [Function],
                                  "__updateFormDataAt": [Function],
                                  "__validateFields": [Function],
                                  "getErrors": [Function],
                                  "getFieldDefaultValue": [Function],
                                  "getFields": [Function],
                                  "getFormData": [Function],
                                  "isSubmitted": false,
                                  "isSubmitting": false,
                                  "isValid": undefined,
                                  "reset": [Function],
                                  "setFieldErrors": [Function],
                                  "setFieldValue": [Function],
                                  "submit": [Function],
                                  "subscribe": [Function],
                                },
                                "getErrorsMessages": [Function],
                                "helpText": "",
                                "isChangingValue": false,
                                "isPristine": false,
                                "isValidated": false,
                                "isValidating": false,
                                "label": "Risk score",
                                "labelAppend": "",
                                "onChange": [Function],
                                "path": "riskScore",
                                "reset": [Function],
                                "setErrors": [Function],
                                "setValue": [Function],
                                "type": "range",
                                "validate": [Function],
                                "value": 50,
                              }
                            }
                            idAria="detectionEngineStepAboutRuleRiskScore"
                          >
                            <EuiFormRow
                              data-test-subj="detectionEngineStepAboutRuleRiskScore"
                              describedByIds={
                                Array [
                                  "detectionEngineStepAboutRuleRiskScore",
                                ]
                              }
                              display="row"
                              error={null}
                              fullWidth={true}
                              hasChildLabel={true}
                              hasEmptyLabelSpace={false}
                              helpText=""
                              isInvalid={false}
                              label="Risk score"
                              labelType="label"
                            >
                              <div
                                className="euiFormRow euiFormRow--fullWidth"
                                data-test-subj="detectionEngineStepAboutRuleRiskScore"
                                id="dmpp4uzp-row"
                              >
                                <div
                                  className="euiFormRow__labelWrapper"
                                >
                                  <EuiFormLabel
                                    aria-invalid={false}
                                    className="euiFormRow__label"
                                    htmlFor="dmpp4uzp"
                                    isFocused={false}
                                    isInvalid={false}
                                    type="label"
                                  >
                                    <label
                                      aria-invalid={false}
                                      className="euiFormLabel euiFormRow__label"
                                      htmlFor="dmpp4uzp"
                                    >
                                      Risk score
                                    </label>
                                  </EuiFormLabel>
                                </div>
                                <div
                                  className="euiFormRow__fieldWrapper"
                                >
                                  <EuiRange
                                    aria-describedby="detectionEngineStepAboutRuleRiskScore"
                                    compressed={false}
                                    data-test-subj="range"
                                    disabled={true}
                                    fullWidth={false}
                                    id="dmpp4uzp"
                                    isLoading={false}
                                    levels={Array []}
                                    max={100}
                                    min={0}
                                    onBlur={[Function]}
                                    onChange={[Function]}
                                    onFocus={[Function]}
                                    showInput={true}
                                    showLabels={false}
                                    showRange={true}
                                    showTicks={true}
                                    showValue={false}
                                    step={1}
                                    tickInterval={25}
                                    value={50}
                                  >
                                    <ForwardRef
                                      className="euiRange"
                                      compressed={false}
                                      fullWidth={false}
                                    >
                                      <div
                                        className="euiRangeWrapper euiRange"
                                      >
                                        <EuiRangeTrack
                                          compressed={false}
                                          disabled={true}
                                          levels={Array []}
                                          max={100}
                                          min={0}
                                          onChange={[Function]}
                                          showTicks={true}
                                          step={1}
                                          tickInterval={25}
                                          value={50}
                                        >
                                          <div
                                            className="euiRangeTrack euiRangeTrack--disabled"
                                            style={
                                              Object {
                                                "marginRight": "0.6em",
                                              }
                                            }
                                          >
                                            <EuiRangeTicks
                                              compressed={false}
                                              disabled={true}
                                              interval={25}
                                              max={100}
                                              min={0}
                                              onChange={[Function]}
                                              tickSequence={
                                                Array [
                                                  0,
                                                  25,
                                                  50,
                                                  75,
                                                  100,
                                                ]
                                              }
                                              value={50}
                                            >
                                              <div
                                                className="euiRangeTicks"
                                                style={
                                                  Object {
                                                    "left": 0,
                                                    "margin": "0 -10%",
                                                    "right": 0,
                                                  }
                                                }
                                              >
                                                <EuiTickValue
                                                  compressed={false}
                                                  disabled={true}
                                                  interval={25}
                                                  key="0"
                                                  max={100}
                                                  min={0}
                                                  onChange={[Function]}
                                                  percentageWidth={20}
                                                  tickSequence={
                                                    Array [
                                                      0,
                                                      25,
                                                      50,
                                                      75,
                                                      100,
                                                    ]
                                                  }
                                                  tickValue={0}
                                                  value={50}
                                                >
                                                  <button
                                                    className="euiRangeTick"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "width": "20%",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    title="0"
                                                    type="button"
                                                    value={0}
                                                  >
                                                    0
                                                  </button>
                                                </EuiTickValue>
                                                <EuiTickValue
                                                  compressed={false}
                                                  disabled={true}
                                                  interval={25}
                                                  key="25"
                                                  max={100}
                                                  min={0}
                                                  onChange={[Function]}
                                                  percentageWidth={20}
                                                  tickSequence={
                                                    Array [
                                                      0,
                                                      25,
                                                      50,
                                                      75,
                                                      100,
                                                    ]
                                                  }
                                                  tickValue={25}
                                                  value={50}
                                                >
                                                  <button
                                                    className="euiRangeTick"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "width": "20%",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    title="25"
                                                    type="button"
                                                    value={25}
                                                  >
                                                    25
                                                  </button>
                                                </EuiTickValue>
                                                <EuiTickValue
                                                  compressed={false}
                                                  disabled={true}
                                                  interval={25}
                                                  key="50"
                                                  max={100}
                                                  min={0}
                                                  onChange={[Function]}
                                                  percentageWidth={20}
                                                  tickSequence={
                                                    Array [
                                                      0,
                                                      25,
                                                      50,
                                                      75,
                                                      100,
                                                    ]
                                                  }
                                                  tickValue={50}
                                                  value={50}
                                                >
                                                  <button
                                                    className="euiRangeTick euiRangeTick--selected"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "width": "20%",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    title="50"
                                                    type="button"
                                                    value={50}
                                                  >
                                                    50
                                                  </button>
                                                </EuiTickValue>
                                                <EuiTickValue
                                                  compressed={false}
                                                  disabled={true}
                                                  interval={25}
                                                  key="75"
                                                  max={100}
                                                  min={0}
                                                  onChange={[Function]}
                                                  percentageWidth={20}
                                                  tickSequence={
                                                    Array [
                                                      0,
                                                      25,
                                                      50,
                                                      75,
                                                      100,
                                                    ]
                                                  }
                                                  tickValue={75}
                                                  value={50}
                                                >
                                                  <button
                                                    className="euiRangeTick"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "width": "20%",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    title="75"
                                                    type="button"
                                                    value={75}
                                                  >
                                                    75
                                                  </button>
                                                </EuiTickValue>
                                                <EuiTickValue
                                                  compressed={false}
                                                  disabled={true}
                                                  interval={25}
                                                  key="100"
                                                  max={100}
                                                  min={0}
                                                  onChange={[Function]}
                                                  percentageWidth={20}
                                                  tickSequence={
                                                    Array [
                                                      0,
                                                      25,
                                                      50,
                                                      75,
                                                      100,
                                                    ]
                                                  }
                                                  tickValue={100}
                                                  value={50}
                                                >
                                                  <button
                                                    className="euiRangeTick"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    style={
                                                      Object {
                                                        "width": "20%",
                                                      }
                                                    }
                                                    tabIndex={-1}
                                                    title="100"
                                                    type="button"
                                                    value={100}
                                                  >
                                                    100
                                                  </button>
                                                </EuiTickValue>
                                              </div>
                                            </EuiRangeTicks>
                                            <EuiRangeHighlight
                                              compressed={false}
                                              lowerValue={0}
                                              max={100}
                                              min={0}
                                              showTicks={true}
                                              upperValue={50}
                                            >
                                              <div
                                                className="euiRangeHighlight euiRangeHighlight--hasTicks"
                                              >
                                                <div
                                                  className="euiRangeHighlight__progress"
                                                  style={
                                                    Object {
                                                      "background": undefined,
                                                      "marginLeft": "0%",
                                                      "width": "50%",
                                                    }
                                                  }
                                                />
                                              </div>
                                            </EuiRangeHighlight>
                                            <ForwardRef
                                              aria-describedby="detectionEngineStepAboutRuleRiskScore"
                                              compressed={false}
                                              data-test-subj="range"
                                              disabled={true}
                                              max={100}
                                              min={0}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              showRange={true}
                                              showTicks={true}
                                              step={1}
                                              tabIndex={-1}
                                              value={50}
                                            >
                                              <input
                                                aria-describedby="detectionEngineStepAboutRuleRiskScore"
                                                className="euiRangeSlider euiRangeSlider--hasTicks euiRangeSlider--hasRange"
                                                data-test-subj="range"
                                                disabled={true}
                                                max={100}
                                                min={0}
                                                onBlur={[Function]}
                                                onChange={[Function]}
                                                step={1}
                                                tabIndex={-1}
                                                type="range"
                                                value={50}
                                              />
                                            </ForwardRef>
                                          </div>
                                        </EuiRangeTrack>
                                        <div
                                          className="euiRange__horizontalSpacer"
                                        />
                                        <EuiRangeInput
                                          aria-describedby="detectionEngineStepAboutRuleRiskScore"
                                          autoSize={true}
                                          compressed={false}
                                          data-test-subj="range"
                                          digitTolerance={3}
                                          disabled={true}
                                          fullWidth={false}
                                          id="dmpp4uzp"
                                          isLoading={false}
                                          max={100}
                                          min={0}
                                          onBlur={[Function]}
                                          onChange={[Function]}
                                          onFocus={[Function]}
                                          step={1}
                                          value={50}
                                        >
                                          <EuiFieldNumber
                                            aria-describedby="detectionEngineStepAboutRuleRiskScore"
                                            className="euiRangeInput euiRangeInput--max"
                                            compressed={false}
                                            data-test-subj="range"
                                            disabled={true}
                                            fullWidth={false}
                                            id="dmpp4uzp"
                                            isLoading={false}
                                            max={100}
                                            min={0}
                                            onBlur={[Function]}
                                            onChange={[Function]}
                                            onFocus={[Function]}
                                            step={1}
                                            style={
                                              Object {
                                                "width": "4.4em",
                                              }
                                            }
                                            value={50}
                                          >
                                            <EuiFormControlLayout
                                              compressed={false}
                                              fullWidth={false}
                                              inputId="dmpp4uzp"
                                              isLoading={false}
                                            >
                                              <div
                                                className="euiFormControlLayout"
                                              >
                                                <div
                                                  className="euiFormControlLayout__childrenWrapper"
                                                >
                                                  <EuiValidatableControl>
                                                    <input
                                                      aria-describedby="detectionEngineStepAboutRuleRiskScore"
                                                      className="euiFieldNumber euiRangeInput euiRangeInput--max"
                                                      data-test-subj="range"
                                                      disabled={true}
                                                      id="dmpp4uzp"
                                                      max={100}
                                                      min={0}
                                                      onBlur={[Function]}
                                                      onChange={[Function]}
                                                      onFocus={[Function]}
                                                      step={1}
                                                      style={
                                                        Object {
                                                          "width": "4.4em",
                                                        }
                                                      }
                                                      type="number"
                                                      value={50}
                                                    />
                                                  </EuiValidatableControl>
                                                  <EuiFormControlLayoutIcons
                                                    isLoading={false}
                                                  />
                                                </div>
                                              </div>
                                            </EuiFormControlLayout>
                                          </EuiFieldNumber>
                                        </EuiRangeInput>
                                      </div>
                                    </ForwardRef>
                                  </EuiRange>
                                </div>
                              </div>
                            </EuiFormRow>
                          </RangeField>
                        </Component>
                      </Component>
                    </div>
                  </EuiFlexItem>
                </div>
              </EuiFlexGroup>
              <TagContainer>
                <div
                  className="c2"
                >
                  <Component
                    componentProps={
                      Object {
                        "data-test-subj": "detectionEngineStepAboutRuleTags",
                        "euiFieldProps": Object {
                          "fullWidth": true,
                          "isDisabled": true,
                          "placeholder": "",
                        },
                        "idAria": "detectionEngineStepAboutRuleTags",
                      }
                    }
                    path="tags"
                  >
                    <Component
                      component={[Function]}
                      componentProps={
                        Object {
                          "data-test-subj": "detectionEngineStepAboutRuleTags",
                          "euiFieldProps": Object {
                            "fullWidth": true,
                            "isDisabled": true,
                            "placeholder": "",
                          },
                          "idAria": "detectionEngineStepAboutRuleTags",
                        }
                      }
                      path="tags"
                    >
                      <ComboBoxField
                        data-test-subj="detectionEngineStepAboutRuleTags"
                        euiFieldProps={
                          Object {
                            "fullWidth": true,
                            "isDisabled": true,
                            "placeholder": "",
                          }
                        }
                        field={
                          Object {
                            "__serializeOutput": [Function],
                            "clearErrors": [Function],
                            "errors": Array [],
                            "form": Object {
                              "__addField": [Function],
                              "__formData$": Object {
                                "current": Subject {
                                  "callbacks": Set {
                                    [Function],
                                  },
                                  "value": Object {
                                    "description": "",
                                    "documentation": "",
                                    "falsePositives": Array [
                                      "",
                                    ],
                                    "isNew": true,
                                    "name": "",
                                    "references": Array [
                                      "",
                                    ],
                                    "riskScore": 50,
                                    "severity": "low",
                                    "tags": Array [],
                                    "threat": Array [
                                      Object {
                                        "framework": "MITRE ATT&CK",
                                        "tactic": Object {
                                          "id": "none",
                                          "name": "none",
                                          "reference": "none",
                                        },
                                        "technique": Array [],
                                      },
                                    ],
                                    "timeline": Object {
                                      "id": null,
                                      "title": "Default blank timeline",
                                    },
                                    "timeline.id": null,
                                    "timeline.title": "Default blank timeline",
                                  },
                                },
                              },
                              "__options": Object {
                                "errorDisplayDelay": 500,
                                "stripEmptyFields": false,
                              },
                              "__readFieldConfigFromSchema": [Function],
                              "__removeField": [Function],
                              "__updateFormDataAt": [Function],
                              "__validateFields": [Function],
                              "getErrors": [Function],
                              "getFieldDefaultValue": [Function],
                              "getFields": [Function],
                              "getFormData": [Function],
                              "isSubmitted": false,
                              "isSubmitting": false,
                              "isValid": undefined,
                              "reset": [Function],
                              "setFieldErrors": [Function],
                              "setFieldValue": [Function],
                              "submit": [Function],
                              "subscribe": [Function],
                            },
                            "getErrorsMessages": [Function],
                            "helpText": "Type one or more custom identifying tags for this rule. Press enter after each tag to begin a new one.",
                            "isChangingValue": false,
                            "isPristine": false,
                            "isValidated": false,
                            "isValidating": false,
                            "label": "Tags",
                            "labelAppend": <EuiText
                              color="subdued"
                              size="xs"
                            >
                              Optional
                            </EuiText>,
                            "onChange": [Function],
                            "path": "tags",
                            "reset": [Function],
                            "setErrors": [Function],
                            "setValue": [Function],
                            "type": "comboBox",
                            "validate": [Function],
                            "value": Array [],
                          }
                        }
                        idAria="detectionEngineStepAboutRuleTags"
                      >
                        <EuiFormRow
                          data-test-subj="detectionEngineStepAboutRuleTags"
                          describedByIds={
                            Array [
                              "detectionEngineStepAboutRuleTags",
                            ]
                          }
                          display="row"
                          error={null}
                          fullWidth={true}
                          hasChildLabel={true}
                          hasEmptyLabelSpace={false}
                          helpText="Type one or more custom identifying tags for this rule. Press enter after each tag to begin a new one."
                          isInvalid={false}
                          label="Tags"
                          labelAppend={
                            <EuiText
                              color="subdued"
                              size="xs"
                            >
                              Optional
                            </EuiText>
                          }
                          labelType="label"
                        >
                          <div
                            className="euiFormRow euiFormRow--fullWidth"
                            data-test-subj="detectionEngineStepAboutRuleTags"
                            id="tp826r0m-row"
                          >
                            <div
                              className="euiFormRow__labelWrapper"
                            >
                              <EuiFormLabel
                                aria-invalid={false}
                                className="euiFormRow__label"
                                htmlFor="tp826r0m"
                                isFocused={false}
                                isInvalid={false}
                                type="label"
                              >
                                <label
                                  aria-invalid={false}
                                  className="euiFormLabel euiFormRow__label"
                                  htmlFor="tp826r0m"
                                >
                                  Tags
                                </label>
                              </EuiFormLabel>
                               
                              <EuiText
                                color="subdued"
                                size="xs"
                              >
                                <div
                                  className="euiText euiText--extraSmall"
                                >
                                  <EuiTextColor
                                    color="subdued"
                                    component="div"
                                  >
                                    <div
                                      className="euiTextColor euiTextColor--subdued"
                                    >
                                      Optional
                                    </div>
                                  </EuiTextColor>
                                </div>
                              </EuiText>
                            </div>
                            <div
                              className="euiFormRow__fieldWrapper"
                            >
                              <EuiComboBox
                                aria-describedby="detectionEngineStepAboutRuleTags tp826r0m-help"
                                compressed={false}
                                data-test-subj="input"
                                fullWidth={true}
                                id="tp826r0m"
                                isClearable={true}
                                isDisabled={true}
                                noSuggestions={true}
                                onBlur={[Function]}
                                onChange={[Function]}
                                onCreateOption={[Function]}
                                onFocus={[Function]}
                                onSearchChange={[Function]}
                                options={Array []}
                                placeholder=""
                                selectedOptions={Array []}
                                singleSelection={false}
                              >
                                <div
                                  aria-describedby="detectionEngineStepAboutRuleTags tp826r0m-help"
                                  aria-expanded={false}
                                  aria-haspopup="listbox"
                                  className="euiComboBox euiComboBox-isDisabled euiComboBox--fullWidth"
                                  data-test-subj="input"
                                  onFocus={[Function]}
                                  onKeyDown={[Function]}
                                  role="combobox"
                                >
                                  <EuiComboBoxInput
                                    autoSizeInputRef={[Function]}
                                    compressed={false}
                                    focusedOptionId={null}
                                    fullWidth={true}
                                    hasSelectedOptions={false}
                                    id="tp826r0m"
                                    inputRef={[Function]}
                                    isDisabled={true}
                                    isListOpen={false}
                                    noIcon={true}
                                    onChange={[Function]}
                                    onClick={[Function]}
                                    onCloseListClick={[Function]}
                                    onFocus={[Function]}
                                    onOpenListClick={[Function]}
                                    onRemoveOption={[Function]}
                                    placeholder=""
                                    rootId={[Function]}
                                    searchValue=""
                                    selectedOptions={Array []}
                                    singleSelection={false}
                                    toggleButtonRef={[Function]}
                                    updatePosition={[Function]}
                                    value=""
                                  >
                                    <EuiFormControlLayout
                                      compressed={false}
                                      fullWidth={true}
                                    >
                                      <div
                                        className="euiFormControlLayout euiFormControlLayout--fullWidth"
                                      >
                                        <div
                                          className="euiFormControlLayout__childrenWrapper"
                                        >
                                          <div
                                            className="euiComboBox__inputWrap euiComboBox__inputWrap--fullWidth"
                                            data-test-subj="comboBoxInput"
                                            onClick={[Function]}
                                            tabIndex="-1"
                                          >
                                            <AutosizeInput
                                              aria-activedescendant={null}
                                              aria-controls={null}
                                              className="euiComboBox__input"
                                              data-test-subj="comboBoxSearchInput"
                                              disabled={true}
                                              id="tp826r0m"
                                              injectStyles={true}
                                              inputRef={[Function]}
                                              minWidth={1}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              role="textbox"
                                              style={
                                                Object {
                                                  "fontSize": 14,
                                                }
                                              }
                                              value=""
                                            >
                                              <div
                                                className="euiComboBox__input"
                                                style={
                                                  Object {
                                                    "display": "inline-block",
                                                    "fontSize": 14,
                                                  }
                                                }
                                              >
                                                <input
                                                  aria-activedescendant={null}
                                                  aria-controls={null}
                                                  data-test-subj="comboBoxSearchInput"
                                                  disabled={true}
                                                  id="tp826r0m"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  onFocus={[Function]}
                                                  role="textbox"
                                                  style={
                                                    Object {
                                                      "boxSizing": "content-box",
                                                      "width": "2px",
                                                    }
                                                  }
                                                  value=""
                                                />
                                                <div
                                                  style={
                                                    Object {
                                                      "height": 0,
                                                      "left": 0,
                                                      "overflow": "scroll",
                                                      "position": "absolute",
                                                      "top": 0,
                                                      "visibility": "hidden",
                                                      "whiteSpace": "pre",
                                                    }
                                                  }
                                                />
                                              </div>
                                            </AutosizeInput>
                                          </div>
                                          <EuiFormControlLayoutIcons />
                                        </div>
                                      </div>
                                    </EuiFormControlLayout>
                                  </EuiComboBoxInput>
                                </div>
                              </EuiComboBox>
                              <EuiFormHelpText
                                className="euiFormRow__text"
                                id="tp826r0m-help"
                              >
                                <div
                                  className="euiFormHelpText euiFormRow__text"
                                  id="tp826r0m-help"
                                >
                                  Type one or more custom identifying tags for this rule. Press enter after each tag to begin a new one.
                                </div>
                              </EuiFormHelpText>
                            </div>
                          </div>
                        </EuiFormRow>
                      </ComboBoxField>
                    </Component>
                  </Component>
                </div>
              </TagContainer>
              <EuiSpacer
                size="m"
              >
                <div
                  className="euiSpacer euiSpacer--m"
                />
              </EuiSpacer>
              <Styled(EuiAccordion)
                buttonContent={
                  <EuiButtonEmpty
                    flush="left"
                    iconType="arrowRight"
                    size="s"
                  >
                    Advanced settings
                  </EuiButtonEmpty>
                }
                id="advancedSettingsAccordion"
              >
                <EuiAccordion
                  buttonContent={
                    <EuiButtonEmpty
                      flush="left"
                      iconType="arrowRight"
                      size="s"
                    >
                      Advanced settings
                    </EuiButtonEmpty>
                  }
                  className="c3"
                  id="advancedSettingsAccordion"
                  initialIsOpen={false}
                  paddingSize="none"
                >
                  <div
                    className="euiAccordion c3"
                  >
                    <div
                      className="euiAccordion__triggerWrapper"
                    >
                      <button
                        aria-controls="advancedSettingsAccordion"
                        aria-expanded={false}
                        className="euiAccordion__button"
                        onClick={[Function]}
                        type="button"
                      >
                        <span
                          className="euiAccordion__iconWrapper"
                        >
                          <EuiIcon
                            className="euiAccordion__icon"
                            size="m"
                            type="arrowRight"
                          >
                            <EuiIconEmpty
                              aria-hidden={true}
                              className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon"
                              focusable="false"
                              role="img"
                              style={null}
                            >
                              <svg
                                aria-hidden={true}
                                className="euiIcon euiIcon--medium euiIcon-isLoading euiAccordion__icon"
                                focusable="false"
                                height={16}
                                role="img"
                                style={null}
                                viewBox="0 0 16 16"
                                width={16}
                                xmlns="http://www.w3.org/2000/svg"
                              />
                            </EuiIconEmpty>
                          </EuiIcon>
                        </span>
                        <span>
                          <EuiButtonEmpty
                            flush="left"
                            iconType="arrowRight"
                            size="s"
                          >
                            <button
                              className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--small euiButtonEmpty--flushLeft"
                              type="button"
                            >
                              <span
                                className="euiButtonEmpty__content"
                              >
                                <EuiIcon
                                  aria-hidden="true"
                                  className="euiButtonEmpty__icon"
                                  size="m"
                                  type="arrowRight"
                                >
                                  <EuiIconEmpty
                                    aria-hidden={true}
                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonEmpty__icon"
                                    focusable="false"
                                    role="img"
                                    style={null}
                                  >
                                    <svg
                                      aria-hidden={true}
                                      className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonEmpty__icon"
                                      focusable="false"
                                      height={16}
                                      role="img"
                                      style={null}
                                      viewBox="0 0 16 16"
                                      width={16}
                                      xmlns="http://www.w3.org/2000/svg"
                                    />
                                  </EuiIconEmpty>
                                </EuiIcon>
                                <span
                                  className="euiButtonEmpty__text"
                                >
                                  Advanced settings
                                </span>
                              </span>
                            </button>
                          </EuiButtonEmpty>
                        </span>
                      </button>
                    </div>
                    <div
                      className="euiAccordion__childWrapper"
                      id="advancedSettingsAccordion"
                    >
                      <EuiMutationObserver
                        observerOptions={
                          Object {
                            "attributeFilter": Array [
                              "style",
                            ],
                            "childList": true,
                            "subtree": true,
                          }
                        }
                        onMutation={[Function]}
                      >
                        <div>
                          <div
                            className=""
                          >
                            <EuiSpacer
                              size="m"
                            >
                              <div
                                className="euiSpacer euiSpacer--m"
                              />
                            </EuiSpacer>
                            <Component
                              component={[Function]}
                              componentProps={
                                Object {
                                  "dataTestSubj": "detectionEngineStepAboutRuleTimeline",
                                  "idAria": "detectionEngineStepAboutRuleTimeline",
                                  "isDisabled": true,
                                }
                              }
                              path="timeline"
                            >
                              <EuiFormRow
                                data-test-subj="detectionEngineStepAboutRuleTimeline"
                                describedByIds={
                                  Array [
                                    "detectionEngineStepAboutRuleTimeline",
                                  ]
                                }
                                display="row"
                                error={null}
                                fullWidth={true}
                                hasChildLabel={true}
                                hasEmptyLabelSpace={false}
                                helpText=""
                                isInvalid={false}
                                label="Investigate detections using this timeline template"
                                labelAppend=""
                                labelType="label"
                              >
                                <div
                                  className="euiFormRow euiFormRow--fullWidth"
                                  data-test-subj="detectionEngineStepAboutRuleTimeline"
                                  id="5i2nytda-row"
                                >
                                  <div
                                    className="euiFormRow__labelWrapper"
                                  >
                                    <EuiFormLabel
                                      aria-invalid={false}
                                      className="euiFormRow__label"
                                      htmlFor="5i2nytda"
                                      isFocused={false}
                                      isInvalid={false}
                                      type="label"
                                    >
                                      <label
                                        aria-invalid={false}
                                        className="euiFormLabel euiFormRow__label"
                                        htmlFor="5i2nytda"
                                      >
                                        Investigate detections using this timeline template
                                      </label>
                                    </EuiFormLabel>
                                  </div>
                                  <div
                                    className="euiFormRow__fieldWrapper"
                                  >
                                    <SearchTimelineSuperSelectComponent
                                      aria-describedby="detectionEngineStepAboutRuleTimeline"
                                      hideUntitled={true}
                                      id="5i2nytda"
                                      isDisabled={true}
                                      onBlur={[Function]}
                                      onFocus={[Function]}
                                      onTimelineChange={[Function]}
                                      timelineId={null}
                                      timelineTitle={null}
                                    >
                                      <EuiInputPopover
                                        anchorPosition="downLeft"
                                        attachToAnchor={true}
                                        closePopover={[Function]}
                                        display="block"
                                        id="searchTimelinePopover"
                                        input={
                                          <EuiSuperSelect
                                            compressed={false}
                                            disabled={true}
                                            fullWidth={false}
                                            hasDividers={false}
                                            isInvalid={false}
                                            isLoading={false}
                                            itemLayoutAlign="top"
                                            onFocus={[Function]}
                                            options={
                                              Array [
                                                Object {
                                                  "inputDisplay": "Default blank timeline",
                                                  "value": "-1",
                                                },
                                              ]
                                            }
                                            popoverClassName="timeline-search-super-select-popover"
                                            valueOfSelected="-1"
                                          />
                                        }
                                        isOpen={false}
                                        panelPaddingSize="s"
                                      >
                                        <EuiPopover
                                          anchorPosition="downLeft"
                                          attachToAnchor={true}
                                          button={
                                            <EuiResizeObserver
                                              onResize={[Function]}
                                            >
                                              [Function]
                                            </EuiResizeObserver>
                                          }
                                          buttonRef={[Function]}
                                          className="euiInputPopover"
                                          closePopover={[Function]}
                                          display="block"
                                          hasArrow={true}
                                          id="searchTimelinePopover"
                                          isOpen={false}
                                          ownFocus={false}
                                          panelPaddingSize="s"
                                          panelRef={[Function]}
                                        >
                                          <EuiOutsideClickDetector
                                            isDisabled={true}
                                            onOutsideClick={[Function]}
                                          >
                                            <div
                                              className="euiPopover euiPopover--anchorDownLeft euiPopover--displayBlock euiInputPopover"
                                              id="searchTimelinePopover"
                                              onKeyDown={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchStart={[Function]}
                                            >
                                              <div
                                                className="euiPopover__anchor"
                                              >
                                                <EuiResizeObserver
                                                  onResize={[Function]}
                                                >
                                                  <div>
                                                    <EuiSuperSelect
                                                      compressed={false}
                                                      disabled={true}
                                                      fullWidth={false}
                                                      hasDividers={false}
                                                      isInvalid={false}
                                                      isLoading={false}
                                                      itemLayoutAlign="top"
                                                      onFocus={[Function]}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "inputDisplay": "Default blank timeline",
                                                            "value": "-1",
                                                          },
                                                        ]
                                                      }
                                                      popoverClassName="timeline-search-super-select-popover"
                                                      valueOfSelected="-1"
                                                    >
                                                      <EuiPopover
                                                        anchorPosition="downCenter"
                                                        button={
                                                          <EuiSuperSelectControl
                                                            className=""
                                                            compressed={false}
                                                            disabled={true}
                                                            fullWidth={false}
                                                            isInvalid={false}
                                                            isLoading={false}
                                                            onClick={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "inputDisplay": "Default blank timeline",
                                                                  "value": "-1",
                                                                },
                                                              ]
                                                            }
                                                            value="-1"
                                                          />
                                                        }
                                                        className="euiSuperSelect timeline-search-super-select-popover"
                                                        closePopover={[Function]}
                                                        display="block"
                                                        hasArrow={false}
                                                        isOpen={false}
                                                        ownFocus={false}
                                                        panelClassName="euiSuperSelect__popoverPanel timeline-search-super-select-popover__popoverPanel"
                                                        panelPaddingSize="none"
                                                        popoverRef={[Function]}
                                                      >
                                                        <EuiOutsideClickDetector
                                                          isDisabled={true}
                                                          onOutsideClick={[Function]}
                                                        >
                                                          <div
                                                            className="euiPopover euiPopover--anchorDownCenter euiPopover--displayBlock euiSuperSelect timeline-search-super-select-popover"
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchStart={[Function]}
                                                          >
                                                            <div
                                                              className="euiPopover__anchor"
                                                            >
                                                              <EuiSuperSelectControl
                                                                className=""
                                                                compressed={false}
                                                                disabled={true}
                                                                fullWidth={false}
                                                                isInvalid={false}
                                                                isLoading={false}
                                                                onClick={[Function]}
                                                                onFocus={[Function]}
                                                                onKeyDown={[Function]}
                                                                options={
                                                                  Array [
                                                                    Object {
                                                                      "inputDisplay": "Default blank timeline",
                                                                      "value": "-1",
                                                                    },
                                                                  ]
                                                                }
                                                                value="-1"
                                                              >
                                                                <input
                                                                  type="hidden"
                                                                  value="-1"
                                                                />
                                                                <EuiFormControlLayout
                                                                  compressed={false}
                                                                  fullWidth={false}
                                                                  icon={
                                                                    Object {
                                                                      "side": "right",
                                                                      "type": "arrowDown",
                                                                    }
                                                                  }
                                                                  isLoading={false}
                                                                >
                                                                  <div
                                                                    className="euiFormControlLayout"
                                                                  >
                                                                    <div
                                                                      className="euiFormControlLayout__childrenWrapper"
                                                                    >
                                                                      <EuiScreenReaderOnly>
                                                                        <span
                                                                          className="euiScreenReaderOnly"
                                                                          id="y4aiuyw4"
                                                                        >
                                                                          <EuiI18n
                                                                            default="Select an option: {selectedValue}, is selected"
                                                                            token="euiSuperSelectControl.selectAnOption"
                                                                            values={
                                                                              Object {
                                                                                "selectedValue": "Default blank timeline",
                                                                              }
                                                                            }
                                                                          >
                                                                            Select an option: Default blank timeline, is selected
                                                                          </EuiI18n>
                                                                        </span>
                                                                      </EuiScreenReaderOnly>
                                                                      <button
                                                                        aria-haspopup="true"
                                                                        aria-labelledby="undefined y4aiuyw4"
                                                                        aria-selected={true}
                                                                        className="euiSuperSelectControl"
                                                                        disabled={true}
                                                                        onClick={[Function]}
                                                                        onFocus={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        role="option"
                                                                        type="button"
                                                                      >
                                                                        Default blank timeline
                                                                      </button>
                                                                      <EuiFormControlLayoutIcons
                                                                        icon={
                                                                          Object {
                                                                            "side": "right",
                                                                            "type": "arrowDown",
                                                                          }
                                                                        }
                                                                        isLoading={false}
                                                                      >
                                                                        <div
                                                                          className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                                                        >
                                                                          <EuiFormControlLayoutCustomIcon
                                                                            type="arrowDown"
                                                                          >
                                                                            <span
                                                                              className="euiFormControlLayoutCustomIcon"
                                                                            >
                                                                              <EuiIcon
                                                                                aria-hidden="true"
                                                                                className="euiFormControlLayoutCustomIcon__icon"
                                                                                type="arrowDown"
                                                                              >
                                                                                <EuiIconEmpty
                                                                                  aria-hidden={true}
                                                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                                  focusable="false"
                                                                                  role="img"
                                                                                  style={null}
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden={true}
                                                                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                                    focusable="false"
                                                                                    height={16}
                                                                                    role="img"
                                                                                    style={null}
                                                                                    viewBox="0 0 16 16"
                                                                                    width={16}
                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                  />
                                                                                </EuiIconEmpty>
                                                                              </EuiIcon>
                                                                            </span>
                                                                          </EuiFormControlLayoutCustomIcon>
                                                                        </div>
                                                                      </EuiFormControlLayoutIcons>
                                                                    </div>
                                                                  </div>
                                                                </EuiFormControlLayout>
                                                              </EuiSuperSelectControl>
                                                            </div>
                                                          </div>
                                                        </EuiOutsideClickDetector>
                                                      </EuiPopover>
                                                    </EuiSuperSelect>
                                                  </div>
                                                </EuiResizeObserver>
                                              </div>
                                            </div>
                                          </EuiOutsideClickDetector>
                                        </EuiPopover>
                                      </EuiInputPopover>
                                    </SearchTimelineSuperSelectComponent>
                                  </div>
                                </div>
                              </EuiFormRow>
                            </Component>
                            <Component
                              component={[Function]}
                              componentProps={
                                Object {
                                  "addText": "Add reference URL",
                                  "dataTestSubj": "detectionEngineStepAboutRuleReferenceUrls",
                                  "idAria": "detectionEngineStepAboutRuleReferenceUrls",
                                  "isDisabled": true,
                                  "validate": [Function],
                                }
                              }
                              path="references"
                            >
                              <Styled(EuiFormRow)
                                data-test-subj="detectionEngineStepAboutRuleReferenceUrls"
                                describedByIds={
                                  Array [
                                    "detectionEngineStepAboutRuleReferenceUrls",
                                  ]
                                }
                                error={null}
                                fullWidth={true}
                                isInvalid={false}
                                label="Reference URLs"
                                labelAppend={
                                  <EuiText
                                    color="subdued"
                                    size="xs"
                                  >
                                    Optional
                                  </EuiText>
                                }
                              >
                                <EuiFormRow
                                  className="c4"
                                  data-test-subj="detectionEngineStepAboutRuleReferenceUrls"
                                  describedByIds={
                                    Array [
                                      "detectionEngineStepAboutRuleReferenceUrls",
                                    ]
                                  }
                                  display="row"
                                  error={null}
                                  fullWidth={true}
                                  hasChildLabel={true}
                                  hasEmptyLabelSpace={false}
                                  isInvalid={false}
                                  label="Reference URLs"
                                  labelAppend={
                                    <EuiText
                                      color="subdued"
                                      size="xs"
                                    >
                                      Optional
                                    </EuiText>
                                  }
                                  labelType="label"
                                >
                                  <div
                                    className="euiFormRow euiFormRow--fullWidth c4"
                                    data-test-subj="detectionEngineStepAboutRuleReferenceUrls"
                                    id="8dgnshsd-row"
                                  >
                                    <div
                                      className="euiFormRow__labelWrapper"
                                    >
                                      <EuiFormLabel
                                        aria-invalid={false}
                                        className="euiFormRow__label"
                                        htmlFor="8dgnshsd"
                                        isFocused={false}
                                        isInvalid={false}
                                        type="label"
                                      >
                                        <label
                                          aria-invalid={false}
                                          className="euiFormLabel euiFormRow__label"
                                          htmlFor="8dgnshsd"
                                        >
                                          Reference URLs
                                        </label>
                                      </EuiFormLabel>
                                       
                                      <EuiText
                                        color="subdued"
                                        size="xs"
                                      >
                                        <div
                                          className="euiText euiText--extraSmall"
                                        >
                                          <EuiTextColor
                                            color="subdued"
                                            component="div"
                                          >
                                            <div
                                              className="euiTextColor euiTextColor--subdued"
                                            >
                                              Optional
                                            </div>
                                          </EuiTextColor>
                                        </div>
                                      </EuiText>
                                    </div>
                                    <div
                                      className="euiFormRow__fieldWrapper"
                                    >
                                      <div
                                        key="0"
                                      >
                                        <EuiFlexGroup
                                          alignItems="center"
                                          gutterSize="s"
                                        >
                                          <div
                                            className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
                                          >
                                            <EuiFlexItem
                                              grow={true}
                                            >
                                              <div
                                                className="euiFlexItem"
                                              >
                                                <EuiFieldText
                                                  disabled={true}
                                                  fullWidth={true}
                                                  inputRef={[Function]}
                                                  isInvalid={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                >
                                                  <EuiFormControlLayout
                                                    fullWidth={true}
                                                  >
                                                    <div
                                                      className="euiFormControlLayout euiFormControlLayout--fullWidth"
                                                    >
                                                      <div
                                                        className="euiFormControlLayout__childrenWrapper"
                                                      >
                                                        <EuiValidatableControl
                                                          isInvalid={false}
                                                        >
                                                          <input
                                                            className="euiFieldText euiFieldText--fullWidth"
                                                            disabled={true}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            type="text"
                                                          />
                                                        </EuiValidatableControl>
                                                        <EuiFormControlLayoutIcons />
                                                      </div>
                                                    </div>
                                                  </EuiFormControlLayout>
                                                </EuiFieldText>
                                              </div>
                                            </EuiFlexItem>
                                            <EuiFlexItem
                                              grow={false}
                                            >
                                              <div
                                                className="euiFlexItem euiFlexItem--flexGrowZero"
                                              >
                                                <EuiButtonIcon
                                                  aria-label="Delete"
                                                  color="danger"
                                                  iconType="trash"
                                                  isDisabled={true}
                                                  onClick={[Function]}
                                                >
                                                  <button
                                                    aria-label="Delete"
                                                    className="euiButtonIcon euiButtonIcon--danger"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <EuiIcon
                                                      aria-hidden="true"
                                                      className="euiButtonIcon__icon"
                                                      size="m"
                                                      type="trash"
                                                    >
                                                      <EuiIconEmpty
                                                        aria-hidden={true}
                                                        className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonIcon__icon"
                                                        focusable="false"
                                                        role="img"
                                                        style={null}
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonIcon__icon"
                                                          focusable="false"
                                                          height={16}
                                                          role="img"
                                                          style={null}
                                                          viewBox="0 0 16 16"
                                                          width={16}
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        />
                                                      </EuiIconEmpty>
                                                    </EuiIcon>
                                                  </button>
                                                </EuiButtonIcon>
                                              </div>
                                            </EuiFlexItem>
                                          </div>
                                        </EuiFlexGroup>
                                      </div>
                                      <Styled(EuiButtonEmpty)
                                        flush="left"
                                        iconType="plusInCircle"
                                        isDisabled={true}
                                        onClick={[Function]}
                                        size="xs"
                                      >
                                        <EuiButtonEmpty
                                          className="c5"
                                          flush="left"
                                          iconType="plusInCircle"
                                          isDisabled={true}
                                          onClick={[Function]}
                                          size="xs"
                                        >
                                          <button
                                            className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushLeft c5"
                                            disabled={true}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <span
                                              className="euiButtonEmpty__content"
                                            >
                                              <EuiIcon
                                                aria-hidden="true"
                                                className="euiButtonEmpty__icon"
                                                size="m"
                                                type="plusInCircle"
                                              >
                                                <EuiIconEmpty
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonEmpty__icon"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonEmpty__icon"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  />
                                                </EuiIconEmpty>
                                              </EuiIcon>
                                              <span
                                                className="euiButtonEmpty__text"
                                              >
                                                Add reference URL
                                              </span>
                                            </span>
                                          </button>
                                        </EuiButtonEmpty>
                                      </Styled(EuiButtonEmpty)>
                                    </div>
                                  </div>
                                </EuiFormRow>
                              </Styled(EuiFormRow)>
                            </Component>
                            <Component
                              component={[Function]}
                              componentProps={
                                Object {
                                  "addText": "Add false positive example",
                                  "dataTestSubj": "detectionEngineStepAboutRuleFalsePositives",
                                  "idAria": "detectionEngineStepAboutRuleFalsePositives",
                                  "isDisabled": true,
                                }
                              }
                              path="falsePositives"
                            >
                              <Styled(EuiFormRow)
                                data-test-subj="detectionEngineStepAboutRuleFalsePositives"
                                describedByIds={
                                  Array [
                                    "detectionEngineStepAboutRuleFalsePositives",
                                  ]
                                }
                                error={null}
                                fullWidth={true}
                                isInvalid={false}
                                label="False positive examples"
                                labelAppend={
                                  <EuiText
                                    color="subdued"
                                    size="xs"
                                  >
                                    Optional
                                  </EuiText>
                                }
                              >
                                <EuiFormRow
                                  className="c4"
                                  data-test-subj="detectionEngineStepAboutRuleFalsePositives"
                                  describedByIds={
                                    Array [
                                      "detectionEngineStepAboutRuleFalsePositives",
                                    ]
                                  }
                                  display="row"
                                  error={null}
                                  fullWidth={true}
                                  hasChildLabel={true}
                                  hasEmptyLabelSpace={false}
                                  isInvalid={false}
                                  label="False positive examples"
                                  labelAppend={
                                    <EuiText
                                      color="subdued"
                                      size="xs"
                                    >
                                      Optional
                                    </EuiText>
                                  }
                                  labelType="label"
                                >
                                  <div
                                    className="euiFormRow euiFormRow--fullWidth c4"
                                    data-test-subj="detectionEngineStepAboutRuleFalsePositives"
                                    id="28xpkkl4-row"
                                  >
                                    <div
                                      className="euiFormRow__labelWrapper"
                                    >
                                      <EuiFormLabel
                                        aria-invalid={false}
                                        className="euiFormRow__label"
                                        htmlFor="28xpkkl4"
                                        isFocused={false}
                                        isInvalid={false}
                                        type="label"
                                      >
                                        <label
                                          aria-invalid={false}
                                          className="euiFormLabel euiFormRow__label"
                                          htmlFor="28xpkkl4"
                                        >
                                          False positive examples
                                        </label>
                                      </EuiFormLabel>
                                       
                                      <EuiText
                                        color="subdued"
                                        size="xs"
                                      >
                                        <div
                                          className="euiText euiText--extraSmall"
                                        >
                                          <EuiTextColor
                                            color="subdued"
                                            component="div"
                                          >
                                            <div
                                              className="euiTextColor euiTextColor--subdued"
                                            >
                                              Optional
                                            </div>
                                          </EuiTextColor>
                                        </div>
                                      </EuiText>
                                    </div>
                                    <div
                                      className="euiFormRow__fieldWrapper"
                                    >
                                      <div
                                        key="0"
                                      >
                                        <EuiFlexGroup
                                          alignItems="center"
                                          gutterSize="s"
                                        >
                                          <div
                                            className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
                                          >
                                            <EuiFlexItem
                                              grow={true}
                                            >
                                              <div
                                                className="euiFlexItem"
                                              >
                                                <EuiFieldText
                                                  disabled={true}
                                                  fullWidth={true}
                                                  inputRef={[Function]}
                                                  isInvalid={false}
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                >
                                                  <EuiFormControlLayout
                                                    fullWidth={true}
                                                  >
                                                    <div
                                                      className="euiFormControlLayout euiFormControlLayout--fullWidth"
                                                    >
                                                      <div
                                                        className="euiFormControlLayout__childrenWrapper"
                                                      >
                                                        <EuiValidatableControl
                                                          isInvalid={false}
                                                        >
                                                          <input
                                                            className="euiFieldText euiFieldText--fullWidth"
                                                            disabled={true}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            type="text"
                                                          />
                                                        </EuiValidatableControl>
                                                        <EuiFormControlLayoutIcons />
                                                      </div>
                                                    </div>
                                                  </EuiFormControlLayout>
                                                </EuiFieldText>
                                              </div>
                                            </EuiFlexItem>
                                            <EuiFlexItem
                                              grow={false}
                                            >
                                              <div
                                                className="euiFlexItem euiFlexItem--flexGrowZero"
                                              >
                                                <EuiButtonIcon
                                                  aria-label="Delete"
                                                  color="danger"
                                                  iconType="trash"
                                                  isDisabled={true}
                                                  onClick={[Function]}
                                                >
                                                  <button
                                                    aria-label="Delete"
                                                    className="euiButtonIcon euiButtonIcon--danger"
                                                    disabled={true}
                                                    onClick={[Function]}
                                                    type="button"
                                                  >
                                                    <EuiIcon
                                                      aria-hidden="true"
                                                      className="euiButtonIcon__icon"
                                                      size="m"
                                                      type="trash"
                                                    >
                                                      <EuiIconEmpty
                                                        aria-hidden={true}
                                                        className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonIcon__icon"
                                                        focusable="false"
                                                        role="img"
                                                        style={null}
                                                      >
                                                        <svg
                                                          aria-hidden={true}
                                                          className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonIcon__icon"
                                                          focusable="false"
                                                          height={16}
                                                          role="img"
                                                          style={null}
                                                          viewBox="0 0 16 16"
                                                          width={16}
                                                          xmlns="http://www.w3.org/2000/svg"
                                                        />
                                                      </EuiIconEmpty>
                                                    </EuiIcon>
                                                  </button>
                                                </EuiButtonIcon>
                                              </div>
                                            </EuiFlexItem>
                                          </div>
                                        </EuiFlexGroup>
                                      </div>
                                      <Styled(EuiButtonEmpty)
                                        flush="left"
                                        iconType="plusInCircle"
                                        isDisabled={true}
                                        onClick={[Function]}
                                        size="xs"
                                      >
                                        <EuiButtonEmpty
                                          className="c5"
                                          flush="left"
                                          iconType="plusInCircle"
                                          isDisabled={true}
                                          onClick={[Function]}
                                          size="xs"
                                        >
                                          <button
                                            className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushLeft c5"
                                            disabled={true}
                                            onClick={[Function]}
                                            type="button"
                                          >
                                            <span
                                              className="euiButtonEmpty__content"
                                            >
                                              <EuiIcon
                                                aria-hidden="true"
                                                className="euiButtonEmpty__icon"
                                                size="m"
                                                type="plusInCircle"
                                              >
                                                <EuiIconEmpty
                                                  aria-hidden={true}
                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonEmpty__icon"
                                                  focusable="false"
                                                  role="img"
                                                  style={null}
                                                >
                                                  <svg
                                                    aria-hidden={true}
                                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonEmpty__icon"
                                                    focusable="false"
                                                    height={16}
                                                    role="img"
                                                    style={null}
                                                    viewBox="0 0 16 16"
                                                    width={16}
                                                    xmlns="http://www.w3.org/2000/svg"
                                                  />
                                                </EuiIconEmpty>
                                              </EuiIcon>
                                              <span
                                                className="euiButtonEmpty__text"
                                              >
                                                Add false positive example
                                              </span>
                                            </span>
                                          </button>
                                        </EuiButtonEmpty>
                                      </Styled(EuiButtonEmpty)>
                                    </div>
                                  </div>
                                </EuiFormRow>
                              </Styled(EuiFormRow)>
                            </Component>
                            <Component
                              component={[Function]}
                              componentProps={
                                Object {
                                  "dataTestSubj": "detectionEngineStepAboutRuleMitreThreat",
                                  "idAria": "detectionEngineStepAboutRuleMitreThreat",
                                  "isDisabled": true,
                                }
                              }
                              path="threat"
                            >
                              <styled.div>
                                <div
                                  className="c6"
                                >
                                  <div
                                    key="0"
                                  >
                                    <EuiFlexGroup
                                      alignItems="flexStart"
                                      gutterSize="s"
                                      justifyContent="spaceBetween"
                                    >
                                      <div
                                        className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsFlexStart euiFlexGroup--justifyContentSpaceBetween euiFlexGroup--directionRow euiFlexGroup--responsive"
                                      >
                                        <EuiFlexItem
                                          grow={false}
                                        >
                                          <div
                                            className="euiFlexItem euiFlexItem--flexGrowZero"
                                          >
                                            <EuiFormRow
                                              describedByIds={
                                                Array [
                                                  "detectionEngineStepAboutRuleMitreThreat tactic",
                                                ]
                                              }
                                              display="row"
                                              fullWidth={false}
                                              hasChildLabel={true}
                                              hasEmptyLabelSpace={false}
                                              label="MITRE ATT&CK™ tactic"
                                              labelAppend={
                                                <EuiText
                                                  color="subdued"
                                                  size="xs"
                                                >
                                                  Optional
                                                </EuiText>
                                              }
                                              labelType="label"
                                            >
                                              <div
                                                className="euiFormRow"
                                                id="e6eu6lhe-row"
                                              >
                                                <div
                                                  className="euiFormRow__labelWrapper"
                                                >
                                                  <EuiFormLabel
                                                    className="euiFormRow__label"
                                                    htmlFor="e6eu6lhe"
                                                    isFocused={false}
                                                    type="label"
                                                  >
                                                    <label
                                                      className="euiFormLabel euiFormRow__label"
                                                      htmlFor="e6eu6lhe"
                                                    >
                                                      MITRE ATT&CK™ tactic
                                                    </label>
                                                  </EuiFormLabel>
                                                   
                                                  <EuiText
                                                    color="subdued"
                                                    size="xs"
                                                  >
                                                    <div
                                                      className="euiText euiText--extraSmall"
                                                    >
                                                      <EuiTextColor
                                                        color="subdued"
                                                        component="div"
                                                      >
                                                        <div
                                                          className="euiTextColor euiTextColor--subdued"
                                                        >
                                                          Optional
                                                        </div>
                                                      </EuiTextColor>
                                                    </div>
                                                  </EuiText>
                                                </div>
                                                <div
                                                  className="euiFormRow__fieldWrapper"
                                                >
                                                  <Styled(EuiSuperSelect)
                                                    aria-label=""
                                                    fullWidth={false}
                                                    id="selectDocExample"
                                                    onChange={[Function]}
                                                    options={
                                                      Array [
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Select tactic ...
                                                          </React.Fragment>,
                                                          "value": "none",
                                                        },
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Collection (TA0009)
                                                          </React.Fragment>,
                                                          "value": "collection",
                                                        },
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Command and Control (TA0011)
                                                          </React.Fragment>,
                                                          "value": "commandAndControl",
                                                        },
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Credential Access (TA0006)
                                                          </React.Fragment>,
                                                          "value": "credentialAccess",
                                                        },
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Defense Evasion (TA0005)
                                                          </React.Fragment>,
                                                          "value": "defenseEvasion",
                                                        },
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Discovery (TA0007)
                                                          </React.Fragment>,
                                                          "value": "discovery",
                                                        },
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Execution (TA0002)
                                                          </React.Fragment>,
                                                          "value": "execution",
                                                        },
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Exfiltration (TA0010)
                                                          </React.Fragment>,
                                                          "value": "exfiltration",
                                                        },
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Impact (TA0040)
                                                          </React.Fragment>,
                                                          "value": "impact",
                                                        },
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Initial Access (TA0001)
                                                          </React.Fragment>,
                                                          "value": "initialAccess",
                                                        },
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Lateral Movement (TA0008)
                                                          </React.Fragment>,
                                                          "value": "lateralMovement",
                                                        },
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Persistence (TA0003)
                                                          </React.Fragment>,
                                                          "value": "persistence",
                                                        },
                                                        Object {
                                                          "disabled": true,
                                                          "inputDisplay": <React.Fragment>
                                                            Privilege Escalation (TA0004)
                                                          </React.Fragment>,
                                                          "value": "privilegeEscalation",
                                                        },
                                                      ]
                                                    }
                                                    valueOfSelected="none"
                                                  >
                                                    <EuiSuperSelect
                                                      aria-label=""
                                                      className="c7"
                                                      compressed={false}
                                                      fullWidth={false}
                                                      hasDividers={false}
                                                      id="selectDocExample"
                                                      isInvalid={false}
                                                      isLoading={false}
                                                      onChange={[Function]}
                                                      options={
                                                        Array [
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Select tactic ...
                                                            </React.Fragment>,
                                                            "value": "none",
                                                          },
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Collection (TA0009)
                                                            </React.Fragment>,
                                                            "value": "collection",
                                                          },
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Command and Control (TA0011)
                                                            </React.Fragment>,
                                                            "value": "commandAndControl",
                                                          },
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Credential Access (TA0006)
                                                            </React.Fragment>,
                                                            "value": "credentialAccess",
                                                          },
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Defense Evasion (TA0005)
                                                            </React.Fragment>,
                                                            "value": "defenseEvasion",
                                                          },
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Discovery (TA0007)
                                                            </React.Fragment>,
                                                            "value": "discovery",
                                                          },
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Execution (TA0002)
                                                            </React.Fragment>,
                                                            "value": "execution",
                                                          },
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Exfiltration (TA0010)
                                                            </React.Fragment>,
                                                            "value": "exfiltration",
                                                          },
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Impact (TA0040)
                                                            </React.Fragment>,
                                                            "value": "impact",
                                                          },
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Initial Access (TA0001)
                                                            </React.Fragment>,
                                                            "value": "initialAccess",
                                                          },
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Lateral Movement (TA0008)
                                                            </React.Fragment>,
                                                            "value": "lateralMovement",
                                                          },
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Persistence (TA0003)
                                                            </React.Fragment>,
                                                            "value": "persistence",
                                                          },
                                                          Object {
                                                            "disabled": true,
                                                            "inputDisplay": <React.Fragment>
                                                              Privilege Escalation (TA0004)
                                                            </React.Fragment>,
                                                            "value": "privilegeEscalation",
                                                          },
                                                        ]
                                                      }
                                                      valueOfSelected="none"
                                                    >
                                                      <EuiPopover
                                                        anchorPosition="downCenter"
                                                        button={
                                                          <EuiSuperSelectControl
                                                            aria-label=""
                                                            className="c7"
                                                            compressed={false}
                                                            fullWidth={false}
                                                            id="selectDocExample"
                                                            isInvalid={false}
                                                            isLoading={false}
                                                            onClick={[Function]}
                                                            onKeyDown={[Function]}
                                                            options={
                                                              Array [
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Select tactic ...
                                                                  </React.Fragment>,
                                                                  "value": "none",
                                                                },
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Collection (TA0009)
                                                                  </React.Fragment>,
                                                                  "value": "collection",
                                                                },
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Command and Control (TA0011)
                                                                  </React.Fragment>,
                                                                  "value": "commandAndControl",
                                                                },
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Credential Access (TA0006)
                                                                  </React.Fragment>,
                                                                  "value": "credentialAccess",
                                                                },
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Defense Evasion (TA0005)
                                                                  </React.Fragment>,
                                                                  "value": "defenseEvasion",
                                                                },
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Discovery (TA0007)
                                                                  </React.Fragment>,
                                                                  "value": "discovery",
                                                                },
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Execution (TA0002)
                                                                  </React.Fragment>,
                                                                  "value": "execution",
                                                                },
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Exfiltration (TA0010)
                                                                  </React.Fragment>,
                                                                  "value": "exfiltration",
                                                                },
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Impact (TA0040)
                                                                  </React.Fragment>,
                                                                  "value": "impact",
                                                                },
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Initial Access (TA0001)
                                                                  </React.Fragment>,
                                                                  "value": "initialAccess",
                                                                },
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Lateral Movement (TA0008)
                                                                  </React.Fragment>,
                                                                  "value": "lateralMovement",
                                                                },
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Persistence (TA0003)
                                                                  </React.Fragment>,
                                                                  "value": "persistence",
                                                                },
                                                                Object {
                                                                  "disabled": true,
                                                                  "inputDisplay": <React.Fragment>
                                                                    Privilege Escalation (TA0004)
                                                                  </React.Fragment>,
                                                                  "value": "privilegeEscalation",
                                                                },
                                                              ]
                                                            }
                                                            value="none"
                                                          />
                                                        }
                                                        className="euiSuperSelect"
                                                        closePopover={[Function]}
                                                        display="block"
                                                        hasArrow={false}
                                                        isOpen={false}
                                                        ownFocus={false}
                                                        panelClassName="euiSuperSelect__popoverPanel"
                                                        panelPaddingSize="none"
                                                        popoverRef={[Function]}
                                                      >
                                                        <EuiOutsideClickDetector
                                                          isDisabled={true}
                                                          onOutsideClick={[Function]}
                                                        >
                                                          <div
                                                            className="euiPopover euiPopover--anchorDownCenter euiPopover--displayBlock euiSuperSelect"
                                                            onKeyDown={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchStart={[Function]}
                                                          >
                                                            <div
                                                              className="euiPopover__anchor"
                                                            >
                                                              <EuiSuperSelectControl
                                                                aria-label=""
                                                                className="c7"
                                                                compressed={false}
                                                                fullWidth={false}
                                                                id="selectDocExample"
                                                                isInvalid={false}
                                                                isLoading={false}
                                                                onClick={[Function]}
                                                                onKeyDown={[Function]}
                                                                options={
                                                                  Array [
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Select tactic ...
                                                                      </React.Fragment>,
                                                                      "value": "none",
                                                                    },
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Collection (TA0009)
                                                                      </React.Fragment>,
                                                                      "value": "collection",
                                                                    },
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Command and Control (TA0011)
                                                                      </React.Fragment>,
                                                                      "value": "commandAndControl",
                                                                    },
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Credential Access (TA0006)
                                                                      </React.Fragment>,
                                                                      "value": "credentialAccess",
                                                                    },
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Defense Evasion (TA0005)
                                                                      </React.Fragment>,
                                                                      "value": "defenseEvasion",
                                                                    },
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Discovery (TA0007)
                                                                      </React.Fragment>,
                                                                      "value": "discovery",
                                                                    },
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Execution (TA0002)
                                                                      </React.Fragment>,
                                                                      "value": "execution",
                                                                    },
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Exfiltration (TA0010)
                                                                      </React.Fragment>,
                                                                      "value": "exfiltration",
                                                                    },
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Impact (TA0040)
                                                                      </React.Fragment>,
                                                                      "value": "impact",
                                                                    },
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Initial Access (TA0001)
                                                                      </React.Fragment>,
                                                                      "value": "initialAccess",
                                                                    },
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Lateral Movement (TA0008)
                                                                      </React.Fragment>,
                                                                      "value": "lateralMovement",
                                                                    },
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Persistence (TA0003)
                                                                      </React.Fragment>,
                                                                      "value": "persistence",
                                                                    },
                                                                    Object {
                                                                      "disabled": true,
                                                                      "inputDisplay": <React.Fragment>
                                                                        Privilege Escalation (TA0004)
                                                                      </React.Fragment>,
                                                                      "value": "privilegeEscalation",
                                                                    },
                                                                  ]
                                                                }
                                                                value="none"
                                                              >
                                                                <input
                                                                  id="selectDocExample"
                                                                  type="hidden"
                                                                  value="none"
                                                                />
                                                                <EuiFormControlLayout
                                                                  compressed={false}
                                                                  fullWidth={false}
                                                                  icon={
                                                                    Object {
                                                                      "side": "right",
                                                                      "type": "arrowDown",
                                                                    }
                                                                  }
                                                                  isLoading={false}
                                                                >
                                                                  <div
                                                                    className="euiFormControlLayout"
                                                                  >
                                                                    <div
                                                                      className="euiFormControlLayout__childrenWrapper"
                                                                    >
                                                                      <EuiScreenReaderOnly>
                                                                        <span
                                                                          className="euiScreenReaderOnly"
                                                                          id="hvataj2h"
                                                                        >
                                                                          <EuiI18n
                                                                            default="Select an option: {selectedValue}, is selected"
                                                                            token="euiSuperSelectControl.selectAnOption"
                                                                            values={
                                                                              Object {
                                                                                "selectedValue": <React.Fragment>
                                                                                  Select tactic ...
                                                                                </React.Fragment>,
                                                                              }
                                                                            }
                                                                          >
                                                                            <Component
                                                                              selectedValue={
                                                                                <React.Fragment>
                                                                                  Select tactic ...
                                                                                </React.Fragment>
                                                                              }
                                                                            >
                                                                              Select an option: 
                                                                              Select tactic ...
                                                                              , is selected
                                                                            </Component>
                                                                          </EuiI18n>
                                                                        </span>
                                                                      </EuiScreenReaderOnly>
                                                                      <button
                                                                        aria-haspopup="true"
                                                                        aria-label=""
                                                                        aria-labelledby="selectDocExample hvataj2h"
                                                                        aria-selected={true}
                                                                        className="euiSuperSelectControl c7"
                                                                        onClick={[Function]}
                                                                        onKeyDown={[Function]}
                                                                        role="option"
                                                                        type="button"
                                                                      >
                                                                        Select tactic ...
                                                                      </button>
                                                                      <EuiFormControlLayoutIcons
                                                                        icon={
                                                                          Object {
                                                                            "side": "right",
                                                                            "type": "arrowDown",
                                                                          }
                                                                        }
                                                                        isLoading={false}
                                                                      >
                                                                        <div
                                                                          className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                                                        >
                                                                          <EuiFormControlLayoutCustomIcon
                                                                            type="arrowDown"
                                                                          >
                                                                            <span
                                                                              className="euiFormControlLayoutCustomIcon"
                                                                            >
                                                                              <EuiIcon
                                                                                aria-hidden="true"
                                                                                className="euiFormControlLayoutCustomIcon__icon"
                                                                                type="arrowDown"
                                                                              >
                                                                                <EuiIconEmpty
                                                                                  aria-hidden={true}
                                                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                                  focusable="false"
                                                                                  role="img"
                                                                                  style={null}
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden={true}
                                                                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                                    focusable="false"
                                                                                    height={16}
                                                                                    role="img"
                                                                                    style={null}
                                                                                    viewBox="0 0 16 16"
                                                                                    width={16}
                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                  />
                                                                                </EuiIconEmpty>
                                                                              </EuiIcon>
                                                                            </span>
                                                                          </EuiFormControlLayoutCustomIcon>
                                                                        </div>
                                                                      </EuiFormControlLayoutIcons>
                                                                    </div>
                                                                  </div>
                                                                </EuiFormControlLayout>
                                                              </EuiSuperSelectControl>
                                                            </div>
                                                          </div>
                                                        </EuiOutsideClickDetector>
                                                      </EuiPopover>
                                                    </EuiSuperSelect>
                                                  </Styled(EuiSuperSelect)>
                                                </div>
                                              </div>
                                            </EuiFormRow>
                                          </div>
                                        </EuiFlexItem>
                                        <EuiFlexItem
                                          grow={true}
                                        >
                                          <div
                                            className="euiFlexItem"
                                          >
                                            <EuiFormRow
                                              describedByIds={
                                                Array [
                                                  "detectionEngineStepAboutRuleMitreThreat techniques",
                                                ]
                                              }
                                              display="row"
                                              fullWidth={true}
                                              hasChildLabel={true}
                                              hasEmptyLabelSpace={false}
                                              isInvalid={false}
                                              label="MITRE ATT&CK™ techniques"
                                              labelType="label"
                                            >
                                              <div
                                                className="euiFormRow euiFormRow--fullWidth"
                                                id="sqxq1owg-row"
                                              >
                                                <div
                                                  className="euiFormRow__labelWrapper"
                                                >
                                                  <EuiFormLabel
                                                    aria-invalid={false}
                                                    className="euiFormRow__label"
                                                    htmlFor="sqxq1owg"
                                                    isFocused={false}
                                                    isInvalid={false}
                                                    type="label"
                                                  >
                                                    <label
                                                      aria-invalid={false}
                                                      className="euiFormLabel euiFormRow__label"
                                                      htmlFor="sqxq1owg"
                                                    >
                                                      MITRE ATT&CK™ techniques
                                                    </label>
                                                  </EuiFormLabel>
                                                </div>
                                                <div
                                                  className="euiFormRow__fieldWrapper"
                                                >
                                                  <EuiFlexGroup
                                                    alignItems="center"
                                                    gutterSize="s"
                                                  >
                                                    <div
                                                      className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--alignItemsCenter euiFlexGroup--directionRow euiFlexGroup--responsive"
                                                    >
                                                      <EuiFlexItem
                                                        grow={true}
                                                      >
                                                        <div
                                                          className="euiFlexItem"
                                                        >
                                                          <EuiComboBox
                                                            compressed={false}
                                                            fullWidth={true}
                                                            isClearable={true}
                                                            isDisabled={true}
                                                            isInvalid={false}
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            options={Array []}
                                                            placeholder=""
                                                            selectedOptions={Array []}
                                                            singleSelection={false}
                                                          >
                                                            <div
                                                              aria-expanded={false}
                                                              aria-haspopup="listbox"
                                                              className="euiComboBox euiComboBox-isDisabled euiComboBox--fullWidth"
                                                              onKeyDown={[Function]}
                                                              role="combobox"
                                                            >
                                                              <EuiComboBoxInput
                                                                autoSizeInputRef={[Function]}
                                                                compressed={false}
                                                                focusedOptionId={null}
                                                                fullWidth={true}
                                                                hasSelectedOptions={false}
                                                                inputRef={[Function]}
                                                                isDisabled={true}
                                                                isListOpen={false}
                                                                noIcon={false}
                                                                onChange={[Function]}
                                                                onClick={[Function]}
                                                                onCloseListClick={[Function]}
                                                                onFocus={[Function]}
                                                                onOpenListClick={[Function]}
                                                                onRemoveOption={[Function]}
                                                                placeholder=""
                                                                rootId={[Function]}
                                                                searchValue=""
                                                                selectedOptions={Array []}
                                                                singleSelection={false}
                                                                toggleButtonRef={[Function]}
                                                                updatePosition={[Function]}
                                                                value=""
                                                              >
                                                                <EuiFormControlLayout
                                                                  compressed={false}
                                                                  fullWidth={true}
                                                                  icon={
                                                                    Object {
                                                                      "aria-label": "Open list of options",
                                                                      "data-test-subj": "comboBoxToggleListButton",
                                                                      "disabled": true,
                                                                      "onClick": [Function],
                                                                      "ref": [Function],
                                                                      "side": "right",
                                                                      "type": "arrowDown",
                                                                    }
                                                                  }
                                                                >
                                                                  <div
                                                                    className="euiFormControlLayout euiFormControlLayout--fullWidth"
                                                                  >
                                                                    <div
                                                                      className="euiFormControlLayout__childrenWrapper"
                                                                    >
                                                                      <div
                                                                        className="euiComboBox__inputWrap euiComboBox__inputWrap--fullWidth"
                                                                        data-test-subj="comboBoxInput"
                                                                        onClick={[Function]}
                                                                        tabIndex="-1"
                                                                      >
                                                                        <AutosizeInput
                                                                          aria-activedescendant={null}
                                                                          aria-controls={null}
                                                                          className="euiComboBox__input"
                                                                          data-test-subj="comboBoxSearchInput"
                                                                          disabled={true}
                                                                          injectStyles={true}
                                                                          inputRef={[Function]}
                                                                          minWidth={1}
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          onFocus={[Function]}
                                                                          role="textbox"
                                                                          style={
                                                                            Object {
                                                                              "fontSize": 14,
                                                                            }
                                                                          }
                                                                          value=""
                                                                        >
                                                                          <div
                                                                            className="euiComboBox__input"
                                                                            style={
                                                                              Object {
                                                                                "display": "inline-block",
                                                                                "fontSize": 14,
                                                                              }
                                                                            }
                                                                          >
                                                                            <input
                                                                              aria-activedescendant={null}
                                                                              aria-controls={null}
                                                                              data-test-subj="comboBoxSearchInput"
                                                                              disabled={true}
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              onFocus={[Function]}
                                                                              role="textbox"
                                                                              style={
                                                                                Object {
                                                                                  "boxSizing": "content-box",
                                                                                  "width": "2px",
                                                                                }
                                                                              }
                                                                              value=""
                                                                            />
                                                                            <div
                                                                              style={
                                                                                Object {
                                                                                  "height": 0,
                                                                                  "left": 0,
                                                                                  "overflow": "scroll",
                                                                                  "position": "absolute",
                                                                                  "top": 0,
                                                                                  "visibility": "hidden",
                                                                                  "whiteSpace": "pre",
                                                                                }
                                                                              }
                                                                            />
                                                                          </div>
                                                                        </AutosizeInput>
                                                                      </div>
                                                                      <EuiFormControlLayoutIcons
                                                                        icon={
                                                                          Object {
                                                                            "aria-label": "Open list of options",
                                                                            "data-test-subj": "comboBoxToggleListButton",
                                                                            "disabled": true,
                                                                            "onClick": [Function],
                                                                            "ref": [Function],
                                                                            "side": "right",
                                                                            "type": "arrowDown",
                                                                          }
                                                                        }
                                                                      >
                                                                        <div
                                                                          className="euiFormControlLayoutIcons euiFormControlLayoutIcons--right"
                                                                        >
                                                                          <EuiFormControlLayoutCustomIcon
                                                                            aria-label="Open list of options"
                                                                            data-test-subj="comboBoxToggleListButton"
                                                                            disabled={true}
                                                                            iconRef={[Function]}
                                                                            onClick={[Function]}
                                                                            type="arrowDown"
                                                                          >
                                                                            <button
                                                                              aria-label="Open list of options"
                                                                              className="euiFormControlLayoutCustomIcon euiFormControlLayoutCustomIcon--clickable"
                                                                              data-test-subj="comboBoxToggleListButton"
                                                                              disabled={true}
                                                                              onClick={[Function]}
                                                                              type="button"
                                                                            >
                                                                              <EuiIcon
                                                                                aria-hidden="true"
                                                                                className="euiFormControlLayoutCustomIcon__icon"
                                                                                type="arrowDown"
                                                                              >
                                                                                <EuiIconEmpty
                                                                                  aria-hidden={true}
                                                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                                  focusable="false"
                                                                                  role="img"
                                                                                  style={null}
                                                                                >
                                                                                  <svg
                                                                                    aria-hidden={true}
                                                                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiFormControlLayoutCustomIcon__icon"
                                                                                    focusable="false"
                                                                                    height={16}
                                                                                    role="img"
                                                                                    style={null}
                                                                                    viewBox="0 0 16 16"
                                                                                    width={16}
                                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                                  />
                                                                                </EuiIconEmpty>
                                                                              </EuiIcon>
                                                                            </button>
                                                                          </EuiFormControlLayoutCustomIcon>
                                                                        </div>
                                                                      </EuiFormControlLayoutIcons>
                                                                    </div>
                                                                  </div>
                                                                </EuiFormControlLayout>
                                                              </EuiComboBoxInput>
                                                            </div>
                                                          </EuiComboBox>
                                                        </div>
                                                      </EuiFlexItem>
                                                      <EuiFlexItem
                                                        grow={false}
                                                      >
                                                        <div
                                                          className="euiFlexItem euiFlexItem--flexGrowZero"
                                                        >
                                                          <EuiButtonIcon
                                                            aria-label="Delete"
                                                            color="danger"
                                                            iconType="trash"
                                                            isDisabled={true}
                                                            onClick={[Function]}
                                                          >
                                                            <button
                                                              aria-label="Delete"
                                                              className="euiButtonIcon euiButtonIcon--danger"
                                                              disabled={true}
                                                              onClick={[Function]}
                                                              type="button"
                                                            >
                                                              <EuiIcon
                                                                aria-hidden="true"
                                                                className="euiButtonIcon__icon"
                                                                size="m"
                                                                type="trash"
                                                              >
                                                                <EuiIconEmpty
                                                                  aria-hidden={true}
                                                                  className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonIcon__icon"
                                                                  focusable="false"
                                                                  role="img"
                                                                  style={null}
                                                                >
                                                                  <svg
                                                                    aria-hidden={true}
                                                                    className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonIcon__icon"
                                                                    focusable="false"
                                                                    height={16}
                                                                    role="img"
                                                                    style={null}
                                                                    viewBox="0 0 16 16"
                                                                    width={16}
                                                                    xmlns="http://www.w3.org/2000/svg"
                                                                  />
                                                                </EuiIconEmpty>
                                                              </EuiIcon>
                                                            </button>
                                                          </EuiButtonIcon>
                                                        </div>
                                                      </EuiFlexItem>
                                                    </div>
                                                  </EuiFlexGroup>
                                                </div>
                                              </div>
                                            </EuiFormRow>
                                          </div>
                                        </EuiFlexItem>
                                      </div>
                                    </EuiFlexGroup>
                                  </div>
                                  <Styled(EuiButtonEmpty)
                                    flush="left"
                                    iconType="plusInCircle"
                                    isDisabled={true}
                                    onClick={[Function]}
                                    size="xs"
                                  >
                                    <EuiButtonEmpty
                                      className="c5"
                                      flush="left"
                                      iconType="plusInCircle"
                                      isDisabled={true}
                                      onClick={[Function]}
                                      size="xs"
                                    >
                                      <button
                                        className="euiButtonEmpty euiButtonEmpty--primary euiButtonEmpty--xSmall euiButtonEmpty--flushLeft c5"
                                        disabled={true}
                                        onClick={[Function]}
                                        type="button"
                                      >
                                        <span
                                          className="euiButtonEmpty__content"
                                        >
                                          <EuiIcon
                                            aria-hidden="true"
                                            className="euiButtonEmpty__icon"
                                            size="m"
                                            type="plusInCircle"
                                          >
                                            <EuiIconEmpty
                                              aria-hidden={true}
                                              className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonEmpty__icon"
                                              focusable="false"
                                              role="img"
                                              style={null}
                                            >
                                              <svg
                                                aria-hidden={true}
                                                className="euiIcon euiIcon--medium euiIcon-isLoading euiButtonEmpty__icon"
                                                focusable="false"
                                                height={16}
                                                role="img"
                                                style={null}
                                                viewBox="0 0 16 16"
                                                width={16}
                                                xmlns="http://www.w3.org/2000/svg"
                                              />
                                            </EuiIconEmpty>
                                          </EuiIcon>
                                          <span
                                            className="euiButtonEmpty__text"
                                          >
                                            Add MITRE ATT&CK™ threat
                                          </span>
                                        </span>
                                      </button>
                                    </EuiButtonEmpty>
                                  </Styled(EuiButtonEmpty)>
                                </div>
                              </styled.div>
                            </Component>
                            <Component
                              component={[Function]}
                              componentProps={
                                Object {
                                  "dataTestSubj": "detectionEngineStepAboutRuleDocumentation",
                                  "idAria": "detectionEngineStepAboutRuleDocumentation",
                                  "isDisabled": true,
                                }
                              }
                              path="documentation"
                            >
                              <styled.div>
                                <div
                                  className="c8"
                                >
                                  <EuiFlexGroup
                                    gutterSize="s"
                                  >
                                    <div
                                      className="euiFlexGroup euiFlexGroup--gutterSmall euiFlexGroup--directionRow euiFlexGroup--responsive"
                                    >
                                      <EuiFlexItem
                                        grow={true}
                                      >
                                        <div
                                          className="euiFlexItem"
                                        >
                                          <EuiFormRow
                                            describedByIds={
                                              Array [
                                                "detectionEngineStepAboutRuleDocumentation",
                                              ]
                                            }
                                            display="row"
                                            fullWidth={true}
                                            hasChildLabel={true}
                                            hasEmptyLabelSpace={false}
                                            label="Documentation"
                                            labelAppend={
                                              <EuiText
                                                color="subdued"
                                                size="xs"
                                              >
                                                Optional
                                              </EuiText>
                                            }
                                            labelType="label"
                                          >
                                            <div
                                              className="euiFormRow euiFormRow--fullWidth"
                                              id="jlakt3va-row"
                                            >
                                              <div
                                                className="euiFormRow__labelWrapper"
                                              >
                                                <EuiFormLabel
                                                  className="euiFormRow__label"
                                                  htmlFor="jlakt3va"
                                                  isFocused={false}
                                                  type="label"
                                                >
                                                  <label
                                                    className="euiFormLabel euiFormRow__label"
                                                    htmlFor="jlakt3va"
                                                  >
                                                    Documentation
                                                  </label>
                                                </EuiFormLabel>
                                                 
                                                <EuiText
                                                  color="subdued"
                                                  size="xs"
                                                >
                                                  <div
                                                    className="euiText euiText--extraSmall"
                                                  >
                                                    <EuiTextColor
                                                      color="subdued"
                                                      component="div"
                                                    >
                                                      <div
                                                        className="euiTextColor euiTextColor--subdued"
                                                      >
                                                        Optional
                                                      </div>
                                                    </EuiTextColor>
                                                  </div>
                                                </EuiText>
                                              </div>
                                              <div
                                                className="euiFormRow__fieldWrapper"
                                              >
                                                <NewNote
                                                  aria-describedby="detectionEngineStepAboutRuleDocumentation"
                                                  id="jlakt3va"
                                                  note=""
                                                  noteInputHeight={200}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  updateNewNote={[Function]}
                                                >
                                                  <NewNoteTabs
                                                    data-test-subj="new-note-tabs"
                                                    initialSelectedTab={
                                                      Object {
                                                        "content": <ForwardRef(Styled(EuiTextArea))
                                                          aria-label="Note"
                                                          autoFocus={true}
                                                          data-test-subj="add-a-note"
                                                          fullWidth={true}
                                                          height={200}
                                                          onChange={[Function]}
                                                          placeholder="Add a Note"
                                                          spellCheck={true}
                                                          value=""
                                                        />,
                                                        "id": "note",
                                                        "name": "Note",
                                                      }
                                                    }
                                                    tabs={
                                                      Array [
                                                        Object {
                                                          "content": <ForwardRef(Styled(EuiTextArea))
                                                            aria-label="Note"
                                                            autoFocus={true}
                                                            data-test-subj="add-a-note"
                                                            fullWidth={true}
                                                            height={200}
                                                            onChange={[Function]}
                                                            placeholder="Add a Note"
                                                            spellCheck={true}
                                                            value=""
                                                          />,
                                                          "id": "note",
                                                          "name": "Note",
                                                        },
                                                        Object {
                                                          "content": <ForwardRef(Styled(EuiPanel))
                                                            data-test-subj="markdown-container"
                                                            height={200}
                                                            paddingSize="s"
                                                          >
                                                            <Markdown
                                                              raw=""
                                                            />
                                                          </ForwardRef(Styled(EuiPanel))>,
                                                          "id": "preview",
                                                          "name": "Preview (Markdown)",
                                                        },
                                                      ]
                                                    }
                                                  >
                                                    <EuiTabbedContent
                                                      autoFocus="initial"
                                                      className="c9"
                                                      data-test-subj="new-note-tabs"
                                                      initialSelectedTab={
                                                        Object {
                                                          "content": <ForwardRef(Styled(EuiTextArea))
                                                            aria-label="Note"
                                                            autoFocus={true}
                                                            data-test-subj="add-a-note"
                                                            fullWidth={true}
                                                            height={200}
                                                            onChange={[Function]}
                                                            placeholder="Add a Note"
                                                            spellCheck={true}
                                                            value=""
                                                          />,
                                                          "id": "note",
                                                          "name": "Note",
                                                        }
                                                      }
                                                      tabs={
                                                        Array [
                                                          Object {
                                                            "content": <ForwardRef(Styled(EuiTextArea))
                                                              aria-label="Note"
                                                              autoFocus={true}
                                                              data-test-subj="add-a-note"
                                                              fullWidth={true}
                                                              height={200}
                                                              onChange={[Function]}
                                                              placeholder="Add a Note"
                                                              spellCheck={true}
                                                              value=""
                                                            />,
                                                            "id": "note",
                                                            "name": "Note",
                                                          },
                                                          Object {
                                                            "content": <ForwardRef(Styled(EuiPanel))
                                                              data-test-subj="markdown-container"
                                                              height={200}
                                                              paddingSize="s"
                                                            >
                                                              <Markdown
                                                                raw=""
                                                              />
                                                            </ForwardRef(Styled(EuiPanel))>,
                                                            "id": "preview",
                                                            "name": "Preview (Markdown)",
                                                          },
                                                        ]
                                                      }
                                                    >
                                                      <div
                                                        className="c9"
                                                        data-test-subj="new-note-tabs"
                                                        onFocus={[Function]}
                                                      >
                                                        <EuiTabs>
                                                          <div
                                                            className="euiTabs"
                                                            role="tablist"
                                                          >
                                                            <EuiTab
                                                              aria-controls="if8366da0-5ef0-11ea-82c7-75b2dcdadbb0_fa4c0730-5ef0-11ea-82c7-75b2dcdadbb0"
                                                              id="note"
                                                              isSelected={true}
                                                              key="note"
                                                              onClick={[Function]}
                                                            >
                                                              <button
                                                                aria-controls="if8366da0-5ef0-11ea-82c7-75b2dcdadbb0_fa4c0730-5ef0-11ea-82c7-75b2dcdadbb0"
                                                                aria-selected={true}
                                                                className="euiTab euiTab-isSelected"
                                                                id="note"
                                                                onClick={[Function]}
                                                                role="tab"
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="euiTab__content"
                                                                >
                                                                  Note
                                                                </span>
                                                              </button>
                                                            </EuiTab>
                                                            <EuiTab
                                                              aria-controls="if8366da0-5ef0-11ea-82c7-75b2dcdadbb0_fa4c0730-5ef0-11ea-82c7-75b2dcdadbb0"
                                                              id="preview"
                                                              isSelected={false}
                                                              key="preview"
                                                              onClick={[Function]}
                                                            >
                                                              <button
                                                                aria-controls="if8366da0-5ef0-11ea-82c7-75b2dcdadbb0_fa4c0730-5ef0-11ea-82c7-75b2dcdadbb0"
                                                                aria-selected={false}
                                                                className="euiTab"
                                                                id="preview"
                                                                onClick={[Function]}
                                                                role="tab"
                                                                type="button"
                                                              >
                                                                <span
                                                                  className="euiTab__content"
                                                                >
                                                                  Preview (Markdown)
                                                                </span>
                                                              </button>
                                                            </EuiTab>
                                                          </div>
                                                        </EuiTabs>
                                                        <div
                                                          aria-labelledby="note"
                                                          id="if8366da0-5ef0-11ea-82c7-75b2dcdadbb0_fa4c0730-5ef0-11ea-82c7-75b2dcdadbb0"
                                                          role="tabpanel"
                                                        >
                                                          <TextArea
                                                            aria-label="Note"
                                                            autoFocus={true}
                                                            data-test-subj="add-a-note"
                                                            fullWidth={true}
                                                            height={200}
                                                            onChange={[Function]}
                                                            placeholder="Add a Note"
                                                            spellCheck={true}
                                                            value=""
                                                          >
                                                            <EuiTextArea
                                                              aria-label="Note"
                                                              autoFocus={true}
                                                              className="c10"
                                                              data-test-subj="add-a-note"
                                                              fullWidth={true}
                                                              height={200}
                                                              onChange={[Function]}
                                                              placeholder="Add a Note"
                                                              spellCheck={true}
                                                              value=""
                                                            >
                                                              <EuiValidatableControl>
                                                                <textarea
                                                                  aria-label="Note"
                                                                  autoFocus={true}
                                                                  className="euiTextArea euiTextArea--resizeVertical euiTextArea--fullWidth c10"
                                                                  data-test-subj="add-a-note"
                                                                  height={200}
                                                                  onChange={[Function]}
                                                                  placeholder="Add a Note"
                                                                  rows={6}
                                                                  spellCheck={true}
                                                                  value=""
                                                                />
                                                              </EuiValidatableControl>
                                                            </EuiTextArea>
                                                          </TextArea>
                                                        </div>
                                                      </div>
                                                    </EuiTabbedContent>
                                                  </NewNoteTabs>
                                                </NewNote>
                                              </div>
                                            </div>
                                          </EuiFormRow>
                                        </div>
                                      </EuiFlexItem>
                                    </div>
                                  </EuiFlexGroup>
                                </div>
                              </styled.div>
                            </Component>
                          </div>
                        </div>
                      </EuiMutationObserver>
                    </div>
                  </div>
                </EuiAccordion>
              </Styled(EuiAccordion)>
              <Component
                pathsToWatch="severity"
              />
            </div>
          </EuiForm>
        </FormProvider>
      </Form>
    </div>
  </styled.div>
  <EuiHorizontalRule
    margin="m"
  >
    <hr
      className="euiHorizontalRule euiHorizontalRule--full euiHorizontalRule--marginMedium"
    />
  </EuiHorizontalRule>
  <EuiFlexGroup
    alignItems="center"
    gutterSize="xs"
    justifyContent="flexEnd"
    responsive={false}
  >
    <div
      className="euiFlexGroup euiFlexGroup--gutterExtraSmall euiFlexGroup--alignItemsCenter euiFlexGroup--justifyContentFlexEnd euiFlexGroup--directionRow"
    >
      <EuiFlexItem
        grow={false}
      >
        <div
          className="euiFlexItem euiFlexItem--flexGrowZero"
        >
          <EuiButton
            fill={true}
            isDisabled={true}
            onClick={[Function]}
          >
            <button
              className="euiButton euiButton--primary euiButton--fill"
              disabled={true}
              onClick={[Function]}
              type="button"
            >
              <span
                className="euiButton__content"
              >
                <span
                  className="euiButton__text"
                >
                  Continue
                </span>
              </span>
            </button>
          </EuiButton>
        </div>
      </EuiFlexItem>
    </div>
  </EuiFlexGroup>
</StepAboutRuleComponent>
`;
