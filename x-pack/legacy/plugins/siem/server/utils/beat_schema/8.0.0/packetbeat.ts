/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License;
 * you may not use this file except in compliance with the Elastic License.
 */

/**
 * An instance of the unmodified schema exported from auditbeat-8.0.0-SNAPSHOT-darwin-x86_64.tar.gz
 *
 */

import { Schema } from '../type';

export const packetbeatSchema: Schema = [
  {
    key: 'ecs',
    title: 'ECS',
    description: 'ECS Fields.',
    fields: [
      {
        name: '@timestamp',
        level: 'core',
        required: true,
        type: 'date',
        description:
          'Date/time when the event originated.\n\nThis is the date/time extracted from the event, typically representing when\nthe event was generated by the source.\n\nIf the event source has no original timestamp, this value is typically populated\nby the first time the event was received by the pipeline.\n\nRequired field for all events.',
        example: '2016-05-23T08:05:34.853Z',
      },
      {
        name: 'labels',
        level: 'core',
        type: 'object',
        object_type: 'keyword',
        description:
          'Custom key/value pairs.\n\nCan be used to add meta information to events. Should not contain nested objects.\nAll values are stored as keyword.\n\nExample: `docker` and `k8s` labels.',
        example: '{"application": "foo-bar", "env": "production"}',
      },
      {
        name: 'message',
        level: 'core',
        type: 'text',
        description:
          'For log events the message field contains the log message, optimized\nfor viewing in a log viewer.\n\nFor structured logs without an original message field, other fields can be concatenated\nto form a human-readable summary of the event.\n\nIf multiple messages exist, they can be combined into one message.',
        example: 'Hello World',
      },
      {
        name: 'tags',
        level: 'core',
        type: 'keyword',
        ignore_above: 1024,
        description: 'List of keywords used to tag each event.',
        example: '["production", "env2"]',
      },
      {
        name: 'agent',
        title: 'Agent',
        group: 2,
        description:
          'The agent fields contain the data about the software entity, if\nany, that collects, detects, or observes events on a host, or takes measurements\non a host.\n\nExamples include Beats. Agents may also run on observers. ECS agent.* fields\nshall be populated with details of the agent running on the host or observer\nwhere the event happened or the measurement was taken.',
        footnote:
          'Examples: In the case of Beats for logs, the agent.name is filebeat.\nFor APM, it is the agent running in the app/service. The agent information does\nnot change if data is sent through queuing systems like Kafka, Redis, or processing\nsystems such as Logstash or APM Server.',
        type: 'group',
        fields: [
          {
            name: 'ephemeral_id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Ephemeral identifier of this agent (if one exists).\n\nThis id normally changes across restarts, but `agent.id` does not.',
            example: '8a4f500f',
          },
          {
            name: 'id',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique identifier of this agent (if one exists).\n\nExample: For Beats this would be beat.id.',
            example: '8a4f500d',
          },
          {
            name: 'name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Custom name of the agent.\n\nThis is a name that can be given to an agent. This can be helpful if for example\ntwo Filebeat instances are running on the same host but a human readable separation\nis needed on which Filebeat instance data is coming from.\n\nIf no name is given, the name is often left empty.',
            example: 'foo',
          },
          {
            name: 'type',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Type of the agent.\n\nThe agent type stays always the same and should be given by the agent used.\nIn case of Filebeat the agent would always be Filebeat also if two Filebeat\ninstances are run on the same machine.',
            example: 'filebeat',
          },
          {
            name: 'version',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Version of the agent.',
            example: '6.0.0-rc2',
          },
        ],
      },
      {
        name: 'as',
        title: 'Autonomous System',
        group: 2,
        description:
          'An autonomous system (AS) is a collection of connected Internet Protocol\n(IP) routing prefixes under the control of one or more network operators on\nbehalf of a single administrative entity or domain that presents a common, clearly\ndefined routing policy to the internet.',
        type: 'group',
        fields: [
          {
            name: 'number',
            level: 'extended',
            type: 'long',
            description:
              'Unique number allocated to the autonomous system. The autonomous\nsystem number (ASN) uniquely identifies each network on the Internet.',
            example: 15169,
          },
          {
            name: 'organization.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Organization name.',
            example: 'Google LLC',
          },
        ],
      },
      {
        name: 'client',
        title: 'Client',
        group: 2,
        description:
          'A client is defined as the initiator of a network connection for\nevents regarding sessions, connections, or bidirectional flow records.\n\nFor TCP events, the client is the initiator of the TCP connection that sends\nthe SYN packet(s). For other protocols, the client is generally the initiator\nor requestor in the network transaction. Some systems use the term "originator"\nto refer the client in TCP connections. The client fields describe details about\nthe system acting as the client in the network event. Client fields are usually\npopulated in conjunction with server fields. Client fields are generally not\npopulated for packet-level events.\n\nClient / server representations can add semantic context to an exchange, which\nis helpful to visualize the data in certain situations. If your context falls\nin that category, you should still ensure that source and destination are filled\nappropriately.',
        type: 'group',
        fields: [
          {
            name: 'address',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Some event client addresses are defined ambiguously. The event\nwill sometimes list an IP, a domain or a unix socket.  You should always store\nthe raw address in the `.address` field.\n\nThen it should be duplicated to `.ip` or `.domain`, depending on which one\nit is.',
          },
          {
            name: 'as.number',
            level: 'extended',
            type: 'long',
            description:
              'Unique number allocated to the autonomous system. The autonomous\nsystem number (ASN) uniquely identifies each network on the Internet.',
            example: 15169,
          },
          {
            name: 'as.organization.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Organization name.',
            example: 'Google LLC',
          },
          {
            name: 'bytes',
            level: 'core',
            type: 'long',
            format: 'bytes',
            description: 'Bytes sent from the client to the server.',
            example: 184,
          },
          {
            name: 'domain',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Client domain.',
          },
          {
            name: 'geo.city_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'City name.',
            example: 'Montreal',
          },
          {
            name: 'geo.continent_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the continent.',
            example: 'North America',
          },
          {
            name: 'geo.country_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country ISO code.',
            example: 'CA',
          },
          {
            name: 'geo.country_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country name.',
            example: 'Canada',
          },
          {
            name: 'geo.location',
            level: 'core',
            type: 'geo_point',
            description: 'Longitude and latitude.',
            example: '{ "lon": -73.614830, "lat": 45.505918 }',
          },
          {
            name: 'geo.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'User-defined description of a location, at the level of granularity\nthey care about.\n\nCould be the name of their data centers, the floor number, if this describes\na local physical entity, city names.\n\nNot typically used in automated geolocation.',
            example: 'boston-dc',
          },
          {
            name: 'geo.region_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region ISO code.',
            example: 'CA-QC',
          },
          {
            name: 'geo.region_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region name.',
            example: 'Quebec',
          },
          {
            name: 'ip',
            level: 'core',
            type: 'ip',
            description:
              'IP address of the client.\n\nCan be one or multiple IPv4 or IPv6 addresses.',
          },
          {
            name: 'mac',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'MAC address of the client.',
          },
          {
            name: 'nat.ip',
            level: 'extended',
            type: 'ip',
            description:
              'Translated IP of source based NAT sessions (e.g. internal client\nto internet).\n\nTypically connections traversing load balancers, firewalls, or routers.',
          },
          {
            name: 'nat.port',
            level: 'extended',
            type: 'long',
            format: 'string',
            description:
              'Translated port of source based NAT sessions (e.g. internal client\nto internet).\n\nTypically connections traversing load balancers, firewalls, or routers.',
          },
          {
            name: 'packets',
            level: 'core',
            type: 'long',
            description: 'Packets sent from the client to the server.',
            example: 12,
          },
          {
            name: 'port',
            level: 'core',
            type: 'long',
            format: 'string',
            description: 'Port of the client.',
          },
          {
            name: 'registered_domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The highest registered client domain, stripped of the subdomain.\n\nFor example, the registered domain for "foo.google.com" is "google.com".\n\nThis value can be determined precisely with a list like the public suffix\nlist (http://publicsuffix.org). Trying to approximate this by simply taking\nthe last two labels will not work well for TLDs such as "co.uk".',
            example: 'google.com',
          },
          {
            name: 'top_level_domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The effective top level domain (eTLD), also known as the domain\nsuffix, is the last part of the domain name. For example, the top level domain\nfor google.com is "com".\n\nThis value can be determined precisely with a list like the public suffix\nlist (http://publicsuffix.org). Trying to approximate this by simply taking\nthe last label will not work well for effective TLDs such as "co.uk".',
            example: 'co.uk',
          },
          {
            name: 'user.domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the user is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'user.email',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'User email address.',
          },
          {
            name: 'user.full_name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: "User's full name, if available.",
            example: 'Albert Einstein',
          },
          {
            name: 'user.group.domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the group is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'user.group.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifier for the group on the system/platform.',
          },
          {
            name: 'user.group.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the group.',
          },
          {
            name: 'user.hash',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique user hash to correlate information for a user in anonymized\nform.\n\nUseful if `user.id` or `user.name` contain confidential information and cannot\nbe used.',
          },
          {
            name: 'user.id',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifiers of the user.',
          },
          {
            name: 'user.name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Short name or login of the user.',
            example: 'albert',
          },
        ],
      },
      {
        name: 'cloud',
        title: 'Cloud',
        group: 2,
        description: 'Fields related to the cloud or infrastructure the events are coming\nfrom.',
        footnote:
          'Examples: If Metricbeat is running on an EC2 host and fetches data\nfrom its host, the cloud info contains the data about this machine. If Metricbeat\nruns on a remote machine outside the cloud and fetches data from a service running\nin the cloud, the field contains cloud data from the machine the service is\nrunning on.',
        type: 'group',
        fields: [
          {
            name: 'account.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The cloud account or organization id used to identify different\nentities in a multi-tenant environment.\n\nExamples: AWS account id, Google Cloud ORG Id, or other unique identifier.',
            example: 666777888999,
          },
          {
            name: 'availability_zone',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Availability zone in which this host is running.',
            example: 'us-east-1c',
          },
          {
            name: 'instance.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Instance ID of the host machine.',
            example: 'i-1234567890abcdef0',
          },
          {
            name: 'instance.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Instance name of the host machine.',
          },
          {
            name: 'machine.type',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Machine type of the host machine.',
            example: 't2.medium',
          },
          {
            name: 'provider',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the cloud provider. Example values are aws, azure, gcp,\nor digitalocean.',
            example: 'aws',
          },
          {
            name: 'region',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region in which this host is running.',
            example: 'us-east-1',
          },
        ],
      },
      {
        name: 'code_signature',
        title: 'Code Signature',
        group: 2,
        description: 'These fields contain information about binary code signatures.',
        type: 'group',
        fields: [
          {
            name: 'exists',
            level: 'core',
            type: 'boolean',
            description: 'Boolean to capture if a signature is present.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'status',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Additional information about the certificate status.\n\nThis is useful for logging cryptographic errors with the certificate validity\nor trust status. Leave unpopulated if the validity or trust of the certificate\nwas unchecked.',
            example: 'ERROR_UNTRUSTED_ROOT',
            default_field: false,
          },
          {
            name: 'subject_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Subject name of the code signer',
            example: 'Microsoft Corporation',
            default_field: false,
          },
          {
            name: 'trusted',
            level: 'extended',
            type: 'boolean',
            description:
              'Stores the trust status of the certificate chain.\n\nValidating the trust of the certificate chain may be complicated, and this\nfield should only be populated by tools that actively check the status.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'valid',
            level: 'extended',
            type: 'boolean',
            description:
              'Boolean to capture if the digital signature is verified against\nthe binary content.\n\nLeave unpopulated if a certificate was unchecked.',
            example: 'true',
            default_field: false,
          },
        ],
      },
      {
        name: 'container',
        title: 'Container',
        group: 2,
        description:
          'Container fields are used for meta information about the specific\ncontainer that is the source of information.\n\nThese fields help correlate data based containers from any runtime.',
        type: 'group',
        fields: [
          {
            name: 'id',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique container id.',
          },
          {
            name: 'image.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the image the container was built on.',
          },
          {
            name: 'image.tag',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Container image tags.',
          },
          {
            name: 'labels',
            level: 'extended',
            type: 'object',
            object_type: 'keyword',
            description: 'Image labels.',
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Container name.',
          },
          {
            name: 'runtime',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Runtime managing this container.',
            example: 'docker',
          },
        ],
      },
      {
        name: 'destination',
        title: 'Destination',
        group: 2,
        description:
          'Destination fields describe details about the destination of a packet/event.\n\nDestination fields are usually populated in conjunction with source fields.',
        type: 'group',
        fields: [
          {
            name: 'address',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Some event destination addresses are defined ambiguously. The\nevent will sometimes list an IP, a domain or a unix socket.  You should always\nstore the raw address in the `.address` field.\n\nThen it should be duplicated to `.ip` or `.domain`, depending on which one\nit is.',
          },
          {
            name: 'as.number',
            level: 'extended',
            type: 'long',
            description:
              'Unique number allocated to the autonomous system. The autonomous\nsystem number (ASN) uniquely identifies each network on the Internet.',
            example: 15169,
          },
          {
            name: 'as.organization.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Organization name.',
            example: 'Google LLC',
          },
          {
            name: 'bytes',
            level: 'core',
            type: 'long',
            format: 'bytes',
            description: 'Bytes sent from the destination to the source.',
            example: 184,
          },
          {
            name: 'domain',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Destination domain.',
          },
          {
            name: 'geo.city_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'City name.',
            example: 'Montreal',
          },
          {
            name: 'geo.continent_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the continent.',
            example: 'North America',
          },
          {
            name: 'geo.country_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country ISO code.',
            example: 'CA',
          },
          {
            name: 'geo.country_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country name.',
            example: 'Canada',
          },
          {
            name: 'geo.location',
            level: 'core',
            type: 'geo_point',
            description: 'Longitude and latitude.',
            example: '{ "lon": -73.614830, "lat": 45.505918 }',
          },
          {
            name: 'geo.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'User-defined description of a location, at the level of granularity\nthey care about.\n\nCould be the name of their data centers, the floor number, if this describes\na local physical entity, city names.\n\nNot typically used in automated geolocation.',
            example: 'boston-dc',
          },
          {
            name: 'geo.region_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region ISO code.',
            example: 'CA-QC',
          },
          {
            name: 'geo.region_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region name.',
            example: 'Quebec',
          },
          {
            name: 'ip',
            level: 'core',
            type: 'ip',
            description:
              'IP address of the destination.\n\nCan be one or multiple IPv4 or IPv6 addresses.',
          },
          {
            name: 'mac',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'MAC address of the destination.',
          },
          {
            name: 'nat.ip',
            level: 'extended',
            type: 'ip',
            description:
              'Translated ip of destination based NAT sessions (e.g. internet\nto private DMZ)\n\nTypically used with load balancers, firewalls, or routers.',
          },
          {
            name: 'nat.port',
            level: 'extended',
            type: 'long',
            format: 'string',
            description:
              'Port the source session is translated to by NAT Device.\n\nTypically used with load balancers, firewalls, or routers.',
          },
          {
            name: 'packets',
            level: 'core',
            type: 'long',
            description: 'Packets sent from the destination to the source.',
            example: 12,
          },
          {
            name: 'port',
            level: 'core',
            type: 'long',
            format: 'string',
            description: 'Port of the destination.',
          },
          {
            name: 'registered_domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The highest registered destination domain, stripped of the subdomain.\n\nFor example, the registered domain for "foo.google.com" is "google.com".\n\nThis value can be determined precisely with a list like the public suffix\nlist (http://publicsuffix.org). Trying to approximate this by simply taking\nthe last two labels will not work well for TLDs such as "co.uk".',
            example: 'google.com',
          },
          {
            name: 'top_level_domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The effective top level domain (eTLD), also known as the domain\nsuffix, is the last part of the domain name. For example, the top level domain\nfor google.com is "com".\n\nThis value can be determined precisely with a list like the public suffix\nlist (http://publicsuffix.org). Trying to approximate this by simply taking\nthe last label will not work well for effective TLDs such as "co.uk".',
            example: 'co.uk',
          },
          {
            name: 'user.domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the user is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'user.email',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'User email address.',
          },
          {
            name: 'user.full_name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: "User's full name, if available.",
            example: 'Albert Einstein',
          },
          {
            name: 'user.group.domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the group is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'user.group.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifier for the group on the system/platform.',
          },
          {
            name: 'user.group.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the group.',
          },
          {
            name: 'user.hash',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique user hash to correlate information for a user in anonymized\nform.\n\nUseful if `user.id` or `user.name` contain confidential information and cannot\nbe used.',
          },
          {
            name: 'user.id',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifiers of the user.',
          },
          {
            name: 'user.name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Short name or login of the user.',
            example: 'albert',
          },
        ],
      },
      {
        name: 'dll',
        title: 'DLL',
        group: 2,
        description:
          'These fields contain information about code libraries dynamically\nloaded into processes.\n\n\nMany operating systems refer to "shared code libraries" with different names,\nbut this field set refers to all of the following:\n\n* Dynamic-link library (`.dll`) commonly used on Windows\n\n* Shared Object (`.so`) commonly used on Unix-like operating systems\n\n* Dynamic library (`.dylib`) commonly used on macOS',
        type: 'group',
        fields: [
          {
            name: 'code_signature.exists',
            level: 'core',
            type: 'boolean',
            description: 'Boolean to capture if a signature is present.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'code_signature.status',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Additional information about the certificate status.\n\nThis is useful for logging cryptographic errors with the certificate validity\nor trust status. Leave unpopulated if the validity or trust of the certificate\nwas unchecked.',
            example: 'ERROR_UNTRUSTED_ROOT',
            default_field: false,
          },
          {
            name: 'code_signature.subject_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Subject name of the code signer',
            example: 'Microsoft Corporation',
            default_field: false,
          },
          {
            name: 'code_signature.trusted',
            level: 'extended',
            type: 'boolean',
            description:
              'Stores the trust status of the certificate chain.\n\nValidating the trust of the certificate chain may be complicated, and this\nfield should only be populated by tools that actively check the status.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'code_signature.valid',
            level: 'extended',
            type: 'boolean',
            description:
              'Boolean to capture if the digital signature is verified against\nthe binary content.\n\nLeave unpopulated if a certificate was unchecked.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'hash.md5',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'MD5 hash.',
            default_field: false,
          },
          {
            name: 'hash.sha1',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA1 hash.',
            default_field: false,
          },
          {
            name: 'hash.sha256',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA256 hash.',
            default_field: false,
          },
          {
            name: 'hash.sha512',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA512 hash.',
            default_field: false,
          },
          {
            name: 'name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the library.\n\nThis generally maps to the name of the file on disk.',
            example: 'kernel32.dll',
            default_field: false,
          },
          {
            name: 'path',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Full file path of the library.',
            example: 'C:\\Windows\\System32\\kernel32.dll',
            default_field: false,
          },
          {
            name: 'pe.company',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal company name of the file, provided at compile-time.',
            example: 'Microsoft Corporation',
            default_field: false,
          },
          {
            name: 'pe.description',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal description of the file, provided at compile-time.',
            example: 'Paint',
            default_field: false,
          },
          {
            name: 'pe.file_version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal version of the file, provided at compile-time.',
            example: '6.3.9600.17415',
            default_field: false,
          },
          {
            name: 'pe.original_file_name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal name of the file, provided at compile-time.',
            example: 'MSPAINT.EXE',
            default_field: false,
          },
          {
            name: 'pe.product',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal product name of the file, provided at compile-time.',
            example: 'MicrosoftÂ® WindowsÂ® Operating System',
            default_field: false,
          },
        ],
      },
      {
        name: 'dns',
        title: 'DNS',
        group: 2,
        description:
          'Fields describing DNS queries and answers.\n\nDNS events should either represent a single DNS query prior to getting answers\n(`dns.type:query`) or they should represent a full exchange and contain the\nquery details as well as all of the answers that were provided for this query\n(`dns.type:answer`).',
        type: 'group',
        fields: [
          {
            name: 'answers',
            level: 'extended',
            type: 'object',
            object_type: 'keyword',
            description:
              'An array containing an object for each answer section returned\nby the server.\n\nThe main keys that should be present in these objects are defined by ECS.\nRecords that have more information may contain more keys than what ECS defines.\n\nNot all DNS data sources give all details about DNS answers. At minimum, answer\nobjects must contain the `data` key. If more information is available, map\nas much of it to ECS as possible, and add any additional fields to the answer\nobjects as custom fields.',
          },
          {
            name: 'answers.class',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The class of DNS data contained in this resource record.',
            example: 'IN',
          },
          {
            name: 'answers.data',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The data describing the resource.\n\nThe meaning of this data depends on the type and class of the resource record.',
            example: '10.10.10.10',
          },
          {
            name: 'answers.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The domain name to which this resource record pertains.\n\nIf a chain of CNAME is being resolved, each answer `name` should be the\none that corresponds with the answer `data`. It should not simply be the\noriginal `question.name` repeated.',
            example: 'www.google.com',
          },
          {
            name: 'answers.ttl',
            level: 'extended',
            type: 'long',
            description:
              'The time interval in seconds that this resource record may be cached\nbefore it should be discarded. Zero values mean that the data should not be\ncached.',
            example: 180,
          },
          {
            name: 'answers.type',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The type of data contained in this resource record.',
            example: 'CNAME',
          },
          {
            name: 'header_flags',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Array of 2 letter DNS header flags.\n\nExpected values are: AA, TC, RD, RA, AD, CD, DO.',
            example: ['RD', 'RA'],
          },
          {
            name: 'id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The DNS packet identifier assigned by the program that generated\nthe query. The identifier is copied to the response.',
            example: 62111,
          },
          {
            name: 'op_code',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The DNS operation code that specifies the kind of query in the\nmessage. This value is set by the originator of a query and copied into the\nresponse.',
            example: 'QUERY',
          },
          {
            name: 'question.class',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The class of records being queried.',
            example: 'IN',
          },
          {
            name: 'question.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The name being queried.\n\nIf the name field contains non-printable characters (below 32 or above 126),\nthose characters should be represented as escaped base 10 integers (\\DDD).\nBack slashes and quotes should be escaped. Tabs, carriage returns, and line\nfeeds should be converted to \\t, \\r, and \\n respectively.',
            example: 'www.google.com',
          },
          {
            name: 'question.registered_domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The highest registered domain, stripped of the subdomain.\n\nFor example, the registered domain for "foo.google.com" is "google.com".\n\nThis value can be determined precisely with a list like the public suffix\nlist (http://publicsuffix.org). Trying to approximate this by simply taking\nthe last two labels will not work well for TLDs such as "co.uk".',
            example: 'google.com',
          },
          {
            name: 'question.subdomain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The subdomain is all of the labels under the registered_domain.\n\nIf the domain has multiple levels of subdomain, such as "sub2.sub1.example.com",\nthe subdomain field should contain "sub2.sub1", with no trailing period.',
            example: 'www',
          },
          {
            name: 'question.top_level_domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The effective top level domain (eTLD), also known as the domain\nsuffix, is the last part of the domain name. For example, the top level domain\nfor google.com is "com".\n\nThis value can be determined precisely with a list like the public suffix\nlist (http://publicsuffix.org). Trying to approximate this by simply taking\nthe last label will not work well for effective TLDs such as "co.uk".',
            example: 'co.uk',
          },
          {
            name: 'question.type',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The type of record being queried.',
            example: 'AAAA',
          },
          {
            name: 'resolved_ip',
            level: 'extended',
            type: 'ip',
            description:
              'Array containing all IPs seen in `answers.data`.\n\nThe `answers` array can be difficult to use, because of the variety of data\nformats it can contain. Extracting all IP addresses seen in there to `dns.resolved_ip`\nmakes it possible to index them as IP addresses, and makes them easier to\nvisualize and query for.',
            example: ['10.10.10.10', '10.10.10.11'],
          },
          {
            name: 'response_code',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The DNS response code.',
            example: 'NOERROR',
          },
          {
            name: 'type',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The type of DNS event captured, query or answer.\n\nIf your source of DNS events only gives you DNS queries, you should only create\ndns events of type `dns.type:query`.\n\nIf your source of DNS events gives you answers as well, you should create\none event per query (optionally as soon as the query is seen). And a second\nevent containing all query details as well as an array of answers.',
            example: 'answer',
          },
        ],
      },
      {
        name: 'ecs',
        title: 'ECS',
        group: 2,
        description: 'Meta-information specific to ECS.',
        type: 'group',
        fields: [
          {
            name: 'version',
            level: 'core',
            required: true,
            type: 'keyword',
            ignore_above: 1024,
            description:
              'ECS version this event conforms to. `ecs.version` is a required\nfield and must exist in all events.\n\nWhen querying across multiple indices -- which may conform to slightly different\nECS versions -- this field lets integrations adjust to the schema version\nof the events.',
            example: '1.0.0',
          },
        ],
      },
      {
        name: 'error',
        title: 'Error',
        group: 2,
        description:
          'These fields can represent errors of any kind.\n\nUse them for errors that happen while fetching events or in cases where the\nevent itself contains an error.',
        type: 'group',
        fields: [
          {
            name: 'code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Error code describing the error.',
          },
          {
            name: 'id',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifier for the error.',
          },
          {
            name: 'message',
            level: 'core',
            type: 'text',
            description: 'Error message.',
          },
          {
            name: 'stack_trace',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'The stack trace of this error in plain text.',
          },
          {
            name: 'type',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The type of the error, for example the class name of the exception.',
            example: 'java.lang.NullPointerException',
          },
        ],
      },
      {
        name: 'event',
        title: 'Event',
        group: 2,
        description:
          'The event fields are used for context information about the log\nor metric event itself.\n\nA log is defined as an event containing details of something that happened.\nLog events must include the time at which the thing happened. Examples of log\nevents include a process starting on a host, a network packet being sent from\na source to a destination, or a network connection between a client and a server\nbeing initiated or closed. A metric is defined as an event containing one or\nmore numerical measurements and the time at which the measurement was taken.\nExamples of metric events include memory pressure measured on a host and device\ntemperature. See the `event.kind` definition in this section for additional\ndetails about metric and state events.',
        type: 'group',
        fields: [
          {
            name: 'action',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The action captured by the event.\n\nThis describes the information in the event. It is more specific than `event.category`.\nExamples are `group-add`, `process-started`, `file-created`. The value is\nnormally defined by the implementer.',
            example: 'user-password-change',
          },
          {
            name: 'category',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'This is one of four ECS Categorization Fields, and indicates the\nsecond level in the ECS category hierarchy.\n\n`event.category` represents the "big buckets" of ECS categories. For example,\nfiltering on `event.category:process` yields all events relating to process\nactivity. This field is closely related to `event.type`, which is used as\na subcategory.\n\nThis field is an array. This will allow proper categorization of some events\nthat fall in multiple categories.',
            example: 'authentication',
          },
          {
            name: 'code',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Identification code for this event, if one exists.\n\nSome event sources use event codes to identify messages unambiguously, regardless\nof message language or wording adjustments over time. An example of this is\nthe Windows Event ID.',
            example: 4648,
          },
          {
            name: 'created',
            level: 'core',
            type: 'date',
            description:
              'event.created contains the date/time when the event was first\nread by an agent, or by your pipeline.\n\nThis field is distinct from @timestamp in that @timestamp typically contain\nthe time extracted from the original event.\n\nIn most situations, these two timestamps will be slightly different. The difference\ncan be used to calculate the delay between your source generating an event,\nand the time when your agent first processed it. This can be used to monitor\nyour agent or pipeline ability to keep up with your event source.\n\nIn case the two timestamps are identical, @timestamp should be used.',
            example: '2016-05-23T08:05:34.857Z',
          },
          {
            name: 'dataset',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the dataset.\n\nIf an event source publishes more than one type of log or events (e.g. access\nlog, error log), the dataset is used to specify which one the event comes\nfrom.\n\nIt is recommended but not required to start the dataset name with the module\nname, followed by a dot, then the dataset name.',
            example: 'apache.access',
          },
          {
            name: 'duration',
            level: 'core',
            type: 'long',
            format: 'duration',
            input_format: 'nanoseconds',
            output_format: 'asMilliseconds',
            output_precision: 1,
            description:
              'Duration of the event in nanoseconds.\n\nIf event.start and event.end are known this value should be the difference\nbetween the end and start time.',
          },
          {
            name: 'end',
            level: 'extended',
            type: 'date',
            description:
              'event.end contains the date when the event ended or when the activity\nwas last observed.',
          },
          {
            name: 'hash',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Hash (perhaps logstash fingerprint) of raw field to be able to\ndemonstrate log integrity.',
            example: '123456789012345678901234567890ABCD',
          },
          {
            name: 'id',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique ID to describe the event.',
            example: '8a4f500d',
          },
          {
            name: 'ingested',
            level: 'core',
            type: 'date',
            description:
              'Timestamp when an event arrived in the central data store.\n\nThis is different from `@timestamp`, which is when the event originally occurred.  It is\nalso different from `event.created`, which is meant to capture the first time\nan agent saw the event.\n\nIn normal conditions, assuming no tampering, the timestamps should chronologically\nlook like this: `@timestamp` < `event.created` < `event.ingested`.',
            example: '2016-05-23T08:05:35.101Z',
            default_field: false,
          },
          {
            name: 'kind',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'This is one of four ECS Categorization Fields, and indicates the\nhighest level in the ECS category hierarchy.\n\n`event.kind` gives high-level information about what type of information the\nevent contains, without being specific to the contents of the event. For example,\nvalues of this field distinguish alert events from metric events.\n\nThe value of this field can be used to inform how these kinds of events should\nbe handled. They may warrant different retention, different access control,\nit may also help understand whether the data coming in at a regular interval\nor not.',
            example: 'alert',
          },
          {
            name: 'module',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the module this data is coming from.\n\nIf your monitoring agent supports the concept of modules or plugins to process\nevents of a given source (e.g. Apache logs), `event.module` should contain\nthe name of this module.',
            example: 'apache',
          },
          {
            name: 'original',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Raw text message of entire event. Used to demonstrate log integrity.\n\nThis field is not indexed and doc_values are disabled. It cannot be searched,\nbut it can be retrieved from `_source`.',
            example:
              'Sep 19 08:26:10 host CEF:0&#124;Security&#124; threatmanager&#124;1.0&#124;100&#124;\nworm successfully stopped&#124;10&#124;src=10.0.0.1 dst=2.1.2.2spt=1232',
          },
          {
            name: 'outcome',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'This is one of four ECS Categorization Fields, and indicates the\nlowest level in the ECS category hierarchy.\n\n`event.outcome` simply denotes whether the event represents a success or a\nfailure from the perspective of the entity that produced the event.\n\nNote that when a single transaction is described in multiple events, each\nevent may populate different values of `event.outcome`, according to their\nperspective.\n\nAlso note that in the case of a compound event (a single event that contains\nmultiple logical events), this field should be populated with the value that\nbest captures the overall success or failure from the perspective of the event\nproducer.\n\nFurther note that not all events will have an associated outcome. For example,\nthis field is generally not populated for metric events, events with `event.type:info`,\nor any events for which an outcome does not make logical sense.',
            example: 'success',
          },
          {
            name: 'provider',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Source of the event.\n\nEvent transports such as Syslog or the Windows Event Log typically mention\nthe source of an event. It can be the name of the software that generated\nthe event (e.g. Sysmon, httpd), or of a subsystem of the operating system\n(kernel, Microsoft-Windows-Security-Auditing).',
            example: 'kernel',
          },
          {
            name: 'reference',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Reference URL linking to additional information about this event.\n\nThis URL links to a static definition of the this event. Alert events, indicated\nby `event.kind:alert`, are a common use case for this field.',
            example: 'https://system.vendor.com/event/#0001234',
            default_field: false,
          },
          {
            name: 'risk_score',
            level: 'core',
            type: 'float',
            description:
              "Risk score or priority of the event (e.g. security solutions).\nUse your system's original value here.",
          },
          {
            name: 'risk_score_norm',
            level: 'extended',
            type: 'float',
            description:
              'Normalized risk score or priority of the event, on a scale of\n0 to 100.\n\nThis is mainly useful if you use more than one system that assigns risk scores,\nand you want to see a normalized value across all systems.',
          },
          {
            name: 'sequence',
            level: 'extended',
            type: 'long',
            format: 'string',
            description:
              'Sequence number of the event.\n\nThe sequence number is a value published by some event sources, to make the\nexact ordering of events unambiguous, regardless of the timestamp precision.',
          },
          {
            name: 'severity',
            level: 'core',
            type: 'long',
            format: 'string',
            description:
              'The numeric severity of the event according to your event source.\n\nWhat the different severity values mean can be different between sources and\nuse cases. It is up to the implementer to make sure severities are consistent\nacross events from the same source.\n\nThe Syslog severity belongs in `log.syslog.severity.code`. `event.severity`\nis meant to represent the severity according to the event source (e.g. firewall,\nIDS). If the event source does not publish its own severity, you may optionally\ncopy the `log.syslog.severity.code` to `event.severity`.',
            example: 7,
          },
          {
            name: 'start',
            level: 'extended',
            type: 'date',
            description:
              'event.start contains the date when the event started or when the\nactivity was first observed.',
          },
          {
            name: 'timezone',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'This field should be populated when the event timestamp does\nnot include timezone information already (e.g. default Syslog timestamps).\nIt is optional otherwise.\n\nAcceptable timezone formats are: a canonical ID (e.g. "Europe/Amsterdam"),\nabbreviated (e.g. "EST") or an HH:mm differential (e.g. "-05:00").',
          },
          {
            name: 'type',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'This is one of four ECS Categorization Fields, and indicates the\nthird level in the ECS category hierarchy.\n\n`event.type` represents a categorization "sub-bucket" that, when used along\nwith the `event.category` field values, enables filtering events down to a\nlevel appropriate for single visualization.\n\nThis field is an array. This will allow proper categorization of some events\nthat fall in multiple event types.',
          },
          {
            name: 'url',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'URL linking to an external system to continue investigation of\nthis event.\n\nThis URL links to another system where in-depth investigation of the specific\noccurence of this event can take place. Alert events, indicated by `event.kind:alert`,\nare a common use case for this field.',
            example: 'https://mysystem.mydomain.com/alert/5271dedb-f5b0-4218-87f0-4ac4870a38fe',
            default_field: false,
          },
        ],
      },
      {
        name: 'file',
        title: 'File',
        group: 2,
        description:
          'A file is defined as a set of information that has been created\non, or has existed on a filesystem.\n\nFile objects can be associated with host events, network events, and/or file\nevents (e.g., those produced by File Integrity Monitoring [FIM] products or\nservices). File fields provide details about the affected file associated with\nthe event or metric.',
        type: 'group',
        fields: [
          {
            name: 'accessed',
            level: 'extended',
            type: 'date',
            description:
              'Last time the file was accessed.\n\nNote that not all filesystems keep track of access time.',
          },
          {
            name: 'attributes',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Array of file attributes.\n\nAttributes names will vary by platform. Here is a non-exhaustive list of values\nthat are expected in this field: archive, compressed, directory, encrypted,\nexecute, hidden, read, readonly, system, write.',
            example: '["readonly", "system"]',
            default_field: false,
          },
          {
            name: 'code_signature.exists',
            level: 'core',
            type: 'boolean',
            description: 'Boolean to capture if a signature is present.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'code_signature.status',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Additional information about the certificate status.\n\nThis is useful for logging cryptographic errors with the certificate validity\nor trust status. Leave unpopulated if the validity or trust of the certificate\nwas unchecked.',
            example: 'ERROR_UNTRUSTED_ROOT',
            default_field: false,
          },
          {
            name: 'code_signature.subject_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Subject name of the code signer',
            example: 'Microsoft Corporation',
            default_field: false,
          },
          {
            name: 'code_signature.trusted',
            level: 'extended',
            type: 'boolean',
            description:
              'Stores the trust status of the certificate chain.\n\nValidating the trust of the certificate chain may be complicated, and this\nfield should only be populated by tools that actively check the status.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'code_signature.valid',
            level: 'extended',
            type: 'boolean',
            description:
              'Boolean to capture if the digital signature is verified against\nthe binary content.\n\nLeave unpopulated if a certificate was unchecked.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'created',
            level: 'extended',
            type: 'date',
            description:
              'File creation time.\n\nNote that not all filesystems store the creation time.',
          },
          {
            name: 'ctime',
            level: 'extended',
            type: 'date',
            description:
              'Last time the file attributes or metadata changed.\n\nNote that changes to the file content will update `mtime`. This implies `ctime`\nwill be adjusted at the same time, since `mtime` is an attribute of the file.',
          },
          {
            name: 'device',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Device that is the source of the file.',
            example: 'sda',
          },
          {
            name: 'directory',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Directory where the file is located. It should include the drive\nletter, when appropriate.',
            example: '/home/alice',
          },
          {
            name: 'drive_letter',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1,
            description:
              'Drive letter where the file is located. This field is only relevant\non Windows.\n\nThe value should be uppercase, and not include the colon.',
            example: 'C',
            default_field: false,
          },
          {
            name: 'extension',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'File extension.',
            example: 'png',
          },
          {
            name: 'gid',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Primary group ID (GID) of the file.',
            example: '1001',
          },
          {
            name: 'group',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Primary group name of the file.',
            example: 'alice',
          },
          {
            name: 'hash.md5',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'MD5 hash.',
          },
          {
            name: 'hash.sha1',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA1 hash.',
          },
          {
            name: 'hash.sha256',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA256 hash.',
          },
          {
            name: 'hash.sha512',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA512 hash.',
          },
          {
            name: 'inode',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Inode representing the file in the filesystem.',
            example: '256383',
          },
          {
            name: 'mime_type',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'MIME type should identify the format of the file or stream of bytes\nusing https://www.iana.org/assignments/media-types/media-types.xhtml[IANA\nofficial types], where possible. When more than one type is applicable, the\nmost specific type should be used.',
            default_field: false,
          },
          {
            name: 'mode',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Mode of the file in octal representation.',
            example: '0640',
          },
          {
            name: 'mtime',
            level: 'extended',
            type: 'date',
            description: 'Last time the file content was modified.',
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the file including the extension, without the directory.',
            example: 'example.png',
          },
          {
            name: 'owner',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: "File owner's username.",
            example: 'alice',
          },
          {
            name: 'path',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description:
              'Full path to the file, including the file name. It should include\nthe drive letter, when appropriate.',
            example: '/home/alice/example.png',
          },
          {
            name: 'pe.company',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal company name of the file, provided at compile-time.',
            example: 'Microsoft Corporation',
            default_field: false,
          },
          {
            name: 'pe.description',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal description of the file, provided at compile-time.',
            example: 'Paint',
            default_field: false,
          },
          {
            name: 'pe.file_version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal version of the file, provided at compile-time.',
            example: '6.3.9600.17415',
            default_field: false,
          },
          {
            name: 'pe.original_file_name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal name of the file, provided at compile-time.',
            example: 'MSPAINT.EXE',
            default_field: false,
          },
          {
            name: 'pe.product',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal product name of the file, provided at compile-time.',
            example: 'MicrosoftÂ® WindowsÂ® Operating System',
            default_field: false,
          },
          {
            name: 'size',
            level: 'extended',
            type: 'long',
            description: 'File size in bytes.\n\nOnly relevant when `file.type` is "file".',
            example: 16384,
          },
          {
            name: 'target_path',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Target path for symlinks.',
          },
          {
            name: 'type',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'File type (file, dir, or symlink).',
            example: 'file',
          },
          {
            name: 'uid',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The user ID (UID) or security identifier (SID) of the file owner.',
            example: '1001',
          },
        ],
      },
      {
        name: 'geo',
        title: 'Geo',
        group: 2,
        description:
          'Geo fields can carry data about a specific location related to an\nevent.\n\nThis geolocation information can be derived from techniques such as Geo IP,\nor be user-supplied.',
        type: 'group',
        fields: [
          {
            name: 'city_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'City name.',
            example: 'Montreal',
          },
          {
            name: 'continent_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the continent.',
            example: 'North America',
          },
          {
            name: 'country_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country ISO code.',
            example: 'CA',
          },
          {
            name: 'country_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country name.',
            example: 'Canada',
          },
          {
            name: 'location',
            level: 'core',
            type: 'geo_point',
            description: 'Longitude and latitude.',
            example: '{ "lon": -73.614830, "lat": 45.505918 }',
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'User-defined description of a location, at the level of granularity\nthey care about.\n\nCould be the name of their data centers, the floor number, if this describes\na local physical entity, city names.\n\nNot typically used in automated geolocation.',
            example: 'boston-dc',
          },
          {
            name: 'region_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region ISO code.',
            example: 'CA-QC',
          },
          {
            name: 'region_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region name.',
            example: 'Quebec',
          },
        ],
      },
      {
        name: 'group',
        title: 'Group',
        group: 2,
        description:
          'The group fields are meant to represent groups that are relevant\nto the event.',
        type: 'group',
        fields: [
          {
            name: 'domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the group is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifier for the group on the system/platform.',
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the group.',
          },
        ],
      },
      {
        name: 'hash',
        title: 'Hash',
        group: 2,
        description:
          'The hash fields represent different hash algorithms and their values.\n\nField names for common hashes (e.g. MD5, SHA1) are predefined. Add fields for\nother hashes by lowercasing the hash algorithm name and using underscore separators\nas appropriate (snake case, e.g. sha3_512).',
        type: 'group',
        fields: [
          {
            name: 'md5',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'MD5 hash.',
          },
          {
            name: 'sha1',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA1 hash.',
          },
          {
            name: 'sha256',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA256 hash.',
          },
          {
            name: 'sha512',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA512 hash.',
          },
        ],
      },
      {
        name: 'host',
        title: 'Host',
        group: 2,
        description:
          'A host is defined as a general computing instance.\n\nECS host.* fields should be populated with details about the host on which the\nevent happened, or from which the measurement was taken. Host types include\nhardware, virtual machines, Docker containers, and Kubernetes nodes.',
        type: 'group',
        fields: [
          {
            name: 'architecture',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system architecture.',
            example: 'x86_64',
          },
          {
            name: 'domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the domain of which the host is a member.\n\nFor example, on Windows this could be the host Active Directory domain\nor NetBIOS domain name. For Linux this could be the domain of the host\nLDAP provider.',
            example: 'CONTOSO',
            default_field: false,
          },
          {
            name: 'geo.city_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'City name.',
            example: 'Montreal',
          },
          {
            name: 'geo.continent_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the continent.',
            example: 'North America',
          },
          {
            name: 'geo.country_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country ISO code.',
            example: 'CA',
          },
          {
            name: 'geo.country_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country name.',
            example: 'Canada',
          },
          {
            name: 'geo.location',
            level: 'core',
            type: 'geo_point',
            description: 'Longitude and latitude.',
            example: '{ "lon": -73.614830, "lat": 45.505918 }',
          },
          {
            name: 'geo.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'User-defined description of a location, at the level of granularity\nthey care about.\n\nCould be the name of their data centers, the floor number, if this describes\na local physical entity, city names.\n\nNot typically used in automated geolocation.',
            example: 'boston-dc',
          },
          {
            name: 'geo.region_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region ISO code.',
            example: 'CA-QC',
          },
          {
            name: 'geo.region_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region name.',
            example: 'Quebec',
          },
          {
            name: 'hostname',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Hostname of the host.\n\nIt normally contains what the `hostname` command returns on the host machine.',
          },
          {
            name: 'id',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique host id.\n\nAs hostname is not always unique, use values that are meaningful in your environment.\n\nExample: The current usage of `beat.name`.',
          },
          {
            name: 'ip',
            level: 'core',
            type: 'ip',
            description: 'Host ip addresses.',
          },
          {
            name: 'mac',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Host mac addresses.',
          },
          {
            name: 'name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the host.\n\nIt can contain what `hostname` returns on Unix systems, the fully qualified\ndomain name, or a name specified by the user. The sender decides which value\nto use.',
          },
          {
            name: 'os.family',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'OS family (such as redhat, debian, freebsd, windows).',
            example: 'debian',
          },
          {
            name: 'os.full',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Operating system name, including the version or code name.',
            example: 'Mac OS Mojave',
          },
          {
            name: 'os.kernel',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system kernel version as a raw string.',
            example: '4.4.0-112-generic',
          },
          {
            name: 'os.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Operating system name, without the version.',
            example: 'Mac OS X',
          },
          {
            name: 'os.platform',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system platform (such centos, ubuntu, windows).',
            example: 'darwin',
          },
          {
            name: 'os.version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system version as a raw string.',
            example: '10.14.1',
          },
          {
            name: 'type',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Type of host.\n\nFor Cloud providers this can be the machine type like `t2.medium`. If vm,\nthis could be the container, for example, or other information meaningful\nin your environment.',
          },
          {
            name: 'uptime',
            level: 'extended',
            type: 'long',
            description: 'Seconds the host has been up.',
            example: 1325,
          },
          {
            name: 'user.domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the user is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'user.email',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'User email address.',
          },
          {
            name: 'user.full_name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: "User's full name, if available.",
            example: 'Albert Einstein',
          },
          {
            name: 'user.group.domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the group is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'user.group.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifier for the group on the system/platform.',
          },
          {
            name: 'user.group.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the group.',
          },
          {
            name: 'user.hash',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique user hash to correlate information for a user in anonymized\nform.\n\nUseful if `user.id` or `user.name` contain confidential information and cannot\nbe used.',
          },
          {
            name: 'user.id',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifiers of the user.',
          },
          {
            name: 'user.name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Short name or login of the user.',
            example: 'albert',
          },
        ],
      },
      {
        name: 'http',
        title: 'HTTP',
        group: 2,
        description:
          'Fields related to HTTP activity. Use the `url` field set to store\nthe url of the request.',
        type: 'group',
        fields: [
          {
            name: 'request.body.bytes',
            level: 'extended',
            type: 'long',
            format: 'bytes',
            description: 'Size in bytes of the request body.',
            example: 887,
          },
          {
            name: 'request.body.content',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'The full HTTP request body.',
            example: 'Hello world',
          },
          {
            name: 'request.bytes',
            level: 'extended',
            type: 'long',
            format: 'bytes',
            description: 'Total size in bytes of the request (body and headers).',
            example: 1437,
          },
          {
            name: 'request.method',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'HTTP request method.\n\nThe field value must be normalized to lowercase for querying. See the documentation\nsection "Implementing ECS".',
            example: 'get, post, put',
          },
          {
            name: 'request.referrer',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Referrer for this HTTP request.',
            example: 'https://blog.example.com/',
          },
          {
            name: 'response.body.bytes',
            level: 'extended',
            type: 'long',
            format: 'bytes',
            description: 'Size in bytes of the response body.',
            example: 887,
          },
          {
            name: 'response.body.content',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'The full HTTP response body.',
            example: 'Hello world',
          },
          {
            name: 'response.bytes',
            level: 'extended',
            type: 'long',
            format: 'bytes',
            description: 'Total size in bytes of the response (body and headers).',
            example: 1437,
          },
          {
            name: 'response.status_code',
            level: 'extended',
            type: 'long',
            format: 'string',
            description: 'HTTP response status code.',
            example: 404,
          },
          {
            name: 'version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'HTTP version.',
            example: 1.1,
          },
        ],
      },
      {
        name: 'interface',
        title: 'Interface',
        group: 2,
        description:
          'The interface fields are used to record ingress and egress interface\ninformation when reported by an observer (e.g. firewall, router, load balancer)\nin the context of the observer handling a network connection.  In the case of\na single observer interface (e.g. network sensor on a span port) only the observer.ingress\ninformation should be populated.',
        type: 'group',
        fields: [
          {
            name: 'alias',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Interface alias as reported by the system, typically used in firewall\nimplementations for e.g. inside, outside, or dmz logical interface naming.',
            example: 'outside',
            default_field: false,
          },
          {
            name: 'id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Interface ID as reported by an observer (typically SNMP interface\nID).',
            example: 10,
            default_field: false,
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Interface name as reported by the system.',
            example: 'eth0',
            default_field: false,
          },
        ],
      },
      {
        name: 'log',
        title: 'Log',
        group: 2,
        description:
          'Details about the event logging mechanism or logging transport.\n\nThe log.* fields are typically populated with details about the logging mechanism\nused to create and/or transport the event. For example, syslog details belong\nunder `log.syslog.*`.\n\nThe details specific to your event source are typically not logged under `log.*`,\nbut rather in `event.*` or in other ECS fields.',
        type: 'group',
        fields: [
          {
            name: 'level',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Original log level of the log event.\n\nIf the source of the event provides a log level or textual severity, this\nis the one that goes in `log.level`. If your source does not specify one,\nyou may put your event transport severity here (e.g. Syslog severity).\n\nSome examples are `warn`, `err`, `i`, `informational`.',
            example: 'error',
          },
          {
            name: 'logger',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The name of the logger inside an application. This is usually the\nname of the class which initialized the logger, or can be a custom name.',
            example: 'org.elasticsearch.bootstrap.Bootstrap',
          },
          {
            name: 'origin.file.line',
            level: 'extended',
            type: 'integer',
            description:
              'The line number of the file containing the source code which originated\nthe log event.',
            example: 42,
          },
          {
            name: 'origin.file.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The name of the file containing the source code which originated\nthe log event. Note that this is not the name of the log file.',
            example: 'Bootstrap.java',
          },
          {
            name: 'origin.function',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The name of the function or method which originated the log event.',
            example: 'init',
          },
          {
            name: 'original',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'This is the original log message and contains the full log message\nbefore splitting it up in multiple parts.\n\nIn contrast to the `message` field which can contain an extracted part of\nthe log message, this field contains the original, full log message. It can\nhave already some modifications applied like encoding or new lines removed\nto clean up the log message.\n\nThis field is not indexed and doc_values are disabled so it can not be queried\nbut the value can be retrieved from `_source`.',
            example: 'Sep 19 08:26:10 localhost My log',
          },
          {
            name: 'syslog',
            level: 'extended',
            type: 'object',
            object_type: 'keyword',
            description:
              'The Syslog metadata of the event, if the event was transmitted\nvia Syslog. Please see RFCs 5424 or 3164.',
          },
          {
            name: 'syslog.facility.code',
            level: 'extended',
            type: 'long',
            format: 'string',
            description:
              'The Syslog numeric facility of the log event, if available.\n\nAccording to RFCs 5424 and 3164, this value should be an integer between 0\nand 23.',
            example: 23,
          },
          {
            name: 'syslog.facility.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The Syslog text-based facility of the log event, if available.',
            example: 'local7',
          },
          {
            name: 'syslog.priority',
            level: 'extended',
            type: 'long',
            format: 'string',
            description:
              'Syslog numeric priority of the event, if available.\n\nAccording to RFCs 5424 and 3164, the priority is 8 * facility + severity.\nThis number is therefore expected to contain a value between 0 and 191.',
            example: 135,
          },
          {
            name: 'syslog.severity.code',
            level: 'extended',
            type: 'long',
            description:
              'The Syslog numeric severity of the log event, if available.\n\nIf the event source publishing via Syslog provides a different numeric severity\nvalue (e.g. firewall, IDS), your source numeric severity should go to `event.severity`.\nIf the event source does not specify a distinct severity, you can optionally\ncopy the Syslog severity to `event.severity`.',
            example: 3,
          },
          {
            name: 'syslog.severity.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The Syslog numeric severity of the log event, if available.\n\nIf the event source publishing via Syslog provides a different severity value\n(e.g. firewall, IDS), your source text severity should go to `log.level`.\nIf the event source does not specify a distinct severity, you can optionally\ncopy the Syslog severity to `log.level`.',
            example: 'Error',
          },
        ],
      },
      {
        name: 'network',
        title: 'Network',
        group: 2,
        description:
          'The network is defined as the communication path over which a host\nor network event happens.\n\nThe network.* fields should be populated with details about the network activity\nassociated with an event.',
        type: 'group',
        fields: [
          {
            name: 'application',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'A name given to an application level protocol. This can be arbitrarily\nassigned for things like microservices, but also apply to things like skype,\nicq, facebook, twitter. This would be used in situations where the vendor\nor service can be decoded such as from the source/dest IP owners, ports, or\nwire format.\n\nThe field value must be normalized to lowercase for querying. See the documentation\nsection "Implementing ECS".',
            example: 'aim',
          },
          {
            name: 'bytes',
            level: 'core',
            type: 'long',
            format: 'bytes',
            description:
              'Total bytes transferred in both directions.\n\nIf `source.bytes` and `destination.bytes` are known, `network.bytes` is their\nsum.',
            example: 368,
          },
          {
            name: 'community_id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'A hash of source and destination IPs and ports, as well as the\nprotocol used in a communication. This is a tool-agnostic standard to identify\nflows.\n\nLearn more at https://github.com/corelight/community-id-spec.',
            example: '1:hO+sN4H+MG5MY/8hIrXPqc4ZQz0=',
          },
          {
            name: 'direction',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              "Direction of the network traffic.\nRecommended values are:\n * inbound\n  * outbound\n  * internal\n  * external\n  * unknown\n\nWhen mapping events from a host-based monitoring context, populate this field from the host's point of view.\nWhen mapping events from a network or perimeter-based monitoring context, populate this field from the point of view of your network perimeter.",
            example: 'inbound',
          },
          {
            name: 'forwarded_ip',
            level: 'core',
            type: 'ip',
            description: 'Host IP address when the source IP address is the proxy.',
            example: '192.1.1.2',
          },
          {
            name: 'iana_number',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'IANA Protocol Number (https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).\nStandardized list of protocols. This aligns well with NetFlow and sFlow related\nlogs which use the IANA Protocol Number.',
            example: 6,
          },
          {
            name: 'inner',
            level: 'extended',
            type: 'object',
            object_type: 'keyword',
            description:
              'Network.inner fields are added in addition to network.vlan fields\nto describe  the innermost VLAN when q-in-q VLAN tagging is present. Allowed\nfields include  vlan.id and vlan.name. Inner vlan fields are typically used\nwhen sending traffic with multiple 802.1q encapsulations to a network sensor\n(e.g. Zeek, Wireshark.)',
            default_field: false,
          },
          {
            name: 'inner.vlan.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'VLAN ID as reported by the observer.',
            example: 10,
            default_field: false,
          },
          {
            name: 'inner.vlan.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Optional VLAN name as reported by the observer.',
            example: 'outside',
            default_field: false,
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name given by operators to sections of their network.',
            example: 'Guest Wifi',
          },
          {
            name: 'packets',
            level: 'core',
            type: 'long',
            description:
              'Total packets transferred in both directions.\n\nIf `source.packets` and `destination.packets` are known, `network.packets`\nis their sum.',
            example: 24,
          },
          {
            name: 'protocol',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'L7 Network protocol name. ex. http, lumberjack, transport protocol.\n\nThe field value must be normalized to lowercase for querying. See the documentation\nsection "Implementing ECS".',
            example: 'http',
          },
          {
            name: 'transport',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Same as network.iana_number, but instead using the Keyword name\nof the transport layer (udp, tcp, ipv6-icmp, etc.)\n\nThe field value must be normalized to lowercase for querying. See the documentation\nsection "Implementing ECS".',
            example: 'tcp',
          },
          {
            name: 'type',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'In the OSI Model this would be the Network Layer. ipv4, ipv6,\nipsec, pim, etc\n\nThe field value must be normalized to lowercase for querying. See the documentation\nsection "Implementing ECS".',
            example: 'ipv4',
          },
          {
            name: 'vlan.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'VLAN ID as reported by the observer.',
            example: 10,
            default_field: false,
          },
          {
            name: 'vlan.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Optional VLAN name as reported by the observer.',
            example: 'outside',
            default_field: false,
          },
        ],
      },
      {
        name: 'observer',
        title: 'Observer',
        group: 2,
        description:
          'An observer is defined as a special network, security, or application\ndevice used to detect, observe, or create network, security, or application-related\nevents and metrics.\n\nThis could be a custom hardware appliance or a server that has been configured\nto run special network, security, or application software. Examples include\nfirewalls, web proxies, intrusion detection/prevention systems, network monitoring\nsensors, web application firewalls, data loss prevention systems, and APM servers.\nThe observer.* fields shall be populated with details of the system, if any,\nthat detects, observes and/or creates a network, security, or application event\nor metric. Message queues and ETL components used in processing events or metrics\nare not considered observers in ECS.',
        type: 'group',
        fields: [
          {
            name: 'egress',
            level: 'extended',
            type: 'object',
            object_type: 'keyword',
            description:
              'Observer.egress holds information like interface number and name,\nvlan, and zone information to  classify egress traffic.  Single armed monitoring\nsuch as a network sensor on a span port should  only use observer.ingress\nto categorize traffic.',
            default_field: false,
          },
          {
            name: 'egress.interface.alias',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Interface alias as reported by the system, typically used in firewall\nimplementations for e.g. inside, outside, or dmz logical interface naming.',
            example: 'outside',
            default_field: false,
          },
          {
            name: 'egress.interface.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Interface ID as reported by an observer (typically SNMP interface\nID).',
            example: 10,
            default_field: false,
          },
          {
            name: 'egress.interface.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Interface name as reported by the system.',
            example: 'eth0',
            default_field: false,
          },
          {
            name: 'egress.vlan.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'VLAN ID as reported by the observer.',
            example: 10,
            default_field: false,
          },
          {
            name: 'egress.vlan.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Optional VLAN name as reported by the observer.',
            example: 'outside',
            default_field: false,
          },
          {
            name: 'egress.zone',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Network zone of outbound traffic as reported by the observer to\ncategorize the destination area of egress  traffic, e.g. Internal, External,\nDMZ, HR, Legal, etc.',
            example: 'Public_Internet',
            default_field: false,
          },
          {
            name: 'geo.city_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'City name.',
            example: 'Montreal',
          },
          {
            name: 'geo.continent_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the continent.',
            example: 'North America',
          },
          {
            name: 'geo.country_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country ISO code.',
            example: 'CA',
          },
          {
            name: 'geo.country_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country name.',
            example: 'Canada',
          },
          {
            name: 'geo.location',
            level: 'core',
            type: 'geo_point',
            description: 'Longitude and latitude.',
            example: '{ "lon": -73.614830, "lat": 45.505918 }',
          },
          {
            name: 'geo.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'User-defined description of a location, at the level of granularity\nthey care about.\n\nCould be the name of their data centers, the floor number, if this describes\na local physical entity, city names.\n\nNot typically used in automated geolocation.',
            example: 'boston-dc',
          },
          {
            name: 'geo.region_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region ISO code.',
            example: 'CA-QC',
          },
          {
            name: 'geo.region_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region name.',
            example: 'Quebec',
          },
          {
            name: 'hostname',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Hostname of the observer.',
          },
          {
            name: 'ingress',
            level: 'extended',
            type: 'object',
            object_type: 'keyword',
            description:
              'Observer.ingress holds information like interface number and name,\nvlan, and zone information to  classify ingress traffic.  Single armed monitoring\nsuch as a network sensor on a span port should  only use observer.ingress\nto categorize traffic.',
            default_field: false,
          },
          {
            name: 'ingress.interface.alias',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Interface alias as reported by the system, typically used in firewall\nimplementations for e.g. inside, outside, or dmz logical interface naming.',
            example: 'outside',
            default_field: false,
          },
          {
            name: 'ingress.interface.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Interface ID as reported by an observer (typically SNMP interface\nID).',
            example: 10,
            default_field: false,
          },
          {
            name: 'ingress.interface.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Interface name as reported by the system.',
            example: 'eth0',
            default_field: false,
          },
          {
            name: 'ingress.vlan.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'VLAN ID as reported by the observer.',
            example: 10,
            default_field: false,
          },
          {
            name: 'ingress.vlan.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Optional VLAN name as reported by the observer.',
            example: 'outside',
            default_field: false,
          },
          {
            name: 'ingress.zone',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Network zone of incoming traffic as reported by the observer to\ncategorize the source area of ingress  traffic. e.g. internal, External, DMZ,\nHR, Legal, etc.',
            example: 'DMZ',
            default_field: false,
          },
          {
            name: 'ip',
            level: 'core',
            type: 'ip',
            description: 'IP addresses of the observer.',
          },
          {
            name: 'mac',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'MAC addresses of the observer',
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Custom name of the observer.\n\nThis is a name that can be given to an observer. This can be helpful for example\nif multiple firewalls of the same model are used in an organization.\n\nIf no custom name is needed, the field can be left empty.',
            example: '1_proxySG',
          },
          {
            name: 'os.family',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'OS family (such as redhat, debian, freebsd, windows).',
            example: 'debian',
          },
          {
            name: 'os.full',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Operating system name, including the version or code name.',
            example: 'Mac OS Mojave',
          },
          {
            name: 'os.kernel',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system kernel version as a raw string.',
            example: '4.4.0-112-generic',
          },
          {
            name: 'os.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Operating system name, without the version.',
            example: 'Mac OS X',
          },
          {
            name: 'os.platform',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system platform (such centos, ubuntu, windows).',
            example: 'darwin',
          },
          {
            name: 'os.version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system version as a raw string.',
            example: '10.14.1',
          },
          {
            name: 'product',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The product name of the observer.',
            example: 's200',
          },
          {
            name: 'serial_number',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Observer serial number.',
          },
          {
            name: 'type',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The type of the observer the data is coming from.\n\nThere is no predefined list of observer types. Some examples are `forwarder`,\n`firewall`, `ids`, `ips`, `proxy`, `poller`, `sensor`, `APM server`.',
            example: 'firewall',
          },
          {
            name: 'vendor',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Vendor name of the observer.',
            example: 'Symantec',
          },
          {
            name: 'version',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Observer version.',
          },
        ],
      },
      {
        name: 'organization',
        title: 'Organization',
        group: 2,
        description:
          'The organization fields enrich data with information about the company\nor entity the data is associated with.\n\nThese fields help you arrange or filter data stored in an index by one or multiple\norganizations.',
        type: 'group',
        fields: [
          {
            name: 'id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifier for the organization.',
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Organization name.',
          },
        ],
      },
      {
        name: 'os',
        title: 'Operating System',
        group: 2,
        description: 'The OS fields contain information about the operating system.',
        type: 'group',
        fields: [
          {
            name: 'family',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'OS family (such as redhat, debian, freebsd, windows).',
            example: 'debian',
          },
          {
            name: 'full',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Operating system name, including the version or code name.',
            example: 'Mac OS Mojave',
          },
          {
            name: 'kernel',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system kernel version as a raw string.',
            example: '4.4.0-112-generic',
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Operating system name, without the version.',
            example: 'Mac OS X',
          },
          {
            name: 'platform',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system platform (such centos, ubuntu, windows).',
            example: 'darwin',
          },
          {
            name: 'version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system version as a raw string.',
            example: '10.14.1',
          },
        ],
      },
      {
        name: 'package',
        title: 'Package',
        group: 2,
        description:
          'These fields contain information about an installed software package.\nIt contains general information about a package, such as name, version or size.\nIt also contains installation details, such as time or location.',
        type: 'group',
        fields: [
          {
            name: 'architecture',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Package architecture.',
            example: 'x86_64',
          },
          {
            name: 'build_version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Additional information about the build version of the installed\npackage.\n\nFor example use the commit SHA of a non-released package.',
            example: '36f4f7e89dd61b0988b12ee000b98966867710cd',
            default_field: false,
          },
          {
            name: 'checksum',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Checksum of the installed package for verification.',
            example: '68b329da9893e34099c7d8ad5cb9c940',
          },
          {
            name: 'description',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Description of the package.',
            example:
              'Open source programming language to build simple/reliable/efficient\nsoftware.',
          },
          {
            name: 'install_scope',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Indicating how the package was installed, e.g. user-local, global.',
            example: 'global',
          },
          {
            name: 'installed',
            level: 'extended',
            type: 'date',
            description: 'Time when package was installed.',
          },
          {
            name: 'license',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'License under which the package was released.\n\nUse a short name, e.g. the license identifier from SPDX License List where\npossible (https://spdx.org/licenses/).',
            example: 'Apache License 2.0',
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Package name',
            example: 'go',
          },
          {
            name: 'path',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Path where the package is installed.',
            example: '/usr/local/Cellar/go/1.12.9/',
          },
          {
            name: 'reference',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Home page or reference URL of the software in this package, if\navailable.',
            example: 'https://golang.org',
            default_field: false,
          },
          {
            name: 'size',
            level: 'extended',
            type: 'long',
            format: 'string',
            description: 'Package size in bytes.',
            example: 62231,
          },
          {
            name: 'type',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Type of package.\n\nThis should contain the package file type, rather than the package manager\nname. Examples: rpm, dpkg, brew, npm, gem, nupkg, jar.',
            example: 'rpm',
            default_field: false,
          },
          {
            name: 'version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Package version',
            example: '1.12.9',
          },
        ],
      },
      {
        name: 'pe',
        title: 'PE Header',
        group: 2,
        description: 'These fields contain Windows Portable Executable (PE) metadata.',
        type: 'group',
        fields: [
          {
            name: 'company',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal company name of the file, provided at compile-time.',
            example: 'Microsoft Corporation',
            default_field: false,
          },
          {
            name: 'description',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal description of the file, provided at compile-time.',
            example: 'Paint',
            default_field: false,
          },
          {
            name: 'file_version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal version of the file, provided at compile-time.',
            example: '6.3.9600.17415',
            default_field: false,
          },
          {
            name: 'original_file_name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal name of the file, provided at compile-time.',
            example: 'MSPAINT.EXE',
            default_field: false,
          },
          {
            name: 'product',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal product name of the file, provided at compile-time.',
            example: 'MicrosoftÂ® WindowsÂ® Operating System',
            default_field: false,
          },
        ],
      },
      {
        name: 'process',
        title: 'Process',
        group: 2,
        description:
          'These fields contain information about a process.\n\nThese fields can help you correlate metrics information with a process id/name\nfrom a log message.  The `process.pid` often stays in the metric itself and\nis copied to the global field for correlation.',
        type: 'group',
        fields: [
          {
            name: 'args',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Array of process arguments, starting with the absolute path to\nthe executable.\n\nMay be filtered to protect sensitive information.',
            example: ['/usr/bin/ssh', '-l', 'user', '10.0.0.16'],
          },
          {
            name: 'args_count',
            level: 'extended',
            type: 'long',
            description:
              'Length of the process.args array.\n\nThis field can be useful for querying or performing bucket analysis on how\nmany arguments were provided to start a process. More arguments may be an\nindication of suspicious activity.',
            example: 4,
            default_field: false,
          },
          {
            name: 'code_signature.exists',
            level: 'core',
            type: 'boolean',
            description: 'Boolean to capture if a signature is present.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'code_signature.status',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Additional information about the certificate status.\n\nThis is useful for logging cryptographic errors with the certificate validity\nor trust status. Leave unpopulated if the validity or trust of the certificate\nwas unchecked.',
            example: 'ERROR_UNTRUSTED_ROOT',
            default_field: false,
          },
          {
            name: 'code_signature.subject_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Subject name of the code signer',
            example: 'Microsoft Corporation',
            default_field: false,
          },
          {
            name: 'code_signature.trusted',
            level: 'extended',
            type: 'boolean',
            description:
              'Stores the trust status of the certificate chain.\n\nValidating the trust of the certificate chain may be complicated, and this\nfield should only be populated by tools that actively check the status.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'code_signature.valid',
            level: 'extended',
            type: 'boolean',
            description:
              'Boolean to capture if the digital signature is verified against\nthe binary content.\n\nLeave unpopulated if a certificate was unchecked.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'command_line',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
              },
            ],
            description:
              'Full command line that started the process, including the absolute\npath to the executable, and all arguments.\n\nSome arguments may be filtered to protect sensitive information.',
            example: '/usr/bin/ssh -l user 10.0.0.16',
            default_field: false,
          },
          {
            name: 'entity_id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique identifier for the process.\n\nThe implementation of this is specified by the data source, but some examples\nof what could be used here are a process-generated UUID, Sysmon Process GUIDs,\nor a hash of some uniquely identifying components of a process.\n\nConstructing a globally unique identifier is a common practice to mitigate\nPID reuse as well as to identify a specific process over time, across multiple\nmonitored hosts.',
            example: 'c2c455d9f99375d',
            default_field: false,
          },
          {
            name: 'executable',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Absolute path to the process executable.',
            example: '/usr/bin/ssh',
          },
          {
            name: 'exit_code',
            level: 'extended',
            type: 'long',
            description:
              'The exit code of the process, if this is a termination event.\n\nThe field should be absent if there is no exit code for the event (e.g. process\nstart).',
            example: 137,
            default_field: false,
          },
          {
            name: 'hash.md5',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'MD5 hash.',
          },
          {
            name: 'hash.sha1',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA1 hash.',
          },
          {
            name: 'hash.sha256',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA256 hash.',
          },
          {
            name: 'hash.sha512',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA512 hash.',
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Process name.\n\nSometimes called program name or similar.',
            example: 'ssh',
          },
          {
            name: 'parent.args',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Array of process arguments.\n\nMay be filtered to protect sensitive information.',
            example: ['ssh', '-l', 'user', '10.0.0.16'],
            default_field: false,
          },
          {
            name: 'parent.args_count',
            level: 'extended',
            type: 'long',
            description:
              'Length of the process.args array.\n\nThis field can be useful for querying or performing bucket analysis on how\nmany arguments were provided to start a process. More arguments may be an\nindication of suspicious activity.',
            example: 4,
            default_field: false,
          },
          {
            name: 'parent.code_signature.exists',
            level: 'core',
            type: 'boolean',
            description: 'Boolean to capture if a signature is present.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'parent.code_signature.status',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Additional information about the certificate status.\n\nThis is useful for logging cryptographic errors with the certificate validity\nor trust status. Leave unpopulated if the validity or trust of the certificate\nwas unchecked.',
            example: 'ERROR_UNTRUSTED_ROOT',
            default_field: false,
          },
          {
            name: 'parent.code_signature.subject_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Subject name of the code signer',
            example: 'Microsoft Corporation',
            default_field: false,
          },
          {
            name: 'parent.code_signature.trusted',
            level: 'extended',
            type: 'boolean',
            description:
              'Stores the trust status of the certificate chain.\n\nValidating the trust of the certificate chain may be complicated, and this\nfield should only be populated by tools that actively check the status.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'parent.code_signature.valid',
            level: 'extended',
            type: 'boolean',
            description:
              'Boolean to capture if the digital signature is verified against\nthe binary content.\n\nLeave unpopulated if a certificate was unchecked.',
            example: 'true',
            default_field: false,
          },
          {
            name: 'parent.command_line',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
              },
            ],
            description:
              'Full command line that started the process, including the absolute\npath to the executable, and all arguments.\n\nSome arguments may be filtered to protect sensitive information.',
            example: '/usr/bin/ssh -l user 10.0.0.16',
            default_field: false,
          },
          {
            name: 'parent.entity_id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique identifier for the process.\n\nThe implementation of this is specified by the data source, but some examples\nof what could be used here are a process-generated UUID, Sysmon Process GUIDs,\nor a hash of some uniquely identifying components of a process.\n\nConstructing a globally unique identifier is a common practice to mitigate\nPID reuse as well as to identify a specific process over time, across multiple\nmonitored hosts.',
            example: 'c2c455d9f99375d',
            default_field: false,
          },
          {
            name: 'parent.executable',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
              },
            ],
            description: 'Absolute path to the process executable.',
            example: '/usr/bin/ssh',
            default_field: false,
          },
          {
            name: 'parent.exit_code',
            level: 'extended',
            type: 'long',
            description:
              'The exit code of the process, if this is a termination event.\n\nThe field should be absent if there is no exit code for the event (e.g. process\nstart).',
            example: 137,
            default_field: false,
          },
          {
            name: 'parent.hash.md5',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'MD5 hash.',
            default_field: false,
          },
          {
            name: 'parent.hash.sha1',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA1 hash.',
            default_field: false,
          },
          {
            name: 'parent.hash.sha256',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA256 hash.',
            default_field: false,
          },
          {
            name: 'parent.hash.sha512',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'SHA512 hash.',
            default_field: false,
          },
          {
            name: 'parent.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
              },
            ],
            description: 'Process name.\n\nSometimes called program name or similar.',
            example: 'ssh',
            default_field: false,
          },
          {
            name: 'parent.pgid',
            level: 'extended',
            type: 'long',
            format: 'string',
            description: 'Identifier of the group of processes the process belongs to.',
            default_field: false,
          },
          {
            name: 'parent.pid',
            level: 'core',
            type: 'long',
            format: 'string',
            description: 'Process id.',
            example: 4242,
            default_field: false,
          },
          {
            name: 'parent.ppid',
            level: 'extended',
            type: 'long',
            format: 'string',
            description: "Parent process' pid.",
            example: 4241,
            default_field: false,
          },
          {
            name: 'parent.start',
            level: 'extended',
            type: 'date',
            description: 'The time the process started.',
            example: '2016-05-23T08:05:34.853Z',
            default_field: false,
          },
          {
            name: 'parent.thread.id',
            level: 'extended',
            type: 'long',
            format: 'string',
            description: 'Thread ID.',
            example: 4242,
            default_field: false,
          },
          {
            name: 'parent.thread.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Thread name.',
            example: 'thread-0',
            default_field: false,
          },
          {
            name: 'parent.title',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
              },
            ],
            description:
              'Process title.\n\nThe proctitle, some times the same as process name. Can also be different:\nfor example a browser setting its title to the web page currently opened.',
            default_field: false,
          },
          {
            name: 'parent.uptime',
            level: 'extended',
            type: 'long',
            description: 'Seconds the process has been up.',
            example: 1325,
            default_field: false,
          },
          {
            name: 'parent.working_directory',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
              },
            ],
            description: 'The working directory of the process.',
            example: '/home/alice',
            default_field: false,
          },
          {
            name: 'pe.company',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal company name of the file, provided at compile-time.',
            example: 'Microsoft Corporation',
            default_field: false,
          },
          {
            name: 'pe.description',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal description of the file, provided at compile-time.',
            example: 'Paint',
            default_field: false,
          },
          {
            name: 'pe.file_version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal version of the file, provided at compile-time.',
            example: '6.3.9600.17415',
            default_field: false,
          },
          {
            name: 'pe.original_file_name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal name of the file, provided at compile-time.',
            example: 'MSPAINT.EXE',
            default_field: false,
          },
          {
            name: 'pe.product',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Internal product name of the file, provided at compile-time.',
            example: 'MicrosoftÂ® WindowsÂ® Operating System',
            default_field: false,
          },
          {
            name: 'pgid',
            level: 'extended',
            type: 'long',
            format: 'string',
            description: 'Identifier of the group of processes the process belongs to.',
          },
          {
            name: 'pid',
            level: 'core',
            type: 'long',
            format: 'string',
            description: 'Process id.',
            example: 4242,
          },
          {
            name: 'ppid',
            level: 'extended',
            type: 'long',
            format: 'string',
            description: "Parent process' pid.",
            example: 4241,
          },
          {
            name: 'start',
            level: 'extended',
            type: 'date',
            description: 'The time the process started.',
            example: '2016-05-23T08:05:34.853Z',
          },
          {
            name: 'thread.id',
            level: 'extended',
            type: 'long',
            format: 'string',
            description: 'Thread ID.',
            example: 4242,
          },
          {
            name: 'thread.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Thread name.',
            example: 'thread-0',
          },
          {
            name: 'title',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description:
              'Process title.\n\nThe proctitle, some times the same as process name. Can also be different:\nfor example a browser setting its title to the web page currently opened.',
          },
          {
            name: 'uptime',
            level: 'extended',
            type: 'long',
            description: 'Seconds the process has been up.',
            example: 1325,
          },
          {
            name: 'working_directory',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'The working directory of the process.',
            example: '/home/alice',
          },
        ],
      },
      {
        name: 'registry',
        title: 'Registry',
        group: 2,
        description: 'Fields related to Windows Registry operations.',
        type: 'group',
        fields: [
          {
            name: 'data.bytes',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Original bytes written with base64 encoding.\n\nFor Windows registry operations, such as SetValueEx and RegQueryValueEx, this\ncorresponds to the data pointed by `lp_data`. This is optional but provides\nbetter recoverability and should be populated for REG_BINARY encoded values.',
            example: 'ZQBuAC0AVQBTAAAAZQBuAAAAAAA=',
            default_field: false,
          },
          {
            name: 'data.strings',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Content when writing string types.\n\nPopulated as an array when writing string data to the registry. For single\nstring registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with\none string. For sequences of string with REG_MULTI_SZ, this array will be\nvariable length. For numeric data, such as REG_DWORD and REG_QWORD, this should\nbe populated with the decimal representation (e.g `"1"`).',
            example: '["C:\\rta\\red_ttp\\bin\\myapp.exe"]',
            default_field: false,
          },
          {
            name: 'data.type',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Standard registry type for encoding contents',
            example: 'REG_SZ',
            default_field: false,
          },
          {
            name: 'hive',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Abbreviated name for the hive.',
            example: 'HKLM',
            default_field: false,
          },
          {
            name: 'key',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Hive-relative path of keys.',
            example:
              'SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\winword.exe',
            default_field: false,
          },
          {
            name: 'path',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Full path, including hive, key and value',
            example:
              'HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution\nOptions\\winword.exe\\Debugger',
            default_field: false,
          },
          {
            name: 'value',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the value written.',
            example: 'Debugger',
            default_field: false,
          },
        ],
      },
      {
        name: 'related',
        title: 'Related',
        group: 2,
        description:
          'This field set is meant to facilitate pivoting around a piece of\ndata.\n\nSome pieces of information can be seen in many places in an ECS event. To facilitate\nsearching for them, store an array of all seen values to their corresponding\nfield in `related.`.\n\nA concrete example is IP addresses, which can be under host, observer, source,\ndestination, client, server, and network.forwarded_ip. If you append all IPs\nto `related.ip`, you can then search for a given IP trivially, no matter where\nit appeared, by querying `related.ip:192.0.2.15`.',
        type: 'group',
        fields: [
          {
            name: 'hash',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              "All the hashes seen on your event. Populating this field, then\nusing it to search for hashes can help in situations where you're unsure what\nthe hash algorithm is (and therefore which key name to search).",
            default_field: false,
          },
          {
            name: 'ip',
            level: 'extended',
            type: 'ip',
            description: 'All of the IPs seen on your event.',
          },
          {
            name: 'user',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'All the user names seen on your event.',
            default_field: false,
          },
        ],
      },
      {
        name: 'rule',
        title: 'Rule',
        group: 2,
        description:
          'Rule fields are used to capture the specifics of any observer or\nagent rules that generate alerts or other notable events.\n\nExamples of data sources that would populate the rule fields include: network\nadmission control platforms, network or host IDS/IPS, network firewalls, web\napplication firewalls, url filters, endpoint detection and response (EDR) systems,\netc.',
        type: 'group',
        fields: [
          {
            name: 'author',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name, organization, or pseudonym of the author or authors who created\nthe rule used to generate this event.',
            example: ['Star-Lord'],
            default_field: false,
          },
          {
            name: 'category',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'A categorization value keyword used by the entity using the rule\nfor detection of this event.',
            example: 'Attempted Information Leak',
            default_field: false,
          },
          {
            name: 'description',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The description of the rule generating the event.',
            example: 'Block requests to public DNS over HTTPS / TLS protocols',
            default_field: false,
          },
          {
            name: 'id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'A rule ID that is unique within the scope of an agent, observer,\nor other entity using the rule for detection of this event.',
            example: 101,
            default_field: false,
          },
          {
            name: 'license',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the license under which the rule used to generate this\nevent is made available.',
            example: 'Apache 2.0',
            default_field: false,
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The name of the rule or signature generating the event.',
            example: 'BLOCK_DNS_over_TLS',
            default_field: false,
          },
          {
            name: 'reference',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Reference URL to additional information about the rule used to\ngenerate this event.\n\nThe URL can point to the vendor documentation about the rule. If that is\nnot available, it can also be a link to a more general page describing this\ntype of alert.',
            example: 'https://en.wikipedia.org/wiki/DNS_over_TLS',
            default_field: false,
          },
          {
            name: 'ruleset',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the ruleset, policy, group, or parent category in which\nthe rule used to generate this event is a member.',
            example: 'Standard_Protocol_Filters',
            default_field: false,
          },
          {
            name: 'uuid',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'A rule ID that is unique within the scope of a set or group of\nagents, observers, or other entities using the rule for detection of this\nevent.',
            example: 1100110011,
            default_field: false,
          },
          {
            name: 'version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The version / revision of the rule being used for analysis.',
            example: 1.1,
            default_field: false,
          },
        ],
      },
      {
        name: 'server',
        title: 'Server',
        group: 2,
        description:
          'A Server is defined as the responder in a network connection for\nevents regarding sessions, connections, or bidirectional flow records.\n\nFor TCP events, the server is the receiver of the initial SYN packet(s) of the\nTCP connection. For other protocols, the server is generally the responder in\nthe network transaction. Some systems actually use the term "responder" to refer\nthe server in TCP connections. The server fields describe details about the\nsystem acting as the server in the network event. Server fields are usually\npopulated in conjunction with client fields. Server fields are generally not\npopulated for packet-level events.\n\nClient / server representations can add semantic context to an exchange, which\nis helpful to visualize the data in certain situations. If your context falls\nin that category, you should still ensure that source and destination are filled\nappropriately.',
        type: 'group',
        fields: [
          {
            name: 'address',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Some event server addresses are defined ambiguously. The event\nwill sometimes list an IP, a domain or a unix socket.  You should always store\nthe raw address in the `.address` field.\n\nThen it should be duplicated to `.ip` or `.domain`, depending on which one\nit is.',
          },
          {
            name: 'as.number',
            level: 'extended',
            type: 'long',
            description:
              'Unique number allocated to the autonomous system. The autonomous\nsystem number (ASN) uniquely identifies each network on the Internet.',
            example: 15169,
          },
          {
            name: 'as.organization.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Organization name.',
            example: 'Google LLC',
          },
          {
            name: 'bytes',
            level: 'core',
            type: 'long',
            format: 'bytes',
            description: 'Bytes sent from the server to the client.',
            example: 184,
          },
          {
            name: 'domain',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Server domain.',
          },
          {
            name: 'geo.city_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'City name.',
            example: 'Montreal',
          },
          {
            name: 'geo.continent_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the continent.',
            example: 'North America',
          },
          {
            name: 'geo.country_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country ISO code.',
            example: 'CA',
          },
          {
            name: 'geo.country_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country name.',
            example: 'Canada',
          },
          {
            name: 'geo.location',
            level: 'core',
            type: 'geo_point',
            description: 'Longitude and latitude.',
            example: '{ "lon": -73.614830, "lat": 45.505918 }',
          },
          {
            name: 'geo.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'User-defined description of a location, at the level of granularity\nthey care about.\n\nCould be the name of their data centers, the floor number, if this describes\na local physical entity, city names.\n\nNot typically used in automated geolocation.',
            example: 'boston-dc',
          },
          {
            name: 'geo.region_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region ISO code.',
            example: 'CA-QC',
          },
          {
            name: 'geo.region_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region name.',
            example: 'Quebec',
          },
          {
            name: 'ip',
            level: 'core',
            type: 'ip',
            description:
              'IP address of the server.\n\nCan be one or multiple IPv4 or IPv6 addresses.',
          },
          {
            name: 'mac',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'MAC address of the server.',
          },
          {
            name: 'nat.ip',
            level: 'extended',
            type: 'ip',
            description:
              'Translated ip of destination based NAT sessions (e.g. internet\nto private DMZ)\n\nTypically used with load balancers, firewalls, or routers.',
          },
          {
            name: 'nat.port',
            level: 'extended',
            type: 'long',
            format: 'string',
            description:
              'Translated port of destination based NAT sessions (e.g. internet\nto private DMZ)\n\nTypically used with load balancers, firewalls, or routers.',
          },
          {
            name: 'packets',
            level: 'core',
            type: 'long',
            description: 'Packets sent from the server to the client.',
            example: 12,
          },
          {
            name: 'port',
            level: 'core',
            type: 'long',
            format: 'string',
            description: 'Port of the server.',
          },
          {
            name: 'registered_domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The highest registered server domain, stripped of the subdomain.\n\nFor example, the registered domain for "foo.google.com" is "google.com".\n\nThis value can be determined precisely with a list like the public suffix\nlist (http://publicsuffix.org). Trying to approximate this by simply taking\nthe last two labels will not work well for TLDs such as "co.uk".',
            example: 'google.com',
          },
          {
            name: 'top_level_domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The effective top level domain (eTLD), also known as the domain\nsuffix, is the last part of the domain name. For example, the top level domain\nfor google.com is "com".\n\nThis value can be determined precisely with a list like the public suffix\nlist (http://publicsuffix.org). Trying to approximate this by simply taking\nthe last label will not work well for effective TLDs such as "co.uk".',
            example: 'co.uk',
          },
          {
            name: 'user.domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the user is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'user.email',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'User email address.',
          },
          {
            name: 'user.full_name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: "User's full name, if available.",
            example: 'Albert Einstein',
          },
          {
            name: 'user.group.domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the group is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'user.group.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifier for the group on the system/platform.',
          },
          {
            name: 'user.group.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the group.',
          },
          {
            name: 'user.hash',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique user hash to correlate information for a user in anonymized\nform.\n\nUseful if `user.id` or `user.name` contain confidential information and cannot\nbe used.',
          },
          {
            name: 'user.id',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifiers of the user.',
          },
          {
            name: 'user.name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Short name or login of the user.',
            example: 'albert',
          },
        ],
      },
      {
        name: 'service',
        title: 'Service',
        group: 2,
        description:
          'The service fields describe the service for or from which the data\nwas collected.\n\nThese fields help you find and correlate logs for a specific service and version.',
        type: 'group',
        fields: [
          {
            name: 'ephemeral_id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Ephemeral identifier of this service (if one exists).\n\nThis id normally changes across restarts, but `service.id` does not.',
            example: '8a4f500f',
          },
          {
            name: 'id',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique identifier of the running service. If the service is comprised\nof many nodes, the `service.id` should be the same for all nodes.\n\nThis id should uniquely identify the service. This makes it possible to correlate\nlogs and metrics for one specific service, no matter which particular node\nemitted the event.\n\nNote that if you need to see the events from one specific host of the service,\nyou should filter on that `host.name` or `host.id` instead.',
            example: 'd37e5ebfe0ae6c4972dbe9f0174a1637bb8247f6',
          },
          {
            name: 'name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the service data is collected from.\n\nThe name of the service is normally user given. This allows for distributed\nservices that run on multiple hosts to correlate the related instances based\non the name.\n\nIn the case of Elasticsearch the `service.name` could contain the cluster\nname. For Beats the `service.name` is by default a copy of the `service.type`\nfield if no name is specified.',
            example: 'elasticsearch-metrics',
          },
          {
            name: 'node.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of a service node.\n\nThis allows for two nodes of the same service running on the same host to\nbe differentiated. Therefore, `service.node.name` should typically be unique\nacross nodes of a given service.\n\nIn the case of Elasticsearch, the `service.node.name` could contain the unique\nnode name within the Elasticsearch cluster. In cases where the service doe not\nhave the concept of a node name, the host name or container name can be used\nto distinguish running instances that make up this service. If those do not\nprovide uniqueness (e.g. multiple instances of the service running on the\nsame host) - the node name can be manually set.',
            example: 'instance-0000000016',
          },
          {
            name: 'state',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Current state of the service.',
          },
          {
            name: 'type',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The type of the service data is collected from.\n\nThe type can be used to group and correlate logs and metrics from one service\ntype.\n\nExample: If logs or metrics are collected from Elasticsearch, `service.type`\nwould be `elasticsearch`.',
            example: 'elasticsearch',
          },
          {
            name: 'version',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Version of the service the data was collected from.\n\nThis allows to look at a data set only for a specific version of a service.',
            example: '3.2.4',
          },
        ],
      },
      {
        name: 'source',
        title: 'Source',
        group: 2,
        description:
          'Source fields describe details about the source of a packet/event.\n\nSource fields are usually populated in conjunction with destination fields.',
        type: 'group',
        fields: [
          {
            name: 'address',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Some event source addresses are defined ambiguously. The event\nwill sometimes list an IP, a domain or a unix socket.  You should always store\nthe raw address in the `.address` field.\n\nThen it should be duplicated to `.ip` or `.domain`, depending on which one\nit is.',
          },
          {
            name: 'as.number',
            level: 'extended',
            type: 'long',
            description:
              'Unique number allocated to the autonomous system. The autonomous\nsystem number (ASN) uniquely identifies each network on the Internet.',
            example: 15169,
          },
          {
            name: 'as.organization.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Organization name.',
            example: 'Google LLC',
          },
          {
            name: 'bytes',
            level: 'core',
            type: 'long',
            format: 'bytes',
            description: 'Bytes sent from the source to the destination.',
            example: 184,
          },
          {
            name: 'domain',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Source domain.',
          },
          {
            name: 'geo.city_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'City name.',
            example: 'Montreal',
          },
          {
            name: 'geo.continent_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the continent.',
            example: 'North America',
          },
          {
            name: 'geo.country_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country ISO code.',
            example: 'CA',
          },
          {
            name: 'geo.country_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Country name.',
            example: 'Canada',
          },
          {
            name: 'geo.location',
            level: 'core',
            type: 'geo_point',
            description: 'Longitude and latitude.',
            example: '{ "lon": -73.614830, "lat": 45.505918 }',
          },
          {
            name: 'geo.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'User-defined description of a location, at the level of granularity\nthey care about.\n\nCould be the name of their data centers, the floor number, if this describes\na local physical entity, city names.\n\nNot typically used in automated geolocation.',
            example: 'boston-dc',
          },
          {
            name: 'geo.region_iso_code',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region ISO code.',
            example: 'CA-QC',
          },
          {
            name: 'geo.region_name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Region name.',
            example: 'Quebec',
          },
          {
            name: 'ip',
            level: 'core',
            type: 'ip',
            description:
              'IP address of the source.\n\nCan be one or multiple IPv4 or IPv6 addresses.',
          },
          {
            name: 'mac',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'MAC address of the source.',
          },
          {
            name: 'nat.ip',
            level: 'extended',
            type: 'ip',
            description:
              'Translated ip of source based NAT sessions (e.g. internal client\nto internet)\n\nTypically connections traversing load balancers, firewalls, or routers.',
          },
          {
            name: 'nat.port',
            level: 'extended',
            type: 'long',
            format: 'string',
            description:
              'Translated port of source based NAT sessions. (e.g. internal client\nto internet)\n\nTypically used with load balancers, firewalls, or routers.',
          },
          {
            name: 'packets',
            level: 'core',
            type: 'long',
            description: 'Packets sent from the source to the destination.',
            example: 12,
          },
          {
            name: 'port',
            level: 'core',
            type: 'long',
            format: 'string',
            description: 'Port of the source.',
          },
          {
            name: 'registered_domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The highest registered source domain, stripped of the subdomain.\n\nFor example, the registered domain for "foo.google.com" is "google.com".\n\nThis value can be determined precisely with a list like the public suffix\nlist (http://publicsuffix.org). Trying to approximate this by simply taking\nthe last two labels will not work well for TLDs such as "co.uk".',
            example: 'google.com',
          },
          {
            name: 'top_level_domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The effective top level domain (eTLD), also known as the domain\nsuffix, is the last part of the domain name. For example, the top level domain\nfor google.com is "com".\n\nThis value can be determined precisely with a list like the public suffix\nlist (http://publicsuffix.org). Trying to approximate this by simply taking\nthe last label will not work well for effective TLDs such as "co.uk".',
            example: 'co.uk',
          },
          {
            name: 'user.domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the user is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'user.email',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'User email address.',
          },
          {
            name: 'user.full_name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: "User's full name, if available.",
            example: 'Albert Einstein',
          },
          {
            name: 'user.group.domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the group is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'user.group.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifier for the group on the system/platform.',
          },
          {
            name: 'user.group.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the group.',
          },
          {
            name: 'user.hash',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique user hash to correlate information for a user in anonymized\nform.\n\nUseful if `user.id` or `user.name` contain confidential information and cannot\nbe used.',
          },
          {
            name: 'user.id',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifiers of the user.',
          },
          {
            name: 'user.name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Short name or login of the user.',
            example: 'albert',
          },
        ],
      },
      {
        name: 'threat',
        title: 'Threat',
        group: 2,
        description:
          'Fields to classify events and alerts according to a threat taxonomy\nsuch as the Mitre ATT&CK framework.\n\nThese fields are for users to classify alerts from all of their sources (e.g.\nIDS, NGFW, etc.) within a common taxonomy. The threat.tactic.* are meant to\ncapture the high level category of the threat (e.g. "impact"). The threat.technique.*\nfields are meant to capture which kind of approach is used by this detected\nthreat, to accomplish the goal (e.g. "endpoint denial of service").',
        type: 'group',
        fields: [
          {
            name: 'framework',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the threat framework used to further categorize and classify\nthe tactic and technique of the reported threat. Framework classification\ncan be provided by detecting systems, evaluated at ingest time, or retrospectively\ntagged to events.',
            example: 'MITRE ATT&CK',
          },
          {
            name: 'tactic.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The id of tactic used by this threat. You can use the Mitre ATT&CK\nMatrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/\n)',
            example: 'TA0040',
          },
          {
            name: 'tactic.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the type of tactic used by this threat. You can use the\nMitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/\n)',
            example: 'impact',
          },
          {
            name: 'tactic.reference',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The reference url of tactic used by this threat. You can use the\nMitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/\n)',
            example: 'https://attack.mitre.org/tactics/TA0040/',
          },
          {
            name: 'technique.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The id of technique used by this tactic. You can use the Mitre\nATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/\n)',
            example: 'T1499',
          },
          {
            name: 'technique.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description:
              'The name of technique used by this tactic. You can use the Mitre\nATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/\n)',
            example: 'endpoint denial of service',
          },
          {
            name: 'technique.reference',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The reference url of technique used by this tactic. You can use\nthe Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/\n)',
            example: 'https://attack.mitre.org/techniques/T1499/',
          },
        ],
      },
      {
        name: 'tls',
        title: 'TLS',
        group: 2,
        description:
          'Fields related to a TLS connection. These fields focus on the TLS\nprotocol itself and intentionally avoids in-depth analysis of the related x.509\ncertificate files.',
        type: 'group',
        fields: [
          {
            name: 'cipher',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'String indicating the cipher used during the current connection.',
            example: 'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256',
            default_field: false,
          },
          {
            name: 'client.certificate',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'PEM-encoded stand-alone certificate offered by the client. This\nis usually mutually-exclusive of `client.certificate_chain` since this value\nalso exists in that list.',
            example: 'MII...',
            default_field: false,
          },
          {
            name: 'client.certificate_chain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Array of PEM-encoded certificates that make up the certificate\nchain offered by the client. This is usually mutually-exclusive of `client.certificate`\nsince that value should be the first certificate in the chain.',
            example: ['MII...', 'MII...'],
            default_field: false,
          },
          {
            name: 'client.hash.md5',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Certificate fingerprint using the MD5 digest of DER-encoded version\nof certificate offered by the client. For consistency with other hash values,\nthis value should be formatted as an uppercase hash.',
            example: '0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC',
            default_field: false,
          },
          {
            name: 'client.hash.sha1',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Certificate fingerprint using the SHA1 digest of DER-encoded version\nof certificate offered by the client. For consistency with other hash values,\nthis value should be formatted as an uppercase hash.',
            example: '9E393D93138888D288266C2D915214D1D1CCEB2A',
            default_field: false,
          },
          {
            name: 'client.hash.sha256',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Certificate fingerprint using the SHA256 digest of DER-encoded\nversion of certificate offered by the client. For consistency with other hash\nvalues, this value should be formatted as an uppercase hash.',
            example: '0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0',
            default_field: false,
          },
          {
            name: 'client.issuer',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Distinguished name of subject of the issuer of the x.509 certificate\npresented by the client.',
            example: 'CN=MyDomain Root CA, OU=Infrastructure Team, DC=mydomain, DC=com',
            default_field: false,
          },
          {
            name: 'client.ja3',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'A hash that identifies clients based on how they perform an SSL/TLS\nhandshake.',
            example: 'd4e5b18d6b55c71272893221c96ba240',
            default_field: false,
          },
          {
            name: 'client.not_after',
            level: 'extended',
            type: 'date',
            description:
              'Date/Time indicating when client certificate is no longer considered\nvalid.',
            example: '2021-01-01T00:00:00.000Z',
            default_field: false,
          },
          {
            name: 'client.not_before',
            level: 'extended',
            type: 'date',
            description: 'Date/Time indicating when client certificate is first considered\nvalid.',
            example: '1970-01-01T00:00:00.000Z',
            default_field: false,
          },
          {
            name: 'client.server_name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Also called an SNI, this tells the server which hostname to which\nthe client is attempting to connect. When this value is available, it should\nget copied to `destination.domain`.',
            example: 'www.elastic.co',
            default_field: false,
          },
          {
            name: 'client.subject',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Distinguished name of subject of the x.509 certificate presented\nby the client.',
            example: 'CN=myclient, OU=Documentation Team, DC=mydomain, DC=com',
            default_field: false,
          },
          {
            name: 'client.supported_ciphers',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Array of ciphers offered by the client during the client hello.',
            example: [
              'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384',
              'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384',
              '...',
            ],
            default_field: false,
          },
          {
            name: 'curve',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'String indicating the curve used for the given cipher, when applicable.',
            example: 'secp256r1',
            default_field: false,
          },
          {
            name: 'established',
            level: 'extended',
            type: 'boolean',
            description:
              'Boolean flag indicating if the TLS negotiation was successful and\ntransitioned to an encrypted tunnel.',
            default_field: false,
          },
          {
            name: 'next_protocol',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'String indicating the protocol being tunneled. Per the values in\nthe IANA registry (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids),\nthis string should be lower case.',
            example: 'http/1.1',
            default_field: false,
          },
          {
            name: 'resumed',
            level: 'extended',
            type: 'boolean',
            description:
              'Boolean flag indicating if this TLS connection was resumed from\nan existing TLS negotiation.',
            default_field: false,
          },
          {
            name: 'server.certificate',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'PEM-encoded stand-alone certificate offered by the server. This\nis usually mutually-exclusive of `server.certificate_chain` since this value\nalso exists in that list.',
            example: 'MII...',
            default_field: false,
          },
          {
            name: 'server.certificate_chain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Array of PEM-encoded certificates that make up the certificate\nchain offered by the server. This is usually mutually-exclusive of `server.certificate`\nsince that value should be the first certificate in the chain.',
            example: ['MII...', 'MII...'],
            default_field: false,
          },
          {
            name: 'server.hash.md5',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Certificate fingerprint using the MD5 digest of DER-encoded version\nof certificate offered by the server. For consistency with other hash values,\nthis value should be formatted as an uppercase hash.',
            example: '0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC',
            default_field: false,
          },
          {
            name: 'server.hash.sha1',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Certificate fingerprint using the SHA1 digest of DER-encoded version\nof certificate offered by the server. For consistency with other hash values,\nthis value should be formatted as an uppercase hash.',
            example: '9E393D93138888D288266C2D915214D1D1CCEB2A',
            default_field: false,
          },
          {
            name: 'server.hash.sha256',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Certificate fingerprint using the SHA256 digest of DER-encoded\nversion of certificate offered by the server. For consistency with other hash\nvalues, this value should be formatted as an uppercase hash.',
            example: '0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0',
            default_field: false,
          },
          {
            name: 'server.issuer',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Subject of the issuer of the x.509 certificate presented by the\nserver.',
            example: 'CN=MyDomain Root CA, OU=Infrastructure Team, DC=mydomain, DC=com',
            default_field: false,
          },
          {
            name: 'server.ja3s',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'A hash that identifies servers based on how they perform an SSL/TLS\nhandshake.',
            example: '394441ab65754e2207b1e1b457b3641d',
            default_field: false,
          },
          {
            name: 'server.not_after',
            level: 'extended',
            type: 'date',
            description:
              'Timestamp indicating when server certificate is no longer considered\nvalid.',
            example: '2021-01-01T00:00:00.000Z',
            default_field: false,
          },
          {
            name: 'server.not_before',
            level: 'extended',
            type: 'date',
            description: 'Timestamp indicating when server certificate is first considered\nvalid.',
            example: '1970-01-01T00:00:00.000Z',
            default_field: false,
          },
          {
            name: 'server.subject',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Subject of the x.509 certificate presented by the server.',
            example: 'CN=www.mydomain.com, OU=Infrastructure Team, DC=mydomain, DC=com',
            default_field: false,
          },
          {
            name: 'version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Numeric part of the version parsed from the original string.',
            example: '1.2',
            default_field: false,
          },
          {
            name: 'version_protocol',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Normalized lowercase protocol name parsed from original string.',
            example: 'tls',
            default_field: false,
          },
        ],
      },
      {
        name: 'tracing',
        title: 'Tracing',
        group: 2,
        description:
          'Distributed tracing makes it possible to analyze performance throughout\na microservice architecture all in one view. This is accomplished by tracing\nall of the requests - from the initial web request in the front-end service\n- to queries made through multiple back-end services.',
        type: 'group',
        fields: [
          {
            name: 'trace.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique identifier of the trace.\n\nA trace groups multiple events like transactions that belong together. For\nexample, a user request handled by multiple inter-connected services.',
            example: '4bf92f3577b34da6a3ce929d0e0e4736',
          },
          {
            name: 'transaction.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique identifier of the transaction.\n\nA transaction is the highest level of work measured within a service, such\nas a request to a server.',
            example: '00f067aa0ba902b7',
          },
        ],
      },
      {
        name: 'url',
        title: 'URL',
        group: 2,
        description:
          'URL fields provide support for complete or partial URLs, and supports\nthe breaking down into scheme, domain, path, and so on.',
        type: 'group',
        fields: [
          {
            name: 'domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Domain of the url, such as "www.elastic.co".\n\nIn some cases a URL may refer to an IP and/or port directly, without a domain\nname. In this case, the IP address would go to the `domain` field.',
            example: 'www.elastic.co',
          },
          {
            name: 'extension',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The field contains the file extension from the original request\nurl.\n\nThe file extension is only set if it exists, as not every url has a file extension.\n\nThe leading period must not be included. For example, the value must be "png",\nnot ".png".',
            example: 'png',
          },
          {
            name: 'fragment',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Portion of the url after the `#`, such as "top".\n\nThe `#` is not part of the fragment.',
          },
          {
            name: 'full',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description:
              'If full URLs are important to your use case, they should be stored\nin `url.full`, whether this field is reconstructed or present in the event\nsource.',
            example: 'https://www.elastic.co:443/search?q=elasticsearch#top',
          },
          {
            name: 'original',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description:
              'Unmodified original url as seen in the event source.\n\nNote that in network monitoring, the observed URL may be a full URL, whereas\nin access logs, the URL is often just represented as a path.\n\nThis field is meant to represent the URL as it was observed, complete or not.',
            example:
              'https://www.elastic.co:443/search?q=elasticsearch#top or /search?q=elasticsearch',
          },
          {
            name: 'password',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Password of the request.',
          },
          {
            name: 'path',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Path of the request, such as "/search".',
          },
          {
            name: 'port',
            level: 'extended',
            type: 'long',
            format: 'string',
            description: 'Port of the request, such as 443.',
            example: 443,
          },
          {
            name: 'query',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The query field describes the query string of the request, such\nas "q=elasticsearch".\n\nThe `?` is excluded from the query string. If a URL contains no `?`, there\nis no query field. If there is a `?` but no query, the query field exists\nwith an empty string. The `exists` query can be used to differentiate between\nthe two cases.',
          },
          {
            name: 'registered_domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The highest registered url domain, stripped of the subdomain.\n\nFor example, the registered domain for "foo.google.com" is "google.com".\n\nThis value can be determined precisely with a list like the public suffix\nlist (http://publicsuffix.org). Trying to approximate this by simply taking\nthe last two labels will not work well for TLDs such as "co.uk".',
            example: 'google.com',
          },
          {
            name: 'scheme',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Scheme of the request, such as "https".\n\nNote: The `:` is not part of the scheme.',
            example: 'https',
          },
          {
            name: 'top_level_domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The effective top level domain (eTLD), also known as the domain\nsuffix, is the last part of the domain name. For example, the top level domain\nfor google.com is "com".\n\nThis value can be determined precisely with a list like the public suffix\nlist (http://publicsuffix.org). Trying to approximate this by simply taking\nthe last label will not work well for effective TLDs such as "co.uk".',
            example: 'co.uk',
          },
          {
            name: 'username',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Username of the request.',
          },
        ],
      },
      {
        name: 'user',
        title: 'User',
        group: 2,
        description:
          'The user fields describe information about the user that is relevant\nto the event.\n\nFields can have one entry or multiple entries. If a user has more than one id,\nprovide an array that includes all of them.',
        type: 'group',
        fields: [
          {
            name: 'domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the user is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'email',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'User email address.',
          },
          {
            name: 'full_name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: "User's full name, if available.",
            example: 'Albert Einstein',
          },
          {
            name: 'group.domain',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Name of the directory the group is a member of.\n\nFor example, an LDAP or Active Directory domain name.',
          },
          {
            name: 'group.id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifier for the group on the system/platform.',
          },
          {
            name: 'group.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the group.',
          },
          {
            name: 'hash',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'Unique user hash to correlate information for a user in anonymized\nform.\n\nUseful if `user.id` or `user.name` contain confidential information and cannot\nbe used.',
          },
          {
            name: 'id',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Unique identifiers of the user.',
          },
          {
            name: 'name',
            level: 'core',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Short name or login of the user.',
            example: 'albert',
          },
        ],
      },
      {
        name: 'user_agent',
        title: 'User agent',
        group: 2,
        description:
          'The user_agent fields normally come from a browser request.\n\nThey often show up in web service logs coming from the parsed user agent string.',
        type: 'group',
        fields: [
          {
            name: 'device.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the device.',
            example: 'iPhone',
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Name of the user agent.',
            example: 'Safari',
          },
          {
            name: 'original',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
              },
            ],
            description: 'Unparsed user_agent string.',
            example:
              'Mozilla/5.0 (iPhone; CPU iPhone OS 12_1 like Mac OS X) AppleWebKit/605.1.15\n(KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1',
          },
          {
            name: 'os.family',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'OS family (such as redhat, debian, freebsd, windows).',
            example: 'debian',
          },
          {
            name: 'os.full',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Operating system name, including the version or code name.',
            example: 'Mac OS Mojave',
          },
          {
            name: 'os.kernel',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system kernel version as a raw string.',
            example: '4.4.0-112-generic',
          },
          {
            name: 'os.name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
                default_field: false,
              },
            ],
            description: 'Operating system name, without the version.',
            example: 'Mac OS X',
          },
          {
            name: 'os.platform',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system platform (such centos, ubuntu, windows).',
            example: 'darwin',
          },
          {
            name: 'os.version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Operating system version as a raw string.',
            example: '10.14.1',
          },
          {
            name: 'version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Version of the user agent.',
            example: 12,
          },
        ],
      },
      {
        name: 'vlan',
        title: 'VLAN',
        group: 2,
        description:
          'The VLAN fields are used to identify 802.1q tag(s) of a packet,\nas well as ingress and egress VLAN associations of an observer in relation to\na specific packet or connection.\n\nNetwork.vlan fields are used to record a single VLAN tag, or the outer tag in\nthe case of q-in-q encapsulations, for a packet or connection as observed, typically\nprovided by a network sensor (e.g. Zeek, Wireshark) passively reporting on traffic.\n\nNetwork.inner VLAN fields are used to report inner q-in-q 802.1q tags (multiple\n802.1q encapsulations) as observed, typically provided by a network sensor  (e.g.\nZeek, Wireshark) passively reporting on traffic. Network.inner VLAN fields should\nonly be used in addition to network.vlan fields to indicate q-in-q tagging.\n\nObserver.ingress and observer.egress VLAN values are used to record observer\nspecific information when observer events contain discrete ingress and egress\nVLAN information, typically provided by firewalls, routers, or load balancers.',
        type: 'group',
        fields: [
          {
            name: 'id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'VLAN ID as reported by the observer.',
            example: 10,
            default_field: false,
          },
          {
            name: 'name',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'Optional VLAN name as reported by the observer.',
            example: 'outside',
            default_field: false,
          },
        ],
      },
      {
        name: 'vulnerability',
        title: 'Vulnerability',
        group: 2,
        description:
          'The vulnerability fields describe information about a vulnerability\nthat is relevant to an event.',
        type: 'group',
        fields: [
          {
            name: 'category',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The type of system or architecture that the vulnerability affects.\nThese may be platform-specific (for example, Debian or SUSE) or general (for\nexample, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm[Qualys\nvulnerability categories])\n\nThis field must be an array.',
            example: '["Firewall"]',
            default_field: false,
          },
          {
            name: 'classification',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The classification of the vulnerability scoring system. For example\n(https://www.first.org/cvss/)',
            example: 'CVSS',
            default_field: false,
          },
          {
            name: 'description',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            multi_fields: [
              {
                name: 'text',
                type: 'text',
                norms: false,
              },
            ],
            description:
              'The description of the vulnerability that provides additional context\nof the vulnerability. For example (https://cve.mitre.org/about/faqs.html#cve_entry_descriptions_created[Common\nVulnerabilities and Exposure CVE description])',
            example: 'In macOS before 2.12.6, there is a vulnerability in the RPC...',
            default_field: false,
          },
          {
            name: 'enumeration',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The type of identifier used for this vulnerability. For example\n(https://cve.mitre.org/about/)',
            example: 'CVE',
            default_field: false,
          },
          {
            name: 'id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The identification (ID) is the number portion of a vulnerability\nentry. It includes a unique identification number for the vulnerability. For\nexample (https://cve.mitre.org/about/faqs.html#what_is_cve_id)[Common Vulnerabilities\nand Exposure CVE ID]',
            example: 'CVE-2019-00001',
            default_field: false,
          },
          {
            name: 'reference',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'A resource that provides additional information, context, and mitigations\nfor the identified vulnerability.',
            example: 'https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6111',
            default_field: false,
          },
          {
            name: 'report_id',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The report or scan identification number.',
            example: 20191018.0001,
            default_field: false,
          },
          {
            name: 'scanner.vendor',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description: 'The name of the vulnerability scanner vendor.',
            example: 'Tenable',
            default_field: false,
          },
          {
            name: 'score.base',
            level: 'extended',
            type: 'float',
            description:
              'Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\n\nBase scores cover an assessment for exploitability metrics (attack vector,\ncomplexity, privileges, and user interaction), impact metrics (confidentiality,\nintegrity, and availability), and scope. For example (https://www.first.org/cvss/specification-document)',
            example: 5.5,
            default_field: false,
          },
          {
            name: 'score.environmental',
            level: 'extended',
            type: 'float',
            description:
              'Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\n\nEnvironmental scores cover an assessment for any modified Base metrics, confidentiality,\nintegrity, and availability requirements. For example (https://www.first.org/cvss/specification-document)',
            example: 5.5,
            default_field: false,
          },
          {
            name: 'score.temporal',
            level: 'extended',
            type: 'float',
            description:
              'Scores can range from 0.0 to 10.0, with 10.0 being the most severe.\n\nTemporal scores cover an assessment for code maturity, remediation level,\nand confidence. For example (https://www.first.org/cvss/specification-document)',
            default_field: false,
          },
          {
            name: 'score.version',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The National Vulnerability Database (NVD) provides qualitative\nseverity rankings of "Low", "Medium", and "High" for CVSS v2.0 base score\nranges in addition to the severity ratings for CVSS v3.0 as they are defined\nin the CVSS v3.0 specification.\n\nCVSS is owned and managed by FIRST.Org, Inc. (FIRST), a US-based non-profit\norganization, whose mission is to help computer security incident response\nteams across the world. For example (https://nvd.nist.gov/vuln-metrics/cvss)',
            example: 2,
            default_field: false,
          },
          {
            name: 'severity',
            level: 'extended',
            type: 'keyword',
            ignore_above: 1024,
            description:
              'The severity of the vulnerability can help with metrics and internal\nprioritization regarding remediation. For example (https://nvd.nist.gov/vuln-metrics/cvss)',
            example: 'Critical',
            default_field: false,
          },
        ],
      },
    ],
  },
  {
    key: 'beat',
    anchor: 'beat-common',
    title: 'Beat',
    description: 'Contains common beat fields available in all event types.\n',
    fields: [
      {
        name: 'agent.hostname',
        type: 'keyword',
        description: 'Hostname of the agent.',
      },
      {
        name: 'beat.timezone',
        type: 'alias',
        path: 'event.timezone',
        migration: true,
      },
      {
        name: 'fields',
        type: 'object',
        object_type: 'keyword',
        description: 'Contains user configurable fields.\n',
      },
      {
        name: 'beat.name',
        type: 'alias',
        path: 'host.name',
        migration: true,
      },
      {
        name: 'beat.hostname',
        type: 'alias',
        path: 'agent.hostname',
        migration: true,
      },
      {
        name: 'timeseries.instance',
        type: 'keyword',
        description: 'Time series instance id',
      },
    ],
  },
  {
    key: 'cloud',
    title: 'Cloud provider metadata',
    description: 'Metadata from cloud providers added by the add_cloud_metadata processor.\n',
    fields: [
      {
        name: 'cloud.project.id',
        example: 'project-x',
        description: 'Name of the project in Google Cloud.\n',
      },
      {
        name: 'cloud.image.id',
        example: 'ami-abcd1234',
        description: 'Image ID for the cloud instance.\n',
      },
      {
        name: 'meta.cloud.provider',
        type: 'alias',
        path: 'cloud.provider',
        migration: true,
      },
      {
        name: 'meta.cloud.instance_id',
        type: 'alias',
        path: 'cloud.instance.id',
        migration: true,
      },
      {
        name: 'meta.cloud.instance_name',
        type: 'alias',
        path: 'cloud.instance.name',
        migration: true,
      },
      {
        name: 'meta.cloud.machine_type',
        type: 'alias',
        path: 'cloud.machine.type',
        migration: true,
      },
      {
        name: 'meta.cloud.availability_zone',
        type: 'alias',
        path: 'cloud.availability_zone',
        migration: true,
      },
      {
        name: 'meta.cloud.project_id',
        type: 'alias',
        path: 'cloud.project.id',
        migration: true,
      },
      {
        name: 'meta.cloud.region',
        type: 'alias',
        path: 'cloud.region',
        migration: true,
      },
    ],
  },
  {
    key: 'docker',
    title: 'Docker',
    description: 'Docker stats collected from Docker.\n',
    short_config: false,
    anchor: 'docker-processor',
    fields: [
      {
        name: 'docker',
        type: 'group',
        fields: [
          {
            name: 'container.id',
            type: 'alias',
            path: 'container.id',
            migration: true,
          },
          {
            name: 'container.image',
            type: 'alias',
            path: 'container.image.name',
            migration: true,
          },
          {
            name: 'container.name',
            type: 'alias',
            path: 'container.name',
            migration: true,
          },
          {
            name: 'container.labels',
            type: 'object',
            object_type: 'keyword',
            description: 'Image labels.\n',
          },
        ],
      },
    ],
  },
  {
    key: 'host',
    title: 'Host',
    description: 'Info collected for the host machine.\n',
    anchor: 'host-processor',
    fields: [
      {
        name: 'host',
        type: 'group',
        fields: [
          {
            name: 'containerized',
            type: 'boolean',
            description: 'If the host is a container.\n',
          },
          {
            name: 'os.build',
            type: 'keyword',
            example: '18D109',
            description: 'OS build information.\n',
          },
          {
            name: 'os.codename',
            type: 'keyword',
            example: 'stretch',
            description: 'OS codename, if any.\n',
          },
        ],
      },
    ],
  },
  {
    key: 'kubernetes',
    title: 'Kubernetes',
    description: 'Kubernetes metadata added by the kubernetes processor\n',
    short_config: false,
    anchor: 'kubernetes-processor',
    fields: [
      {
        name: 'kubernetes',
        type: 'group',
        fields: [
          {
            name: 'pod.name',
            type: 'keyword',
            description: 'Kubernetes pod name\n',
          },
          {
            name: 'pod.uid',
            type: 'keyword',
            description: 'Kubernetes Pod UID\n',
          },
          {
            name: 'namespace',
            type: 'keyword',
            description: 'Kubernetes namespace\n',
          },
          {
            name: 'node.name',
            type: 'keyword',
            description: 'Kubernetes node name\n',
          },
          {
            name: 'labels.*',
            type: 'object',
            object_type: 'keyword',
            object_type_mapping_type: '*',
            description: 'Kubernetes labels map\n',
          },
          {
            name: 'annotations.*',
            type: 'object',
            object_type: 'keyword',
            object_type_mapping_type: '*',
            description: 'Kubernetes annotations map\n',
          },
          {
            name: 'replicaset.name',
            type: 'keyword',
            description: 'Kubernetes replicaset name\n',
          },
          {
            name: 'deployment.name',
            type: 'keyword',
            description: 'Kubernetes deployment name\n',
          },
          {
            name: 'statefulset.name',
            type: 'keyword',
            description: 'Kubernetes statefulset name\n',
          },
          {
            name: 'container.name',
            type: 'keyword',
            description: 'Kubernetes container name\n',
          },
          {
            name: 'container.image',
            type: 'keyword',
            description: 'Kubernetes container image\n',
          },
        ],
      },
    ],
  },
  {
    key: 'process',
    title: 'Process',
    description: 'Process metadata fields\n',
    fields: [
      {
        name: 'process',
        type: 'group',
        fields: [
          {
            name: 'exe',
            type: 'alias',
            path: 'process.executable',
            migration: true,
          },
        ],
      },
    ],
  },
  {
    key: 'jolokia-autodiscover',
    title: 'Jolokia Discovery autodiscover provider',
    description: 'Metadata from Jolokia Discovery added by the jolokia provider.\n',
    fields: [
      {
        name: 'jolokia.agent.version',
        type: 'keyword',
        description: 'Version number of jolokia agent.\n',
      },
      {
        name: 'jolokia.agent.id',
        type: 'keyword',
        description:
          'Each agent has a unique id which can be either provided during startup of the agent in form of a configuration parameter or being autodetected. If autodected, the id has several parts: The IP, the process id, hashcode of the agent and its type.\n',
      },
      {
        name: 'jolokia.server.product',
        type: 'keyword',
        description: 'The container product if detected.\n',
      },
      {
        name: 'jolokia.server.version',
        type: 'keyword',
        description: "The container's version (if detected).\n",
      },
      {
        name: 'jolokia.server.vendor',
        type: 'keyword',
        description: 'The vendor of the container the agent is running in.\n',
      },
      {
        name: 'jolokia.url',
        type: 'keyword',
        description: 'The URL how this agent can be contacted.\n',
      },
      {
        name: 'jolokia.secured',
        type: 'boolean',
        description: 'Whether the agent was configured for authentication or not.\n',
      },
    ],
  },
  {
    key: 'common',
    title: 'Common',
    description:
      'These fields contain data about the environment in which the transaction or flow was captured.\n',
    fields: [
      {
        name: 'type',
        description:
          'The type of the transaction (for example, HTTP, MySQL, Redis, or RUM) or "flow" in case of flows.\n',
        required: true,
      },
      {
        name: 'server.process.name',
        description: 'The name of the process that served the transaction.\n',
      },
      {
        name: 'server.process.args',
        description: 'The command-line of the process that served the transaction.\n',
      },
      {
        name: 'server.process.executable',
        description: 'Absolute path to the server process executable.\n',
      },
      {
        name: 'server.process.working_directory',
        description: 'The working directory of the server process.\n',
      },
      {
        name: 'server.process.start',
        description: 'The time the server process started.\n',
      },
      {
        name: 'client.process.name',
        description: 'The name of the process that initiated the transaction.\n',
      },
      {
        name: 'client.process.args',
        description: 'The command-line of the process that initiated the transaction.\n',
      },
      {
        name: 'client.process.executable',
        description: 'Absolute path to the client process executable.\n',
      },
      {
        name: 'client.process.working_directory',
        description: 'The working directory of the client process.\n',
      },
      {
        name: 'client.process.start',
        description: 'The time the client process started.\n',
      },
      {
        name: 'real_ip',
        type: 'alias',
        path: 'network.forwarded_ip',
        migration: true,
        description:
          'If the server initiating the transaction is a proxy, this field contains the original client IP address. For HTTP, for example, the IP address extracted from a configurable HTTP header, by default `X-Forwarded-For`.\nUnless this field is disabled, it always has a value, and it matches the `client_ip` for non proxy clients.\n',
      },
      {
        name: 'transport',
        type: 'alias',
        path: 'network.transport',
        migration: true,
        description:
          'The transport protocol used for the transaction. If not specified, then tcp is assumed.\n',
      },
    ],
  },
  {
    key: 'flows_event',
    title: 'Flow Event',
    description: 'These fields contain data about the flow itself.\n',
    fields: [
      {
        name: 'flow.final',
        type: 'boolean',
        description:
          'Indicates if event is last event in flow. If final is false, the event reports an intermediate flow state only.\n',
      },
      {
        name: 'flow.id',
        description: 'Internal flow ID based on connection meta data and address.\n',
      },
      {
        name: 'flow.vlan',
        type: 'long',
        description:
          "VLAN identifier from the 802.1q frame. In case of a multi-tagged frame this field will be an array with the outer tag's VLAN identifier listed first.\n",
      },
      {
        name: 'flow_id',
        type: 'alias',
        path: 'flow.id',
        migration: true,
      },
      {
        name: 'final',
        type: 'alias',
        path: 'flow.final',
        migration: true,
      },
      {
        name: 'vlan',
        type: 'alias',
        path: 'flow.vlan',
        migration: true,
      },
      {
        name: 'source.stats.net_bytes_total',
        type: 'alias',
        path: 'source.bytes',
        migration: true,
      },
      {
        name: 'source.stats.net_packets_total',
        type: 'alias',
        path: 'source.packets',
        migration: true,
      },
      {
        name: 'dest.stats.net_bytes_total',
        type: 'alias',
        path: 'destination.bytes',
        migration: true,
      },
      {
        name: 'dest.stats.net_packets_total',
        type: 'alias',
        path: 'destination.packets',
        migration: true,
      },
    ],
  },
  {
    key: 'trans_event',
    title: 'Transaction Event',
    description: 'These fields contain data about the transaction itself.\n',
    fields: [
      {
        name: 'status',
        description:
          'The high level status of the transaction. The way to compute this value depends on the protocol, but the result has a meaning independent of the protocol.\n',
        required: true,
        possible_values: ['OK', 'Error', 'Server Error', 'Client Error'],
      },
      {
        name: 'method',
        description:
          'The command/verb/method of the transaction. For HTTP, this is the method name (GET, POST, PUT, and so on), for SQL this is the verb (SELECT, UPDATE, DELETE, and so on).\n',
      },
      {
        name: 'resource',
        description:
          'The logical resource that this transaction refers to. For HTTP, this is the URL path up to the last slash (/). For example, if the URL is `/users/1`, the resource is `/users`. For databases, the resource is typically the table name. The field is not filled for all transaction types.\n',
      },
      {
        name: 'path',
        required: true,
        description:
          'The path the transaction refers to. For HTTP, this is the URL. For SQL databases, this is the table name. For key-value stores, this is the key.\n',
      },
      {
        name: 'query',
        type: 'keyword',
        description:
          'The query in a human readable format. For HTTP, it will typically be something like `GET /users/_search?name=test`. For MySQL, it is something like `SELECT id from users where name=test`.\n',
      },
      {
        name: 'params',
        type: 'text',
        description:
          'The request parameters. For HTTP, these are the POST or GET parameters. For Thrift-RPC, these are the parameters from the request.\n',
      },
      {
        name: 'notes',
        type: 'alias',
        path: 'error.message',
        description:
          'Messages from Packetbeat itself. This field usually contains error messages for interpreting the raw data. This information can be helpful for troubleshooting.\n',
      },
    ],
  },
  {
    key: 'raw',
    title: 'Raw',
    description: 'These fields contain the raw transaction data.',
    fields: [
      {
        name: 'request',
        type: 'text',
        description:
          'For text protocols, this is the request as seen on the wire (application layer only). For binary protocols this is our representation of the request.\n',
      },
      {
        name: 'response',
        type: 'text',
        description:
          'For text protocols, this is the response as seen on the wire (application layer only). For binary protocols this is our representation of the request.\n',
      },
    ],
  },
  {
    key: 'trans_measurements',
    title: 'Measurements (Transactions)',
    description: 'These fields contain measurements related to the transaction.\n',
    fields: [
      {
        name: 'bytes_in',
        type: 'alias',
        path: 'source.bytes',
        description:
          'The number of bytes of the request. Note that this size is the application layer message length, without the length of the IP or TCP headers.\n',
      },
      {
        name: 'bytes_out',
        type: 'alias',
        path: 'destination.bytes',
        description:
          'The number of bytes of the response. Note that this size is the application layer message length, without the length of the IP or TCP headers.\n',
      },
    ],
  },
  {
    key: 'amqp',
    title: 'AMQP',
    description: 'AMQP specific event fields.',
    fields: [
      {
        name: 'amqp',
        type: 'group',
        fields: [
          {
            name: 'reply-code',
            type: 'long',
            description: 'AMQP reply code to an error, similar to http reply-code\n',
            example: 404,
          },
          {
            name: 'reply-text',
            type: 'keyword',
            description: 'Text explaining the error.\n',
          },
          {
            name: 'class-id',
            type: 'long',
            description: 'Failing method class.\n',
          },
          {
            name: 'method-id',
            type: 'long',
            description: 'Failing method ID.\n',
          },
          {
            name: 'exchange',
            type: 'keyword',
            description: 'Name of the exchange.\n',
          },
          {
            name: 'exchange-type',
            type: 'keyword',
            description: 'Exchange type.\n',
            example: 'fanout',
          },
          {
            name: 'passive',
            type: 'boolean',
            description: 'If set, do not create exchange/queue.\n',
          },
          {
            name: 'durable',
            type: 'boolean',
            description: 'If set, request a durable exchange/queue.\n',
          },
          {
            name: 'exclusive',
            type: 'boolean',
            description: 'If set, request an exclusive queue.\n',
          },
          {
            name: 'auto-delete',
            type: 'boolean',
            description: 'If set, auto-delete queue when unused.\n',
          },
          {
            name: 'no-wait',
            type: 'boolean',
            description: 'If set, the server will not respond to the method.\n',
          },
          {
            name: 'consumer-tag',
            description: 'Identifier for the consumer, valid within the current channel.\n',
          },
          {
            name: 'delivery-tag',
            type: 'long',
            description: 'The server-assigned and channel-specific delivery tag.\n',
          },
          {
            name: 'message-count',
            type: 'long',
            description:
              'The number of messages in the queue, which will be zero for newly-declared queues.\n',
          },
          {
            name: 'consumer-count',
            type: 'long',
            description: 'The number of consumers of a queue.\n',
          },
          {
            name: 'routing-key',
            type: 'keyword',
            description: 'Message routing key.\n',
          },
          {
            name: 'no-ack',
            type: 'boolean',
            description: 'If set, the server does not expect acknowledgements for messages.\n',
          },
          {
            name: 'no-local',
            type: 'boolean',
            description:
              'If set, the server will not send messages to the connection that published them.\n',
          },
          {
            name: 'if-unused',
            type: 'boolean',
            description: 'Delete only if unused.\n',
          },
          {
            name: 'if-empty',
            type: 'boolean',
            description: 'Delete only if empty.\n',
          },
          {
            name: 'queue',
            type: 'keyword',
            description: 'The queue name identifies the queue within the vhost.\n',
          },
          {
            name: 'redelivered',
            type: 'boolean',
            description:
              'Indicates that the message has been previously delivered to this or another client.\n',
          },
          {
            name: 'multiple',
            type: 'boolean',
            description: 'Acknowledge multiple messages.\n',
          },
          {
            name: 'arguments',
            type: 'object',
            description:
              'Optional additional arguments passed to some methods. Can be of various types.\n',
          },
          {
            name: 'mandatory',
            type: 'boolean',
            description: 'Indicates mandatory routing.\n',
          },
          {
            name: 'immediate',
            type: 'boolean',
            description: 'Request immediate delivery.\n',
          },
          {
            name: 'content-type',
            type: 'keyword',
            description: 'MIME content type.\n',
            example: 'text/plain',
          },
          {
            name: 'content-encoding',
            type: 'keyword',
            description: 'MIME content encoding.\n',
          },
          {
            name: 'headers',
            type: 'object',
            object_type: 'keyword',
            description: 'Message header field table.\n',
          },
          {
            name: 'delivery-mode',
            type: 'keyword',
            description: 'Non-persistent (1) or persistent (2).\n',
          },
          {
            name: 'priority',
            type: 'long',
            description: 'Message priority, 0 to 9.\n',
          },
          {
            name: 'correlation-id',
            type: 'keyword',
            description: 'Application correlation identifier.\n',
          },
          {
            name: 'reply-to',
            type: 'keyword',
            description: 'Address to reply to.\n',
          },
          {
            name: 'expiration',
            type: 'keyword',
            description: 'Message expiration specification.\n',
          },
          {
            name: 'message-id',
            type: 'keyword',
            description: 'Application message identifier.\n',
          },
          {
            name: 'timestamp',
            type: 'keyword',
            description: 'Message timestamp.\n',
          },
          {
            name: 'type',
            type: 'keyword',
            description: 'Message type name.\n',
          },
          {
            name: 'user-id',
            type: 'keyword',
            description: 'Creating user id.\n',
          },
          {
            name: 'app-id',
            type: 'keyword',
            description: 'Creating application id.\n',
          },
        ],
      },
    ],
  },
  {
    key: 'cassandra',
    title: 'Cassandra',
    description: 'Cassandra v4/3 specific event fields.',
    fields: [
      {
        name: 'no_request',
        type: 'alias',
        path: 'cassandra.no_request',
        migration: true,
      },
      {
        name: 'cassandra',
        type: 'group',
        description: 'Information about the Cassandra request and response.',
        fields: [
          {
            name: 'no_request',
            type: 'boolean',
            description: 'Indicates that there is no request because this is a PUSH message.\n',
          },
          {
            name: 'request',
            type: 'group',
            description: 'Cassandra request.',
            fields: [
              {
                name: 'headers',
                type: 'group',
                description: 'Cassandra request headers.',
                fields: [
                  {
                    name: 'version',
                    type: 'long',
                    description: 'The version of the protocol.',
                  },
                  {
                    name: 'flags',
                    type: 'keyword',
                    description: 'Flags applying to this frame.',
                  },
                  {
                    name: 'stream',
                    type: 'keyword',
                    description:
                      'A frame has a stream id.  If a client sends a request message with the stream id X, it is guaranteed that the stream id of the response to that message will be X.',
                  },
                  {
                    name: 'op',
                    type: 'keyword',
                    description: 'An operation type that distinguishes the actual message.',
                  },
                  {
                    name: 'length',
                    type: 'long',
                    description:
                      'A integer representing the length of the body of the frame (a frame is limited to 256MB in length).',
                  },
                ],
              },
              {
                name: 'query',
                type: 'keyword',
                description: 'The CQL query which client send to cassandra.',
              },
            ],
          },
          {
            name: 'response',
            type: 'group',
            description: 'Cassandra response.',
            fields: [
              {
                name: 'headers',
                type: 'group',
                description:
                  "Cassandra response headers, the structure is as same as request's header.",
                fields: [
                  {
                    name: 'version',
                    type: 'long',
                    description: 'The version of the protocol.',
                  },
                  {
                    name: 'flags',
                    type: 'keyword',
                    description: 'Flags applying to this frame.',
                  },
                  {
                    name: 'stream',
                    type: 'keyword',
                    description:
                      'A frame has a stream id.  If a client sends a request message with the stream id X, it is guaranteed that the stream id of the response to that message will be X.',
                  },
                  {
                    name: 'op',
                    type: 'keyword',
                    description: 'An operation type that distinguishes the actual message.',
                  },
                  {
                    name: 'length',
                    type: 'long',
                    description:
                      'A integer representing the length of the body of the frame (a frame is limited to 256MB in length).',
                  },
                ],
              },
              {
                name: 'result',
                type: 'group',
                description: 'Details about the returned result.',
                fields: [
                  {
                    name: 'type',
                    type: 'keyword',
                    description: 'Cassandra result type.',
                  },
                  {
                    name: 'rows',
                    type: 'group',
                    description: 'Details about the rows.',
                    fields: [
                      {
                        name: 'num_rows',
                        type: 'long',
                        description: 'Representing the number of rows present in this result.',
                      },
                      {
                        name: 'meta',
                        type: 'group',
                        description: 'Composed of result metadata.',
                        fields: [
                          {
                            name: 'keyspace',
                            type: 'keyword',
                            description:
                              'Only present after set Global_tables_spec, the keyspace name.',
                          },
                          {
                            name: 'table',
                            type: 'keyword',
                            description:
                              'Only present after set Global_tables_spec, the table name.',
                          },
                          {
                            name: 'flags',
                            type: 'keyword',
                            description:
                              'Provides information on the formatting of the remaining information.',
                          },
                          {
                            name: 'col_count',
                            type: 'long',
                            description:
                              'Representing the number of columns selected by the query that produced this result.',
                          },
                          {
                            name: 'pkey_columns',
                            type: 'long',
                            description: 'Representing the PK columns index and counts.',
                          },
                          {
                            name: 'paging_state',
                            type: 'keyword',
                            description:
                              'The paging_state is a bytes value that should be used in QUERY/EXECUTE to continue paging and retrieve the remainder of the result for this query.',
                          },
                        ],
                      },
                    ],
                  },
                  {
                    name: 'keyspace',
                    type: 'keyword',
                    description: 'Indicating the name of the keyspace that has been set.',
                  },
                  {
                    name: 'schema_change',
                    type: 'group',
                    description: 'The result to a schema_change message.',
                    fields: [
                      {
                        name: 'change',
                        type: 'keyword',
                        description: 'Representing the type of changed involved.',
                      },
                      {
                        name: 'keyspace',
                        type: 'keyword',
                        description: 'This describes which keyspace has changed.',
                      },
                      {
                        name: 'table',
                        type: 'keyword',
                        description: 'This describes which table has changed.',
                      },
                      {
                        name: 'object',
                        type: 'keyword',
                        description:
                          'This describes the name of said affected object (either the table, user type, function, or aggregate name).',
                      },
                      {
                        name: 'target',
                        type: 'keyword',
                        description:
                          'Target could be "FUNCTION" or "AGGREGATE", multiple arguments.',
                      },
                      {
                        name: 'name',
                        type: 'keyword',
                        description: 'The function/aggregate name.',
                      },
                      {
                        name: 'args',
                        type: 'keyword',
                        description: 'One string for each argument type (as CQL type).',
                      },
                    ],
                  },
                  {
                    name: 'prepared',
                    type: 'group',
                    description: 'The result to a PREPARE message.',
                    fields: [
                      {
                        name: 'prepared_id',
                        type: 'keyword',
                        description: 'Representing the prepared query ID.',
                      },
                      {
                        name: 'req_meta',
                        type: 'group',
                        description: 'This describes the request metadata.',
                        fields: [
                          {
                            name: 'keyspace',
                            type: 'keyword',
                            description:
                              'Only present after set Global_tables_spec, the keyspace name.',
                          },
                          {
                            name: 'table',
                            type: 'keyword',
                            description:
                              'Only present after set Global_tables_spec, the table name.',
                          },
                          {
                            name: 'flags',
                            type: 'keyword',
                            description:
                              'Provides information on the formatting of the remaining information.',
                          },
                          {
                            name: 'col_count',
                            type: 'long',
                            description:
                              'Representing the number of columns selected by the query that produced this result.',
                          },
                          {
                            name: 'pkey_columns',
                            type: 'long',
                            description: 'Representing the PK columns index and counts.',
                          },
                          {
                            name: 'paging_state',
                            type: 'keyword',
                            description:
                              'The paging_state is a bytes value that should be used in QUERY/EXECUTE to continue paging and retrieve the remainder of the result for this query.',
                          },
                        ],
                      },
                      {
                        name: 'resp_meta',
                        type: 'group',
                        description: 'This describes the metadata for the result set.',
                        fields: [
                          {
                            name: 'keyspace',
                            type: 'keyword',
                            description:
                              'Only present after set Global_tables_spec, the keyspace name.',
                          },
                          {
                            name: 'table',
                            type: 'keyword',
                            description:
                              'Only present after set Global_tables_spec, the table name.',
                          },
                          {
                            name: 'flags',
                            type: 'keyword',
                            description:
                              'Provides information on the formatting of the remaining information.',
                          },
                          {
                            name: 'col_count',
                            type: 'long',
                            description:
                              'Representing the number of columns selected by the query that produced this result.',
                          },
                          {
                            name: 'pkey_columns',
                            type: 'long',
                            description: 'Representing the PK columns index and counts.',
                          },
                          {
                            name: 'paging_state',
                            type: 'keyword',
                            description:
                              'The paging_state is a bytes value that should be used in QUERY/EXECUTE to continue paging and retrieve the remainder of the result for this query.',
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              {
                name: 'supported',
                type: 'object',
                object_type: 'keyword',
                description:
                  'Indicates which startup options are supported by the server. This message comes as a response to an OPTIONS message.',
              },
              {
                name: 'authentication',
                type: 'group',
                description:
                  'Indicates that the server requires authentication, and which authentication mechanism to use.',
                fields: [
                  {
                    name: 'class',
                    type: 'keyword',
                    description: 'Indicates the full class name of the IAuthenticator in use',
                  },
                ],
              },
              {
                name: 'warnings',
                type: 'keyword',
                description: 'The text of the warnings, only occur when Warning flag was set.',
              },
              {
                name: 'event',
                type: 'group',
                description:
                  'Event pushed by the server. A client will only receive events for the types it has REGISTERed to.',
                fields: [
                  {
                    name: 'type',
                    type: 'keyword',
                    description: 'Representing the event type.',
                  },
                  {
                    name: 'change',
                    type: 'keyword',
                    description:
                      'The message corresponding respectively to the type of change followed by the address of the new/removed node.',
                  },
                  {
                    name: 'host',
                    type: 'keyword',
                    description: 'Representing the node ip.',
                  },
                  {
                    name: 'port',
                    type: 'long',
                    description: 'Representing the node port.',
                  },
                  {
                    name: 'schema_change',
                    type: 'group',
                    description: 'The events details related to schema change.',
                    fields: [
                      {
                        name: 'change',
                        type: 'keyword',
                        description: 'Representing the type of changed involved.',
                      },
                      {
                        name: 'keyspace',
                        type: 'keyword',
                        description: 'This describes which keyspace has changed.',
                      },
                      {
                        name: 'table',
                        type: 'keyword',
                        description: 'This describes which table has changed.',
                      },
                      {
                        name: 'object',
                        type: 'keyword',
                        description:
                          'This describes the name of said affected object (either the table, user type, function, or aggregate name).',
                      },
                      {
                        name: 'target',
                        type: 'keyword',
                        description:
                          'Target could be "FUNCTION" or "AGGREGATE", multiple arguments.',
                      },
                      {
                        name: 'name',
                        type: 'keyword',
                        description: 'The function/aggregate name.',
                      },
                      {
                        name: 'args',
                        type: 'keyword',
                        description: 'One string for each argument type (as CQL type).',
                      },
                    ],
                  },
                ],
              },
              {
                name: 'error',
                type: 'group',
                description:
                  'Indicates an error processing a request. The body of the message will be an  error code followed by a error message. Then, depending on the exception, more content may follow.',
                fields: [
                  {
                    name: 'code',
                    type: 'long',
                    description: 'The error code of the Cassandra response.',
                  },
                  {
                    name: 'msg',
                    type: 'keyword',
                    description: 'The error message of the Cassandra response.',
                  },
                  {
                    name: 'type',
                    type: 'keyword',
                    description: 'The error type of the Cassandra response.',
                  },
                  {
                    name: 'details',
                    type: 'group',
                    description: 'The details of the error.',
                    fields: [
                      {
                        name: 'read_consistency',
                        type: 'keyword',
                        description:
                          'Representing the consistency level of the query that triggered the exception.',
                      },
                      {
                        name: 'required',
                        type: 'long',
                        description:
                          'Representing the number of nodes that should be alive to respect consistency level.',
                      },
                      {
                        name: 'alive',
                        type: 'long',
                        description:
                          'Representing the number of replicas that were known to be alive when the request had been processed (since an unavailable exception has been triggered).',
                      },
                      {
                        name: 'received',
                        type: 'long',
                        description:
                          'Representing the number of nodes having acknowledged the request.',
                      },
                      {
                        name: 'blockfor',
                        type: 'long',
                        description:
                          'Representing the number of replicas whose acknowledgement is required to achieve consistency level.',
                      },
                      {
                        name: 'write_type',
                        type: 'keyword',
                        description: 'Describe the type of the write that timed out.',
                      },
                      {
                        name: 'data_present',
                        type: 'boolean',
                        description: 'It means the replica that was asked for data had responded.',
                      },
                      {
                        name: 'keyspace',
                        type: 'keyword',
                        description: 'The keyspace of the failed function.',
                      },
                      {
                        name: 'table',
                        type: 'keyword',
                        description: 'The keyspace of the failed function.',
                      },
                      {
                        name: 'stmt_id',
                        type: 'keyword',
                        description: 'Representing the unknown ID.',
                      },
                      {
                        name: 'num_failures',
                        type: 'keyword',
                        description:
                          'Representing the number of nodes that experience a failure while executing the request.',
                      },
                      {
                        name: 'function',
                        type: 'keyword',
                        description: 'The name of the failed function.',
                      },
                      {
                        name: 'arg_types',
                        type: 'keyword',
                        description:
                          'One string for each argument type (as CQL type) of the failed function.',
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
  },
  {
    key: 'dhcpv4',
    title: 'DHCPv4',
    description: 'DHCPv4 event fields',
    fields: [
      {
        name: 'dhcpv4',
        type: 'group',
        fields: [
          {
            name: 'transaction_id',
            type: 'keyword',
            description:
              'Transaction ID, a random number chosen by the\nclient, used by the client and server to associate\nmessages and responses between a client and a\nserver.\n',
          },
          {
            name: 'seconds',
            type: 'long',
            description:
              'Number of seconds elapsed since client began address acquisition or\nrenewal process.\n',
          },
          {
            name: 'flags',
            type: 'keyword',
            description:
              'Flags are set by the client to indicate how the DHCP server should\nits reply -- either unicast or broadcast.\n',
          },
          {
            name: 'client_ip',
            type: 'ip',
            description: 'The current IP address of the client.',
          },
          {
            name: 'assigned_ip',
            type: 'ip',
            description:
              'The IP address that the DHCP server is assigning to the client.\nThis field is also known as "your" IP address.\n',
          },
          {
            name: 'server_ip',
            type: 'ip',
            description:
              'The IP address of the DHCP server that the client should use for the\nnext step in the bootstrap process.\n',
          },
          {
            name: 'relay_ip',
            type: 'ip',
            description:
              'The relay IP address used by the client to contact the server\n(i.e. a DHCP relay server).\n',
          },
          {
            name: 'client_mac',
            type: 'keyword',
            description: "The client's MAC address (layer two).",
          },
          {
            name: 'server_name',
            type: 'keyword',
            description:
              'The name of the server sending the message. Optional. Used in\nDHCPOFFER or DHCPACK messages.\n',
          },
          {
            name: 'op_code',
            type: 'keyword',
            example: 'bootreply',
            description: 'The message op code (bootrequest or bootreply).\n',
          },
          {
            name: 'hops',
            type: 'long',
            description: 'The number of hops the DHCP message went through.',
          },
          {
            name: 'hardware_type',
            type: 'keyword',
            description:
              'The type of hardware used for the local network (Ethernet,\nLocalTalk, etc).\n',
          },
          {
            name: 'option',
            type: 'group',
            fields: [
              {
                name: 'message_type',
                type: 'keyword',
                example: 'ack',
                description:
                  'The specific type of DHCP message being sent (e.g. discover,\noffer, request, decline, ack, nak, release, inform).\n',
              },
              {
                name: 'parameter_request_list',
                type: 'keyword',
                description:
                  'This option is used by a DHCP client to request values for\nspecified configuration parameters.\n',
              },
              {
                name: 'requested_ip_address',
                type: 'ip',
                description:
                  'This option is used in a client request (DHCPDISCOVER) to allow\nthe client to request that a particular IP address be assigned.\n',
              },
              {
                name: 'server_identifier',
                type: 'ip',
                description:
                  'IP address of the individual DHCP server which handled this\nmessage.\n',
              },
              {
                name: 'broadcast_address',
                type: 'ip',
                description:
                  "This option specifies the broadcast address in use on the\nclient's subnet.\n",
              },
              {
                name: 'max_dhcp_message_size',
                type: 'long',
                description:
                  'This option specifies the maximum length DHCP message that the\nclient is willing to accept.\n',
              },
              {
                name: 'class_identifier',
                type: 'keyword',
                description:
                  "This option is used by DHCP clients to optionally identify the\nvendor type and configuration of a DHCP client. Vendors may\nchoose to define specific vendor class identifiers to convey\nparticular configuration or other identification information\nabout a client.  For example, the identifier may encode the\nclient's hardware configuration.\n",
              },
              {
                name: 'domain_name',
                type: 'keyword',
                description:
                  'This option specifies the domain name that client should use\nwhen resolving hostnames via the Domain Name System.\n',
              },
              {
                name: 'dns_servers',
                type: 'ip',
                description:
                  'The domain name server option specifies a list of Domain Name\nSystem servers available to the client.\n',
              },
              {
                name: 'vendor_identifying_options',
                type: 'object',
                description:
                  'A DHCP client may use this option to unambiguously identify the\nvendor that manufactured the hardware on which the client is\nrunning, the software in use, or an industry consortium to which\nthe vendor belongs. This field is described in RFC 3925.\n',
              },
              {
                name: 'subnet_mask',
                type: 'ip',
                description:
                  'The subnet mask that the client should use on the currnet\nnetwork.\n',
              },
              {
                name: 'utc_time_offset_sec',
                type: 'long',
                description:
                  "The time offset field specifies the offset of the client's\nsubnet in seconds from Coordinated Universal Time (UTC).\n",
              },
              {
                name: 'router',
                type: 'ip',
                description:
                  "The router option specifies a list of IP addresses for routers\non the client's subnet.\n",
              },
              {
                name: 'time_servers',
                type: 'ip',
                description:
                  'The time server option specifies a list of RFC 868 time servers\navailable to the client.\n',
              },
              {
                name: 'ntp_servers',
                type: 'ip',
                description:
                  'This option specifies a list of IP addresses indicating NTP\nservers available to the client.\n',
              },
              {
                name: 'hostname',
                type: 'keyword',
                description: 'This option specifies the name of the client.\n',
              },
              {
                name: 'ip_address_lease_time_sec',
                type: 'long',
                description:
                  'This option is used in a client request (DHCPDISCOVER or\nDHCPREQUEST) to allow the client to request a lease time for the\nIP address.  In a server reply (DHCPOFFER), a DHCP server uses\nthis option to specify the lease time it is willing to offer.\n',
              },
              {
                name: 'message',
                type: 'text',
                description:
                  'This option is used by a DHCP server to provide an error message\nto a DHCP client in a DHCPNAK message in the event of a failure.\nA client may use this option in a DHCPDECLINE message to\nindicate the why the client declined the offered parameters.\n',
              },
              {
                name: 'renewal_time_sec',
                type: 'long',
                description:
                  'This option specifies the time interval from address assignment\nuntil the client transitions to the RENEWING state.\n',
              },
              {
                name: 'rebinding_time_sec',
                type: 'long',
                description:
                  'This option specifies the time interval from address assignment\nuntil the client transitions to the REBINDING state.\n',
              },
              {
                name: 'boot_file_name',
                type: 'keyword',
                description:
                  "This option is used to identify a bootfile when the 'file' field\nin the DHCP header has been used for DHCP options.\n",
              },
            ],
          },
        ],
      },
    ],
  },
  {
    key: 'dns',
    title: 'DNS',
    description: 'DNS-specific event fields.',
    fields: [
      {
        name: 'dns',
        type: 'group',
        fields: [
          {
            name: 'flags.authoritative',
            type: 'boolean',
            description:
              'A DNS flag specifying that the responding server is an authority for the domain name used in the question.\n',
          },
          {
            name: 'flags.recursion_available',
            type: 'boolean',
            description:
              'A DNS flag specifying whether recursive query support is available in the name server.\n',
          },
          {
            name: 'flags.recursion_desired',
            type: 'boolean',
            description:
              'A DNS flag specifying that the client directs the server to pursue a query recursively. Recursive query support is optional.\n',
          },
          {
            name: 'flags.authentic_data',
            type: 'boolean',
            description:
              'A DNS flag specifying that the recursive server considers the response authentic.\n',
          },
          {
            name: 'flags.checking_disabled',
            type: 'boolean',
            description:
              'A DNS flag specifying that the client disables the server signature validation of the query.\n',
          },
          {
            name: 'flags.truncated_response',
            type: 'boolean',
            description:
              'A DNS flag specifying that only the first 512 bytes of the reply were returned.\n',
          },
          {
            name: 'question.etld_plus_one',
            description:
              'The effective top-level domain (eTLD) plus one more label.\nFor example, the eTLD+1 for "foo.bar.golang.org." is "golang.org.".\nThe data for determining the eTLD comes from an embedded copy of the\ndata from http://publicsuffix.org.',
            example: 'amazon.co.uk.',
          },
          {
            name: 'answers_count',
            type: 'long',
            description: 'The number of resource records contained in the `dns.answers` field.\n',
          },
          {
            name: 'authorities',
            type: 'object',
            description:
              'An array containing a dictionary for each authority section from the answer.\n',
          },
          {
            name: 'authorities_count',
            type: 'long',
            description:
              'The number of resource records contained in the `dns.authorities` field. The `dns.authorities` field may or may not be included depending on the configuration of Packetbeat.\n',
          },
          {
            name: 'authorities.name',
            description: 'The domain name to which this resource record pertains.',
            example: 'example.com.',
          },
          {
            name: 'authorities.type',
            description: 'The type of data contained in this resource record.',
            example: 'NS',
          },
          {
            name: 'authorities.class',
            description: 'The class of DNS data contained in this resource record.',
            example: 'IN',
          },
          {
            name: 'additionals',
            type: 'object',
            description:
              'An array containing a dictionary for each additional section from the answer.\n',
          },
          {
            name: 'additionals_count',
            type: 'long',
            description:
              'The number of resource records contained in the `dns.additionals` field. The `dns.additionals` field may or may not be included depending on the configuration of Packetbeat.\n',
          },
          {
            name: 'additionals.name',
            description: 'The domain name to which this resource record pertains.',
            example: 'example.com.',
          },
          {
            name: 'additionals.type',
            description: 'The type of data contained in this resource record.',
            example: 'NS',
          },
          {
            name: 'additionals.class',
            description: 'The class of DNS data contained in this resource record.',
            example: 'IN',
          },
          {
            name: 'additionals.ttl',
            description:
              'The time interval in seconds that this resource record may be cached before it should be discarded. Zero values mean that the data should not be cached.\n',
            type: 'long',
          },
          {
            name: 'additionals.data',
            description:
              'The data describing the resource. The meaning of this data depends on the type and class of the resource record.\n',
          },
          {
            name: 'opt.version',
            description: 'The EDNS version.',
            example: '0',
          },
          {
            name: 'opt.do',
            type: 'boolean',
            description: 'If set, the transaction uses DNSSEC.',
          },
          {
            name: 'opt.ext_rcode',
            description: 'Extended response code field.',
            example: 'BADVERS',
          },
          {
            name: 'opt.udp_size',
            type: 'long',
            description: "Requestor's UDP payload size (in bytes).",
          },
        ],
      },
    ],
  },
  {
    key: 'http',
    title: 'HTTP',
    description: 'HTTP-specific event fields.',
    fields: [
      {
        name: 'http',
        type: 'group',
        description: 'Information about the HTTP request and response.',
        fields: [
          {
            name: 'request',
            description: 'HTTP request',
            type: 'group',
            fields: [
              {
                name: 'headers',
                type: 'object',
                object_type: 'keyword',
                description:
                  'A map containing the captured header fields from the request. Which headers to capture is configurable. If headers with the same header name are present in the message, they will be separated by commas.\n',
              },
              {
                name: 'params',
                type: 'alias',
                migration: true,
                path: 'url.query',
              },
            ],
          },
          {
            name: 'response',
            description: 'HTTP response',
            type: 'group',
            fields: [
              {
                name: 'status_phrase',
                description: 'The HTTP status phrase.',
                example: 'Not Found',
              },
              {
                name: 'headers',
                type: 'object',
                object_type: 'keyword',
                description:
                  'A map containing the captured header fields from the response. Which headers to capture is configurable. If headers with the same header name are present in the message, they will be separated by commas.\n',
              },
              {
                name: 'code',
                type: 'alias',
                migration: true,
                path: 'http.response.status_code',
              },
              {
                name: 'phrase',
                type: 'alias',
                migration: true,
                path: 'http.response.status_phrase',
              },
            ],
          },
        ],
      },
    ],
  },
  {
    key: 'icmp',
    title: 'ICMP',
    description: 'ICMP specific event fields.\n',
    fields: [
      {
        name: 'icmp',
        type: 'group',
        fields: [
          {
            name: 'version',
            description: 'The version of the ICMP protocol.',
            possible_values: [4, 6],
          },
          {
            name: 'request.message',
            type: 'keyword',
            description: 'A human readable form of the request.',
          },
          {
            name: 'request.type',
            type: 'long',
            description: 'The request type.',
          },
          {
            name: 'request.code',
            type: 'long',
            description: 'The request code.',
          },
          {
            name: 'response.message',
            type: 'keyword',
            description: 'A human readable form of the response.',
          },
          {
            name: 'response.type',
            type: 'long',
            description: 'The response type.',
          },
          {
            name: 'response.code',
            type: 'long',
            description: 'The response code.',
          },
        ],
      },
    ],
  },
  {
    key: 'memcache',
    title: 'Memcache',
    description: 'Memcached-specific event fields',
    fields: [
      {
        name: 'memcache',
        type: 'group',
        fields: [
          {
            name: 'protocol_type',
            type: 'keyword',
            description:
              'The memcache protocol implementation. The value can be "binary" for binary-based, "text" for text-based, or "unknown" for an unknown memcache protocol type.\n',
          },
          {
            name: 'request.line',
            type: 'keyword',
            description: 'The raw command line for unknown commands ONLY.\n',
          },
          {
            name: 'request.command',
            type: 'keyword',
            description:
              'The memcache command being requested in the memcache text protocol. For example "set" or "get". The binary protocol opcodes are translated into memcache text protocol commands.\n',
          },
          {
            name: 'response.command',
            type: 'keyword',
            description:
              'Either the text based protocol response message type or the name of the originating request if binary protocol is used.\n',
          },
          {
            name: 'request.type',
            type: 'keyword',
            description:
              'The memcache command classification. This value can be "UNKNOWN", "Load", "Store", "Delete", "Counter", "Info", "SlabCtrl", "LRUCrawler", "Stats", "Success", "Fail", or "Auth".\n',
          },
          {
            name: 'response.type',
            type: 'keyword',
            description:
              'The memcache command classification. This value can be "UNKNOWN", "Load", "Store", "Delete", "Counter", "Info", "SlabCtrl", "LRUCrawler", "Stats", "Success", "Fail", or "Auth". The text based protocol will employ any of these, whereas the binary based protocol will mirror the request commands only (see `memcache.response.status` for binary protocol).\n',
          },
          {
            name: 'response.error_msg',
            type: 'keyword',
            description:
              'The optional error message in the memcache response (text based protocol only).\n',
          },
          {
            name: 'request.opcode',
            type: 'keyword',
            description: 'The binary protocol message opcode name.\n',
          },
          {
            name: 'response.opcode',
            type: 'keyword',
            description: 'The binary protocol message opcode name.\n',
          },
          {
            name: 'request.opcode_value',
            type: 'long',
            description: 'The binary protocol message opcode value.\n',
          },
          {
            name: 'response.opcode_value',
            type: 'long',
            description: 'The binary protocol message opcode value.\n',
          },
          {
            name: 'request.opaque',
            type: 'long',
            description:
              'The binary protocol opaque header value used for correlating request with response messages.\n',
          },
          {
            name: 'response.opaque',
            type: 'long',
            description:
              'The binary protocol opaque header value used for correlating request with response messages.\n',
          },
          {
            name: 'request.vbucket',
            type: 'long',
            description: 'The vbucket index sent in the binary message.\n',
          },
          {
            name: 'response.status',
            type: 'keyword',
            description:
              'The textual representation of the response error code (binary protocol only).\n',
          },
          {
            name: 'response.status_code',
            type: 'long',
            description: 'The status code value returned in the response (binary protocol only).\n',
          },
          {
            name: 'request.keys',
            type: 'array',
            description: 'The list of keys sent in the store or load commands.\n',
          },
          {
            name: 'response.keys',
            type: 'array',
            description: 'The list of keys returned for the load command (if present).\n',
          },
          {
            name: 'request.count_values',
            type: 'long',
            description:
              'The number of values found in the memcache request message. If the command does not send any data, this field is missing.\n',
          },
          {
            name: 'response.count_values',
            type: 'long',
            description:
              'The number of values found in the memcache response message. If the command does not send any data, this field is missing.\n',
          },
          {
            name: 'request.values',
            type: 'array',
            description: 'The list of base64 encoded values sent with the request (if present).\n',
          },
          {
            name: 'response.values',
            type: 'array',
            description: 'The list of base64 encoded values sent with the response (if present).\n',
          },
          {
            name: 'request.bytes',
            type: 'long',
            format: 'bytes',
            description: 'The byte count of the values being transferred.\n',
          },
          {
            name: 'response.bytes',
            type: 'long',
            format: 'bytes',
            description: 'The byte count of the values being transferred.\n',
          },
          {
            name: 'request.delta',
            type: 'long',
            description: 'The counter increment/decrement delta value.\n',
          },
          {
            name: 'request.initial',
            type: 'long',
            description:
              'The counter increment/decrement initial value parameter (binary protocol only).\n',
          },
          {
            name: 'request.verbosity',
            type: 'long',
            description: 'The value of the memcache "verbosity" command.\n',
          },
          {
            name: 'request.raw_args',
            type: 'keyword',
            description:
              'The text protocol raw arguments for the "stats ..." and "lru crawl ..." commands.\n',
          },
          {
            name: 'request.source_class',
            type: 'long',
            description: "The source class id in 'slab reassign' command.\n",
          },
          {
            name: 'request.dest_class',
            type: 'long',
            description: "The destination class id in 'slab reassign' command.\n",
          },
          {
            name: 'request.automove',
            type: 'keyword',
            description:
              'The automove mode in the \'slab automove\' command expressed as a string. This value can be "standby"(=0), "slow"(=1), "aggressive"(=2), or the raw value if the value is unknown.\n',
          },
          {
            name: 'request.flags',
            type: 'long',
            description: 'The memcache command flags sent in the request (if present).\n',
          },
          {
            name: 'response.flags',
            type: 'long',
            description: 'The memcache message flags sent in the response (if present).\n',
          },
          {
            name: 'request.exptime',
            type: 'long',
            description:
              'The data expiry time in seconds sent with the memcache command (if present). If the value is <30 days, the expiry time is relative to "now", or else it is an absolute Unix time in seconds (32-bit).\n',
          },
          {
            name: 'request.sleep_us',
            type: 'long',
            description: "The sleep setting in microseconds for the 'lru_crawler sleep' command.\n",
          },
          {
            name: 'response.value',
            type: 'long',
            description: 'The counter value returned by a counter operation.\n',
          },
          {
            name: 'request.noreply',
            type: 'boolean',
            description:
              'Set to true if noreply was set in the request. The `memcache.response` field will be missing.\n',
          },
          {
            name: 'request.quiet',
            type: 'boolean',
            description:
              'Set to true if the binary protocol message is to be treated as a quiet message.\n',
          },
          {
            name: 'request.cas_unique',
            type: 'long',
            description: 'The CAS (compare-and-swap) identifier if present.\n',
          },
          {
            name: 'response.cas_unique',
            type: 'long',
            description:
              'The CAS (compare-and-swap) identifier to be used with CAS-based updates (if present).\n',
          },
          {
            name: 'response.stats',
            type: 'array',
            description:
              'The list of statistic values returned. Each entry is a dictionary with the fields "name" and "value".\n',
          },
          {
            name: 'response.version',
            type: 'keyword',
            description: 'The returned memcache version string.\n',
          },
        ],
      },
    ],
  },
  {
    key: 'mongodb',
    title: 'MongoDb',
    description:
      'MongoDB-specific event fields. These fields mirror closely the fields for the MongoDB wire protocol. The higher level fields (for example, `query` and `resource`) apply to MongoDB events as well.\n',
    fields: [
      {
        name: 'mongodb',
        type: 'group',
        fields: [
          {
            name: 'error',
            description:
              'If the MongoDB request has resulted in an error, this field contains the error message returned by the server.\n',
          },
          {
            name: 'fullCollectionName',
            description:
              'The full collection name. The full collection name is the concatenation of the database name with the collection name, using a dot (.) for the concatenation. For example, for the database foo and the collection bar, the full collection name is foo.bar.\n',
          },
          {
            name: 'numberToSkip',
            type: 'long',
            description:
              'Sets the number of documents to omit - starting from the first document in the resulting dataset - when returning the result of the query.\n',
          },
          {
            name: 'numberToReturn',
            type: 'long',
            description: 'The requested maximum number of documents to be returned.\n',
          },
          {
            name: 'numberReturned',
            type: 'long',
            description: 'The number of documents in the reply.\n',
          },
          {
            name: 'startingFrom',
            description: 'Where in the cursor this reply is starting.\n',
          },
          {
            name: 'query',
            description:
              'A JSON document that represents the query. The query will contain one or more elements, all of which must match for a document to be included in the result set. Possible elements include $query, $orderby, $hint, $explain, and $snapshot.\n',
          },
          {
            name: 'returnFieldsSelector',
            description:
              'A JSON document that limits the fields in the returned documents. The returnFieldsSelector contains one or more elements, each of which is the name of a field that should be returned, and the integer value 1.\n',
          },
          {
            name: 'selector',
            description:
              'A BSON document that specifies the query for selecting the document to update or delete.\n',
          },
          {
            name: 'update',
            description:
              'A BSON document that specifies the update to be performed. For information on specifying updates, see the Update Operations documentation from the MongoDB Manual.\n',
          },
          {
            name: 'cursorId',
            description:
              'The cursor identifier returned in the OP_REPLY. This must be the value that was returned from the database.\n',
          },
        ],
      },
    ],
  },
  {
    key: 'mysql',
    title: 'MySQL',
    description: 'MySQL-specific event fields.\n',
    fields: [
      {
        name: 'mysql',
        type: 'group',
        fields: [
          {
            name: 'affected_rows',
            type: 'long',
            description:
              'If the MySQL command is successful, this field contains the affected number of rows of the last statement.\n',
          },
          {
            name: 'insert_id',
            description:
              'If the INSERT query is successful, this field contains the id of the newly inserted row.\n',
          },
          {
            name: 'num_fields',
            description:
              'If the SELECT query is successful, this field is set to the number of fields returned.\n',
          },
          {
            name: 'num_rows',
            description:
              'If the SELECT query is successful, this field is set to the number of rows returned.\n',
          },
          {
            name: 'query',
            description: "The row mysql query as read from the transaction's request.\n",
          },
          {
            name: 'error_code',
            type: 'long',
            description: 'The error code returned by MySQL.\n',
          },
          {
            name: 'error_message',
            description: 'The error info message returned by MySQL.\n',
          },
        ],
      },
    ],
  },
  {
    key: 'nfs',
    title: 'NFS',
    description: 'NFS v4/3 specific event fields.',
    fields: [
      {
        name: 'nfs',
        type: 'group',
        fields: [
          {
            name: 'version',
            type: 'long',
            description: 'NFS protocol version number.',
          },
          {
            name: 'minor_version',
            type: 'long',
            description: 'NFS protocol minor version number.',
          },
          {
            name: 'tag',
            description: 'NFS v4 COMPOUND operation tag.',
          },
          {
            name: 'opcode',
            description: 'NFS operation name, or main operation name, in case of COMPOUND calls.\n',
          },
          {
            name: 'status',
            description: 'NFS operation reply status.',
          },
        ],
      },
      {
        name: 'rpc',
        type: 'group',
        description: 'ONC RPC specific event fields.',
        fields: [
          {
            name: 'xid',
            description: 'RPC message transaction identifier.',
          },
          {
            name: 'status',
            description: 'RPC message reply status.',
          },
          {
            name: 'auth_flavor',
            description: 'RPC authentication flavor.',
          },
          {
            name: 'cred.uid',
            type: 'long',
            description: "RPC caller's user id, in case of auth-unix.",
          },
          {
            name: 'cred.gid',
            type: 'long',
            description: "RPC caller's group id, in case of auth-unix.",
          },
          {
            name: 'cred.gids',
            description: "RPC caller's secondary group ids, in case of auth-unix.",
          },
          {
            name: 'cred.stamp',
            type: 'long',
            description: 'Arbitrary ID which the caller machine may generate.',
          },
          {
            name: 'cred.machinename',
            description: "The name of the caller's machine.",
          },
          {
            name: 'call_size',
            type: 'alias',
            path: 'source.bytes',
            migration: true,
            description: 'RPC call size with argument.',
          },
          {
            name: 'reply_size',
            type: 'alias',
            path: 'destination.bytes',
            migration: true,
            description: 'RPC reply size with argument.',
          },
        ],
      },
    ],
  },
  {
    key: 'pgsql',
    title: 'PostgreSQL',
    description: 'PostgreSQL-specific event fields.\n',
    fields: [
      {
        name: 'pgsql',
        type: 'group',
        fields: [
          {
            name: 'error_code',
            description: 'The PostgreSQL error code.',
            type: 'long',
          },
          {
            name: 'error_message',
            description: 'The PostgreSQL error message.',
          },
          {
            name: 'error_severity',
            description: 'The PostgreSQL error severity.',
            possible_values: ['ERROR', 'FATAL', 'PANIC'],
          },
          {
            name: 'num_fields',
            description:
              'If the SELECT query if successful, this field is set to the number of fields returned.\n',
          },
          {
            name: 'num_rows',
            description:
              'If the SELECT query if successful, this field is set to the number of rows returned.\n',
          },
        ],
      },
    ],
  },
  {
    key: 'redis',
    title: 'Redis',
    description: 'Redis-specific event fields.\n',
    fields: [
      {
        name: 'redis',
        type: 'group',
        fields: [
          {
            name: 'return_value',
            description: 'The return value of the Redis command in a human readable format.\n',
          },
          {
            name: 'error',
            description:
              'If the Redis command has resulted in an error, this field contains the error message returned by the Redis server.\n',
          },
        ],
      },
    ],
  },
  {
    key: 'thrift',
    title: 'Thrift-RPC',
    description: 'Thrift-RPC specific event fields.\n',
    fields: [
      {
        name: 'thrift',
        type: 'group',
        fields: [
          {
            name: 'params',
            description:
              'The RPC method call parameters in a human readable format. If the IDL files are available, the parameters use names whenever possible. Otherwise, the IDs from the message are used.\n',
          },
          {
            name: 'service',
            description: 'The name of the Thrift-RPC service as defined in the IDL files.\n',
          },
          {
            name: 'return_value',
            description:
              'The value returned by the Thrift-RPC call. This is encoded in a human readable format.\n',
          },
          {
            name: 'exceptions',
            description:
              'If the call resulted in exceptions, this field contains the exceptions in a human readable format.\n',
          },
        ],
      },
    ],
  },
  {
    key: 'tls_detailed',
    title: 'Detailed TLS',
    description: 'Detailed TLS-specific event fields.\n',
    fields: [
      {
        name: 'tls',
        type: 'group',
        fields: [
          {
            name: 'detailed',
            type: 'group',
            default_fields: false,
            fields: [
              {
                name: 'version',
                type: 'keyword',
                description: 'The version of the TLS protocol used.\n',
                example: 'TLS 1.3',
              },
              {
                name: 'resumption_method',
                type: 'keyword',
                description:
                  'If the session has been resumed, the underlying method used. One of "id" for TLS session ID or "ticket" for TLS ticket extension.\n',
              },
              {
                name: 'client_certificate_requested',
                type: 'boolean',
                description:
                  'Whether the server has requested the client to authenticate itself using a client certificate.\n',
              },
              {
                name: 'client_hello',
                type: 'group',
                fields: [
                  {
                    name: 'version',
                    type: 'keyword',
                    description:
                      'The version of the TLS protocol by which the client wishes to communicate during this session.\n',
                  },
                  {
                    name: 'session_id',
                    type: 'keyword',
                    description:
                      'Unique number to identify the session for the corresponding connection with the client.\n',
                  },
                  {
                    name: 'supported_compression_methods',
                    type: 'keyword',
                    description:
                      'The list of compression methods the client supports. See https://www.iana.org/assignments/comp-meth-ids/comp-meth-ids.xhtml\n',
                  },
                  {
                    name: 'extensions',
                    type: 'group',
                    description: 'The hello extensions provided by the client.',
                    fields: [
                      {
                        name: 'server_name_indication',
                        type: 'keyword',
                        description: 'List of hostnames',
                      },
                      {
                        name: 'application_layer_protocol_negotiation',
                        type: 'keyword',
                        description:
                          'List of application-layer protocols the client is willing to use.\n',
                      },
                      {
                        name: 'session_ticket',
                        type: 'keyword',
                        description:
                          'Length of the session ticket, if provided, or an empty string to advertise support for tickets.\n',
                      },
                      {
                        name: 'supported_versions',
                        type: 'keyword',
                        description: 'List of TLS versions that the client is willing to use.\n',
                      },
                      {
                        name: 'supported_groups',
                        type: 'keyword',
                        description:
                          'List of Elliptic Curve Cryptography (ECC) curve groups supported by the client.\n',
                      },
                      {
                        name: 'signature_algorithms',
                        type: 'keyword',
                        description:
                          'List of signature algorithms that may be use in digital signatures.\n',
                      },
                      {
                        name: 'ec_points_formats',
                        type: 'keyword',
                        description:
                          'List of Elliptic Curve (EC) point formats. Indicates the set of point formats that the client can parse.\n',
                      },
                      {
                        name: '_unparsed_',
                        type: 'keyword',
                        description: 'List of extensions that were left unparsed by Packetbeat.\n',
                      },
                    ],
                  },
                ],
              },
              {
                name: 'server_hello',
                type: 'group',
                fields: [
                  {
                    name: 'version',
                    type: 'keyword',
                    description:
                      'The version of the TLS protocol that is used for this session. It is the highest version supported by the server not exceeding the version requested in the client hello.\n',
                  },
                  {
                    name: 'selected_compression_method',
                    type: 'keyword',
                    description:
                      'The compression method selected by the server from the list provided in the client hello.\n',
                  },
                  {
                    name: 'session_id',
                    type: 'keyword',
                    description:
                      'Unique number to identify the session for the corresponding connection with the client.\n',
                  },
                  {
                    name: 'extensions',
                    type: 'group',
                    description: 'The hello extensions provided by the server.',
                    fields: [
                      {
                        name: 'application_layer_protocol_negotiation',
                        type: 'keyword',
                        description: 'Negotiated application layer protocol',
                      },
                      {
                        name: 'session_ticket',
                        type: 'keyword',
                        description:
                          'Used to announce that a session ticket will be provided by the server. Always an empty string.\n',
                      },
                      {
                        name: 'supported_versions',
                        type: 'keyword',
                        description: 'Negotiated TLS version to be used.\n',
                      },
                      {
                        name: 'ec_points_formats',
                        type: 'keyword',
                        description:
                          'List of Elliptic Curve (EC) point formats. Indicates the set of point formats that the server can parse.\n',
                      },
                      {
                        name: '_unparsed_',
                        type: 'keyword',
                        description: 'List of extensions that were left unparsed by Packetbeat.\n',
                      },
                    ],
                  },
                ],
              },
              {
                name: 'client_certificate',
                type: 'group',
                description: 'Certificate provided by the client for authentication.',
                fields: [
                  {
                    name: 'version',
                    type: 'long',
                    description: 'X509 format version.',
                  },
                  {
                    name: 'serial_number',
                    type: 'keyword',
                    description: "The certificate's serial number.",
                  },
                  {
                    name: 'not_before',
                    type: 'date',
                    description: 'Date before which the certificate is not valid.',
                  },
                  {
                    name: 'not_after',
                    type: 'date',
                    description: 'Date after which the certificate expires.',
                  },
                  {
                    name: 'public_key_algorithm',
                    type: 'keyword',
                    description:
                      "The algorithm used for this certificate's public key. One of RSA, DSA or ECDSA.\n",
                  },
                  {
                    name: 'public_key_size',
                    type: 'long',
                    description: 'Size of the public key.',
                  },
                  {
                    name: 'signature_algorithm',
                    type: 'keyword',
                    description: "The algorithm used for the certificate's signature.\n",
                  },
                  {
                    name: 'alternative_names',
                    type: 'keyword',
                    description: 'Subject Alternative Names for this certificate.',
                  },
                  {
                    name: 'subject',
                    type: 'group',
                    description: 'Subject represented by this certificate.',
                    fields: [
                      {
                        name: 'country',
                        type: 'keyword',
                        description: 'Country code.',
                      },
                      {
                        name: 'organization',
                        type: 'keyword',
                        description: 'Organization name.',
                      },
                      {
                        name: 'organizational_unit',
                        type: 'keyword',
                        description: 'Unit within organization.',
                      },
                      {
                        name: 'province',
                        type: 'keyword',
                        description: 'Province or region within country.',
                      },
                      {
                        name: 'common_name',
                        type: 'keyword',
                        description: 'Name or host name identified by the certificate.',
                      },
                      {
                        name: 'locality',
                        type: 'keyword',
                        description: 'Locality.',
                      },
                    ],
                  },
                  {
                    name: 'issuer',
                    type: 'group',
                    description: 'Entity that issued and signed this certificate.',
                    fields: [
                      {
                        name: 'country',
                        type: 'keyword',
                        description: 'Country code.',
                      },
                      {
                        name: 'organization',
                        type: 'keyword',
                        description: 'Organization name.',
                      },
                      {
                        name: 'organizational_unit',
                        type: 'keyword',
                        description: 'Unit within organization.',
                      },
                      {
                        name: 'province',
                        type: 'keyword',
                        description: 'Province or region within country.',
                      },
                      {
                        name: 'common_name',
                        type: 'keyword',
                        description: 'Name or host name identified by the certificate.',
                      },
                      {
                        name: 'locality',
                        type: 'keyword',
                        description: 'Locality.',
                      },
                    ],
                  },
                ],
              },
              {
                name: 'server_certificate',
                type: 'group',
                description: 'Certificate provided by the server for authentication.',
                fields: [
                  {
                    name: 'version',
                    type: 'long',
                    description: 'X509 format version.',
                  },
                  {
                    name: 'serial_number',
                    type: 'keyword',
                    description: "The certificate's serial number.",
                  },
                  {
                    name: 'not_before',
                    type: 'date',
                    description: 'Date before which the certificate is not valid.',
                  },
                  {
                    name: 'not_after',
                    type: 'date',
                    description: 'Date after which the certificate expires.',
                  },
                  {
                    name: 'public_key_algorithm',
                    type: 'keyword',
                    description:
                      "The algorithm used for this certificate's public key. One of RSA, DSA or ECDSA.\n",
                  },
                  {
                    name: 'public_key_size',
                    type: 'long',
                    description: 'Size of the public key.',
                  },
                  {
                    name: 'signature_algorithm',
                    type: 'keyword',
                    description: "The algorithm used for the certificate's signature.\n",
                  },
                  {
                    name: 'alternative_names',
                    type: 'keyword',
                    description: 'Subject Alternative Names for this certificate.',
                  },
                  {
                    name: 'subject',
                    type: 'group',
                    description: 'Subject represented by this certificate.',
                    fields: [
                      {
                        name: 'country',
                        type: 'keyword',
                        description: 'Country code.',
                      },
                      {
                        name: 'organization',
                        type: 'keyword',
                        description: 'Organization name.',
                      },
                      {
                        name: 'organizational_unit',
                        type: 'keyword',
                        description: 'Unit within organization.',
                      },
                      {
                        name: 'province',
                        type: 'keyword',
                        description: 'Province or region within country.',
                      },
                      {
                        name: 'common_name',
                        type: 'keyword',
                        description: 'Name or host name identified by the certificate.',
                      },
                      {
                        name: 'locality',
                        type: 'keyword',
                        description: 'Locality.',
                      },
                    ],
                  },
                  {
                    name: 'issuer',
                    type: 'group',
                    description: 'Entity that issued and signed this certificate.',
                    fields: [
                      {
                        name: 'country',
                        type: 'keyword',
                        description: 'Country code.',
                      },
                      {
                        name: 'organization',
                        type: 'keyword',
                        description: 'Organization name.',
                      },
                      {
                        name: 'organizational_unit',
                        type: 'keyword',
                        description: 'Unit within organization.',
                      },
                      {
                        name: 'province',
                        type: 'keyword',
                        description: 'Province or region within country.',
                      },
                      {
                        name: 'common_name',
                        type: 'keyword',
                        description: 'Name or host name identified by the certificate.',
                      },
                      {
                        name: 'locality',
                        type: 'keyword',
                        description: 'Locality.',
                      },
                    ],
                  },
                ],
              },
              {
                name: 'server_certificate_chain',
                type: 'array',
                description: 'Chain of trust for the server certificate.',
              },
              {
                name: 'client_certificate_chain',
                type: 'array',
                description: 'Chain of trust for the client certificate.',
              },
              {
                name: 'alert_types',
                type: 'keyword',
                description: 'An array containing the TLS alert type for every alert received.\n',
              },
            ],
          },
        ],
      },
      {
        name: 'tls.handshake_completed',
        type: 'alias',
        path: 'tls.established',
      },
      {
        name: 'tls.client_hello.supported_ciphers',
        type: 'alias',
        path: 'tls.client.supported_ciphers',
      },
      {
        name: 'tls.server_hello.selected_cipher',
        type: 'alias',
        path: 'tls.cipher',
      },
      {
        name: 'tls.fingerprints.ja3',
        type: 'alias',
        path: 'tls.client.ja3',
      },
      {
        name: 'tls.resumption_method',
        type: 'alias',
        path: 'tls.detailed.resumption_method',
      },
      {
        name: 'tls.client_certificate_requested',
        type: 'alias',
        path: 'tls.detailed.client_certificate_requested',
      },
      {
        name: 'tls.client_hello.version',
        type: 'alias',
        path: 'tls.detailed.client_hello.version',
      },
      {
        name: 'tls.client_hello.session_id',
        type: 'alias',
        path: 'tls.detailed.client_hello.session_id',
      },
      {
        name: 'tls.client_hello.supported_compression_methods',
        type: 'alias',
        path: 'tls.detailed.client_hello.supported_compression_methods',
      },
      {
        name: 'tls.client_hello.extensions.server_name_indication',
        type: 'alias',
        path: 'tls.detailed.client_hello.extensions.server_name_indication',
      },
      {
        name: 'tls.client_hello.extensions.application_layer_protocol_negotiation',
        type: 'alias',
        path: 'tls.detailed.client_hello.extensions.application_layer_protocol_negotiation',
      },
      {
        name: 'tls.client_hello.extensions.session_ticket',
        type: 'alias',
        path: 'tls.detailed.client_hello.extensions.session_ticket',
      },
      {
        name: 'tls.client_hello.extensions.supported_versions',
        type: 'alias',
        path: 'tls.detailed.client_hello.extensions.supported_versions',
      },
      {
        name: 'tls.client_hello.extensions.supported_groups',
        type: 'alias',
        path: 'tls.detailed.client_hello.extensions.supported_groups',
      },
      {
        name: 'tls.client_hello.extensions.signature_algorithms',
        type: 'alias',
        path: 'tls.detailed.client_hello.extensions.signature_algorithms',
      },
      {
        name: 'tls.client_hello.extensions.ec_points_formats',
        type: 'alias',
        path: 'tls.detailed.client_hello.extensions.ec_points_formats',
      },
      {
        name: 'tls.client_hello.extensions._unparsed_',
        type: 'alias',
        path: 'tls.detailed.client_hello.extensions._unparsed_',
      },
      {
        name: 'tls.server_hello.version',
        type: 'alias',
        path: 'tls.detailed.server_hello.version',
      },
      {
        name: 'tls.server_hello.selected_compression_method',
        type: 'alias',
        path: 'tls.detailed.server_hello.selected_compression_method',
      },
      {
        name: 'tls.server_hello.session_id',
        type: 'alias',
        path: 'tls.detailed.server_hello.session_id',
      },
      {
        name: 'tls.server_hello.extensions.application_layer_protocol_negotiation',
        type: 'alias',
        path: 'tls.detailed.server_hello.extensions.application_layer_protocol_negotiation',
      },
      {
        name: 'tls.server_hello.extensions.session_ticket',
        type: 'alias',
        path: 'tls.detailed.server_hello.extensions.session_ticket',
      },
      {
        name: 'tls.server_hello.extensions.supported_versions',
        type: 'alias',
        path: 'tls.detailed.server_hello.extensions.supported_versions',
      },
      {
        name: 'tls.server_hello.extensions.ec_points_formats',
        type: 'alias',
        path: 'tls.detailed.server_hello.extensions.ec_points_formats',
      },
      {
        name: 'tls.server_hello.extensions._unparsed_',
        type: 'alias',
        path: 'tls.detailed.server_hello.extensions._unparsed_',
      },
      {
        name: 'tls.client_certificate.version',
        type: 'alias',
        path: 'tls.detailed.client_certificate.version',
      },
      {
        name: 'tls.client_certificate.serial_number',
        type: 'alias',
        path: 'tls.detailed.client_certificate.serial_number',
      },
      {
        name: 'tls.client_certificate.not_before',
        type: 'alias',
        path: 'tls.detailed.client_certificate.not_before',
      },
      {
        name: 'tls.client_certificate.not_after',
        type: 'alias',
        path: 'tls.detailed.client_certificate.not_after',
      },
      {
        name: 'tls.client_certificate.public_key_algorithm',
        type: 'alias',
        path: 'tls.detailed.client_certificate.public_key_algorithm',
      },
      {
        name: 'tls.client_certificate.public_key_size',
        type: 'alias',
        path: 'tls.detailed.client_certificate.public_key_size',
      },
      {
        name: 'tls.client_certificate.signature_algorithm',
        type: 'alias',
        path: 'tls.detailed.client_certificate.signature_algorithm',
      },
      {
        name: 'tls.client_certificate.alternative_names',
        type: 'alias',
        path: 'tls.detailed.client_certificate.alternative_names',
      },
      {
        name: 'tls.client_certificate.subject.country',
        type: 'alias',
        path: 'tls.detailed.client_certificate.subject.country',
      },
      {
        name: 'tls.client_certificate.subject.organization',
        type: 'alias',
        path: 'tls.detailed.client_certificate.subject.organization',
      },
      {
        name: 'tls.client_certificate.subject.organizational_unit',
        type: 'alias',
        path: 'tls.detailed.client_certificate.subject.organizational_unit',
      },
      {
        name: 'tls.client_certificate.subject.province',
        type: 'alias',
        path: 'tls.detailed.client_certificate.subject.province',
      },
      {
        name: 'tls.client_certificate.subject.common_name',
        type: 'alias',
        path: 'tls.detailed.client_certificate.subject.common_name',
      },
      {
        name: 'tls.client_certificate.subject.locality',
        type: 'alias',
        path: 'tls.detailed.client_certificate.subject.locality',
      },
      {
        name: 'tls.client_certificate.issuer.country',
        type: 'alias',
        path: 'tls.detailed.client_certificate.issuer.country',
      },
      {
        name: 'tls.client_certificate.issuer.organization',
        type: 'alias',
        path: 'tls.detailed.client_certificate.issuer.organization',
      },
      {
        name: 'tls.client_certificate.issuer.organizational_unit',
        type: 'alias',
        path: 'tls.detailed.client_certificate.issuer.organizational_unit',
      },
      {
        name: 'tls.client_certificate.issuer.province',
        type: 'alias',
        path: 'tls.detailed.client_certificate.issuer.province',
      },
      {
        name: 'tls.client_certificate.issuer.common_name',
        type: 'alias',
        path: 'tls.detailed.client_certificate.issuer.common_name',
      },
      {
        name: 'tls.client_certificate.issuer.locality',
        type: 'alias',
        path: 'tls.detailed.client_certificate.issuer.locality',
      },
      {
        name: 'tls.server_certificate.version',
        type: 'alias',
        path: 'tls.detailed.server_certificate.version',
      },
      {
        name: 'tls.server_certificate.serial_number',
        type: 'alias',
        path: 'tls.detailed.server_certificate.serial_number',
      },
      {
        name: 'tls.server_certificate.not_before',
        type: 'alias',
        path: 'tls.detailed.server_certificate.not_before',
      },
      {
        name: 'tls.server_certificate.not_after',
        type: 'alias',
        path: 'tls.detailed.server_certificate.not_after',
      },
      {
        name: 'tls.server_certificate.public_key_algorithm',
        type: 'alias',
        path: 'tls.detailed.server_certificate.public_key_algorithm',
      },
      {
        name: 'tls.server_certificate.public_key_size',
        type: 'alias',
        path: 'tls.detailed.server_certificate.public_key_size',
      },
      {
        name: 'tls.server_certificate.signature_algorithm',
        type: 'alias',
        path: 'tls.detailed.server_certificate.signature_algorithm',
      },
      {
        name: 'tls.server_certificate.alternative_names',
        type: 'alias',
        path: 'tls.detailed.server_certificate.alternative_names',
      },
      {
        name: 'tls.server_certificate.subject.country',
        type: 'alias',
        path: 'tls.detailed.server_certificate.subject.country',
      },
      {
        name: 'tls.server_certificate.subject.organization',
        type: 'alias',
        path: 'tls.detailed.server_certificate.subject.organization',
      },
      {
        name: 'tls.server_certificate.subject.organizational_unit',
        type: 'alias',
        path: 'tls.detailed.server_certificate.subject.organizational_unit',
      },
      {
        name: 'tls.server_certificate.subject.province',
        type: 'alias',
        path: 'tls.detailed.server_certificate.subject.province',
      },
      {
        name: 'tls.server_certificate.subject.common_name',
        type: 'alias',
        path: 'tls.detailed.server_certificate.subject.common_name',
      },
      {
        name: 'tls.server_certificate.subject.locality',
        type: 'alias',
        path: 'tls.detailed.server_certificate.subject.locality',
      },
      {
        name: 'tls.server_certificate.issuer.country',
        type: 'alias',
        path: 'tls.detailed.server_certificate.issuer.country',
      },
      {
        name: 'tls.server_certificate.issuer.organization',
        type: 'alias',
        path: 'tls.detailed.server_certificate.issuer.organization',
      },
      {
        name: 'tls.server_certificate.issuer.organizational_unit',
        type: 'alias',
        path: 'tls.detailed.server_certificate.issuer.organizational_unit',
      },
      {
        name: 'tls.server_certificate.issuer.province',
        type: 'alias',
        path: 'tls.detailed.server_certificate.issuer.province',
      },
      {
        name: 'tls.server_certificate.issuer.common_name',
        type: 'alias',
        path: 'tls.detailed.server_certificate.issuer.common_name',
      },
      {
        name: 'tls.server_certificate.issuer.locality',
        type: 'alias',
        path: 'tls.detailed.server_certificate.issuer.locality',
      },
      {
        name: 'tls.alert_types',
        type: 'alias',
        path: 'tls.detailed.alert_types',
      },
    ],
  },
];
