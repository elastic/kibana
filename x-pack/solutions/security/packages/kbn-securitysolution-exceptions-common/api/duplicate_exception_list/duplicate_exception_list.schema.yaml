openapi: 3.0.0
info:
  title: Duplicate exception list API endpoint
  version: '2023-10-31'
paths:
  /api/exception_lists/_duplicate:
    post:
      x-labels: [serverless, ess]
      operationId: DuplicateExceptionList
      x-codegen-enabled: true
      summary: Duplicate an exception list
      description: Duplicate an existing exception list.
      parameters:
        - name: list_id
          in: query
          required: true
          schema:
            $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionListHumanId'
        - name: namespace_type
          in: query
          required: true
          schema:
            $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionNamespaceType'
          examples:
            single:
              value: single
            agnostic:
              value: agnostic
        - name: include_expired_exceptions
          in: query
          required: true
          description: Determines whether to include expired exceptions in the duplicated list. Expiration date defined by `expire_time`.
          schema:
            type: string
            enum: ['true', 'false']
            default: 'true'
            example: true
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionList'
              examples:
                detectionExceptionList:
                  value:
                    id: b2f4a715-6ab1-444c-8b1e-3fa1b1049429
                    list_id: d6390d60-bce3-4a48-9002-52db600f329c
                    type: detection
                    name: Sample Detection Exception List [Duplicate]
                    description: This is a sample detection type exception
                    immutable: false
                    namespace_type: single
                    os_types: []
                    tags: [malware]
                    version: 1
                    _version: WzExNDY1LDFd
                    tie_breaker_id: 6fa670bd-666d-4c9c-9f1e-d1dbc516e985
                    created_at: 2025-01-09T16:19:50.280Z
                    created_by: elastic
                    updated_at: 2025-01-09T16:19:50.280Z
                    updated_by: elastic
        400:
          description: Invalid input data response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
                  - $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
              examples:
                badRequest:
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: "[request query]: namespace_type: Invalid enum value. Expected 'agnostic' | 'single', received 'foo'"
        401:
          description: Unsuccessful authentication response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
              examples:
                unauthorized:
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: '[security_exception\n\tRoot causes:\n\t\tsecurity_exception: unable to authenticate user [elastic] for REST request [/_security/_authenticate]]: unable to authenticate user [elastic] for REST request [/_security/_authenticate]'
        403:
          description: Not enough privileges response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
              examples:
                forbidden:
                  value:
                    statusCode: 403
                    error: Forbidden
                    message: 'API [POST /api/exception_lists/_duplicate] is unauthorized for user, this action is granted by the Kibana privileges [lists-all]'
        404:
          description: Exception list not found
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
              examples:
                notFound:
                  value:
                    message": 'exception list id: "foo" does not exist'
                    status_code": 404
        405:
          description: Exception list to duplicate not found response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
