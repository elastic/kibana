openapi: 3.0.0
info:
  title: Create exception list API endpoint
  version: '2023-10-31'
paths:
  /api/exception_lists:
    post:
      x-labels: [serverless, ess]
      operationId: CreateExceptionList
      x-codegen-enabled: true
      summary: Create an exception list
      description: |
        An exception list groups exception items and can be associated with detection rules. You can assign detection rules with multiple exception lists.
        > info
        > All exception items added to the same list are evaluated using `OR` logic. That is, if any of the items in a list evaluate to `true`, the exception prevents the rule from generating an alert. Likewise, `OR` logic is used for evaluating exceptions when more than one exception list is assigned to a rule. To use the `AND` operator, you can define multiple clauses (`entries`) in a single exception item.
      requestBody:
        description: Exception list's properties
        required: true
        content:
          application/json:
            schema:
              type: object
              example:
                list_id: simple_list
                type: detection
                name: Sample Detection Exception List
                description: This is a sample detection type exception list.
                namespace_type: single
                tags: [malware]
                os_types: [linux]
              properties:
                list_id:
                  $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionListHumanId'
                name:
                  $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionListName'
                description:
                  $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionListDescription'
                type:
                  $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionListType'
                namespace_type:
                  $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionNamespaceType'
                  default: 'single'
                os_types:
                  $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionListOsTypeArray'
                tags:
                  $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionListTags'
                  default: []
                meta:
                  $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionListMeta'
                version:
                  $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionListVersion'
                  default: 1
              required:
                - name
                - description
                - type
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '../model/exception_list_common.schema.yaml#/components/schemas/ExceptionList'
              examples:
                simpleList:
                  value:
                    id: 9e5fc75a-a3da-46c5-96e3-a2ec59c6bb85
                    list_id: simple_list
                    type: detection
                    name: Sample Detection Exception List
                    description: This is a sample detection type exception list.
                    immutable: false
                    namespace_type: single
                    os_types: [linux]
                    tags: [malware]
                    version: 1
                    _version: WzIsMV0=
                    tie_breaker_id: 78f1aca1-f8ee-4eb5-9ceb-f5c3ee656cb3
                    created_at: '2025-01-07T19:34:27.942Z'
                    created_by: elastic
                    updated_at: '2025-01-07T19:34:27.942Z'
                    updated_by: elastic
        400:
          description: Invalid input data response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
                  - $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
        401:
          description: Unsuccessful authentication response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
        403:
          description: Not enough privileges response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
        409:
          description: Exception list already exists response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
