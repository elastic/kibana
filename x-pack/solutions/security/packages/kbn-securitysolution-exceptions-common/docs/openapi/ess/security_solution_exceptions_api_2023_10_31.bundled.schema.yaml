openapi: 3.0.3
info:
  description: >-
    Exceptions API allows you to manage detection rule exceptions to prevent a
    rule from generating an alert from incoming events even when the rule's
    other criteria are met.
  title: Security Exceptions API (Elastic Cloud and self-hosted)
  version: '2023-10-31'
servers:
  - url: http://{kibana_host}:{port}
    variables:
      kibana_host:
        default: localhost
      port:
        default: '5601'
paths:
  /api/detection_engine/rules/{id}/exceptions:
    post:
      description: Create exception items that apply to a single detection rule.
      operationId: CreateRuleExceptionListItems
      parameters:
        - description: Detection rule's identifier
          examples:
            id:
              value: 330bdd28-eedf-40e1-bed0-f10176c7f9e0
          in: path
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/RuleId'
      requestBody:
        content:
          application/json:
            schema:
              example:
                items:
                  - description: This is a sample detection type exception item.
                    entries:
                      - field: actingProcess.file.signer
                        operator: excluded
                        type: exists
                      - field: host.name
                        operator: included
                        type: match_any
                        value:
                          - saturn
                          - jupiter
                    item_id: simple_list_item
                    list_id: simple_list
                    name: Sample Exception List Item
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    type: simple
              type: object
              properties:
                items:
                  items:
                    $ref: '#/components/schemas/CreateRuleExceptionListItemProps'
                  type: array
              required:
                - items
        description: Rule exception items.
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                ruleExceptionItems:
                  value:
                    - _version: WzQsMV0=
                      comments: []
                      created_at: 2025-01-07T20:07:33.119Z
                      created_by: elastic
                      description: This is a sample detection type exception item.
                      entries:
                        - field: actingProcess.file.signer
                          operator: excluded
                          type: exists
                        - field: host.name
                          operator: included
                          type: match_any
                          value:
                            - saturn
                            - jupiter
                      id: 71a9f4b2-c85c-49b4-866f-c71eb9e67da2
                      item_id: simple_list_item
                      list_id: simple_list
                      name: Sample Exception List Item
                      namespace_type: single
                      os_types:
                        - linux
                      tags:
                        - malware
                      tie_breaker_id: 09434836-9db9-4942-a234-5a9268e0b34c
                      type: simple
                      updated_at: 2025-01-07T20:07:33.119Z
                      updated_by: elastic
              schema:
                items:
                  $ref: '#/components/schemas/ExceptionListItem'
                type: array
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badPayload:
                  value:
                    error: Bad Request
                    message: Invalid request payload JSON format
                    statusCode: 400
                badRequest:
                  value:
                    error: Bad Request
                    message: '[request params]: id: Invalid uuid'
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    message: Unable to create exception-list
                    status_code: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Create rule exception items
      tags:
        - Security Exceptions API
  /api/exception_lists:
    delete:
      description: Delete an exception list using the `id` or `list_id` field.
      operationId: DeleteExceptionList
      parameters:
        - description: >-
            Exception list's identifier. Either `id` or `list_id` must be
            specified.
          in: query
          name: id
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionListId'
        - description: >-
            Human readable exception list string identifier, e.g.
            `trusted-linux-processes`. Either `id` or `list_id` must be
            specified.
          examples:
            autogeneratedId:
              value: 71a9f4b2-c85c-49b4-866f-c71eb9e67da2
            list_id:
              value: simple_list
          in: query
          name: list_id
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionListHumanId'
        - examples:
            agnostic:
              value: agnostic
            single:
              value: single
          in: query
          name: namespace_type
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionNamespaceType'
            default: single
      responses:
        '200':
          content:
            application/json:
              examples:
                detectionExceptionList:
                  value:
                    _version: WzIsMV0=
                    created_at: 2025-01-07T19:34:27.942Z
                    created_by: elastic
                    description: This is a sample detection type exception list.
                    id: 9e5fc75a-a3da-46c5-96e3-a2ec59c6bb85
                    immutable: false
                    list_id: simple_list
                    name: Sample Detection Exception List
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 78f1aca1-f8ee-4eb5-9ceb-f5c3ee656cb3
                    type: detection
                    updated_at: 2025-01-07T19:34:27.942Z
                    updated_by: elastic
                    version: 1
              schema:
                $ref: '#/components/schemas/ExceptionList'
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request
                    message: >-
                      [request query]: namespace_type.0: Invalid enum value.
                      Expected 'agnostic' | 'single', received 'blob'
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [DELETE
                      /api/exception_lists?list_id=simple_list&namespace_type=single]
                      is unauthorized for user, this action is granted by the
                      Kibana privileges [lists-all]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '404':
          content:
            application/json:
              examples:
                notFound:
                  value:
                    message: 'exception list list_id: "foo" does not exist'
                    status_code: 404
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list not found response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Delete an exception list
      tags:
        - Security Exceptions API
    get:
      description: Get the details of an exception list using the `id` or `list_id` field.
      operationId: ReadExceptionList
      parameters:
        - description: >-
            Exception list's identifier. Either `id` or `list_id` must be
            specified.
          in: query
          name: id
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionListId'
        - description: >-
            Human readable exception list string identifier, e.g.
            `trusted-linux-processes`. Either `id` or `list_id` must be
            specified.
          in: query
          name: list_id
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionListHumanId'
        - examples:
            agnostic:
              value: agnostic
            single:
              value: single
          in: query
          name: namespace_type
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionNamespaceType'
            default: single
      responses:
        '200':
          content:
            application/json:
              examples:
                detectionType:
                  value:
                    _version: WzIsMV0=
                    created_at: 2025-01-07T19:34:27.942Z
                    created_by: elastic
                    description: This is a sample detection type exception list.
                    id: 9e5fc75a-a3da-46c5-96e3-a2ec59c6bb85
                    immutable: false
                    list_id: simple_list
                    name: Sample Detection Exception List
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 78f1aca1-f8ee-4eb5-9ceb-f5c3ee656cb3
                    type: detection
                    updated_at: 2025-01-07T19:34:27.942Z
                    updated_by: elastic
                    version: 1
              schema:
                $ref: '#/components/schemas/ExceptionList'
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request
                    message: >-
                      [request query]: namespace_type.0: Invalid enum value.
                      Expected 'agnostic' | 'single', received 'blob'
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [GET
                      /api/exception_lists?list_id=simple_list&namespace_type=single]
                      is unauthorized for user, this action is granted by the
                      Kibana privileges [lists-read]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '404':
          content:
            application/json:
              examples:
                notFound:
                  value:
                    message": 'exception list id: "foo" does not exist'
                    status_code": 404
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list item not found response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Get exception list details
      tags:
        - Security Exceptions API
    post:
      description: >
        An exception list groups exception items and can be associated with
        detection rules. You can assign exception lists to multiple detection
        rules.

        > info

        > All exception items added to the same list are evaluated using `OR`
        logic. That is, if any of the items in a list evaluate to `true`, the
        exception prevents the rule from generating an alert. Likewise, `OR`
        logic is used for evaluating exceptions when more than one exception
        list is assigned to a rule. To use the `AND` operator, you can define
        multiple clauses (`entries`) in a single exception item.
      operationId: CreateExceptionList
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: This is a sample detection type exception list.
                list_id: simple_list
                name: Sample Detection Exception List
                namespace_type: single
                os_types:
                  - linux
                tags:
                  - malware
                type: detection
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ExceptionListDescription'
                list_id:
                  $ref: '#/components/schemas/ExceptionListHumanId'
                meta:
                  $ref: '#/components/schemas/ExceptionListMeta'
                name:
                  $ref: '#/components/schemas/ExceptionListName'
                namespace_type:
                  $ref: '#/components/schemas/ExceptionNamespaceType'
                  default: single
                os_types:
                  $ref: '#/components/schemas/ExceptionListOsTypeArray'
                tags:
                  $ref: '#/components/schemas/ExceptionListTags'
                  default: []
                type:
                  $ref: '#/components/schemas/ExceptionListType'
                version:
                  $ref: '#/components/schemas/ExceptionListVersion'
                  default: 1
              required:
                - name
                - description
                - type
        description: Exception list's properties
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                autogeneratedListId:
                  value:
                    _version: WzMsMV0=
                    created_at: 2025-01-09T01:05:23.019Z
                    created_by: elastic
                    description: >-
                      This is a sample detection type exception with an
                      autogenerated list_id.
                    id: 28243c2f-624a-4443-823d-c0b894880931
                    immutable: false
                    list_id: 8c1aae4c-1ef5-4bce-a2e3-16584b501783
                    name: Sample Detection Exception List
                    namespace_type: single
                    os_types: []
                    tags:
                      - malware
                    tie_breaker_id: ad94de31-39f7-4ad7-b8e4-988bfa95f338
                    type: detection
                    updated_at: 2025-01-09T01:05:23.020Z
                    updated_by: elastic
                    version: 1
                namespaceAgnostic:
                  value:
                    _version: WzUsMV0=
                    created_at: 2025-01-09T01:10:36.369Z
                    created_by: elastic
                    description: This is a sample agnostic endpoint type exception.
                    id: 1a744e77-22ca-4b6b-9085-54f55275ebe5
                    immutable: false
                    list_id: b935eb55-7b21-4c1c-b235-faa1df23b3d6
                    name: Sample Agnostic Endpoint Exception List
                    namespace_type: agnostic
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 49ea0adc-a2b8-4d83-a8f3-2fb98301dea3
                    type: endpoint
                    updated_at: 2025-01-09T01:10:36.369Z
                    updated_by: elastic
                    version: 1
                typeDetection:
                  value:
                    _version: WzIsMV0=
                    created_at: 2025-01-07T19:34:27.942Z
                    created_by: elastic
                    description: This is a sample detection type exception list.
                    id: 9e5fc75a-a3da-46c5-96e3-a2ec59c6bb85
                    immutable: false
                    list_id: simple_list
                    name: Sample Detection Exception List
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 78f1aca1-f8ee-4eb5-9ceb-f5c3ee656cb3
                    type: detection
                    updated_at: 2025-01-07T19:34:27.942Z
                    updated_by: elastic
                    version: 1
                typeEndpoint:
                  value:
                    _version: WzQsMV0=
                    created_at: 2025-01-09T01:07:49.658Z
                    created_by: elastic
                    description: This is a sample endpoint type exception list.
                    id: a79f4730-6e32-4278-abfc-349c0add7d54
                    immutable: false
                    list_id: endpoint_list
                    name: Sample Endpoint Exception List
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 94a028af-8f47-427a-aca5-ffaf829e64ee
                    type: endpoint
                    updated_at: 2025-01-09T01:07:49.658Z
                    updated_by: elastic
                    version: 1
              schema:
                $ref: '#/components/schemas/ExceptionList'
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request
                    message: '[request body]: list_id: Expected string, received number'
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: "[security_exception\n\tRoot causes:\n\t\tsecurity_exception: unable to authenticate user [elastic] for REST request [/_security/_authenticate]]: unable to authenticate user [elastic] for REST request [/_security/_authenticate]"
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [POST /api/exception_lists] is unauthorized for user,
                      this action is granted by the Kibana privileges
                      [lists-all]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '409':
          content:
            application/json:
              examples:
                alreadyExists:
                  value:
                    message: 'exception list id: "simple_list" already exists'
                    status_code: 409
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list already exists response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Create an exception list
      tags:
        - Security Exceptions API
    put:
      description: Update an exception list using the `id` or `list_id` field.
      operationId: UpdateExceptionList
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: Different description
                list_id: simple_list
                name: Updated exception list name
                os_types:
                  - linux
                tags:
                  - draft malware
                type: detection
              type: object
              properties:
                _version:
                  description: >-
                    The version id, normally returned by the API when the item
                    was retrieved. Use it ensure updates are done against the
                    latest version.
                  type: string
                description:
                  $ref: '#/components/schemas/ExceptionListDescription'
                id:
                  $ref: '#/components/schemas/ExceptionListId'
                list_id:
                  $ref: '#/components/schemas/ExceptionListHumanId'
                meta:
                  $ref: '#/components/schemas/ExceptionListMeta'
                name:
                  $ref: '#/components/schemas/ExceptionListName'
                namespace_type:
                  $ref: '#/components/schemas/ExceptionNamespaceType'
                  default: single
                os_types:
                  $ref: '#/components/schemas/ExceptionListOsTypeArray'
                  default: []
                tags:
                  $ref: '#/components/schemas/ExceptionListTags'
                type:
                  $ref: '#/components/schemas/ExceptionListType'
                version:
                  $ref: '#/components/schemas/ExceptionListVersion'
              required:
                - name
                - description
                - type
        description: Exception list's properties
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                simpleList:
                  value:
                    _version: WzExLDFd
                    created_at: 2025-01-07T20:43:55.264Z
                    created_by: elastic
                    description: Different description
                    id: fa7f545f-191b-4d32-b1f0-c7cd62a79e55
                    immutable: false
                    list_id: simple_list
                    name: Updated exception list name
                    namespace_type: single
                    os_types: []
                    tags:
                      - draft malware
                    tie_breaker_id: 319fe983-acdd-4806-b6c4-3098eae9392f
                    type: detection
                    updated_at: 2025-01-07T21:32:03.726Z
                    updated_by: elastic
                    version: 2
              schema:
                $ref: '#/components/schemas/ExceptionList'
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request
                    message: '[request body]: list_id: Expected string, received number'
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [PUT /api/exception_lists] is unauthorized for user,
                      this action is granted by the Kibana privileges
                      [lists-all]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '404':
          content:
            application/json:
              examples:
                notFound:
                  value:
                    message": 'exception list id: "foo" does not exist'
                    status_code": 404
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list not found response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Update an exception list
      tags:
        - Security Exceptions API
  /api/exception_lists/_duplicate:
    post:
      description: Duplicate an existing exception list.
      operationId: DuplicateExceptionList
      parameters:
        - in: query
          name: list_id
          required: true
          schema:
            $ref: '#/components/schemas/ExceptionListHumanId'
        - examples:
            agnostic:
              value: agnostic
            single:
              value: single
          in: query
          name: namespace_type
          required: true
          schema:
            $ref: '#/components/schemas/ExceptionNamespaceType'
        - description: >-
            Determines whether to include expired exceptions in the duplicated
            list. Expiration date defined by `expire_time`.
          in: query
          name: include_expired_exceptions
          required: true
          schema:
            default: 'true'
            enum:
              - 'true'
              - 'false'
            example: true
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                detectionExceptionList:
                  value:
                    _version: WzExNDY1LDFd
                    created_at: 2025-01-09T16:19:50.280Z
                    created_by: elastic
                    description: This is a sample detection type exception
                    id: b2f4a715-6ab1-444c-8b1e-3fa1b1049429
                    immutable: false
                    list_id: d6390d60-bce3-4a48-9002-52db600f329c
                    name: Sample Detection Exception List [Duplicate]
                    namespace_type: single
                    os_types: []
                    tags:
                      - malware
                    tie_breaker_id: 6fa670bd-666d-4c9c-9f1e-d1dbc516e985
                    type: detection
                    updated_at: 2025-01-09T16:19:50.280Z
                    updated_by: elastic
                    version: 1
              schema:
                $ref: '#/components/schemas/ExceptionList'
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request
                    message: >-
                      [request query]: namespace_type: Invalid enum value.
                      Expected 'agnostic' | 'single', received 'foo'
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [POST /api/exception_lists/_duplicate] is unauthorized
                      for user, this action is granted by the Kibana privileges
                      [lists-all]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '404':
          content:
            application/json:
              examples:
                notFound:
                  value:
                    message": 'exception list id: "foo" does not exist'
                    status_code": 404
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Exception list not found
        '405':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list to duplicate not found response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Duplicate an exception list
      tags:
        - Security Exceptions API
  /api/exception_lists/_export:
    post:
      description: Export an exception list and its associated items to an NDJSON file.
      operationId: ExportExceptionList
      parameters:
        - in: query
          name: id
          required: true
          schema:
            $ref: '#/components/schemas/ExceptionListId'
        - in: query
          name: list_id
          required: true
          schema:
            $ref: '#/components/schemas/ExceptionListHumanId'
        - examples:
            agnostic:
              value: agnostic
            single:
              value: single
          in: query
          name: namespace_type
          required: true
          schema:
            $ref: '#/components/schemas/ExceptionNamespaceType'
        - description: >-
            Determines whether to include expired exceptions in the exported
            list. Expiration date defined by `expire_time`.
          example: true
          in: query
          name: include_expired_exceptions
          required: true
          schema:
            default: 'true'
            enum:
              - 'true'
              - 'false'
            type: string
      responses:
        '200':
          content:
            application/ndjson:
              examples:
                exportSavedObjectsResponse:
                  value: >
                    {"_version":"WzExNDU5LDFd","created_at":"2025-01-09T16:18:17.757Z","created_by":"elastic","description":"This
                    is a sample detection type
                    exception","id":"c86c2da0-2ab6-4343-b81c-216ef27e8d75","immutable":false,"list_id":"simple_list","name":"Sample
                    Detection Exception
                    List","namespace_type":"single","os_types":[],"tags":["user
                    added string for a
                    tag","malware"],"tie_breaker_id":"cf4a7b92-732d-47f0-a0d5-49a35a1736bf","type":"detection","updated_at":"2025-01-09T16:18:17.757Z","updated_by":"elastic","version":1}

                    {"_version":"WzExNDYxLDFd","comments":[],"created_at":"2025-01-09T16:18:42.308Z","created_by":"elastic","description":"This
                    is a sample endpoint type
                    exception","entries":[{"type":"exists","field":"actingProcess.file.signer","operator":"excluded"},{"type":"match_any","field":"host.name","value":["some
                    host","another
                    host"],"operator":"included"}],"id":"f37597ce-eaa7-4b64-9100-4301118f6806","item_id":"simple_list_item","list_id":"simple_list","name":"Sample
                    Endpoint Exception
                    List","namespace_type":"single","os_types":["linux"],"tags":["user
                    added string for a
                    tag","malware"],"tie_breaker_id":"4ca3ef3e-9721-42c0-8107-cf47e094d40f","type":"simple","updated_at":"2025-01-09T16:18:42.308Z","updated_by":"elastic"}

                    {"exported_exception_list_count":1,"exported_exception_list_item_count":1,"missing_exception_list_item_count":0,"missing_exception_list_items":[],"missing_exception_lists":[],"missing_exception_lists_count":0}
              schema:
                description: >-
                  A `.ndjson` file containing specified exception list and its
                  items
                format: binary
                type: string
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request
                    message: >-
                      [request query]: list_id: Required, namespace_type:
                      Required
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [POST /api/exception_lists/_export] is unauthorized
                      for user, this action is granted by the Kibana privileges
                      [lists-all]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '404':
          content:
            application/json:
              examples:
                notFound:
                  value:
                    message": 'exception list id: "foo" does not exist'
                    status_code": 404
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list not found response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Export an exception list
      tags:
        - Security Exceptions API
  /api/exception_lists/_find:
    get:
      description: Get a list of all exception list containers.
      operationId: FindExceptionLists
      parameters:
        - description: >
            Filters the returned results according to the value of the specified
            field.


            Uses the `so type.field name:field` value syntax, where `so type`
            can be:


            - `exception-list`: Specify a space-aware exception list.

            - `exception-list-agnostic`: Specify an exception list that is
            shared across spaces.
          in: query
          name: filter
          required: false
          schema:
            $ref: '#/components/schemas/FindExceptionListsFilter'
        - description: >
            Determines whether the returned containers are Kibana associated
            with a Kibana space

            or available in all spaces (`agnostic` or `single`)
          examples:
            agnostic:
              value: agnostic
            single:
              value: single
          in: query
          name: namespace_type
          required: false
          schema:
            default:
              - single
            items:
              $ref: '#/components/schemas/ExceptionNamespaceType'
            type: array
        - description: The page number to return
          in: query
          name: page
          required: false
          schema:
            example: 1
            minimum: 1
            type: integer
        - description: The number of exception lists to return per page
          in: query
          name: per_page
          required: false
          schema:
            example: 20
            minimum: 1
            type: integer
        - description: Determines which field is used to sort the results.
          in: query
          name: sort_field
          required: false
          schema:
            example: name
            type: string
        - description: Determines the sort order, which can be `desc` or `asc`.
          in: query
          name: sort_order
          required: false
          schema:
            enum:
              - desc
              - asc
            example: desc
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                simpleLists:
                  value:
                    data:
                      - _version: WzIsMV0=
                        created_at: 2025-01-07T19:34:27.942Z
                        created_by: elastic
                        description: This is a sample detection type exception list.
                        id: 9e5fc75a-a3da-46c5-96e3-a2ec59c6bb85
                        immutable: false
                        list_id: simple_list
                        name: Detection Exception List
                        namespace_type: single
                        os_types: []
                        tags:
                          - malware
                        tie_breaker_id: 78f1aca1-f8ee-4eb5-9ceb-f5c3ee656cb3
                        type: detection
                        updated_at: 2025-01-07T19:34:27.942Z
                        updated_by: elastic
                        version: 1
                    page: 1
                    per_page: 20
                    total: 1
              schema:
                type: object
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/ExceptionList'
                    type: array
                  page:
                    minimum: 1
                    type: integer
                  per_page:
                    minimum: 1
                    type: integer
                  total:
                    minimum: 0
                    type: integer
                required:
                  - data
                  - page
                  - per_page
                  - total
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request
                    message: >-
                      [request query]: namespace_type.0: Invalid enum value.
                      Expected 'agnostic' | 'single', received 'blob'
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [GET /api/exception_lists/_find?namespace_type=single]
                      is unauthorized for user, this action is granted by the
                      Kibana privileges [lists-read]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Get exception lists
      tags:
        - Security Exceptions API
  /api/exception_lists/_import:
    post:
      description: Import an exception list and its associated items from an NDJSON file.
      operationId: ImportExceptionList
      parameters:
        - description: >
            Determines whether existing exception lists with the same `list_id`
            are overwritten.

            If any exception items have the same `item_id`, those are also
            overwritten.
          in: query
          name: overwrite
          required: false
          schema:
            default: false
            example: false
            type: boolean
        - description: >
            Determines whether the list being imported will have a new `list_id`
            generated.

            Additional `item_id`'s are generated for each exception item. Both
            the exception

            list and its items are overwritten.
          in: query
          name: as_new_list
          required: false
          schema:
            default: false
            example: false
            type: boolean
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  description: A `.ndjson` file containing the exception list
                  example: >
                    {"_version":"WzExNDU5LDFd","created_at":"2025-01-09T16:18:17.757Z","created_by":"elastic","description":"This
                    is a sample detection type
                    exception","id":"c86c2da0-2ab6-4343-b81c-216ef27e8d75","immutable":false,"list_id":"simple_list","name":"Sample
                    Detection Exception
                    List","namespace_type":"single","os_types":[],"tags":["user
                    added string for a
                    tag","malware"],"tie_breaker_id":"cf4a7b92-732d-47f0-a0d5-49a35a1736bf","type":"detection","updated_at":"2025-01-09T16:18:17.757Z","updated_by":"elastic","version":1}

                    {"_version":"WzExNDYxLDFd","comments":[],"created_at":"2025-01-09T16:18:42.308Z","created_by":"elastic","description":"This
                    is a sample endpoint type
                    exception","entries":[{"type":"exists","field":"actingProcess.file.signer","operator":"excluded"},{"type":"match_any","field":"host.name","value":["some
                    host","another
                    host"],"operator":"included"}],"id":"f37597ce-eaa7-4b64-9100-4301118f6806","item_id":"simple_list_item","list_id":"simple_list","name":"Sample
                    Endpoint Exception
                    List","namespace_type":"single","os_types":["linux"],"tags":["user
                    added string for a
                    tag","malware"],"tie_breaker_id":"4ca3ef3e-9721-42c0-8107-cf47e094d40f","type":"simple","updated_at":"2025-01-09T16:18:42.308Z","updated_by":"elastic"}
                  format: binary
                  type: string
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                withErrors:
                  value:
                    errors:
                      - error:
                          message: >-
                            Error found importing exception list: Invalid value
                            \"4\" supplied to \"list_id\"
                          status_code: 400
                        list_id: (unknown list_id)
                      - error:
                          message: >-
                            Found that item_id:
                            \"f7fd00bb-dba8-4c93-9d59-6cbd427b6330\" already
                            exists. Import of item_id:
                            \"f7fd00bb-dba8-4c93-9d59-6cbd427b6330\" skipped.
                          status_code: 409
                        item_id: f7fd00bb-dba8-4c93-9d59-6cbd427b6330
                        list_id: 7d7cccb8-db72-4667-b1f3-648efad7c1ee
                    success: false,
                    success_count: 0,
                    success_count_exception_list_items: 0
                    success_count_exception_lists: 0,
                    success_exception_list_items: false,
                    success_exception_lists: false,
                withoutErrors:
                  value:
                    errors: []
                    success: true
                    success_count: 2
                    success_count_exception_list_items: 1
                    success_count_exception_lists: 1
                    success_exception_list_items: true
                    success_exception_lists: true,
              schema:
                type: object
                properties:
                  errors:
                    $ref: '#/components/schemas/ExceptionListsImportBulkErrorArray'
                  success:
                    type: boolean
                  success_count:
                    minimum: 0
                    type: integer
                  success_count_exception_list_items:
                    minimum: 0
                    type: integer
                  success_count_exception_lists:
                    minimum: 0
                    type: integer
                  success_exception_list_items:
                    type: boolean
                  success_exception_lists:
                    type: boolean
                required:
                  - errors
                  - success
                  - success_count
                  - success_exception_lists
                  - success_count_exception_lists
                  - success_exception_list_items
                  - success_count_exception_list_items
          description: Successful response
        '400':
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [POST /api/exception_lists/_import] is unauthorized
                      for user, this action is granted by the Kibana privileges
                      [lists-all]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Import an exception list
      tags:
        - Security Exceptions API
  /api/exception_lists/items:
    delete:
      description: Delete an exception list item using the `id` or `item_id` field.
      operationId: DeleteExceptionListItem
      parameters:
        - description: >-
            Exception item's identifier. Either `id` or `item_id` must be
            specified
          in: query
          name: id
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionListItemId'
        - description: >-
            Human readable exception item string identifier, e.g.
            `trusted-linux-processes`. Either `id` or `item_id` must be
            specified
          in: query
          name: item_id
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionListItemHumanId'
        - examples:
            agnostic:
              value: agnostic
            single:
              value: single
          in: query
          name: namespace_type
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionNamespaceType'
            default: single
      responses:
        '200':
          content:
            application/json:
              examples:
                simpleExceptionItem:
                  value:
                    _version: WzQsMV0=
                    comments: []
                    created_at: 2025-01-07T20:07:33.119Z
                    created_by: elastic
                    description: This is a sample detection type exception item.
                    entries:
                      - field: actingProcess.file.signer
                        operator: excluded
                        type: exists
                      - field: host.name
                        operator: included
                        type: match_any
                        value:
                          - saturn
                          - jupiter
                    id: 71a9f4b2-c85c-49b4-866f-c71eb9e67da2
                    item_id: simple_list_item
                    list_id: simple_list
                    name: Sample Exception List Item
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 09434836-9db9-4942-a234-5a9268e0b34c
                    type: simple
                    updated_at: 2025-01-07T20:07:33.119Z
                    updated_by: elastic
              schema:
                $ref: '#/components/schemas/ExceptionListItem'
          description: Successful response
        '400':
          content:
            application/json:
              schema:
                example:
                  error: Bad Request
                  message: >-
                    [request query]: namespace_type.0: Invalid enum value.
                    Expected 'agnostic' | 'single', received 'blob'
                  statusCode: 400
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [DELETE
                      /api/exception_lists/items?item_id=simple_list&namespace_type=single]
                      is unauthorized for user, this action is granted by the
                      Kibana privileges [lists-all]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '404':
          content:
            application/json:
              examples:
                notFound:
                  value:
                    message: 'exception list item item_id: \"foo\" does not exist'
                    status_code: 404
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list item not found response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Delete an exception list item
      tags:
        - Security Exceptions API
    get:
      description: >-
        Get the details of an exception list item using the `id` or `item_id`
        field.
      operationId: ReadExceptionListItem
      parameters:
        - description: >-
            Exception list item's identifier. Either `id` or `item_id` must be
            specified.
          in: query
          name: id
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionListItemId'
        - description: >-
            Human readable exception item string identifier, e.g.
            `trusted-linux-processes`. Either `id` or `item_id` must be
            specified.
          in: query
          name: item_id
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionListItemHumanId'
        - examples:
            agnostic:
              value: agnostic
            single:
              value: single
          in: query
          name: namespace_type
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionNamespaceType'
            default: single
      responses:
        '200':
          content:
            application/json:
              examples:
                simpleListItem:
                  value:
                    _version: WzQsMV0=
                    comments: []
                    created_at: 2025-01-07T20:07:33.119Z
                    created_by: elastic
                    description: This is a sample detection type exception item.
                    entries:
                      - field: actingProcess.file.signer
                        operator: excluded
                        type: exists
                      - field: host.name
                        operator: included
                        type: match_any
                        value:
                          - saturn
                          - jupiter
                    id: 71a9f4b2-c85c-49b4-866f-c71eb9e67da2
                    item_id: simple_list_item
                    list_id: simple_list
                    name: Sample Exception List Item
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 09434836-9db9-4942-a234-5a9268e0b34c
                    type: simple
                    updated_at: 2025-01-07T20:07:33.119Z
                    updated_by: elastic
              schema:
                $ref: '#/components/schemas/ExceptionListItem'
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request
                    message: >-
                      [request query]: namespace_type.0: Invalid enum value.
                      Expected 'agnostic' | 'single', received 'blob'
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [GET
                      /api/exception_lists/items?item_id=&namespace_type=single]
                      is unauthorized for user, this action is granted by the
                      Kibana privileges [lists-read]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '404':
          content:
            application/json:
              examples:
                notFound:
                  value:
                    message: 'exception list item item_id: \"foo\" does not exist'
                    status_code: 404
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list item not found response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Get an exception list item
      tags:
        - Security Exceptions API
    post:
      description: >
        Create an exception item and associate it with the specified exception
        list.

        > info

        > Before creating exception items, you must create an exception list.
      operationId: CreateExceptionListItem
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: This is a sample detection type exception item.
                entries:
                  - field: actingProcess.file.signer
                    operator: excluded
                    type: exists
                  - field: host.name
                    operator: included
                    type: match_any
                    value:
                      - saturn
                      - jupiter
                item_id: simple_list_item
                list_id: simple_list
                name: Sample Exception List Item
                namespace_type: single
                os_types:
                  - linux
                tags:
                  - malware
                type: simple
              type: object
              properties:
                comments:
                  $ref: '#/components/schemas/CreateExceptionListItemCommentArray'
                  default: []
                description:
                  $ref: '#/components/schemas/ExceptionListItemDescription'
                entries:
                  $ref: '#/components/schemas/ExceptionListItemEntryArray'
                expire_time:
                  $ref: '#/components/schemas/ExceptionListItemExpireTime'
                item_id:
                  $ref: '#/components/schemas/ExceptionListItemHumanId'
                list_id:
                  $ref: '#/components/schemas/ExceptionListHumanId'
                meta:
                  $ref: '#/components/schemas/ExceptionListItemMeta'
                name:
                  $ref: '#/components/schemas/ExceptionListItemName'
                namespace_type:
                  $ref: '#/components/schemas/ExceptionNamespaceType'
                  default: single
                os_types:
                  $ref: '#/components/schemas/ExceptionListItemOsTypeArray'
                  default: []
                tags:
                  $ref: '#/components/schemas/ExceptionListItemTags'
                  default: []
                type:
                  $ref: '#/components/schemas/ExceptionListItemType'
              required:
                - list_id
                - type
                - name
                - description
                - entries
        description: Exception list item's properties
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                autogeneratedItemId:
                  value:
                    _version: WzYsMV0=
                    comments: []
                    created_at: 2025-01-09T01:16:23.322Z
                    created_by: elastic
                    description: >-
                      This is a sample exception that has no item_id so it is
                      autogenerated.
                    entries:
                      - field: actingProcess.file.signer
                        operator: excluded
                        type: exists
                    id: 323faa75-c657-4fa0-9084-8827612c207b
                    item_id: 80e6edf7-4b13-4414-858f-2fa74aa52b37
                    list_id: 8c1aae4c-1ef5-4bce-a2e3-16584b501783
                    name: Sample Autogenerated Exception List Item ID
                    namespace_type: single
                    os_types: []
                    tags:
                      - malware
                    tie_breaker_id: d6799986-3a23-4213-bc6d-ed9463a32f23
                    type: simple
                    updated_at: 2025-01-09T01:16:23.322Z
                    updated_by: elastic
                detectionExceptionListItem:
                  value:
                    _version: WzQsMV0=
                    comments: []
                    created_at: 2025-01-07T20:07:33.119Z
                    created_by: elastic
                    description: This is a sample detection type exception item.
                    entries:
                      - field: actingProcess.file.signer
                        operator: excluded
                        type: exists
                    id: 71a9f4b2-c85c-49b4-866f-c71eb9e67da2
                    item_id: simple_list_item
                    list_id: simple_list
                    name: Sample Exception List Item
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 09434836-9db9-4942-a234-5a9268e0b34c
                    type: simple
                    updated_at: 2025-01-07T20:07:33.119Z
                    updated_by: elastic
                withExistEntry:
                  value:
                    _version: WzQsMV0=
                    comments: []
                    created_at: 2025-01-07T20:07:33.119Z
                    created_by: elastic
                    description: This is a sample detection type exception item.
                    entries:
                      - field: actingProcess.file.signer
                        operator: excluded
                        type: exists
                    id: 71a9f4b2-c85c-49b4-866f-c71eb9e67da2
                    item_id: simple_list_item
                    list_id: simple_list
                    name: Sample Exception List Item
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 09434836-9db9-4942-a234-5a9268e0b34c
                    type: simple
                    updated_at: 2025-01-07T20:07:33.119Z
                    updated_by: elastic
                withMatchAnyEntry:
                  value:
                    _version: WzQsMV0=
                    comments: []
                    created_at: 2025-01-07T20:07:33.119Z
                    created_by: elastic
                    description: This is a sample detection type exception item.
                    entries:
                      - field: host.name
                        operator: included
                        type: match_any
                        value:
                          - saturn
                          - jupiter
                    id: 71a9f4b2-c85c-49b4-866f-c71eb9e67da2
                    item_id: simple_list_item
                    list_id: simple_list
                    name: Sample Exception List Item
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 09434836-9db9-4942-a234-5a9268e0b34c
                    type: simple
                    updated_at: 2025-01-07T20:07:33.119Z
                    updated_by: elastic
                withMatchEntry:
                  value:
                    _version: WzQsMV0=
                    comments: []
                    created_at: 2025-01-07T20:07:33.119Z
                    created_by: elastic
                    description: This is a sample detection type exception item.
                    entries:
                      - field: actingProcess.file.signer
                        operator: included
                        type: match
                        value: Elastic N.V.
                    id: 71a9f4b2-c85c-49b4-866f-c71eb9e67da2
                    item_id: simple_list_item
                    list_id: simple_list
                    name: Sample Exception List Item
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 09434836-9db9-4942-a234-5a9268e0b34c
                    type: simple
                    updated_at: 2025-01-07T20:07:33.119Z
                    updated_by: elastic
                withNestedEntry:
                  value:
                    _version: WzQsMV0=
                    comments: []
                    created_at: 2025-01-07T20:07:33.119Z
                    created_by: elastic
                    description: This is a sample detection type exception item.
                    entries:
                      - entries:
                          - field: signer
                            operator: included
                            type: match
                            value: Evil
                          - field: trusted
                            operator: included
                            type: match
                            value: true
                        field: file.signature
                        type: nested
                    id: 71a9f4b2-c85c-49b4-866f-c71eb9e67da2
                    item_id: simple_list_item
                    list_id: simple_list
                    name: Sample Exception List Item
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 09434836-9db9-4942-a234-5a9268e0b34c
                    type: simple
                    updated_at: 2025-01-07T20:07:33.119Z
                    updated_by: elastic
                withValueListEntry:
                  value:
                    _version: WzcsMV0=
                    comments: []
                    created_at: 2025-01-09T01:31:12.614Z
                    created_by: elastic
                    description: >-
                      Don't signal when agent.name is rock01 and source.ip is in
                      the goodguys.txt list
                    entries:
                      - field: source.ip
                        list:
                          id: goodguys.txt
                          type: ip
                        operator: excluded
                        type: list
                    id: deb26876-297d-4677-8a1f-35467d2f1c4f
                    item_id: 686b129e-9b8d-4c59-8d8d-c93a9ea82c71
                    list_id: 8c1aae4c-1ef5-4bce-a2e3-16584b501783
                    name: Filter out good guys ip and agent.name rock01
                    namespace_type: single
                    os_types: []
                    tags:
                      - malware
                    tie_breaker_id: 5e0288ce-6657-4c18-9dcc-00ec9e8cc6c8
                    type: simple
                    updated_at: 2025-01-09T01:31:12.614Z
                    updated_by: elastic
              schema:
                $ref: '#/components/schemas/ExceptionListItem'
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request,
                    message: '[request body]: list_id: Expected string, received number'
                    statusCode: 400,
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [POST /api/exception_lists/items] is unauthorized for
                      user, this action is granted by the Kibana privileges
                      [lists-all]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '409':
          content:
            application/json:
              examples:
                alreadyExists:
                  value:
                    message: >-
                      exception list item id: \"simple_list_item\" already
                      exists
                    status_code: 409
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list item already exists response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Create an exception list item
      tags:
        - Security Exceptions API
    put:
      description: Update an exception list item using the `id` or `item_id` field.
      operationId: UpdateExceptionListItem
      requestBody:
        content:
          application/json:
            example:
              comments: []
              description: Updated description
              entries:
                - field: host.name
                  operator: included
                  type: match
                  value: rock01
              item_id: simple_list_item
              name: Updated name
              namespace_type: single
              tags: []
              type: simple
            schema:
              type: object
              properties:
                _version:
                  description: >-
                    The version id, normally returned by the API when the item
                    was retrieved. Use it ensure updates are done against the
                    latest version.
                  type: string
                comments:
                  $ref: '#/components/schemas/UpdateExceptionListItemCommentArray'
                  default: []
                description:
                  $ref: '#/components/schemas/ExceptionListItemDescription'
                entries:
                  $ref: '#/components/schemas/ExceptionListItemEntryArray'
                expire_time:
                  $ref: '#/components/schemas/ExceptionListItemExpireTime'
                id:
                  $ref: '#/components/schemas/ExceptionListItemId'
                  description: Either `id` or `item_id` must be specified
                item_id:
                  $ref: '#/components/schemas/ExceptionListItemHumanId'
                  description: Either `id` or `item_id` must be specified
                list_id:
                  $ref: '#/components/schemas/ExceptionListHumanId'
                meta:
                  $ref: '#/components/schemas/ExceptionListItemMeta'
                name:
                  $ref: '#/components/schemas/ExceptionListItemName'
                namespace_type:
                  $ref: '#/components/schemas/ExceptionNamespaceType'
                  default: single
                os_types:
                  $ref: '#/components/schemas/ExceptionListItemOsTypeArray'
                  default: []
                tags:
                  $ref: '#/components/schemas/ExceptionListItemTags'
                type:
                  $ref: '#/components/schemas/ExceptionListItemType'
              required:
                - type
                - name
                - description
                - entries
        description: Exception list item's properties
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                simpleListItem:
                  value:
                    _version: WzEyLDFd
                    comments: []
                    created_at: 2025-01-07T21:12:25.512Z
                    created_by: elastic
                    description: Updated description
                    entries:
                      - field: host.name
                        operator: included
                        type: match
                        value: rock01
                    id: 459c5e7e-f8b2-4f0b-b136-c1fc702f72da
                    item_id: simple_list_item
                    list_id: simple_list
                    name: Updated name
                    namespace_type: single
                    os_types: []
                    tags: []
                    tie_breaker_id: ad0754ff-7b19-49ca-b73e-e6aff6bfa2d0
                    type: simple
                    updated_at: 2025-01-07T21:34:50.233Z
                    updated_by: elastic
              schema:
                $ref: '#/components/schemas/ExceptionListItem'
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request
                    message: '[request body]: item_id: Expected string, received number'
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [PUT /api/exception_lists/items] is unauthorized for
                      user, this action is granted by the Kibana privileges
                      [lists-all]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '404':
          content:
            application/json:
              examples:
                notFound:
                  value:
                    message: 'exception list item item_id: \"foo\" does not exist'
                    status_code: 404
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list item not found response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Update an exception list item
      tags:
        - Security Exceptions API
  /api/exception_lists/items/_find:
    get:
      description: Get a list of all exception list items in the specified list.
      operationId: FindExceptionListItems
      parameters:
        - description: The `list_id`s of the items to fetch.
          in: query
          name: list_id
          required: true
          schema:
            items:
              $ref: '#/components/schemas/ExceptionListHumanId'
            type: array
        - description: >
            Filters the returned results according to the value of the specified
            field,

            using the `<field name>:<field value>` syntax.
          examples:
            singleFilter:
              value:
                - exception-list.attributes.name:%My%20item
          in: query
          name: filter
          required: false
          schema:
            default: []
            items:
              $ref: '#/components/schemas/FindExceptionListItemsFilter'
            type: array
        - description: >
            Determines whether the returned containers are Kibana associated
            with a Kibana space

            or available in all spaces (`agnostic` or `single`)
          examples:
            single:
              value:
                - single
          in: query
          name: namespace_type
          required: false
          schema:
            default:
              - single
            items:
              $ref: '#/components/schemas/ExceptionNamespaceType'
            type: array
        - in: query
          name: search
          required: false
          schema:
            example: host.name
            type: string
        - description: The page number to return
          in: query
          name: page
          required: false
          schema:
            example: 1
            minimum: 0
            type: integer
        - description: The number of exception list items to return per page
          in: query
          name: per_page
          required: false
          schema:
            example: 20
            minimum: 0
            type: integer
        - description: Determines which field is used to sort the results.
          example: name
          in: query
          name: sort_field
          required: false
          schema:
            $ref: '#/components/schemas/NonEmptyString'
        - description: Determines the sort order, which can be `desc` or `asc`.
          in: query
          name: sort_order
          required: false
          schema:
            enum:
              - desc
              - asc
            example: desc
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                simpleListItems:
                  value:
                    data:
                      - _version: WzgsMV0=
                        comments: []
                        created_at: 2025-01-07T21:12:25.512Z
                        created_by: elastic
                        description: This is a sample exception item.
                        entries:
                          - field: actingProcess.file.signer
                            operator: excluded
                            type: exists
                          - field: host.name
                            operator: included
                            type: match_any
                            value:
                              - jupiter
                              - saturn
                        id: 459c5e7e-f8b2-4f0b-b136-c1fc702f72da
                        item_id: simple_list_item
                        list_id: simple_list
                        name: Sample Exception List Item
                        namespace_type: single
                        os_types:
                          - linux
                        tags:
                          - malware
                        tie_breaker_id: ad0754ff-7b19-49ca-b73e-e6aff6bfa2d0
                        type: simple
                        updated_at: 2025-01-07T21:12:25.512Z
                        updated_by: elastic
                    page: 1
                    per_page: 20
                    total: 1
              schema:
                type: object
                properties:
                  data:
                    items:
                      $ref: '#/components/schemas/ExceptionListItem'
                    type: array
                  page:
                    minimum: 1
                    type: integer
                  per_page:
                    minimum: 1
                    type: integer
                  pit:
                    type: string
                  total:
                    minimum: 0
                    type: integer
                required:
                  - data
                  - page
                  - per_page
                  - total
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request
                    message: >-
                      [request query]: namespace_type.0: Invalid enum value.
                      Expected 'agnostic' | 'single', received 'blob'
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [GET
                      /api/exception_lists/items/_find?list_id=simple_list&namespace_type=single]
                      is unauthorized for user, this action is granted by the
                      Kibana privileges [lists-read]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '404':
          content:
            application/json:
              examples:
                notFound:
                  value:
                    message: 'exception list list_id: "foo" does not exist'
                    status_code: 404
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list not found response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Get exception list items
      tags:
        - Security Exceptions API
  /api/exception_lists/summary:
    get:
      description: Get a summary of the specified exception list.
      operationId: ReadExceptionListSummary
      parameters:
        - description: Exception list's identifier generated upon creation.
          in: query
          name: id
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionListId'
        - description: Exception list's human readable identifier.
          in: query
          name: list_id
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionListHumanId'
        - examples:
            agnostic:
              value: agnostic
            single:
              value: single
          in: query
          name: namespace_type
          required: false
          schema:
            $ref: '#/components/schemas/ExceptionNamespaceType'
            default: single
        - description: Search filter clause
          in: query
          name: filter
          required: false
          schema:
            example: >-
              exception-list-agnostic.attributes.tags:"policy:policy-1" OR
              exception-list-agnostic.attributes.tags:"policy:all"
            type: string
      responses:
        '200':
          content:
            application/json:
              examples:
                summary:
                  value:
                    linux: 0
                    macos: 0
                    total: 0
                    windows: 0
              schema:
                type: object
                properties:
                  linux:
                    minimum: 0
                    type: integer
                  macos:
                    minimum: 0
                    type: integer
                  total:
                    minimum: 0
                    type: integer
                  windows:
                    minimum: 0
                    type: integer
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request
                    message: >-
                      [request query]: namespace_type.0: Invalid enum value.
                      Expected 'agnostic' | 'single', received 'blob'
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: >-
                      [security_exception\n\tRoot
                      causes:\n\t\tsecurity_exception: unable to authenticate
                      user [elastic] for REST request
                      [/_security/_authenticate]]: unable to authenticate user
                      [elastic] for REST request [/_security/_authenticate]
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    error: Forbidden
                    message: >-
                      API [GET
                      /api/exception_lists/summary?list_id=simple_list&namespace_type=agnostic]
                      is unauthorized for user, this action is granted by the
                      Kibana privileges [lists-summary]
                    statusCode: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '404':
          content:
            application/json:
              examples:
                notFound:
                  value:
                    message": 'exception list id: "foo" does not exist'
                    status_code": 404
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list not found response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Get an exception list summary
      tags:
        - Security Exceptions API
  /api/exceptions/shared:
    post:
      description: >
        An exception list groups exception items and can be associated with
        detection rules. A shared exception list can apply to multiple detection
        rules.

        > info

        > All exception items added to the same list are evaluated using `OR`
        logic. That is, if any of the items in a list evaluate to `true`, the
        exception prevents the rule from generating an alert. Likewise, `OR`
        logic is used for evaluating exceptions when more than one exception
        list is assigned to a rule. To use the `AND` operator, you can define
        multiple clauses (`entries`) in a single exception item.
      operationId: CreateSharedExceptionList
      requestBody:
        content:
          application/json:
            schema:
              example:
                description: This is a sample detection type exception list.
                list_id: simple_list
                name: Sample Detection Exception List
                namespace_type: single
                os_types:
                  - linux
                tags:
                  - malware
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ExceptionListDescription'
                name:
                  $ref: '#/components/schemas/ExceptionListName'
              required:
                - name
                - description
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                sharedList:
                  value:
                    _version: WzIsMV0=
                    created_at: 2025-01-07T19:34:27.942Z
                    created_by: elastic
                    description: This is a sample detection type exception list.
                    id: 9e5fc75a-a3da-46c5-96e3-a2ec59c6bb85
                    immutable: false
                    list_id: simple_list
                    name: Sample Detection Exception List
                    namespace_type: single
                    os_types:
                      - linux
                    tags:
                      - malware
                    tie_breaker_id: 78f1aca1-f8ee-4eb5-9ceb-f5c3ee656cb3
                    type: detection
                    updated_at: 2025-01-07T19:34:27.942Z
                    updated_by: elastic
                    version: 1
              schema:
                $ref: '#/components/schemas/ExceptionList'
          description: Successful response
        '400':
          content:
            application/json:
              examples:
                badRequest:
                  value:
                    error: Bad Request
                    message: '[request body]: list_id: Expected string, received number'
                    statusCode: 400
              schema:
                oneOf:
                  - $ref: '#/components/schemas/PlatformErrorResponse'
                  - $ref: '#/components/schemas/SiemErrorResponse'
          description: Invalid input data response
        '401':
          content:
            application/json:
              examples:
                unauthorized:
                  value:
                    error: Unauthorized
                    message: "[security_exception\n\tRoot causes:\n\t\tsecurity_exception: unable to authenticate user [elastic] for REST request [/_security/_authenticate]]: unable to authenticate user [elastic] for REST request [/_security/_authenticate]"
                    statusCode: 401
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Unsuccessful authentication response
        '403':
          content:
            application/json:
              examples:
                forbidden:
                  value:
                    message: Unable to create exception-list
                    status_code: 403
              schema:
                $ref: '#/components/schemas/PlatformErrorResponse'
          description: Not enough privileges response
        '409':
          content:
            application/json:
              examples:
                alreadyExists:
                  value:
                    message: 'exception list id: "simple_list" already exists'
                    status_code: 409
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Exception list already exists response
        '500':
          content:
            application/json:
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
              schema:
                $ref: '#/components/schemas/SiemErrorResponse'
          description: Internal server error response
      summary: Create a shared exception list
      tags:
        - Security Exceptions API
components:
  schemas:
    CreateExceptionListItemComment:
      type: object
      properties:
        comment:
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - comment
    CreateExceptionListItemCommentArray:
      items:
        $ref: '#/components/schemas/CreateExceptionListItemComment'
      type: array
    CreateRuleExceptionListItemComment:
      type: object
      properties:
        comment:
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - comment
    CreateRuleExceptionListItemCommentArray:
      items:
        $ref: '#/components/schemas/CreateRuleExceptionListItemComment'
      type: array
    CreateRuleExceptionListItemProps:
      type: object
      properties:
        comments:
          $ref: '#/components/schemas/CreateRuleExceptionListItemCommentArray'
          default: []
        description:
          $ref: '#/components/schemas/ExceptionListItemDescription'
        entries:
          $ref: '#/components/schemas/ExceptionListItemEntryArray'
        expire_time:
          format: date-time
          type: string
        item_id:
          $ref: '#/components/schemas/ExceptionListItemHumanId'
        meta:
          $ref: '#/components/schemas/ExceptionListItemMeta'
        name:
          $ref: '#/components/schemas/ExceptionListItemName'
        namespace_type:
          $ref: '#/components/schemas/ExceptionNamespaceType'
          default: single
        os_types:
          $ref: '#/components/schemas/ExceptionListItemOsTypeArray'
          default: []
        tags:
          $ref: '#/components/schemas/ExceptionListItemTags'
          default: []
        type:
          $ref: '#/components/schemas/ExceptionListItemType'
      required:
        - type
        - name
        - description
        - entries
    ExceptionList:
      type: object
      properties:
        _version:
          description: >-
            The version id, normally returned by the API when the item was
            retrieved. Use it ensure updates are done against the latest
            version.
          type: string
        created_at:
          description: Autogenerated date of object creation.
          format: date-time
          type: string
        created_by:
          description: Autogenerated value - user that created object.
          type: string
        description:
          $ref: '#/components/schemas/ExceptionListDescription'
        id:
          $ref: '#/components/schemas/ExceptionListId'
        immutable:
          type: boolean
        list_id:
          $ref: '#/components/schemas/ExceptionListHumanId'
        meta:
          $ref: '#/components/schemas/ExceptionListMeta'
        name:
          $ref: '#/components/schemas/ExceptionListName'
        namespace_type:
          $ref: '#/components/schemas/ExceptionNamespaceType'
        os_types:
          $ref: '#/components/schemas/ExceptionListOsTypeArray'
        tags:
          $ref: '#/components/schemas/ExceptionListTags'
        tie_breaker_id:
          description: >-
            Field used in search to ensure all containers are sorted and
            returned correctly.
          type: string
        type:
          $ref: '#/components/schemas/ExceptionListType'
        updated_at:
          description: Autogenerated date of last object update.
          format: date-time
          type: string
        updated_by:
          description: Autogenerated value - user that last updated object.
          type: string
        version:
          $ref: '#/components/schemas/ExceptionListVersion'
      required:
        - id
        - list_id
        - type
        - name
        - description
        - immutable
        - namespace_type
        - version
        - tie_breaker_id
        - created_at
        - created_by
        - updated_at
        - updated_by
    ExceptionListDescription:
      description: Describes the exception list.
      example: This list tracks allowlisted values.
      type: string
    ExceptionListHumanId:
      description: >-
        Exception list's human readable string identifier, e.g.
        `trusted-linux-processes`.
      example: simple_list
      format: nonempty
      minLength: 1
      type: string
    ExceptionListId:
      description: Exception list's identifier.
      example: 9e5fc75a-a3da-46c5-96e3-a2ec59c6bb85
      format: nonempty
      minLength: 1
      type: string
    ExceptionListItem:
      type: object
      properties:
        _version:
          description: >-
            The version id, normally returned by the API when the item was
            retrieved. Use it ensure updates are done against the latest
            version.
          type: string
        comments:
          $ref: '#/components/schemas/ExceptionListItemCommentArray'
        created_at:
          description: Autogenerated date of object creation.
          format: date-time
          type: string
        created_by:
          description: Autogenerated value - user that created object.
          type: string
        description:
          $ref: '#/components/schemas/ExceptionListItemDescription'
        entries:
          $ref: '#/components/schemas/ExceptionListItemEntryArray'
        expire_time:
          $ref: '#/components/schemas/ExceptionListItemExpireTime'
        id:
          $ref: '#/components/schemas/ExceptionListItemId'
        item_id:
          $ref: '#/components/schemas/ExceptionListItemHumanId'
        list_id:
          $ref: '#/components/schemas/ExceptionListHumanId'
        meta:
          $ref: '#/components/schemas/ExceptionListItemMeta'
        name:
          $ref: '#/components/schemas/ExceptionListItemName'
        namespace_type:
          $ref: '#/components/schemas/ExceptionNamespaceType'
        os_types:
          $ref: '#/components/schemas/ExceptionListItemOsTypeArray'
        tags:
          $ref: '#/components/schemas/ExceptionListItemTags'
        tie_breaker_id:
          description: >-
            Field used in search to ensure all containers are sorted and
            returned correctly.
          type: string
        type:
          $ref: '#/components/schemas/ExceptionListItemType'
        updated_at:
          description: Autogenerated date of last object update.
          format: date-time
          type: string
        updated_by:
          description: Autogenerated value - user that last updated object.
          type: string
      required:
        - id
        - item_id
        - list_id
        - type
        - name
        - description
        - entries
        - namespace_type
        - comments
        - tie_breaker_id
        - created_at
        - created_by
        - updated_at
        - updated_by
    ExceptionListItemComment:
      type: object
      properties:
        comment:
          $ref: '#/components/schemas/NonEmptyString'
        created_at:
          description: Autogenerated date of object creation.
          format: date-time
          type: string
        created_by:
          $ref: '#/components/schemas/NonEmptyString'
        id:
          $ref: '#/components/schemas/NonEmptyString'
        updated_at:
          description: Autogenerated date of last object update.
          format: date-time
          type: string
        updated_by:
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - id
        - comment
        - created_at
        - created_by
    ExceptionListItemCommentArray:
      description: |
        Array of comment fields:

        - comment (string): Comments about the exception item.
      items:
        $ref: '#/components/schemas/ExceptionListItemComment'
      type: array
    ExceptionListItemDescription:
      description: Describes the exception list.
      type: string
    ExceptionListItemEntry:
      anyOf:
        - $ref: '#/components/schemas/ExceptionListItemEntryMatch'
        - $ref: '#/components/schemas/ExceptionListItemEntryMatchAny'
        - $ref: '#/components/schemas/ExceptionListItemEntryList'
        - $ref: '#/components/schemas/ExceptionListItemEntryExists'
        - $ref: '#/components/schemas/ExceptionListItemEntryNested'
        - $ref: '#/components/schemas/ExceptionListItemEntryMatchWildcard'
      discriminator:
        propertyName: type
    ExceptionListItemEntryArray:
      items:
        $ref: '#/components/schemas/ExceptionListItemEntry'
      type: array
    ExceptionListItemEntryExists:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/NonEmptyString'
        operator:
          $ref: '#/components/schemas/ExceptionListItemEntryOperator'
        type:
          enum:
            - exists
          type: string
      required:
        - type
        - field
        - operator
    ExceptionListItemEntryList:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/NonEmptyString'
        list:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/ListId'
            type:
              $ref: '#/components/schemas/ListType'
          required:
            - id
            - type
        operator:
          $ref: '#/components/schemas/ExceptionListItemEntryOperator'
        type:
          enum:
            - list
          type: string
      required:
        - type
        - field
        - list
        - operator
    ExceptionListItemEntryMatch:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/NonEmptyString'
        operator:
          $ref: '#/components/schemas/ExceptionListItemEntryOperator'
        type:
          enum:
            - match
          type: string
        value:
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - type
        - field
        - value
        - operator
    ExceptionListItemEntryMatchAny:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/NonEmptyString'
        operator:
          $ref: '#/components/schemas/ExceptionListItemEntryOperator'
        type:
          enum:
            - match_any
          type: string
        value:
          items:
            $ref: '#/components/schemas/NonEmptyString'
          minItems: 1
          type: array
      required:
        - type
        - field
        - value
        - operator
    ExceptionListItemEntryMatchWildcard:
      type: object
      properties:
        field:
          $ref: '#/components/schemas/NonEmptyString'
        operator:
          $ref: '#/components/schemas/ExceptionListItemEntryOperator'
        type:
          enum:
            - wildcard
          type: string
        value:
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - type
        - field
        - value
        - operator
    ExceptionListItemEntryNested:
      type: object
      properties:
        entries:
          items:
            $ref: '#/components/schemas/ExceptionListItemEntryNestedEntryItem'
          minItems: 1
          type: array
        field:
          $ref: '#/components/schemas/NonEmptyString'
        type:
          enum:
            - nested
          type: string
      required:
        - type
        - field
        - entries
    ExceptionListItemEntryNestedEntryItem:
      oneOf:
        - $ref: '#/components/schemas/ExceptionListItemEntryMatch'
        - $ref: '#/components/schemas/ExceptionListItemEntryMatchAny'
        - $ref: '#/components/schemas/ExceptionListItemEntryExists'
    ExceptionListItemEntryOperator:
      enum:
        - excluded
        - included
      type: string
    ExceptionListItemExpireTime:
      description: >-
        The exception item’s expiration date, in ISO format. This field is only
        available for regular exception items, not endpoint exceptions.
      format: date-time
      type: string
    ExceptionListItemHumanId:
      description: Human readable string identifier, e.g. `trusted-linux-processes`
      example: simple_list_item
      format: nonempty
      minLength: 1
      type: string
    ExceptionListItemId:
      description: Exception's identifier.
      example: 71a9f4b2-c85c-49b4-866f-c71eb9e67da2
      format: nonempty
      minLength: 1
      type: string
    ExceptionListItemMeta:
      additionalProperties: true
      type: object
    ExceptionListItemName:
      description: Exception list name.
      format: nonempty
      minLength: 1
      type: string
    ExceptionListItemOsTypeArray:
      items:
        $ref: '#/components/schemas/ExceptionListOsType'
      type: array
    ExceptionListItemTags:
      items:
        description: >-
          String array containing words and phrases to help categorize exception
          items.
        format: nonempty
        minLength: 1
        type: string
      type: array
    ExceptionListItemType:
      enum:
        - simple
      type: string
    ExceptionListMeta:
      additionalProperties: true
      description: Placeholder for metadata about the list container.
      type: object
    ExceptionListName:
      description: The name of the exception list.
      example: My exception list
      type: string
    ExceptionListOsType:
      description: Use this field to specify the operating system.
      enum:
        - linux
        - macos
        - windows
      type: string
    ExceptionListOsTypeArray:
      description: Use this field to specify the operating system. Only enter one value.
      items:
        $ref: '#/components/schemas/ExceptionListOsType'
      type: array
    ExceptionListsImportBulkError:
      type: object
      properties:
        error:
          type: object
          properties:
            message:
              type: string
            status_code:
              type: integer
          required:
            - status_code
            - message
        id:
          $ref: '#/components/schemas/ExceptionListId'
        item_id:
          $ref: '#/components/schemas/ExceptionListItemHumanId'
        list_id:
          $ref: '#/components/schemas/ExceptionListHumanId'
      required:
        - error
    ExceptionListsImportBulkErrorArray:
      items:
        $ref: '#/components/schemas/ExceptionListsImportBulkError'
      type: array
    ExceptionListTags:
      description: >-
        String array containing words and phrases to help categorize exception
        containers.
      items:
        type: string
      type: array
    ExceptionListType:
      description: >-
        The type of exception list to be created. Different list types may
        denote where they can be utilized.
      enum:
        - detection
        - rule_default
        - endpoint
        - endpoint_trusted_apps
        - endpoint_events
        - endpoint_host_isolation_exceptions
        - endpoint_blocklists
      type: string
    ExceptionListVersion:
      description: The document version, automatically increasd on updates.
      minimum: 1
      type: integer
    ExceptionNamespaceType:
      description: >
        Determines whether the exception container is available in all Kibana
        spaces or just the space

        in which it is created, where:


        - `single`: Only available in the Kibana space in which it is created.

        - `agnostic`: Available in all Kibana spaces.
      enum:
        - agnostic
        - single
      type: string
    FindExceptionListItemsFilter:
      $ref: '#/components/schemas/NonEmptyString'
    FindExceptionListsFilter:
      example: exception-list.attributes.name:%Detection%20List
      type: string
    ListId:
      $ref: '#/components/schemas/NonEmptyString'
    ListType:
      enum:
        - binary
        - boolean
        - byte
        - date
        - date_nanos
        - date_range
        - double
        - double_range
        - float
        - float_range
        - geo_point
        - geo_shape
        - half_float
        - integer
        - integer_range
        - ip
        - ip_range
        - keyword
        - long
        - long_range
        - shape
        - short
        - text
      type: string
    NonEmptyString:
      description: A string that does not contain only whitespace characters
      format: nonempty
      minLength: 1
      type: string
    PlatformErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        statusCode:
          type: integer
      required:
        - statusCode
        - error
        - message
    RuleId:
      $ref: '#/components/schemas/UUID'
    SiemErrorResponse:
      type: object
      properties:
        message:
          type: string
        status_code:
          type: integer
      required:
        - status_code
        - message
    UpdateExceptionListItemComment:
      type: object
      properties:
        comment:
          $ref: '#/components/schemas/NonEmptyString'
        id:
          $ref: '#/components/schemas/NonEmptyString'
      required:
        - comment
    UpdateExceptionListItemCommentArray:
      items:
        $ref: '#/components/schemas/UpdateExceptionListItemComment'
      type: array
    UUID:
      description: A universally unique identifier
      format: uuid
      type: string
  securitySchemes:
    BasicAuth:
      scheme: basic
      type: http
security:
  - BasicAuth: []
tags:
  - description: >
      Exceptions are associated with detection and endpoint rules, and are used
      to prevent a rule from generating an alert from incoming events, even when
      the rule's other criteria are met. They can help reduce the number of
      false positives and prevent trusted processes and network activity from
      generating unnecessary alerts.


      Exceptions are made up of:


      * **Exception containers**: A container for related exceptions. Generally,
      a single exception container contains all the exception items relevant for
      a subset of rules. For example, a container can be used to group together
      network-related exceptions that are relevant for a large number of network
      rules. The container can then be associated with all the relevant rules.

      * **Exception items**: The query (fields, values, and logic) used to
      prevent rules from generating alerts. When an exception item's query
      evaluates to `true`, the rule does not generate an alert.


      For detection rules, you can also use lists to define rule exceptions. A
      list holds multiple values of the same Elasticsearch data type, such as IP
      addresses. These values are used to determine when an exception prevents
      an alert from being generated.

      > info

      > You cannot use lists with endpoint rule exceptions.


      > info

      > Only exception containers can be associated with rules. You cannot
      directly associate an exception item or a list container with a rule. To
      use list exceptions, create an exception item that references the relevant
      list container.


      ## Exceptions requirements


      Before you can start working with exceptions that use value lists, you
      must create the `.lists` and `.items` data streams for the relevant Kibana
      space. To do this, use the [Create list data
      streams](../operation/operation-createlistindex) endpoint. Once these data
      streams are created, your role needs privileges to manage rules. For a
      complete list of requirements, refer to [Enable and access
      detections](https://www.elastic.co/guide/en/security/current/detections-permissions-section.html#enable-detections-ui).
    name: Security Exceptions API
    x-displayName: Security exceptions
