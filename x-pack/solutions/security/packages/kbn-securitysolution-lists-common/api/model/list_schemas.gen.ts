/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: List Schemas
 *   version: not applicable
 */

import { z } from '@kbn/zod';

import {
  ListId,
  ListType,
  ListName,
  ListDescription,
  ListSerializer,
  ListDeserializer,
  ListMetadata,
  ListVersion,
  ListVersionId,
  ListItemId,
  ListItemValue,
  ListItemMetadata,
} from './list_common.gen';

export type List = z.infer<typeof List>;
export const List = z.object({
  id: ListId,
  type: ListType,
  name: ListName,
  description: ListDescription,
  serializer: ListSerializer.optional(),
  deserializer: ListDeserializer.optional(),
  immutable: z.boolean(),
  meta: ListMetadata.optional(),
  '@timestamp': z.string().datetime().optional(),
  version: ListVersion,
  _version: ListVersionId.optional(),
  /**
   * Field used in search to ensure all containers are sorted and returned correctly.
   */
  tie_breaker_id: z.string(),
  /**
   * Autogenerated date of object creation.
   */
  created_at: z.string().datetime(),
  /**
   * Autogenerated value - user that created object.
   */
  created_by: z.string(),
  /**
   * Autogenerated date of last object update.
   */
  updated_at: z.string().datetime(),
  /**
   * Autogenerated value - user that last updated object.
   */
  updated_by: z.string(),
});

export type ListItem = z.infer<typeof ListItem>;
export const ListItem = z.object({
  id: ListItemId,
  type: ListType,
  list_id: ListId,
  value: ListItemValue,
  serializer: ListSerializer.optional(),
  deserializer: ListDeserializer.optional(),
  meta: ListItemMetadata.optional(),
  '@timestamp': z.string().datetime().optional(),
  _version: ListVersionId.optional(),
  /**
   * Field used in search to ensure all containers are sorted and returned correctly.
   */
  tie_breaker_id: z.string(),
  /**
   * Autogenerated date of object creation.
   */
  created_at: z.string().datetime(),
  /**
   * Autogenerated value - user that created object.
   */
  created_by: z.string(),
  /**
   * Autogenerated date of last object update.
   */
  updated_at: z.string().datetime(),
  /**
   * Autogenerated value - user that last updated object.
   */
  updated_by: z.string(),
});
