openapi: 3.0.0
info:
  title: Create value list item API endpoint
  version: '2023-10-31'
paths:
  /api/lists/items:
    post:
      x-labels: [serverless, ess]
      operationId: CreateListItem
      x-codegen-enabled: true
      summary: Create a value list item
      description: |
        Create a value list item and associate it with the specified value list.

        All value list items in the same list must be the same type. For example, each list item in an `ip` list must define a specific IP address.
        > info
        > Before creating a list item, you must create a list.
      requestBody:
        description: Value list item's properties
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  $ref: '../model/list_common.schema.yaml#/components/schemas/ListItemId'
                list_id:
                  $ref: '../model/list_common.schema.yaml#/components/schemas/ListId'
                value:
                  $ref: '../model/list_common.schema.yaml#/components/schemas/ListItemValue'
                meta:
                  $ref: '../model/list_common.schema.yaml#/components/schemas/ListItemMetadata'
                refresh:
                  type: string
                  enum:
                    - 'true'
                    - 'false'
                    - wait_for
                  description: Determines when changes made by the request are made visible to search.
                  example: wait_for
              required:
                - list_id
                - value
            examples:
              ip:
                value:
                  list_id: ip_list
                  value: 127.0.0.1
              ip_range:
                value:
                  list_id: ip_range_list
                  value: 192.168.0.0/16
              keyword:
                value:
                  list_id: keyword_list
                  value: zeek
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '../model/list_schemas.schema.yaml#/components/schemas/ListItem'
              examples:
                ip:
                  value:
                    id: 21b01cfb-058d-44b9-838c-282be16c91cc
                    type: ip
                    list_id: ip_list
                    value: 127.0.0.1
                    '@timestamp': 2025-01-08T04:59:06.154Z
                    _version: WzAsMV0=
                    tie_breaker_id: b57c762c-3036-465c-9bfb-7bfb5e6e515a
                    created_at: 2025-01-08T04:59:06.154Z
                    created_by: elastic
                    updated_at: 2025-01-08T04:59:06.154Z
                    updated_by: elastic
                ip_range:
                  value:
                    id: ip_range_item
                    type: ip_range
                    list_id: ip_range_list
                    value: 192.168.0.0/16
                    '@timestamp': 2025-01-09T18:33:08.202Z
                    _version: WzEsMV0=
                    tie_breaker_id: ea1b4189-efda-4637-b8f9-74655a5ebb61
                    created_at: 2025-01-09T18:33:08.202Z
                    created_by: elastic
                    updated_at: 2025-01-09T18:33:08.202Z
                    updated_by: elastic
                keyword:
                  value:
                    id: 7f24737d-1da8-4626-a568-33070591bb4e
                    type: keyword
                    list_id: keyword_list
                    value: zeek
                    '@timestamp': 2025-01-09T18:34:29.422Z
                    _version: WzIsMV0=
                    tie_breaker_id: 2108ced2-5e5d-401e-a88e-4dd69fc5fa27
                    created_at: 2025-01-09T18:34:29.422Z
                    created_by: elastic
                    updated_at: 2025-01-09T18:34:29.422Z
                    updated_by: elastic
        400:
          description: Invalid input data response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
                  - $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
              examples:
                badRequest:
                  value:
                    statusCode: 400
                    error: Bad Request
                    message: 'uri [/api/lists/items] with method [post] exists but is not available with the current configuration'
        401:
          description: Unsuccessful authentication response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
              examples:
                unauthorized:
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: '[security_exception\n\tRoot causes:\n\t\tsecurity_exception: unable to authenticate user [elastic] for REST request [/_security/_authenticate]]: unable to authenticate user [elastic] for REST request [/_security/_authenticate]'
        403:
          description: Not enough privileges response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
              examples:
                forbidden:
                  value:
                    statusCode: 403
                    error: Forbidden
                    message: 'API [POST /api/lists/items] is unauthorized for user, this action is granted by the Kibana privileges [lists-all]'
        404:
          description: Not enough privileges response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
              examples:
                listNotFound:
                  value:
                    message: 'list id: \"ip_list\" does not exist'
                    status_code: 404
        409:
          description: List item already exists response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
              examples:
                alreadyExists:
                  value:
                    message: 'list item id: \"ip_item\" already exists'
                    status_code: 409
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
