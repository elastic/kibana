openapi: 3.0.0
info:
  title: Delete value list item API endpoint
  version: '2023-10-31'
paths:
  /api/lists/items:
    delete:
      x-labels: [serverless, ess]
      operationId: DeleteListItem
      x-codegen-enabled: true
      summary: Delete a value list item
      description: Delete a value list item using its `id`, or its `list_id` and `value` fields.
      parameters:
        - name: id
          in: query
          required: false
          description: Value list item's identifier. Required if `list_id` and `value` are not specified.
          schema:
            $ref: '../model/list_common.schema.yaml#/components/schemas/ListItemId'
        - name: list_id
          in: query
          required: false
          description: Value list's identifier. Required if `id` is not specified.
          schema:
            $ref: '../model/list_common.schema.yaml#/components/schemas/ListId'
        - name: value
          in: query
          required: false
          description: The value used to evaluate exceptions. Required if `id` is not specified.
          schema:
            type: string
            example: 255.255.255.255
        - name: refresh
          in: query
          required: false
          description: Determines when changes made by the request are made visible to search.
          schema:
            type: string
            enum: ['true', 'false', 'wait_for']
            default: 'false'
            example: false
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '../model/list_schemas.schema.yaml#/components/schemas/ListItem'
                  - type: array
                    items:
                      $ref: '../model/list_schemas.schema.yaml#/components/schemas/ListItem'
              examples:
                ip:
                  value:
                    id: pd1WRJQBs4HAK3VQeHFI
                    type: ip
                    list_id: ip_list
                    value: 255.255.255.255
                    '@timestamp': 2025-01-08T05:15:05.159Z
                    _version: WzIwLDFd
                    tie_breaker_id: eee41dc7-1666-4876-982f-8b0f7b59eca3
                    created_at: 2025-01-08T05:15:05.159Z
                    created_by: elastic
                    updated_at: 2025-01-08T05:44:14.009Z
                    updated_by: elastic
        400:
          description: Invalid input data response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
                  - $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
              examples:
                badRequest:
                  value:
                    message: 'Either \"list_id\" or \"id\" needs to be defined in the request'
                    status_code: 400
        401:
          description: Unsuccessful authentication response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
              examples:
                unauthorized:
                  value:
                    statusCode: 401
                    error: Unauthorized
                    message: '[security_exception\n\tRoot causes:\n\t\tsecurity_exception: unable to authenticate user [elastic] for REST request [/_security/_authenticate]]: unable to authenticate user [elastic] for REST request [/_security/_authenticate]'
        403:
          description: Not enough privileges response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
              examples:
                forbidden:
                  value:
                    statusCode: 403
                    error: Forbidden
                    message: 'API [DELETE /api/lists/items?id=pd1WRJQBs4HAK3VQeHFI] is unauthorized for user, this action is granted by the Kibana privileges [lists-all]'
        404:
          description: List item not found response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
              examples:
                notFound:
                  value:
                    message: 'list item with id: \"pd1WRJQBs4HAK3VQeHFI\" not found'
                    status_code: 404
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '../../../../../../../src/platform/packages/shared/kbn-openapi-common/schemas/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
              examples:
                serverError:
                  value:
                    message: Internal Server Error
                    status_code: 500
