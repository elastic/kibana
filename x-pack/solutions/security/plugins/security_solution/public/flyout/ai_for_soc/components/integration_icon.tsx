/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import React, { memo } from 'react';
import { IntegrationIcon as Icon } from '../../../detections/components/alert_summary/common/integration_icon';
import { useFetchIntegrations } from '../../../detections/hooks/alert_summary/use_fetch_integrations';
import { useFindRulesQuery } from '../../../detection_engine/rule_management/api/hooks/use_find_rules_query';
import { useGetIntegrationFromRuleId } from '../../../detections/hooks/alert_summary/use_get_integration_from_rule_id';

export const INTEGRATION_TEST_ID = 'alert-summary-flyout';

interface IntegrationIconProps {
  /**
   * Id of the rule the alert was generated by
   */
  ruleId: string;
}

/**
 * Renders the icon for the integration that matches the rule id.
 * It fetches all the rules and packages (integrations) to find the matching by rule id.
 * In AI for SOC, we can retrieve the integration/package that matches a specific rule, via the related_integrations field on the rule.
 */
export const IntegrationIcon = memo(({ ruleId }: IntegrationIconProps) => {
  // Fetch all rules. For the AI for SOC effort, there should only be one rule per integration (which means for now 5-6 rules total)
  const { data, isLoading: ruleIsLoading } = useFindRulesQuery({});

  // Fetch all packages
  const { installedPackages, isLoading: integrationIsLoading } = useFetchIntegrations();

  const { integration } = useGetIntegrationFromRuleId({
    packages: installedPackages,
    rules: data?.rules,
    ruleId,
  });

  return (
    <Icon
      data-test-subj={INTEGRATION_TEST_ID}
      iconSize="l"
      integration={integration}
      isLoading={ruleIsLoading || integrationIsLoading}
    />
  );
});

IntegrationIcon.displayName = 'IntegrationIcon';
