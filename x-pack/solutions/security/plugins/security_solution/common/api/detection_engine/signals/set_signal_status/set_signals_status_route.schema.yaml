openapi: 3.0.0
info:
  title: Set alerts status API endpoint
  version: '2023-10-31'
paths:
  /api/detection_engine/signals/status:
    post:
      x-labels: [serverless, ess]
      operationId: SetAlertsStatus
      x-codegen-enabled: true
      summary: Set a detection alert status
      description: Set the status of one or more detection alerts.
      tags:
        - Alerts API
      requestBody:
        description: An object containing desired status and explicit alert ids or a query to select alerts
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/SetAlertsStatusByIds'
                - $ref: '#/components/schemas/SetAlertsStatusByQuery'
            examples:
              byId:
                value:
                  status: closed
                  signal_ids: ['80e1383f856e67c1b7f7a1634744fa6d66b6e2ef7aa26d226e57afb5a7b2b4a1']
              byQuery:
                value:
                  conflicts: proceed
                  status: closed
                  query:
                    bool:
                      must: []
                      filter:
                        - range:
                          '@timestamp':
                            gte: 2024-10-23T07:00:00.000Z
                            lte: 2025-01-21T20:12:11.704Z
                            format: strict_date_optional_time
                        - bool:
                            filter:
                              bool:
                                must: []
                                filter:
                                  - match_phrase:
                                      kibana.alert.workflow_status: open
                                  - range:
                                    '@timestamp':
                                      gte: 2024-10-23T07:00:00.000Z
                                      lte: 2025-01-21T20:12:11.704Z
                                      format: strict_date_optional_time
                                should: []
                                must_not:
                                  - exists:
                                      field: kibana.alert.building_block_type
                      should: []
                      must_not: []
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
                description: Elasticsearch update by query response
              examples:
                byId:
                  value:
                    took: 81
                    timed_out: false
                    total: 1
                    updated: 1
                    deleted: 0
                    batches: 1
                    version_conflicts: 0
                    noops: 0
                    retries:
                      bulk: 0
                      search: 0
                    throttled_millis: 0
                    requests_per_second: -1
                    throttled_until_millis: 0
                    failures: []
                byQuery:
                  value:
                    took: 100
                    timed_out: false
                    total: 17
                    updated: 17
                    deleted: 0
                    batches: 1
                    version_conflicts: 0
                    noops: 0
                    retries:
                      bulk: 0
                      search: 0
                    throttled_millis: 0
                    requests_per_second: -1
                    throttled_until_millis: 0
                    failures: []
        400:
          description: Invalid input data response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '../../../model/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
                  - $ref: '../../../model/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'
        401:
          description: Unsuccessful authentication response
          content:
            application/json:
              schema:
                $ref: '../../../model/error_responses.schema.yaml#/components/schemas/PlatformErrorResponse'
        500:
          description: Internal server error response
          content:
            application/json:
              schema:
                $ref: '../../../model/error_responses.schema.yaml#/components/schemas/SiemErrorResponse'

components:
  schemas:
    SetAlertsStatusByIds:
      type: object
      properties:
        signal_ids:
          type: array
          description: List of alert `id`s.
          items:
            type: string
            format: nonempty
            minLength: 1
          minItems: 1
        status:
          $ref: '../../../model/alert.schema.yaml#/components/schemas/AlertStatus'
      required: [signal_ids, status]

    SetAlertsStatusByQuery:
      type: object
      properties:
        query:
          type: object
          additionalProperties: true
        status:
          $ref: '../../../model/alert.schema.yaml#/components/schemas/AlertStatus'
        conflicts:
          type: string
          enum:
            - abort
            - proceed
          default: abort
      required: [query, status]
