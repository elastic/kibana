openapi: 3.0.0
info:
  title: Import Rules API endpoint
  version: '2023-10-31'
paths:
  /api/detection_engine/rules/_import:
    post:
      x-labels: [ess, serverless]
      x-codegen-enabled: true
      operationId: ImportRules
      summary: Import detection rules
      description: |
        Import detection rules from an `.ndjson` file, including actions and exception lists. The request must include:
        - The `Content-Type: multipart/form-data` HTTP header.
        - A link to the `.ndjson` file containing the rules.
        > warn
        > When used with [API key](https://www.elastic.co/guide/en/kibana/current/api-keys.html) authentication, the user's key gets assigned to the affected rules. If the user's key gets deleted or the user becomes inactive, the rules will stop running.

        > If the API key that is used for authorization has different privileges than the key that created or most recently updated the rule, the rule behavior might change.
        > info
        > To import rules with actions, you need at least Read privileges for the Action and Connectors feature. To overwrite or add new connectors, you need All privileges for the Actions and Connectors feature. To import rules without actions, you don’t need Actions and Connectors privileges. Refer to [Enable and access detections](https://www.elastic.co/guide/en/security/current/detections-permissions-section.html#enable-detections-ui) for more information.

        > info
        > Rule actions and connectors are included in the exported file, but sensitive information about the connector (such as authentication credentials) is not included. You must re-add missing connector details after importing detection rules.

        > You can use Kibana’s [Saved Objects](https://www.elastic.co/guide/en/kibana/current/managing-saved-objects.html) UI (Stack Management → Kibana → Saved Objects) or the Saved Objects APIs (experimental) to [export](https://www.elastic.co/docs/api/doc/kibana/operation/operation-exportsavedobjectsdefault) and [import](https://www.elastic.co/docs/api/doc/kibana/operation/operation-importsavedobjectsdefault) any necessary connectors before importing detection rules.

        > Similarly, any value lists used for rule exceptions are not included in rule exports or imports. Use the [Manage value lists](https://www.elastic.co/guide/en/security/current/value-lists-exceptions.html#manage-value-lists) UI (Rules → Detection rules (SIEM) → Manage value lists) to export and import value lists separately.
      tags:
        - Import/Export API
      x-codeSamples:
        - lang: cURL
          source: |
            curl -X POST "<KibanaURL>/api/detection_engine/rules/_import"
            -u <username>:<password> -H 'kbn-xsrf: true'
            -H 'Content-Type: multipart/form-data'
            --form "file=@<link to file>"
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The `.ndjson` file containing the rules.
      parameters:
        - name: overwrite
          in: query
          required: false
          description: Determines whether existing rules with the same `rule_id` are overwritten.
          schema:
            type: boolean
            default: false
        - name: overwrite_exceptions
          in: query
          required: false
          description: Determines whether existing exception lists with the same `list_id` are overwritten. Both the exception list container and its items are overwritten.
          schema:
            type: boolean
            default: false
        - name: overwrite_action_connectors
          in: query
          required: false
          description: Determines whether existing actions with the same `kibana.alert.rule.actions.id` are overwritten.
          schema:
            type: boolean
            default: false
        - name: as_new_list
          in: query
          required: false
          description: Generates a new list ID for each imported exception list.
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: Indicates a successful call.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - exceptions_success
                  - exceptions_success_count
                  - exceptions_errors
                  - rules_count
                  - success
                  - success_count
                  - errors
                  - action_connectors_errors
                  - action_connectors_warnings
                  - action_connectors_success
                  - action_connectors_success_count
                properties:
                  exceptions_success:
                    type: boolean
                  exceptions_success_count:
                    type: integer
                    minimum: 0
                  exceptions_errors:
                    type: array
                    items:
                      $ref: '../../model/error_schema.schema.yaml#/components/schemas/ErrorSchema'
                  rules_count:
                    type: integer
                    minimum: 0
                  success:
                    type: boolean
                  success_count:
                    type: integer
                    minimum: 0
                  errors:
                    type: array
                    items:
                      $ref: '../../model/error_schema.schema.yaml#/components/schemas/ErrorSchema'
                  action_connectors_errors:
                    type: array
                    items:
                      $ref: '../../model/error_schema.schema.yaml#/components/schemas/ErrorSchema'
                  action_connectors_warnings:
                    type: array
                    items:
                      $ref: '../../model/warning_schema.schema.yaml#/components/schemas/WarningSchema'
                  action_connectors_success:
                    type: boolean
                  action_connectors_success_count:
                    type: integer
                    minimum: 0
              examples:
                example1:
                  summary: Import rules with success
                  value:
                    success: true
                    success_count: 1
                    rules_count: 1
                    errors: []
                    exceptions_errors: []
                    exceptions_success: true
                    exceptions_success_count: 0
