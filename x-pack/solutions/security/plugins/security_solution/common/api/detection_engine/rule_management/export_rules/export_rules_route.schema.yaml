openapi: 3.0.0
info:
  title: Export Rules API endpoint
  version: '2023-10-31'
paths:
  /api/detection_engine/rules/_export:
    post:
      x-labels: [ess, serverless]
      x-codegen-enabled: true
      operationId: ExportRules
      summary: Export detection rules
      description: |
        Export detection rules to an `.ndjson` file. The following configuration items are also included in the `.ndjson` file:
        - Actions
        - Exception lists
        > info
        > Rule actions and connectors are included in the exported file, but sensitive information about the connector (such as authentication credentials) is not included. You must re-add missing connector details after importing detection rules.

        > You can use Kibana’s [Saved Objects](https://www.elastic.co/guide/en/kibana/current/managing-saved-objects.html) UI (Stack Management → Kibana → Saved Objects) or the Saved Objects APIs (experimental) to [export](https://www.elastic.co/docs/api/doc/kibana/operation/operation-exportsavedobjectsdefault) and [import](https://www.elastic.co/docs/api/doc/kibana/operation/operation-importsavedobjectsdefault) any necessary connectors before importing detection rules.

        > Similarly, any value lists used for rule exceptions are not included in rule exports or imports. Use the [Manage value lists](https://www.elastic.co/guide/en/security/current/value-lists-exceptions.html#manage-value-lists) UI (Rules → Detection rules (SIEM) → Manage value lists) to export and import value lists separately.
      tags:
        - Import/Export API
      parameters:
        - name: exclude_export_details
          in: query
          required: false
          description: Determines whether a summary of the exported rules is returned.
          schema:
            type: boolean
            default: false
        - name: file_name
          in: query
          required: false
          description: |
            File name for saving the exported rules.
            > info
            > When using cURL to export rules to a file, use the -O and -J options to save the rules to the file name specified in the URL.
          schema:
            type: string
            default: export.ndjson
      x-codeSamples:
        - lang: cURL
          source: |
            curl -X POST "localhost:5601/api/detection_engine/rules/_export?exclude_export_details=true&file_name=exported_rules.ndjson" -H 'kbn-xsrf: true' -H 'Content-Type: application/json' -d'
            {
              "objects": [
                {
                  "rule_id":"343580b5-c811-447c-8d2d-2ccf052c6900"
                },
                {
                  "rule_id":"2938c9fa-53eb-4c04-b79c-33cbf041b18d"
                }
              ]
            }
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              required:
                - objects
              nullable: true
              properties:
                objects:
                  type: array
                  items:
                    type: object
                    required:
                      - rule_id
                    properties:
                      rule_id:
                        $ref: '../../model/rule_schema/common_attributes.schema.yaml#/components/schemas/RuleSignatureId'
                  description: Array of `rule_id` fields. Exports all rules when unspecified.
      responses:
        200:
          description: Indicates a successful call.
          content:
            application/ndjson:
              schema:
                type: string
                format: binary
                description: |
                  An `.ndjson` file containing the returned rules.

                  Each line in the file represents an object (a rule, exception list parent container, or exception list item), and the last line includes a summary of what was exported.
