/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Threshold Rule Attributes
 *   version: not applicable
 */

import { z } from '@kbn/zod';

import { AlertSuppressionDuration } from '../common_attributes.gen';

/**
 * The field on which the cardinality is applied.
 */
export type ThresholdCardinality = z.infer<typeof ThresholdCardinality>;
export const ThresholdCardinality = z.array(
  z.object({
    /**
     * The field on which to calculate and compare the cardinality.
     */
    field: z.string(),
    /**
     * The threshold value from which an alert is generated based on unique number of values of cardinality.field.
     */
    value: z.number().int().min(0),
  })
);

/**
 * The threshold value from which an alert is generated.
 */
export type ThresholdValue = z.infer<typeof ThresholdValue>;
export const ThresholdValue = z.number().int().min(1);

/**
 * The field on which the threshold is applied. If you specify an empty array ([]), alerts are generated when the query returns at least the number of results specified in the value field.
 */
export type ThresholdField = z.infer<typeof ThresholdField>;
export const ThresholdField = z.union([z.string(), z.array(z.string())]);

/**
 * Field to aggregate on
 */
export type ThresholdFieldNormalized = z.infer<typeof ThresholdFieldNormalized>;
export const ThresholdFieldNormalized = z.array(z.string());

export type Threshold = z.infer<typeof Threshold>;
export const Threshold = z.object({
  field: ThresholdField,
  value: ThresholdValue,
  cardinality: ThresholdCardinality.optional(),
});

export type ThresholdNormalized = z.infer<typeof ThresholdNormalized>;
export const ThresholdNormalized = z.object({
  field: ThresholdFieldNormalized,
  value: ThresholdValue,
  cardinality: ThresholdCardinality.optional(),
});

export type ThresholdWithCardinality = z.infer<typeof ThresholdWithCardinality>;
export const ThresholdWithCardinality = z.object({
  field: ThresholdFieldNormalized,
  value: ThresholdValue,
  cardinality: ThresholdCardinality,
});

/**
 * Defines alert suppression configuration.
 */
export type ThresholdAlertSuppression = z.infer<typeof ThresholdAlertSuppression>;
export const ThresholdAlertSuppression = z.object({
  duration: AlertSuppressionDuration,
});
