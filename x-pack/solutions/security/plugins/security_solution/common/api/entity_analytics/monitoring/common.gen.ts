/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Privilege Monitoring Common Schema
 *   version: 1
 */

import { z } from '@kbn/zod';

export type PrivilegeMonitoringEngineStatus = z.infer<typeof PrivilegeMonitoringEngineStatus>;
export const PrivilegeMonitoringEngineStatus = z.enum([
  'started',
  'error',
  'disabled',
  'not_installed',
]);
export type PrivilegeMonitoringEngineStatusEnum = typeof PrivilegeMonitoringEngineStatus.enum;
export const PrivilegeMonitoringEngineStatusEnum = PrivilegeMonitoringEngineStatus.enum;

export type MonitoringEngineDescriptor = z.infer<typeof MonitoringEngineDescriptor>;
export const MonitoringEngineDescriptor = z.object({
  status: PrivilegeMonitoringEngineStatus,
});

export type MonitoringEngineComponentResource = z.infer<typeof MonitoringEngineComponentResource>;
export const MonitoringEngineComponentResource = z.enum(['privmon_engine', 'index', 'task']);
export type MonitoringEngineComponentResourceEnum = typeof MonitoringEngineComponentResource.enum;
export const MonitoringEngineComponentResourceEnum = MonitoringEngineComponentResource.enum;

export type MonitoringEngineComponentStatus = z.infer<typeof MonitoringEngineComponentStatus>;
export const MonitoringEngineComponentStatus = z.object({
  id: z.string(),
  installed: z.boolean(),
  resource: MonitoringEngineComponentResource,
  health: z.enum(['green', 'yellow', 'red', 'unknown']).optional(),
  errors: z
    .array(
      z.object({
        title: z.string().optional(),
        message: z.string().optional(),
      })
    )
    .optional(),
});
