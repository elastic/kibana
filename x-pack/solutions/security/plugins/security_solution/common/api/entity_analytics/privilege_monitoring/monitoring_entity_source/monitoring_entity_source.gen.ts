/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Monitoring Entity Source Schema
 *   version: 1
 */

import { z } from '@kbn/zod';

export type MonitoringEntitySourceDescriptor = z.infer<typeof MonitoringEntitySourceDescriptor>;
export const MonitoringEntitySourceDescriptor = z.object({
  type: z.string(),
  name: z.string(),
  managed: z.boolean().optional(),
  indexPattern: z.string().optional(),
  enabled: z.boolean().optional(),
  error: z.string().optional(),
  integrationName: z.string().optional(),
  matchers: z
    .array(
      z.object({
        fields: z.array(z.string()),
        values: z.array(z.string()),
      })
    )
    .optional(),
  filter: z.object({}).optional(),
});

export type MonitoringEntitySourceResponse = z.infer<typeof MonitoringEntitySourceResponse>;
export const MonitoringEntitySourceResponse = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  type: z.string().optional(),
  indexPattern: z.string().optional(),
  integrationName: z.string().optional(),
  enabled: z.boolean().optional(),
  matchers: z
    .array(
      z.object({
        fields: z.array(z.string()),
        values: z.array(z.string()),
      })
    )
    .optional(),
});
