/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Privilege Monitoring Common Schema
 *   version: 1
 */

import { z } from '@kbn/zod';

export type EngineStatus = z.infer<typeof EngineStatus>;
export const EngineStatus = z.enum(['installing', 'started', 'stopped', 'updating', 'error']);
export type EngineStatusEnum = typeof EngineStatus.enum;
export const EngineStatusEnum = EngineStatus.enum;

export type MonitoringEngineDescriptor = z.infer<typeof MonitoringEngineDescriptor>;
export const MonitoringEngineDescriptor = z.object({
  status: EngineStatus,
});

export type EngineComponentResource = z.infer<typeof EngineComponentResource>;
export const EngineComponentResource = z.enum(['privmon_engine', 'index', 'task']);
export type EngineComponentResourceEnum = typeof EngineComponentResource.enum;
export const EngineComponentResourceEnum = EngineComponentResource.enum;

export type EngineComponentStatus = z.infer<typeof EngineComponentStatus>;
export const EngineComponentStatus = z.object({
  id: z.string(),
  installed: z.boolean(),
  resource: EngineComponentResource,
  health: z.enum(['green', 'yellow', 'red', 'unknown']).optional(),
  errors: z
    .array(
      z.object({
        title: z.string().optional(),
        message: z.string().optional(),
      })
    )
    .optional(),
});
