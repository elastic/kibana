/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Entity Details highlights
 *   version: 1
 */

import { z } from '@kbn/zod';

import { AnonymizationFieldResponse } from '@kbn/elastic-assistant-common/impl/schemas/anonymization_fields/bulk_crud_anonymization_fields_route.gen';
import { Replacements } from '@kbn/elastic-assistant-common/impl/schemas/conversations/common_attributes.gen';
import { EntityType } from '../entity_store/common.gen';

export type EntityDetailsHighlightsRequestBody = z.infer<typeof EntityDetailsHighlightsRequestBody>;
export const EntityDetailsHighlightsRequestBody = z.object({
  entityType: EntityType,
  /**
   * The identifier of the entity.
   */
  entityIdentifier: z.string(),
  anonymizationFields: z.array(AnonymizationFieldResponse),
  /**
   * The 'from' date.
   */
  from: z.number(),
  /**
   * The 'to' date.
   */
  to: z.number(),
  /**
   * The connector id.
   */
  connectorId: z.string(),
});
export type EntityDetailsHighlightsRequestBodyInput = z.input<
  typeof EntityDetailsHighlightsRequestBody
>;

export type EntityDetailsHighlightsResponse = z.infer<typeof EntityDetailsHighlightsResponse>;
export const EntityDetailsHighlightsResponse = z.object({
  /**
   * The highlights of the entity.
   */
  summary: z.object({
    assetCriticality: z.array(z.object({})).optional(),
    riskScore: z.array(z.object({})).optional(),
    vulnerabilities: z.array(z.object({})).optional(),
    vulnerabilitiesTotal: z.object({}).catchall(z.number()).optional(),
    anomalies: z.array(z.object({})).optional(),
  }),
  replacements: Replacements,
  /**
   * The prompt used to generate the highlights.
   */
  prompt: z.string(),
});
