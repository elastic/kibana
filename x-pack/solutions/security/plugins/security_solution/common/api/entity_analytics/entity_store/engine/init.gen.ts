/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Init Entity Engine
 *   version: 2023-10-31
 */

import { z } from '@kbn/zod';

import { EntityType, IndexPattern, EngineDescriptor } from '../common.gen';

export type InitEntityEngineRequestParams = z.infer<typeof InitEntityEngineRequestParams>;
export const InitEntityEngineRequestParams = z.object({
  /**
   * The entity type of the engine (either 'user' or 'host').
   */
  entityType: EntityType,
});
export type InitEntityEngineRequestParamsInput = z.input<typeof InitEntityEngineRequestParams>;

export type InitEntityEngineRequestBody = z.infer<typeof InitEntityEngineRequestBody>;
export const InitEntityEngineRequestBody = z.object({
  /**
   * The number of historical values to keep for each field.
   */
  fieldHistoryLength: z.number().int().optional().default(10),
  indexPattern: IndexPattern.optional(),
  filter: z.string().optional(),
});
export type InitEntityEngineRequestBodyInput = z.input<typeof InitEntityEngineRequestBody>;

export type InitEntityEngineResponse = z.infer<typeof InitEntityEngineResponse>;
export const InitEntityEngineResponse = EngineDescriptor;
