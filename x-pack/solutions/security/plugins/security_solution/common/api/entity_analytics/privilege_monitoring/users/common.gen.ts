/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Privilege Monitoring Users Common Schema
 *   version: 1
 */

import { z } from '@kbn/zod';

export type UserName = z.infer<typeof UserName>;
export const UserName = z.object({
  user: z
    .object({
      /**
       * The name of the user.
       */
      name: z.string().optional(),
    })
    .optional(),
});

export type MonitoredUserDoc = z.infer<typeof MonitoredUserDoc>;
export const MonitoredUserDoc = z.object({
  id: z.string().optional(),
  event: z
    .object({
      ingested: z.string().datetime().optional(),
    })
    .optional(),
  '@timestamp': z.string().datetime().optional(),
  user: z
    .object({
      name: z.string().optional(),
    })
    .optional(),
  labels: z
    .object({
      monitoring: z
        .object({
          privileged_users: z.enum(['monitored', 'deleted']).optional(),
        })
        .optional(),
      sources: z.array(z.unknown()).optional(),
      source_indices: z.array(z.string()).optional(),
      source_integrations: z.array(z.string()).optional(),
    })
    .optional(),
  entity_analytics_monitoring: z
    .object({
      labels: z
        .array(
          z.object({
            field: z.string().optional(),
            value: z.string().optional(),
            source: z.string().optional(),
          })
        )
        .optional(),
    })
    .optional(),
});
