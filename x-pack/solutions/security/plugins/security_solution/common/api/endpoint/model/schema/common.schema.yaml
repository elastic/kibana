openapi: 3.0.0
info:
  title: Common Endpoint Attributes
  version: '2023-10-31'
paths: {}
components:
  schemas:
    Id:
      type: string
    IdOrUndefined:
      $ref: '#/components/schemas/Id'
      nullable: true
    Page:
      type: integer
      default: 1
      minimum: 1
      description: Page number
      example: 1
    PageSize:
      type: integer
      default: 10
      minimum: 1
      maximum: 100
      description: Number of items per page
      example: 10
    StartDate:
      type: string
      description: A start date in ISO 8601 format or Date Math format.
      example: "2023-10-31T00:00:00.000Z"
    EndDate:
      type: string
      description: An end date in ISO format or Date Math format.
      example: "2023-10-31T23:59:59.999Z"
    AgentId:
      type: string
      description: Agent ID
    Kuery:
      type: string
      description: A KQL string.
      example: "united.endpoint.host.os.name : 'Windows'"
    HostStatuses:
      type: array
      description: A set of agent health statuses to filter by.
      example: [ "healthy", "updating" ]
      items:
        type: string
        enum:
          - healthy
          - offline
          - updating
          - inactive
          - unenrolled
    SortDirection:
      type: string
      description: Determines the sort order.
      example: desc
      enum:
        - asc
        - desc
    SortField:
      type: string
      description: Determines which field is used to sort the results.
      example: enrolled_at
      enum:
        - enrolled_at
        - metadata.host.hostname
        - host_status
        - metadata.Endpoint.policy.applied.name
        - metadata.Endpoint.policy.applied.status
        - metadata.host.os.name
        - metadata.host.ip
        - metadata.agent.version
        - last_checkin

    AgentIds:
      oneOf:
        - type: array
          items:
            type: string
            minLength: 1
          minItems: 1
          maxItems: 50
        - type: string
          minLength: 1
      description: A list of agent IDs. Max of 50.
      example: [ "agent-id-1", "agent-id-2" ]
      minLength: 1

    Command:
      type: string
      enum:
        - isolate
        - unisolate
        - kill-process
        - suspend-process
        - running-processes
        - get-file
        - execute
        - upload
        - scan
      minLength: 1
      description: The command to be executed (cannot be an empty string)

    Commands:
      type: array
      description: A list of response action command names.
      example: [ "isolate", "unisolate" ]
      items:
        $ref: '#/components/schemas/Command'

    Timeout:
      type: integer
      minimum: 1
      description: The maximum timeout value in milliseconds (optional)

    Status:
      type: string
      enum:
        - failed
        - pending
        - successful

    Statuses:
      type: array
      items:
        $ref: '#/components/schemas/Status'
      minLength: 1
      maxLength: 3

    UserIds:
      oneOf:
        - type: array
          items:
            type: string
            minLength: 1
          minItems: 1
        - type: string
          minLength: 1
      description: A list of user IDs.
      example: [ "user-id-1", "user-id-2" ]

    WithOutputs:
      oneOf:
        - type: array
          items:
            type: string
            minLength: 1
          minItems: 1
        - type: string
          minLength: 1
      description: A list of action IDs that should include the complete output of the action.
      example: [ "action-id-1", "action-id-2" ]

    Type:
      type: string
      description: Type of response action
      enum:
        - automated
        - manual

    Types:
      type: array
      description: List of types of response actions
      example: [ "automated", "manual" ]
      items:
        $ref: '#/components/schemas/Type'
      minLength: 1
      maxLength: 2

    EndpointIds:
      type: array
      description: List of endpoint IDs (cannot contain empty strings)
      example: [ "endpoint-id-1", "endpoint-id-2" ]
      items:
        type: string
        minLength: 1
      minItems: 1

    Comment:
      type: string
      description: Optional comment
      example: "This is a comment"

    Parameters:
      type: object
      description: Optional parameters object

    AgentTypes:
      type: string
      description: List of agent types to retrieve. Defaults to `endpoint`.
      example: endpoint
      enum:
        - endpoint
        - sentinel_one
        - crowdstrike
        - microsoft_defender_endpoint

    BaseActionSchema:
      x-inline: true
      type: object
      properties:
        endpoint_ids:
          $ref: '#/components/schemas/EndpointIds'
        alert_ids:
          type: array
          description: If this action is associated with any alerts, they can be specified here. The action will be logged in any cases associated with the specified alerts.
          example: [ "alert-id-1", "alert-id-2" ]
          minItems: 1
          items:
            type: string
            minLength: 1
        case_ids:
          type: array
          description: The IDs of cases where the action taken will be logged.
          example: [ "case-id-1", "case-id-2" ]
          minItems: 1
          items:
            type: string
            minLength: 1
        comment:
          $ref: '#/components/schemas/Comment'
        parameters:
          $ref: '#/components/schemas/Parameters'
        agent_type:
          $ref: '#/components/schemas/AgentTypes'
      required:
        - endpoint_ids

    NoParametersRequestSchema:
      type: object
      required:
        - body
      properties:
        body:
          $ref: '#/components/schemas/BaseActionSchema'

    ProtectionUpdatesNoteResponse:
      type: object
      properties:
        note:
          type: string

    ResponseActionCreateSuccessResponse:
      type: object
      properties:
        data:
          type: object
          description: The created response action details
          properties:
            id:
              type: string
              description: The response action ID
            command:
              type: string
              description: The response action command
            agentType:
              type: string
              description: The response action agent type
            isExpired:
              type: boolean
              description: Whether the response action is expired
            isComplete:
              type: boolean
              description: Whether the response action is complete
            wasSuccessful:
              type: boolean
              description: Whether the response action was successful
            status:
              type: string
              description: The response action status
            startedAt:
              type: string
              description: The response action start time
            createdBy:
              type: string
              description: The user who created the response action
            agents:
              type: object
              description: The agent IDs for the hosts that the response action was sent to
            parameters:
              type: object
              description: The parameters of the response action. Content different depending on the response action command
            hosts:
              type: object
              description: An object containing the host names associated with the agent IDs the response action was sent to
              additionalProperties:
                type: object
                properties:
                  name:
                    type: string
                    description: The host name
            agentState:
              type: object
              description: The state of the response action for each agent ID that it was sent to
              additionalProperties:
                type: object
                properties:
                  isCompleted:
                    type: boolean
                    description: Whether the response action is completed for the agent ID
                  wasSuccessful:
                    type: boolean
                    description: Whether the response action was successful for the agent ID
                  completedAt:
                    type: string
                    description: The date and time the response action was completed for the agent ID
            outputs:
              type: object
              description: The outputs of the response action for each agent ID that it was sent to
              additionalProperties:
                type: object
                required: [ type, content ]
                properties:
                  type:
                    type: string
                    enum: [ json, text ]
                  content:
                    description: The response action output content for the agent ID. Exact format depends on the response action command.
                    oneOf:
                      - type: object
                      - type: string
      example:
        data:
          id: "233db9ea-6733-4849-9226-5a7039c7161d"
          command: "__command__name__here__"
          agentType: "__agent__type__here_"
          isExpired: false
          isCompleted: false
          wasSuccessful: false
          status: "pending"
          startedAt: "2022-07-29T19:08:49.126Z"
          createdBy: "elastic"
          agents:
            - "ed518850-681a-4d60-bb98-e22640cae2a8"
          hosts:
            ed518850-681a-4d60-bb98-e22640cae2a8:
              name: "gke-node-1235412"
          agentState:
            ed518850-681a-4d60-bb98-e22640cae2a8:
              isCompleted: false
              wasSuccessful: false
          parameters: {}
          outputs: {}

    SuccessResponse:
      type: object
      properties: {}
      # Define properties for the success response if needed
