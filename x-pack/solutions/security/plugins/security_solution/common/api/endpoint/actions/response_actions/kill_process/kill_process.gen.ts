/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Kill Process Schema
 *   version: 2023-10-31
 */

import { z } from '@kbn/zod';

import { BaseActionSchema } from '../../../model/schema/common.gen';

export type KillProcessRouteRequestBody = z.infer<typeof KillProcessRouteRequestBody>;
export const KillProcessRouteRequestBody = BaseActionSchema.merge(
  z.object({
    parameters: z.union([
      z.object({
        /**
         * The process ID (PID) of the process to terminate.
         */
        pid: z.number().int().min(1).optional(),
      }),
      z.object({
        /**
         * The entity ID of the process to terminate.
         */
        entity_id: z.string().min(1).optional(),
      }),
      z.object({
        /**
         * The name of the process to terminate. Valid for SentinelOne agent type only.
         */
        process_name: z.string().min(1).optional(),
      }),
    ]),
  })
);

export type KillProcessRouteResponse = z.infer<typeof KillProcessRouteResponse>;
export const KillProcessRouteResponse = z.object({});

export type EndpointKillProcessActionRequestBody = z.infer<
  typeof EndpointKillProcessActionRequestBody
>;
export const EndpointKillProcessActionRequestBody = KillProcessRouteRequestBody;
export type EndpointKillProcessActionRequestBodyInput = z.input<
  typeof EndpointKillProcessActionRequestBody
>;

export type EndpointKillProcessActionResponse = z.infer<typeof EndpointKillProcessActionResponse>;
export const EndpointKillProcessActionResponse = KillProcessRouteResponse;
