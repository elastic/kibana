/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

/*
 * NOTICE: Do not edit this file manually.
 * This file is automatically generated by the OpenAPI Generator, @kbn/openapi-generator.
 *
 * info:
 *   title: Shared Alert Primitives Schema
 *   version: not applicable
 */

import { z } from '@kbn/zod';
import { isNonEmptyString } from '@kbn/zod-helpers';

/**
 * A list of alerts `id`s.
 */
export type AlertIds = z.infer<typeof AlertIds>;
export const AlertIds = z.array(z.string().min(1).superRefine(isNonEmptyString)).min(1);

/**
 * Use alert tags to organize related alerts into categories that you can filter and group.
 */
export type AlertTag = z.infer<typeof AlertTag>;
export const AlertTag = z.string().min(1).superRefine(isNonEmptyString);

/**
 * List of keywords to organize related alerts into categories that you can filter and group.
 */
export type AlertTags = z.infer<typeof AlertTags>;
export const AlertTags = z.array(AlertTag);

/**
 * The status of an alert, which can be `open`, `acknowledged`, `in-progress`, or `closed`.
 */
export type AlertStatus = z.infer<typeof AlertStatus>;
export const AlertStatus = z.enum(['open', 'closed', 'acknowledged', 'in-progress']);
export type AlertStatusEnum = typeof AlertStatus.enum;
export const AlertStatusEnum = AlertStatus.enum;
