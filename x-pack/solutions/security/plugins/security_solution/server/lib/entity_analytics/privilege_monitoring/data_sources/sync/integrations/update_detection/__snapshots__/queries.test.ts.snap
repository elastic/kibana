// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Integration sync queries buildPrivilegedSearchBody constructs the correct search body for a single matcher 1`] = `
Object {
  "aggs": Object {
    "privileged_user_status_since_last_run": Object {
      "aggs": Object {
        "latest_doc_for_user": Object {
          "top_hits": Object {
            "_source": Object {
              "includes": Array [
                "@timestamp",
                "user.name",
                "user.role",
                "user.roles",
              ],
            },
            "script_fields": Object {
              "user.is_privileged": Object {
                "script": Object {
                  "lang": "painless",
                  "source": "((doc.containsKey('user.role') && doc['user.role'].size() > 0 && [\\"Admin\\", \\"Superuser\\"].contains(doc['user.role'].value)) || (doc.containsKey('user.roles') && doc['user.roles'].size() > 0 && [\\"Admin\\", \\"Superuser\\"].contains(doc['user.roles'].value)))",
                },
              },
            },
            "size": 1,
            "sort": Array [
              Object {
                "@timestamp": Object {
                  "order": "desc",
                },
              },
            ],
          },
        },
      },
      "composite": Object {
        "size": 25,
        "sources": Array [
          Object {
            "username": Object {
              "terms": Object {
                "field": "user.name",
              },
            },
          },
        ],
      },
    },
  },
  "query": Object {
    "range": Object {
      "@timestamp": Object {
        "gte": "2023-01-01T00:00:00Z",
        "lte": "now",
      },
    },
  },
  "size": 0,
}
`;

exports[`Integration sync queries buildPrivilegedSearchBody constructs the correct search body for empty matchers 1`] = `
Object {
  "aggs": Object {
    "privileged_user_status_since_last_run": Object {
      "aggs": Object {
        "latest_doc_for_user": Object {
          "top_hits": Object {
            "_source": Object {
              "includes": Array [
                "@timestamp",
                "user.name",
              ],
            },
            "script_fields": Object {
              "user.is_privileged": Object {
                "script": Object {
                  "lang": "painless",
                  "source": "true",
                },
              },
            },
            "size": 1,
            "sort": Array [
              Object {
                "@timestamp": Object {
                  "order": "desc",
                },
              },
            ],
          },
        },
      },
      "composite": Object {
        "size": 25,
        "sources": Array [
          Object {
            "username": Object {
              "terms": Object {
                "field": "user.name",
              },
            },
          },
        ],
      },
    },
  },
  "query": Object {
    "range": Object {
      "@timestamp": Object {
        "gte": "2023-01-01T00:00:00Z",
        "lte": "now",
      },
    },
  },
  "size": 0,
}
`;

exports[`Integration sync queries buildPrivilegedSearchBody constructs the correct search body for multiple matchers 1`] = `
Object {
  "aggs": Object {
    "privileged_user_status_since_last_run": Object {
      "aggs": Object {
        "latest_doc_for_user": Object {
          "top_hits": Object {
            "_source": Object {
              "includes": Array [
                "@timestamp",
                "user.name",
                "user.role",
                "user.roles",
                "user.department",
              ],
            },
            "script_fields": Object {
              "user.is_privileged": Object {
                "script": Object {
                  "lang": "painless",
                  "source": "((doc.containsKey('user.role') && doc['user.role'].size() > 0 && [\\"Admin\\", \\"Superuser\\"].contains(doc['user.role'].value)) || (doc.containsKey('user.roles') && doc['user.roles'].size() > 0 && [\\"Admin\\", \\"Superuser\\"].contains(doc['user.roles'].value))) || ((doc.containsKey('user.department') && doc['user.department'].size() > 0 && [\\"HR\\", \\"Finance\\"].contains(doc['user.department'].value)))",
                },
              },
            },
            "size": 1,
            "sort": Array [
              Object {
                "@timestamp": Object {
                  "order": "desc",
                },
              },
            ],
          },
        },
      },
      "composite": Object {
        "after": Object {
          "username": "jdoe",
        },
        "size": 50,
        "sources": Array [
          Object {
            "username": Object {
              "terms": Object {
                "field": "user.name",
              },
            },
          },
        ],
      },
    },
  },
  "query": Object {
    "range": Object {
      "@timestamp": Object {
        "gte": "2023-01-01T00:00:00Z",
        "lte": "now",
      },
    },
  },
  "size": 0,
}
`;
