/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import type { MakeSchemaFrom } from '@kbn/usage-collection-plugin/server';
import type { RuleAdoption } from '../types';

export const ruleMetricsSchema: MakeSchemaFrom<RuleAdoption>['detection_rule_detail'] = {
  rule_name: {
    type: 'keyword',
    _meta: { description: 'The name of the detection rule' },
  },
  rule_id: {
    type: 'keyword',
    _meta: { description: 'The UUID id of the detection rule' },
  },
  rule_type: {
    type: 'keyword',
    _meta: { description: 'The type of detection rule. ie eql, query...' },
  },
  rule_version: { type: 'long', _meta: { description: 'The version of the rule' } },
  enabled: {
    type: 'boolean',
    _meta: { description: 'If the detection rule has been enabled by the user' },
  },
  elastic_rule: {
    type: 'boolean',
    _meta: { description: 'If the detection rule has been authored by Elastic' },
  },
  created_on: {
    type: 'keyword',
    _meta: { description: 'When the detection rule was created on the cluster' },
  },
  updated_on: {
    type: 'keyword',
    _meta: { description: 'When the detection rule was updated on the cluster' },
  },
  alert_count_daily: {
    type: 'long',
    _meta: { description: 'The number of daily alerts generated by a rule' },
  },
  cases_count_total: {
    type: 'long',
    _meta: { description: 'The number of total cases generated by a rule' },
  },
  has_legacy_notification: {
    type: 'boolean',
    _meta: { description: 'True if this rule has a legacy notification' },
  },
  has_notification: {
    type: 'boolean',
    _meta: { description: 'True if this rule has a notification' },
  },
};
