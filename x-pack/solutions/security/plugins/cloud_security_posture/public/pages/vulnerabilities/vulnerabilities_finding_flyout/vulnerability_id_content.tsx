/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import React, { useState } from 'react';
import { EuiFlexGroup, EuiFlexItem, EuiText, EuiLink, EuiButtonEmpty } from '@elastic/eui';
import { FormattedMessage } from '@kbn/i18n-react';
import { css } from '@emotion/react';
import { Vulnerability } from '@kbn/cloud-security-posture-common/schema/vulnerabilities/latest';
import { findReferenceLink } from '@kbn/cloud-security-posture';
import {
  VULNERABILITY_EMPTY_VALUE,
  VULNERABILITY_OVERVIEW_TAB_ID_LESS_BTN,
  VULNERABILITY_OVERVIEW_TAB_ID_MORE_BTN,
  getVulnerabilityIdTestId,
  getVulnerabilityLinkTestId,
} from '../test_subjects';

const EMPTY_VALUE = '-';

interface VulnerabilityIdContentProps {
  vulnerability: Vulnerability;
}

export const VulnerabilityIdContent: React.FC<VulnerabilityIdContentProps> = ({
  vulnerability,
}) => {
  const [showAllReferences, setShowAllReferences] = useState(false);

  if (!vulnerability?.id || vulnerability.id.length === 0) {
    return <EuiText data-test-subj={VULNERABILITY_EMPTY_VALUE}>{EMPTY_VALUE}</EuiText>;
  }

  const sortReferencesByName = () => {
    // Handle case where either reference or id is not an array
    const ids = Array.isArray(vulnerability.id) ? vulnerability.id : [vulnerability.id];
    const references = Array.isArray(vulnerability.reference)
      ? vulnerability.reference
      : [vulnerability.reference];

    return ids.map((id) => {
      const referenceLink = findReferenceLink(references, id);

      return {
        id,
        link: referenceLink ?? '',
      };
    });
  };

  const sortedReferences = sortReferencesByName();
  const MAX_VISIBLE_ITEMS = 4;
  const hasMoreItems = sortedReferences.length > MAX_VISIBLE_ITEMS;
  const visibleReferences = showAllReferences
    ? sortedReferences
    : sortedReferences.slice(0, MAX_VISIBLE_ITEMS);

  return (
    <EuiFlexGroup
      responsive={false}
      gutterSize="xs"
      alignItems="center"
      css={css`
        max-height: 200px;
        overflow-y: auto;
        flex-wrap: wrap;
      `}
    >
      {visibleReferences.map(({ id, link }: { id: string; link: string }, index: number) => (
        <EuiFlexItem key={`${id}-${index}`} grow={false} css={{ flexShrink: 0 }}>
          {link ? (
            <EuiText size="s" color="primary" css={{ display: 'flex' }}>
              <EuiLink
                data-test-subj={getVulnerabilityLinkTestId(id)}
                href={link}
                target="_blank"
                css={css`
                  display: inline-flex;
                  align-items: center;
                `}
              >
                {id}
              </EuiLink>
              {index !== visibleReferences.length - 1 && ','}
            </EuiText>
          ) : (
            <EuiText data-test-subj={getVulnerabilityIdTestId(id)} size="s">
              {index === visibleReferences.length - 1 ? id : `${id},`}
            </EuiText>
          )}
        </EuiFlexItem>
      ))}
      {!showAllReferences && hasMoreItems && (
        <>
          <EuiFlexItem grow={false}>
            <EuiText size="s">...</EuiText>
          </EuiFlexItem>
          <EuiFlexItem grow={false}>
            <EuiButtonEmpty
              data-test-subj={VULNERABILITY_OVERVIEW_TAB_ID_MORE_BTN}
              color="primary"
              size="xs"
              onClick={() => setShowAllReferences(true)}
            >
              <FormattedMessage
                id="xpack.csp.vulnerabilities.vulnerabilityOverviewTab.showMore"
                defaultMessage="Show more"
              />
            </EuiButtonEmpty>
          </EuiFlexItem>
        </>
      )}
      {showAllReferences && (
        <EuiFlexItem grow={false}>
          <EuiButtonEmpty
            data-test-subj={VULNERABILITY_OVERVIEW_TAB_ID_LESS_BTN}
            color="primary"
            size="xs"
            onClick={() => setShowAllReferences(false)}
          >
            <FormattedMessage
              id="xpack.csp.vulnerabilities.vulnerabilityOverviewTab.showLess"
              defaultMessage="Show less"
            />
          </EuiButtonEmpty>
        </EuiFlexItem>
      )}
    </EuiFlexGroup>
  );
};
