/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import { useVulnerabilityFinding } from '@kbn/cloud-security-posture/src/hooks/use_vulnerability_finding';
import { createGetVulnerabilityFindingsQuery } from '@kbn/cloud-security-posture/src/utils/findings_query_builders';
import { HttpSetup } from '@kbn/core/public';
import { createDetectionRuleFromVulnerabilityFinding } from '../utils/create_detection_rule_from_vulnerability';

const VulnerabilityFindingFlyout = ({
  vulnerabilityId,
  resourceId,
  packageName,
  packageVersion,
  eventId,
  children,
}: {
  vulnerabilityId: string | string[];
  resourceId: string;
  packageName: string | string[];
  packageVersion: string | string[];
  eventId: string;
  children: any;
}) => {
  const { data } = useVulnerabilityFinding({
    query: createGetVulnerabilityFindingsQuery(
      vulnerabilityId,
      resourceId,
      packageName,
      packageVersion,
      eventId
    ),
    enabled: true,
    pageSize: 1,
  });
  const finding = data?.result.hits[0]?._source;

  if (!finding) return null;

  return children({
    finding,
    createRuleFn: (http: HttpSetup) => createDetectionRuleFromVulnerabilityFinding(http, finding),
  });
};

// eslint-disable-next-line import/no-default-export
export default VulnerabilityFindingFlyout;
