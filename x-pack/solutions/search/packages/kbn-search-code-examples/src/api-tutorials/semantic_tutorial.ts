/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

export const semanticTutorialCommands: string = `# Welcome to the Elasticsearch Semantic Search Tutorial! üéâ
# üöÄ This tutorial will guide you through basic semantic search operations in Elasticsearch using API calls from within the Kibana Console.
# After selecting a command, execute it by clicking the ‚ñ∂Ô∏è button or pressing Ctrl+Enter or Cmd+Enter.

# -----------------------------------------------
# Step 1: Create the index and mapping. üìù
# -----------------------------------------------
# Our data will be textual content that we want to perform semantic search on.
# The destination index must have a field with the semantic_text field type to store embeddings generated by the underlying inference model.

PUT /kibana_sample_data_semantic
{
  "mappings": {
    "properties": {
      "text": {
        "type": "semantic_text"
      }
    }
  }
}

# ‚úÖ The response includes a confirmation that the index was created with the correct mapping.
# By default, the semantic_text field uses the ELSER model for generating embeddings. You can use any inference model supported by Elasticsearch.
# üìñ https://www.elastic.co/docs/solutions/search/semantic-search/semantic-search-inference

# -----------------------------------------------
# Step 2: Ingest documents into the index. ‚úçÔ∏è
# -----------------------------------------------
# Use the bulk API as one method of ingesting multiple documents into the index.

POST /_bulk?pretty
{ "index": { "_index": "kibana_sample_data_semantic" } }
{"text":"Yellowstone National Park is one of the largest national parks in the United States. It ranges from the Wyoming to Montana and Idaho, and contains an area of 2,219,791 acress across three different states. Its most famous for hosting the geyser Old Faithful and is centered on the Yellowstone Caldera, the largest super volcano on the American continent. Yellowstone is host to hundreds of species of animal, many of which are endangered or threatened. Most notably, it contains free-ranging herds of bison and elk, alongside bears, cougars and wolves. The national park receives over 4.5 million visitors annually and is a UNESCO World Heritage Site."}
{ "index": { "_index": "kibana_sample_data_semantic" } }
{"text":"Yosemite National Park is a United States National Park, covering over 750,000 acres of land in California. A UNESCO World Heritage Site, the park is best known for its granite cliffs, waterfalls and giant sequoia trees. Yosemite hosts over four million visitors in most years, with a peak of five million visitors in 2016. The park is home to a diverse range of wildlife, including mule deer, black bears, and the endangered Sierra Nevada bighorn sheep. The park has 1,200 square miles of wilderness, and is a popular destination for rock climbers, with over 3,000 feet of vertical granite to climb. Its most famous and cliff is the El Capitan, a 3,000 feet monolith along its tallest face."}
{ "index": { "_index": "kibana_sample_data_semantic" } }
{"text":"Rocky Mountain National Park  is one of the most popular national parks in the United States. It receives over 4.5 million visitors annually, and is known for its mountainous terrain, including Longs Peak, which is the highest peak in the park. The park is home to a variety of wildlife, including elk, mule deer, moose, and bighorn sheep. The park is also home to a variety of ecosystems, including montane, subalpine, and alpine tundra. The park is a popular destination for hiking, camping, and wildlife viewing, and is a UNESCO World Heritage Site."}

# ‚úÖ If you receive an error response, wait a few moments and try again. This can happen if the inference model is still spinning up.
# During ingestion, the embeddings generated by the inference model will be stored in the "text" field, which is of type semantic_text.

# You can also use semantic search on data you've already brought into elastic. Use reindexing and ingestion pipelines:
# üìñ https://www.elastic.co/docs/solutions/search/semantic-search/semantic-search-elser-ingest-pipelines

# -----------------------------------------------
# Step 3: Perform semantic search queries. üîç
# -----------------------------------------------

# Use QueryDSL to perform semantic search queries on the semantic_text field.
GET kibana_sample_data_semantic/_search
{
  "query": {
    "semantic": {
      "field": "text",
      "query": "Which park is most popular?"
    }
  }
}

# ‚úÖ The response will include documents ranked by their semantic relevance to the query (score).
# The hits array contains the matching documents.

# -----------------------------------------------
# Step 4: Refine results with a filter. üõ°Ô∏è
# -----------------------------------------------

# This introduces Query Context and Filter Context.
# Query context determines the relevance score of a document.
# Filter context restricts the results without affecting the score of matched documents.

GET kibana_sample_data_semantic/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "semantic": {
            "field": "text",
            "query": "Which park has the most wildlife?"
          }
        }
      ],
      "filter": [
        {
          "exists": {
            "field": "text"
          }
        }
      ]
    }
  },
  "size": 2,
  "sort": {
    "_score": "desc"
  }
}

# 'bool' and 'must' are used in query context. 'exists' is used in the filter context.
# ‚úÖ Results are limited to a size of 2 and sorted by _score.

# Tip: Adding a 'text' field type to the index allows further filtering with options such as match and regexp.
# üìñ See https://www.elastic.co/docs/reference/query-languages/query-dsl/query-filter-context

# -----------------------------------------------
# Step 5: Use minimum_score to show only highly relevant results üéØ
# -----------------------------------------------

GET kibana_sample_data_semantic/_search
{
  "min_score": 15.0,
  "query": {
    "semantic": {
      "field": "text",
      "query": "Which park is best for hiking?"
    }
  }
}

# ‚úÖ The response includes only documents with a semantic relevance score of 15.0 or higher.

# -----------------------------------------------
# Step 6: Try out other query options üß™
# -----------------------------------------------

# Search API provides many options to further explore and optimize your queries
# üìñ https://www.elastic.co/docs/explore-analyze/query-filter/languages/querydsl

# Try out various query options in the Kibana Console, or ask the AI Assistant for help!

# -----------------------------------------------
# Step 7: Delete your index (optional) üóëÔ∏è
# -----------------------------------------------
# Delete the index to clean up or start from scratch.
# Warning: Deleting an index permanently deletes its documents, shards, and metadata.

DELETE /kibana_sample_data_semantic

# ‚úÖ The response includes a confirmation that the index was deleted.

# -----------------------------------------------
# üéâ Conclusion
# -----------------------------------------------
# üèÅ In this tutorial, you learned the basics of semantic search in Elasticsearch leveraging the "semantic_text" field in an index.
# üöÄ Easily ingest your own data for semantic search using an ingest pipeline:
# üìñ https://www.elastic.co/docs/solutions/search/semantic-search/semantic-search-elser-ingest-pipelines
`;
