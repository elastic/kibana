// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StatusFilterComponent renders without errors for valid props 1`] = `
<div
  class="euiFilterGroup emotion-euiFilterGroup-uncompressed"
>
  <div
    class="euiFilterButton__wrapper css-1mc0x02-wrapper-hasToggle"
  >
    <button
      aria-pressed="true"
      class="euiButtonGroupButton euiButtonGroupButton-isSelected euiFilterButton euiFilterButton-isSelected euiFilterButton-hasActiveFilters emotion-euiButtonDisplay-s-defaultMinWidth-euiButtonGroupButton-compressed-fill-text-euiFilterButton-withNext-hasActiveFilters-toggle"
      data-test-subj="xpack.synthetics.filterBar.filterStatusAll"
      type="button"
    >
      <span
        class="emotion-euiButtonDisplayContent-euiButtonGroupButton__content-compressed-euiFilterButton__content"
      >
        <span
          class="euiFilterButton__text emotion-euiFilterButton__text"
          data-text="All"
          title="All"
        >
          All
        </span>
      </span>
    </button>
  </div>
  <div
    class="euiFilterButton__wrapper css-1mc0x02-wrapper-hasToggle"
  >
    <button
      aria-pressed="false"
      class="euiButtonGroupButton euiFilterButton emotion-euiButtonDisplay-s-defaultMinWidth-euiButtonGroupButton-compressed-empty-text-euiFilterButton-withNext-toggle"
      data-test-subj="xpack.synthetics.filterBar.filterStatusUp"
      type="button"
    >
      <span
        class="emotion-euiButtonDisplayContent-euiButtonGroupButton__content-compressed-euiFilterButton__content"
      >
        <span
          class="euiFilterButton__text emotion-euiFilterButton__text"
          data-text="Up"
          title="Up"
        >
          Up
        </span>
      </span>
    </button>
  </div>
  <div
    class="euiFilterButton__wrapper css-1mc0x02-wrapper-hasToggle"
  >
    <button
      aria-pressed="false"
      class="euiButtonGroupButton euiFilterButton emotion-euiButtonDisplay-s-defaultMinWidth-euiButtonGroupButton-compressed-empty-text-euiFilterButton-toggle"
      data-test-subj="xpack.synthetics.filterBar.filterStatusDown"
      type="button"
    >
      <span
        class="emotion-euiButtonDisplayContent-euiButtonGroupButton__content-compressed-euiFilterButton__content"
      >
        <span
          class="euiFilterButton__text emotion-euiFilterButton__text"
          data-text="Down"
          title="Down"
        >
          Down
        </span>
      </span>
    </button>
  </div>
</div>
`;

exports[`StatusFilterComponent shallow renders without errors for valid props 1`] = `
<ContextProvider
  value={
    Object {
      "history": Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "TestKeyForTesting",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "TestKeyForTesting",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
      "location": Object {
        "hash": "",
        "key": "TestKeyForTesting",
        "pathname": "/",
        "search": "",
        "state": undefined,
      },
      "match": Object {
        "isExact": true,
        "params": Object {},
        "path": "/",
        "url": "/",
      },
      "staticContext": undefined,
    }
  }
>
  <ContextProvider
    value={
      Object {
        "action": "POP",
        "block": [Function],
        "canGo": [Function],
        "createHref": [Function],
        "entries": Array [
          Object {
            "hash": "",
            "key": "TestKeyForTesting",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        ],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "index": 0,
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "key": "TestKeyForTesting",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <CompatRouter>
      <StatusFilter />
    </CompatRouter>
  </ContextProvider>
</ContextProvider>
`;
