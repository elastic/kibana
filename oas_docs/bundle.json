{
  "components": {
    "schemas": {
      "core_status_redactedResponse": {
        "additionalProperties": false,
        "description": "A minimal representation of Kibana's operational status.",
        "properties": {
          "status": {
            "additionalProperties": false,
            "properties": {
              "overall": {
                "additionalProperties": false,
                "properties": {
                  "level": {
                    "description": "Service status levels as human and machine readable values.",
                    "enum": [
                      "available",
                      "degraded",
                      "unavailable",
                      "critical"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "level"
                ],
                "type": "object"
              }
            },
            "required": [
              "overall"
            ],
            "type": "object"
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "core_status_response": {
        "additionalProperties": false,
        "description": "Kibana's operational status as well as a detailed breakdown of plugin statuses indication of various loads (like event loop utilization and network traffic) at time of request.",
        "properties": {
          "metrics": {
            "additionalProperties": false,
            "description": "Metric groups collected by Kibana.",
            "properties": {
              "collection_interval_in_millis": {
                "description": "The interval at which metrics should be collected.",
                "type": "number"
              },
              "elasticsearch_client": {
                "additionalProperties": false,
                "description": "Current network metrics of Kibana's Elasticsearch client.",
                "properties": {
                  "totalActiveSockets": {
                    "description": "Count of network sockets currently in use.",
                    "type": "number"
                  },
                  "totalIdleSockets": {
                    "description": "Count of network sockets currently idle.",
                    "type": "number"
                  },
                  "totalQueuedRequests": {
                    "description": "Count of requests not yet assigned to sockets.",
                    "type": "number"
                  }
                },
                "required": [
                  "totalActiveSockets",
                  "totalIdleSockets",
                  "totalQueuedRequests"
                ],
                "type": "object"
              },
              "last_updated": {
                "description": "The time metrics were collected.",
                "type": "string"
              }
            },
            "required": [
              "elasticsearch_client",
              "last_updated",
              "collection_interval_in_millis"
            ],
            "type": "object"
          },
          "name": {
            "description": "Kibana instance name.",
            "type": "string"
          },
          "status": {
            "additionalProperties": false,
            "properties": {
              "core": {
                "additionalProperties": false,
                "description": "Statuses of core Kibana services.",
                "properties": {
                  "elasticsearch": {
                    "additionalProperties": false,
                    "properties": {
                      "detail": {
                        "description": "Human readable detail of the service status.",
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "A URL to further documentation regarding this service.",
                        "type": "string"
                      },
                      "level": {
                        "description": "Service status levels as human and machine readable values.",
                        "enum": [
                          "available",
                          "degraded",
                          "unavailable",
                          "critical"
                        ],
                        "type": "string"
                      },
                      "meta": {
                        "additionalProperties": {},
                        "description": "An unstructured set of extra metadata about this service.",
                        "type": "object"
                      },
                      "summary": {
                        "description": "A human readable summary of the service status.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "level",
                      "summary",
                      "meta"
                    ],
                    "type": "object"
                  },
                  "savedObjects": {
                    "additionalProperties": false,
                    "properties": {
                      "detail": {
                        "description": "Human readable detail of the service status.",
                        "type": "string"
                      },
                      "documentationUrl": {
                        "description": "A URL to further documentation regarding this service.",
                        "type": "string"
                      },
                      "level": {
                        "description": "Service status levels as human and machine readable values.",
                        "enum": [
                          "available",
                          "degraded",
                          "unavailable",
                          "critical"
                        ],
                        "type": "string"
                      },
                      "meta": {
                        "additionalProperties": {},
                        "description": "An unstructured set of extra metadata about this service.",
                        "type": "object"
                      },
                      "summary": {
                        "description": "A human readable summary of the service status.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "level",
                      "summary",
                      "meta"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "elasticsearch",
                  "savedObjects"
                ],
                "type": "object"
              },
              "overall": {
                "additionalProperties": false,
                "properties": {
                  "detail": {
                    "description": "Human readable detail of the service status.",
                    "type": "string"
                  },
                  "documentationUrl": {
                    "description": "A URL to further documentation regarding this service.",
                    "type": "string"
                  },
                  "level": {
                    "description": "Service status levels as human and machine readable values.",
                    "enum": [
                      "available",
                      "degraded",
                      "unavailable",
                      "critical"
                    ],
                    "type": "string"
                  },
                  "meta": {
                    "additionalProperties": {},
                    "description": "An unstructured set of extra metadata about this service.",
                    "type": "object"
                  },
                  "summary": {
                    "description": "A human readable summary of the service status.",
                    "type": "string"
                  }
                },
                "required": [
                  "level",
                  "summary",
                  "meta"
                ],
                "type": "object"
              },
              "plugins": {
                "additionalProperties": {
                  "additionalProperties": false,
                  "properties": {
                    "detail": {
                      "description": "Human readable detail of the service status.",
                      "type": "string"
                    },
                    "documentationUrl": {
                      "description": "A URL to further documentation regarding this service.",
                      "type": "string"
                    },
                    "level": {
                      "description": "Service status levels as human and machine readable values.",
                      "enum": [
                        "available",
                        "degraded",
                        "unavailable",
                        "critical"
                      ],
                      "type": "string"
                    },
                    "meta": {
                      "additionalProperties": {},
                      "description": "An unstructured set of extra metadata about this service.",
                      "type": "object"
                    },
                    "summary": {
                      "description": "A human readable summary of the service status.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "level",
                    "summary",
                    "meta"
                  ],
                  "type": "object"
                },
                "description": "A dynamic mapping of plugin ID to plugin status.",
                "type": "object"
              }
            },
            "required": [
              "overall",
              "core",
              "plugins"
            ],
            "type": "object"
          },
          "uuid": {
            "description": "Unique, generated Kibana instance UUID. This UUID should persist even if the Kibana process restarts.",
            "type": "string"
          },
          "version": {
            "additionalProperties": false,
            "properties": {
              "build_date": {
                "description": "The date and time of this build.",
                "type": "string"
              },
              "build_flavor": {
                "description": "The build flavour determines configuration and behavior of Kibana. On premise users will almost always run the \"traditional\" flavour, while other flavours are reserved for Elastic-specific use cases.",
                "enum": [
                  "serverless",
                  "traditional"
                ],
                "type": "string"
              },
              "build_hash": {
                "description": "A unique hash value representing the git commit of this Kibana build.",
                "type": "string"
              },
              "build_number": {
                "description": "A monotonically increasing number, each subsequent build will have a higher number.",
                "type": "number"
              },
              "build_snapshot": {
                "description": "Whether this build is a snapshot build.",
                "type": "boolean"
              },
              "number": {
                "description": "A semantic version number.",
                "type": "string"
              }
            },
            "required": [
              "number",
              "build_hash",
              "build_number",
              "build_snapshot",
              "build_flavor",
              "build_date"
            ],
            "type": "object"
          }
        },
        "required": [
          "name",
          "uuid",
          "version",
          "status",
          "metrics"
        ],
        "type": "object"
      }
    },
    "securitySchemes": {
      "apiKeyAuth": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey"
      },
      "basicAuth": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "title": "Kibana HTTP APIs",
    "version": "0.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/api/actions": {
      "get": {
        "deprecated": true,
        "operationId": "get-actions",
        "parameters": [],
        "responses": {},
        "summary": "Get all connectors",
        "tags": [
          "connectors"
        ]
      }
    },
    "/api/actions/action": {
      "post": {
        "deprecated": true,
        "operationId": "post-actions-action",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "actionTypeId": {
                    "description": "The connector type identifier.",
                    "type": "string"
                  },
                  "config": {
                    "additionalProperties": {},
                    "default": {},
                    "type": "object"
                  },
                  "name": {
                    "description": "The display name for the connector.",
                    "type": "string"
                  },
                  "secrets": {
                    "additionalProperties": {},
                    "default": {},
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "actionTypeId"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "config": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "connector_type_id": {
                      "description": "The connector type identifier.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The identifier for the connector.",
                      "type": "string"
                    },
                    "is_deprecated": {
                      "description": "Indicates whether the connector is deprecated.",
                      "type": "boolean"
                    },
                    "is_missing_secrets": {
                      "description": "Indicates whether the connector is missing secrets.",
                      "type": "boolean"
                    },
                    "is_preconfigured": {
                      "description": "Indicates whether the connector is preconfigured. If true, the `config` and `is_missing_secrets` properties are omitted from the response. ",
                      "type": "boolean"
                    },
                    "is_system_action": {
                      "description": "Indicates whether the connector is used for system actions.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": " The name of the rule.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "connector_type_id",
                    "is_preconfigured",
                    "is_deprecated",
                    "is_system_action"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Create a connector",
        "tags": [
          "connectors"
        ]
      }
    },
    "/api/actions/action/{id}": {
      "delete": {
        "deprecated": true,
        "description": "WARNING: When you delete a connector, it cannot be recovered.",
        "operationId": "delete-actions-action-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Delete a connector",
        "tags": [
          "connectors"
        ]
      },
      "get": {
        "deprecated": true,
        "operationId": "get-actions-action-id",
        "parameters": [
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "config": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "connector_type_id": {
                      "description": "The connector type identifier.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The identifier for the connector.",
                      "type": "string"
                    },
                    "is_deprecated": {
                      "description": "Indicates whether the connector is deprecated.",
                      "type": "boolean"
                    },
                    "is_missing_secrets": {
                      "description": "Indicates whether the connector is missing secrets.",
                      "type": "boolean"
                    },
                    "is_preconfigured": {
                      "description": "Indicates whether the connector is preconfigured. If true, the `config` and `is_missing_secrets` properties are omitted from the response. ",
                      "type": "boolean"
                    },
                    "is_system_action": {
                      "description": "Indicates whether the connector is used for system actions.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": " The name of the rule.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "connector_type_id",
                    "is_preconfigured",
                    "is_deprecated",
                    "is_system_action"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Get connector information",
        "tags": [
          "connectors"
        ]
      },
      "put": {
        "deprecated": true,
        "operationId": "put-actions-action-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "config": {
                    "additionalProperties": {},
                    "default": {},
                    "type": "object"
                  },
                  "name": {
                    "type": "string"
                  },
                  "secrets": {
                    "additionalProperties": {},
                    "default": {},
                    "type": "object"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "config": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "connector_type_id": {
                      "description": "The connector type identifier.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The identifier for the connector.",
                      "type": "string"
                    },
                    "is_deprecated": {
                      "description": "Indicates whether the connector is deprecated.",
                      "type": "boolean"
                    },
                    "is_missing_secrets": {
                      "description": "Indicates whether the connector is missing secrets.",
                      "type": "boolean"
                    },
                    "is_preconfigured": {
                      "description": "Indicates whether the connector is preconfigured. If true, the `config` and `is_missing_secrets` properties are omitted from the response. ",
                      "type": "boolean"
                    },
                    "is_system_action": {
                      "description": "Indicates whether the connector is used for system actions.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": " The name of the rule.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "connector_type_id",
                    "is_preconfigured",
                    "is_deprecated",
                    "is_system_action"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Update a connector",
        "tags": [
          "connectors"
        ]
      }
    },
    "/api/actions/action/{id}/_execute": {
      "post": {
        "deprecated": true,
        "operationId": "post-actions-action-id-execute",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "params": {
                    "additionalProperties": {},
                    "type": "object"
                  }
                },
                "required": [
                  "params"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "config": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "connector_type_id": {
                      "description": "The connector type identifier.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The identifier for the connector.",
                      "type": "string"
                    },
                    "is_deprecated": {
                      "description": "Indicates whether the connector is deprecated.",
                      "type": "boolean"
                    },
                    "is_missing_secrets": {
                      "description": "Indicates whether the connector is missing secrets.",
                      "type": "boolean"
                    },
                    "is_preconfigured": {
                      "description": "Indicates whether the connector is preconfigured. If true, the `config` and `is_missing_secrets` properties are omitted from the response. ",
                      "type": "boolean"
                    },
                    "is_system_action": {
                      "description": "Indicates whether the connector is used for system actions.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": " The name of the rule.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "connector_type_id",
                    "is_preconfigured",
                    "is_deprecated",
                    "is_system_action"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Run a connector",
        "tags": [
          "connectors"
        ]
      }
    },
    "/api/actions/connector/{id}": {
      "delete": {
        "description": "WARNING: When you delete a connector, it cannot be recovered.",
        "operationId": "delete-actions-connector-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Delete a connector",
        "tags": [
          "connectors"
        ]
      },
      "get": {
        "operationId": "get-actions-connector-id",
        "parameters": [
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "config": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "connector_type_id": {
                      "description": "The connector type identifier.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The identifier for the connector.",
                      "type": "string"
                    },
                    "is_deprecated": {
                      "description": "Indicates whether the connector is deprecated.",
                      "type": "boolean"
                    },
                    "is_missing_secrets": {
                      "description": "Indicates whether the connector is missing secrets.",
                      "type": "boolean"
                    },
                    "is_preconfigured": {
                      "description": "Indicates whether the connector is preconfigured. If true, the `config` and `is_missing_secrets` properties are omitted from the response. ",
                      "type": "boolean"
                    },
                    "is_system_action": {
                      "description": "Indicates whether the connector is used for system actions.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": " The name of the rule.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "connector_type_id",
                    "is_preconfigured",
                    "is_deprecated",
                    "is_system_action"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Get connector information",
        "tags": [
          "connectors"
        ]
      },
      "post": {
        "operationId": "post-actions-connector-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "config": {
                    "additionalProperties": {},
                    "default": {},
                    "type": "object"
                  },
                  "connector_type_id": {
                    "description": "The type of connector.",
                    "type": "string"
                  },
                  "name": {
                    "description": "The display name for the connector.",
                    "type": "string"
                  },
                  "secrets": {
                    "additionalProperties": {},
                    "default": {},
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "connector_type_id"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "config": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "connector_type_id": {
                      "description": "The connector type identifier.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The identifier for the connector.",
                      "type": "string"
                    },
                    "is_deprecated": {
                      "description": "Indicates whether the connector is deprecated.",
                      "type": "boolean"
                    },
                    "is_missing_secrets": {
                      "description": "Indicates whether the connector is missing secrets.",
                      "type": "boolean"
                    },
                    "is_preconfigured": {
                      "description": "Indicates whether the connector is preconfigured. If true, the `config` and `is_missing_secrets` properties are omitted from the response. ",
                      "type": "boolean"
                    },
                    "is_system_action": {
                      "description": "Indicates whether the connector is used for system actions.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": " The name of the rule.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "connector_type_id",
                    "is_preconfigured",
                    "is_deprecated",
                    "is_system_action"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Create a connector",
        "tags": [
          "connectors"
        ]
      },
      "put": {
        "operationId": "put-actions-connector-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "config": {
                    "additionalProperties": {},
                    "default": {},
                    "type": "object"
                  },
                  "name": {
                    "description": "The display name for the connector.",
                    "type": "string"
                  },
                  "secrets": {
                    "additionalProperties": {},
                    "default": {},
                    "type": "object"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "config": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "connector_type_id": {
                      "description": "The connector type identifier.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The identifier for the connector.",
                      "type": "string"
                    },
                    "is_deprecated": {
                      "description": "Indicates whether the connector is deprecated.",
                      "type": "boolean"
                    },
                    "is_missing_secrets": {
                      "description": "Indicates whether the connector is missing secrets.",
                      "type": "boolean"
                    },
                    "is_preconfigured": {
                      "description": "Indicates whether the connector is preconfigured. If true, the `config` and `is_missing_secrets` properties are omitted from the response. ",
                      "type": "boolean"
                    },
                    "is_system_action": {
                      "description": "Indicates whether the connector is used for system actions.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": " The name of the rule.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "connector_type_id",
                    "is_preconfigured",
                    "is_deprecated",
                    "is_system_action"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Update a connector",
        "tags": [
          "connectors"
        ]
      }
    },
    "/api/actions/connector/{id}/_execute": {
      "post": {
        "description": "You can use this API to test an action that involves interaction with Kibana services or integrations with third-party systems.",
        "operationId": "post-actions-connector-id-execute",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "An identifier for the connector.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "params": {
                    "additionalProperties": {},
                    "type": "object"
                  }
                },
                "required": [
                  "params"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "config": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "connector_type_id": {
                      "description": "The connector type identifier.",
                      "type": "string"
                    },
                    "id": {
                      "description": "The identifier for the connector.",
                      "type": "string"
                    },
                    "is_deprecated": {
                      "description": "Indicates whether the connector is deprecated.",
                      "type": "boolean"
                    },
                    "is_missing_secrets": {
                      "description": "Indicates whether the connector is missing secrets.",
                      "type": "boolean"
                    },
                    "is_preconfigured": {
                      "description": "Indicates whether the connector is preconfigured. If true, the `config` and `is_missing_secrets` properties are omitted from the response. ",
                      "type": "boolean"
                    },
                    "is_system_action": {
                      "description": "Indicates whether the connector is used for system actions.",
                      "type": "boolean"
                    },
                    "name": {
                      "description": " The name of the rule.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "connector_type_id",
                    "is_preconfigured",
                    "is_deprecated",
                    "is_system_action"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          }
        },
        "summary": "Run a connector",
        "tags": [
          "connectors"
        ]
      }
    },
    "/api/actions/connector_types": {
      "get": {
        "description": "You do not need any Kibana feature privileges to run this API.",
        "operationId": "get-actions-connector-types",
        "parameters": [
          {
            "description": "A filter to limit the retrieved connector types to those that support a specific feature (such as alerting or cases).",
            "in": "query",
            "name": "feature_id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {},
        "summary": "Get connector types",
        "tags": [
          "connectors"
        ]
      }
    },
    "/api/actions/connectors": {
      "get": {
        "operationId": "get-actions-connectors",
        "parameters": [],
        "responses": {},
        "summary": "Get all connectors",
        "tags": [
          "connectors"
        ]
      }
    },
    "/api/actions/list_action_types": {
      "get": {
        "deprecated": true,
        "operationId": "get-actions-list-action-types",
        "parameters": [],
        "responses": {},
        "summary": "Get connector types",
        "tags": [
          "connectors"
        ]
      }
    },
    "/api/alerting/rule/{id}": {
      "delete": {
        "operationId": "delete-alerting-rule-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          },
          "400": {
            "description": "Indicates an invalid schema or parameters."
          },
          "403": {
            "description": "Indicates that this call is forbidden."
          },
          "404": {
            "description": "Indicates a rule with the given ID does not exist."
          }
        },
        "summary": "Delete a rule",
        "tags": [
          "alerting"
        ]
      },
      "get": {
        "operationId": "get-alerting-rule-id",
        "parameters": [
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "actions": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "alerts_filter": {
                            "additionalProperties": false,
                            "description": "Defines a period that limits whether the action runs.",
                            "properties": {
                              "query": {
                                "additionalProperties": false,
                                "properties": {
                                  "dsl": {
                                    "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL).",
                                    "type": "string"
                                  },
                                  "filters": {
                                    "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.",
                                    "items": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "$state": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "store": {
                                              "description": "A filter can be either specific to an application context or applied globally.",
                                              "enum": [
                                                "appState",
                                                "globalState"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "store"
                                          ],
                                          "type": "object"
                                        },
                                        "meta": {
                                          "additionalProperties": {},
                                          "type": "object"
                                        },
                                        "query": {
                                          "additionalProperties": {},
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "meta"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "kql": {
                                    "description": "A filter written in Kibana Query Language (KQL).",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "kql",
                                  "filters"
                                ],
                                "type": "object"
                              },
                              "timeframe": {
                                "additionalProperties": false,
                                "properties": {
                                  "days": {
                                    "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
                                    "items": {
                                      "enum": [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5,
                                        6,
                                        7
                                      ],
                                      "type": "integer"
                                    },
                                    "type": "array"
                                  },
                                  "hours": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "end": {
                                        "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
                                        "type": "string"
                                      },
                                      "start": {
                                        "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "start",
                                      "end"
                                    ],
                                    "type": "object"
                                  },
                                  "timezone": {
                                    "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "days",
                                  "hours",
                                  "timezone"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "connector_type_id": {
                            "description": "The type of connector. This property appears in responses but cannot be set in requests.",
                            "type": "string"
                          },
                          "frequency": {
                            "additionalProperties": false,
                            "properties": {
                              "notify_when": {
                                "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                                "enum": [
                                  "onActionGroupChange",
                                  "onActiveAlert",
                                  "onThrottleInterval"
                                ],
                                "type": "string"
                              },
                              "summary": {
                                "description": "Indicates whether the action is a summary.",
                                "type": "boolean"
                              },
                              "throttle": {
                                "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if 'notify_when' is set to 'onThrottleInterval'. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "summary",
                              "notify_when",
                              "throttle"
                            ],
                            "type": "object"
                          },
                          "group": {
                            "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The identifier for the connector saved object.",
                            "type": "string"
                          },
                          "params": {
                            "additionalProperties": {},
                            "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
                            "type": "object"
                          },
                          "use_alert_data_for_template": {
                            "description": "Indicates whether to use alert data as a template.",
                            "type": "boolean"
                          },
                          "uuid": {
                            "description": "A universally unique identifier (UUID) for the action.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "connector_type_id",
                          "params"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "active_snoozes": {
                      "items": {
                        "description": "List of active snoozes for the rule.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "alert_delay": {
                      "additionalProperties": false,
                      "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
                      "properties": {
                        "active": {
                          "description": "The number of consecutive runs that must meet the rule conditions.",
                          "type": "number"
                        }
                      },
                      "required": [
                        "active"
                      ],
                      "type": "object"
                    },
                    "api_key_created_by_user": {
                      "description": "Indicates whether the API key that is associated with the rule was created by the user.",
                      "nullable": true,
                      "type": "boolean"
                    },
                    "api_key_owner": {
                      "description": "The owner of the API key that is associated with the rule and used to run background tasks.",
                      "nullable": true,
                      "type": "string"
                    },
                    "consumer": {
                      "description": "The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.",
                      "type": "string"
                    },
                    "created_at": {
                      "description": "The date and time that the rule was created.",
                      "type": "string"
                    },
                    "created_by": {
                      "description": "The identifier for the user that created the rule.",
                      "nullable": true,
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
                      "type": "boolean"
                    },
                    "execution_status": {
                      "additionalProperties": false,
                      "properties": {
                        "error": {
                          "additionalProperties": false,
                          "properties": {
                            "message": {
                              "description": "Error message.",
                              "type": "string"
                            },
                            "reason": {
                              "description": "Reason for error.",
                              "enum": [
                                "read",
                                "decrypt",
                                "execute",
                                "unknown",
                                "license",
                                "timeout",
                                "disabled",
                                "validate"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "reason",
                            "message"
                          ],
                          "type": "object"
                        },
                        "last_duration": {
                          "description": "Duration of last execution of the rule.",
                          "type": "number"
                        },
                        "last_execution_date": {
                          "description": "The date and time when rule was executed last.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of rule execution.",
                          "enum": [
                            "ok",
                            "active",
                            "error",
                            "warning",
                            "pending",
                            "unknown"
                          ],
                          "type": "string"
                        },
                        "warning": {
                          "additionalProperties": false,
                          "properties": {
                            "message": {
                              "description": "Warning message.",
                              "type": "string"
                            },
                            "reason": {
                              "description": "Reason for warning.",
                              "enum": [
                                "maxExecutableActions",
                                "maxAlerts",
                                "maxQueuedActions",
                                "ruleExecution"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "reason",
                            "message"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "status",
                        "last_execution_date"
                      ],
                      "type": "object"
                    },
                    "flapping": {
                      "additionalProperties": false,
                      "description": "When flapping detection is turned on, alerts that switch quickly between active and recovered states are identified as “flapping” and notifications are reduced.",
                      "nullable": true,
                      "properties": {
                        "look_back_window": {
                          "description": "The minimum number of runs in which the threshold must be met.",
                          "maximum": 20,
                          "minimum": 2,
                          "type": "number"
                        },
                        "status_change_threshold": {
                          "description": "The minimum number of times an alert must switch states in the look back window.",
                          "maximum": 20,
                          "minimum": 2,
                          "type": "number"
                        }
                      },
                      "required": [
                        "look_back_window",
                        "status_change_threshold"
                      ],
                      "type": "object"
                    },
                    "id": {
                      "description": "The identifier for the rule.",
                      "type": "string"
                    },
                    "is_snoozed_until": {
                      "description": "The date when the rule will no longer be snoozed.",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_run": {
                      "additionalProperties": false,
                      "nullable": true,
                      "properties": {
                        "alerts_count": {
                          "additionalProperties": false,
                          "properties": {
                            "active": {
                              "description": "Number of active alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            },
                            "ignored": {
                              "description": "Number of ignored alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            },
                            "new": {
                              "description": "Number of new alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            },
                            "recovered": {
                              "description": "Number of recovered alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "outcome": {
                          "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
                          "enum": [
                            "succeeded",
                            "warning",
                            "failed"
                          ],
                          "type": "string"
                        },
                        "outcome_msg": {
                          "items": {
                            "description": "Outcome message generated during last rule run.",
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "outcome_order": {
                          "description": "Order of the outcome.",
                          "type": "number"
                        },
                        "warning": {
                          "description": "Warning of last rule execution.",
                          "enum": [
                            "read",
                            "decrypt",
                            "execute",
                            "unknown",
                            "license",
                            "timeout",
                            "disabled",
                            "validate",
                            "maxExecutableActions",
                            "maxAlerts",
                            "maxQueuedActions",
                            "ruleExecution"
                          ],
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "outcome",
                        "alerts_count"
                      ],
                      "type": "object"
                    },
                    "mapped_params": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "monitoring": {
                      "additionalProperties": false,
                      "description": "Monitoring details of the rule.",
                      "properties": {
                        "run": {
                          "additionalProperties": false,
                          "description": "Rule run details.",
                          "properties": {
                            "calculated_metrics": {
                              "additionalProperties": false,
                              "description": "Calculation of different percentiles and success ratio.",
                              "properties": {
                                "p50": {
                                  "type": "number"
                                },
                                "p95": {
                                  "type": "number"
                                },
                                "p99": {
                                  "type": "number"
                                },
                                "success_ratio": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "success_ratio"
                              ],
                              "type": "object"
                            },
                            "history": {
                              "description": "History of the rule run.",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "duration": {
                                    "description": "Duration of the rule run.",
                                    "type": "number"
                                  },
                                  "outcome": {
                                    "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
                                    "enum": [
                                      "succeeded",
                                      "warning",
                                      "failed"
                                    ],
                                    "type": "string"
                                  },
                                  "success": {
                                    "description": "Indicates whether the rule run was successful.",
                                    "type": "boolean"
                                  },
                                  "timestamp": {
                                    "description": "Time of rule run.",
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "success",
                                  "timestamp"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "last_run": {
                              "additionalProperties": false,
                              "properties": {
                                "metrics": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "duration": {
                                      "description": "Duration of most recent rule run.",
                                      "type": "number"
                                    },
                                    "gap_duration_s": {
                                      "description": "Duration in seconds of rule run gap.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_alerts_created": {
                                      "description": "Total number of alerts created during last rule run.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_alerts_detected": {
                                      "description": "Total number of alerts detected during last rule run.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_indexing_duration_ms": {
                                      "description": "Total time spent indexing documents during last rule run in milliseconds.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_search_duration_ms": {
                                      "description": "Total time spent performing Elasticsearch searches as measured by Kibana; includes network latency and time spent serializing or deserializing the request and response.",
                                      "nullable": true,
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                },
                                "timestamp": {
                                  "description": "Time of the most recent rule run.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "timestamp",
                                "metrics"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "history",
                            "calculated_metrics",
                            "last_run"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "run"
                      ],
                      "type": "object"
                    },
                    "mute_all": {
                      "description": "Indicates whether all alerts are muted.",
                      "type": "boolean"
                    },
                    "muted_alert_ids": {
                      "items": {
                        "description": "List of identifiers of muted alerts. ",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": " The name of the rule.",
                      "type": "string"
                    },
                    "next_run": {
                      "description": "Date and time of the next run of the rule.",
                      "nullable": true,
                      "type": "string"
                    },
                    "notify_when": {
                      "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                      "enum": [
                        "onActionGroupChange",
                        "onActiveAlert",
                        "onThrottleInterval"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "params": {
                      "additionalProperties": {},
                      "description": "The parameters for the rule.",
                      "type": "object"
                    },
                    "revision": {
                      "description": "The rule revision number.",
                      "type": "number"
                    },
                    "rule_type_id": {
                      "description": "The rule type identifier.",
                      "type": "string"
                    },
                    "running": {
                      "description": "Indicates whether the rule is running.",
                      "nullable": true,
                      "type": "boolean"
                    },
                    "schedule": {
                      "additionalProperties": false,
                      "properties": {
                        "interval": {
                          "description": "The interval is specified in seconds, minutes, hours, or days.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "type": "object"
                    },
                    "scheduled_task_id": {
                      "description": "Identifier of the scheduled task.",
                      "type": "string"
                    },
                    "snooze_schedule": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "duration": {
                            "description": "Duration of the rule snooze schedule.",
                            "type": "number"
                          },
                          "id": {
                            "description": "Identifier of the rule snooze schedule.",
                            "type": "string"
                          },
                          "rRule": {
                            "additionalProperties": false,
                            "properties": {
                              "byhour": {
                                "items": {
                                  "description": "Indicates hours of the day to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byminute": {
                                "items": {
                                  "description": "Indicates minutes of the hour to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bymonth": {
                                "items": {
                                  "description": "Indicates months of the year that this rule should recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bymonthday": {
                                "items": {
                                  "description": "Indicates the days of the month to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bysecond": {
                                "items": {
                                  "description": "Indicates seconds of the day to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bysetpos": {
                                "items": {
                                  "description": "A positive or negative integer affecting the nth day of the month. For example, -2 combined with `byweekday` of FR is 2nd to last Friday of the month. It is recommended to not set this manually and just use `byweekday`.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byweekday": {
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ],
                                  "description": "Indicates the days of the week to recur or else nth-day-of-month strings. For example, \"+2TU\" second Tuesday of month, \"-1FR\" last Friday of the month, which are internally converted to a `byweekday/bysetpos` combination."
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byweekno": {
                                "items": {
                                  "description": "Indicates number of the week hours to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byyearday": {
                                "items": {
                                  "description": "Indicates the days of the year that this rule should recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "count": {
                                "description": "Number of times the rule should recur until it stops.",
                                "type": "number"
                              },
                              "dtstart": {
                                "description": "Rule start date in Coordinated Universal Time (UTC).",
                                "type": "string"
                              },
                              "freq": {
                                "description": "Indicates frequency of the rule. Options are YEARLY, MONTHLY, WEEKLY, DAILY.",
                                "enum": [
                                  0,
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6
                                ],
                                "type": "integer"
                              },
                              "interval": {
                                "description": "Indicates the interval of frequency. For example, 1 and YEARLY is every 1 year, 2 and WEEKLY is every 2 weeks.",
                                "type": "number"
                              },
                              "tzid": {
                                "description": "Indicates timezone abbreviation.",
                                "type": "string"
                              },
                              "until": {
                                "description": "Recur the rule until this date.",
                                "type": "string"
                              },
                              "wkst": {
                                "description": "Indicates the start of week, defaults to Monday.",
                                "enum": [
                                  "MO",
                                  "TU",
                                  "WE",
                                  "TH",
                                  "FR",
                                  "SA",
                                  "SU"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "dtstart",
                              "tzid"
                            ],
                            "type": "object"
                          },
                          "skipRecurrences": {
                            "items": {
                              "description": "Skips recurrence of rule on this date.",
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "duration",
                          "rRule"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "tags": {
                      "items": {
                        "description": "The tags for the rule.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "throttle": {
                      "deprecated": true,
                      "description": "Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                      "nullable": true,
                      "type": "string"
                    },
                    "updated_at": {
                      "description": "The date and time that the rule was updated most recently.",
                      "type": "string"
                    },
                    "updated_by": {
                      "description": "The identifier for the user that updated this rule most recently.",
                      "nullable": true,
                      "type": "string"
                    },
                    "view_in_app_relative_url": {
                      "description": "Relative URL to view rule in the app.",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "enabled",
                    "name",
                    "tags",
                    "rule_type_id",
                    "consumer",
                    "schedule",
                    "actions",
                    "params",
                    "created_by",
                    "updated_by",
                    "created_at",
                    "updated_at",
                    "api_key_owner",
                    "mute_all",
                    "muted_alert_ids",
                    "execution_status",
                    "revision"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "400": {
            "description": "Indicates an invalid schema or parameters."
          },
          "403": {
            "description": "Indicates that this call is forbidden."
          },
          "404": {
            "description": "Indicates a rule with the given ID does not exist."
          }
        },
        "summary": "Get rule details",
        "tags": [
          "alerting"
        ]
      },
      "post": {
        "operationId": "post-alerting-rule-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule. If it is omitted, an ID is randomly generated.",
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "actions": {
                    "default": [],
                    "items": {
                      "additionalProperties": false,
                      "description": "An action that runs under defined conditions.",
                      "properties": {
                        "alerts_filter": {
                          "additionalProperties": false,
                          "description": "Conditions that affect whether the action runs. If you specify multiple conditions, all conditions must be met for the action to run. For example, if an alert occurs within the specified time frame and matches the query, the action runs.",
                          "properties": {
                            "query": {
                              "additionalProperties": false,
                              "properties": {
                                "dsl": {
                                  "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL).",
                                  "type": "string"
                                },
                                "filters": {
                                  "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "$state": {
                                        "additionalProperties": false,
                                        "properties": {
                                          "store": {
                                            "description": "A filter can be either specific to an application context or applied globally.",
                                            "enum": [
                                              "appState",
                                              "globalState"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "store"
                                        ],
                                        "type": "object"
                                      },
                                      "meta": {
                                        "additionalProperties": {},
                                        "type": "object"
                                      },
                                      "query": {
                                        "additionalProperties": {},
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "meta"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "kql": {
                                  "description": "A filter written in Kibana Query Language (KQL).",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kql",
                                "filters"
                              ],
                              "type": "object"
                            },
                            "timeframe": {
                              "additionalProperties": false,
                              "description": "Defines a period that limits whether the action runs.",
                              "properties": {
                                "days": {
                                  "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
                                  "items": {
                                    "enum": [
                                      1,
                                      2,
                                      3,
                                      4,
                                      5,
                                      6,
                                      7
                                    ],
                                    "type": "integer"
                                  },
                                  "type": "array"
                                },
                                "hours": {
                                  "additionalProperties": false,
                                  "description": "Defines the range of time in a day that the action can run. If the `start` value is `00:00` and the `end` value is `24:00`, actions be generated all day.",
                                  "properties": {
                                    "end": {
                                      "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
                                      "type": "string"
                                    },
                                    "start": {
                                      "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "start",
                                    "end"
                                  ],
                                  "type": "object"
                                },
                                "timezone": {
                                  "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "days",
                                "hours",
                                "timezone"
                              ],
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "frequency": {
                          "additionalProperties": false,
                          "properties": {
                            "notify_when": {
                              "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                              "enum": [
                                "onActionGroupChange",
                                "onActiveAlert",
                                "onThrottleInterval"
                              ],
                              "type": "string"
                            },
                            "summary": {
                              "description": "Indicates whether the action is a summary.",
                              "type": "boolean"
                            },
                            "throttle": {
                              "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if `notify_when` is set to `onThrottleInterval`. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "summary",
                            "notify_when",
                            "throttle"
                          ],
                          "type": "object"
                        },
                        "group": {
                          "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The identifier for the connector saved object.",
                          "type": "string"
                        },
                        "params": {
                          "additionalProperties": {},
                          "default": {},
                          "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
                          "type": "object"
                        },
                        "use_alert_data_for_template": {
                          "description": "Indicates whether to use alert data as a template.",
                          "type": "boolean"
                        },
                        "uuid": {
                          "description": "A universally unique identifier (UUID) for the action.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "alert_delay": {
                    "additionalProperties": false,
                    "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
                    "properties": {
                      "active": {
                        "description": "The number of consecutive runs that must meet the rule conditions.",
                        "type": "number"
                      }
                    },
                    "required": [
                      "active"
                    ],
                    "type": "object"
                  },
                  "consumer": {
                    "description": "The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.",
                    "type": "string"
                  },
                  "enabled": {
                    "default": true,
                    "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
                    "type": "boolean"
                  },
                  "flapping": {
                    "additionalProperties": false,
                    "description": "When flapping detection is turned on, alerts that switch quickly between active and recovered states are identified as “flapping” and notifications are reduced.",
                    "nullable": true,
                    "properties": {
                      "look_back_window": {
                        "description": "The minimum number of runs in which the threshold must be met.",
                        "maximum": 20,
                        "minimum": 2,
                        "type": "number"
                      },
                      "status_change_threshold": {
                        "description": "The minimum number of times an alert must switch states in the look back window.",
                        "maximum": 20,
                        "minimum": 2,
                        "type": "number"
                      }
                    },
                    "required": [
                      "look_back_window",
                      "status_change_threshold"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "description": "The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.",
                    "type": "string"
                  },
                  "notify_when": {
                    "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                    "enum": [
                      "onActionGroupChange",
                      "onActiveAlert",
                      "onThrottleInterval"
                    ],
                    "nullable": true,
                    "type": "string"
                  },
                  "params": {
                    "additionalProperties": {},
                    "default": {},
                    "description": "The parameters for the rule.",
                    "type": "object"
                  },
                  "rule_type_id": {
                    "description": "The rule type identifier.",
                    "type": "string"
                  },
                  "schedule": {
                    "additionalProperties": false,
                    "description": "The check interval, which specifies how frequently the rule conditions are checked.",
                    "properties": {
                      "interval": {
                        "description": "The interval is specified in seconds, minutes, hours, or days.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "interval"
                    ],
                    "type": "object"
                  },
                  "tags": {
                    "default": [],
                    "description": "The tags for the rule.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "throttle": {
                    "description": "Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "rule_type_id",
                  "consumer",
                  "schedule"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "actions": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "alerts_filter": {
                            "additionalProperties": false,
                            "description": "Defines a period that limits whether the action runs.",
                            "properties": {
                              "query": {
                                "additionalProperties": false,
                                "properties": {
                                  "dsl": {
                                    "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL).",
                                    "type": "string"
                                  },
                                  "filters": {
                                    "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.",
                                    "items": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "$state": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "store": {
                                              "description": "A filter can be either specific to an application context or applied globally.",
                                              "enum": [
                                                "appState",
                                                "globalState"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "store"
                                          ],
                                          "type": "object"
                                        },
                                        "meta": {
                                          "additionalProperties": {},
                                          "type": "object"
                                        },
                                        "query": {
                                          "additionalProperties": {},
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "meta"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "kql": {
                                    "description": "A filter written in Kibana Query Language (KQL).",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "kql",
                                  "filters"
                                ],
                                "type": "object"
                              },
                              "timeframe": {
                                "additionalProperties": false,
                                "properties": {
                                  "days": {
                                    "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
                                    "items": {
                                      "enum": [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5,
                                        6,
                                        7
                                      ],
                                      "type": "integer"
                                    },
                                    "type": "array"
                                  },
                                  "hours": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "end": {
                                        "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
                                        "type": "string"
                                      },
                                      "start": {
                                        "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "start",
                                      "end"
                                    ],
                                    "type": "object"
                                  },
                                  "timezone": {
                                    "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "days",
                                  "hours",
                                  "timezone"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "connector_type_id": {
                            "description": "The type of connector. This property appears in responses but cannot be set in requests.",
                            "type": "string"
                          },
                          "frequency": {
                            "additionalProperties": false,
                            "properties": {
                              "notify_when": {
                                "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                                "enum": [
                                  "onActionGroupChange",
                                  "onActiveAlert",
                                  "onThrottleInterval"
                                ],
                                "type": "string"
                              },
                              "summary": {
                                "description": "Indicates whether the action is a summary.",
                                "type": "boolean"
                              },
                              "throttle": {
                                "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if 'notify_when' is set to 'onThrottleInterval'. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "summary",
                              "notify_when",
                              "throttle"
                            ],
                            "type": "object"
                          },
                          "group": {
                            "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The identifier for the connector saved object.",
                            "type": "string"
                          },
                          "params": {
                            "additionalProperties": {},
                            "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
                            "type": "object"
                          },
                          "use_alert_data_for_template": {
                            "description": "Indicates whether to use alert data as a template.",
                            "type": "boolean"
                          },
                          "uuid": {
                            "description": "A universally unique identifier (UUID) for the action.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "connector_type_id",
                          "params"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "active_snoozes": {
                      "items": {
                        "description": "List of active snoozes for the rule.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "alert_delay": {
                      "additionalProperties": false,
                      "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
                      "properties": {
                        "active": {
                          "description": "The number of consecutive runs that must meet the rule conditions.",
                          "type": "number"
                        }
                      },
                      "required": [
                        "active"
                      ],
                      "type": "object"
                    },
                    "api_key_created_by_user": {
                      "description": "Indicates whether the API key that is associated with the rule was created by the user.",
                      "nullable": true,
                      "type": "boolean"
                    },
                    "api_key_owner": {
                      "description": "The owner of the API key that is associated with the rule and used to run background tasks.",
                      "nullable": true,
                      "type": "string"
                    },
                    "consumer": {
                      "description": "The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.",
                      "type": "string"
                    },
                    "created_at": {
                      "description": "The date and time that the rule was created.",
                      "type": "string"
                    },
                    "created_by": {
                      "description": "The identifier for the user that created the rule.",
                      "nullable": true,
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
                      "type": "boolean"
                    },
                    "execution_status": {
                      "additionalProperties": false,
                      "properties": {
                        "error": {
                          "additionalProperties": false,
                          "properties": {
                            "message": {
                              "description": "Error message.",
                              "type": "string"
                            },
                            "reason": {
                              "description": "Reason for error.",
                              "enum": [
                                "read",
                                "decrypt",
                                "execute",
                                "unknown",
                                "license",
                                "timeout",
                                "disabled",
                                "validate"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "reason",
                            "message"
                          ],
                          "type": "object"
                        },
                        "last_duration": {
                          "description": "Duration of last execution of the rule.",
                          "type": "number"
                        },
                        "last_execution_date": {
                          "description": "The date and time when rule was executed last.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of rule execution.",
                          "enum": [
                            "ok",
                            "active",
                            "error",
                            "warning",
                            "pending",
                            "unknown"
                          ],
                          "type": "string"
                        },
                        "warning": {
                          "additionalProperties": false,
                          "properties": {
                            "message": {
                              "description": "Warning message.",
                              "type": "string"
                            },
                            "reason": {
                              "description": "Reason for warning.",
                              "enum": [
                                "maxExecutableActions",
                                "maxAlerts",
                                "maxQueuedActions",
                                "ruleExecution"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "reason",
                            "message"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "status",
                        "last_execution_date"
                      ],
                      "type": "object"
                    },
                    "flapping": {
                      "additionalProperties": false,
                      "description": "When flapping detection is turned on, alerts that switch quickly between active and recovered states are identified as “flapping” and notifications are reduced.",
                      "nullable": true,
                      "properties": {
                        "look_back_window": {
                          "description": "The minimum number of runs in which the threshold must be met.",
                          "maximum": 20,
                          "minimum": 2,
                          "type": "number"
                        },
                        "status_change_threshold": {
                          "description": "The minimum number of times an alert must switch states in the look back window.",
                          "maximum": 20,
                          "minimum": 2,
                          "type": "number"
                        }
                      },
                      "required": [
                        "look_back_window",
                        "status_change_threshold"
                      ],
                      "type": "object"
                    },
                    "id": {
                      "description": "The identifier for the rule.",
                      "type": "string"
                    },
                    "is_snoozed_until": {
                      "description": "The date when the rule will no longer be snoozed.",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_run": {
                      "additionalProperties": false,
                      "nullable": true,
                      "properties": {
                        "alerts_count": {
                          "additionalProperties": false,
                          "properties": {
                            "active": {
                              "description": "Number of active alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            },
                            "ignored": {
                              "description": "Number of ignored alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            },
                            "new": {
                              "description": "Number of new alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            },
                            "recovered": {
                              "description": "Number of recovered alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "outcome": {
                          "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
                          "enum": [
                            "succeeded",
                            "warning",
                            "failed"
                          ],
                          "type": "string"
                        },
                        "outcome_msg": {
                          "items": {
                            "description": "Outcome message generated during last rule run.",
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "outcome_order": {
                          "description": "Order of the outcome.",
                          "type": "number"
                        },
                        "warning": {
                          "description": "Warning of last rule execution.",
                          "enum": [
                            "read",
                            "decrypt",
                            "execute",
                            "unknown",
                            "license",
                            "timeout",
                            "disabled",
                            "validate",
                            "maxExecutableActions",
                            "maxAlerts",
                            "maxQueuedActions",
                            "ruleExecution"
                          ],
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "outcome",
                        "alerts_count"
                      ],
                      "type": "object"
                    },
                    "mapped_params": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "monitoring": {
                      "additionalProperties": false,
                      "description": "Monitoring details of the rule.",
                      "properties": {
                        "run": {
                          "additionalProperties": false,
                          "description": "Rule run details.",
                          "properties": {
                            "calculated_metrics": {
                              "additionalProperties": false,
                              "description": "Calculation of different percentiles and success ratio.",
                              "properties": {
                                "p50": {
                                  "type": "number"
                                },
                                "p95": {
                                  "type": "number"
                                },
                                "p99": {
                                  "type": "number"
                                },
                                "success_ratio": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "success_ratio"
                              ],
                              "type": "object"
                            },
                            "history": {
                              "description": "History of the rule run.",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "duration": {
                                    "description": "Duration of the rule run.",
                                    "type": "number"
                                  },
                                  "outcome": {
                                    "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
                                    "enum": [
                                      "succeeded",
                                      "warning",
                                      "failed"
                                    ],
                                    "type": "string"
                                  },
                                  "success": {
                                    "description": "Indicates whether the rule run was successful.",
                                    "type": "boolean"
                                  },
                                  "timestamp": {
                                    "description": "Time of rule run.",
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "success",
                                  "timestamp"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "last_run": {
                              "additionalProperties": false,
                              "properties": {
                                "metrics": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "duration": {
                                      "description": "Duration of most recent rule run.",
                                      "type": "number"
                                    },
                                    "gap_duration_s": {
                                      "description": "Duration in seconds of rule run gap.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_alerts_created": {
                                      "description": "Total number of alerts created during last rule run.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_alerts_detected": {
                                      "description": "Total number of alerts detected during last rule run.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_indexing_duration_ms": {
                                      "description": "Total time spent indexing documents during last rule run in milliseconds.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_search_duration_ms": {
                                      "description": "Total time spent performing Elasticsearch searches as measured by Kibana; includes network latency and time spent serializing or deserializing the request and response.",
                                      "nullable": true,
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                },
                                "timestamp": {
                                  "description": "Time of the most recent rule run.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "timestamp",
                                "metrics"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "history",
                            "calculated_metrics",
                            "last_run"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "run"
                      ],
                      "type": "object"
                    },
                    "mute_all": {
                      "description": "Indicates whether all alerts are muted.",
                      "type": "boolean"
                    },
                    "muted_alert_ids": {
                      "items": {
                        "description": "List of identifiers of muted alerts. ",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": " The name of the rule.",
                      "type": "string"
                    },
                    "next_run": {
                      "description": "Date and time of the next run of the rule.",
                      "nullable": true,
                      "type": "string"
                    },
                    "notify_when": {
                      "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                      "enum": [
                        "onActionGroupChange",
                        "onActiveAlert",
                        "onThrottleInterval"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "params": {
                      "additionalProperties": {},
                      "description": "The parameters for the rule.",
                      "type": "object"
                    },
                    "revision": {
                      "description": "The rule revision number.",
                      "type": "number"
                    },
                    "rule_type_id": {
                      "description": "The rule type identifier.",
                      "type": "string"
                    },
                    "running": {
                      "description": "Indicates whether the rule is running.",
                      "nullable": true,
                      "type": "boolean"
                    },
                    "schedule": {
                      "additionalProperties": false,
                      "properties": {
                        "interval": {
                          "description": "The interval is specified in seconds, minutes, hours, or days.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "type": "object"
                    },
                    "scheduled_task_id": {
                      "description": "Identifier of the scheduled task.",
                      "type": "string"
                    },
                    "snooze_schedule": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "duration": {
                            "description": "Duration of the rule snooze schedule.",
                            "type": "number"
                          },
                          "id": {
                            "description": "Identifier of the rule snooze schedule.",
                            "type": "string"
                          },
                          "rRule": {
                            "additionalProperties": false,
                            "properties": {
                              "byhour": {
                                "items": {
                                  "description": "Indicates hours of the day to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byminute": {
                                "items": {
                                  "description": "Indicates minutes of the hour to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bymonth": {
                                "items": {
                                  "description": "Indicates months of the year that this rule should recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bymonthday": {
                                "items": {
                                  "description": "Indicates the days of the month to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bysecond": {
                                "items": {
                                  "description": "Indicates seconds of the day to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bysetpos": {
                                "items": {
                                  "description": "A positive or negative integer affecting the nth day of the month. For example, -2 combined with `byweekday` of FR is 2nd to last Friday of the month. It is recommended to not set this manually and just use `byweekday`.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byweekday": {
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ],
                                  "description": "Indicates the days of the week to recur or else nth-day-of-month strings. For example, \"+2TU\" second Tuesday of month, \"-1FR\" last Friday of the month, which are internally converted to a `byweekday/bysetpos` combination."
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byweekno": {
                                "items": {
                                  "description": "Indicates number of the week hours to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byyearday": {
                                "items": {
                                  "description": "Indicates the days of the year that this rule should recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "count": {
                                "description": "Number of times the rule should recur until it stops.",
                                "type": "number"
                              },
                              "dtstart": {
                                "description": "Rule start date in Coordinated Universal Time (UTC).",
                                "type": "string"
                              },
                              "freq": {
                                "description": "Indicates frequency of the rule. Options are YEARLY, MONTHLY, WEEKLY, DAILY.",
                                "enum": [
                                  0,
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6
                                ],
                                "type": "integer"
                              },
                              "interval": {
                                "description": "Indicates the interval of frequency. For example, 1 and YEARLY is every 1 year, 2 and WEEKLY is every 2 weeks.",
                                "type": "number"
                              },
                              "tzid": {
                                "description": "Indicates timezone abbreviation.",
                                "type": "string"
                              },
                              "until": {
                                "description": "Recur the rule until this date.",
                                "type": "string"
                              },
                              "wkst": {
                                "description": "Indicates the start of week, defaults to Monday.",
                                "enum": [
                                  "MO",
                                  "TU",
                                  "WE",
                                  "TH",
                                  "FR",
                                  "SA",
                                  "SU"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "dtstart",
                              "tzid"
                            ],
                            "type": "object"
                          },
                          "skipRecurrences": {
                            "items": {
                              "description": "Skips recurrence of rule on this date.",
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "duration",
                          "rRule"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "tags": {
                      "items": {
                        "description": "The tags for the rule.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "throttle": {
                      "deprecated": true,
                      "description": "Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                      "nullable": true,
                      "type": "string"
                    },
                    "updated_at": {
                      "description": "The date and time that the rule was updated most recently.",
                      "type": "string"
                    },
                    "updated_by": {
                      "description": "The identifier for the user that updated this rule most recently.",
                      "nullable": true,
                      "type": "string"
                    },
                    "view_in_app_relative_url": {
                      "description": "Relative URL to view rule in the app.",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "enabled",
                    "name",
                    "tags",
                    "rule_type_id",
                    "consumer",
                    "schedule",
                    "actions",
                    "params",
                    "created_by",
                    "updated_by",
                    "created_at",
                    "updated_at",
                    "api_key_owner",
                    "mute_all",
                    "muted_alert_ids",
                    "execution_status",
                    "revision"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "400": {
            "description": "Indicates an invalid schema or parameters."
          },
          "403": {
            "description": "Indicates that this call is forbidden."
          },
          "409": {
            "description": "Indicates that the rule id is already in use."
          }
        },
        "summary": "Create a rule",
        "tags": [
          "alerting"
        ]
      },
      "put": {
        "operationId": "put-alerting-rule-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "actions": {
                    "default": [],
                    "items": {
                      "additionalProperties": false,
                      "description": "An action that runs under defined conditions.",
                      "properties": {
                        "alerts_filter": {
                          "additionalProperties": false,
                          "properties": {
                            "query": {
                              "additionalProperties": false,
                              "properties": {
                                "dsl": {
                                  "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL).",
                                  "type": "string"
                                },
                                "filters": {
                                  "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.",
                                  "items": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "$state": {
                                        "additionalProperties": false,
                                        "properties": {
                                          "store": {
                                            "description": "A filter can be either specific to an application context or applied globally.",
                                            "enum": [
                                              "appState",
                                              "globalState"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "store"
                                        ],
                                        "type": "object"
                                      },
                                      "meta": {
                                        "additionalProperties": {},
                                        "type": "object"
                                      },
                                      "query": {
                                        "additionalProperties": {},
                                        "type": "object"
                                      }
                                    },
                                    "required": [
                                      "meta"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "kql": {
                                  "description": "A filter written in Kibana Query Language (KQL).",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kql",
                                "filters"
                              ],
                              "type": "object"
                            },
                            "timeframe": {
                              "additionalProperties": false,
                              "description": "Defines a period that limits whether the action runs.",
                              "properties": {
                                "days": {
                                  "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
                                  "items": {
                                    "enum": [
                                      1,
                                      2,
                                      3,
                                      4,
                                      5,
                                      6,
                                      7
                                    ],
                                    "type": "integer"
                                  },
                                  "type": "array"
                                },
                                "hours": {
                                  "additionalProperties": false,
                                  "description": "Defines the range of time in a day that the action can run. If the `start` value is `00:00` and the `end` value is `24:00`, actions be generated all day.",
                                  "properties": {
                                    "end": {
                                      "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
                                      "type": "string"
                                    },
                                    "start": {
                                      "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "start",
                                    "end"
                                  ],
                                  "type": "object"
                                },
                                "timezone": {
                                  "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "days",
                                "hours",
                                "timezone"
                              ],
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "frequency": {
                          "additionalProperties": false,
                          "properties": {
                            "notify_when": {
                              "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                              "enum": [
                                "onActionGroupChange",
                                "onActiveAlert",
                                "onThrottleInterval"
                              ],
                              "type": "string"
                            },
                            "summary": {
                              "description": "Indicates whether the action is a summary.",
                              "type": "boolean"
                            },
                            "throttle": {
                              "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if `notify_when` is set to `onThrottleInterval`. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                              "nullable": true,
                              "type": "string"
                            }
                          },
                          "required": [
                            "summary",
                            "notify_when",
                            "throttle"
                          ],
                          "type": "object"
                        },
                        "group": {
                          "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.",
                          "type": "string"
                        },
                        "id": {
                          "description": "The identifier for the connector saved object.",
                          "type": "string"
                        },
                        "params": {
                          "additionalProperties": {},
                          "default": {},
                          "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
                          "type": "object"
                        },
                        "use_alert_data_for_template": {
                          "description": "Indicates whether to use alert data as a template.",
                          "type": "boolean"
                        },
                        "uuid": {
                          "description": "A universally unique identifier (UUID) for the action.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "alert_delay": {
                    "additionalProperties": false,
                    "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
                    "properties": {
                      "active": {
                        "description": "The number of consecutive runs that must meet the rule conditions.",
                        "type": "number"
                      }
                    },
                    "required": [
                      "active"
                    ],
                    "type": "object"
                  },
                  "flapping": {
                    "additionalProperties": false,
                    "description": "When flapping detection is turned on, alerts that switch quickly between active and recovered states are identified as “flapping” and notifications are reduced.",
                    "nullable": true,
                    "properties": {
                      "look_back_window": {
                        "description": "The minimum number of runs in which the threshold must be met.",
                        "maximum": 20,
                        "minimum": 2,
                        "type": "number"
                      },
                      "status_change_threshold": {
                        "description": "The minimum number of times an alert must switch states in the look back window.",
                        "maximum": 20,
                        "minimum": 2,
                        "type": "number"
                      }
                    },
                    "required": [
                      "look_back_window",
                      "status_change_threshold"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "description": "The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.",
                    "type": "string"
                  },
                  "notify_when": {
                    "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                    "enum": [
                      "onActionGroupChange",
                      "onActiveAlert",
                      "onThrottleInterval"
                    ],
                    "nullable": true,
                    "type": "string"
                  },
                  "params": {
                    "additionalProperties": {},
                    "default": {},
                    "description": "The parameters for the rule.",
                    "type": "object"
                  },
                  "schedule": {
                    "additionalProperties": false,
                    "properties": {
                      "interval": {
                        "description": "The interval is specified in seconds, minutes, hours, or days.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "interval"
                    ],
                    "type": "object"
                  },
                  "tags": {
                    "default": [],
                    "items": {
                      "description": "The tags for the rule.",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "throttle": {
                    "description": "Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                    "nullable": true,
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "schedule"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "actions": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "alerts_filter": {
                            "additionalProperties": false,
                            "description": "Defines a period that limits whether the action runs.",
                            "properties": {
                              "query": {
                                "additionalProperties": false,
                                "properties": {
                                  "dsl": {
                                    "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL).",
                                    "type": "string"
                                  },
                                  "filters": {
                                    "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.",
                                    "items": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "$state": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "store": {
                                              "description": "A filter can be either specific to an application context or applied globally.",
                                              "enum": [
                                                "appState",
                                                "globalState"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "store"
                                          ],
                                          "type": "object"
                                        },
                                        "meta": {
                                          "additionalProperties": {},
                                          "type": "object"
                                        },
                                        "query": {
                                          "additionalProperties": {},
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "meta"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "kql": {
                                    "description": "A filter written in Kibana Query Language (KQL).",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "kql",
                                  "filters"
                                ],
                                "type": "object"
                              },
                              "timeframe": {
                                "additionalProperties": false,
                                "properties": {
                                  "days": {
                                    "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
                                    "items": {
                                      "enum": [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5,
                                        6,
                                        7
                                      ],
                                      "type": "integer"
                                    },
                                    "type": "array"
                                  },
                                  "hours": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "end": {
                                        "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
                                        "type": "string"
                                      },
                                      "start": {
                                        "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "start",
                                      "end"
                                    ],
                                    "type": "object"
                                  },
                                  "timezone": {
                                    "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "days",
                                  "hours",
                                  "timezone"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "connector_type_id": {
                            "description": "The type of connector. This property appears in responses but cannot be set in requests.",
                            "type": "string"
                          },
                          "frequency": {
                            "additionalProperties": false,
                            "properties": {
                              "notify_when": {
                                "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                                "enum": [
                                  "onActionGroupChange",
                                  "onActiveAlert",
                                  "onThrottleInterval"
                                ],
                                "type": "string"
                              },
                              "summary": {
                                "description": "Indicates whether the action is a summary.",
                                "type": "boolean"
                              },
                              "throttle": {
                                "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if 'notify_when' is set to 'onThrottleInterval'. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "summary",
                              "notify_when",
                              "throttle"
                            ],
                            "type": "object"
                          },
                          "group": {
                            "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The identifier for the connector saved object.",
                            "type": "string"
                          },
                          "params": {
                            "additionalProperties": {},
                            "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
                            "type": "object"
                          },
                          "use_alert_data_for_template": {
                            "description": "Indicates whether to use alert data as a template.",
                            "type": "boolean"
                          },
                          "uuid": {
                            "description": "A universally unique identifier (UUID) for the action.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "connector_type_id",
                          "params"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "active_snoozes": {
                      "items": {
                        "description": "List of active snoozes for the rule.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "alert_delay": {
                      "additionalProperties": false,
                      "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
                      "properties": {
                        "active": {
                          "description": "The number of consecutive runs that must meet the rule conditions.",
                          "type": "number"
                        }
                      },
                      "required": [
                        "active"
                      ],
                      "type": "object"
                    },
                    "api_key_created_by_user": {
                      "description": "Indicates whether the API key that is associated with the rule was created by the user.",
                      "nullable": true,
                      "type": "boolean"
                    },
                    "api_key_owner": {
                      "description": "The owner of the API key that is associated with the rule and used to run background tasks.",
                      "nullable": true,
                      "type": "string"
                    },
                    "consumer": {
                      "description": "The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.",
                      "type": "string"
                    },
                    "created_at": {
                      "description": "The date and time that the rule was created.",
                      "type": "string"
                    },
                    "created_by": {
                      "description": "The identifier for the user that created the rule.",
                      "nullable": true,
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
                      "type": "boolean"
                    },
                    "execution_status": {
                      "additionalProperties": false,
                      "properties": {
                        "error": {
                          "additionalProperties": false,
                          "properties": {
                            "message": {
                              "description": "Error message.",
                              "type": "string"
                            },
                            "reason": {
                              "description": "Reason for error.",
                              "enum": [
                                "read",
                                "decrypt",
                                "execute",
                                "unknown",
                                "license",
                                "timeout",
                                "disabled",
                                "validate"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "reason",
                            "message"
                          ],
                          "type": "object"
                        },
                        "last_duration": {
                          "description": "Duration of last execution of the rule.",
                          "type": "number"
                        },
                        "last_execution_date": {
                          "description": "The date and time when rule was executed last.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of rule execution.",
                          "enum": [
                            "ok",
                            "active",
                            "error",
                            "warning",
                            "pending",
                            "unknown"
                          ],
                          "type": "string"
                        },
                        "warning": {
                          "additionalProperties": false,
                          "properties": {
                            "message": {
                              "description": "Warning message.",
                              "type": "string"
                            },
                            "reason": {
                              "description": "Reason for warning.",
                              "enum": [
                                "maxExecutableActions",
                                "maxAlerts",
                                "maxQueuedActions",
                                "ruleExecution"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "reason",
                            "message"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "status",
                        "last_execution_date"
                      ],
                      "type": "object"
                    },
                    "flapping": {
                      "additionalProperties": false,
                      "description": "When flapping detection is turned on, alerts that switch quickly between active and recovered states are identified as “flapping” and notifications are reduced.",
                      "nullable": true,
                      "properties": {
                        "look_back_window": {
                          "description": "The minimum number of runs in which the threshold must be met.",
                          "maximum": 20,
                          "minimum": 2,
                          "type": "number"
                        },
                        "status_change_threshold": {
                          "description": "The minimum number of times an alert must switch states in the look back window.",
                          "maximum": 20,
                          "minimum": 2,
                          "type": "number"
                        }
                      },
                      "required": [
                        "look_back_window",
                        "status_change_threshold"
                      ],
                      "type": "object"
                    },
                    "id": {
                      "description": "The identifier for the rule.",
                      "type": "string"
                    },
                    "is_snoozed_until": {
                      "description": "The date when the rule will no longer be snoozed.",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_run": {
                      "additionalProperties": false,
                      "nullable": true,
                      "properties": {
                        "alerts_count": {
                          "additionalProperties": false,
                          "properties": {
                            "active": {
                              "description": "Number of active alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            },
                            "ignored": {
                              "description": "Number of ignored alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            },
                            "new": {
                              "description": "Number of new alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            },
                            "recovered": {
                              "description": "Number of recovered alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "outcome": {
                          "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
                          "enum": [
                            "succeeded",
                            "warning",
                            "failed"
                          ],
                          "type": "string"
                        },
                        "outcome_msg": {
                          "items": {
                            "description": "Outcome message generated during last rule run.",
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "outcome_order": {
                          "description": "Order of the outcome.",
                          "type": "number"
                        },
                        "warning": {
                          "description": "Warning of last rule execution.",
                          "enum": [
                            "read",
                            "decrypt",
                            "execute",
                            "unknown",
                            "license",
                            "timeout",
                            "disabled",
                            "validate",
                            "maxExecutableActions",
                            "maxAlerts",
                            "maxQueuedActions",
                            "ruleExecution"
                          ],
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "outcome",
                        "alerts_count"
                      ],
                      "type": "object"
                    },
                    "mapped_params": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "monitoring": {
                      "additionalProperties": false,
                      "description": "Monitoring details of the rule.",
                      "properties": {
                        "run": {
                          "additionalProperties": false,
                          "description": "Rule run details.",
                          "properties": {
                            "calculated_metrics": {
                              "additionalProperties": false,
                              "description": "Calculation of different percentiles and success ratio.",
                              "properties": {
                                "p50": {
                                  "type": "number"
                                },
                                "p95": {
                                  "type": "number"
                                },
                                "p99": {
                                  "type": "number"
                                },
                                "success_ratio": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "success_ratio"
                              ],
                              "type": "object"
                            },
                            "history": {
                              "description": "History of the rule run.",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "duration": {
                                    "description": "Duration of the rule run.",
                                    "type": "number"
                                  },
                                  "outcome": {
                                    "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
                                    "enum": [
                                      "succeeded",
                                      "warning",
                                      "failed"
                                    ],
                                    "type": "string"
                                  },
                                  "success": {
                                    "description": "Indicates whether the rule run was successful.",
                                    "type": "boolean"
                                  },
                                  "timestamp": {
                                    "description": "Time of rule run.",
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "success",
                                  "timestamp"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "last_run": {
                              "additionalProperties": false,
                              "properties": {
                                "metrics": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "duration": {
                                      "description": "Duration of most recent rule run.",
                                      "type": "number"
                                    },
                                    "gap_duration_s": {
                                      "description": "Duration in seconds of rule run gap.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_alerts_created": {
                                      "description": "Total number of alerts created during last rule run.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_alerts_detected": {
                                      "description": "Total number of alerts detected during last rule run.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_indexing_duration_ms": {
                                      "description": "Total time spent indexing documents during last rule run in milliseconds.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_search_duration_ms": {
                                      "description": "Total time spent performing Elasticsearch searches as measured by Kibana; includes network latency and time spent serializing or deserializing the request and response.",
                                      "nullable": true,
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                },
                                "timestamp": {
                                  "description": "Time of the most recent rule run.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "timestamp",
                                "metrics"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "history",
                            "calculated_metrics",
                            "last_run"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "run"
                      ],
                      "type": "object"
                    },
                    "mute_all": {
                      "description": "Indicates whether all alerts are muted.",
                      "type": "boolean"
                    },
                    "muted_alert_ids": {
                      "items": {
                        "description": "List of identifiers of muted alerts. ",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": " The name of the rule.",
                      "type": "string"
                    },
                    "next_run": {
                      "description": "Date and time of the next run of the rule.",
                      "nullable": true,
                      "type": "string"
                    },
                    "notify_when": {
                      "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                      "enum": [
                        "onActionGroupChange",
                        "onActiveAlert",
                        "onThrottleInterval"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "params": {
                      "additionalProperties": {},
                      "description": "The parameters for the rule.",
                      "type": "object"
                    },
                    "revision": {
                      "description": "The rule revision number.",
                      "type": "number"
                    },
                    "rule_type_id": {
                      "description": "The rule type identifier.",
                      "type": "string"
                    },
                    "running": {
                      "description": "Indicates whether the rule is running.",
                      "nullable": true,
                      "type": "boolean"
                    },
                    "schedule": {
                      "additionalProperties": false,
                      "properties": {
                        "interval": {
                          "description": "The interval is specified in seconds, minutes, hours, or days.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "type": "object"
                    },
                    "scheduled_task_id": {
                      "description": "Identifier of the scheduled task.",
                      "type": "string"
                    },
                    "snooze_schedule": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "duration": {
                            "description": "Duration of the rule snooze schedule.",
                            "type": "number"
                          },
                          "id": {
                            "description": "Identifier of the rule snooze schedule.",
                            "type": "string"
                          },
                          "rRule": {
                            "additionalProperties": false,
                            "properties": {
                              "byhour": {
                                "items": {
                                  "description": "Indicates hours of the day to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byminute": {
                                "items": {
                                  "description": "Indicates minutes of the hour to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bymonth": {
                                "items": {
                                  "description": "Indicates months of the year that this rule should recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bymonthday": {
                                "items": {
                                  "description": "Indicates the days of the month to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bysecond": {
                                "items": {
                                  "description": "Indicates seconds of the day to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bysetpos": {
                                "items": {
                                  "description": "A positive or negative integer affecting the nth day of the month. For example, -2 combined with `byweekday` of FR is 2nd to last Friday of the month. It is recommended to not set this manually and just use `byweekday`.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byweekday": {
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ],
                                  "description": "Indicates the days of the week to recur or else nth-day-of-month strings. For example, \"+2TU\" second Tuesday of month, \"-1FR\" last Friday of the month, which are internally converted to a `byweekday/bysetpos` combination."
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byweekno": {
                                "items": {
                                  "description": "Indicates number of the week hours to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byyearday": {
                                "items": {
                                  "description": "Indicates the days of the year that this rule should recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "count": {
                                "description": "Number of times the rule should recur until it stops.",
                                "type": "number"
                              },
                              "dtstart": {
                                "description": "Rule start date in Coordinated Universal Time (UTC).",
                                "type": "string"
                              },
                              "freq": {
                                "description": "Indicates frequency of the rule. Options are YEARLY, MONTHLY, WEEKLY, DAILY.",
                                "enum": [
                                  0,
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6
                                ],
                                "type": "integer"
                              },
                              "interval": {
                                "description": "Indicates the interval of frequency. For example, 1 and YEARLY is every 1 year, 2 and WEEKLY is every 2 weeks.",
                                "type": "number"
                              },
                              "tzid": {
                                "description": "Indicates timezone abbreviation.",
                                "type": "string"
                              },
                              "until": {
                                "description": "Recur the rule until this date.",
                                "type": "string"
                              },
                              "wkst": {
                                "description": "Indicates the start of week, defaults to Monday.",
                                "enum": [
                                  "MO",
                                  "TU",
                                  "WE",
                                  "TH",
                                  "FR",
                                  "SA",
                                  "SU"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "dtstart",
                              "tzid"
                            ],
                            "type": "object"
                          },
                          "skipRecurrences": {
                            "items": {
                              "description": "Skips recurrence of rule on this date.",
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "duration",
                          "rRule"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "tags": {
                      "items": {
                        "description": "The tags for the rule.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "throttle": {
                      "deprecated": true,
                      "description": "Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                      "nullable": true,
                      "type": "string"
                    },
                    "updated_at": {
                      "description": "The date and time that the rule was updated most recently.",
                      "type": "string"
                    },
                    "updated_by": {
                      "description": "The identifier for the user that updated this rule most recently.",
                      "nullable": true,
                      "type": "string"
                    },
                    "view_in_app_relative_url": {
                      "description": "Relative URL to view rule in the app.",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "enabled",
                    "name",
                    "tags",
                    "rule_type_id",
                    "consumer",
                    "schedule",
                    "actions",
                    "params",
                    "created_by",
                    "updated_by",
                    "created_at",
                    "updated_at",
                    "api_key_owner",
                    "mute_all",
                    "muted_alert_ids",
                    "execution_status",
                    "revision"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "400": {
            "description": "Indicates an invalid schema or parameters."
          },
          "403": {
            "description": "Indicates that this call is forbidden."
          },
          "404": {
            "description": "Indicates a rule with the given ID does not exist."
          },
          "409": {
            "description": "Indicates that the rule has already been updated by another user."
          }
        },
        "summary": "Update a rule",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/alerting/rule/{id}/_disable": {
      "post": {
        "operationId": "post-alerting-rule-id-disable",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "nullable": true,
                "properties": {
                  "untrack": {
                    "description": "Defines whether this rule's alerts should be untracked.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "x-oas-optional": true
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          },
          "400": {
            "description": "Indicates an invalid schema."
          },
          "403": {
            "description": "Indicates that this call is forbidden."
          },
          "404": {
            "description": "Indicates a rule with the given ID does not exist."
          }
        },
        "summary": "Disable a rule",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/alerting/rule/{id}/_enable": {
      "post": {
        "operationId": "post-alerting-rule-id-enable",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          },
          "400": {
            "description": "Indicates an invalid schema or parameters."
          },
          "403": {
            "description": "Indicates that this call is forbidden."
          },
          "404": {
            "description": "Indicates a rule with the given ID does not exist."
          }
        },
        "summary": "Enable a rule",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/alerting/rule/{id}/_mute_all": {
      "post": {
        "operationId": "post-alerting-rule-id-mute-all",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          },
          "400": {
            "description": "Indicates an invalid schema or parameters."
          },
          "403": {
            "description": "Indicates that this call is forbidden."
          },
          "404": {
            "description": "Indicates a rule with the given ID does not exist."
          }
        },
        "summary": "Mute all alerts",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/alerting/rule/{id}/_unmute_all": {
      "post": {
        "operationId": "post-alerting-rule-id-unmute-all",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          },
          "400": {
            "description": "Indicates an invalid schema or parameters."
          },
          "403": {
            "description": "Indicates that this call is forbidden."
          },
          "404": {
            "description": "Indicates a rule with the given ID does not exist."
          }
        },
        "summary": "Unmute all alerts",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/alerting/rule/{id}/_update_api_key": {
      "post": {
        "operationId": "post-alerting-rule-id-update-api-key",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          },
          "400": {
            "description": "Indicates an invalid schema or parameters."
          },
          "403": {
            "description": "Indicates that this call is forbidden."
          },
          "404": {
            "description": "Indicates a rule with the given ID does not exist."
          },
          "409": {
            "description": "Indicates that the rule has already been updated by another user."
          }
        },
        "summary": "Update the API key for a rule",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/alerting/rule/{rule_id}/alert/{alert_id}/_mute": {
      "post": {
        "operationId": "post-alerting-rule-rule-id-alert-alert-id-mute",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "rule_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier for the alert.",
            "in": "path",
            "name": "alert_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          },
          "400": {
            "description": "Indicates an invalid schema or parameters."
          },
          "403": {
            "description": "Indicates that this call is forbidden."
          },
          "404": {
            "description": "Indicates a rule or alert with the given ID does not exist."
          }
        },
        "summary": "Mute an alert",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/alerting/rule/{rule_id}/alert/{alert_id}/_unmute": {
      "post": {
        "operationId": "post-alerting-rule-rule-id-alert-alert-id-unmute",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The identifier for the rule.",
            "in": "path",
            "name": "rule_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The identifier for the alert.",
            "in": "path",
            "name": "alert_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          },
          "400": {
            "description": "Indicates an invalid schema or parameters."
          },
          "403": {
            "description": "Indicates that this call is forbidden."
          },
          "404": {
            "description": "Indicates a rule or alert with the given ID does not exist."
          }
        },
        "summary": "Unmute an alert",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/alerting/rules/_find": {
      "get": {
        "operationId": "get-alerting-rules-find",
        "parameters": [
          {
            "description": "The number of rules to return per page.",
            "in": "query",
            "name": "per_page",
            "required": false,
            "schema": {
              "default": 10,
              "minimum": 0,
              "type": "number"
            }
          },
          {
            "description": "The page number to return.",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "description": "An Elasticsearch simple_query_string query that filters the objects in the response.",
            "in": "query",
            "name": "search",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The default operator to use for the simple_query_string.",
            "in": "query",
            "name": "default_search_operator",
            "required": false,
            "schema": {
              "default": "OR",
              "enum": [
                "OR",
                "AND"
              ],
              "type": "string"
            }
          },
          {
            "description": "The fields to perform the simple_query_string parsed query against.",
            "in": "query",
            "name": "search_fields",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "string"
                }
              ]
            }
          },
          {
            "description": "Determines which field is used to sort the results. The field must exist in the `attributes` key of the response.",
            "in": "query",
            "name": "sort_field",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Determines the sort order.",
            "in": "query",
            "name": "sort_order",
            "required": false,
            "schema": {
              "enum": [
                "asc",
                "desc"
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters the rules that have a relation with the reference objects with a specific type and identifier.",
            "in": "query",
            "name": "has_reference",
            "required": false,
            "schema": {
              "additionalProperties": false,
              "nullable": true,
              "properties": {
                "id": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              },
              "required": [
                "type",
                "id"
              ],
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "fields",
            "required": false,
            "schema": {
              "items": {
                "description": "The fields to return in the `attributes` key of the response.",
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "A KQL string that you filter with an attribute from your saved object. It should look like `savedObjectType.attributes.title: \"myTitle\"`. However, if you used a direct attribute of a saved object, such as `updatedAt`, you must define your filter, for example, `savedObjectType.updatedAt > 2018-12-22`.",
            "in": "query",
            "name": "filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter_consumers",
            "required": false,
            "schema": {
              "items": {
                "description": "List of consumers to filter.",
                "type": "string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "actions": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "alerts_filter": {
                            "additionalProperties": false,
                            "description": "Defines a period that limits whether the action runs.",
                            "properties": {
                              "query": {
                                "additionalProperties": false,
                                "properties": {
                                  "dsl": {
                                    "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL).",
                                    "type": "string"
                                  },
                                  "filters": {
                                    "description": "A filter written in Elasticsearch Query Domain Specific Language (DSL) as defined in the `kbn-es-query` package.",
                                    "items": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "$state": {
                                          "additionalProperties": false,
                                          "properties": {
                                            "store": {
                                              "description": "A filter can be either specific to an application context or applied globally.",
                                              "enum": [
                                                "appState",
                                                "globalState"
                                              ],
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "store"
                                          ],
                                          "type": "object"
                                        },
                                        "meta": {
                                          "additionalProperties": {},
                                          "type": "object"
                                        },
                                        "query": {
                                          "additionalProperties": {},
                                          "type": "object"
                                        }
                                      },
                                      "required": [
                                        "meta"
                                      ],
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "kql": {
                                    "description": "A filter written in Kibana Query Language (KQL).",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "kql",
                                  "filters"
                                ],
                                "type": "object"
                              },
                              "timeframe": {
                                "additionalProperties": false,
                                "properties": {
                                  "days": {
                                    "description": "Defines the days of the week that the action can run, represented as an array of numbers. For example, `1` represents Monday. An empty array is equivalent to specifying all the days of the week.",
                                    "items": {
                                      "enum": [
                                        1,
                                        2,
                                        3,
                                        4,
                                        5,
                                        6,
                                        7
                                      ],
                                      "type": "integer"
                                    },
                                    "type": "array"
                                  },
                                  "hours": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "end": {
                                        "description": "The end of the time frame in 24-hour notation (`hh:mm`).",
                                        "type": "string"
                                      },
                                      "start": {
                                        "description": "The start of the time frame in 24-hour notation (`hh:mm`).",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "start",
                                      "end"
                                    ],
                                    "type": "object"
                                  },
                                  "timezone": {
                                    "description": "The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "days",
                                  "hours",
                                  "timezone"
                                ],
                                "type": "object"
                              }
                            },
                            "type": "object"
                          },
                          "connector_type_id": {
                            "description": "The type of connector. This property appears in responses but cannot be set in requests.",
                            "type": "string"
                          },
                          "frequency": {
                            "additionalProperties": false,
                            "properties": {
                              "notify_when": {
                                "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                                "enum": [
                                  "onActionGroupChange",
                                  "onActiveAlert",
                                  "onThrottleInterval"
                                ],
                                "type": "string"
                              },
                              "summary": {
                                "description": "Indicates whether the action is a summary.",
                                "type": "boolean"
                              },
                              "throttle": {
                                "description": "The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if 'notify_when' is set to 'onThrottleInterval'. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                                "nullable": true,
                                "type": "string"
                              }
                            },
                            "required": [
                              "summary",
                              "notify_when",
                              "throttle"
                            ],
                            "type": "object"
                          },
                          "group": {
                            "description": "The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The identifier for the connector saved object.",
                            "type": "string"
                          },
                          "params": {
                            "additionalProperties": {},
                            "description": "The parameters for the action, which are sent to the connector. The `params` are handled as Mustache templates and passed a default set of context.",
                            "type": "object"
                          },
                          "use_alert_data_for_template": {
                            "description": "Indicates whether to use alert data as a template.",
                            "type": "boolean"
                          },
                          "uuid": {
                            "description": "A universally unique identifier (UUID) for the action.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "connector_type_id",
                          "params"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "active_snoozes": {
                      "items": {
                        "description": "List of active snoozes for the rule.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "alert_delay": {
                      "additionalProperties": false,
                      "description": "Indicates that an alert occurs only when the specified number of consecutive runs met the rule conditions.",
                      "properties": {
                        "active": {
                          "description": "The number of consecutive runs that must meet the rule conditions.",
                          "type": "number"
                        }
                      },
                      "required": [
                        "active"
                      ],
                      "type": "object"
                    },
                    "api_key_created_by_user": {
                      "description": "Indicates whether the API key that is associated with the rule was created by the user.",
                      "nullable": true,
                      "type": "boolean"
                    },
                    "api_key_owner": {
                      "description": "The owner of the API key that is associated with the rule and used to run background tasks.",
                      "nullable": true,
                      "type": "string"
                    },
                    "consumer": {
                      "description": "The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.",
                      "type": "string"
                    },
                    "created_at": {
                      "description": "The date and time that the rule was created.",
                      "type": "string"
                    },
                    "created_by": {
                      "description": "The identifier for the user that created the rule.",
                      "nullable": true,
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Indicates whether you want to run the rule on an interval basis after it is created.",
                      "type": "boolean"
                    },
                    "execution_status": {
                      "additionalProperties": false,
                      "properties": {
                        "error": {
                          "additionalProperties": false,
                          "properties": {
                            "message": {
                              "description": "Error message.",
                              "type": "string"
                            },
                            "reason": {
                              "description": "Reason for error.",
                              "enum": [
                                "read",
                                "decrypt",
                                "execute",
                                "unknown",
                                "license",
                                "timeout",
                                "disabled",
                                "validate"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "reason",
                            "message"
                          ],
                          "type": "object"
                        },
                        "last_duration": {
                          "description": "Duration of last execution of the rule.",
                          "type": "number"
                        },
                        "last_execution_date": {
                          "description": "The date and time when rule was executed last.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of rule execution.",
                          "enum": [
                            "ok",
                            "active",
                            "error",
                            "warning",
                            "pending",
                            "unknown"
                          ],
                          "type": "string"
                        },
                        "warning": {
                          "additionalProperties": false,
                          "properties": {
                            "message": {
                              "description": "Warning message.",
                              "type": "string"
                            },
                            "reason": {
                              "description": "Reason for warning.",
                              "enum": [
                                "maxExecutableActions",
                                "maxAlerts",
                                "maxQueuedActions",
                                "ruleExecution"
                              ],
                              "type": "string"
                            }
                          },
                          "required": [
                            "reason",
                            "message"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "status",
                        "last_execution_date"
                      ],
                      "type": "object"
                    },
                    "flapping": {
                      "additionalProperties": false,
                      "description": "When flapping detection is turned on, alerts that switch quickly between active and recovered states are identified as “flapping” and notifications are reduced.",
                      "nullable": true,
                      "properties": {
                        "look_back_window": {
                          "description": "The minimum number of runs in which the threshold must be met.",
                          "maximum": 20,
                          "minimum": 2,
                          "type": "number"
                        },
                        "status_change_threshold": {
                          "description": "The minimum number of times an alert must switch states in the look back window.",
                          "maximum": 20,
                          "minimum": 2,
                          "type": "number"
                        }
                      },
                      "required": [
                        "look_back_window",
                        "status_change_threshold"
                      ],
                      "type": "object"
                    },
                    "id": {
                      "description": "The identifier for the rule.",
                      "type": "string"
                    },
                    "is_snoozed_until": {
                      "description": "The date when the rule will no longer be snoozed.",
                      "nullable": true,
                      "type": "string"
                    },
                    "last_run": {
                      "additionalProperties": false,
                      "nullable": true,
                      "properties": {
                        "alerts_count": {
                          "additionalProperties": false,
                          "properties": {
                            "active": {
                              "description": "Number of active alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            },
                            "ignored": {
                              "description": "Number of ignored alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            },
                            "new": {
                              "description": "Number of new alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            },
                            "recovered": {
                              "description": "Number of recovered alerts during last run.",
                              "nullable": true,
                              "type": "number"
                            }
                          },
                          "type": "object"
                        },
                        "outcome": {
                          "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
                          "enum": [
                            "succeeded",
                            "warning",
                            "failed"
                          ],
                          "type": "string"
                        },
                        "outcome_msg": {
                          "items": {
                            "description": "Outcome message generated during last rule run.",
                            "type": "string"
                          },
                          "nullable": true,
                          "type": "array"
                        },
                        "outcome_order": {
                          "description": "Order of the outcome.",
                          "type": "number"
                        },
                        "warning": {
                          "description": "Warning of last rule execution.",
                          "enum": [
                            "read",
                            "decrypt",
                            "execute",
                            "unknown",
                            "license",
                            "timeout",
                            "disabled",
                            "validate",
                            "maxExecutableActions",
                            "maxAlerts",
                            "maxQueuedActions",
                            "ruleExecution"
                          ],
                          "nullable": true,
                          "type": "string"
                        }
                      },
                      "required": [
                        "outcome",
                        "alerts_count"
                      ],
                      "type": "object"
                    },
                    "mapped_params": {
                      "additionalProperties": {},
                      "type": "object"
                    },
                    "monitoring": {
                      "additionalProperties": false,
                      "description": "Monitoring details of the rule.",
                      "properties": {
                        "run": {
                          "additionalProperties": false,
                          "description": "Rule run details.",
                          "properties": {
                            "calculated_metrics": {
                              "additionalProperties": false,
                              "description": "Calculation of different percentiles and success ratio.",
                              "properties": {
                                "p50": {
                                  "type": "number"
                                },
                                "p95": {
                                  "type": "number"
                                },
                                "p99": {
                                  "type": "number"
                                },
                                "success_ratio": {
                                  "type": "number"
                                }
                              },
                              "required": [
                                "success_ratio"
                              ],
                              "type": "object"
                            },
                            "history": {
                              "description": "History of the rule run.",
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "duration": {
                                    "description": "Duration of the rule run.",
                                    "type": "number"
                                  },
                                  "outcome": {
                                    "description": "Outcome of last run of the rule. Value could be succeeded, warning or failed.",
                                    "enum": [
                                      "succeeded",
                                      "warning",
                                      "failed"
                                    ],
                                    "type": "string"
                                  },
                                  "success": {
                                    "description": "Indicates whether the rule run was successful.",
                                    "type": "boolean"
                                  },
                                  "timestamp": {
                                    "description": "Time of rule run.",
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "success",
                                  "timestamp"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "last_run": {
                              "additionalProperties": false,
                              "properties": {
                                "metrics": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "duration": {
                                      "description": "Duration of most recent rule run.",
                                      "type": "number"
                                    },
                                    "gap_duration_s": {
                                      "description": "Duration in seconds of rule run gap.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_alerts_created": {
                                      "description": "Total number of alerts created during last rule run.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_alerts_detected": {
                                      "description": "Total number of alerts detected during last rule run.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_indexing_duration_ms": {
                                      "description": "Total time spent indexing documents during last rule run in milliseconds.",
                                      "nullable": true,
                                      "type": "number"
                                    },
                                    "total_search_duration_ms": {
                                      "description": "Total time spent performing Elasticsearch searches as measured by Kibana; includes network latency and time spent serializing or deserializing the request and response.",
                                      "nullable": true,
                                      "type": "number"
                                    }
                                  },
                                  "type": "object"
                                },
                                "timestamp": {
                                  "description": "Time of the most recent rule run.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "timestamp",
                                "metrics"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "history",
                            "calculated_metrics",
                            "last_run"
                          ],
                          "type": "object"
                        }
                      },
                      "required": [
                        "run"
                      ],
                      "type": "object"
                    },
                    "mute_all": {
                      "description": "Indicates whether all alerts are muted.",
                      "type": "boolean"
                    },
                    "muted_alert_ids": {
                      "items": {
                        "description": "List of identifiers of muted alerts. ",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": " The name of the rule.",
                      "type": "string"
                    },
                    "next_run": {
                      "description": "Date and time of the next run of the rule.",
                      "nullable": true,
                      "type": "string"
                    },
                    "notify_when": {
                      "description": "Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                      "enum": [
                        "onActionGroupChange",
                        "onActiveAlert",
                        "onThrottleInterval"
                      ],
                      "nullable": true,
                      "type": "string"
                    },
                    "params": {
                      "additionalProperties": {},
                      "description": "The parameters for the rule.",
                      "type": "object"
                    },
                    "revision": {
                      "description": "The rule revision number.",
                      "type": "number"
                    },
                    "rule_type_id": {
                      "description": "The rule type identifier.",
                      "type": "string"
                    },
                    "running": {
                      "description": "Indicates whether the rule is running.",
                      "nullable": true,
                      "type": "boolean"
                    },
                    "schedule": {
                      "additionalProperties": false,
                      "properties": {
                        "interval": {
                          "description": "The interval is specified in seconds, minutes, hours, or days.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "interval"
                      ],
                      "type": "object"
                    },
                    "scheduled_task_id": {
                      "description": "Identifier of the scheduled task.",
                      "type": "string"
                    },
                    "snooze_schedule": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "duration": {
                            "description": "Duration of the rule snooze schedule.",
                            "type": "number"
                          },
                          "id": {
                            "description": "Identifier of the rule snooze schedule.",
                            "type": "string"
                          },
                          "rRule": {
                            "additionalProperties": false,
                            "properties": {
                              "byhour": {
                                "items": {
                                  "description": "Indicates hours of the day to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byminute": {
                                "items": {
                                  "description": "Indicates minutes of the hour to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bymonth": {
                                "items": {
                                  "description": "Indicates months of the year that this rule should recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bymonthday": {
                                "items": {
                                  "description": "Indicates the days of the month to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bysecond": {
                                "items": {
                                  "description": "Indicates seconds of the day to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "bysetpos": {
                                "items": {
                                  "description": "A positive or negative integer affecting the nth day of the month. For example, -2 combined with `byweekday` of FR is 2nd to last Friday of the month. It is recommended to not set this manually and just use `byweekday`.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byweekday": {
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ],
                                  "description": "Indicates the days of the week to recur or else nth-day-of-month strings. For example, \"+2TU\" second Tuesday of month, \"-1FR\" last Friday of the month, which are internally converted to a `byweekday/bysetpos` combination."
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byweekno": {
                                "items": {
                                  "description": "Indicates number of the week hours to recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "byyearday": {
                                "items": {
                                  "description": "Indicates the days of the year that this rule should recur.",
                                  "type": "number"
                                },
                                "nullable": true,
                                "type": "array"
                              },
                              "count": {
                                "description": "Number of times the rule should recur until it stops.",
                                "type": "number"
                              },
                              "dtstart": {
                                "description": "Rule start date in Coordinated Universal Time (UTC).",
                                "type": "string"
                              },
                              "freq": {
                                "description": "Indicates frequency of the rule. Options are YEARLY, MONTHLY, WEEKLY, DAILY.",
                                "enum": [
                                  0,
                                  1,
                                  2,
                                  3,
                                  4,
                                  5,
                                  6
                                ],
                                "type": "integer"
                              },
                              "interval": {
                                "description": "Indicates the interval of frequency. For example, 1 and YEARLY is every 1 year, 2 and WEEKLY is every 2 weeks.",
                                "type": "number"
                              },
                              "tzid": {
                                "description": "Indicates timezone abbreviation.",
                                "type": "string"
                              },
                              "until": {
                                "description": "Recur the rule until this date.",
                                "type": "string"
                              },
                              "wkst": {
                                "description": "Indicates the start of week, defaults to Monday.",
                                "enum": [
                                  "MO",
                                  "TU",
                                  "WE",
                                  "TH",
                                  "FR",
                                  "SA",
                                  "SU"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "dtstart",
                              "tzid"
                            ],
                            "type": "object"
                          },
                          "skipRecurrences": {
                            "items": {
                              "description": "Skips recurrence of rule on this date.",
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "required": [
                          "duration",
                          "rRule"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "tags": {
                      "items": {
                        "description": "The tags for the rule.",
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "throttle": {
                      "deprecated": true,
                      "description": "Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.",
                      "nullable": true,
                      "type": "string"
                    },
                    "updated_at": {
                      "description": "The date and time that the rule was updated most recently.",
                      "type": "string"
                    },
                    "updated_by": {
                      "description": "The identifier for the user that updated this rule most recently.",
                      "nullable": true,
                      "type": "string"
                    },
                    "view_in_app_relative_url": {
                      "description": "Relative URL to view rule in the app.",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "enabled",
                    "name",
                    "tags",
                    "rule_type_id",
                    "consumer",
                    "schedule",
                    "actions",
                    "params",
                    "created_by",
                    "updated_by",
                    "created_at",
                    "updated_at",
                    "api_key_owner",
                    "mute_all",
                    "muted_alert_ids",
                    "execution_status",
                    "revision"
                  ],
                  "type": "object"
                }
              }
            },
            "description": "Indicates a successful call."
          },
          "400": {
            "description": "Indicates an invalid schema or parameters."
          },
          "403": {
            "description": "Indicates that this call is forbidden."
          }
        },
        "summary": "Get information about rules",
        "tags": [
          "alerting"
        ]
      }
    },
    "/api/dashboards/dashboard": {
      "get": {
        "description": "This functionality is in technical preview and may be changed or removed in a future release. Elastic will work to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
        "operationId": "get-dashboards-dashboard",
        "parameters": [
          {
            "description": "The page number to return. Default is \"1\".",
            "in": "query",
            "name": "page",
            "required": false,
            "schema": {
              "default": 1,
              "minimum": 1,
              "type": "number"
            }
          },
          {
            "description": "The number of dashboards to display on each page (max 1000). Default is \"20\".",
            "in": "query",
            "name": "perPage",
            "required": false,
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "items": {
                      "items": {
                        "additionalProperties": true,
                        "properties": {
                          "attributes": {
                            "additionalProperties": false,
                            "properties": {
                              "description": {
                                "default": "",
                                "description": "A short description.",
                                "type": "string"
                              },
                              "timeRestore": {
                                "default": false,
                                "description": "Whether to restore time upon viewing this dashboard",
                                "type": "boolean"
                              },
                              "title": {
                                "description": "A human-readable title for the dashboard",
                                "type": "string"
                              }
                            },
                            "required": [
                              "title"
                            ],
                            "type": "object"
                          },
                          "createdAt": {
                            "type": "string"
                          },
                          "createdBy": {
                            "type": "string"
                          },
                          "error": {
                            "additionalProperties": false,
                            "properties": {
                              "error": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              },
                              "metadata": {
                                "additionalProperties": true,
                                "properties": {},
                                "type": "object"
                              },
                              "statusCode": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "error",
                              "message",
                              "statusCode"
                            ],
                            "type": "object"
                          },
                          "id": {
                            "type": "string"
                          },
                          "managed": {
                            "type": "boolean"
                          },
                          "namespaces": {
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "originId": {
                            "type": "string"
                          },
                          "references": {
                            "items": {
                              "additionalProperties": false,
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "type",
                                "id"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "type": {
                            "type": "string"
                          },
                          "updatedAt": {
                            "type": "string"
                          },
                          "updatedBy": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "type",
                          "attributes",
                          "references"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "total": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "items",
                    "total"
                  ],
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get a list of dashboards",
        "tags": [
          "Dashboards"
        ],
        "x-state": "Technical Preview"
      }
    },
    "/api/dashboards/dashboard/{id}": {
      "delete": {
        "description": "This functionality is in technical preview and may be changed or removed in a future release. Elastic will work to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
        "operationId": "delete-dashboards-dashboard-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "A unique identifier for the dashboard.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {},
        "summary": "Delete a dashboard",
        "tags": [
          "Dashboards"
        ],
        "x-state": "Technical Preview"
      },
      "get": {
        "description": "This functionality is in technical preview and may be changed or removed in a future release. Elastic will work to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
        "operationId": "get-dashboards-dashboard-id",
        "parameters": [
          {
            "description": "A unique identifier for the dashboard.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "item": {
                      "additionalProperties": true,
                      "properties": {
                        "attributes": {
                          "additionalProperties": false,
                          "properties": {
                            "controlGroupInput": {
                              "additionalProperties": false,
                              "properties": {
                                "autoApplySelections": {
                                  "default": true,
                                  "description": "Show apply selections button in controls.",
                                  "type": "boolean"
                                },
                                "chainingSystem": {
                                  "default": "HIERARCHICAL",
                                  "description": "The chaining strategy for multiple controls. For example, \"HIERARCHICAL\" or \"NONE\".",
                                  "enum": [
                                    "NONE",
                                    "HIERARCHICAL"
                                  ],
                                  "type": "string"
                                },
                                "controls": {
                                  "default": [],
                                  "description": "An array of control panels and their state in the control group.",
                                  "items": {
                                    "additionalProperties": true,
                                    "properties": {
                                      "controlConfig": {
                                        "additionalProperties": {},
                                        "type": "object"
                                      },
                                      "grow": {
                                        "default": false,
                                        "description": "Expand width of the control panel to fit available space.",
                                        "type": "boolean"
                                      },
                                      "id": {
                                        "description": "The unique ID of the control.",
                                        "type": "string"
                                      },
                                      "order": {
                                        "description": "The order of the control panel in the control group.",
                                        "type": "number"
                                      },
                                      "type": {
                                        "description": "The type of the control panel.",
                                        "type": "string"
                                      },
                                      "width": {
                                        "default": "medium",
                                        "description": "Minimum width of the control panel in the control group.",
                                        "enum": [
                                          "small",
                                          "medium",
                                          "large"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "order"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "enhancements": {
                                  "additionalProperties": {},
                                  "type": "object"
                                },
                                "ignoreParentSettings": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "ignoreFilters": {
                                      "default": false,
                                      "description": "Ignore global filters in controls.",
                                      "type": "boolean"
                                    },
                                    "ignoreQuery": {
                                      "default": false,
                                      "description": "Ignore the global query bar in controls.",
                                      "type": "boolean"
                                    },
                                    "ignoreTimerange": {
                                      "default": false,
                                      "description": "Ignore the global time range in controls.",
                                      "type": "boolean"
                                    },
                                    "ignoreValidations": {
                                      "default": false,
                                      "description": "Ignore validations in controls.",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "labelPosition": {
                                  "default": "oneLine",
                                  "description": "Position of the labels for controls. For example, \"oneLine\", \"twoLine\".",
                                  "enum": [
                                    "oneLine",
                                    "twoLine"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "ignoreParentSettings"
                              ],
                              "type": "object"
                            },
                            "description": {
                              "default": "",
                              "description": "A short description.",
                              "type": "string"
                            },
                            "kibanaSavedObjectMeta": {
                              "additionalProperties": false,
                              "default": {},
                              "description": "A container for various metadata",
                              "properties": {
                                "searchSource": {
                                  "additionalProperties": true,
                                  "properties": {
                                    "filter": {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "A filter for the search source.",
                                        "properties": {
                                          "$state": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "store": {
                                                "description": "Denote whether a filter is specific to an application's context (e.g. 'appState') or whether it should be applied globally (e.g. 'globalState').",
                                                "enum": [
                                                  "appState",
                                                  "globalState"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "store"
                                            ],
                                            "type": "object"
                                          },
                                          "meta": {
                                            "additionalProperties": true,
                                            "properties": {
                                              "alias": {
                                                "nullable": true,
                                                "type": "string"
                                              },
                                              "controlledBy": {
                                                "type": "string"
                                              },
                                              "disabled": {
                                                "type": "boolean"
                                              },
                                              "field": {
                                                "type": "string"
                                              },
                                              "group": {
                                                "type": "string"
                                              },
                                              "index": {
                                                "type": "string"
                                              },
                                              "isMultiIndex": {
                                                "type": "boolean"
                                              },
                                              "key": {
                                                "type": "string"
                                              },
                                              "negate": {
                                                "type": "boolean"
                                              },
                                              "params": {},
                                              "type": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "params"
                                            ],
                                            "type": "object"
                                          },
                                          "query": {
                                            "additionalProperties": {},
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "meta"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "query": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "language": {
                                          "description": "The query language such as KQL or Lucene.",
                                          "type": "string"
                                        },
                                        "query": {
                                          "anyOf": [
                                            {
                                              "description": "A text-based query such as Kibana Query Language (KQL) or Lucene query language.",
                                              "type": "string"
                                            },
                                            {
                                              "additionalProperties": {},
                                              "type": "object"
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "query",
                                        "language"
                                      ],
                                      "type": "object"
                                    },
                                    "sort": {
                                      "items": {
                                        "additionalProperties": {
                                          "anyOf": [
                                            {
                                              "enum": [
                                                "asc",
                                                "desc"
                                              ],
                                              "type": "string"
                                            },
                                            {
                                              "additionalProperties": false,
                                              "properties": {
                                                "format": {
                                                  "type": "string"
                                                },
                                                "order": {
                                                  "enum": [
                                                    "asc",
                                                    "desc"
                                                  ],
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "order"
                                              ],
                                              "type": "object"
                                            },
                                            {
                                              "additionalProperties": false,
                                              "properties": {
                                                "numeric_type": {
                                                  "enum": [
                                                    "double",
                                                    "long",
                                                    "date",
                                                    "date_nanos"
                                                  ],
                                                  "type": "string"
                                                },
                                                "order": {
                                                  "enum": [
                                                    "asc",
                                                    "desc"
                                                  ],
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "order"
                                              ],
                                              "type": "object"
                                            }
                                          ]
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "options": {
                              "additionalProperties": false,
                              "properties": {
                                "hidePanelTitles": {
                                  "default": false,
                                  "description": "Hide the panel titles in the dashboard.",
                                  "type": "boolean"
                                },
                                "syncColors": {
                                  "default": true,
                                  "description": "Synchronize colors between related panels in the dashboard.",
                                  "type": "boolean"
                                },
                                "syncCursor": {
                                  "default": true,
                                  "description": "Synchronize cursor position between related panels in the dashboard.",
                                  "type": "boolean"
                                },
                                "syncTooltips": {
                                  "default": true,
                                  "description": "Synchronize tooltips between related panels in the dashboard.",
                                  "type": "boolean"
                                },
                                "useMargins": {
                                  "default": true,
                                  "description": "Show margins between panels in the dashboard layout.",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "panels": {
                              "default": [],
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "gridData": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "h": {
                                        "default": 15,
                                        "description": "The height of the panel in grid units",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "i": {
                                        "type": "string"
                                      },
                                      "w": {
                                        "default": 24,
                                        "description": "The width of the panel in grid units",
                                        "maximum": 48,
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "x": {
                                        "description": "The x coordinate of the panel in grid units",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "The y coordinate of the panel in grid units",
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "x",
                                      "y",
                                      "i"
                                    ],
                                    "type": "object"
                                  },
                                  "id": {
                                    "description": "The saved object id for by reference panels",
                                    "type": "string"
                                  },
                                  "panelConfig": {
                                    "additionalProperties": true,
                                    "properties": {
                                      "description": {
                                        "description": "The description of the panel",
                                        "type": "string"
                                      },
                                      "enhancements": {
                                        "additionalProperties": {},
                                        "type": "object"
                                      },
                                      "hidePanelTitles": {
                                        "description": "Set to true to hide the panel title in its container.",
                                        "type": "boolean"
                                      },
                                      "savedObjectId": {
                                        "description": "The unique id of the library item to construct the embeddable.",
                                        "type": "string"
                                      },
                                      "title": {
                                        "description": "The title of the panel",
                                        "type": "string"
                                      },
                                      "version": {
                                        "description": "The version of the embeddable in the panel.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "panelIndex": {
                                    "type": "string"
                                  },
                                  "panelRefName": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "description": "The title of the panel",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The embeddable type",
                                    "type": "string"
                                  },
                                  "version": {
                                    "deprecated": true,
                                    "description": "The version was used to store Kibana version information from versions 7.3.0 -> 8.11.0. As of version 8.11.0, the versioning information is now per-embeddable-type and is stored on the embeddable's input. (panelConfig in this type).",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "panelConfig",
                                  "type",
                                  "gridData",
                                  "panelIndex"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "refreshInterval": {
                              "additionalProperties": false,
                              "description": "A container for various refresh interval settings",
                              "properties": {
                                "display": {
                                  "deprecated": true,
                                  "description": "A human-readable string indicating the refresh frequency. No longer used.",
                                  "type": "string"
                                },
                                "pause": {
                                  "description": "Whether the refresh interval is set to be paused while viewing the dashboard.",
                                  "type": "boolean"
                                },
                                "section": {
                                  "deprecated": true,
                                  "description": "No longer used.",
                                  "type": "number"
                                },
                                "value": {
                                  "description": "A numeric value indicating refresh frequency in milliseconds.",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "pause",
                                "value"
                              ],
                              "type": "object"
                            },
                            "timeFrom": {
                              "description": "An ISO string indicating when to restore time from",
                              "type": "string"
                            },
                            "timeRestore": {
                              "default": false,
                              "description": "Whether to restore time upon viewing this dashboard",
                              "type": "boolean"
                            },
                            "timeTo": {
                              "description": "An ISO string indicating when to restore time from",
                              "type": "string"
                            },
                            "title": {
                              "description": "A human-readable title for the dashboard",
                              "type": "string"
                            },
                            "version": {
                              "deprecated": true,
                              "type": "number"
                            }
                          },
                          "required": [
                            "title",
                            "options"
                          ],
                          "type": "object"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "createdBy": {
                          "type": "string"
                        },
                        "error": {
                          "additionalProperties": false,
                          "properties": {
                            "error": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "properties": {},
                              "type": "object"
                            },
                            "statusCode": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "error",
                            "message",
                            "statusCode"
                          ],
                          "type": "object"
                        },
                        "id": {
                          "type": "string"
                        },
                        "managed": {
                          "type": "boolean"
                        },
                        "namespaces": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "originId": {
                          "type": "string"
                        },
                        "references": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type",
                              "id"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "type": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "updatedBy": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "attributes",
                        "references"
                      ],
                      "type": "object"
                    },
                    "meta": {
                      "additionalProperties": false,
                      "properties": {
                        "aliasPurpose": {
                          "enum": [
                            "savedObjectConversion",
                            "savedObjectImport"
                          ],
                          "type": "string"
                        },
                        "aliasTargetId": {
                          "type": "string"
                        },
                        "outcome": {
                          "enum": [
                            "exactMatch",
                            "aliasMatch",
                            "conflict"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "outcome"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "item",
                    "meta"
                  ],
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get a dashboard",
        "tags": [
          "Dashboards"
        ],
        "x-state": "Technical Preview"
      },
      "post": {
        "description": "This functionality is in technical preview and may be changed or removed in a future release. Elastic will work to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
        "operationId": "post-dashboards-dashboard-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "A unique identifier for the dashboard.",
            "in": "path",
            "name": "id",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "attributes": {
                    "additionalProperties": false,
                    "properties": {
                      "controlGroupInput": {
                        "additionalProperties": false,
                        "properties": {
                          "autoApplySelections": {
                            "default": true,
                            "description": "Show apply selections button in controls.",
                            "type": "boolean"
                          },
                          "chainingSystem": {
                            "default": "HIERARCHICAL",
                            "description": "The chaining strategy for multiple controls. For example, \"HIERARCHICAL\" or \"NONE\".",
                            "enum": [
                              "NONE",
                              "HIERARCHICAL"
                            ],
                            "type": "string"
                          },
                          "controls": {
                            "default": [],
                            "description": "An array of control panels and their state in the control group.",
                            "items": {
                              "additionalProperties": true,
                              "properties": {
                                "controlConfig": {
                                  "additionalProperties": {},
                                  "type": "object"
                                },
                                "grow": {
                                  "default": false,
                                  "description": "Expand width of the control panel to fit available space.",
                                  "type": "boolean"
                                },
                                "id": {
                                  "description": "The unique ID of the control.",
                                  "type": "string"
                                },
                                "order": {
                                  "description": "The order of the control panel in the control group.",
                                  "type": "number"
                                },
                                "type": {
                                  "description": "The type of the control panel.",
                                  "type": "string"
                                },
                                "width": {
                                  "default": "medium",
                                  "description": "Minimum width of the control panel in the control group.",
                                  "enum": [
                                    "small",
                                    "medium",
                                    "large"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "order"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "enhancements": {
                            "additionalProperties": {},
                            "type": "object"
                          },
                          "ignoreParentSettings": {
                            "additionalProperties": false,
                            "properties": {
                              "ignoreFilters": {
                                "default": false,
                                "description": "Ignore global filters in controls.",
                                "type": "boolean"
                              },
                              "ignoreQuery": {
                                "default": false,
                                "description": "Ignore the global query bar in controls.",
                                "type": "boolean"
                              },
                              "ignoreTimerange": {
                                "default": false,
                                "description": "Ignore the global time range in controls.",
                                "type": "boolean"
                              },
                              "ignoreValidations": {
                                "default": false,
                                "description": "Ignore validations in controls.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "labelPosition": {
                            "default": "oneLine",
                            "description": "Position of the labels for controls. For example, \"oneLine\", \"twoLine\".",
                            "enum": [
                              "oneLine",
                              "twoLine"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "ignoreParentSettings"
                        ],
                        "type": "object"
                      },
                      "description": {
                        "default": "",
                        "description": "A short description.",
                        "type": "string"
                      },
                      "kibanaSavedObjectMeta": {
                        "additionalProperties": false,
                        "default": {},
                        "description": "A container for various metadata",
                        "properties": {
                          "searchSource": {
                            "additionalProperties": true,
                            "properties": {
                              "filter": {
                                "items": {
                                  "additionalProperties": false,
                                  "description": "A filter for the search source.",
                                  "properties": {
                                    "$state": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "store": {
                                          "description": "Denote whether a filter is specific to an application's context (e.g. 'appState') or whether it should be applied globally (e.g. 'globalState').",
                                          "enum": [
                                            "appState",
                                            "globalState"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "store"
                                      ],
                                      "type": "object"
                                    },
                                    "meta": {
                                      "additionalProperties": true,
                                      "properties": {
                                        "alias": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "controlledBy": {
                                          "type": "string"
                                        },
                                        "disabled": {
                                          "type": "boolean"
                                        },
                                        "field": {
                                          "type": "string"
                                        },
                                        "group": {
                                          "type": "string"
                                        },
                                        "index": {
                                          "type": "string"
                                        },
                                        "isMultiIndex": {
                                          "type": "boolean"
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "negate": {
                                          "type": "boolean"
                                        },
                                        "params": {},
                                        "type": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "params"
                                      ],
                                      "type": "object"
                                    },
                                    "query": {
                                      "additionalProperties": {},
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "meta"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "query": {
                                "additionalProperties": false,
                                "properties": {
                                  "language": {
                                    "description": "The query language such as KQL or Lucene.",
                                    "type": "string"
                                  },
                                  "query": {
                                    "anyOf": [
                                      {
                                        "description": "A text-based query such as Kibana Query Language (KQL) or Lucene query language.",
                                        "type": "string"
                                      },
                                      {
                                        "additionalProperties": {},
                                        "type": "object"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "query",
                                  "language"
                                ],
                                "type": "object"
                              },
                              "sort": {
                                "items": {
                                  "additionalProperties": {
                                    "anyOf": [
                                      {
                                        "enum": [
                                          "asc",
                                          "desc"
                                        ],
                                        "type": "string"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "properties": {
                                          "format": {
                                            "type": "string"
                                          },
                                          "order": {
                                            "enum": [
                                              "asc",
                                              "desc"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "order"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "properties": {
                                          "numeric_type": {
                                            "enum": [
                                              "double",
                                              "long",
                                              "date",
                                              "date_nanos"
                                            ],
                                            "type": "string"
                                          },
                                          "order": {
                                            "enum": [
                                              "asc",
                                              "desc"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "order"
                                        ],
                                        "type": "object"
                                      }
                                    ]
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "options": {
                        "additionalProperties": false,
                        "properties": {
                          "hidePanelTitles": {
                            "default": false,
                            "description": "Hide the panel titles in the dashboard.",
                            "type": "boolean"
                          },
                          "syncColors": {
                            "default": true,
                            "description": "Synchronize colors between related panels in the dashboard.",
                            "type": "boolean"
                          },
                          "syncCursor": {
                            "default": true,
                            "description": "Synchronize cursor position between related panels in the dashboard.",
                            "type": "boolean"
                          },
                          "syncTooltips": {
                            "default": true,
                            "description": "Synchronize tooltips between related panels in the dashboard.",
                            "type": "boolean"
                          },
                          "useMargins": {
                            "default": true,
                            "description": "Show margins between panels in the dashboard layout.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "panels": {
                        "default": [],
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "gridData": {
                              "additionalProperties": false,
                              "properties": {
                                "h": {
                                  "default": 15,
                                  "description": "The height of the panel in grid units",
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "i": {
                                  "description": "The unique identifier of the panel",
                                  "type": "string"
                                },
                                "w": {
                                  "default": 24,
                                  "description": "The width of the panel in grid units",
                                  "maximum": 48,
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "x": {
                                  "description": "The x coordinate of the panel in grid units",
                                  "type": "number"
                                },
                                "y": {
                                  "description": "The y coordinate of the panel in grid units",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "x",
                                "y"
                              ],
                              "type": "object"
                            },
                            "id": {
                              "description": "The saved object id for by reference panels",
                              "type": "string"
                            },
                            "panelConfig": {
                              "additionalProperties": true,
                              "properties": {
                                "description": {
                                  "description": "The description of the panel",
                                  "type": "string"
                                },
                                "enhancements": {
                                  "additionalProperties": {},
                                  "type": "object"
                                },
                                "hidePanelTitles": {
                                  "description": "Set to true to hide the panel title in its container.",
                                  "type": "boolean"
                                },
                                "savedObjectId": {
                                  "description": "The unique id of the library item to construct the embeddable.",
                                  "type": "string"
                                },
                                "title": {
                                  "description": "The title of the panel",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "The version of the embeddable in the panel.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "panelIndex": {
                              "description": "The unique ID of the panel.",
                              "type": "string"
                            },
                            "panelRefName": {
                              "type": "string"
                            },
                            "title": {
                              "description": "The title of the panel",
                              "type": "string"
                            },
                            "type": {
                              "description": "The embeddable type",
                              "type": "string"
                            },
                            "version": {
                              "deprecated": true,
                              "description": "The version was used to store Kibana version information from versions 7.3.0 -> 8.11.0. As of version 8.11.0, the versioning information is now per-embeddable-type and is stored on the embeddable's input. (panelConfig in this type).",
                              "type": "string"
                            }
                          },
                          "required": [
                            "panelConfig",
                            "type",
                            "gridData"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "refreshInterval": {
                        "additionalProperties": false,
                        "description": "A container for various refresh interval settings",
                        "properties": {
                          "display": {
                            "deprecated": true,
                            "description": "A human-readable string indicating the refresh frequency. No longer used.",
                            "type": "string"
                          },
                          "pause": {
                            "description": "Whether the refresh interval is set to be paused while viewing the dashboard.",
                            "type": "boolean"
                          },
                          "section": {
                            "deprecated": true,
                            "description": "No longer used.",
                            "type": "number"
                          },
                          "value": {
                            "description": "A numeric value indicating refresh frequency in milliseconds.",
                            "type": "number"
                          }
                        },
                        "required": [
                          "pause",
                          "value"
                        ],
                        "type": "object"
                      },
                      "timeFrom": {
                        "description": "An ISO string indicating when to restore time from",
                        "type": "string"
                      },
                      "timeRestore": {
                        "default": false,
                        "description": "Whether to restore time upon viewing this dashboard",
                        "type": "boolean"
                      },
                      "timeTo": {
                        "description": "An ISO string indicating when to restore time from",
                        "type": "string"
                      },
                      "title": {
                        "description": "A human-readable title for the dashboard",
                        "type": "string"
                      },
                      "version": {
                        "deprecated": true,
                        "type": "number"
                      }
                    },
                    "required": [
                      "title",
                      "options"
                    ],
                    "type": "object"
                  },
                  "references": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "spaces": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "attributes"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "item": {
                      "additionalProperties": true,
                      "properties": {
                        "attributes": {
                          "additionalProperties": false,
                          "properties": {
                            "controlGroupInput": {
                              "additionalProperties": false,
                              "properties": {
                                "autoApplySelections": {
                                  "default": true,
                                  "description": "Show apply selections button in controls.",
                                  "type": "boolean"
                                },
                                "chainingSystem": {
                                  "default": "HIERARCHICAL",
                                  "description": "The chaining strategy for multiple controls. For example, \"HIERARCHICAL\" or \"NONE\".",
                                  "enum": [
                                    "NONE",
                                    "HIERARCHICAL"
                                  ],
                                  "type": "string"
                                },
                                "controls": {
                                  "default": [],
                                  "description": "An array of control panels and their state in the control group.",
                                  "items": {
                                    "additionalProperties": true,
                                    "properties": {
                                      "controlConfig": {
                                        "additionalProperties": {},
                                        "type": "object"
                                      },
                                      "grow": {
                                        "default": false,
                                        "description": "Expand width of the control panel to fit available space.",
                                        "type": "boolean"
                                      },
                                      "id": {
                                        "description": "The unique ID of the control.",
                                        "type": "string"
                                      },
                                      "order": {
                                        "description": "The order of the control panel in the control group.",
                                        "type": "number"
                                      },
                                      "type": {
                                        "description": "The type of the control panel.",
                                        "type": "string"
                                      },
                                      "width": {
                                        "default": "medium",
                                        "description": "Minimum width of the control panel in the control group.",
                                        "enum": [
                                          "small",
                                          "medium",
                                          "large"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "order"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "enhancements": {
                                  "additionalProperties": {},
                                  "type": "object"
                                },
                                "ignoreParentSettings": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "ignoreFilters": {
                                      "default": false,
                                      "description": "Ignore global filters in controls.",
                                      "type": "boolean"
                                    },
                                    "ignoreQuery": {
                                      "default": false,
                                      "description": "Ignore the global query bar in controls.",
                                      "type": "boolean"
                                    },
                                    "ignoreTimerange": {
                                      "default": false,
                                      "description": "Ignore the global time range in controls.",
                                      "type": "boolean"
                                    },
                                    "ignoreValidations": {
                                      "default": false,
                                      "description": "Ignore validations in controls.",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "labelPosition": {
                                  "default": "oneLine",
                                  "description": "Position of the labels for controls. For example, \"oneLine\", \"twoLine\".",
                                  "enum": [
                                    "oneLine",
                                    "twoLine"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "ignoreParentSettings"
                              ],
                              "type": "object"
                            },
                            "description": {
                              "default": "",
                              "description": "A short description.",
                              "type": "string"
                            },
                            "kibanaSavedObjectMeta": {
                              "additionalProperties": false,
                              "default": {},
                              "description": "A container for various metadata",
                              "properties": {
                                "searchSource": {
                                  "additionalProperties": true,
                                  "properties": {
                                    "filter": {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "A filter for the search source.",
                                        "properties": {
                                          "$state": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "store": {
                                                "description": "Denote whether a filter is specific to an application's context (e.g. 'appState') or whether it should be applied globally (e.g. 'globalState').",
                                                "enum": [
                                                  "appState",
                                                  "globalState"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "store"
                                            ],
                                            "type": "object"
                                          },
                                          "meta": {
                                            "additionalProperties": true,
                                            "properties": {
                                              "alias": {
                                                "nullable": true,
                                                "type": "string"
                                              },
                                              "controlledBy": {
                                                "type": "string"
                                              },
                                              "disabled": {
                                                "type": "boolean"
                                              },
                                              "field": {
                                                "type": "string"
                                              },
                                              "group": {
                                                "type": "string"
                                              },
                                              "index": {
                                                "type": "string"
                                              },
                                              "isMultiIndex": {
                                                "type": "boolean"
                                              },
                                              "key": {
                                                "type": "string"
                                              },
                                              "negate": {
                                                "type": "boolean"
                                              },
                                              "params": {},
                                              "type": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "params"
                                            ],
                                            "type": "object"
                                          },
                                          "query": {
                                            "additionalProperties": {},
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "meta"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "query": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "language": {
                                          "description": "The query language such as KQL or Lucene.",
                                          "type": "string"
                                        },
                                        "query": {
                                          "anyOf": [
                                            {
                                              "description": "A text-based query such as Kibana Query Language (KQL) or Lucene query language.",
                                              "type": "string"
                                            },
                                            {
                                              "additionalProperties": {},
                                              "type": "object"
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "query",
                                        "language"
                                      ],
                                      "type": "object"
                                    },
                                    "sort": {
                                      "items": {
                                        "additionalProperties": {
                                          "anyOf": [
                                            {
                                              "enum": [
                                                "asc",
                                                "desc"
                                              ],
                                              "type": "string"
                                            },
                                            {
                                              "additionalProperties": false,
                                              "properties": {
                                                "format": {
                                                  "type": "string"
                                                },
                                                "order": {
                                                  "enum": [
                                                    "asc",
                                                    "desc"
                                                  ],
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "order"
                                              ],
                                              "type": "object"
                                            },
                                            {
                                              "additionalProperties": false,
                                              "properties": {
                                                "numeric_type": {
                                                  "enum": [
                                                    "double",
                                                    "long",
                                                    "date",
                                                    "date_nanos"
                                                  ],
                                                  "type": "string"
                                                },
                                                "order": {
                                                  "enum": [
                                                    "asc",
                                                    "desc"
                                                  ],
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "order"
                                              ],
                                              "type": "object"
                                            }
                                          ]
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "options": {
                              "additionalProperties": false,
                              "properties": {
                                "hidePanelTitles": {
                                  "default": false,
                                  "description": "Hide the panel titles in the dashboard.",
                                  "type": "boolean"
                                },
                                "syncColors": {
                                  "default": true,
                                  "description": "Synchronize colors between related panels in the dashboard.",
                                  "type": "boolean"
                                },
                                "syncCursor": {
                                  "default": true,
                                  "description": "Synchronize cursor position between related panels in the dashboard.",
                                  "type": "boolean"
                                },
                                "syncTooltips": {
                                  "default": true,
                                  "description": "Synchronize tooltips between related panels in the dashboard.",
                                  "type": "boolean"
                                },
                                "useMargins": {
                                  "default": true,
                                  "description": "Show margins between panels in the dashboard layout.",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "panels": {
                              "default": [],
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "gridData": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "h": {
                                        "default": 15,
                                        "description": "The height of the panel in grid units",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "i": {
                                        "type": "string"
                                      },
                                      "w": {
                                        "default": 24,
                                        "description": "The width of the panel in grid units",
                                        "maximum": 48,
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "x": {
                                        "description": "The x coordinate of the panel in grid units",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "The y coordinate of the panel in grid units",
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "x",
                                      "y",
                                      "i"
                                    ],
                                    "type": "object"
                                  },
                                  "id": {
                                    "description": "The saved object id for by reference panels",
                                    "type": "string"
                                  },
                                  "panelConfig": {
                                    "additionalProperties": true,
                                    "properties": {
                                      "description": {
                                        "description": "The description of the panel",
                                        "type": "string"
                                      },
                                      "enhancements": {
                                        "additionalProperties": {},
                                        "type": "object"
                                      },
                                      "hidePanelTitles": {
                                        "description": "Set to true to hide the panel title in its container.",
                                        "type": "boolean"
                                      },
                                      "savedObjectId": {
                                        "description": "The unique id of the library item to construct the embeddable.",
                                        "type": "string"
                                      },
                                      "title": {
                                        "description": "The title of the panel",
                                        "type": "string"
                                      },
                                      "version": {
                                        "description": "The version of the embeddable in the panel.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "panelIndex": {
                                    "type": "string"
                                  },
                                  "panelRefName": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "description": "The title of the panel",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The embeddable type",
                                    "type": "string"
                                  },
                                  "version": {
                                    "deprecated": true,
                                    "description": "The version was used to store Kibana version information from versions 7.3.0 -> 8.11.0. As of version 8.11.0, the versioning information is now per-embeddable-type and is stored on the embeddable's input. (panelConfig in this type).",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "panelConfig",
                                  "type",
                                  "gridData",
                                  "panelIndex"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "refreshInterval": {
                              "additionalProperties": false,
                              "description": "A container for various refresh interval settings",
                              "properties": {
                                "display": {
                                  "deprecated": true,
                                  "description": "A human-readable string indicating the refresh frequency. No longer used.",
                                  "type": "string"
                                },
                                "pause": {
                                  "description": "Whether the refresh interval is set to be paused while viewing the dashboard.",
                                  "type": "boolean"
                                },
                                "section": {
                                  "deprecated": true,
                                  "description": "No longer used.",
                                  "type": "number"
                                },
                                "value": {
                                  "description": "A numeric value indicating refresh frequency in milliseconds.",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "pause",
                                "value"
                              ],
                              "type": "object"
                            },
                            "timeFrom": {
                              "description": "An ISO string indicating when to restore time from",
                              "type": "string"
                            },
                            "timeRestore": {
                              "default": false,
                              "description": "Whether to restore time upon viewing this dashboard",
                              "type": "boolean"
                            },
                            "timeTo": {
                              "description": "An ISO string indicating when to restore time from",
                              "type": "string"
                            },
                            "title": {
                              "description": "A human-readable title for the dashboard",
                              "type": "string"
                            },
                            "version": {
                              "deprecated": true,
                              "type": "number"
                            }
                          },
                          "required": [
                            "title",
                            "options"
                          ],
                          "type": "object"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "createdBy": {
                          "type": "string"
                        },
                        "error": {
                          "additionalProperties": false,
                          "properties": {
                            "error": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "properties": {},
                              "type": "object"
                            },
                            "statusCode": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "error",
                            "message",
                            "statusCode"
                          ],
                          "type": "object"
                        },
                        "id": {
                          "type": "string"
                        },
                        "managed": {
                          "type": "boolean"
                        },
                        "namespaces": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "originId": {
                          "type": "string"
                        },
                        "references": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type",
                              "id"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "type": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "updatedBy": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "attributes",
                        "references"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "item"
                  ],
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Create a dashboard",
        "tags": [
          "Dashboards"
        ],
        "x-state": "Technical Preview"
      },
      "put": {
        "description": "This functionality is in technical preview and may be changed or removed in a future release. Elastic will work to fix any issues, but features in technical preview are not subject to the support SLA of official GA features.",
        "operationId": "put-dashboards-dashboard-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "A unique identifier for the dashboard.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "attributes": {
                    "additionalProperties": false,
                    "properties": {
                      "controlGroupInput": {
                        "additionalProperties": false,
                        "properties": {
                          "autoApplySelections": {
                            "default": true,
                            "description": "Show apply selections button in controls.",
                            "type": "boolean"
                          },
                          "chainingSystem": {
                            "default": "HIERARCHICAL",
                            "description": "The chaining strategy for multiple controls. For example, \"HIERARCHICAL\" or \"NONE\".",
                            "enum": [
                              "NONE",
                              "HIERARCHICAL"
                            ],
                            "type": "string"
                          },
                          "controls": {
                            "default": [],
                            "description": "An array of control panels and their state in the control group.",
                            "items": {
                              "additionalProperties": true,
                              "properties": {
                                "controlConfig": {
                                  "additionalProperties": {},
                                  "type": "object"
                                },
                                "grow": {
                                  "default": false,
                                  "description": "Expand width of the control panel to fit available space.",
                                  "type": "boolean"
                                },
                                "id": {
                                  "description": "The unique ID of the control.",
                                  "type": "string"
                                },
                                "order": {
                                  "description": "The order of the control panel in the control group.",
                                  "type": "number"
                                },
                                "type": {
                                  "description": "The type of the control panel.",
                                  "type": "string"
                                },
                                "width": {
                                  "default": "medium",
                                  "description": "Minimum width of the control panel in the control group.",
                                  "enum": [
                                    "small",
                                    "medium",
                                    "large"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "type",
                                "order"
                              ],
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "enhancements": {
                            "additionalProperties": {},
                            "type": "object"
                          },
                          "ignoreParentSettings": {
                            "additionalProperties": false,
                            "properties": {
                              "ignoreFilters": {
                                "default": false,
                                "description": "Ignore global filters in controls.",
                                "type": "boolean"
                              },
                              "ignoreQuery": {
                                "default": false,
                                "description": "Ignore the global query bar in controls.",
                                "type": "boolean"
                              },
                              "ignoreTimerange": {
                                "default": false,
                                "description": "Ignore the global time range in controls.",
                                "type": "boolean"
                              },
                              "ignoreValidations": {
                                "default": false,
                                "description": "Ignore validations in controls.",
                                "type": "boolean"
                              }
                            },
                            "type": "object"
                          },
                          "labelPosition": {
                            "default": "oneLine",
                            "description": "Position of the labels for controls. For example, \"oneLine\", \"twoLine\".",
                            "enum": [
                              "oneLine",
                              "twoLine"
                            ],
                            "type": "string"
                          }
                        },
                        "required": [
                          "ignoreParentSettings"
                        ],
                        "type": "object"
                      },
                      "description": {
                        "default": "",
                        "description": "A short description.",
                        "type": "string"
                      },
                      "kibanaSavedObjectMeta": {
                        "additionalProperties": false,
                        "default": {},
                        "description": "A container for various metadata",
                        "properties": {
                          "searchSource": {
                            "additionalProperties": true,
                            "properties": {
                              "filter": {
                                "items": {
                                  "additionalProperties": false,
                                  "description": "A filter for the search source.",
                                  "properties": {
                                    "$state": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "store": {
                                          "description": "Denote whether a filter is specific to an application's context (e.g. 'appState') or whether it should be applied globally (e.g. 'globalState').",
                                          "enum": [
                                            "appState",
                                            "globalState"
                                          ],
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "store"
                                      ],
                                      "type": "object"
                                    },
                                    "meta": {
                                      "additionalProperties": true,
                                      "properties": {
                                        "alias": {
                                          "nullable": true,
                                          "type": "string"
                                        },
                                        "controlledBy": {
                                          "type": "string"
                                        },
                                        "disabled": {
                                          "type": "boolean"
                                        },
                                        "field": {
                                          "type": "string"
                                        },
                                        "group": {
                                          "type": "string"
                                        },
                                        "index": {
                                          "type": "string"
                                        },
                                        "isMultiIndex": {
                                          "type": "boolean"
                                        },
                                        "key": {
                                          "type": "string"
                                        },
                                        "negate": {
                                          "type": "boolean"
                                        },
                                        "params": {},
                                        "type": {
                                          "type": "string"
                                        },
                                        "value": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "params"
                                      ],
                                      "type": "object"
                                    },
                                    "query": {
                                      "additionalProperties": {},
                                      "type": "object"
                                    }
                                  },
                                  "required": [
                                    "meta"
                                  ],
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "query": {
                                "additionalProperties": false,
                                "properties": {
                                  "language": {
                                    "description": "The query language such as KQL or Lucene.",
                                    "type": "string"
                                  },
                                  "query": {
                                    "anyOf": [
                                      {
                                        "description": "A text-based query such as Kibana Query Language (KQL) or Lucene query language.",
                                        "type": "string"
                                      },
                                      {
                                        "additionalProperties": {},
                                        "type": "object"
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "query",
                                  "language"
                                ],
                                "type": "object"
                              },
                              "sort": {
                                "items": {
                                  "additionalProperties": {
                                    "anyOf": [
                                      {
                                        "enum": [
                                          "asc",
                                          "desc"
                                        ],
                                        "type": "string"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "properties": {
                                          "format": {
                                            "type": "string"
                                          },
                                          "order": {
                                            "enum": [
                                              "asc",
                                              "desc"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "order"
                                        ],
                                        "type": "object"
                                      },
                                      {
                                        "additionalProperties": false,
                                        "properties": {
                                          "numeric_type": {
                                            "enum": [
                                              "double",
                                              "long",
                                              "date",
                                              "date_nanos"
                                            ],
                                            "type": "string"
                                          },
                                          "order": {
                                            "enum": [
                                              "asc",
                                              "desc"
                                            ],
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "order"
                                        ],
                                        "type": "object"
                                      }
                                    ]
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "options": {
                        "additionalProperties": false,
                        "properties": {
                          "hidePanelTitles": {
                            "default": false,
                            "description": "Hide the panel titles in the dashboard.",
                            "type": "boolean"
                          },
                          "syncColors": {
                            "default": true,
                            "description": "Synchronize colors between related panels in the dashboard.",
                            "type": "boolean"
                          },
                          "syncCursor": {
                            "default": true,
                            "description": "Synchronize cursor position between related panels in the dashboard.",
                            "type": "boolean"
                          },
                          "syncTooltips": {
                            "default": true,
                            "description": "Synchronize tooltips between related panels in the dashboard.",
                            "type": "boolean"
                          },
                          "useMargins": {
                            "default": true,
                            "description": "Show margins between panels in the dashboard layout.",
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "panels": {
                        "default": [],
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "gridData": {
                              "additionalProperties": false,
                              "properties": {
                                "h": {
                                  "default": 15,
                                  "description": "The height of the panel in grid units",
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "i": {
                                  "description": "The unique identifier of the panel",
                                  "type": "string"
                                },
                                "w": {
                                  "default": 24,
                                  "description": "The width of the panel in grid units",
                                  "maximum": 48,
                                  "minimum": 1,
                                  "type": "number"
                                },
                                "x": {
                                  "description": "The x coordinate of the panel in grid units",
                                  "type": "number"
                                },
                                "y": {
                                  "description": "The y coordinate of the panel in grid units",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "x",
                                "y"
                              ],
                              "type": "object"
                            },
                            "id": {
                              "description": "The saved object id for by reference panels",
                              "type": "string"
                            },
                            "panelConfig": {
                              "additionalProperties": true,
                              "properties": {
                                "description": {
                                  "description": "The description of the panel",
                                  "type": "string"
                                },
                                "enhancements": {
                                  "additionalProperties": {},
                                  "type": "object"
                                },
                                "hidePanelTitles": {
                                  "description": "Set to true to hide the panel title in its container.",
                                  "type": "boolean"
                                },
                                "savedObjectId": {
                                  "description": "The unique id of the library item to construct the embeddable.",
                                  "type": "string"
                                },
                                "title": {
                                  "description": "The title of the panel",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "The version of the embeddable in the panel.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "panelIndex": {
                              "description": "The unique ID of the panel.",
                              "type": "string"
                            },
                            "panelRefName": {
                              "type": "string"
                            },
                            "title": {
                              "description": "The title of the panel",
                              "type": "string"
                            },
                            "type": {
                              "description": "The embeddable type",
                              "type": "string"
                            },
                            "version": {
                              "deprecated": true,
                              "description": "The version was used to store Kibana version information from versions 7.3.0 -> 8.11.0. As of version 8.11.0, the versioning information is now per-embeddable-type and is stored on the embeddable's input. (panelConfig in this type).",
                              "type": "string"
                            }
                          },
                          "required": [
                            "panelConfig",
                            "type",
                            "gridData"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "refreshInterval": {
                        "additionalProperties": false,
                        "description": "A container for various refresh interval settings",
                        "properties": {
                          "display": {
                            "deprecated": true,
                            "description": "A human-readable string indicating the refresh frequency. No longer used.",
                            "type": "string"
                          },
                          "pause": {
                            "description": "Whether the refresh interval is set to be paused while viewing the dashboard.",
                            "type": "boolean"
                          },
                          "section": {
                            "deprecated": true,
                            "description": "No longer used.",
                            "type": "number"
                          },
                          "value": {
                            "description": "A numeric value indicating refresh frequency in milliseconds.",
                            "type": "number"
                          }
                        },
                        "required": [
                          "pause",
                          "value"
                        ],
                        "type": "object"
                      },
                      "timeFrom": {
                        "description": "An ISO string indicating when to restore time from",
                        "type": "string"
                      },
                      "timeRestore": {
                        "default": false,
                        "description": "Whether to restore time upon viewing this dashboard",
                        "type": "boolean"
                      },
                      "timeTo": {
                        "description": "An ISO string indicating when to restore time from",
                        "type": "string"
                      },
                      "title": {
                        "description": "A human-readable title for the dashboard",
                        "type": "string"
                      },
                      "version": {
                        "deprecated": true,
                        "type": "number"
                      }
                    },
                    "required": [
                      "title",
                      "options"
                    ],
                    "type": "object"
                  },
                  "references": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "type",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "attributes"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": false,
                  "properties": {
                    "item": {
                      "additionalProperties": true,
                      "properties": {
                        "attributes": {
                          "additionalProperties": false,
                          "properties": {
                            "controlGroupInput": {
                              "additionalProperties": false,
                              "properties": {
                                "autoApplySelections": {
                                  "default": true,
                                  "description": "Show apply selections button in controls.",
                                  "type": "boolean"
                                },
                                "chainingSystem": {
                                  "default": "HIERARCHICAL",
                                  "description": "The chaining strategy for multiple controls. For example, \"HIERARCHICAL\" or \"NONE\".",
                                  "enum": [
                                    "NONE",
                                    "HIERARCHICAL"
                                  ],
                                  "type": "string"
                                },
                                "controls": {
                                  "default": [],
                                  "description": "An array of control panels and their state in the control group.",
                                  "items": {
                                    "additionalProperties": true,
                                    "properties": {
                                      "controlConfig": {
                                        "additionalProperties": {},
                                        "type": "object"
                                      },
                                      "grow": {
                                        "default": false,
                                        "description": "Expand width of the control panel to fit available space.",
                                        "type": "boolean"
                                      },
                                      "id": {
                                        "description": "The unique ID of the control.",
                                        "type": "string"
                                      },
                                      "order": {
                                        "description": "The order of the control panel in the control group.",
                                        "type": "number"
                                      },
                                      "type": {
                                        "description": "The type of the control panel.",
                                        "type": "string"
                                      },
                                      "width": {
                                        "default": "medium",
                                        "description": "Minimum width of the control panel in the control group.",
                                        "enum": [
                                          "small",
                                          "medium",
                                          "large"
                                        ],
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "order"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                },
                                "enhancements": {
                                  "additionalProperties": {},
                                  "type": "object"
                                },
                                "ignoreParentSettings": {
                                  "additionalProperties": false,
                                  "properties": {
                                    "ignoreFilters": {
                                      "default": false,
                                      "description": "Ignore global filters in controls.",
                                      "type": "boolean"
                                    },
                                    "ignoreQuery": {
                                      "default": false,
                                      "description": "Ignore the global query bar in controls.",
                                      "type": "boolean"
                                    },
                                    "ignoreTimerange": {
                                      "default": false,
                                      "description": "Ignore the global time range in controls.",
                                      "type": "boolean"
                                    },
                                    "ignoreValidations": {
                                      "default": false,
                                      "description": "Ignore validations in controls.",
                                      "type": "boolean"
                                    }
                                  },
                                  "type": "object"
                                },
                                "labelPosition": {
                                  "default": "oneLine",
                                  "description": "Position of the labels for controls. For example, \"oneLine\", \"twoLine\".",
                                  "enum": [
                                    "oneLine",
                                    "twoLine"
                                  ],
                                  "type": "string"
                                }
                              },
                              "required": [
                                "ignoreParentSettings"
                              ],
                              "type": "object"
                            },
                            "description": {
                              "default": "",
                              "description": "A short description.",
                              "type": "string"
                            },
                            "kibanaSavedObjectMeta": {
                              "additionalProperties": false,
                              "default": {},
                              "description": "A container for various metadata",
                              "properties": {
                                "searchSource": {
                                  "additionalProperties": true,
                                  "properties": {
                                    "filter": {
                                      "items": {
                                        "additionalProperties": false,
                                        "description": "A filter for the search source.",
                                        "properties": {
                                          "$state": {
                                            "additionalProperties": false,
                                            "properties": {
                                              "store": {
                                                "description": "Denote whether a filter is specific to an application's context (e.g. 'appState') or whether it should be applied globally (e.g. 'globalState').",
                                                "enum": [
                                                  "appState",
                                                  "globalState"
                                                ],
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "store"
                                            ],
                                            "type": "object"
                                          },
                                          "meta": {
                                            "additionalProperties": true,
                                            "properties": {
                                              "alias": {
                                                "nullable": true,
                                                "type": "string"
                                              },
                                              "controlledBy": {
                                                "type": "string"
                                              },
                                              "disabled": {
                                                "type": "boolean"
                                              },
                                              "field": {
                                                "type": "string"
                                              },
                                              "group": {
                                                "type": "string"
                                              },
                                              "index": {
                                                "type": "string"
                                              },
                                              "isMultiIndex": {
                                                "type": "boolean"
                                              },
                                              "key": {
                                                "type": "string"
                                              },
                                              "negate": {
                                                "type": "boolean"
                                              },
                                              "params": {},
                                              "type": {
                                                "type": "string"
                                              },
                                              "value": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "params"
                                            ],
                                            "type": "object"
                                          },
                                          "query": {
                                            "additionalProperties": {},
                                            "type": "object"
                                          }
                                        },
                                        "required": [
                                          "meta"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "query": {
                                      "additionalProperties": false,
                                      "properties": {
                                        "language": {
                                          "description": "The query language such as KQL or Lucene.",
                                          "type": "string"
                                        },
                                        "query": {
                                          "anyOf": [
                                            {
                                              "description": "A text-based query such as Kibana Query Language (KQL) or Lucene query language.",
                                              "type": "string"
                                            },
                                            {
                                              "additionalProperties": {},
                                              "type": "object"
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "query",
                                        "language"
                                      ],
                                      "type": "object"
                                    },
                                    "sort": {
                                      "items": {
                                        "additionalProperties": {
                                          "anyOf": [
                                            {
                                              "enum": [
                                                "asc",
                                                "desc"
                                              ],
                                              "type": "string"
                                            },
                                            {
                                              "additionalProperties": false,
                                              "properties": {
                                                "format": {
                                                  "type": "string"
                                                },
                                                "order": {
                                                  "enum": [
                                                    "asc",
                                                    "desc"
                                                  ],
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "order"
                                              ],
                                              "type": "object"
                                            },
                                            {
                                              "additionalProperties": false,
                                              "properties": {
                                                "numeric_type": {
                                                  "enum": [
                                                    "double",
                                                    "long",
                                                    "date",
                                                    "date_nanos"
                                                  ],
                                                  "type": "string"
                                                },
                                                "order": {
                                                  "enum": [
                                                    "asc",
                                                    "desc"
                                                  ],
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "order"
                                              ],
                                              "type": "object"
                                            }
                                          ]
                                        },
                                        "type": "object"
                                      },
                                      "type": "array"
                                    },
                                    "type": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            },
                            "options": {
                              "additionalProperties": false,
                              "properties": {
                                "hidePanelTitles": {
                                  "default": false,
                                  "description": "Hide the panel titles in the dashboard.",
                                  "type": "boolean"
                                },
                                "syncColors": {
                                  "default": true,
                                  "description": "Synchronize colors between related panels in the dashboard.",
                                  "type": "boolean"
                                },
                                "syncCursor": {
                                  "default": true,
                                  "description": "Synchronize cursor position between related panels in the dashboard.",
                                  "type": "boolean"
                                },
                                "syncTooltips": {
                                  "default": true,
                                  "description": "Synchronize tooltips between related panels in the dashboard.",
                                  "type": "boolean"
                                },
                                "useMargins": {
                                  "default": true,
                                  "description": "Show margins between panels in the dashboard layout.",
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "panels": {
                              "default": [],
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "gridData": {
                                    "additionalProperties": false,
                                    "properties": {
                                      "h": {
                                        "default": 15,
                                        "description": "The height of the panel in grid units",
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "i": {
                                        "type": "string"
                                      },
                                      "w": {
                                        "default": 24,
                                        "description": "The width of the panel in grid units",
                                        "maximum": 48,
                                        "minimum": 1,
                                        "type": "number"
                                      },
                                      "x": {
                                        "description": "The x coordinate of the panel in grid units",
                                        "type": "number"
                                      },
                                      "y": {
                                        "description": "The y coordinate of the panel in grid units",
                                        "type": "number"
                                      }
                                    },
                                    "required": [
                                      "x",
                                      "y",
                                      "i"
                                    ],
                                    "type": "object"
                                  },
                                  "id": {
                                    "description": "The saved object id for by reference panels",
                                    "type": "string"
                                  },
                                  "panelConfig": {
                                    "additionalProperties": true,
                                    "properties": {
                                      "description": {
                                        "description": "The description of the panel",
                                        "type": "string"
                                      },
                                      "enhancements": {
                                        "additionalProperties": {},
                                        "type": "object"
                                      },
                                      "hidePanelTitles": {
                                        "description": "Set to true to hide the panel title in its container.",
                                        "type": "boolean"
                                      },
                                      "savedObjectId": {
                                        "description": "The unique id of the library item to construct the embeddable.",
                                        "type": "string"
                                      },
                                      "title": {
                                        "description": "The title of the panel",
                                        "type": "string"
                                      },
                                      "version": {
                                        "description": "The version of the embeddable in the panel.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "panelIndex": {
                                    "type": "string"
                                  },
                                  "panelRefName": {
                                    "type": "string"
                                  },
                                  "title": {
                                    "description": "The title of the panel",
                                    "type": "string"
                                  },
                                  "type": {
                                    "description": "The embeddable type",
                                    "type": "string"
                                  },
                                  "version": {
                                    "deprecated": true,
                                    "description": "The version was used to store Kibana version information from versions 7.3.0 -> 8.11.0. As of version 8.11.0, the versioning information is now per-embeddable-type and is stored on the embeddable's input. (panelConfig in this type).",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "panelConfig",
                                  "type",
                                  "gridData",
                                  "panelIndex"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "refreshInterval": {
                              "additionalProperties": false,
                              "description": "A container for various refresh interval settings",
                              "properties": {
                                "display": {
                                  "deprecated": true,
                                  "description": "A human-readable string indicating the refresh frequency. No longer used.",
                                  "type": "string"
                                },
                                "pause": {
                                  "description": "Whether the refresh interval is set to be paused while viewing the dashboard.",
                                  "type": "boolean"
                                },
                                "section": {
                                  "deprecated": true,
                                  "description": "No longer used.",
                                  "type": "number"
                                },
                                "value": {
                                  "description": "A numeric value indicating refresh frequency in milliseconds.",
                                  "type": "number"
                                }
                              },
                              "required": [
                                "pause",
                                "value"
                              ],
                              "type": "object"
                            },
                            "timeFrom": {
                              "description": "An ISO string indicating when to restore time from",
                              "type": "string"
                            },
                            "timeRestore": {
                              "default": false,
                              "description": "Whether to restore time upon viewing this dashboard",
                              "type": "boolean"
                            },
                            "timeTo": {
                              "description": "An ISO string indicating when to restore time from",
                              "type": "string"
                            },
                            "title": {
                              "description": "A human-readable title for the dashboard",
                              "type": "string"
                            },
                            "version": {
                              "deprecated": true,
                              "type": "number"
                            }
                          },
                          "required": [
                            "title",
                            "options"
                          ],
                          "type": "object"
                        },
                        "createdAt": {
                          "type": "string"
                        },
                        "createdBy": {
                          "type": "string"
                        },
                        "error": {
                          "additionalProperties": false,
                          "properties": {
                            "error": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "metadata": {
                              "additionalProperties": true,
                              "properties": {},
                              "type": "object"
                            },
                            "statusCode": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "error",
                            "message",
                            "statusCode"
                          ],
                          "type": "object"
                        },
                        "id": {
                          "type": "string"
                        },
                        "managed": {
                          "type": "boolean"
                        },
                        "namespaces": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "originId": {
                          "type": "string"
                        },
                        "references": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "type",
                              "id"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "type": {
                          "type": "string"
                        },
                        "updatedAt": {
                          "type": "string"
                        },
                        "updatedBy": {
                          "type": "string"
                        },
                        "version": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "type",
                        "attributes",
                        "references"
                      ],
                      "type": "object"
                    }
                  },
                  "required": [
                    "item"
                  ],
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Update an existing dashboard",
        "tags": [
          "Dashboards"
        ],
        "x-state": "Technical Preview"
      }
    },
    "/api/security/role": {
      "get": {
        "operationId": "get-security-role",
        "parameters": [
          {
            "description": "If `true` and the response contains any privileges that are associated with deprecated features, they are omitted in favor of details about the appropriate replacement feature privileges.",
            "in": "query",
            "name": "replaceDeprecatedPrivileges",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Get all roles",
        "tags": [
          "roles"
        ]
      }
    },
    "/api/security/role/{name}": {
      "delete": {
        "operationId": "delete-security-role-name",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Delete a role",
        "tags": [
          "roles"
        ]
      },
      "get": {
        "operationId": "get-security-role-name",
        "parameters": [
          {
            "description": "The role name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "description": "If `true` and the response contains any privileges that are associated with deprecated features, they are omitted in favor of details about the appropriate replacement feature privileges.",
            "in": "query",
            "name": "replaceDeprecatedPrivileges",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Get a role",
        "tags": [
          "roles"
        ]
      },
      "put": {
        "description": "Create a new Kibana role or update the attributes of an existing role. Kibana roles are stored in the Elasticsearch native realm.",
        "operationId": "put-security-role-name",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The role name.",
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "maxLength": 1024,
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "description": "When true, a role is not overwritten if it already exists.",
            "in": "query",
            "name": "createOnly",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "description": {
                    "description": "A description for the role.",
                    "maxLength": 2048,
                    "type": "string"
                  },
                  "elasticsearch": {
                    "additionalProperties": false,
                    "properties": {
                      "cluster": {
                        "items": {
                          "description": "Cluster privileges that define the cluster level actions that users can perform.",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "indices": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "allow_restricted_indices": {
                              "description": "Restricted indices are a special category of indices that are used internally to store configuration data and should not be directly accessed. Only internal system roles should normally grant privileges over the restricted indices. Toggling this flag is very strongly discouraged because it could effectively grant unrestricted operations on critical data, making the entire system unstable or leaking sensitive information. If for administrative purposes you need to create a role with privileges covering restricted indices, however, you can set this property to true. In that case, the names field covers the restricted indices too.",
                              "type": "boolean"
                            },
                            "field_security": {
                              "additionalProperties": {
                                "items": {
                                  "description": "The document fields that the role members have read access to.",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "type": "object"
                            },
                            "names": {
                              "items": {
                                "description": "The data streams, indices, and aliases to which the permissions in this entry apply. It supports wildcards (*).",
                                "type": "string"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "privileges": {
                              "items": {
                                "description": "The index level privileges that the role members have for the data streams and indices.",
                                "type": "string"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "query": {
                              "description": "A search query that defines the documents the role members have read access to. A document within the specified data streams and indices must match this query in order for it to be accessible by the role members.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "names",
                            "privileges"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "remote_cluster": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "clusters": {
                              "items": {
                                "description": "A list of remote cluster aliases. It supports literal strings as well as wildcards and regular expressions.",
                                "type": "string"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "privileges": {
                              "items": {
                                "description": "The cluster level privileges for the remote cluster. The allowed values are a subset of the cluster privileges.",
                                "type": "string"
                              },
                              "minItems": 1,
                              "type": "array"
                            }
                          },
                          "required": [
                            "privileges",
                            "clusters"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "remote_indices": {
                        "items": {
                          "additionalProperties": false,
                          "properties": {
                            "allow_restricted_indices": {
                              "description": "Restricted indices are a special category of indices that are used internally to store configuration data and should not be directly accessed. Only internal system roles should normally grant privileges over the restricted indices. Toggling this flag is very strongly discouraged because it could effectively grant unrestricted operations on critical data, making the entire system unstable or leaking sensitive information. If for administrative purposes you need to create a role with privileges covering restricted indices, however, you can set this property to true. In that case, the names field will cover the restricted indices too.",
                              "type": "boolean"
                            },
                            "clusters": {
                              "items": {
                                "description": "A list of remote cluster aliases. It supports literal strings as well as wildcards and regular expressions.",
                                "type": "string"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "field_security": {
                              "additionalProperties": {
                                "items": {
                                  "description": "The document fields that the role members have read access to.",
                                  "type": "string"
                                },
                                "type": "array"
                              },
                              "type": "object"
                            },
                            "names": {
                              "items": {
                                "description": "A list of remote aliases, data streams, or indices to which the permissions apply. It supports wildcards (*).",
                                "type": "string"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "privileges": {
                              "items": {
                                "description": "The index level privileges that role members have for the specified indices.",
                                "type": "string"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "query": {
                              "description": "A search query that defines the documents the role members have read access to. A document within the specified data streams and indices must match this query in order for it to be accessible by the role members. ",
                              "type": "string"
                            }
                          },
                          "required": [
                            "clusters",
                            "names",
                            "privileges"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "run_as": {
                        "items": {
                          "description": "A user name that the role member can impersonate.",
                          "type": "string"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "kibana": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "base": {
                          "anyOf": [
                            {
                              "items": {},
                              "type": "array"
                            },
                            {
                              "type": "boolean"
                            },
                            {
                              "type": "number"
                            },
                            {
                              "type": "object"
                            },
                            {
                              "type": "string"
                            }
                          ],
                          "nullable": true,
                          "oneOf": [
                            {
                              "items": {
                                "description": "A base privilege that grants applies to all spaces.",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            {
                              "items": {
                                "description": "A base privilege that applies to specific spaces.",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          ]
                        },
                        "feature": {
                          "additionalProperties": {
                            "items": {
                              "description": "The privileges that the role member has for the feature.",
                              "type": "string"
                            },
                            "type": "array"
                          },
                          "type": "object"
                        },
                        "spaces": {
                          "anyOf": [
                            {
                              "items": {
                                "enum": [
                                  "*"
                                ],
                                "type": "string"
                              },
                              "maxItems": 1,
                              "minItems": 1,
                              "type": "array"
                            },
                            {
                              "items": {
                                "description": "A space that the privilege applies to.",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          ],
                          "default": [
                            "*"
                          ]
                        }
                      },
                      "required": [
                        "base"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "metadata": {
                    "additionalProperties": {},
                    "type": "object"
                  }
                },
                "required": [
                  "elasticsearch"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Create or update a role",
        "tags": [
          "roles"
        ]
      }
    },
    "/api/security/roles": {
      "post": {
        "operationId": "post-security-roles",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "roles": {
                    "additionalProperties": {
                      "additionalProperties": false,
                      "properties": {
                        "description": {
                          "description": "A description for the role.",
                          "maxLength": 2048,
                          "type": "string"
                        },
                        "elasticsearch": {
                          "additionalProperties": false,
                          "properties": {
                            "cluster": {
                              "items": {
                                "description": "Cluster privileges that define the cluster level actions that users can perform.",
                                "type": "string"
                              },
                              "type": "array"
                            },
                            "indices": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "allow_restricted_indices": {
                                    "description": "Restricted indices are a special category of indices that are used internally to store configuration data and should not be directly accessed. Only internal system roles should normally grant privileges over the restricted indices. Toggling this flag is very strongly discouraged because it could effectively grant unrestricted operations on critical data, making the entire system unstable or leaking sensitive information. If for administrative purposes you need to create a role with privileges covering restricted indices, however, you can set this property to true. In that case, the names field covers the restricted indices too.",
                                    "type": "boolean"
                                  },
                                  "field_security": {
                                    "additionalProperties": {
                                      "items": {
                                        "description": "The document fields that the role members have read access to.",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "type": "object"
                                  },
                                  "names": {
                                    "items": {
                                      "description": "The data streams, indices, and aliases to which the permissions in this entry apply. It supports wildcards (*).",
                                      "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                  },
                                  "privileges": {
                                    "items": {
                                      "description": "The index level privileges that the role members have for the data streams and indices.",
                                      "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                  },
                                  "query": {
                                    "description": "A search query that defines the documents the role members have read access to. A document within the specified data streams and indices must match this query in order for it to be accessible by the role members.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "names",
                                  "privileges"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "remote_cluster": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "clusters": {
                                    "items": {
                                      "description": "A list of remote cluster aliases. It supports literal strings as well as wildcards and regular expressions.",
                                      "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                  },
                                  "privileges": {
                                    "items": {
                                      "description": "The cluster level privileges for the remote cluster. The allowed values are a subset of the cluster privileges.",
                                      "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                  }
                                },
                                "required": [
                                  "privileges",
                                  "clusters"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "remote_indices": {
                              "items": {
                                "additionalProperties": false,
                                "properties": {
                                  "allow_restricted_indices": {
                                    "description": "Restricted indices are a special category of indices that are used internally to store configuration data and should not be directly accessed. Only internal system roles should normally grant privileges over the restricted indices. Toggling this flag is very strongly discouraged because it could effectively grant unrestricted operations on critical data, making the entire system unstable or leaking sensitive information. If for administrative purposes you need to create a role with privileges covering restricted indices, however, you can set this property to true. In that case, the names field will cover the restricted indices too.",
                                    "type": "boolean"
                                  },
                                  "clusters": {
                                    "items": {
                                      "description": "A list of remote cluster aliases. It supports literal strings as well as wildcards and regular expressions.",
                                      "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                  },
                                  "field_security": {
                                    "additionalProperties": {
                                      "items": {
                                        "description": "The document fields that the role members have read access to.",
                                        "type": "string"
                                      },
                                      "type": "array"
                                    },
                                    "type": "object"
                                  },
                                  "names": {
                                    "items": {
                                      "description": "A list of remote aliases, data streams, or indices to which the permissions apply. It supports wildcards (*).",
                                      "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                  },
                                  "privileges": {
                                    "items": {
                                      "description": "The index level privileges that role members have for the specified indices.",
                                      "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                  },
                                  "query": {
                                    "description": "A search query that defines the documents the role members have read access to. A document within the specified data streams and indices must match this query in order for it to be accessible by the role members. ",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "clusters",
                                  "names",
                                  "privileges"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "run_as": {
                              "items": {
                                "description": "A user name that the role member can impersonate.",
                                "type": "string"
                              },
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "kibana": {
                          "items": {
                            "additionalProperties": false,
                            "properties": {
                              "base": {
                                "anyOf": [
                                  {
                                    "items": {},
                                    "type": "array"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "object"
                                  },
                                  {
                                    "type": "string"
                                  }
                                ],
                                "nullable": true,
                                "oneOf": [
                                  {
                                    "items": {
                                      "description": "A base privilege that grants applies to all spaces.",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  },
                                  {
                                    "items": {
                                      "description": "A base privilege that applies to specific spaces.",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                ]
                              },
                              "feature": {
                                "additionalProperties": {
                                  "items": {
                                    "description": "The privileges that the role member has for the feature.",
                                    "type": "string"
                                  },
                                  "type": "array"
                                },
                                "type": "object"
                              },
                              "spaces": {
                                "anyOf": [
                                  {
                                    "items": {
                                      "enum": [
                                        "*"
                                      ],
                                      "type": "string"
                                    },
                                    "maxItems": 1,
                                    "minItems": 1,
                                    "type": "array"
                                  },
                                  {
                                    "items": {
                                      "description": "A space that the privilege applies to.",
                                      "type": "string"
                                    },
                                    "type": "array"
                                  }
                                ],
                                "default": [
                                  "*"
                                ]
                              }
                            },
                            "required": [
                              "base"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "metadata": {
                          "additionalProperties": {},
                          "type": "object"
                        }
                      },
                      "required": [
                        "elasticsearch"
                      ],
                      "type": "object"
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "roles"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Create or update roles",
        "tags": [
          "roles"
        ]
      }
    },
    "/api/spaces/_copy_saved_objects": {
      "post": {
        "description": "It also allows you to automatically copy related objects, so when you copy a dashboard, this can automatically copy over the associated visualizations, data views, and saved searches, as required. You can request to overwrite any objects that already exist in the target space if they share an identifier or you can use the resolve copy saved objects conflicts API to do this on a per-object basis.<br/><br/>[Required authorization] Route required privileges: ALL of [copySavedObjectsToSpaces].",
        "operationId": "post-spaces-copy-saved-objects",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "compatibilityMode": {
                    "default": false,
                    "description": "Apply various adjustments to the saved objects that are being copied to maintain compatibility between different Kibana versions. Use this option only if you encounter issues with copied saved objects. This option cannot be used with the `createNewCopies` option.",
                    "type": "boolean"
                  },
                  "createNewCopies": {
                    "default": true,
                    "description": "Create new copies of saved objects, regenerate each object identifier, and reset the origin. When used, potential conflict errors are avoided.  This option cannot be used with the `overwrite` and `compatibilityMode` options.",
                    "type": "boolean"
                  },
                  "includeReferences": {
                    "default": false,
                    "description": "When set to true, all saved objects related to the specified saved objects will also be copied into the target spaces.",
                    "type": "boolean"
                  },
                  "objects": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "description": "The identifier of the saved object to copy.",
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of the saved object to copy.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "overwrite": {
                    "default": false,
                    "description": "When set to true, all conflicts are automatically overridden. When a saved object with a matching type and identifier exists in the target space, that version is replaced with the version from the source space. This option cannot be used with the `createNewCopies` option.",
                    "type": "boolean"
                  },
                  "spaces": {
                    "items": {
                      "description": "The identifiers of the spaces where you want to copy the specified objects.",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "spaces",
                  "objects"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {},
        "summary": "Copy saved objects between spaces",
        "tags": [
          "spaces"
        ]
      }
    },
    "/api/spaces/_disable_legacy_url_aliases": {
      "post": {
        "operationId": "post-spaces-disable-legacy-url-aliases",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "aliases": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "sourceId": {
                          "description": "The alias source object identifier. This is the legacy object identifier.",
                          "type": "string"
                        },
                        "targetSpace": {
                          "description": "The space where the alias target object exists.",
                          "type": "string"
                        },
                        "targetType": {
                          "description": "The type of alias target object. ",
                          "type": "string"
                        }
                      },
                      "required": [
                        "targetSpace",
                        "targetType",
                        "sourceId"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "aliases"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {},
        "summary": "Disable legacy URL aliases",
        "tags": [
          "spaces"
        ]
      }
    },
    "/api/spaces/_get_shareable_references": {
      "post": {
        "description": "Collect references and space contexts for saved objects.",
        "operationId": "post-spaces-get-shareable-references",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "objects": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "objects"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {},
        "summary": "Get shareable references",
        "tags": [
          "spaces"
        ]
      }
    },
    "/api/spaces/_resolve_copy_saved_objects_errors": {
      "post": {
        "description": "Overwrite saved objects that are returned as errors from the copy saved objects to space API.<br/><br/>[Required authorization] Route required privileges: ALL of [copySavedObjectsToSpaces].",
        "operationId": "post-spaces-resolve-copy-saved-objects-errors",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "compatibilityMode": {
                    "default": false,
                    "type": "boolean"
                  },
                  "createNewCopies": {
                    "default": true,
                    "type": "boolean"
                  },
                  "includeReferences": {
                    "default": false,
                    "type": "boolean"
                  },
                  "objects": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "retries": {
                    "additionalProperties": {
                      "items": {
                        "additionalProperties": false,
                        "properties": {
                          "createNewCopy": {
                            "description": "Creates new copies of the saved objects, regenerates each object ID, and resets the origin.",
                            "type": "boolean"
                          },
                          "destinationId": {
                            "description": "Specifies the destination identifier that the copied object should have, if different from the current identifier.",
                            "type": "string"
                          },
                          "id": {
                            "description": "The saved object identifier.",
                            "type": "string"
                          },
                          "ignoreMissingReferences": {
                            "description": "When set to true, any missing references errors are ignored.",
                            "type": "boolean"
                          },
                          "overwrite": {
                            "default": false,
                            "description": "When set to true, the saved object from the source space overwrites the conflicting object in the destination space.",
                            "type": "boolean"
                          },
                          "type": {
                            "description": "The saved object type.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ],
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "type": "object"
                  }
                },
                "required": [
                  "retries",
                  "objects"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {},
        "summary": "Resolve conflicts copying saved objects",
        "tags": []
      }
    },
    "/api/spaces/_update_objects_spaces": {
      "post": {
        "description": "Update one or more saved objects to add or remove them from some spaces.",
        "operationId": "post-spaces-update-objects-spaces",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "objects": {
                    "items": {
                      "additionalProperties": false,
                      "properties": {
                        "id": {
                          "description": "The identifier of the saved object to update.",
                          "type": "string"
                        },
                        "type": {
                          "description": "The type of the saved object to update.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "id"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "spacesToAdd": {
                    "items": {
                      "description": "The identifiers of the spaces the saved objects should be added to or removed from.",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "spacesToRemove": {
                    "items": {
                      "description": "The identifiers of the spaces the saved objects should be added to or removed from.",
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "objects",
                  "spacesToAdd",
                  "spacesToRemove"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {},
        "summary": "Update saved objects in spaces",
        "tags": [
          "spaces"
        ]
      }
    },
    "/api/spaces/space": {
      "get": {
        "operationId": "get-spaces-space",
        "parameters": [
          {
            "description": "Specifies which authorization checks are applied to the API call. The default value is `any`.",
            "in": "query",
            "name": "purpose",
            "required": false,
            "schema": {
              "enum": [
                "any",
                "copySavedObjectsIntoSpace",
                "shareSavedObjectsIntoSpace"
              ],
              "type": "string"
            }
          },
          {
            "description": "When enabled, the API returns any spaces that the user is authorized to access in any capacity and each space will contain the purposes for which the user is authorized. This can be useful to determine which spaces a user can read but not take a specific action in. If the security plugin is not enabled, this parameter has no effect, since no authorization checks take place. This parameter cannot be used in with the `purpose` parameter.",
            "in": "query",
            "name": "include_authorized_purposes",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "items": {},
                  "type": "array"
                },
                {
                  "type": "boolean"
                },
                {
                  "type": "number"
                },
                {
                  "type": "object"
                },
                {
                  "type": "string"
                }
              ],
              "nullable": true,
              "oneOf": [
                {
                  "enum": [
                    false
                  ],
                  "type": "boolean",
                  "x-oas-optional": true
                },
                {
                  "type": "boolean",
                  "x-oas-optional": true
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Get all spaces",
        "tags": [
          "spaces"
        ]
      },
      "post": {
        "operationId": "post-spaces-space",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "_reserved": {
                    "type": "boolean"
                  },
                  "color": {
                    "description": "The hexadecimal color code used in the space avatar. By default, the color is automatically generated from the space name.",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description for the space.",
                    "type": "string"
                  },
                  "disabledFeatures": {
                    "default": [],
                    "items": {
                      "description": "The list of features that are turned off in the space.",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "id": {
                    "description": "The space ID that is part of the Kibana URL when inside the space. Space IDs are limited to lowercase alphanumeric, underscore, and hyphen characters (a-z, 0-9, _, and -). You are cannot change the ID with the update operation.",
                    "type": "string"
                  },
                  "imageUrl": {
                    "description": "The data-URL encoded image to display in the space avatar. If specified, initials will not be displayed and the color will be visible as the background color for transparent images. For best results, your image should be 64x64. Images will not be optimized by this API call, so care should be taken when using custom images.",
                    "type": "string"
                  },
                  "initials": {
                    "description": "One or two characters that are shown in the space avatar. By default, the initials are automatically generated from the space name.",
                    "maxLength": 2,
                    "type": "string"
                  },
                  "name": {
                    "description": "The display name for the space. ",
                    "minLength": 1,
                    "type": "string"
                  },
                  "solution": {
                    "enum": [
                      "security",
                      "oblt",
                      "es",
                      "classic"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Create a space",
        "tags": [
          "spaces"
        ]
      }
    },
    "/api/spaces/space/{id}": {
      "delete": {
        "description": "When you delete a space, all saved objects that belong to the space are automatically deleted, which is permanent and cannot be undone.",
        "operationId": "delete-spaces-space-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The space identifier.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Indicates a successful call."
          },
          "404": {
            "description": "Indicates that the request failed."
          }
        },
        "summary": "Delete a space",
        "tags": [
          "spaces"
        ]
      },
      "get": {
        "operationId": "get-spaces-space-id",
        "parameters": [
          {
            "description": "The space identifier.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Get a space",
        "tags": [
          "spaces"
        ]
      },
      "put": {
        "operationId": "put-spaces-space-id",
        "parameters": [
          {
            "description": "A required header to protect against CSRF attacks",
            "in": "header",
            "name": "kbn-xsrf",
            "required": true,
            "schema": {
              "example": "true",
              "type": "string"
            }
          },
          {
            "description": "The space identifier. You are unable to change the ID with the update operation.",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "additionalProperties": false,
                "properties": {
                  "_reserved": {
                    "type": "boolean"
                  },
                  "color": {
                    "description": "The hexadecimal color code used in the space avatar. By default, the color is automatically generated from the space name.",
                    "type": "string"
                  },
                  "description": {
                    "description": "A description for the space.",
                    "type": "string"
                  },
                  "disabledFeatures": {
                    "default": [],
                    "items": {
                      "description": "The list of features that are turned off in the space.",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "id": {
                    "description": "The space ID that is part of the Kibana URL when inside the space. Space IDs are limited to lowercase alphanumeric, underscore, and hyphen characters (a-z, 0-9, _, and -). You are cannot change the ID with the update operation.",
                    "type": "string"
                  },
                  "imageUrl": {
                    "description": "The data-URL encoded image to display in the space avatar. If specified, initials will not be displayed and the color will be visible as the background color for transparent images. For best results, your image should be 64x64. Images will not be optimized by this API call, so care should be taken when using custom images.",
                    "type": "string"
                  },
                  "initials": {
                    "description": "One or two characters that are shown in the space avatar. By default, the initials are automatically generated from the space name.",
                    "maxLength": 2,
                    "type": "string"
                  },
                  "name": {
                    "description": "The display name for the space. ",
                    "minLength": 1,
                    "type": "string"
                  },
                  "solution": {
                    "enum": [
                      "security",
                      "oblt",
                      "es",
                      "classic"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ],
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Indicates a successful call."
          }
        },
        "summary": "Update a space",
        "tags": [
          "spaces"
        ]
      }
    },
    "/api/status": {
      "get": {
        "operationId": "get-status",
        "parameters": [
          {
            "description": "Set to \"true\" to get the response in v7 format.",
            "in": "query",
            "name": "v7format",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Set to \"true\" to get the response in v8 format.",
            "in": "query",
            "name": "v8format",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/core_status_response"
                    },
                    {
                      "$ref": "#/components/schemas/core_status_redactedResponse"
                    }
                  ],
                  "description": "Kibana's operational status. A minimal response is sent for unauthorized users."
                }
              }
            },
            "description": "Overall status is OK and Kibana should be functioning normally."
          },
          "503": {
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/core_status_response"
                    },
                    {
                      "$ref": "#/components/schemas/core_status_redactedResponse"
                    }
                  ],
                  "description": "Kibana's operational status. A minimal response is sent for unauthorized users."
                }
              }
            },
            "description": "Kibana or some of it's essential services are unavailable. Kibana may be degraded or unavailable."
          }
        },
        "summary": "Get Kibana's current status",
        "tags": [
          "system"
        ]
      }
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "servers": [
    {
      "url": "http://localhost:5622"
    }
  ],
  "tags": [
    {
      "name": "alerting"
    },
    {
      "name": "connectors"
    },
    {
      "name": "Dashboards"
    },
    {
      "name": "roles"
    },
    {
      "name": "spaces"
    },
    {
      "name": "system"
    }
  ]
}