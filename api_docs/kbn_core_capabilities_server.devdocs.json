{
  "id": "@kbn/core-capabilities-server",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "@kbn/core-capabilities-server",
        "id": "def-server.CapabilitiesSetup",
        "type": "Interface",
        "tags": [],
        "label": "CapabilitiesSetup",
        "description": [
          "\nAPIs to manage the {@link Capabilities} that will be used by the application.\n\nPlugins relying on capabilities to toggle some of their features should register them during the setup phase\nusing the `registerProvider` method.\n\nPlugins having the responsibility to restrict capabilities depending on a given context should register\ntheir capabilities switcher using the `registerSwitcher` method.\n\nRefers to the methods documentation for complete description and examples.\n"
        ],
        "path": "src/core/packages/capabilities/server/src/contracts.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-capabilities-server",
            "id": "def-server.CapabilitiesSetup.registerProvider",
            "type": "Function",
            "tags": [],
            "label": "registerProvider",
            "description": [
              "\nRegister a {@link CapabilitiesProvider} to be used to provide {@link Capabilities}\nwhen resolving them.\n"
            ],
            "signature": [
              "(provider: ",
              "CapabilitiesProvider",
              ") => void"
            ],
            "path": "src/core/packages/capabilities/server/src/contracts.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-capabilities-server",
                "id": "def-server.CapabilitiesSetup.registerProvider.$1",
                "type": "Function",
                "tags": [],
                "label": "provider",
                "description": [],
                "signature": [
                  "CapabilitiesProvider"
                ],
                "path": "src/core/packages/capabilities/server/src/contracts.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-capabilities-server",
            "id": "def-server.CapabilitiesSetup.registerSwitcher",
            "type": "Function",
            "tags": [],
            "label": "registerSwitcher",
            "description": [
              "\nRegister a {@link CapabilitiesSwitcher} to be used to change the default state\nof the {@link Capabilities} entries when resolving them.\n\nA capabilities switcher can only change the state of existing capabilities.\nCapabilities added or removed when invoking the switcher will be ignored.\n"
            ],
            "signature": [
              "(switcher: ",
              "CapabilitiesSwitcher",
              ", options: ",
              "CapabilitiesSwitcherOptions",
              ") => void"
            ],
            "path": "src/core/packages/capabilities/server/src/contracts.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-capabilities-server",
                "id": "def-server.CapabilitiesSetup.registerSwitcher.$1",
                "type": "Function",
                "tags": [],
                "label": "switcher",
                "description": [],
                "signature": [
                  "CapabilitiesSwitcher"
                ],
                "path": "src/core/packages/capabilities/server/src/contracts.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/core-capabilities-server",
                "id": "def-server.CapabilitiesSetup.registerSwitcher.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "CapabilitiesSwitcherOptions"
                ],
                "path": "src/core/packages/capabilities/server/src/contracts.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-capabilities-server",
        "id": "def-server.CapabilitiesStart",
        "type": "Interface",
        "tags": [],
        "label": "CapabilitiesStart",
        "description": [
          "\nAPIs to access the application {@link Capabilities}.\n"
        ],
        "path": "src/core/packages/capabilities/server/src/contracts.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-capabilities-server",
            "id": "def-server.CapabilitiesStart.resolveCapabilities",
            "type": "Function",
            "tags": [],
            "label": "resolveCapabilities",
            "description": [
              "\nResolve the {@link Capabilities} to be used for given request\n"
            ],
            "signature": [
              "(request: ",
              "KibanaRequest",
              "<unknown, unknown, unknown, any>, options: ",
              "ResolveCapabilitiesOptions",
              ") => Promise<",
              "Capabilities",
              ">"
            ],
            "path": "src/core/packages/capabilities/server/src/contracts.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-capabilities-server",
                "id": "def-server.CapabilitiesStart.resolveCapabilities.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [
                  "The request to resolve capabilities for"
                ],
                "signature": [
                  "KibanaRequest",
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "src/core/packages/capabilities/server/src/contracts.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/core-capabilities-server",
                "id": "def-server.CapabilitiesStart.resolveCapabilities.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "ResolveCapabilitiesOptions"
                ],
                "path": "src/core/packages/capabilities/server/src/contracts.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-capabilities-server",
        "id": "def-server.CapabilitiesSwitcherOptions",
        "type": "Interface",
        "tags": [],
        "label": "CapabilitiesSwitcherOptions",
        "description": [
          "\nOptions for the {@link CapabilitiesSetup.registerSwitcher} API.\n"
        ],
        "path": "src/core/packages/capabilities/server/src/contracts.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-capabilities-server",
            "id": "def-server.CapabilitiesSwitcherOptions.capabilityPath",
            "type": "CompoundType",
            "tags": [],
            "label": "capabilityPath",
            "description": [
              "\nThe path(s) of capabilities the switcher may alter. The '*' wildcard is supported as a suffix only.\n\nE.g. capabilityPath: \"myPlugin.*\" or capabilityPath: \"myPlugin.myKey\""
            ],
            "signature": [
              "string | string[]"
            ],
            "path": "src/core/packages/capabilities/server/src/contracts.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-capabilities-server",
        "id": "def-server.ResolveCapabilitiesOptions",
        "type": "Interface",
        "tags": [],
        "label": "ResolveCapabilitiesOptions",
        "description": [
          "\nOptions for {@link CapabilitiesStart.resolveCapabilities}.\n"
        ],
        "path": "src/core/packages/capabilities/server/src/contracts.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-capabilities-server",
            "id": "def-server.ResolveCapabilitiesOptions.capabilityPath",
            "type": "CompoundType",
            "tags": [],
            "label": "capabilityPath",
            "description": [
              "\nThe path(s) of capabilities that the API consumer is interested in. The '*' wildcard is supported as a suffix only.\n\nE.g. capabilityPath: \"*\" or capabilityPath: \"myPlugin.*\" or capabilityPath: \"myPlugin.myKey\"\n"
            ],
            "signature": [
              "string | string[]"
            ],
            "path": "src/core/packages/capabilities/server/src/contracts.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-capabilities-server",
            "id": "def-server.ResolveCapabilitiesOptions.useDefaultCapabilities",
            "type": "CompoundType",
            "tags": [],
            "label": "useDefaultCapabilities",
            "description": [
              "\nIndicates if capability switchers are supposed to return a default set of capabilities.\n\nDefaults to `false`"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/core/packages/capabilities/server/src/contracts.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/core-capabilities-server",
        "id": "def-server.CapabilitiesProvider",
        "type": "Type",
        "tags": [],
        "label": "CapabilitiesProvider",
        "description": [
          "\nSee {@link CapabilitiesSetup}"
        ],
        "signature": [
          "() => Partial<",
          "Capabilities",
          ">"
        ],
        "path": "src/core/packages/capabilities/server/src/capabilities.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-capabilities-server",
        "id": "def-server.CapabilitiesSwitcher",
        "type": "Type",
        "tags": [],
        "label": "CapabilitiesSwitcher",
        "description": [
          "\nSee {@link CapabilitiesSetup}"
        ],
        "signature": [
          "(request: ",
          "KibanaRequest",
          "<unknown, unknown, unknown, any>, uiCapabilities: ",
          "Capabilities",
          ", useDefaultCapabilities: boolean) => ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.MaybePromise",
            "text": "MaybePromise"
          },
          "<Partial<",
          "Capabilities",
          ">>"
        ],
        "path": "src/core/packages/capabilities/server/src/capabilities.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-capabilities-server",
            "id": "def-server.CapabilitiesSwitcher.$1",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              "KibanaRequest",
              "<unknown, unknown, unknown, any>"
            ],
            "path": "src/core/packages/capabilities/server/src/capabilities.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-capabilities-server",
            "id": "def-server.CapabilitiesSwitcher.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "uiCapabilities",
            "description": [],
            "signature": [
              "{ [key: string]: Record<string, boolean | Record<string, boolean>>; navLinks: Record<string, boolean>; management: { [sectionId: string]: Record<string, boolean>; }; catalogue: Record<string, boolean>; } & { discover?: {} | undefined; dashboard?: {} | undefined; maps?: {} | undefined; visualize?: {} | undefined; }"
            ],
            "path": "src/core/packages/capabilities/server/src/capabilities.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-capabilities-server",
            "id": "def-server.CapabilitiesSwitcher.$3",
            "type": "boolean",
            "tags": [],
            "label": "useDefaultCapabilities",
            "description": [],
            "path": "src/core/packages/capabilities/server/src/capabilities.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}