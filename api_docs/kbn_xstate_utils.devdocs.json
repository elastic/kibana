{
  "id": "@kbn/xstate-utils",
  "client": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "@kbn/xstate-utils",
        "id": "def-public.createConsoleInspector",
        "type": "Function",
        "tags": [],
        "label": "createConsoleInspector",
        "description": [],
        "signature": [
          "() => (inspectionEvent: InspectionEvent) => void"
        ],
        "path": "packages/kbn-xstate-utils/src/console_inspector.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/xstate-utils",
        "id": "def-public.createNotificationChannel",
        "type": "Function",
        "tags": [],
        "label": "createNotificationChannel",
        "description": [],
        "signature": [
          "<TContext, TEvent extends ",
          "EventObject",
          ", TSentEvent>(shouldReplayLastEvent?: boolean) => ",
          {
            "pluginId": "@kbn/xstate-utils",
            "scope": "public",
            "docId": "kibKbnXstateUtilsPluginApi",
            "section": "def-public.NotificationChannel",
            "text": "NotificationChannel"
          },
          "<TContext, TEvent, TSentEvent>"
        ],
        "path": "packages/kbn-xstate-utils/src/notification_channel.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/xstate-utils",
            "id": "def-public.createNotificationChannel.$1",
            "type": "boolean",
            "tags": [],
            "label": "shouldReplayLastEvent",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "packages/kbn-xstate-utils/src/notification_channel.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/xstate-utils",
        "id": "def-public.getDevToolsOptions",
        "type": "Function",
        "tags": [],
        "label": "getDevToolsOptions",
        "description": [],
        "signature": [
          "() => boolean | object"
        ],
        "path": "packages/kbn-xstate-utils/src/dev_tools.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/xstate-utils",
        "id": "def-public.isDevMode",
        "type": "Function",
        "tags": [],
        "label": "isDevMode",
        "description": [],
        "signature": [
          "() => boolean"
        ],
        "path": "packages/kbn-xstate-utils/src/dev_tools.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/xstate-utils",
        "id": "def-public.sendIfDefined",
        "type": "Function",
        "tags": [],
        "label": "sendIfDefined",
        "description": [],
        "signature": [
          "<TSentEvent extends ",
          "EventObject",
          " = ",
          "AnyEventObject",
          ">(target: string | ",
          "ActorRef",
          "<TSentEvent, any>) => <TContext, TEvent extends ",
          "EventObject",
          ">(eventExpr: ",
          "Expr",
          "<TContext, TEvent, TSentEvent | null | undefined>, options?: ",
          "SendActionOptions",
          "<TContext, TEvent> | undefined) => ",
          "PureAction",
          "<TContext, TEvent, TEvent>"
        ],
        "path": "packages/kbn-xstate-utils/src/actions.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/xstate-utils",
            "id": "def-public.sendIfDefined.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "target",
            "description": [],
            "signature": [
              "string | ",
              "ActorRef",
              "<TSentEvent, any>"
            ],
            "path": "packages/kbn-xstate-utils/src/actions.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "@kbn/xstate-utils",
        "id": "def-public.NotificationChannel",
        "type": "Interface",
        "tags": [],
        "label": "NotificationChannel",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/xstate-utils",
            "scope": "public",
            "docId": "kibKbnXstateUtilsPluginApi",
            "section": "def-public.NotificationChannel",
            "text": "NotificationChannel"
          },
          "<TContext, TEvent, TSentEvent>"
        ],
        "path": "packages/kbn-xstate-utils/src/notification_channel.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/xstate-utils",
            "id": "def-public.NotificationChannel.createService",
            "type": "Function",
            "tags": [],
            "label": "createService",
            "description": [],
            "signature": [
              "() => ",
              "Subscribable",
              "<TSentEvent>"
            ],
            "path": "packages/kbn-xstate-utils/src/notification_channel.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/xstate-utils",
            "id": "def-public.NotificationChannel.notify",
            "type": "Function",
            "tags": [],
            "label": "notify",
            "description": [],
            "signature": [
              "(eventExpr: ",
              "Expr",
              "<TContext, TEvent, TSentEvent | undefined>) => (context: TContext, event: TEvent, meta: ",
              "ActionMeta",
              "<TContext, TEvent, ",
              "BaseActionObject",
              ">) => void"
            ],
            "path": "packages/kbn-xstate-utils/src/notification_channel.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/xstate-utils",
                "id": "def-public.NotificationChannel.notify.$1",
                "type": "Function",
                "tags": [],
                "label": "eventExpr",
                "description": [],
                "signature": [
                  "Expr",
                  "<TContext, TEvent, TSentEvent | undefined>"
                ],
                "path": "packages/kbn-xstate-utils/src/notification_channel.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/xstate-utils",
        "id": "def-public.MatchedState",
        "type": "Type",
        "tags": [],
        "label": "MatchedState",
        "description": [],
        "signature": [
          "TState extends ",
          "State",
          "<any, infer TEvent extends ",
          "EventObject",
          ", infer TStateSchema extends ",
          "StateSchema",
          "<any>, infer TTypestate extends ",
          "Typestate",
          "<any>, infer TResolvedTypesMeta> ? ",
          "State",
          "<(TTypestate extends any ? { value: TStateValue; context: any; } extends TTypestate ? TTypestate : never : never)[\"context\"], TEvent, TStateSchema, TTypestate, TResolvedTypesMeta> & { value: TStateValue; } : never"
        ],
        "path": "packages/kbn-xstate-utils/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/xstate-utils",
        "id": "def-public.MatchedStateFromActor",
        "type": "Type",
        "tags": [],
        "label": "MatchedStateFromActor",
        "description": [],
        "signature": [
          "EmittedFrom",
          "<TActorRef> extends ",
          "State",
          "<any, infer TEvent extends ",
          "EventObject",
          ", infer TStateSchema extends ",
          "StateSchema",
          "<any>, infer TTypestate extends ",
          "Typestate",
          "<any>, infer TResolvedTypesMeta> ? ",
          "State",
          "<(TTypestate extends any ? { value: TStateValue; context: any; } extends TTypestate ? TTypestate : never : never)[\"context\"], TEvent, TStateSchema, TTypestate, TResolvedTypesMeta> & { value: TStateValue; } : never"
        ],
        "path": "packages/kbn-xstate-utils/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/xstate-utils",
        "id": "def-public.OmitDeprecatedState",
        "type": "Type",
        "tags": [],
        "label": "OmitDeprecatedState",
        "description": [],
        "signature": [
          "{ [P in Exclude<keyof T, \"state\">]: T[P]; }"
        ],
        "path": "packages/kbn-xstate-utils/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}