{
  "id": "@kbn/react-kibana-context-render",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "@kbn/react-kibana-context-render",
        "id": "def-common.KibanaRenderContextProvider",
        "type": "Function",
        "tags": [],
        "label": "KibanaRenderContextProvider",
        "description": [
          "\nThe `KibanaRenderContextProvider` provides the necessary context for an out-of-current\nReact render, such as using `ReactDOM.render()`."
        ],
        "signature": [
          "({ children, ...props }: React.PropsWithChildren<",
          {
            "pluginId": "@kbn/react-kibana-context-render",
            "scope": "common",
            "docId": "kibKbnReactKibanaContextRenderPluginApi",
            "section": "def-common.KibanaRenderContextProviderProps",
            "text": "KibanaRenderContextProviderProps"
          },
          ">) => React.JSX.Element"
        ],
        "path": "src/platform/packages/shared/react/kibana_context/render/render_provider.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/react-kibana-context-render",
            "id": "def-common.KibanaRenderContextProvider.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{ children, ...props }",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              {
                "pluginId": "@kbn/react-kibana-context-render",
                "scope": "common",
                "docId": "kibKbnReactKibanaContextRenderPluginApi",
                "section": "def-common.KibanaRenderContextProviderProps",
                "text": "KibanaRenderContextProviderProps"
              },
              ">"
            ],
            "path": "src/platform/packages/shared/react/kibana_context/render/render_provider.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/react-kibana-context-render",
        "id": "def-common.KibanaRenderContextProviderProps",
        "type": "Type",
        "tags": [],
        "label": "KibanaRenderContextProviderProps",
        "description": [
          "Props for the KibanaContextProvider"
        ],
        "signature": [
          "{ i18n: ",
          "I18nStart",
          "; analytics?: Pick<",
          "AnalyticsServiceStart",
          ", \"reportEvent\"> | undefined; executionContext?: ",
          "ExecutionContextSetup",
          " | undefined; theme: ",
          {
            "pluginId": "@kbn/react-kibana-context-common",
            "scope": "common",
            "docId": "kibKbnReactKibanaContextCommonPluginApi",
            "section": "def-common.ThemeServiceStart",
            "text": "ThemeServiceStart"
          },
          "; userProfile?: Pick<",
          "UserProfileService",
          ", \"getUserProfile$\"> | undefined; modify?: ",
          "RecursivePartial",
          "<",
          "EuiThemeShape",
          "> | undefined; colorMode?: ",
          "EuiThemeColorMode",
          " | undefined; }"
        ],
        "path": "src/platform/packages/shared/react/kibana_context/render/render_provider.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}