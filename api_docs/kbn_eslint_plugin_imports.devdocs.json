{
  "id": "@kbn/eslint-plugin-imports",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "@kbn/eslint-plugin-imports",
        "id": "def-common.getImportResolver",
        "type": "Function",
        "tags": [],
        "label": "getImportResolver",
        "description": [
          "\nCreate a request resolver for ESLint, requires a PluginPackageResolver from @kbn/repo-packages which will\nbe created and cached on contextServices automatically.\n\nAll import requests in the repository should return a result, if they don't it's a bug\nwhich should be caught by the `@kbn/import/no_unresolved` rule, which should never be disabled. If you need help\nadding support for an import style please reach out to operations."
        ],
        "signature": [
          "(context: ",
          "Rule",
          ".RuleContext) => ",
          {
            "pluginId": "@kbn/import-resolver",
            "scope": "common",
            "docId": "kibKbnImportResolverPluginApi",
            "section": "def-common.ImportResolver",
            "text": "ImportResolver"
          }
        ],
        "path": "packages/kbn-eslint-plugin-imports/src/get_import_resolver.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/eslint-plugin-imports",
            "id": "def-common.getImportResolver.$1",
            "type": "Object",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "Rule",
              ".RuleContext"
            ],
            "path": "packages/kbn-eslint-plugin-imports/src/get_import_resolver.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}