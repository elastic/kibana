{
  "id": "@kbn/server-route-repository",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.createServerRouteFactory",
        "type": "Function",
        "tags": [],
        "label": "createServerRouteFactory",
        "description": [],
        "signature": [
          "() => <TEndpoint extends string, TReturnType, TRouteParamsRT extends ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " | undefined = undefined>(route: ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.ServerRoute",
            "text": "ServerRoute"
          },
          "<TEndpoint, TRouteParamsRT, TRouteHandlerResources, TReturnType, TRouteCreateOptions>) => Record<TEndpoint, ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.ServerRoute",
            "text": "ServerRoute"
          },
          "<TEndpoint, TRouteParamsRT, TRouteHandlerResources, TReturnType, TRouteCreateOptions>>"
        ],
        "path": "packages/kbn-server-route-repository/src/create_server_route_factory.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.decodeRequestParams",
        "type": "Function",
        "tags": [],
        "label": "decodeRequestParams",
        "description": [],
        "signature": [
          "(params: KibanaRequestParams, paramsRt: T) => ",
          "OutputOf",
          "<T>"
        ],
        "path": "packages/kbn-server-route-repository/src/decode_request_params.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/server-route-repository",
            "id": "def-server.decodeRequestParams.$1",
            "type": "Object",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "KibanaRequestParams"
            ],
            "path": "packages/kbn-server-route-repository/src/decode_request_params.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/server-route-repository",
            "id": "def-server.decodeRequestParams.$2",
            "type": "Uncategorized",
            "tags": [],
            "label": "paramsRt",
            "description": [],
            "signature": [
              "T"
            ],
            "path": "packages/kbn-server-route-repository/src/decode_request_params.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.formatRequest",
        "type": "Function",
        "tags": [],
        "label": "formatRequest",
        "description": [],
        "signature": [
          "(endpoint: string, pathParams: Record<string, any>) => { method: Method; pathname: string; version: string; }"
        ],
        "path": "packages/kbn-server-route-repository-utils/src/format_request.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/server-route-repository",
            "id": "def-server.formatRequest.$1",
            "type": "string",
            "tags": [],
            "label": "endpoint",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "packages/kbn-server-route-repository-utils/src/format_request.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/server-route-repository",
            "id": "def-server.formatRequest.$2",
            "type": "Object",
            "tags": [],
            "label": "pathParams",
            "description": [],
            "signature": [
              "Record<string, any>"
            ],
            "path": "packages/kbn-server-route-repository-utils/src/format_request.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.parseEndpoint",
        "type": "Function",
        "tags": [],
        "label": "parseEndpoint",
        "description": [],
        "signature": [
          "(endpoint: string) => { method: Method; pathname: string; version: string; }"
        ],
        "path": "packages/kbn-server-route-repository-utils/src/parse_endpoint.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/server-route-repository",
            "id": "def-server.parseEndpoint.$1",
            "type": "string",
            "tags": [],
            "label": "endpoint",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "packages/kbn-server-route-repository-utils/src/parse_endpoint.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.registerRoutes",
        "type": "Function",
        "tags": [],
        "label": "registerRoutes",
        "description": [],
        "signature": [
          "({\n  core,\n  repository,\n  logger,\n  dependencies,\n}: { core: ",
          {
            "pluginId": "@kbn/core-lifecycle-server",
            "scope": "server",
            "docId": "kibKbnCoreLifecycleServerPluginApi",
            "section": "def-server.CoreSetup",
            "text": "CoreSetup"
          },
          "<object, unknown>; repository: Record<string, { endpoint: string; params?: any; handler: ({}: any) => Promise<any>; } & ",
          "ServerRouteCreateOptions",
          ">; logger: ",
          {
            "pluginId": "@kbn/logging",
            "scope": "common",
            "docId": "kibKbnLoggingPluginApi",
            "section": "def-common.Logger",
            "text": "Logger"
          },
          "; dependencies: Record<string, any>; }) => void"
        ],
        "path": "packages/kbn-server-route-repository/src/register_routes.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/server-route-repository",
            "id": "def-server.registerRoutes.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  core,\n  repository,\n  logger,\n  dependencies,\n}",
            "description": [],
            "path": "packages/kbn-server-route-repository/src/register_routes.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/server-route-repository",
                "id": "def-server.registerRoutes.$1.core",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-server",
                    "scope": "server",
                    "docId": "kibKbnCoreLifecycleServerPluginApi",
                    "section": "def-server.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<object, unknown>"
                ],
                "path": "packages/kbn-server-route-repository/src/register_routes.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/server-route-repository",
                "id": "def-server.registerRoutes.$1.repository",
                "type": "Object",
                "tags": [],
                "label": "repository",
                "description": [],
                "signature": [
                  "{ [x: string]: { endpoint: string; params?: any; handler: ({}: any) => Promise<any>; } & ",
                  "ServerRouteCreateOptions",
                  "; }"
                ],
                "path": "packages/kbn-server-route-repository/src/register_routes.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/server-route-repository",
                "id": "def-server.registerRoutes.$1.logger",
                "type": "Object",
                "tags": [],
                "label": "logger",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/logging",
                    "scope": "common",
                    "docId": "kibKbnLoggingPluginApi",
                    "section": "def-common.Logger",
                    "text": "Logger"
                  }
                ],
                "path": "packages/kbn-server-route-repository/src/register_routes.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/server-route-repository",
                "id": "def-server.registerRoutes.$1.dependencies",
                "type": "Object",
                "tags": [],
                "label": "dependencies",
                "description": [],
                "signature": [
                  "{ [x: string]: any; }"
                ],
                "path": "packages/kbn-server-route-repository/src/register_routes.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.RouteState",
        "type": "Interface",
        "tags": [],
        "label": "RouteState",
        "description": [],
        "path": "packages/kbn-server-route-repository/src/typings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/server-route-repository",
            "id": "def-server.RouteState.Unnamed",
            "type": "IndexSignature",
            "tags": [],
            "label": "[endpoint: string]: any",
            "description": [],
            "signature": [
              "[endpoint: string]:  any"
            ],
            "path": "packages/kbn-server-route-repository/src/typings.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.ClientRequestParamsOf",
        "type": "Type",
        "tags": [],
        "label": "ClientRequestParamsOf",
        "description": [],
        "signature": [
          "TServerRouteRepository[TEndpoint] extends { endpoint: any; params?: infer TRouteParamsRT extends ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " | undefined | undefined; handler: ({}: any) => Promise<any>; } & ",
          "ServerRouteCreateOptions",
          " ? TRouteParamsRT extends ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " ? ClientRequestParamsOfType<TRouteParamsRT> : {} : never"
        ],
        "path": "packages/kbn-server-route-repository/src/typings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.DecodedRequestParamsOf",
        "type": "Type",
        "tags": [],
        "label": "DecodedRequestParamsOf",
        "description": [],
        "signature": [
          "TServerRouteRepository[TEndpoint] extends { endpoint: any; params?: infer TRouteParamsRT extends ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " | undefined | undefined; handler: ({}: any) => Promise<any>; } & ",
          "ServerRouteCreateOptions",
          " ? TRouteParamsRT extends ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " ? DecodedRequestParamsOfType<TRouteParamsRT> : {} : never"
        ],
        "path": "packages/kbn-server-route-repository/src/typings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.EndpointOf",
        "type": "Type",
        "tags": [],
        "label": "EndpointOf",
        "description": [],
        "signature": [
          "keyof TServerRouteRepository"
        ],
        "path": "packages/kbn-server-route-repository/src/typings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.ReturnOf",
        "type": "Type",
        "tags": [],
        "label": "ReturnOf",
        "description": [],
        "signature": [
          "TServerRouteRepository[TEndpoint] extends { endpoint: any; params?: any; handler: ({}: any) => Promise<infer TReturnType>; } & ",
          "ServerRouteCreateOptions",
          " ? TReturnType extends ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<infer TWrappedResponseType extends string | Record<string, any> | Error | Buffer | ",
          "Stream",
          " | { message: string | Error; attributes?: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.ResponseErrorAttributes",
            "text": "ResponseErrorAttributes"
          },
          " | undefined; } | undefined> ? TWrappedResponseType : TReturnType : never"
        ],
        "path": "packages/kbn-server-route-repository/src/typings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.RouteParamsRT",
        "type": "Type",
        "tags": [],
        "label": "RouteParamsRT",
        "description": [],
        "signature": [
          "Omit<",
          "Type",
          "<{ path?: any; query?: any; body?: any; }, { path?: any; query?: any; body?: any; }, unknown>, \"encode\" | \"asEncoder\"> & { encode: ",
          "Encode",
          "<any, any>; asEncoder: () => ",
          "Encoder",
          "<any, any>; }"
        ],
        "path": "packages/kbn-server-route-repository/src/typings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.RouteRepositoryClient",
        "type": "Type",
        "tags": [],
        "label": "RouteRepositoryClient",
        "description": [],
        "signature": [
          "<TEndpoint extends keyof TServerRouteRepository>(endpoint: TEndpoint, ...args: MaybeOptionalArgs<",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.ClientRequestParamsOf",
            "text": "ClientRequestParamsOf"
          },
          "<TServerRouteRepository, TEndpoint> & TAdditionalClientOptions>) => Promise<",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.ReturnOf",
            "text": "ReturnOf"
          },
          "<TServerRouteRepository, TEndpoint>>"
        ],
        "path": "packages/kbn-server-route-repository/src/typings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/server-route-repository",
            "id": "def-server.RouteRepositoryClient.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "endpoint",
            "description": [],
            "signature": [
              "TEndpoint"
            ],
            "path": "packages/kbn-server-route-repository/src/typings.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/server-route-repository",
            "id": "def-server.RouteRepositoryClient.$2",
            "type": "Uncategorized",
            "tags": [],
            "label": "args",
            "description": [],
            "signature": [
              "RequiredKeys",
              "<",
              {
                "pluginId": "@kbn/server-route-repository",
                "scope": "server",
                "docId": "kibKbnServerRouteRepositoryPluginApi",
                "section": "def-server.ClientRequestParamsOf",
                "text": "ClientRequestParamsOf"
              },
              "<TServerRouteRepository, TEndpoint> & TAdditionalClientOptions> extends never ? [] | [",
              {
                "pluginId": "@kbn/server-route-repository",
                "scope": "server",
                "docId": "kibKbnServerRouteRepositoryPluginApi",
                "section": "def-server.ClientRequestParamsOf",
                "text": "ClientRequestParamsOf"
              },
              "<TServerRouteRepository, TEndpoint> & TAdditionalClientOptions] : [",
              {
                "pluginId": "@kbn/server-route-repository",
                "scope": "server",
                "docId": "kibKbnServerRouteRepositoryPluginApi",
                "section": "def-server.ClientRequestParamsOf",
                "text": "ClientRequestParamsOf"
              },
              "<TServerRouteRepository, TEndpoint> & TAdditionalClientOptions]"
            ],
            "path": "packages/kbn-server-route-repository/src/typings.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.ServerRoute",
        "type": "Type",
        "tags": [],
        "label": "ServerRoute",
        "description": [],
        "signature": [
          "ValidateEndpoint<TEndpoint> extends true ? { endpoint: TEndpoint; params?: TRouteParamsRT | undefined; handler: ({}: TRouteHandlerResources & (TRouteParamsRT extends ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " ? DecodedRequestParamsOfType<TRouteParamsRT> : {})) => Promise<TReturnType>; } & TRouteCreateOptions : never"
        ],
        "path": "packages/kbn-server-route-repository/src/typings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.ServerRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "ServerRouteRepository",
        "description": [],
        "signature": [
          "{ [x: string]: { endpoint: string; params?: ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " | undefined; handler: ({}: any) => Promise<any>; } & Record<string, any>; }"
        ],
        "path": "packages/kbn-server-route-repository/src/typings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "@kbn/server-route-repository",
        "id": "def-server.routeValidationObject",
        "type": "Object",
        "tags": [],
        "label": "routeValidationObject",
        "description": [],
        "path": "packages/kbn-server-route-repository/src/route_validation_object.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/server-route-repository",
            "id": "def-server.routeValidationObject.body",
            "type": "Object",
            "tags": [],
            "label": "body",
            "description": [
              "// `body` can be null, but `validate` expects non-nullable types\n// if any validation is defined. Not having validation currently\n// means we don't get the payload. See\n// https://github.com/elastic/kibana/issues/50179"
            ],
            "signature": [
              {
                "pluginId": "@kbn/config-schema",
                "scope": "common",
                "docId": "kibKbnConfigSchemaPluginApi",
                "section": "def-common.Type",
                "text": "Type"
              },
              "<string | Readonly<{} & {}> | null>"
            ],
            "path": "packages/kbn-server-route-repository/src/route_validation_object.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/server-route-repository",
            "id": "def-server.routeValidationObject.params",
            "type": "Object",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/config-schema",
                "scope": "common",
                "docId": "kibKbnConfigSchemaPluginApi",
                "section": "def-common.ObjectType",
                "text": "ObjectType"
              },
              "<{}>"
            ],
            "path": "packages/kbn-server-route-repository/src/route_validation_object.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/server-route-repository",
            "id": "def-server.routeValidationObject.query",
            "type": "Object",
            "tags": [],
            "label": "query",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/config-schema",
                "scope": "common",
                "docId": "kibKbnConfigSchemaPluginApi",
                "section": "def-common.ObjectType",
                "text": "ObjectType"
              },
              "<{}>"
            ],
            "path": "packages/kbn-server-route-repository/src/route_validation_object.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ]
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}