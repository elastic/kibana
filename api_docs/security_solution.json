{
  "id": "securitySolution",
  "client": {
    "classes": [
      {
        "id": "def-public.Plugin",
        "type": "Class",
        "tags": [],
        "label": "Plugin",
        "description": [],
        "signature": [
          {
            "pluginId": "securitySolution",
            "scope": "public",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-public.Plugin",
            "text": "Plugin"
          },
          " implements ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "securitySolution",
            "scope": "public",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-public.PluginSetup",
            "text": "PluginSetup"
          },
          ", ",
          {
            "pluginId": "securitySolution",
            "scope": "public",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-public.PluginStart",
            "text": "PluginStart"
          },
          ", ",
          "SetupPlugins"
        ],
        "children": [
          {
            "id": "def-public.Plugin.Unnamed",
            "type": "Function",
            "label": "Constructor",
            "signature": [
              "any"
            ],
            "description": [],
            "children": [
              {
                "id": "def-public.Plugin.Unnamed.$1",
                "type": "Object",
                "label": "initializerContext",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<object>"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/security_solution/public/plugin.tsx",
                  "lineNumber": 79
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/security_solution/public/plugin.tsx",
              "lineNumber": 79
            }
          },
          {
            "id": "def-public.Plugin.setup",
            "type": "Function",
            "label": "setup",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              "StartPlugins",
              ", ",
              {
                "pluginId": "securitySolution",
                "scope": "public",
                "docId": "kibSecuritySolutionPluginApi",
                "section": "def-public.PluginStart",
                "text": "PluginStart"
              },
              ">, plugins: ",
              "SetupPlugins",
              ") => ",
              {
                "pluginId": "securitySolution",
                "scope": "public",
                "docId": "kibSecuritySolutionPluginApi",
                "section": "def-public.PluginSetup",
                "text": "PluginSetup"
              }
            ],
            "description": [],
            "children": [
              {
                "id": "def-public.Plugin.setup.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  "StartPlugins",
                  ", ",
                  {
                    "pluginId": "securitySolution",
                    "scope": "public",
                    "docId": "kibSecuritySolutionPluginApi",
                    "section": "def-public.PluginStart",
                    "text": "PluginStart"
                  },
                  ">"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/security_solution/public/plugin.tsx",
                  "lineNumber": 103
                }
              },
              {
                "id": "def-public.Plugin.setup.$2",
                "type": "Object",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "SetupPlugins"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/security_solution/public/plugin.tsx",
                  "lineNumber": 103
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/security_solution/public/plugin.tsx",
              "lineNumber": 103
            }
          },
          {
            "id": "def-public.Plugin.start",
            "type": "Function",
            "label": "start",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreStart",
                "text": "CoreStart"
              },
              ", plugins: ",
              "StartPlugins",
              ") => {}"
            ],
            "description": [],
            "children": [
              {
                "id": "def-public.Plugin.start.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/security_solution/public/plugin.tsx",
                  "lineNumber": 353
                }
              },
              {
                "id": "def-public.Plugin.start.$2",
                "type": "Object",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "StartPlugins"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/security_solution/public/plugin.tsx",
                  "lineNumber": 353
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/security_solution/public/plugin.tsx",
              "lineNumber": 353
            }
          },
          {
            "id": "def-public.Plugin.stop",
            "type": "Function",
            "label": "stop",
            "signature": [
              "() => {}"
            ],
            "description": [],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/security_solution/public/plugin.tsx",
              "lineNumber": 398
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/security_solution/public/plugin.tsx",
          "lineNumber": 75
        },
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": [],
    "setup": {
      "id": "def-public.PluginSetup",
      "type": "Interface",
      "label": "PluginSetup",
      "description": [],
      "tags": [],
      "children": [
        {
          "tags": [],
          "id": "def-public.PluginSetup.resolver",
          "type": "Function",
          "label": "resolver",
          "description": [],
          "source": {
            "path": "x-pack/plugins/security_solution/public/types.ts",
            "lineNumber": 69
          },
          "signature": [
            "() => Promise<",
            "ResolverPluginSetup",
            ">"
          ]
        }
      ],
      "source": {
        "path": "x-pack/plugins/security_solution/public/types.ts",
        "lineNumber": 68
      },
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "id": "def-public.PluginStart",
      "type": "Interface",
      "label": "PluginStart",
      "description": [],
      "tags": [],
      "children": [],
      "source": {
        "path": "x-pack/plugins/security_solution/public/types.ts",
        "lineNumber": 72
      },
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "id": "def-server.AppClient",
        "type": "Class",
        "tags": [],
        "label": "AppClient",
        "description": [],
        "children": [
          {
            "id": "def-server.AppClient.Unnamed",
            "type": "Function",
            "label": "Constructor",
            "signature": [
              "any"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.AppClient.Unnamed.$1",
                "type": "string",
                "label": "spaceId",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/security_solution/server/client/client.ts",
                  "lineNumber": 13
                }
              },
              {
                "id": "def-server.AppClient.Unnamed.$2",
                "type": "Object",
                "label": "config",
                "isRequired": true,
                "signature": [
                  "Readonly<{} & { enabled: boolean; signalsIndex: string; maxRuleImportExportSize: number; maxRuleImportPayloadBytes: number; maxTimelineImportExportSize: number; maxTimelineImportPayloadBytes: number; enableExperimental: string[]; endpointResultListDefaultFirstPageIndex: number; endpointResultListDefaultPageSize: number; alertResultListDefaultDateRange: Readonly<{} & { from: string; to: string; }>; packagerTaskInterval: string; validateArtifactDownloads: boolean; }>"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/security_solution/server/client/client.ts",
                  "lineNumber": 13
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/client/client.ts",
              "lineNumber": 13
            }
          },
          {
            "id": "def-server.AppClient.getSignalsIndex",
            "type": "Function",
            "children": [],
            "signature": [
              "() => string"
            ],
            "description": [],
            "label": "getSignalsIndex",
            "source": {
              "path": "x-pack/plugins/security_solution/server/client/client.ts",
              "lineNumber": 19
            },
            "tags": [],
            "returnComment": []
          }
        ],
        "source": {
          "path": "x-pack/plugins/security_solution/server/client/client.ts",
          "lineNumber": 10
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.Plugin",
        "type": "Class",
        "tags": [],
        "label": "Plugin",
        "description": [],
        "signature": [
          {
            "pluginId": "securitySolution",
            "scope": "server",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-server.Plugin",
            "text": "Plugin"
          },
          " implements ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "securitySolution",
            "scope": "server",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-server.PluginSetup",
            "text": "PluginSetup"
          },
          ", ",
          {
            "pluginId": "securitySolution",
            "scope": "server",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-server.PluginStart",
            "text": "PluginStart"
          },
          ", ",
          "SetupPlugins"
        ],
        "children": [
          {
            "id": "def-server.Plugin.Unnamed",
            "type": "Function",
            "label": "Constructor",
            "signature": [
              "any"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.Plugin.Unnamed.$1",
                "type": "Object",
                "label": "context",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<unknown>"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/security_solution/server/plugin.ts",
                  "lineNumber": 147
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/plugin.ts",
              "lineNumber": 147
            }
          },
          {
            "id": "def-server.Plugin.setup",
            "type": "Function",
            "label": "setup",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              "StartPlugins",
              ", ",
              {
                "pluginId": "securitySolution",
                "scope": "server",
                "docId": "kibSecuritySolutionPluginApi",
                "section": "def-server.PluginStart",
                "text": "PluginStart"
              },
              ">, plugins: ",
              "SetupPlugins",
              ") => {}"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.Plugin.setup.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  "StartPlugins",
                  ", ",
                  {
                    "pluginId": "securitySolution",
                    "scope": "server",
                    "docId": "kibSecuritySolutionPluginApi",
                    "section": "def-server.PluginStart",
                    "text": "PluginStart"
                  },
                  ">"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/security_solution/server/plugin.ts",
                  "lineNumber": 159
                }
              },
              {
                "id": "def-server.Plugin.setup.$2",
                "type": "Object",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "SetupPlugins"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/security_solution/server/plugin.ts",
                  "lineNumber": 159
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/plugin.ts",
              "lineNumber": 159
            }
          },
          {
            "id": "def-server.Plugin.start",
            "type": "Function",
            "label": "start",
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreStart",
                "text": "CoreStart"
              },
              ", plugins: ",
              "StartPlugins",
              ") => {}"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.Plugin.start.$1",
                "type": "Object",
                "label": "core",
                "isRequired": true,
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/security_solution/server/plugin.ts",
                  "lineNumber": 341
                }
              },
              {
                "id": "def-server.Plugin.start.$2",
                "type": "Object",
                "label": "plugins",
                "isRequired": true,
                "signature": [
                  "StartPlugins"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/security_solution/server/plugin.ts",
                  "lineNumber": 341
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/plugin.ts",
              "lineNumber": 341
            }
          },
          {
            "id": "def-server.Plugin.stop",
            "type": "Function",
            "label": "stop",
            "signature": [
              "() => void"
            ],
            "description": [],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/plugin.ts",
              "lineNumber": 423
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/security_solution/server/plugin.ts",
          "lineNumber": 131
        },
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "id": "def-server.buildRouteValidation",
        "type": "Function",
        "children": [
          {
            "id": "def-server.buildRouteValidation.$1",
            "type": "Uncategorized",
            "label": "schema",
            "isRequired": true,
            "signature": [
              "T"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/utils/build_validation/route_validation.ts",
              "lineNumber": 31
            }
          }
        ],
        "signature": [
          "<T extends ",
          "Mixed",
          ", A = ",
          "TypeOf",
          "<T>>(schema: T) => ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.RouteValidationFunction",
            "text": "RouteValidationFunction"
          },
          "<A>"
        ],
        "description": [],
        "label": "buildRouteValidation",
        "source": {
          "path": "x-pack/plugins/security_solution/server/utils/build_validation/route_validation.ts",
          "lineNumber": 30
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-server.buildSiemResponse",
        "type": "Function",
        "children": [
          {
            "id": "def-server.buildSiemResponse.$1",
            "type": "Object",
            "label": "response",
            "isRequired": true,
            "signature": [
              "{ custom: <T extends string | Record<string, any> | Error | { message: string | Error; attributes?: Record<string, any> | undefined; } | Buffer | ",
              "Stream",
              " | undefined>(options: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.CustomHttpResponseOptions",
                "text": "CustomHttpResponseOptions"
              },
              "<T>) => ",
              "KibanaResponse",
              "<T>; badRequest: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              ") => ",
              "KibanaResponse"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/routes/utils.ts",
              "lineNumber": 291
            }
          }
        ],
        "signature": [
          "(response: { custom: <T extends string | Record<string, any> | Error | { message: string | Error; attributes?: Record<string, any> | undefined; } | Buffer | ",
          "Stream",
          " | undefined>(options: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.CustomHttpResponseOptions",
            "text": "CustomHttpResponseOptions"
          },
          "<T>) => ",
          "KibanaResponse",
          "<T>; badRequest: (options?: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.ErrorHttpResponseOptions",
            "text": "ErrorHttpResponseOptions"
          },
          ") => ",
          "KibanaResponse"
        ],
        "description": [],
        "label": "buildSiemResponse",
        "source": {
          "path": "x-pack/plugins/security_solution/server/lib/detection_engine/routes/utils.ts",
          "lineNumber": 291
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-server.createBootstrapIndex",
        "type": "Function",
        "children": [
          {
            "id": "def-server.createBootstrapIndex.$1",
            "type": "CompoundType",
            "label": "esClient",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/create_bootstrap_index.ts",
              "lineNumber": 14
            }
          },
          {
            "id": "def-server.createBootstrapIndex.$2",
            "type": "string",
            "label": "index",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/create_bootstrap_index.ts",
              "lineNumber": 15
            }
          }
        ],
        "signature": [
          "(esClient: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          ", index: string) => Promise<unknown>"
        ],
        "description": [],
        "label": "createBootstrapIndex",
        "source": {
          "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/create_bootstrap_index.ts",
          "lineNumber": 13
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-server.deleteAllIndex",
        "type": "Function",
        "children": [
          {
            "id": "def-server.deleteAllIndex.$1",
            "type": "CompoundType",
            "label": "esClient",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/delete_all_index.ts",
              "lineNumber": 11
            }
          },
          {
            "id": "def-server.deleteAllIndex.$2",
            "type": "string",
            "label": "pattern",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/delete_all_index.ts",
              "lineNumber": 12
            }
          },
          {
            "id": "def-server.deleteAllIndex.$3",
            "type": "number",
            "label": "maxAttempts",
            "isRequired": true,
            "signature": [
              "number"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/delete_all_index.ts",
              "lineNumber": 13
            }
          }
        ],
        "signature": [
          "(esClient: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          ", pattern: string, maxAttempts?: number) => Promise<boolean>"
        ],
        "description": [],
        "label": "deleteAllIndex",
        "source": {
          "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/delete_all_index.ts",
          "lineNumber": 10
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-server.deletePolicy",
        "type": "Function",
        "children": [
          {
            "id": "def-server.deletePolicy.$1",
            "type": "CompoundType",
            "label": "esClient",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/delete_policy.ts",
              "lineNumber": 11
            }
          },
          {
            "id": "def-server.deletePolicy.$2",
            "type": "string",
            "label": "policy",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/delete_policy.ts",
              "lineNumber": 12
            }
          }
        ],
        "signature": [
          "(esClient: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          ", policy: string) => Promise<unknown>"
        ],
        "description": [],
        "label": "deletePolicy",
        "source": {
          "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/delete_policy.ts",
          "lineNumber": 10
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-server.deleteTemplate",
        "type": "Function",
        "children": [
          {
            "id": "def-server.deleteTemplate.$1",
            "type": "CompoundType",
            "label": "esClient",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/delete_template.ts",
              "lineNumber": 10
            }
          },
          {
            "id": "def-server.deleteTemplate.$2",
            "type": "string",
            "label": "name",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/delete_template.ts",
              "lineNumber": 11
            }
          }
        ],
        "signature": [
          "(esClient: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          ", name: string) => Promise<unknown>"
        ],
        "description": [],
        "label": "deleteTemplate",
        "source": {
          "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/delete_template.ts",
          "lineNumber": 9
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-server.getIndexExists",
        "type": "Function",
        "children": [
          {
            "id": "def-server.getIndexExists.$1",
            "type": "CompoundType",
            "label": "esClient",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/get_index_exists.ts",
              "lineNumber": 11
            }
          },
          {
            "id": "def-server.getIndexExists.$2",
            "type": "string",
            "label": "index",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/get_index_exists.ts",
              "lineNumber": 12
            }
          }
        ],
        "signature": [
          "(esClient: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          ", index: string) => Promise<boolean>"
        ],
        "description": [],
        "label": "getIndexExists",
        "source": {
          "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/get_index_exists.ts",
          "lineNumber": 10
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-server.getPolicyExists",
        "type": "Function",
        "children": [
          {
            "id": "def-server.getPolicyExists.$1",
            "type": "CompoundType",
            "label": "esClient",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/get_policy_exists.ts",
              "lineNumber": 11
            }
          },
          {
            "id": "def-server.getPolicyExists.$2",
            "type": "string",
            "label": "policy",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/get_policy_exists.ts",
              "lineNumber": 12
            }
          }
        ],
        "signature": [
          "(esClient: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          ", policy: string) => Promise<boolean>"
        ],
        "description": [],
        "label": "getPolicyExists",
        "source": {
          "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/get_policy_exists.ts",
          "lineNumber": 10
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-server.getTemplateExists",
        "type": "Function",
        "children": [
          {
            "id": "def-server.getTemplateExists.$1",
            "type": "CompoundType",
            "label": "esClient",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/get_template_exists.ts",
              "lineNumber": 11
            }
          },
          {
            "id": "def-server.getTemplateExists.$2",
            "type": "string",
            "label": "template",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/get_template_exists.ts",
              "lineNumber": 12
            }
          }
        ],
        "signature": [
          "(esClient: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          ", template: string) => Promise<boolean>"
        ],
        "description": [],
        "label": "getTemplateExists",
        "source": {
          "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/get_template_exists.ts",
          "lineNumber": 10
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-server.readPrivileges",
        "type": "Function",
        "children": [
          {
            "id": "def-server.readPrivileges.$1",
            "type": "Function",
            "label": "callWithRequest",
            "isRequired": true,
            "signature": [
              "CallWithRequest",
              "<{}, unknown>"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/privileges/read_privileges.ts",
              "lineNumber": 11
            }
          },
          {
            "id": "def-server.readPrivileges.$2",
            "type": "string",
            "label": "index",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/privileges/read_privileges.ts",
              "lineNumber": 12
            }
          }
        ],
        "signature": [
          "(callWithRequest: ",
          "CallWithRequest",
          "<{}, unknown>, index: string) => Promise<unknown>"
        ],
        "description": [],
        "label": "readPrivileges",
        "source": {
          "path": "x-pack/plugins/security_solution/server/lib/detection_engine/privileges/read_privileges.ts",
          "lineNumber": 10
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-server.setPolicy",
        "type": "Function",
        "children": [
          {
            "id": "def-server.setPolicy.$1",
            "type": "CompoundType",
            "label": "esClient",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/set_policy.ts",
              "lineNumber": 11
            }
          },
          {
            "id": "def-server.setPolicy.$2",
            "type": "string",
            "label": "policy",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/set_policy.ts",
              "lineNumber": 12
            }
          },
          {
            "id": "def-server.setPolicy.$3",
            "type": "Object",
            "label": "body",
            "isRequired": true,
            "signature": [
              "Record<string, unknown>"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/set_policy.ts",
              "lineNumber": 13
            }
          }
        ],
        "signature": [
          "(esClient: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          ", policy: string, body: Record<string, unknown>) => Promise<unknown>"
        ],
        "description": [],
        "label": "setPolicy",
        "source": {
          "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/set_policy.ts",
          "lineNumber": 10
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-server.setTemplate",
        "type": "Function",
        "children": [
          {
            "id": "def-server.setTemplate.$1",
            "type": "CompoundType",
            "label": "esClient",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.ElasticsearchClient",
                "text": "ElasticsearchClient"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/set_template.ts",
              "lineNumber": 11
            }
          },
          {
            "id": "def-server.setTemplate.$2",
            "type": "string",
            "label": "name",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/set_template.ts",
              "lineNumber": 12
            }
          },
          {
            "id": "def-server.setTemplate.$3",
            "type": "Object",
            "label": "body",
            "isRequired": true,
            "signature": [
              "Record<string, unknown>"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/set_template.ts",
              "lineNumber": 13
            }
          }
        ],
        "signature": [
          "(esClient: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          ", name: string, body: Record<string, unknown>) => Promise<unknown>"
        ],
        "description": [],
        "label": "setTemplate",
        "source": {
          "path": "x-pack/plugins/security_solution/server/lib/detection_engine/index/set_template.ts",
          "lineNumber": 10
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-server.transformError",
        "type": "Function",
        "children": [
          {
            "id": "def-server.transformError.$1",
            "type": "CompoundType",
            "label": "err",
            "isRequired": true,
            "signature": [
              "Error & Partial<",
              "ResponseError",
              "<Record<string, any>, unknown>>"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/lib/detection_engine/routes/utils.ts",
              "lineNumber": 29
            }
          }
        ],
        "signature": [
          "(err: Error & Partial<",
          "ResponseError",
          "<Record<string, any>, unknown>>) => ",
          "OutputError"
        ],
        "description": [],
        "label": "transformError",
        "source": {
          "path": "x-pack/plugins/security_solution/server/lib/detection_engine/routes/utils.ts",
          "lineNumber": 29
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "id": "def-server.AppRequestContext",
        "type": "Interface",
        "label": "AppRequestContext",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-server.AppRequestContext.getAppClient",
            "type": "Function",
            "label": "getAppClient",
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/server/types.ts",
              "lineNumber": 18
            },
            "signature": [
              "() => ",
              {
                "pluginId": "securitySolution",
                "scope": "server",
                "docId": "kibSecuritySolutionPluginApi",
                "section": "def-server.AppClient",
                "text": "AppClient"
              }
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/security_solution/server/types.ts",
          "lineNumber": 17
        },
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "id": "def-server.ConfigType",
        "type": "Type",
        "label": "ConfigType",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/security_solution/server/config.ts",
          "lineNumber": 75
        },
        "signature": [
          "{ readonly enabled: boolean; readonly signalsIndex: string; readonly maxRuleImportExportSize: number; readonly maxRuleImportPayloadBytes: number; readonly maxTimelineImportExportSize: number; readonly maxTimelineImportPayloadBytes: number; readonly enableExperimental: string[]; readonly endpointResultListDefaultFirstPageIndex: number; readonly endpointResultListDefaultPageSize: number; readonly alertResultListDefaultDateRange: Readonly<{} & { from: string; to: string; }>; readonly packagerTaskInterval: string; readonly validateArtifactDownloads: boolean; }"
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "id": "def-server.PluginSetup",
      "type": "Interface",
      "label": "PluginSetup",
      "description": [],
      "tags": [],
      "children": [],
      "source": {
        "path": "x-pack/plugins/security_solution/server/plugin.ts",
        "lineNumber": 107
      },
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "id": "def-server.PluginStart",
      "type": "Interface",
      "label": "PluginStart",
      "description": [],
      "tags": [],
      "children": [],
      "source": {
        "path": "x-pack/plugins/security_solution/server/plugin.ts",
        "lineNumber": 110
      },
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "id": "def-common.addIdToItem",
        "type": "Function",
        "children": [
          {
            "id": "def-common.addIdToItem.$1",
            "type": "Uncategorized",
            "label": "item",
            "isRequired": true,
            "signature": [
              "NotArray<T>"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/common/add_remove_id_to_item.ts",
              "lineNumber": 20
            }
          }
        ],
        "signature": [
          "<T>(item: NotArray<T>) => T"
        ],
        "description": [],
        "label": "addIdToItem",
        "source": {
          "path": "x-pack/plugins/security_solution/common/add_remove_id_to_item.ts",
          "lineNumber": 20
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-common.DefaultArray",
        "type": "Function",
        "children": [
          {
            "id": "def-common.DefaultArray.$1",
            "type": "Uncategorized",
            "label": "codec",
            "isRequired": true,
            "signature": [
              "C"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/common/detection_engine/schemas/types/default_array.ts",
              "lineNumber": 16
            }
          }
        ],
        "signature": [
          "<C extends ",
          "Mixed",
          ">(codec: C) => ",
          "Type",
          "<",
          "TypeOf",
          "<C>[], ",
          "TypeOf",
          "<C>[] | undefined, unknown>"
        ],
        "description": [
          "\nTypes the DefaultArray<C> as:\n  - If undefined, then a default array will be set\n  - If an array is sent in, then the array will be validated to ensure all elements are type C"
        ],
        "label": "DefaultArray",
        "source": {
          "path": "x-pack/plugins/security_solution/common/detection_engine/schemas/types/default_array.ts",
          "lineNumber": 16
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-common.exactCheck",
        "type": "Function",
        "children": [
          {
            "id": "def-common.exactCheck.$1",
            "type": "Unknown",
            "label": "original",
            "isRequired": true,
            "signature": [
              "unknown"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/common/exact_check.ts",
              "lineNumber": 30
            }
          },
          {
            "id": "def-common.exactCheck.$2",
            "type": "CompoundType",
            "label": "decoded",
            "isRequired": true,
            "signature": [
              "Either",
              "<",
              "Errors",
              ", T>"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/common/exact_check.ts",
              "lineNumber": 31
            }
          }
        ],
        "signature": [
          "<T>(original: unknown, decoded: ",
          "Either",
          "<",
          "Errors",
          ", T>) => ",
          "Either",
          "<",
          "Errors",
          ", T>"
        ],
        "description": [
          "\nGiven an original object and a decoded object this will return an error\nif and only if the original object has additional keys that the decoded\nobject does not have. If the original decoded already has an error, then\nthis will return the error as is and not continue.\n\nNOTE: You MUST use t.exact(...) for this to operate correctly as your schema\nneeds to remove additional keys before the compare\n\nYou might not need this in the future if the below issue is solved:\nhttps://github.com/gcanti/io-ts/issues/322\n"
        ],
        "label": "exactCheck",
        "source": {
          "path": "x-pack/plugins/security_solution/common/exact_check.ts",
          "lineNumber": 29
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.foldLeftRight",
        "type": "Function",
        "label": "foldLeftRight",
        "description": [],
        "source": {
          "path": "x-pack/plugins/security_solution/common/test_utils.ts",
          "lineNumber": 29
        },
        "signature": [
          "<T>(ma: ",
          "Either",
          "<",
          "Errors",
          ", unknown>) => Message<unknown>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-common.formatErrors",
        "type": "Function",
        "children": [
          {
            "id": "def-common.formatErrors.$1",
            "type": "Object",
            "label": "errors",
            "isRequired": true,
            "signature": [
              "Errors"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/common/format_errors.ts",
              "lineNumber": 11
            }
          }
        ],
        "signature": [
          "(errors: ",
          "Errors",
          ") => string[]"
        ],
        "description": [],
        "label": "formatErrors",
        "source": {
          "path": "x-pack/plugins/security_solution/common/format_errors.ts",
          "lineNumber": 11
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-common.getPaths",
        "type": "Function",
        "children": [
          {
            "id": "def-common.getPaths.$1",
            "type": "CompoundType",
            "label": "validation",
            "isRequired": true,
            "signature": [
              "Either",
              "<",
              "Errors",
              ", A>"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/common/test_utils.ts",
              "lineNumber": 36
            }
          }
        ],
        "signature": [
          "<A>(validation: ",
          "Either",
          "<",
          "Errors",
          ", A>) => string[]"
        ],
        "description": [
          "\nConvenience utility to keep the error message handling within tests to be\nvery concise."
        ],
        "label": "getPaths",
        "source": {
          "path": "x-pack/plugins/security_solution/common/test_utils.ts",
          "lineNumber": 36
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-common.removeExternalLinkText",
        "type": "Function",
        "children": [
          {
            "id": "def-common.removeExternalLinkText.$1",
            "type": "string",
            "label": "str",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/common/test_utils.ts",
              "lineNumber": 49
            }
          }
        ],
        "signature": [
          "(str: string) => string"
        ],
        "description": [
          "\nConvenience utility to remove text appended to links by EUI"
        ],
        "label": "removeExternalLinkText",
        "source": {
          "path": "x-pack/plugins/security_solution/common/test_utils.ts",
          "lineNumber": 49
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-common.removeIdFromItem",
        "type": "Function",
        "children": [
          {
            "id": "def-common.removeIdFromItem.$1",
            "type": "Uncategorized",
            "label": "item",
            "isRequired": true,
            "signature": [
              "NotArray<T>"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/common/add_remove_id_to_item.ts",
              "lineNumber": 34
            }
          }
        ],
        "signature": [
          "<T>(item: NotArray<T>) => T | Pick<T & { id?: string | undefined; }, Exclude<keyof T, \"id\">>"
        ],
        "description": [
          "\nThis is to reverse the id you added to your arrays for ReactJS keys."
        ],
        "label": "removeIdFromItem",
        "source": {
          "path": "x-pack/plugins/security_solution/common/add_remove_id_to_item.ts",
          "lineNumber": 33
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-common.validate",
        "type": "Function",
        "children": [
          {
            "id": "def-common.validate.$1",
            "type": "Uncategorized",
            "label": "obj",
            "isRequired": true,
            "signature": [
              "object"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/common/validate.ts",
              "lineNumber": 16
            }
          },
          {
            "id": "def-common.validate.$2",
            "type": "Uncategorized",
            "label": "schema",
            "isRequired": true,
            "signature": [
              "T"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/common/validate.ts",
              "lineNumber": 17
            }
          }
        ],
        "signature": [
          "<T extends ",
          "Mixed",
          ">(obj: object, schema: T) => [",
          "TypeOf",
          "<T> | null, string | null]"
        ],
        "description": [],
        "label": "validate",
        "source": {
          "path": "x-pack/plugins/security_solution/common/validate.ts",
          "lineNumber": 15
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "id": "def-common.validateEither",
        "type": "Function",
        "children": [
          {
            "id": "def-common.validateEither.$1",
            "type": "Uncategorized",
            "label": "schema",
            "isRequired": true,
            "signature": [
              "T"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/common/validate.ts",
              "lineNumber": 43
            }
          },
          {
            "id": "def-common.validateEither.$2",
            "type": "Uncategorized",
            "label": "obj",
            "isRequired": true,
            "signature": [
              "A"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/security_solution/common/validate.ts",
              "lineNumber": 44
            }
          }
        ],
        "signature": [
          "<T extends ",
          "Mixed",
          ", A extends unknown>(schema: T, obj: A) => ",
          "Either",
          "<Error, A>"
        ],
        "description": [],
        "label": "validateEither",
        "source": {
          "path": "x-pack/plugins/security_solution/common/validate.ts",
          "lineNumber": 42
        },
        "tags": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "id": "def-common.DefaultVersionNumberDecoded",
        "type": "Type",
        "label": "DefaultVersionNumberDecoded",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/security_solution/common/detection_engine/schemas/types/default_version_number.ts",
          "lineNumber": 24
        },
        "signature": [
          "number"
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "tags": [],
        "id": "def-common.DefaultStringArray",
        "type": "Object",
        "label": "DefaultStringArray",
        "description": [
          "\nTypes the DefaultStringArray as:\n  - If undefined, then a default array will be set\n  - If an array is sent in, then the array will be validated to ensure all elements are a string"
        ],
        "source": {
          "path": "x-pack/plugins/security_solution/common/detection_engine/schemas/types/default_string_array.ts",
          "lineNumber": 16
        },
        "signature": [
          "Type",
          "<string[], string[] | undefined, unknown>"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.DefaultUuid",
        "type": "Object",
        "label": "DefaultUuid",
        "description": [
          "\nTypes the DefaultUuid as:\n  - If null or undefined, then a default string uuid.v4() will be\n    created otherwise it will be checked just against an empty string"
        ],
        "source": {
          "path": "x-pack/plugins/security_solution/common/detection_engine/schemas/types/default_uuid.ts",
          "lineNumber": 19
        },
        "signature": [
          "Type",
          "<string, string | undefined, unknown>"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.DefaultVersionNumber",
        "type": "Object",
        "label": "DefaultVersionNumber",
        "description": [
          "\nTypes the DefaultVersionNumber as:\n  - If null or undefined, then a default of the number 1 will be used"
        ],
        "source": {
          "path": "x-pack/plugins/security_solution/common/detection_engine/schemas/types/default_version_number.ts",
          "lineNumber": 16
        },
        "signature": [
          "Type",
          "<number, number | undefined, unknown>"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-common.NonEmptyString",
        "type": "Object",
        "label": "NonEmptyString",
        "description": [
          "\nTypes the NonEmptyString as:\n  - A string that is not empty"
        ],
        "source": {
          "path": "x-pack/plugins/security_solution/common/detection_engine/schemas/types/non_empty_string.ts",
          "lineNumber": 15
        },
        "signature": [
          "Type",
          "<string, string, unknown>"
        ],
        "initialIsOpen": false
      }
    ]
  }
}