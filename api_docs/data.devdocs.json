{
  "id": "data",
  "client": {
    "classes": [
      {
        "parentPluginId": "data",
        "id": "def-public.AggConfig",
        "type": "Class",
        "tags": [],
        "label": "AggConfig",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/agg_config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.ensureIds",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "ensureIds",
            "description": [
              "\nEnsure that all of the objects in the list have ids, the objects\nand list are modified by reference.\n"
            ],
            "signature": [
              "(list: any[]) => any[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.ensureIds.$1",
                "type": "Array",
                "tags": [],
                "label": "list",
                "description": [
                  "- a list of objects, objects can be anything really"
                ],
                "signature": [
                  "any[]"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "- the list that was passed in"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.nextId",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "nextId",
            "description": [
              "\nCalculate the next id based on the ids in this list\n"
            ],
            "signature": [
              "(list: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]) => number"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.nextId.$1",
                "type": "Array",
                "tags": [],
                "label": "list",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "list - a list of objects with id properties"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.aggConfigs",
            "type": "Object",
            "tags": [],
            "label": "aggConfigs",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              }
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.enabled",
            "type": "boolean",
            "tags": [],
            "label": "enabled",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.params",
            "type": "Any",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.parent",
            "type": "Object",
            "tags": [],
            "label": "parent",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.brandNew",
            "type": "CompoundType",
            "tags": [],
            "label": "brandNew",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.schema",
            "type": "string",
            "tags": [],
            "label": "schema",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "aggConfigs",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfigs",
                    "text": "AggConfigs"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "opts",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfigOptions",
                    "text": "AggConfigOptions"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.setParams",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "setParams",
            "description": [
              "\nWrite the current values to this.params, filling in the defaults as we go\n"
            ],
            "signature": [
              "(from: any) => void"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.setParams.$1",
                "type": "Any",
                "tags": [],
                "label": "from",
                "description": [
                  "- optional object to read values from,\n used when initializing"
                ],
                "signature": [
                  "any"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getParam",
            "type": "Function",
            "tags": [],
            "label": "getParam",
            "description": [],
            "signature": [
              "(key: string) => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.getParam.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.hasTimeShift",
            "type": "Function",
            "tags": [],
            "label": "hasTimeShift",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getTimeShift",
            "type": "Function",
            "tags": [],
            "label": "getTimeShift",
            "description": [],
            "signature": [
              "() => moment.Duration | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.write",
            "type": "Function",
            "tags": [],
            "label": "write",
            "description": [],
            "signature": [
              "(aggs?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              },
              " | undefined) => Record<string, any>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.write.$1",
                "type": "Object",
                "tags": [],
                "label": "aggs",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfigs",
                    "text": "AggConfigs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.isFilterable",
            "type": "Function",
            "tags": [],
            "label": "isFilterable",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.createFilter",
            "type": "Function",
            "tags": [],
            "label": "createFilter",
            "description": [],
            "signature": [
              "(key: string, params?: {}) => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.createFilter.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.createFilter.$2",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "{}"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.onSearchRequestStart",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "onSearchRequestStart",
            "description": [
              "\n Hook for pre-flight logic, see AggType#onSearchRequestStart"
            ],
            "signature": [
              "(searchSource: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchSource",
                "text": "ISearchSource"
              },
              ", options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchOptions",
                "text": "ISearchOptions"
              },
              " | undefined) => Promise<void> | Promise<any[]>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.onSearchRequestStart.$1",
                "type": "Object",
                "tags": [],
                "label": "searchSource",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.ISearchSource",
                    "text": "ISearchSource"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.onSearchRequestStart.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.ISearchOptions",
                    "text": "ISearchOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.toDsl",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "toDsl",
            "description": [
              "\nConvert this aggConfig to its dsl syntax.\n\nAdds params and adhoc subaggs to a pojo, then returns it\n"
            ],
            "signature": [
              "(aggConfigs?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              },
              " | undefined) => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.toDsl.$1",
                "type": "Object",
                "tags": [],
                "label": "aggConfigs",
                "description": [
                  "- the config object to convert"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfigs",
                    "text": "AggConfigs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "- if the config has a dsl representation, it is\n  returned, else undefined is returned"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.serialize",
            "type": "Function",
            "tags": [],
            "label": "serialize",
            "description": [],
            "signature": [
              "() => { type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              " | undefined; schema?: string | undefined; }"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "Returns a serialized representation of an AggConfig."
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.toJSON",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "toJSON",
            "description": [],
            "signature": [
              "() => { type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              " | undefined; schema?: string | undefined; }"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": true,
            "removeBy": "8.1",
            "trackAdoption": false,
            "references": [],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.toSerializedFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "toSerializedFieldFormat",
            "description": [
              "\nReturns a serialized field format for the field used in this agg.\nThis can be passed to fieldFormats.deserialize to get the field\nformat instance.\n"
            ],
            "signature": [
              "<T extends ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">() => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<T, ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormatParams",
                "text": "FieldFormatParams"
              },
              "<T>>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.toExpressionAst",
            "type": "Function",
            "tags": [],
            "label": "toExpressionAst",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionAstExpression",
                "text": "ExpressionAstExpression"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "Returns an ExpressionAst representing the this agg type."
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getAggParams",
            "type": "Function",
            "tags": [],
            "label": "getAggParams",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggParamType",
                "text": "AggParamType"
              },
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ">[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getRequestAggs",
            "type": "Function",
            "tags": [],
            "label": "getRequestAggs",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getResponseAggs",
            "type": "Function",
            "tags": [],
            "label": "getResponseAggs",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getValue",
            "type": "Function",
            "tags": [],
            "label": "getValue",
            "description": [],
            "signature": [
              "(bucket: any) => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.getValue.$1",
                "type": "Any",
                "tags": [],
                "label": "bucket",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getResponseId",
            "type": "Function",
            "tags": [],
            "label": "getResponseId",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getKey",
            "type": "Function",
            "tags": [],
            "label": "getKey",
            "description": [],
            "signature": [
              "(bucket: any, key?: string | undefined) => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.getKey.$1",
                "type": "Any",
                "tags": [],
                "label": "bucket",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.getKey.$2",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getFieldDisplayName",
            "type": "Function",
            "tags": [],
            "label": "getFieldDisplayName",
            "description": [],
            "signature": [
              "() => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getField",
            "type": "Function",
            "tags": [],
            "label": "getField",
            "description": [],
            "signature": [
              "() => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getValueBucketPath",
            "type": "Function",
            "tags": [],
            "label": "getValueBucketPath",
            "description": [
              "\nReturns the bucket path containing the main value the agg will produce\n(e.g. for sum of bytes it will point to the sum, for median it will point\n to the 50 percentile in the percentile multi value bucket)"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.makeLabel",
            "type": "Function",
            "tags": [],
            "label": "makeLabel",
            "description": [],
            "signature": [
              "(percentageMode?: boolean) => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.makeLabel.$1",
                "type": "boolean",
                "tags": [],
                "label": "percentageMode",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getIndexPattern",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              }
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.getTimeRange",
            "type": "Function",
            "tags": [],
            "label": "getTimeRange",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.fieldName",
            "type": "Function",
            "tags": [],
            "label": "fieldName",
            "description": [],
            "signature": [
              "() => any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.fieldIsTimeField",
            "type": "Function",
            "tags": [],
            "label": "fieldIsTimeField",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.type",
            "type": "Object",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggType",
                "text": "AggType"
              },
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggParamType",
                "text": "AggParamType"
              },
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.type",
            "type": "Object",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggType",
                "text": "AggType"
              },
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggParamType",
                "text": "AggParamType"
              },
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfig.setType",
            "type": "Function",
            "tags": [],
            "label": "setType",
            "description": [],
            "signature": [
              "(type: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IAggType",
                "text": "IAggType"
              },
              ") => void"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfig.setType.$1",
                "type": "Object",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IAggType",
                    "text": "IAggType"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_config.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggConfigs",
        "type": "Class",
        "tags": [],
        "label": "AggConfigs",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.timeRange",
            "type": "Object",
            "tags": [],
            "label": "timeRange",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.timeFields",
            "type": "Array",
            "tags": [],
            "label": "timeFields",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.forceNow",
            "type": "Object",
            "tags": [],
            "label": "forceNow",
            "description": [],
            "signature": [
              "Date | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.aggs",
            "type": "Array",
            "tags": [],
            "label": "aggs",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.timeZone",
            "type": "string",
            "tags": [],
            "label": "timeZone",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.Unnamed.$2",
                "type": "Array",
                "tags": [],
                "label": "configStates",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.CreateAggConfigParams",
                    "text": "CreateAggConfigParams"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.Unnamed.$3",
                "type": "Object",
                "tags": [],
                "label": "opts",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfigsOptions",
                    "text": "AggConfigsOptions"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.Unnamed.$4",
                "type": "Function",
                "tags": [],
                "label": "getConfig",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataPluginApi",
                    "section": "def-common.GetConfigFn",
                    "text": "GetConfigFn"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.hierarchical",
            "type": "boolean",
            "tags": [],
            "label": "hierarchical",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.partialRows",
            "type": "boolean",
            "tags": [],
            "label": "partialRows",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.samplerConfig",
            "type": "Object",
            "tags": [],
            "label": "samplerConfig",
            "description": [],
            "signature": [
              "{ probability: number; seed: number | undefined; }"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.isSamplingEnabled",
            "type": "Function",
            "tags": [],
            "label": "isSamplingEnabled",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.setTimeFields",
            "type": "Function",
            "tags": [],
            "label": "setTimeFields",
            "description": [],
            "signature": [
              "(timeFields: string[] | undefined) => void"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.setTimeFields.$1",
                "type": "Array",
                "tags": [],
                "label": "timeFields",
                "description": [],
                "signature": [
                  "string[] | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.setForceNow",
            "type": "Function",
            "tags": [],
            "label": "setForceNow",
            "description": [],
            "signature": [
              "(now: Date | undefined) => void"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.setForceNow.$1",
                "type": "Object",
                "tags": [],
                "label": "now",
                "description": [],
                "signature": [
                  "Date | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.setTimeRange",
            "type": "Function",
            "tags": [],
            "label": "setTimeRange",
            "description": [],
            "signature": [
              "(timeRange: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              },
              ") => void"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.setTimeRange.$1",
                "type": "Object",
                "tags": [],
                "label": "timeRange",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/es-query",
                    "scope": "common",
                    "docId": "kibKbnEsQueryPluginApi",
                    "section": "def-common.TimeRange",
                    "text": "TimeRange"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getResolvedTimeRange",
            "type": "Function",
            "tags": [],
            "label": "getResolvedTimeRange",
            "description": [
              "\nReturns the current time range as moment instance (date math will get resolved using the current \"now\" value or system time if not set)"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataQueryPluginApi",
                "section": "def-common.TimeRangeBounds",
                "text": "TimeRangeBounds"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "Current time range as resolved date."
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.clone",
            "type": "Function",
            "tags": [],
            "label": "clone",
            "description": [],
            "signature": [
              "({ enabledOnly, opts, }?: { enabledOnly?: boolean | undefined; opts?: Partial<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigsOptions",
                "text": "AggConfigsOptions"
              },
              "> | undefined; }) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              }
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.clone.$1",
                "type": "Object",
                "tags": [],
                "label": "{\n    enabledOnly = true,\n    opts,\n  }",
                "description": [],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.AggConfigs.clone.$1.enabledOnly",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "enabledOnly",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-public.AggConfigs.clone.$1.opts",
                    "type": "Object",
                    "tags": [],
                    "label": "opts",
                    "description": [],
                    "signature": [
                      "Partial<",
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataSearchPluginApi",
                        "section": "def-common.AggConfigsOptions",
                        "text": "AggConfigsOptions"
                      },
                      "> | undefined"
                    ],
                    "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.createAggConfig",
            "type": "Function",
            "tags": [],
            "label": "createAggConfig",
            "description": [],
            "signature": [
              "<T extends ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              " = ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ">(params: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.CreateAggConfigParams",
                "text": "CreateAggConfigParams"
              },
              ", { addToAggConfigs }?: { addToAggConfigs?: boolean | undefined; }) => T"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.createAggConfig.$1",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.CreateAggConfigParams",
                    "text": "CreateAggConfigParams"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.createAggConfig.$2",
                "type": "Object",
                "tags": [],
                "label": "{ addToAggConfigs = true }",
                "description": [],
                "signature": [
                  "{ addToAggConfigs?: boolean | undefined; }"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.jsonDataEquals",
            "type": "Function",
            "tags": [],
            "label": "jsonDataEquals",
            "description": [
              "\nData-by-data comparison of this Aggregation\nIgnores the non-array indexes"
            ],
            "signature": [
              "(aggConfigs: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]) => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.jsonDataEquals.$1",
                "type": "Array",
                "tags": [],
                "label": "aggConfigs",
                "description": [
                  "an AggConfigs instance"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.toDsl",
            "type": "Function",
            "tags": [],
            "label": "toDsl",
            "description": [],
            "signature": [
              "() => Record<string, any>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getAll",
            "type": "Function",
            "tags": [],
            "label": "getAll",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.byIndex",
            "type": "Function",
            "tags": [],
            "label": "byIndex",
            "description": [],
            "signature": [
              "(index: number) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              }
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.byIndex.$1",
                "type": "number",
                "tags": [],
                "label": "index",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.byId",
            "type": "Function",
            "tags": [],
            "label": "byId",
            "description": [],
            "signature": [
              "(id: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.byId.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.byName",
            "type": "Function",
            "tags": [],
            "label": "byName",
            "description": [],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.byName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.byType",
            "type": "Function",
            "tags": [],
            "label": "byType",
            "description": [],
            "signature": [
              "(type: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.byType.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.byTypeName",
            "type": "Function",
            "tags": [],
            "label": "byTypeName",
            "description": [],
            "signature": [
              "(type: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.byTypeName.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.bySchemaName",
            "type": "Function",
            "tags": [],
            "label": "bySchemaName",
            "description": [],
            "signature": [
              "(schema: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.bySchemaName.$1",
                "type": "string",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getRequestAggs",
            "type": "Function",
            "tags": [],
            "label": "getRequestAggs",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getTimeShifts",
            "type": "Function",
            "tags": [],
            "label": "getTimeShifts",
            "description": [],
            "signature": [
              "() => Record<string, moment.Duration>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getTimeShiftInterval",
            "type": "Function",
            "tags": [],
            "label": "getTimeShiftInterval",
            "description": [],
            "signature": [
              "() => moment.Duration | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.hasTimeShifts",
            "type": "Function",
            "tags": [],
            "label": "hasTimeShifts",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getSearchSourceTimeFilter",
            "type": "Function",
            "tags": [],
            "label": "getSearchSourceTimeFilter",
            "description": [],
            "signature": [
              "(forceNow?: Date | undefined) => ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.RangeFilter",
                "text": "RangeFilter"
              },
              "[] | { meta: { index: string | undefined; params: {}; alias: string; disabled: boolean; negate: boolean; }; query: { bool: { should: { bool: { filter: { range: { [x: string]: { format: string; gte: string; lte: string; }; }; }[]; }; }[]; minimum_should_match: number; }; }; }[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.getSearchSourceTimeFilter.$1",
                "type": "Object",
                "tags": [],
                "label": "forceNow",
                "description": [],
                "signature": [
                  "Date | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.postFlightTransform",
            "type": "Function",
            "tags": [],
            "label": "postFlightTransform",
            "description": [],
            "signature": [
              "(response: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IEsSearchResponse",
                "text": "IEsSearchResponse"
              },
              "<any>) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IEsSearchResponse",
                "text": "IEsSearchResponse"
              },
              "<any>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.postFlightTransform.$1",
                "type": "Object",
                "tags": [],
                "label": "response",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IEsSearchResponse",
                    "text": "IEsSearchResponse"
                  },
                  "<any>"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getRequestAggById",
            "type": "Function",
            "tags": [],
            "label": "getRequestAggById",
            "description": [],
            "signature": [
              "(id: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.getRequestAggById.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getResponseAggs",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "getResponseAggs",
            "description": [
              "\nGets the AggConfigs (and possibly ResponseAggConfigs) that\nrepresent the values that will be produced when all aggs\nare run.\n\nWith multi-value metric aggs it is possible for a single agg\nrequest to result in multiple agg values, which is why the length\nof a vis' responseValuesAggs may be different than the vis' aggs\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.getResponseAggById",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "getResponseAggById",
            "description": [
              "\nFind a response agg by it's id. This may be an agg in the aggConfigs, or one\ncreated specifically for a response value\n"
            ],
            "signature": [
              "(id: string) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.getResponseAggById.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "- the id of the agg to find"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.onSearchRequestStart",
            "type": "Function",
            "tags": [],
            "label": "onSearchRequestStart",
            "description": [],
            "signature": [
              "(searchSource: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchSource",
                "text": "ISearchSource"
              },
              ", options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchOptions",
                "text": "ISearchOptions"
              },
              " | undefined) => Promise<(void | any[])[]>"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.onSearchRequestStart.$1",
                "type": "Object",
                "tags": [],
                "label": "searchSource",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.ISearchSource",
                    "text": "ISearchSource"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggConfigs.onSearchRequestStart.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.ISearchOptions",
                    "text": "ISearchOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggConfigs.toExpressionAst",
            "type": "Function",
            "tags": [],
            "label": "toExpressionAst",
            "description": [
              "\nGenerates an expression abstract syntax tree using the `esaggs` expression function."
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionAstExpression",
                "text": "ExpressionAstExpression"
              }
            ],
            "path": "src/plugins/data/common/search/aggs/agg_configs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "The expression AST."
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggParamType",
        "type": "Class",
        "tags": [],
        "label": "AggParamType",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggParamType",
            "text": "AggParamType"
          },
          "<TAggConfig> extends ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.BaseParamType",
            "text": "BaseParamType"
          },
          "<TAggConfig>"
        ],
        "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.AggParamType.makeAgg",
            "type": "Function",
            "tags": [],
            "label": "makeAgg",
            "description": [],
            "signature": [
              "(agg: TAggConfig, state?: { type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              " | undefined; schema?: string | undefined; } | undefined) => TAggConfig"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggParamType.makeAgg.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "agg",
                "description": [],
                "signature": [
                  "TAggConfig"
                ],
                "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.AggParamType.makeAgg.$2",
                "type": "Object",
                "tags": [],
                "label": "state",
                "description": [],
                "signature": [
                  "{ type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "common",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-common.SerializableRecord",
                    "text": "SerializableRecord"
                  },
                  " | undefined; schema?: string | undefined; } | undefined"
                ],
                "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggParamType.allowedAggs",
            "type": "Array",
            "tags": [],
            "label": "allowedAggs",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggParamType.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggParamType.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "Record<string, any>"
                ],
                "path": "src/plugins/data/common/search/aggs/param_types/agg.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.DataPublicPlugin",
        "type": "Class",
        "tags": [],
        "label": "DataPublicPlugin",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "public",
            "docId": "kibDataPluginApi",
            "section": "def-public.DataPublicPlugin",
            "text": "DataPublicPlugin"
          },
          " implements ",
          {
            "pluginId": "@kbn/core-plugins-browser",
            "scope": "common",
            "docId": "kibKbnCorePluginsBrowserPluginApi",
            "section": "def-common.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "public",
            "docId": "kibDataPluginApi",
            "section": "def-public.DataPublicPluginSetup",
            "text": "DataPublicPluginSetup"
          },
          ", ",
          {
            "pluginId": "data",
            "scope": "public",
            "docId": "kibDataPluginApi",
            "section": "def-public.DataPublicPluginStart",
            "text": "DataPublicPluginStart"
          },
          ", ",
          "DataSetupDependencies",
          ", ",
          "DataStartDependencies",
          ">"
        ],
        "path": "src/plugins/data/public/plugin.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPlugin.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.DataPublicPlugin.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "initializerContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-plugins-browser",
                    "scope": "common",
                    "docId": "kibKbnCorePluginsBrowserPluginApi",
                    "section": "def-common.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<Readonly<{} & { search: Readonly<{} & { aggs: Readonly<{} & { shardDelay: Readonly<{} & { enabled: boolean; }>; }>; asyncSearch: Readonly<{ pollInterval?: number | undefined; } & { waitForCompletion: moment.Duration; keepAlive: moment.Duration; batchedReduceSize: number; }>; sessions: Readonly<{} & { enabled: boolean; management: Readonly<{} & { refreshInterval: moment.Duration; maxSessions: number; refreshTimeout: moment.Duration; expiresSoonWarning: moment.Duration; }>; notTouchedTimeout: moment.Duration; maxUpdateRetries: number; defaultExpiration: moment.Duration; }>; }>; }>>"
                ],
                "path": "src/plugins/data/public/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPlugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-browser",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                "section": "def-common.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              "DataStartDependencies",
              ", ",
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginStart",
                "text": "DataPublicPluginStart"
              },
              ">, { bfetch, expressions, uiActions, usageCollection, inspector, fieldFormats, management, }: ",
              "DataSetupDependencies",
              ") => ",
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginSetup",
                "text": "DataPublicPluginSetup"
              }
            ],
            "path": "src/plugins/data/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.DataPublicPlugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                    "section": "def-common.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  "DataStartDependencies",
                  ", ",
                  {
                    "pluginId": "data",
                    "scope": "public",
                    "docId": "kibDataPluginApi",
                    "section": "def-public.DataPublicPluginStart",
                    "text": "DataPublicPluginStart"
                  },
                  ">"
                ],
                "path": "src/plugins/data/public/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.DataPublicPlugin.setup.$2",
                "type": "Object",
                "tags": [],
                "label": "{\n      bfetch,\n      expressions,\n      uiActions,\n      usageCollection,\n      inspector,\n      fieldFormats,\n      management,\n    }",
                "description": [],
                "signature": [
                  "DataSetupDependencies"
                ],
                "path": "src/plugins/data/public/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPlugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-browser",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                "section": "def-common.CoreStart",
                "text": "CoreStart"
              },
              ", { uiActions, fieldFormats, dataViews, screenshotMode }: ",
              "DataStartDependencies",
              ") => ",
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginStart",
                "text": "DataPublicPluginStart"
              }
            ],
            "path": "src/plugins/data/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.DataPublicPlugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                    "section": "def-common.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "src/plugins/data/public/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.DataPublicPlugin.start.$2",
                "type": "Object",
                "tags": [],
                "label": "{ uiActions, fieldFormats, dataViews, screenshotMode }",
                "description": [],
                "signature": [
                  "DataStartDependencies"
                ],
                "path": "src/plugins/data/public/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPlugin.stop",
            "type": "Function",
            "tags": [],
            "label": "stop",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.DuplicateDataViewError",
        "type": "Class",
        "tags": [],
        "label": "DuplicateDataViewError",
        "description": [
          "\nError thrown when attempting to create duplicate index pattern based on title."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DuplicateDataViewError",
            "text": "DuplicateDataViewError"
          },
          " extends Error"
        ],
        "path": "src/plugins/data_views/common/errors/duplicate_index_pattern.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.DuplicateDataViewError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/errors/duplicate_index_pattern.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.DuplicateDataViewError.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "message",
                "description": [
                  "- Error message"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/errors/duplicate_index_pattern.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.NowProvider",
        "type": "Class",
        "tags": [],
        "label": "NowProvider",
        "description": [
          "\nUsed to synchronize time between parallel searches with relative time range that rely on `now`."
        ],
        "path": "src/plugins/data/public/now_provider/now_provider.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.NowProvider.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/public/now_provider/now_provider.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.NowProvider.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [],
            "signature": [
              "() => Date"
            ],
            "path": "src/plugins/data/public/now_provider/now_provider.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.NowProvider.set",
            "type": "Function",
            "tags": [],
            "label": "set",
            "description": [],
            "signature": [
              "(now: Date) => void"
            ],
            "path": "src/plugins/data/public/now_provider/now_provider.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.NowProvider.set.$1",
                "type": "Object",
                "tags": [],
                "label": "now",
                "description": [],
                "signature": [
                  "Date"
                ],
                "path": "src/plugins/data/public/now_provider/now_provider.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.NowProvider.reset",
            "type": "Function",
            "tags": [],
            "label": "reset",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data/public/now_provider/now_provider.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.OptionedParamType",
        "type": "Class",
        "tags": [],
        "label": "OptionedParamType",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.OptionedParamType",
            "text": "OptionedParamType"
          },
          " extends ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.BaseParamType",
            "text": "BaseParamType"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfig",
            "text": "AggConfig"
          },
          ">"
        ],
        "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.OptionedParamType.options",
            "type": "Array",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.OptionedValueProp",
                "text": "OptionedValueProp"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.OptionedParamType.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.OptionedParamType.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  "Record<string, any>"
                ],
                "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.SearchSource",
        "type": "Class",
        "tags": [],
        "label": "SearchSource",
        "description": [],
        "path": "src/plugins/data/common/search/search_source/search_source.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.history",
            "type": "Array",
            "tags": [],
            "label": "history",
            "description": [],
            "signature": [
              "SearchRequest",
              "[]"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "fields",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceFields",
                    "text": "SearchSourceFields"
                  }
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "dependencies",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceDependencies",
                    "text": "SearchSourceDependencies"
                  }
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.setOverwriteDataViewType",
            "type": "Function",
            "tags": [],
            "label": "setOverwriteDataViewType",
            "description": [
              "**\nPUBLIC API\n\nUsed to make the search source overwrite the actual data view type for the\nspecific requests done. This should only be needed very rarely, since it means\ne.g. we'd be treating a rollup index pattern as a regular one. Be very sure\nyou understand the consequences of using this method before using it.\n"
            ],
            "signature": [
              "(overwriteType: string | false | undefined) => void"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.setOverwriteDataViewType.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "overwriteType",
                "description": [
                  "If `false` is passed in it will disable the overwrite, otherwise\nthe passed in value will be used as the data view type for this search source."
                ],
                "signature": [
                  "string | false | undefined"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.setField",
            "type": "Function",
            "tags": [],
            "label": "setField",
            "description": [
              "\nsets value to a single search source field"
            ],
            "signature": [
              "<K extends keyof ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              ">(field: K, value: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              "[K]) => this"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.setField.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "field",
                "description": [
                  ": field name"
                ],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.setField.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "value",
                "description": [
                  ": value for the field"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceFields",
                    "text": "SearchSourceFields"
                  },
                  "[K]"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.removeField",
            "type": "Function",
            "tags": [],
            "label": "removeField",
            "description": [
              "\nremove field"
            ],
            "signature": [
              "<K extends keyof ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              ">(field: K) => this"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.removeField.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "field",
                "description": [
                  ": field name"
                ],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.setFields",
            "type": "Function",
            "tags": [
              "private"
            ],
            "label": "setFields",
            "description": [
              "\nInternal, do not use. Overrides all search source fields with the new field array.\n"
            ],
            "signature": [
              "(newFields: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              ") => this"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.setFields.$1",
                "type": "Object",
                "tags": [],
                "label": "newFields",
                "description": [
                  "New field array."
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceFields",
                    "text": "SearchSourceFields"
                  }
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getId",
            "type": "Function",
            "tags": [],
            "label": "getId",
            "description": [
              "\nreturns search source id"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getFields",
            "type": "Function",
            "tags": [],
            "label": "getFields",
            "description": [
              "\nreturns all search source fields"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getField",
            "type": "Function",
            "tags": [],
            "label": "getField",
            "description": [
              "\nGets a single field from the fields"
            ],
            "signature": [
              "<K extends keyof ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              ">(field: K, recurse?: boolean) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              "[K]"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.getField.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.getField.$2",
                "type": "boolean",
                "tags": [],
                "label": "recurse",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getActiveIndexFilter",
            "type": "Function",
            "tags": [],
            "label": "getActiveIndexFilter",
            "description": [],
            "signature": [
              "() => any[]"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getOwnField",
            "type": "Function",
            "tags": [],
            "label": "getOwnField",
            "description": [
              "\nGet the field from our own fields, don't traverse up the chain"
            ],
            "signature": [
              "<K extends keyof ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              ">(field: K) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              "[K]"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.getOwnField.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.create",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "create",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "alerting",
                "path": "x-pack/plugins/alerting/server/lib/wrap_search_source_client.ts"
              },
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/embeddable/saved_search_embeddable.tsx"
              },
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/embeddable/saved_search_embeddable.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/server/lib/detection_engine/rule_preview/api/preview_rules/wrap_search_source_client.ts"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.createCopy",
            "type": "Function",
            "tags": [],
            "label": "createCopy",
            "description": [
              "\ncreates a copy of this search source (without its children)"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.createChild",
            "type": "Function",
            "tags": [],
            "label": "createChild",
            "description": [
              "\ncreates a new child search source"
            ],
            "signature": [
              "(options?: {}) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.createChild.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "{}"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.setParent",
            "type": "Function",
            "tags": [],
            "label": "setParent",
            "description": [
              "\nSet a searchSource that this source should inherit from"
            ],
            "signature": [
              "(parent?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchSource",
                "text": "ISearchSource"
              },
              " | undefined, options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceOptions",
                "text": "SearchSourceOptions"
              },
              ") => this"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.setParent.$1",
                "type": "Object",
                "tags": [],
                "label": "parent",
                "description": [
                  "- the parent searchSource"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.ISearchSource",
                    "text": "ISearchSource"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.setParent.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- the inherit options"
                ],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceOptions",
                    "text": "SearchSourceOptions"
                  }
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getParent",
            "type": "Function",
            "tags": [],
            "label": "getParent",
            "description": [
              "\nGet the parent of this SearchSource"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.fetch$",
            "type": "Function",
            "tags": [],
            "label": "fetch$",
            "description": [
              "\nFetch this source from Elasticsearch, returning an observable over the response(s)"
            ],
            "signature": [
              "<T = {}>(options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceSearchOptions",
                "text": "SearchSourceSearchOptions"
              },
              ") => ",
              "Observable",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IKibanaSearchResponse",
                "text": "IKibanaSearchResponse"
              },
              "<",
              "SearchResponse",
              "<T, Record<string, ",
              "AggregationsAggregate",
              ">>>>"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.fetch$.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceSearchOptions",
                    "text": "SearchSourceSearchOptions"
                  }
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.fetch",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "fetch",
            "description": [
              "\nFetch this source and reject the returned Promise on error"
            ],
            "signature": [
              "(options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceSearchOptions",
                "text": "SearchSourceSearchOptions"
              },
              ") => Promise<",
              "SearchResponse",
              "<unknown, Record<string, ",
              "AggregationsAggregate",
              ">>>"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/server/rule_types/es_query/lib/fetch_search_source_query.ts"
              },
              {
                "plugin": "alerting",
                "path": "x-pack/plugins/alerting/server/lib/wrap_search_source_client.test.ts"
              },
              {
                "plugin": "alerting",
                "path": "x-pack/plugins/alerting/server/lib/wrap_search_source_client.test.ts"
              },
              {
                "plugin": "alerting",
                "path": "x-pack/plugins/alerting/server/lib/wrap_search_source_client.test.ts"
              },
              {
                "plugin": "alerting",
                "path": "x-pack/plugins/alerting/server/lib/wrap_search_source_client.test.ts"
              },
              {
                "plugin": "alerting",
                "path": "x-pack/plugins/alerting/server/lib/wrap_search_source_client.test.ts"
              },
              {
                "plugin": "alerting",
                "path": "x-pack/plugins/alerting/server/lib/wrap_search_source_client.test.ts"
              },
              {
                "plugin": "alerting",
                "path": "x-pack/plugins/alerting/server/lib/wrap_search_source_client.test.ts"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/server/rule_types/es_query/rule_type.test.ts"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/server/rule_types/es_query/rule_type.test.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/server/lib/detection_engine/rule_preview/api/preview_rules/wrap_search_source_client.test.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/server/lib/detection_engine/rule_preview/api/preview_rules/wrap_search_source_client.test.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/server/lib/detection_engine/rule_preview/api/preview_rules/wrap_search_source_client.test.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/server/lib/detection_engine/rule_preview/api/preview_rules/wrap_search_source_client.test.ts"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/list_control_factory.ts"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/range_control_factory.ts"
              }
            ],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.fetch.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceSearchOptions",
                    "text": "SearchSourceSearchOptions"
                  }
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.onRequestStart",
            "type": "Function",
            "tags": [],
            "label": "onRequestStart",
            "description": [
              "\n Add a handler that will be notified whenever requests start"
            ],
            "signature": [
              "(handler: (searchSource: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSource",
                "text": "SearchSource"
              },
              ", options?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceSearchOptions",
                "text": "SearchSourceSearchOptions"
              },
              " | undefined) => Promise<unknown>) => void"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.onRequestStart.$1",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [],
                "signature": [
                  "(searchSource: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSource",
                    "text": "SearchSource"
                  },
                  ", options?: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SearchSourceSearchOptions",
                    "text": "SearchSourceSearchOptions"
                  },
                  " | undefined) => Promise<unknown>"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getSearchRequestBody",
            "type": "Function",
            "tags": [],
            "label": "getSearchRequestBody",
            "description": [
              "\nReturns body contents of the search request, often referred as query DSL."
            ],
            "signature": [
              "() => any"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.destroy",
            "type": "Function",
            "tags": [],
            "label": "destroy",
            "description": [
              "\nCompletely destroy the SearchSource."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.getSerializedFields",
            "type": "Function",
            "tags": [],
            "label": "getSerializedFields",
            "description": [
              "\nserializes search source fields (which can later be passed to {@link ISearchStartSearchSource})"
            ],
            "signature": [
              "(recurse?: boolean, includeFields?: boolean) => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SerializedSearchSourceFields",
                "text": "SerializedSearchSourceFields"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.getSerializedFields.$1",
                "type": "boolean",
                "tags": [],
                "label": "recurse",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.getSerializedFields.$2",
                "type": "boolean",
                "tags": [],
                "label": "includeFields",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.serialize",
            "type": "Function",
            "tags": [],
            "label": "serialize",
            "description": [
              "\nSerializes the instance to a JSON string and a set of referenced objects.\nUse this method to get a representation of the search source which can be stored in a saved object.\n\nThe references returned by this function can be mixed with other references in the same object,\nhowever make sure there are no name-collisions. The references will be named `kibanaSavedObjectMeta.searchSourceJSON.index`\nand `kibanaSavedObjectMeta.searchSourceJSON.filter[<number>].meta.index`.\n\nUsing `createSearchSource`, the instance can be re-created."
            ],
            "signature": [
              "() => { searchSourceJSON: string; references: ",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObjectReference",
                "text": "SavedObjectReference"
              },
              "[]; }"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.toExpressionAst",
            "type": "Function",
            "tags": [],
            "label": "toExpressionAst",
            "description": [
              "\nGenerates an expression abstract syntax tree using the fields set in the current search source and its ancestors.\nThe produced expression from the returned AST will return the `datatable` structure.\nIf the `asDatatable` option is truthy or omitted, the generator will use the `esdsl` function to perform the search.\nWhen the `aggs` field is present, it will use the `esaggs` function instead."
            ],
            "signature": [
              "({ asDatatable }?: ExpressionAstOptions) => ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionAstExpression",
                "text": "ExpressionAstExpression"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.toExpressionAst.$1",
                "type": "Object",
                "tags": [],
                "label": "{ asDatatable = true }",
                "description": [],
                "signature": [
                  "ExpressionAstOptions"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSource.parseActiveIndexPatternFromQueryString",
            "type": "Function",
            "tags": [],
            "label": "parseActiveIndexPatternFromQueryString",
            "description": [],
            "signature": [
              "(queryString: string) => string[]"
            ],
            "path": "src/plugins/data/common/search/search_source/search_source.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.SearchSource.parseActiveIndexPatternFromQueryString.$1",
                "type": "string",
                "tags": [],
                "label": "queryString",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data/common/search/search_source/search_source.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "data",
        "id": "def-public.calculateBounds",
        "type": "Function",
        "tags": [],
        "label": "calculateBounds",
        "description": [],
        "signature": [
          "(timeRange: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          ", options: ",
          "CalculateBoundsOptions",
          ") => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataQueryPluginApi",
            "section": "def-common.TimeRangeBounds",
            "text": "TimeRangeBounds"
          }
        ],
        "path": "src/plugins/data/common/query/timefilter/get_time.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.calculateBounds.$1",
            "type": "Object",
            "tags": [],
            "label": "timeRange",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              }
            ],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-public.calculateBounds.$2",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "CalculateBoundsOptions"
            ],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.extractReferences",
        "type": "Function",
        "tags": [],
        "label": "extractReferences",
        "description": [],
        "signature": [
          "(state: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SerializedSearchSourceFields",
            "text": "SerializedSearchSourceFields"
          },
          ") => [",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SerializedSearchSourceFields",
            "text": "SerializedSearchSourceFields"
          },
          ", ",
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObjectReference",
            "text": "SavedObjectReference"
          },
          "[]]"
        ],
        "path": "src/plugins/data/common/search/search_source/extract_references.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.extractReferences.$1",
            "type": "Object",
            "tags": [],
            "label": "state",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SerializedSearchSourceFields",
                "text": "SerializedSearchSourceFields"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/extract_references.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.fieldList",
        "type": "Function",
        "tags": [],
        "label": "fieldList",
        "description": [],
        "signature": [
          "(specs?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "[], shortDotsEnable?: boolean) => ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.IIndexPatternFieldList",
            "text": "IIndexPatternFieldList"
          }
        ],
        "path": "src/plugins/data_views/common/fields/field_list.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.fieldList.$1",
            "type": "Array",
            "tags": [],
            "label": "specs",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-public.fieldList.$2",
            "type": "boolean",
            "tags": [],
            "label": "shortDotsEnable",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.flattenHit",
        "type": "Function",
        "tags": [],
        "label": "flattenHit",
        "description": [
          "\nFlattens an individual hit (from an ES response) into an object. This will\ncreate flattened field names, like `user.name`.\n"
        ],
        "signature": [
          "(hit: Hit<unknown>, indexPattern: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " | undefined, params: TabifyDocsOptions | undefined) => Record<string, any>"
        ],
        "path": "src/plugins/data/common/search/tabify/tabify_docs.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.flattenHit.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "hit",
            "description": [
              "The hit from an ES reponse's hits.hits[]"
            ],
            "signature": [
              "Hit<unknown>"
            ],
            "path": "src/plugins/data/common/search/tabify/tabify_docs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-public.flattenHit.$2",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [
              "The index pattern for the requested index if available."
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/tabify/tabify_docs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.flattenHit.$3",
            "type": "Object",
            "tags": [],
            "label": "params",
            "description": [
              "Parameters how to flatten the hit"
            ],
            "signature": [
              "TabifyDocsOptions | undefined"
            ],
            "path": "src/plugins/data/common/search/tabify/tabify_docs.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.getEsQueryConfig",
        "type": "Function",
        "tags": [],
        "label": "getEsQueryConfig",
        "description": [],
        "signature": [
          "(config: KibanaConfig) => ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.EsQueryConfig",
            "text": "EsQueryConfig"
          }
        ],
        "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.getEsQueryConfig.$1",
            "type": "Object",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "KibanaConfig"
            ],
            "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.getSearchParamsFromRequest",
        "type": "Function",
        "tags": [],
        "label": "getSearchParamsFromRequest",
        "description": [],
        "signature": [
          "(searchRequest: ",
          "SearchRequest",
          ", dependencies: { getConfig: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataPluginApi",
            "section": "def-common.GetConfigFn",
            "text": "GetConfigFn"
          },
          "; }) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchRequestParams",
            "text": "ISearchRequestParams"
          }
        ],
        "path": "src/plugins/data/common/search/search_source/fetch/get_search_params.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.getSearchParamsFromRequest.$1",
            "type": "Object",
            "tags": [],
            "label": "searchRequest",
            "description": [],
            "signature": [
              "SearchRequest"
            ],
            "path": "src/plugins/data/common/search/search_source/fetch/get_search_params.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-public.getSearchParamsFromRequest.$2",
            "type": "Object",
            "tags": [],
            "label": "dependencies",
            "description": [],
            "path": "src/plugins/data/common/search/search_source/fetch/get_search_params.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.getSearchParamsFromRequest.$2.getConfig",
                "type": "Function",
                "tags": [],
                "label": "getConfig",
                "description": [],
                "signature": [
                  "<T = any>(key: string, defaultOverride?: T | undefined) => T"
                ],
                "path": "src/plugins/data/common/search/search_source/fetch/get_search_params.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.getSearchParamsFromRequest.$2.getConfig.$1",
                    "type": "string",
                    "tags": [],
                    "label": "key",
                    "description": [],
                    "path": "src/plugins/data/common/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-public.getSearchParamsFromRequest.$2.getConfig.$2",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "defaultOverride",
                    "description": [],
                    "signature": [
                      "T | undefined"
                    ],
                    "path": "src/plugins/data/common/types.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.getTime",
        "type": "Function",
        "tags": [],
        "label": "getTime",
        "description": [],
        "signature": [
          "(indexPattern: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " | undefined, timeRange: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          ", options: { forceNow?: Date | undefined; fieldName?: string | undefined; } | undefined) => ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.RangeFilter",
            "text": "RangeFilter"
          },
          " | ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.ScriptedRangeFilter",
            "text": "ScriptedRangeFilter"
          },
          " | ",
          "MatchAllRangeFilter",
          " | undefined"
        ],
        "path": "src/plugins/data/common/query/timefilter/get_time.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.getTime.$1",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.getTime.$2",
            "type": "Object",
            "tags": [],
            "label": "timeRange",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              }
            ],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-public.getTime.$3",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.getTime.$3.forceNow",
                "type": "Object",
                "tags": [],
                "label": "forceNow",
                "description": [],
                "signature": [
                  "Date | undefined"
                ],
                "path": "src/plugins/data/common/query/timefilter/get_time.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.getTime.$3.fieldName",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data/common/query/timefilter/get_time.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.injectReferences",
        "type": "Function",
        "tags": [],
        "label": "injectReferences",
        "description": [],
        "signature": [
          "(searchSourceFields: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SerializedSearchSourceFields",
            "text": "SerializedSearchSourceFields"
          },
          " & { indexRefName: string; }, references: ",
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObjectReference",
            "text": "SavedObjectReference"
          },
          "[]) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SerializedSearchSourceFields",
            "text": "SerializedSearchSourceFields"
          }
        ],
        "path": "src/plugins/data/common/search/search_source/inject_references.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.injectReferences.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "searchSourceFields",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SerializedSearchSourceFields",
                "text": "SerializedSearchSourceFields"
              },
              " & { indexRefName: string; }"
            ],
            "path": "src/plugins/data/common/search/search_source/inject_references.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-public.injectReferences.$2",
            "type": "Array",
            "tags": [],
            "label": "references",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObjectReference",
                "text": "SavedObjectReference"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/search/search_source/inject_references.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.isCompleteResponse",
        "type": "Function",
        "tags": [],
        "label": "isCompleteResponse",
        "description": [],
        "signature": [
          "(response?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<any> | undefined) => boolean"
        ],
        "path": "src/plugins/data/common/search/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.isCompleteResponse.$1",
            "type": "Object",
            "tags": [],
            "label": "response",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IKibanaSearchResponse",
                "text": "IKibanaSearchResponse"
              },
              "<any> | undefined"
            ],
            "path": "src/plugins/data/common/search/utils.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "true if response is completed successfully"
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.isErrorResponse",
        "type": "Function",
        "tags": [],
        "label": "isErrorResponse",
        "description": [],
        "signature": [
          "(response?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<any> | undefined) => boolean"
        ],
        "path": "src/plugins/data/common/search/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.isErrorResponse.$1",
            "type": "Object",
            "tags": [],
            "label": "response",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IKibanaSearchResponse",
                "text": "IKibanaSearchResponse"
              },
              "<any> | undefined"
            ],
            "path": "src/plugins/data/common/search/utils.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "true if response had an error while executing in ES"
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.isPartialResponse",
        "type": "Function",
        "tags": [],
        "label": "isPartialResponse",
        "description": [],
        "signature": [
          "(response?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<any> | undefined) => boolean"
        ],
        "path": "src/plugins/data/common/search/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.isPartialResponse.$1",
            "type": "Object",
            "tags": [],
            "label": "response",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IKibanaSearchResponse",
                "text": "IKibanaSearchResponse"
              },
              "<any> | undefined"
            ],
            "path": "src/plugins/data/common/search/utils.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "true if request is still running an/d response contains partial results"
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.isQuery",
        "type": "Function",
        "tags": [],
        "label": "isQuery",
        "description": [],
        "signature": [
          "(x: unknown) => x is ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.Query",
            "text": "Query"
          }
        ],
        "path": "src/plugins/data/common/query/is_query.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.isQuery.$1",
            "type": "Unknown",
            "tags": [],
            "label": "x",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/data/common/query/is_query.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.isTimeRange",
        "type": "Function",
        "tags": [],
        "label": "isTimeRange",
        "description": [],
        "signature": [
          "(x: unknown) => x is ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          }
        ],
        "path": "src/plugins/data/common/query/timefilter/is_time_range.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.isTimeRange.$1",
            "type": "Unknown",
            "tags": [],
            "label": "x",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/data/common/query/timefilter/is_time_range.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.parseSearchSourceJSON",
        "type": "Function",
        "tags": [],
        "label": "parseSearchSourceJSON",
        "description": [],
        "signature": [
          "(searchSourceJSON: string) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SerializedSearchSourceFields",
            "text": "SerializedSearchSourceFields"
          }
        ],
        "path": "src/plugins/data/common/search/search_source/parse_json.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.parseSearchSourceJSON.$1",
            "type": "string",
            "tags": [],
            "label": "searchSourceJSON",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/data/common/search/search_source/parse_json.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ShardFailureOpenModalButton",
        "type": "Function",
        "tags": [],
        "label": "ShardFailureOpenModalButton",
        "description": [],
        "signature": [
          "(props: ",
          "ShardFailureOpenModalButtonProps",
          ") => JSX.Element"
        ],
        "path": "src/plugins/data/public/shard_failure_modal/index.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.ShardFailureOpenModalButton.$1",
            "type": "Object",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "ShardFailureOpenModalButtonProps"
            ],
            "path": "src/plugins/data/public/shard_failure_modal/index.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.tabifyAggResponse",
        "type": "Function",
        "tags": [],
        "label": "tabifyAggResponse",
        "description": [
          "\nSets up the ResponseWriter and kicks off bucket collection."
        ],
        "signature": [
          "(aggConfigs: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfigs",
            "text": "AggConfigs"
          },
          ", esResponse: Record<string, any>, respOpts: Partial<",
          "TabbedResponseWriterOptions",
          "> | undefined) => ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.Datatable",
            "text": "Datatable"
          }
        ],
        "path": "src/plugins/data/common/search/tabify/tabify.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.tabifyAggResponse.$1",
            "type": "Object",
            "tags": [],
            "label": "aggConfigs",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              }
            ],
            "path": "src/plugins/data/common/search/tabify/tabify.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-public.tabifyAggResponse.$2",
            "type": "Object",
            "tags": [],
            "label": "esResponse",
            "description": [],
            "signature": [
              "Record<string, any>"
            ],
            "path": "src/plugins/data/common/search/tabify/tabify.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-public.tabifyAggResponse.$3",
            "type": "Object",
            "tags": [],
            "label": "respOpts",
            "description": [],
            "signature": [
              "Partial<",
              "TabbedResponseWriterOptions",
              "> | undefined"
            ],
            "path": "src/plugins/data/common/search/tabify/tabify.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "data",
        "id": "def-public.AggFunctionsMapping",
        "type": "Interface",
        "tags": [],
        "label": "AggFunctionsMapping",
        "description": [
          "\nA global list of the expression function definitions for each agg type function."
        ],
        "path": "src/plugins/data/common/search/aggs/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggFilter",
            "type": "Object",
            "tags": [],
            "label": "aggFilter",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggFilter\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggFilters",
            "type": "Object",
            "tags": [],
            "label": "aggFilters",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggFilters\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggSignificantTerms",
            "type": "Object",
            "tags": [],
            "label": "aggSignificantTerms",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggSignificantTerms\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggIpRange",
            "type": "Object",
            "tags": [],
            "label": "aggIpRange",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggIpRange\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggDateRange",
            "type": "Object",
            "tags": [],
            "label": "aggDateRange",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggDateRange\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggRange",
            "type": "Object",
            "tags": [],
            "label": "aggRange",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggRange\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggGeoTile",
            "type": "Object",
            "tags": [],
            "label": "aggGeoTile",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggGeoTile\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggGeoHash",
            "type": "Object",
            "tags": [],
            "label": "aggGeoHash",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggGeoHash\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggHistogram",
            "type": "Object",
            "tags": [],
            "label": "aggHistogram",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggHistogram\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggDateHistogram",
            "type": "Object",
            "tags": [],
            "label": "aggDateHistogram",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggDateHistogram\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggTerms",
            "type": "Object",
            "tags": [],
            "label": "aggTerms",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggTerms\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggTimeSeries",
            "type": "Object",
            "tags": [],
            "label": "aggTimeSeries",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggTimeSeries\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggMultiTerms",
            "type": "Object",
            "tags": [],
            "label": "aggMultiTerms",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggMultiTerms\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggRareTerms",
            "type": "Object",
            "tags": [],
            "label": "aggRareTerms",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggRareTerms\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggAvg",
            "type": "Object",
            "tags": [],
            "label": "aggAvg",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggAvg\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggBucketAvg",
            "type": "Object",
            "tags": [],
            "label": "aggBucketAvg",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggBucketAvg\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggBucketMax",
            "type": "Object",
            "tags": [],
            "label": "aggBucketMax",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggBucketMax\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggBucketMin",
            "type": "Object",
            "tags": [],
            "label": "aggBucketMin",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggBucketMin\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggBucketSum",
            "type": "Object",
            "tags": [],
            "label": "aggBucketSum",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggBucketSum\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggFilteredMetric",
            "type": "Object",
            "tags": [],
            "label": "aggFilteredMetric",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggFilteredMetric\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggCardinality",
            "type": "Object",
            "tags": [],
            "label": "aggCardinality",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggCardinality\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggValueCount",
            "type": "Object",
            "tags": [],
            "label": "aggValueCount",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggValueCount\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggCount",
            "type": "Object",
            "tags": [],
            "label": "aggCount",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggCount\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggCumulativeSum",
            "type": "Object",
            "tags": [],
            "label": "aggCumulativeSum",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggCumulativeSum\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggDerivative",
            "type": "Object",
            "tags": [],
            "label": "aggDerivative",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggDerivative\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggGeoBounds",
            "type": "Object",
            "tags": [],
            "label": "aggGeoBounds",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggGeoBounds\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggGeoCentroid",
            "type": "Object",
            "tags": [],
            "label": "aggGeoCentroid",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggGeoCentroid\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggMax",
            "type": "Object",
            "tags": [],
            "label": "aggMax",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggMax\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggMedian",
            "type": "Object",
            "tags": [],
            "label": "aggMedian",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggMedian\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggSinglePercentile",
            "type": "Object",
            "tags": [],
            "label": "aggSinglePercentile",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggSinglePercentile\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggSinglePercentileRank",
            "type": "Object",
            "tags": [],
            "label": "aggSinglePercentileRank",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggSinglePercentileRank\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggMin",
            "type": "Object",
            "tags": [],
            "label": "aggMin",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggMin\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggMovingAvg",
            "type": "Object",
            "tags": [],
            "label": "aggMovingAvg",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggMovingAvg\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggPercentileRanks",
            "type": "Object",
            "tags": [],
            "label": "aggPercentileRanks",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggPercentileRanks\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggPercentiles",
            "type": "Object",
            "tags": [],
            "label": "aggPercentiles",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggPercentiles\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggSerialDiff",
            "type": "Object",
            "tags": [],
            "label": "aggSerialDiff",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggSerialDiff\", any, Arguments, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggStdDeviation",
            "type": "Object",
            "tags": [],
            "label": "aggStdDeviation",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggStdDeviation\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggSum",
            "type": "Object",
            "tags": [],
            "label": "aggSum",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggSum\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggTopHit",
            "type": "Object",
            "tags": [],
            "label": "aggTopHit",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggTopHit\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggFunctionsMapping.aggTopMetrics",
            "type": "Object",
            "tags": [],
            "label": "aggTopMetrics",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionFunctionDefinition",
                "text": "ExpressionFunctionDefinition"
              },
              "<\"aggTopMetrics\", any, AggArgs, ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggExpressionType",
                "text": "AggExpressionType"
              },
              ", ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExecutionContext",
                "text": "ExecutionContext"
              },
              "<",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              ", ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">>"
            ],
            "path": "src/plugins/data/common/search/aggs/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggParamOption",
        "type": "Interface",
        "tags": [],
        "label": "AggParamOption",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/agg_params.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.AggParamOption.val",
            "type": "string",
            "tags": [],
            "label": "val",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_params.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggParamOption.display",
            "type": "string",
            "tags": [],
            "label": "display",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/agg_params.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggParamOption.enabled",
            "type": "Function",
            "tags": [],
            "label": "enabled",
            "description": [],
            "signature": [
              "((agg: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ") => boolean) | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_params.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.AggParamOption.enabled.$1",
                "type": "Object",
                "tags": [],
                "label": "agg",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/agg_params.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.DataPublicPluginStartActions",
        "type": "Interface",
        "tags": [],
        "label": "DataPublicPluginStartActions",
        "description": [
          "\nutilities to generate filters from action context"
        ],
        "path": "src/plugins/data/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPluginStartActions.createFiltersFromValueClickAction",
            "type": "Function",
            "tags": [],
            "label": "createFiltersFromValueClickAction",
            "description": [],
            "signature": [
              "({ data, negate, }: ValueClickDataContext) => Promise<",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.Filter",
                "text": "Filter"
              },
              "[]>"
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.DataPublicPluginStartActions.createFiltersFromValueClickAction.$1",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  "ValueClickDataContext"
                ],
                "path": "src/plugins/data/public/actions/filters/create_filters_from_value_click.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataPublicPluginStartActions.createFiltersFromRangeSelectAction",
            "type": "Function",
            "tags": [],
            "label": "createFiltersFromRangeSelectAction",
            "description": [],
            "signature": [
              "(event: RangeSelectDataContext) => Promise<",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.Filter",
                "text": "Filter"
              },
              "[]>"
            ],
            "path": "src/plugins/data/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.DataPublicPluginStartActions.createFiltersFromRangeSelectAction.$1",
                "type": "Object",
                "tags": [],
                "label": "event",
                "description": [],
                "signature": [
                  "RangeSelectDataContext"
                ],
                "path": "src/plugins/data/public/actions/filters/create_filters_from_range_select.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.DataViewListItem",
        "type": "Interface",
        "tags": [],
        "label": "DataViewListItem",
        "description": [
          "\nResult from data view search - summary data."
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.DataViewListItem.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nSaved object id (or generated id if in-memory only)"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataViewListItem.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nNamespace ids"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataViewListItem.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "\nData view title"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataViewListItem.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nData view type"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataViewListItem.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nData view type meta"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.DataViewListItem.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.GetFieldsOptions",
        "type": "Interface",
        "tags": [],
        "label": "GetFieldsOptions",
        "description": [],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.pattern",
            "type": "string",
            "tags": [],
            "label": "pattern",
            "description": [],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.lookBack",
            "type": "CompoundType",
            "tags": [],
            "label": "lookBack",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.metaFields",
            "type": "Array",
            "tags": [],
            "label": "metaFields",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.rollupIndex",
            "type": "string",
            "tags": [],
            "label": "rollupIndex",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.allowNoIndex",
            "type": "CompoundType",
            "tags": [],
            "label": "allowNoIndex",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.indexFilter",
            "type": "Object",
            "tags": [],
            "label": "indexFilter",
            "description": [],
            "signature": [
              "QueryDslQueryContainer",
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.includeUnmapped",
            "type": "CompoundType",
            "tags": [],
            "label": "includeUnmapped",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.GetFieldsOptions.fields",
            "type": "Array",
            "tags": [],
            "label": "fields",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IEsSearchRequest",
        "type": "Interface",
        "tags": [],
        "label": "IEsSearchRequest",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IEsSearchRequest",
            "text": "IEsSearchRequest"
          },
          " extends ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchRequest",
            "text": "IKibanaSearchRequest"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchRequestParams",
            "text": "ISearchRequestParams"
          },
          ">"
        ],
        "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IEsSearchRequest.indexType",
            "type": "string",
            "tags": [],
            "label": "indexType",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IKibanaSearchRequest",
        "type": "Interface",
        "tags": [],
        "label": "IKibanaSearchRequest",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchRequest",
            "text": "IKibanaSearchRequest"
          },
          "<Params>"
        ],
        "path": "src/plugins/data/common/search/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchRequest.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nAn id can be used to uniquely identify this request."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchRequest.params",
            "type": "Uncategorized",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "Params | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IKibanaSearchResponse",
        "type": "Interface",
        "tags": [],
        "label": "IKibanaSearchResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<RawResponse>"
        ],
        "path": "src/plugins/data/common/search/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nSome responses may contain a unique id to identify the request this response came from."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.total",
            "type": "number",
            "tags": [],
            "label": "total",
            "description": [
              "\nIf relevant to the search strategy, return a total number\nthat represents how progress is indicated."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.loaded",
            "type": "number",
            "tags": [],
            "label": "loaded",
            "description": [
              "\nIf relevant to the search strategy, return a loaded number\nthat represents how progress is indicated."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.isRunning",
            "type": "CompoundType",
            "tags": [],
            "label": "isRunning",
            "description": [
              "\nIndicates whether search is still in flight"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.isPartial",
            "type": "CompoundType",
            "tags": [],
            "label": "isPartial",
            "description": [
              "\nIndicates whether the results returned are complete or partial"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.isRestored",
            "type": "CompoundType",
            "tags": [],
            "label": "isRestored",
            "description": [
              "\nIndicates whether the results returned are from the async-search index"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.isStored",
            "type": "CompoundType",
            "tags": [],
            "label": "isStored",
            "description": [
              "\nIndicates whether the search has been saved to a search-session object and long keepAlive was set"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.warning",
            "type": "string",
            "tags": [],
            "label": "warning",
            "description": [
              "\nOptional warnings returned from Elasticsearch (for example, deprecation warnings)"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.IKibanaSearchResponse.rawResponse",
            "type": "Uncategorized",
            "tags": [],
            "label": "rawResponse",
            "description": [
              "\nThe raw response returned by the internal search method (usually the raw ES response)"
            ],
            "signature": [
              "RawResponse"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ISearchOptions",
        "type": "Interface",
        "tags": [],
        "label": "ISearchOptions",
        "description": [],
        "path": "src/plugins/data/common/search/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.abortSignal",
            "type": "Object",
            "tags": [],
            "label": "abortSignal",
            "description": [
              "\nAn `AbortSignal` that allows the caller of `search` to abort a search request."
            ],
            "signature": [
              "AbortSignal | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.strategy",
            "type": "string",
            "tags": [],
            "label": "strategy",
            "description": [
              "\nUse this option to force using a specific server side search strategy. Leave empty to use the default strategy."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.legacyHitsTotal",
            "type": "CompoundType",
            "tags": [],
            "label": "legacyHitsTotal",
            "description": [
              "\nRequest the legacy format for the total number of hits. If sending `rest_total_hits_as_int` to\nsomething other than `true`, this should be set to `false`."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.sessionId",
            "type": "string",
            "tags": [],
            "label": "sessionId",
            "description": [
              "\nA session ID, grouping multiple search requests into a single session."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.isStored",
            "type": "CompoundType",
            "tags": [],
            "label": "isStored",
            "description": [
              "\nWhether the session is already saved (i.e. sent to background)"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.isSearchStored",
            "type": "CompoundType",
            "tags": [],
            "label": "isSearchStored",
            "description": [
              "\nWhether the search was successfully polled after session was saved. Search was added to a session saved object and keepAlive extended."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.isRestore",
            "type": "CompoundType",
            "tags": [],
            "label": "isRestore",
            "description": [
              "\nWhether the session is restored (i.e. search requests should re-use the stored search IDs,\nrather than starting from scratch)"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.executionContext",
            "type": "Object",
            "tags": [],
            "label": "executionContext",
            "description": [
              "\nRepresents a meta-information about a Kibana entity intitating a saerch request."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-execution-context-common",
                "scope": "common",
                "docId": "kibKbnCoreExecutionContextCommonPluginApi",
                "section": "def-common.KibanaExecutionContext",
                "text": "KibanaExecutionContext"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [
              "\nIndex pattern reference is used for better error messages"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchOptions.transport",
            "type": "Object",
            "tags": [],
            "label": "transport",
            "description": [
              "\nTransportRequestOptions, other than `signal`, to pass through to the ES client.\nTo pass an abort signal, use {@link ISearchOptions.abortSignal}"
            ],
            "signature": [
              "Omit<",
              "TransportRequestOptions",
              ", \"signal\"> | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ISearchStartSearchSource",
        "type": "Interface",
        "tags": [],
        "label": "ISearchStartSearchSource",
        "description": [
          "\nhigh level search service"
        ],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchStartSearchSource",
            "text": "ISearchStartSearchSource"
          },
          " extends ",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.PersistableStateService",
            "text": "PersistableStateService"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SerializedSearchSourceFields",
            "text": "SerializedSearchSourceFields"
          },
          ">"
        ],
        "path": "src/plugins/data/common/search/search_source/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchStartSearchSource.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\ncreates {@link SearchSource} based on provided serialized {@link SearchSourceFields}"
            ],
            "signature": [
              "(fields?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SerializedSearchSourceFields",
                "text": "SerializedSearchSourceFields"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchSource",
                "text": "ISearchSource"
              },
              ">"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.ISearchStartSearchSource.create.$1",
                "type": "Object",
                "tags": [],
                "label": "fields",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.SerializedSearchSourceFields",
                    "text": "SerializedSearchSourceFields"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/search/search_source/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchStartSearchSource.createEmpty",
            "type": "Function",
            "tags": [],
            "label": "createEmpty",
            "description": [
              "\ncreates empty {@link SearchSource}"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchSource",
                "text": "ISearchSource"
              }
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.OptionedValueProp",
        "type": "Interface",
        "tags": [],
        "label": "OptionedValueProp",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.OptionedValueProp.value",
            "type": "string",
            "tags": [],
            "label": "value",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.OptionedValueProp.text",
            "type": "string",
            "tags": [],
            "label": "text",
            "description": [],
            "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.OptionedValueProp.disabled",
            "type": "CompoundType",
            "tags": [],
            "label": "disabled",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.OptionedValueProp.isCompatible",
            "type": "Function",
            "tags": [],
            "label": "isCompatible",
            "description": [],
            "signature": [
              "(agg: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              ") => boolean"
            ],
            "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.OptionedValueProp.isCompatible.$1",
                "type": "Object",
                "tags": [],
                "label": "agg",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  }
                ],
                "path": "src/plugins/data/common/search/aggs/param_types/optioned.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.SearchSourceFields",
        "type": "Interface",
        "tags": [],
        "label": "SearchSourceFields",
        "description": [
          "\nsearch source fields"
        ],
        "path": "src/plugins/data/common/search/search_source/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.query",
            "type": "CompoundType",
            "tags": [],
            "label": "query",
            "description": [
              "\n{@link Query}"
            ],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.Query",
                "text": "Query"
              },
              " | ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.AggregateQuery",
                "text": "AggregateQuery"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.filter",
            "type": "CompoundType",
            "tags": [],
            "label": "filter",
            "description": [
              "\n{@link Filter}"
            ],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.Filter",
                "text": "Filter"
              },
              " | ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.Filter",
                "text": "Filter"
              },
              "[] | (() => ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.Filter",
                "text": "Filter"
              },
              " | ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.Filter",
                "text": "Filter"
              },
              "[] | undefined) | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.sort",
            "type": "CompoundType",
            "tags": [],
            "label": "sort",
            "description": [
              "\n{@link EsQuerySortValue}"
            ],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.EsQuerySortValue",
                "text": "EsQuerySortValue"
              },
              " | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.EsQuerySortValue",
                "text": "EsQuerySortValue"
              },
              "[] | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.highlight",
            "type": "Any",
            "tags": [],
            "label": "highlight",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.highlightAll",
            "type": "CompoundType",
            "tags": [],
            "label": "highlightAll",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.trackTotalHits",
            "type": "CompoundType",
            "tags": [],
            "label": "trackTotalHits",
            "description": [],
            "signature": [
              "number | boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.aggs",
            "type": "CompoundType",
            "tags": [],
            "label": "aggs",
            "description": [
              "\n{@link AggConfigs}"
            ],
            "signature": [
              "object | ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              },
              " | (() => object) | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.from",
            "type": "number",
            "tags": [],
            "label": "from",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.size",
            "type": "number",
            "tags": [],
            "label": "size",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.source",
            "type": "CompoundType",
            "tags": [],
            "label": "source",
            "description": [],
            "signature": [
              "boolean | ",
              "Fields",
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.version",
            "type": "CompoundType",
            "tags": [],
            "label": "version",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.fields",
            "type": "Array",
            "tags": [],
            "label": "fields",
            "description": [
              "\nRetrieve fields via the search Fields API"
            ],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchFieldValue",
                "text": "SearchFieldValue"
              },
              "[] | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.fieldsFromSource",
            "type": "CompoundType",
            "tags": [
              "deprecated"
            ],
            "label": "fieldsFromSource",
            "description": [
              "\nRetreive fields directly from _source (legacy behavior)\n"
            ],
            "signature": [
              "Fields",
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": []
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.index",
            "type": "Object",
            "tags": [],
            "label": "index",
            "description": [
              "\n{@link IndexPatternService}"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.timeout",
            "type": "string",
            "tags": [],
            "label": "timeout",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.terminate_after",
            "type": "number",
            "tags": [],
            "label": "terminate_after",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.searchAfter",
            "type": "Array",
            "tags": [],
            "label": "searchAfter",
            "description": [],
            "signature": [
              "SortResults",
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.pit",
            "type": "Object",
            "tags": [],
            "label": "pit",
            "description": [
              "\nAllow querying to use a point-in-time ID for paging results"
            ],
            "signature": [
              "SearchPointInTimeReference",
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.SearchSourceFields.parent",
            "type": "Object",
            "tags": [],
            "label": "parent",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.SearchSourceFields",
                "text": "SearchSourceFields"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/search_source/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ShardFailureRequest",
        "type": "Interface",
        "tags": [],
        "label": "ShardFailureRequest",
        "description": [],
        "path": "src/plugins/data/public/shard_failure_modal/shard_failure_types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.ShardFailureRequest.docvalue_fields",
            "type": "Array",
            "tags": [],
            "label": "docvalue_fields",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data/public/shard_failure_modal/shard_failure_types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ShardFailureRequest._source",
            "type": "Unknown",
            "tags": [],
            "label": "_source",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/data/public/shard_failure_modal/shard_failure_types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ShardFailureRequest.query",
            "type": "Unknown",
            "tags": [],
            "label": "query",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/data/public/shard_failure_modal/shard_failure_types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ShardFailureRequest.script_fields",
            "type": "Unknown",
            "tags": [],
            "label": "script_fields",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/data/public/shard_failure_modal/shard_failure_types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ShardFailureRequest.sort",
            "type": "Unknown",
            "tags": [],
            "label": "sort",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/data/public/shard_failure_modal/shard_failure_types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ShardFailureRequest.stored_fields",
            "type": "Array",
            "tags": [],
            "label": "stored_fields",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data/public/shard_failure_modal/shard_failure_types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "data",
        "id": "def-public.BUCKET_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "BUCKET_TYPES",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/buckets/bucket_agg_types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ES_FIELD_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "ES_FIELD_TYPES",
        "description": [],
        "path": "packages/kbn-field-types/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.KBN_FIELD_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "KBN_FIELD_TYPES",
        "description": [],
        "path": "packages/kbn-field-types/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.METRIC_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "METRIC_TYPES",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/metrics/metric_agg_types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.SortDirection",
        "type": "Enum",
        "tags": [],
        "label": "SortDirection",
        "description": [],
        "path": "src/plugins/data/common/search/search_source/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "data",
        "id": "def-public.AggConfigOptions",
        "type": "Type",
        "tags": [],
        "label": "AggConfigOptions",
        "description": [],
        "signature": [
          "{ type: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IAggType",
            "text": "IAggType"
          },
          "; id?: string | undefined; params?: {} | ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          " | undefined; schema?: string | undefined; enabled?: boolean | undefined; }"
        ],
        "path": "src/plugins/data/common/search/aggs/agg_config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggConfigSerialized",
        "type": "Type",
        "tags": [],
        "label": "AggConfigSerialized",
        "description": [],
        "signature": [
          "{ type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          " | undefined; schema?: string | undefined; }"
        ],
        "path": "src/plugins/data/common/search/aggs/agg_config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggGroupName",
        "type": "Type",
        "tags": [],
        "label": "AggGroupName",
        "description": [],
        "signature": [
          "\"none\" | \"metrics\" | \"buckets\""
        ],
        "path": "src/plugins/data/common/search/aggs/agg_groups.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggParam",
        "type": "Type",
        "tags": [],
        "label": "AggParam",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.BaseParamType",
            "text": "BaseParamType"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfig",
            "text": "AggConfig"
          },
          ">"
        ],
        "path": "src/plugins/data/common/search/aggs/agg_params.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggregationRestrictions",
        "type": "Type",
        "tags": [],
        "label": "AggregationRestrictions",
        "description": [],
        "signature": [
          "{ [x: string]: { agg?: string | undefined; interval?: number | undefined; fixed_interval?: string | undefined; calendar_interval?: string | undefined; delay?: string | undefined; time_zone?: string | undefined; }; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggregationRestrictions",
        "type": "Type",
        "tags": [],
        "label": "AggregationRestrictions",
        "description": [],
        "signature": [
          "{ [x: string]: { agg?: string | undefined; interval?: number | undefined; fixed_interval?: string | undefined; calendar_interval?: string | undefined; delay?: string | undefined; time_zone?: string | undefined; }; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggsStart",
        "type": "Type",
        "tags": [],
        "label": "AggsStart",
        "description": [
          "\nAggsStart represents the actual external contract as AggsCommonStart\nis only used internally. The difference is that AggsStart includes the\ntypings for the registry with initialized agg types.\n"
        ],
        "signature": [
          "{ calculateAutoTimeExpression: (range: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          ") => string | undefined; createAggConfigs: (indexPattern: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ", configStates?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.CreateAggConfigParams",
            "text": "CreateAggConfigParams"
          },
          "[] | undefined, options?: Partial<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfigsOptions",
            "text": "AggConfigsOptions"
          },
          "> | undefined) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfigs",
            "text": "AggConfigs"
          },
          "; types: { get: (name: string) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.BucketAggType",
            "text": "BucketAggType"
          },
          "<any> | ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.MetricAggType",
            "text": "MetricAggType"
          },
          "<any>; getAll: () => { buckets: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.BucketAggType",
            "text": "BucketAggType"
          },
          "<any>[]; metrics: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.MetricAggType",
            "text": "MetricAggType"
          },
          "<any>[]; }; }; }"
        ],
        "path": "src/plugins/data/common/search/aggs/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.APPLY_FILTER_TRIGGER",
        "type": "string",
        "tags": [],
        "label": "APPLY_FILTER_TRIGGER",
        "description": [],
        "signature": [
          "\"FILTER_TRIGGER\""
        ],
        "path": "src/plugins/data/public/triggers/apply_filter_trigger.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.DataViewsContract",
        "type": "Type",
        "tags": [],
        "label": "DataViewsContract",
        "description": [],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "public",
            "docId": "kibDataViewsPluginApi",
            "section": "def-public.DataViewsServicePublic",
            "text": "DataViewsServicePublic"
          }
        ],
        "path": "src/plugins/data_views/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ES_SEARCH_STRATEGY",
        "type": "string",
        "tags": [],
        "label": "ES_SEARCH_STRATEGY",
        "description": [],
        "signature": [
          "\"es\""
        ],
        "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.EsaggsExpressionFunctionDefinition",
        "type": "Type",
        "tags": [],
        "label": "EsaggsExpressionFunctionDefinition",
        "description": [],
        "signature": [
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"esaggs\", Input, Arguments, Output, ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">>"
        ],
        "path": "src/plugins/data/common/search/expressions/esaggs/esaggs_fn.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.EsQuerySortValue",
        "type": "Type",
        "tags": [],
        "label": "EsQuerySortValue",
        "description": [],
        "signature": [
          "{ [x: string]: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SortDirection",
            "text": "SortDirection"
          },
          " | ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SortDirectionNumeric",
            "text": "SortDirectionNumeric"
          },
          " | ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SortDirectionFormat",
            "text": "SortDirectionFormat"
          },
          "; }"
        ],
        "path": "src/plugins/data/common/search/search_source/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ExecutionContextSearch",
        "type": "Type",
        "tags": [],
        "label": "ExecutionContextSearch",
        "description": [],
        "signature": [
          "{ filters?: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.Filter",
            "text": "Filter"
          },
          "[] | undefined; query?: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.Query",
            "text": "Query"
          },
          " | ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.Query",
            "text": "Query"
          },
          "[] | undefined; timeRange?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          " | undefined; disableShardWarnings?: boolean | undefined; }"
        ],
        "path": "src/plugins/data/common/search/expressions/kibana_context_type.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ExpressionFunctionKibana",
        "type": "Type",
        "tags": [],
        "label": "ExpressionFunctionKibana",
        "description": [],
        "signature": [
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"kibana\", ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExpressionValueSearchContext",
            "text": "ExpressionValueSearchContext"
          },
          " | null, object, ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExpressionValueSearchContext",
            "text": "ExpressionValueSearchContext"
          },
          ", ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExecutionContextSearch",
            "text": "ExecutionContextSearch"
          },
          ">>"
        ],
        "path": "src/plugins/data/common/search/expressions/kibana.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ExpressionFunctionKibanaContext",
        "type": "Type",
        "tags": [],
        "label": "ExpressionFunctionKibanaContext",
        "description": [],
        "signature": [
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"kibana_context\", ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExpressionValueSearchContext",
            "text": "ExpressionValueSearchContext"
          },
          " | null, Arguments, Promise<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExpressionValueSearchContext",
            "text": "ExpressionValueSearchContext"
          },
          ">, ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExecutionContextSearch",
            "text": "ExecutionContextSearch"
          },
          ">>"
        ],
        "path": "src/plugins/data/common/search/expressions/kibana_context.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ExpressionFunctionKql",
        "type": "Type",
        "tags": [],
        "label": "ExpressionFunctionKql",
        "description": [],
        "signature": [
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"kql\", null, Arguments, ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.KibanaQueryOutput",
            "text": "KibanaQueryOutput"
          },
          ", ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">>"
        ],
        "path": "src/plugins/data/common/search/expressions/kql.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ExpressionFunctionLucene",
        "type": "Type",
        "tags": [],
        "label": "ExpressionFunctionLucene",
        "description": [],
        "signature": [
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"lucene\", null, Arguments, ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.KibanaQueryOutput",
            "text": "KibanaQueryOutput"
          },
          ", ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">>"
        ],
        "path": "src/plugins/data/common/search/expressions/lucene.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ExpressionValueSearchContext",
        "type": "Type",
        "tags": [],
        "label": "ExpressionValueSearchContext",
        "description": [],
        "signature": [
          "{ type: \"kibana_context\"; } & ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExecutionContextSearch",
            "text": "ExecutionContextSearch"
          }
        ],
        "path": "src/plugins/data/common/search/expressions/kibana_context_type.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IAggConfig",
        "type": "Type",
        "tags": [
          "name",
          "description"
        ],
        "label": "IAggConfig",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfig",
            "text": "AggConfig"
          }
        ],
        "path": "src/plugins/data/common/search/aggs/agg_config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IAggType",
        "type": "Type",
        "tags": [],
        "label": "IAggType",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggType",
            "text": "AggType"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfig",
            "text": "AggConfig"
          },
          ", ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggParamType",
            "text": "AggParamType"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.AggConfig",
            "text": "AggConfig"
          },
          ">>"
        ],
        "path": "src/plugins/data/common/search/aggs/agg_type.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IEsSearchResponse",
        "type": "Type",
        "tags": [],
        "label": "IEsSearchResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<",
          "SearchResponse",
          "<Source, Record<string, ",
          "AggregationsAggregate",
          ">>>"
        ],
        "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IFieldParamType",
        "type": "Type",
        "tags": [],
        "label": "IFieldParamType",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.FieldParamType",
            "text": "FieldParamType"
          }
        ],
        "path": "src/plugins/data/common/search/aggs/param_types/field.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IMetricAggType",
        "type": "Type",
        "tags": [],
        "label": "IMetricAggType",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.MetricAggType",
            "text": "MetricAggType"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IMetricAggConfig",
            "text": "IMetricAggConfig"
          },
          ">"
        ],
        "path": "src/plugins/data/common/search/aggs/metrics/metric_agg_type.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.IndexPatternLoadExpressionFunctionDefinition",
        "type": "Type",
        "tags": [],
        "label": "IndexPatternLoadExpressionFunctionDefinition",
        "description": [],
        "signature": [
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"indexPatternLoad\", null, Arguments, Output, ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">>"
        ],
        "path": "src/plugins/data_views/common/expressions/load_index_pattern.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ISearchGeneric",
        "type": "Type",
        "tags": [],
        "label": "ISearchGeneric",
        "description": [],
        "signature": [
          "<SearchStrategyRequest extends ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchRequest",
            "text": "IKibanaSearchRequest"
          },
          "<any> = ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IEsSearchRequest",
            "text": "IEsSearchRequest"
          },
          ", SearchStrategyResponse extends ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<any> = ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IEsSearchResponse",
            "text": "IEsSearchResponse"
          },
          "<any>>(request: SearchStrategyRequest, options?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchOptions",
            "text": "ISearchOptions"
          },
          " | undefined) => ",
          "Observable",
          "<SearchStrategyResponse>"
        ],
        "path": "src/plugins/data/common/search/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchGeneric.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              "SearchStrategyRequest"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.ISearchGeneric.$2",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchOptions",
                "text": "ISearchOptions"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ISearchSource",
        "type": "Type",
        "tags": [],
        "label": "ISearchSource",
        "description": [
          "\nsearch source interface"
        ],
        "signature": [
          "{ create: () => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; fetch: (options?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceSearchOptions",
            "text": "SearchSourceSearchOptions"
          },
          ") => Promise<",
          "SearchResponse",
          "<unknown, Record<string, ",
          "AggregationsAggregate",
          ">>>; history: ",
          "SearchRequest",
          "[]; setOverwriteDataViewType: (overwriteType: string | false | undefined) => void; setField: <K extends keyof ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          ">(field: K, value: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          "[K]) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; removeField: <K extends keyof ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          ">(field: K) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; setFields: (newFields: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          ") => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; getId: () => string; getFields: () => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          "; getField: <K extends keyof ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          ">(field: K, recurse?: boolean) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          "[K]; getActiveIndexFilter: () => any[]; getOwnField: <K extends keyof ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          ">(field: K) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceFields",
            "text": "SearchSourceFields"
          },
          "[K]; createCopy: () => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; createChild: (options?: {}) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; setParent: (parent?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchSource",
            "text": "ISearchSource"
          },
          " | undefined, options?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceOptions",
            "text": "SearchSourceOptions"
          },
          ") => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          "; getParent: () => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          " | undefined; fetch$: <T = {}>(options?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceSearchOptions",
            "text": "SearchSourceSearchOptions"
          },
          ") => ",
          "Observable",
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<",
          "SearchResponse",
          "<T, Record<string, ",
          "AggregationsAggregate",
          ">>>>; onRequestStart: (handler: (searchSource: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSource",
            "text": "SearchSource"
          },
          ", options?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchSourceSearchOptions",
            "text": "SearchSourceSearchOptions"
          },
          " | undefined) => Promise<unknown>) => void; getSearchRequestBody: () => any; destroy: () => void; getSerializedFields: (recurse?: boolean, includeFields?: boolean) => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SerializedSearchSourceFields",
            "text": "SerializedSearchSourceFields"
          },
          "; serialize: () => { searchSourceJSON: string; references: ",
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObjectReference",
            "text": "SavedObjectReference"
          },
          "[]; }; toExpressionAst: ({ asDatatable }?: ExpressionAstOptions) => ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionAstExpression",
            "text": "ExpressionAstExpression"
          },
          "; parseActiveIndexPatternFromQueryString: (queryString: string) => string[]; }"
        ],
        "path": "src/plugins/data/common/search/search_source/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.KibanaContext",
        "type": "Type",
        "tags": [],
        "label": "KibanaContext",
        "description": [],
        "signature": [
          "{ type: \"kibana_context\"; } & ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ExecutionContextSearch",
            "text": "ExecutionContextSearch"
          }
        ],
        "path": "src/plugins/data/common/search/expressions/kibana_context_type.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.NowProviderInternalContract",
        "type": "Type",
        "tags": [],
        "label": "NowProviderInternalContract",
        "description": [],
        "signature": [
          "{ get: () => Date; set: (now: Date) => void; reset: () => void; }"
        ],
        "path": "src/plugins/data/public/now_provider/now_provider.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.NowProviderPublicContract",
        "type": "Type",
        "tags": [],
        "label": "NowProviderPublicContract",
        "description": [],
        "signature": [
          "{ get: () => Date; }"
        ],
        "path": "src/plugins/data/public/now_provider/now_provider.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.ParsedInterval",
        "type": "Type",
        "tags": [],
        "label": "ParsedInterval",
        "description": [],
        "signature": [
          "{ value: number; unit: ",
          {
            "pluginId": "@kbn/datemath",
            "scope": "common",
            "docId": "kibKbnDatemathPluginApi",
            "section": "def-common.Unit",
            "text": "Unit"
          },
          "; type: \"fixed\" | \"calendar\"; }"
        ],
        "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_es_interval.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.QueryState",
        "type": "Type",
        "tags": [],
        "label": "QueryState",
        "description": [
          "\nAll query state service state\n"
        ],
        "signature": [
          "{ time?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          " | undefined; refreshInterval?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataQueryPluginApi",
            "section": "def-common.RefreshInterval",
            "text": "RefreshInterval"
          },
          " | undefined; filters?: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.Filter",
            "text": "Filter"
          },
          "[] | undefined; query?: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.Query",
            "text": "Query"
          },
          " | ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.AggregateQuery",
            "text": "AggregateQuery"
          },
          " | undefined; }"
        ],
        "path": "src/plugins/data/common/query/query_state.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.RefreshInterval",
        "type": "Type",
        "tags": [],
        "label": "RefreshInterval",
        "description": [],
        "signature": [
          "{ pause: boolean; value: number; }"
        ],
        "path": "src/plugins/data/common/query/timefilter/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.SavedObject",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "SavedObject",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObject",
            "text": "SavedObject"
          },
          "<T>"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-common/src/saved_objects.ts",
        "deprecated": true,
        "trackAdoption": false,
        "references": [
          {
            "plugin": "@kbn/core-saved-objects-common",
            "path": "packages/core/saved-objects/core-saved-objects-common/index.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_repository.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_repository.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_repository.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_repository.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core",
            "path": "src/core/public/index.ts"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/server/services/sample_data/sample_data_registry.ts"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/server/services/sample_data/sample_data_registry.ts"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/server/services/sample_data/sample_data_registry.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/types.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/types.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/types.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/types.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/types.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/types.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/index.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/server/utils.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/server/utils.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/server/utils.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.test.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.test.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/ui_api/get_table_column_definition.tsx"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/ui_api/get_table_column_definition.tsx"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/ui_api/get_table_column_definition.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/common/types/models/epm.ts"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/common/types/models/epm.ts"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/common/types/models/epm.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/shareable_runtime/types.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/shareable_runtime/types.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/services/kibana/workpad.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/services/kibana/workpad.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/components/home/hooks/use_upload_workpad.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/components/home/hooks/use_upload_workpad.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/packs/types.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/packs/types.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/routes/saved_queries/list/index.tsx"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/routes/saved_queries/list/index.tsx"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/assets/use_assets_status.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/assets/use_assets_status.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/assets/use_assets_status.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/assets/use_assets_status.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/dashboards/utils.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/dashboards/utils.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/dashboards/use_security_dashboards_table.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/dashboards/use_security_dashboards_table.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/components/monitors_page/overview/overview/monitor_detail_flyout.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/components/monitors_page/overview/overview/monitor_detail_flyout.tsx"
          },
          {
            "plugin": "savedObjects",
            "path": "src/plugins/saved_objects/public/saved_object/helpers/find_object_by_title.test.ts"
          },
          {
            "plugin": "savedObjects",
            "path": "src/plugins/saved_objects/public/saved_object/helpers/find_object_by_title.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-mocks",
            "path": "packages/core/saved-objects/core-saved-objects-browser-mocks/src/simple_saved_object.mock.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-mocks",
            "path": "packages/core/saved-objects/core-saved-objects-browser-mocks/src/simple_saved_object.mock.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-mocks",
            "path": "packages/core/saved-objects/core-saved-objects-browser-mocks/src/simple_saved_object.mock.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/import/errors.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/import/errors.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/import/lib/regenerate_ids.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/import/lib/regenerate_ids.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core",
            "path": "src/core/types/index.ts"
          },
          {
            "plugin": "apm",
            "path": "x-pack/plugins/apm/server/routes/settings/apm_indices/route.ts"
          },
          {
            "plugin": "savedObjectsTaggingOss",
            "path": "src/plugins/saved_objects_tagging_oss/public/api.ts"
          },
          {
            "plugin": "savedObjectsTaggingOss",
            "path": "src/plugins/saved_objects_tagging_oss/public/api.ts"
          },
          {
            "plugin": "savedObjectsTaggingOss",
            "path": "src/plugins/saved_objects_tagging_oss/public/api.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/types.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/types.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/so_references.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/so_references.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/so_references.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/so_references.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.test.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.test.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/risk_score/prebuilt_saved_objects/saved_object/host_risk_score_dashboards.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/risk_score/prebuilt_saved_objects/saved_object/host_risk_score_dashboards.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/risk_score/prebuilt_saved_objects/saved_object/user_risk_score_dashboards.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/risk_score/prebuilt_saved_objects/saved_object/user_risk_score_dashboards.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/overview/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/overview/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_details/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_details/api.ts"
          },
          {
            "plugin": "upgradeAssistant",
            "path": "x-pack/plugins/upgrade_assistant/common/types.ts"
          },
          {
            "plugin": "upgradeAssistant",
            "path": "x-pack/plugins/upgrade_assistant/common/types.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/test_utils/index.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/test_utils/index.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/test_utils/index.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_view.stub.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_view.stub.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/server/lib/find_relationships.test.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/server/lib/find_relationships.test.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/server/lib/find_relationships.test.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/server/lib/find_relationships.test.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/operations/find.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/operations/find.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/operations/find.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/effects.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/effects.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/effects.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/index.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/index.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/components/settings/hooks/use_params_list.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/components/settings/hooks/use_params_list.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-ui-settings-server-internal",
            "path": "packages/core/ui-settings/core-ui-settings-server-internal/src/saved_objects/transforms.test.ts"
          },
          {
            "plugin": "@kbn/core-ui-settings-server-internal",
            "path": "packages/core/ui-settings/core-ui-settings-server-internal/src/saved_objects/transforms.test.ts"
          },
          {
            "plugin": "@kbn/core-ui-settings-server-internal",
            "path": "packages/core/ui-settings/core-ui-settings-server-internal/src/saved_objects/transforms.test.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.SerializedSearchSourceFields",
        "type": "Type",
        "tags": [],
        "label": "SerializedSearchSourceFields",
        "description": [],
        "signature": [
          "{ type?: string | undefined; query?: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.Query",
            "text": "Query"
          },
          " | ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.AggregateQuery",
            "text": "AggregateQuery"
          },
          " | undefined; filter?: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.Filter",
            "text": "Filter"
          },
          "[] | undefined; sort?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.EsQuerySortValue",
            "text": "EsQuerySortValue"
          },
          "[] | undefined; highlight?: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          " | undefined; highlightAll?: boolean | undefined; trackTotalHits?: number | boolean | undefined; aggs?: { type: string; enabled?: boolean | undefined; id?: string | undefined; params?: {} | ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          " | undefined; schema?: string | undefined; }[] | undefined; from?: number | undefined; size?: number | undefined; source?: boolean | ",
          "Fields",
          " | undefined; version?: boolean | undefined; fields?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SearchFieldValue",
            "text": "SearchFieldValue"
          },
          "[] | undefined; fieldsFromSource?: ",
          "Fields",
          " | undefined; index?: string | ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSpec",
            "text": "DataViewSpec"
          },
          " | undefined; searchAfter?: ",
          "SortResults",
          " | undefined; timeout?: string | undefined; terminate_after?: number | undefined; parent?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.SerializedSearchSourceFields",
            "text": "SerializedSearchSourceFields"
          },
          " | undefined; }"
        ],
        "path": "src/plugins/data/common/search/search_source/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.TypeMeta",
        "type": "Type",
        "tags": [],
        "label": "TypeMeta",
        "description": [
          "\nInterface for metadata about rollup indices"
        ],
        "signature": [
          "{ aggs?: Record<string, ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.AggregationRestrictions",
            "text": "AggregationRestrictions"
          },
          "> | undefined; params?: { rollup_index: string; } | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "data",
        "id": "def-public.AggGroupLabels",
        "type": "Object",
        "tags": [],
        "label": "AggGroupLabels",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/agg_groups.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.AggGroupLabels.AggGroupNames.Buckets",
            "type": "Any",
            "tags": [],
            "label": "[AggGroupNames.Buckets]",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_groups.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggGroupLabels.AggGroupNames.Metrics",
            "type": "Any",
            "tags": [],
            "label": "[AggGroupNames.Metrics]",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_groups.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.AggGroupLabels.AggGroupNames.None",
            "type": "Any",
            "tags": [],
            "label": "[AggGroupNames.None]",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/search/aggs/agg_groups.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.AggGroupNames",
        "type": "Object",
        "tags": [],
        "label": "AggGroupNames",
        "description": [],
        "signature": [
          "{ readonly Buckets: \"buckets\"; readonly Metrics: \"metrics\"; readonly None: \"none\"; }"
        ],
        "path": "src/plugins/data/common/search/aggs/agg_groups.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.exporters",
        "type": "Object",
        "tags": [],
        "label": "exporters",
        "description": [],
        "path": "src/plugins/data/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.exporters.datatableToCSV",
            "type": "Function",
            "tags": [],
            "label": "datatableToCSV",
            "description": [],
            "signature": [
              "({ columns, rows }: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.Datatable",
                "text": "Datatable"
              },
              ", { csvSeparator, quoteValues, formatFactory, raw, escapeFormulaValues }: CSVOptions) => string"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.exporters.datatableToCSV.$1",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.Datatable",
                    "text": "Datatable"
                  }
                ],
                "path": "src/plugins/data/common/exports/export_csv.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.exporters.datatableToCSV.$2",
                "type": "Object",
                "tags": [],
                "label": "__1",
                "description": [],
                "signature": [
                  "CSVOptions"
                ],
                "path": "src/plugins/data/common/exports/export_csv.tsx",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.exporters.CSV_MIME_TYPE",
            "type": "string",
            "tags": [],
            "label": "CSV_MIME_TYPE",
            "description": [],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.exporters.cellHasFormulas",
            "type": "Function",
            "tags": [],
            "label": "cellHasFormulas",
            "description": [],
            "signature": [
              "(val: string) => boolean"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.exporters.cellHasFormulas.$1",
                "type": "string",
                "tags": [],
                "label": "val",
                "description": [],
                "path": "src/plugins/data/common/exports/formula_checks.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.exporters.tableHasFormulas",
            "type": "Function",
            "tags": [],
            "label": "tableHasFormulas",
            "description": [],
            "signature": [
              "(columns: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              "[], rows: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableRow",
                "text": "DatatableRow"
              },
              "[]) => boolean"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.exporters.tableHasFormulas.$1",
                "type": "Array",
                "tags": [],
                "label": "columns",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/exports/formula_checks.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.exporters.tableHasFormulas.$2",
                "type": "Array",
                "tags": [],
                "label": "rows",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableRow",
                    "text": "DatatableRow"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/exports/formula_checks.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.indexPatterns",
        "type": "Object",
        "tags": [],
        "label": "indexPatterns",
        "description": [],
        "path": "src/plugins/data/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.ILLEGAL_CHARACTERS_KEY",
            "type": "string",
            "tags": [],
            "label": "ILLEGAL_CHARACTERS_KEY",
            "description": [],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.CONTAINS_SPACES_KEY",
            "type": "string",
            "tags": [],
            "label": "CONTAINS_SPACES_KEY",
            "description": [],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.ILLEGAL_CHARACTERS_VISIBLE",
            "type": "Array",
            "tags": [],
            "label": "ILLEGAL_CHARACTERS_VISIBLE",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.ILLEGAL_CHARACTERS",
            "type": "Array",
            "tags": [],
            "label": "ILLEGAL_CHARACTERS",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.isFilterable",
            "type": "Function",
            "tags": [],
            "label": "isFilterable",
            "description": [],
            "signature": [
              "(field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              ") => boolean"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.indexPatterns.isFilterable.$1",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewField",
                    "text": "DataViewField"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/utils.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.isNestedField",
            "type": "Function",
            "tags": [],
            "label": "isNestedField",
            "description": [],
            "signature": [
              "(field: HasSubtype) => boolean"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.indexPatterns.isNestedField.$1",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "{ subType?: ",
                  {
                    "pluginId": "@kbn/es-query",
                    "scope": "common",
                    "docId": "kibKbnEsQueryPluginApi",
                    "section": "def-common.IFieldSubType",
                    "text": "IFieldSubType"
                  },
                  " | undefined; }"
                ],
                "path": "src/plugins/data_views/common/fields/utils.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.isMultiField",
            "type": "Function",
            "tags": [],
            "label": "isMultiField",
            "description": [],
            "signature": [
              "(field: HasSubtype) => boolean"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.indexPatterns.isMultiField.$1",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "{ subType?: ",
                  {
                    "pluginId": "@kbn/es-query",
                    "scope": "common",
                    "docId": "kibKbnEsQueryPluginApi",
                    "section": "def-common.IFieldSubType",
                    "text": "IFieldSubType"
                  },
                  " | undefined; }"
                ],
                "path": "src/plugins/data_views/common/fields/utils.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.getFieldSubtypeMulti",
            "type": "Function",
            "tags": [],
            "label": "getFieldSubtypeMulti",
            "description": [],
            "signature": [
              "(field: HasSubtype) => ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubTypeMulti",
                "text": "IFieldSubTypeMulti"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.indexPatterns.getFieldSubtypeMulti.$1",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "{ subType?: ",
                  {
                    "pluginId": "@kbn/es-query",
                    "scope": "common",
                    "docId": "kibKbnEsQueryPluginApi",
                    "section": "def-common.IFieldSubType",
                    "text": "IFieldSubType"
                  },
                  " | undefined; }"
                ],
                "path": "src/plugins/data_views/common/fields/utils.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.getFieldSubtypeNested",
            "type": "Function",
            "tags": [],
            "label": "getFieldSubtypeNested",
            "description": [],
            "signature": [
              "(field: HasSubtype) => ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubTypeNested",
                "text": "IFieldSubTypeNested"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.indexPatterns.getFieldSubtypeNested.$1",
                "type": "Object",
                "tags": [],
                "label": "field",
                "description": [],
                "signature": [
                  "{ subType?: ",
                  {
                    "pluginId": "@kbn/es-query",
                    "scope": "common",
                    "docId": "kibKbnEsQueryPluginApi",
                    "section": "def-common.IFieldSubType",
                    "text": "IFieldSubType"
                  },
                  " | undefined; }"
                ],
                "path": "src/plugins/data_views/common/fields/utils.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.indexPatterns.validate",
            "type": "Function",
            "tags": [],
            "label": "validate",
            "description": [],
            "signature": [
              "(indexPattern: string) => { ILLEGAL_CHARACTERS?: string[] | undefined; CONTAINS_SPACES?: boolean | undefined; }"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.indexPatterns.validate.$1",
                "type": "string",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "path": "src/plugins/data_views/common/lib/validate_data_view.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.search",
        "type": "Object",
        "tags": [],
        "label": "search",
        "description": [],
        "path": "src/plugins/data/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-public.search.aggs",
            "type": "Object",
            "tags": [],
            "label": "aggs",
            "description": [],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.CidrMask",
                "type": "Object",
                "tags": [],
                "label": "CidrMask",
                "description": [],
                "signature": [
                  "typeof ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.CidrMask",
                    "text": "CidrMask"
                  }
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.dateHistogramInterval",
                "type": "Function",
                "tags": [],
                "label": "dateHistogramInterval",
                "description": [],
                "signature": [
                  "(interval: string, shouldForceFixed?: boolean | undefined) => Interval"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.dateHistogramInterval.$1",
                    "type": "string",
                    "tags": [],
                    "label": "interval",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/date_histogram_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.dateHistogramInterval.$2",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "shouldForceFixed",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/date_histogram_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.intervalOptions",
                "type": "Array",
                "tags": [],
                "label": "intervalOptions",
                "description": [],
                "signature": [
                  "({ display: any; val: string; enabled(agg: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IBucketAggConfig",
                    "text": "IBucketAggConfig"
                  },
                  "): boolean; } | { display: any; val: string; })[]"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.InvalidEsCalendarIntervalError",
                "type": "Object",
                "tags": [],
                "label": "InvalidEsCalendarIntervalError",
                "description": [],
                "signature": [
                  "typeof ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.InvalidEsCalendarIntervalError",
                    "text": "InvalidEsCalendarIntervalError"
                  }
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.InvalidEsIntervalFormatError",
                "type": "Object",
                "tags": [],
                "label": "InvalidEsIntervalFormatError",
                "description": [],
                "signature": [
                  "typeof ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.InvalidEsIntervalFormatError",
                    "text": "InvalidEsIntervalFormatError"
                  }
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.IpAddress",
                "type": "Object",
                "tags": [],
                "label": "IpAddress",
                "description": [],
                "signature": [
                  "typeof ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IpAddress",
                    "text": "IpAddress"
                  }
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.isDateHistogramBucketAggConfig",
                "type": "Function",
                "tags": [],
                "label": "isDateHistogramBucketAggConfig",
                "description": [],
                "signature": [
                  "(agg: any) => agg is ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IBucketDateHistogramAggConfig",
                    "text": "IBucketDateHistogramAggConfig"
                  }
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.isDateHistogramBucketAggConfig.$1",
                    "type": "Any",
                    "tags": [],
                    "label": "agg",
                    "description": [],
                    "signature": [
                      "any"
                    ],
                    "path": "src/plugins/data/common/search/aggs/buckets/date_histogram.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.isNumberType",
                "type": "Function",
                "tags": [],
                "label": "isNumberType",
                "description": [],
                "signature": [
                  "(agg: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  },
                  ") => boolean"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.isNumberType.$1",
                    "type": "Object",
                    "tags": [],
                    "label": "agg",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataSearchPluginApi",
                        "section": "def-common.AggConfig",
                        "text": "AggConfig"
                      }
                    ],
                    "path": "src/plugins/data/common/search/aggs/buckets/migrate_include_exclude_format.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.isStringType",
                "type": "Function",
                "tags": [],
                "label": "isStringType",
                "description": [],
                "signature": [
                  "(agg: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  },
                  ") => boolean"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.isStringType.$1",
                    "type": "Object",
                    "tags": [],
                    "label": "agg",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "data",
                        "scope": "common",
                        "docId": "kibDataSearchPluginApi",
                        "section": "def-common.AggConfig",
                        "text": "AggConfig"
                      }
                    ],
                    "path": "src/plugins/data/common/search/aggs/buckets/migrate_include_exclude_format.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.isType",
                "type": "Function",
                "tags": [],
                "label": "isType",
                "description": [],
                "signature": [
                  "(...types: string[]) => (agg: ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  },
                  ") => boolean"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.isType.$1",
                    "type": "Array",
                    "tags": [],
                    "label": "types",
                    "description": [],
                    "signature": [
                      "string[]"
                    ],
                    "path": "src/plugins/data/common/search/aggs/buckets/migrate_include_exclude_format.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.isValidEsInterval",
                "type": "Function",
                "tags": [],
                "label": "isValidEsInterval",
                "description": [],
                "signature": [
                  "(interval: string) => boolean"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.isValidEsInterval.$1",
                    "type": "string",
                    "tags": [],
                    "label": "interval",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/is_valid_es_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.isValidInterval",
                "type": "Function",
                "tags": [],
                "label": "isValidInterval",
                "description": [],
                "signature": [
                  "(value: string, baseInterval?: string | undefined) => boolean"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.isValidInterval.$1",
                    "type": "string",
                    "tags": [],
                    "label": "value",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/is_valid_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.isValidInterval.$2",
                    "type": "string",
                    "tags": [],
                    "label": "baseInterval",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/is_valid_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.parentPipelineType",
                "type": "Any",
                "tags": [],
                "label": "parentPipelineType",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.parseEsInterval",
                "type": "Function",
                "tags": [],
                "label": "parseEsInterval",
                "description": [],
                "signature": [
                  "(interval: string) => { value: number; unit: ",
                  {
                    "pluginId": "@kbn/datemath",
                    "scope": "common",
                    "docId": "kibKbnDatemathPluginApi",
                    "section": "def-common.Unit",
                    "text": "Unit"
                  },
                  "; type: \"fixed\" | \"calendar\"; }"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.parseEsInterval.$1",
                    "type": "string",
                    "tags": [],
                    "label": "interval",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_es_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.parseInterval",
                "type": "Function",
                "tags": [],
                "label": "parseInterval",
                "description": [],
                "signature": [
                  "(interval: string) => moment.Duration | null"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.parseInterval.$1",
                    "type": "string",
                    "tags": [],
                    "label": "interval",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.propFilter",
                "type": "Function",
                "tags": [],
                "label": "propFilter",
                "description": [],
                "signature": [
                  "<P extends string>(prop: P) => <T extends { [key in P]: T[P]; }>(list: T[], filters?: string | string[] | FilterFunc<P, T>) => T[]"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.propFilter.$1",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "prop",
                    "description": [],
                    "signature": [
                      "P"
                    ],
                    "path": "src/plugins/data/common/search/aggs/utils/prop_filter.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.siblingPipelineType",
                "type": "Any",
                "tags": [],
                "label": "siblingPipelineType",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.termsAggFilter",
                "type": "Array",
                "tags": [],
                "label": "termsAggFilter",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.toAbsoluteDates",
                "type": "Function",
                "tags": [],
                "label": "toAbsoluteDates",
                "description": [],
                "signature": [
                  "(range: ",
                  {
                    "pluginId": "@kbn/es-query",
                    "scope": "common",
                    "docId": "kibKbnEsQueryPluginApi",
                    "section": "def-common.TimeRange",
                    "text": "TimeRange"
                  },
                  ") => { from: Date; to: Date; } | undefined"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.toAbsoluteDates.$1",
                    "type": "Object",
                    "tags": [],
                    "label": "range",
                    "description": [],
                    "signature": [
                      "{ from: string; to: string; mode?: \"absolute\" | \"relative\" | undefined; }"
                    ],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/to_absolute_dates.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.boundsDescendingRaw",
                "type": "Array",
                "tags": [],
                "label": "boundsDescendingRaw",
                "description": [],
                "signature": [
                  "({ bound: number; interval: moment.Duration; boundLabel: any; intervalLabel: any; } | { bound: moment.Duration; interval: moment.Duration; boundLabel: any; intervalLabel: any; })[]"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.aggs.calcAutoIntervalLessThan",
                "type": "Function",
                "tags": [],
                "label": "calcAutoIntervalLessThan",
                "description": [],
                "signature": [
                  "(maxBucketCount: number, duration: number) => moment.Duration"
                ],
                "path": "src/plugins/data/public/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.calcAutoIntervalLessThan.$1",
                    "type": "number",
                    "tags": [],
                    "label": "maxBucketCount",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/buckets/lib/time_buckets/calc_auto_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-public.search.aggs.calcAutoIntervalLessThan.$2",
                    "type": "number",
                    "tags": [],
                    "label": "duration",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/buckets/lib/time_buckets/calc_auto_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.search.getResponseInspectorStats",
            "type": "Function",
            "tags": [],
            "label": "getResponseInspectorStats",
            "description": [],
            "signature": [
              "(resp?: ",
              "SearchResponse",
              "<unknown, Record<string, ",
              "AggregationsAggregate",
              ">> | undefined, searchSource?: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.ISearchSource",
                "text": "ISearchSource"
              },
              " | undefined) => ",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.RequestStatistics",
                "text": "RequestStatistics"
              }
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.search.getResponseInspectorStats.$1",
                "type": "Object",
                "tags": [],
                "label": "resp",
                "description": [],
                "signature": [
                  "SearchResponse",
                  "<unknown, Record<string, ",
                  "AggregationsAggregate",
                  ">> | undefined"
                ],
                "path": "src/plugins/data/common/search/search_source/inspect/inspector_stats.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.getResponseInspectorStats.$2",
                "type": "Object",
                "tags": [],
                "label": "searchSource",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.ISearchSource",
                    "text": "ISearchSource"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data/common/search/search_source/inspect/inspector_stats.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.search.tabifyAggResponse",
            "type": "Function",
            "tags": [],
            "label": "tabifyAggResponse",
            "description": [],
            "signature": [
              "(aggConfigs: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfigs",
                "text": "AggConfigs"
              },
              ", esResponse: Record<string, any>, respOpts?: Partial<",
              "TabbedResponseWriterOptions",
              "> | undefined) => ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.Datatable",
                "text": "Datatable"
              }
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.search.tabifyAggResponse.$1",
                "type": "Object",
                "tags": [],
                "label": "aggConfigs",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfigs",
                    "text": "AggConfigs"
                  }
                ],
                "path": "src/plugins/data/common/search/tabify/tabify.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.tabifyAggResponse.$2",
                "type": "Object",
                "tags": [],
                "label": "esResponse",
                "description": [],
                "signature": [
                  "{ [x: string]: any; }"
                ],
                "path": "src/plugins/data/common/search/tabify/tabify.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.tabifyAggResponse.$3",
                "type": "Object",
                "tags": [],
                "label": "respOpts",
                "description": [],
                "signature": [
                  "Partial<",
                  "TabbedResponseWriterOptions",
                  "> | undefined"
                ],
                "path": "src/plugins/data/common/search/tabify/tabify.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-public.search.tabifyGetColumns",
            "type": "Function",
            "tags": [],
            "label": "tabifyGetColumns",
            "description": [],
            "signature": [
              "(aggs: ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              "[], minimalColumns: boolean) => ",
              "TabbedAggColumn",
              "[]"
            ],
            "path": "src/plugins/data/public/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-public.search.tabifyGetColumns.$1",
                "type": "Array",
                "tags": [],
                "label": "aggs",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggConfig",
                    "text": "AggConfig"
                  },
                  "[]"
                ],
                "path": "src/plugins/data/common/search/tabify/get_columns.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-public.search.tabifyGetColumns.$2",
                "type": "boolean",
                "tags": [],
                "label": "minimalColumns",
                "description": [],
                "path": "src/plugins/data/common/search/tabify/get_columns.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-public.UI_SETTINGS",
        "type": "Object",
        "tags": [],
        "label": "UI_SETTINGS",
        "description": [],
        "signature": [
          "{ readonly META_FIELDS: \"metaFields\"; readonly DOC_HIGHLIGHT: \"doc_table:highlight\"; readonly QUERY_STRING_OPTIONS: \"query:queryString:options\"; readonly QUERY_ALLOW_LEADING_WILDCARDS: \"query:allowLeadingWildcards\"; readonly SEARCH_QUERY_LANGUAGE: \"search:queryLanguage\"; readonly SORT_OPTIONS: \"sort:options\"; readonly COURIER_IGNORE_FILTER_IF_FIELD_NOT_IN_INDEX: \"courier:ignoreFilterIfFieldNotInIndex\"; readonly COURIER_SET_REQUEST_PREFERENCE: \"courier:setRequestPreference\"; readonly COURIER_CUSTOM_REQUEST_PREFERENCE: \"courier:customRequestPreference\"; readonly COURIER_MAX_CONCURRENT_SHARD_REQUESTS: \"courier:maxConcurrentShardRequests\"; readonly SEARCH_INCLUDE_FROZEN: \"search:includeFrozen\"; readonly SEARCH_TIMEOUT: \"search:timeout\"; readonly HISTOGRAM_BAR_TARGET: \"histogram:barTarget\"; readonly HISTOGRAM_MAX_BARS: \"histogram:maxBars\"; readonly HISTORY_LIMIT: \"history:limit\"; readonly TIMEPICKER_REFRESH_INTERVAL_DEFAULTS: \"timepicker:refreshIntervalDefaults\"; readonly TIMEPICKER_QUICK_RANGES: \"timepicker:quickRanges\"; readonly TIMEPICKER_TIME_DEFAULTS: \"timepicker:timeDefaults\"; readonly FILTERS_PINNED_BY_DEFAULT: \"filters:pinnedByDefault\"; readonly FILTERS_EDITOR_SUGGEST_VALUES: \"filterEditor:suggestValues\"; readonly AUTOCOMPLETE_USE_TIMERANGE: \"autocomplete:useTimeRange\"; readonly AUTOCOMPLETE_VALUE_SUGGESTION_METHOD: \"autocomplete:valueSuggestionMethod\"; readonly DATE_FORMAT: \"dateFormat\"; readonly DATEFORMAT_TZ: \"dateFormat:tz\"; }"
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "setup": {
      "parentPluginId": "data",
      "id": "def-public.DataPublicPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "DataPublicPluginSetup",
      "description": [
        "\nData plugin public Setup contract"
      ],
      "path": "src/plugins/data/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginSetup.search",
          "type": "Object",
          "tags": [],
          "label": "search",
          "description": [],
          "signature": [
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataSearchPluginApi",
              "section": "def-public.ISearchSetup",
              "text": "ISearchSetup"
            }
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginSetup.query",
          "type": "Object",
          "tags": [],
          "label": "query",
          "description": [],
          "signature": [
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataQueryPluginApi",
              "section": "def-public.QuerySetup",
              "text": "QuerySetup"
            }
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "data",
      "id": "def-public.DataPublicPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "DataPublicPluginStart",
      "description": [
        "\nData plugin public Start contract"
      ],
      "path": "src/plugins/data/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.actions",
          "type": "Object",
          "tags": [],
          "label": "actions",
          "description": [
            "\nfilter creation utilities\n{@link DataPublicPluginStartActions}"
          ],
          "signature": [
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataPluginApi",
              "section": "def-public.DataPublicPluginStartActions",
              "text": "DataPublicPluginStartActions"
            }
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.dataViews",
          "type": "Object",
          "tags": [],
          "label": "dataViews",
          "description": [
            "\ndata views service\n{@link DataViewsContract}"
          ],
          "signature": [
            {
              "pluginId": "dataViews",
              "scope": "public",
              "docId": "kibDataViewsPluginApi",
              "section": "def-public.DataViewsServicePublic",
              "text": "DataViewsServicePublic"
            }
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.datatableUtilities",
          "type": "Object",
          "tags": [],
          "label": "datatableUtilities",
          "description": [
            "\nDatatable type utility functions."
          ],
          "signature": [
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataPluginApi",
              "section": "def-common.DatatableUtilitiesService",
              "text": "DatatableUtilitiesService"
            }
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.indexPatterns",
          "type": "Object",
          "tags": [
            "deprecated"
          ],
          "label": "indexPatterns",
          "description": [
            "\nindex patterns service\n{@link DataViewsContract}"
          ],
          "signature": [
            {
              "pluginId": "dataViews",
              "scope": "public",
              "docId": "kibDataViewsPluginApi",
              "section": "def-public.DataViewsServicePublic",
              "text": "DataViewsServicePublic"
            }
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": true,
          "trackAdoption": false,
          "references": [
            {
              "plugin": "infra",
              "path": "x-pack/plugins/infra/public/hooks/use_kibana_index_patterns.ts"
            },
            {
              "plugin": "graph",
              "path": "x-pack/plugins/graph/public/plugin.ts"
            },
            {
              "plugin": "stackAlerts",
              "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
            },
            {
              "plugin": "stackAlerts",
              "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
            },
            {
              "plugin": "stackAlerts",
              "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
            },
            {
              "plugin": "stackAlerts",
              "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
            },
            {
              "plugin": "stackAlerts",
              "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
            },
            {
              "plugin": "inputControlVis",
              "path": "src/plugins/input_control_vis/public/control/list_control_factory.ts"
            },
            {
              "plugin": "inputControlVis",
              "path": "src/plugins/input_control_vis/public/control/range_control_factory.ts"
            },
            {
              "plugin": "inputControlVis",
              "path": "src/plugins/input_control_vis/public/components/editor/controls_tab.tsx"
            },
            {
              "plugin": "securitySolution",
              "path": "x-pack/plugins/security_solution/public/common/mock/endpoint/dependencies_start_mock.ts"
            },
            {
              "plugin": "savedObjects",
              "path": "src/plugins/saved_objects/public/saved_object/saved_object.test.ts"
            },
            {
              "plugin": "savedObjects",
              "path": "src/plugins/saved_objects/public/saved_object/saved_object.test.ts"
            }
          ]
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.search",
          "type": "Object",
          "tags": [],
          "label": "search",
          "description": [
            "\nsearch service\n{@link ISearchStart}"
          ],
          "signature": [
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataSearchPluginApi",
              "section": "def-public.ISearchStart",
              "text": "ISearchStart"
            }
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.fieldFormats",
          "type": "CompoundType",
          "tags": [
            "deprecated"
          ],
          "label": "fieldFormats",
          "description": [],
          "signature": [
            "Omit<",
            {
              "pluginId": "fieldFormats",
              "scope": "common",
              "docId": "kibFieldFormatsPluginApi",
              "section": "def-common.FieldFormatsRegistry",
              "text": "FieldFormatsRegistry"
            },
            ", \"register\" | \"init\"> & { deserialize: ",
            {
              "pluginId": "fieldFormats",
              "scope": "common",
              "docId": "kibFieldFormatsPluginApi",
              "section": "def-common.FormatFactory",
              "text": "FormatFactory"
            },
            "; }"
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": true,
          "trackAdoption": false,
          "references": [
            {
              "plugin": "dashboard",
              "path": "src/plugins/dashboard/public/services/data/types.ts"
            },
            {
              "plugin": "dashboard",
              "path": "src/plugins/dashboard/public/services/data/data_service.ts"
            },
            {
              "plugin": "dataVisualizer",
              "path": "x-pack/plugins/data_visualizer/public/application/common/components/stats_table/components/field_data_row/document_stats.tsx"
            },
            {
              "plugin": "dataVisualizer",
              "path": "x-pack/plugins/data_visualizer/public/application/common/components/top_values/top_values.tsx"
            },
            {
              "plugin": "dataVisualizer",
              "path": "x-pack/plugins/data_visualizer/public/application/common/components/stats_table/components/field_data_expanded_row/choropleth_map.tsx"
            },
            {
              "plugin": "stackAlerts",
              "path": "x-pack/plugins/stack_alerts/public/rule_types/threshold/expression.tsx"
            },
            {
              "plugin": "expressionPartitionVis",
              "path": "src/plugins/chart_expressions/expression_partition_vis/public/utils/layers/get_color.test.ts"
            },
            {
              "plugin": "expressionPartitionVis",
              "path": "src/plugins/chart_expressions/expression_partition_vis/public/utils/layers/get_color.test.ts"
            },
            {
              "plugin": "expressionPartitionVis",
              "path": "src/plugins/chart_expressions/expression_partition_vis/public/utils/layers/get_color.test.ts"
            },
            {
              "plugin": "expressionPartitionVis",
              "path": "src/plugins/chart_expressions/expression_partition_vis/public/utils/layers/get_color.test.ts"
            },
            {
              "plugin": "expressionPartitionVis",
              "path": "src/plugins/chart_expressions/expression_partition_vis/public/utils/layers/get_color.test.ts"
            },
            {
              "plugin": "expressionPartitionVis",
              "path": "src/plugins/chart_expressions/expression_partition_vis/public/utils/layers/get_color.test.ts"
            },
            {
              "plugin": "expressionPartitionVis",
              "path": "src/plugins/chart_expressions/expression_partition_vis/public/utils/layers/get_color.test.ts"
            },
            {
              "plugin": "expressionPartitionVis",
              "path": "src/plugins/chart_expressions/expression_partition_vis/public/utils/layers/get_color.test.ts"
            }
          ]
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.query",
          "type": "Object",
          "tags": [],
          "label": "query",
          "description": [
            "\nquery service\n{@link QueryStart}"
          ],
          "signature": [
            {
              "pluginId": "data",
              "scope": "public",
              "docId": "kibDataQueryPluginApi",
              "section": "def-public.QueryStart",
              "text": "QueryStart"
            }
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "data",
          "id": "def-public.DataPublicPluginStart.nowProvider",
          "type": "Object",
          "tags": [],
          "label": "nowProvider",
          "description": [],
          "signature": [
            "{ get: () => Date; }"
          ],
          "path": "src/plugins/data/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "data",
        "id": "def-server.DataServerPlugin",
        "type": "Class",
        "tags": [],
        "label": "DataServerPlugin",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "server",
            "docId": "kibDataPluginApi",
            "section": "def-server.DataServerPlugin",
            "text": "DataServerPlugin"
          },
          " implements ",
          {
            "pluginId": "@kbn/core-plugins-server",
            "scope": "common",
            "docId": "kibKbnCorePluginsServerPluginApi",
            "section": "def-common.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "server",
            "docId": "kibDataPluginApi",
            "section": "def-server.DataPluginSetup",
            "text": "DataPluginSetup"
          },
          ", ",
          {
            "pluginId": "data",
            "scope": "server",
            "docId": "kibDataPluginApi",
            "section": "def-server.DataPluginStart",
            "text": "DataPluginStart"
          },
          ", ",
          "DataPluginSetupDependencies",
          ", ",
          "DataPluginStartDependencies",
          ">"
        ],
        "path": "src/plugins/data/server/plugin.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.DataServerPlugin.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataServerPlugin.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "initializerContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-plugins-server",
                    "scope": "common",
                    "docId": "kibKbnCorePluginsServerPluginApi",
                    "section": "def-common.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<Readonly<{} & { search: Readonly<{} & { aggs: Readonly<{} & { shardDelay: Readonly<{} & { enabled: boolean; }>; }>; asyncSearch: Readonly<{ pollInterval?: number | undefined; } & { waitForCompletion: moment.Duration; keepAlive: moment.Duration; batchedReduceSize: number; }>; sessions: Readonly<{} & { enabled: boolean; management: Readonly<{} & { refreshInterval: moment.Duration; maxSessions: number; refreshTimeout: moment.Duration; expiresSoonWarning: moment.Duration; }>; notTouchedTimeout: moment.Duration; maxUpdateRetries: number; defaultExpiration: moment.Duration; }>; }>; }>>"
                ],
                "path": "src/plugins/data/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataServerPlugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-server",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleServerPluginApi",
                "section": "def-common.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              "DataPluginStartDependencies",
              ", ",
              {
                "pluginId": "data",
                "scope": "server",
                "docId": "kibDataPluginApi",
                "section": "def-server.DataPluginStart",
                "text": "DataPluginStart"
              },
              ">, { bfetch, expressions, usageCollection, fieldFormats, taskManager, security, }: ",
              "DataPluginSetupDependencies",
              ") => { search: ",
              "ISearchSetup",
              "; query: ",
              "QuerySetup",
              "; fieldFormats: ",
              {
                "pluginId": "fieldFormats",
                "scope": "server",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-server.FieldFormatsSetup",
                "text": "FieldFormatsSetup"
              },
              "; }"
            ],
            "path": "src/plugins/data/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataServerPlugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-server",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleServerPluginApi",
                    "section": "def-common.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  "DataPluginStartDependencies",
                  ", ",
                  {
                    "pluginId": "data",
                    "scope": "server",
                    "docId": "kibDataPluginApi",
                    "section": "def-server.DataPluginStart",
                    "text": "DataPluginStart"
                  },
                  ">"
                ],
                "path": "src/plugins/data/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataServerPlugin.setup.$2",
                "type": "Object",
                "tags": [],
                "label": "{\n      bfetch,\n      expressions,\n      usageCollection,\n      fieldFormats,\n      taskManager,\n      security,\n    }",
                "description": [],
                "signature": [
                  "DataPluginSetupDependencies"
                ],
                "path": "src/plugins/data/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataServerPlugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-server",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleServerPluginApi",
                "section": "def-common.CoreStart",
                "text": "CoreStart"
              },
              ", { fieldFormats, dataViews, taskManager }: ",
              "DataPluginStartDependencies",
              ") => { datatableUtilities: ",
              "DatatableUtilitiesService",
              "; search: ",
              "ISearchStart",
              "<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IEsSearchRequest",
                "text": "IEsSearchRequest"
              },
              ", ",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.IEsSearchResponse",
                "text": "IEsSearchResponse"
              },
              "<any>>; fieldFormats: ",
              {
                "pluginId": "fieldFormats",
                "scope": "server",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-server.FieldFormatsStart",
                "text": "FieldFormatsStart"
              },
              "; indexPatterns: ",
              {
                "pluginId": "dataViews",
                "scope": "server",
                "docId": "kibDataViewsPluginApi",
                "section": "def-server.DataViewsServerPluginStart",
                "text": "DataViewsServerPluginStart"
              },
              "; }"
            ],
            "path": "src/plugins/data/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataServerPlugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-server",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleServerPluginApi",
                    "section": "def-common.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "src/plugins/data/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataServerPlugin.start.$2",
                "type": "Object",
                "tags": [],
                "label": "{ fieldFormats, dataViews, taskManager }",
                "description": [],
                "signature": [
                  "DataPluginStartDependencies"
                ],
                "path": "src/plugins/data/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataServerPlugin.stop",
            "type": "Function",
            "tags": [],
            "label": "stop",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.DataView",
        "type": "Class",
        "tags": [],
        "label": "DataView",
        "description": [
          "\nData view class. Central kibana abstraction around multiple indices."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " implements ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewBase",
            "text": "DataViewBase"
          }
        ],
        "path": "src/plugins/data_views/common/data_views/data_view.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nSaved object id"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.title",
            "type": "string",
            "tags": [
              "deprecated"
            ],
            "label": "title",
            "description": [
              "\nTitle of data view"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/types.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/containers/detection_engine/rules/use_rule_from_timeline.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/containers/detection_engine/exceptions/get_es_query_filter.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/grouped_alerts.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/utils.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/store/middleware.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/server/lib/detection_engine/rule_types/utils/get_query_filter.ts"
              },
              {
                "plugin": "timelines",
                "path": "x-pack/plugins/timelines/public/mock/index_pattern.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/mock/index_pattern.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "threatIntelligence",
                "path": "x-pack/plugins/threat_intelligence/public/common/mocks/mock_security_context.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detection_engine/rule_exceptions/components/flyout_components/alerts_actions/utils.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/build_es_query.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_combined_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_kuery.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_nested_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/build_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/exists_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/get_filter_field.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrase_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrase_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrases_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/ast/ast.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/and.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/exists.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/is.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/nested.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/not.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/or.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/range.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/node_types/function.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/utils/get_full_field_name_node.test.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "savedObjectsManagement",
                "path": "src/plugins/saved_objects_management/public/management_section/objects_table/components/flyout.tsx"
              },
              {
                "plugin": "savedObjectsManagement",
                "path": "src/plugins/saved_objects_management/public/management_section/objects_table/components/flyout.tsx"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/autocomplete/providers/value_suggestion_provider.ts"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/query_string_input/fetch_index_patterns.ts"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/dataview_picker/change_dataview.tsx"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/server/rest_api_routes/update_data_view.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/server/rest_api_routes/update_data_view.ts"
              },
              {
                "plugin": "triggersActionsUi",
                "path": "x-pack/plugins/triggers_actions_ui/public/common/lib/data_apis.ts"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/options_list/options_list_service.ts"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/options_list/options_list_service.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/services/field_stats/load_field_stats.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/common/utils/field_existing_utils.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/hooks/use_existing_fields.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/hooks/use_existing_fields.ts"
              },
              {
                "plugin": "lens",
                "path": "x-pack/plugins/lens/public/data_views_service/loader.ts"
              },
              {
                "plugin": "lens",
                "path": "x-pack/plugins/lens/public/app_plugin/lens_top_nav.tsx"
              },
              {
                "plugin": "aiops",
                "path": "x-pack/plugins/aiops/public/components/log_categorization/log_categorization_page.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/data_frame_analytics/index_patterns.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/job_service/new_job_caps/rollup.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/lib/alerts/alerting_service.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/data_recognizer/data_recognizer.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/log_views/resolved_log_view.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/get_fields.ts"
              },
              {
                "plugin": "apm",
                "path": "x-pack/plugins/apm/server/routes/data_view/create_static_data_view.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/utils/observability_data_views/observability_data_views.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/columns/report_definition_field.tsx"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/use_filter_values.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/columns/filter_value_btn.tsx"
              },
              {
                "plugin": "dataVisualizer",
                "path": "x-pack/plugins/data_visualizer/public/application/index_data_visualizer/hooks/use_data_visualizer_grid_data.ts"
              },
              {
                "plugin": "dataVisualizer",
                "path": "x-pack/plugins/data_visualizer/public/application/index_data_visualizer/components/index_data_visualizer_view/index_data_visualizer_view.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_details.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/datavisualizer/index_based/data_loader/data_loader.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/page.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/action_clone/clone_action_name.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/common/job_creator/job_creator.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/common/results_loader/categorization_examples_loader.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/index_or_search/preconfigured_job_redirect.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/components/pick_fields_step/components/bucket_span_estimator/estimate_bucket_span.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/components/datafeed_step/components/data_view/change_data_view.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_exploration/components/outlier_exploration/use_outlier_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_exploration/components/exploration_results_table/use_exploration_results.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/source_selection/source_selection.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/embeddables/anomaly_charts/anomaly_charts_embeddable.tsx"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "fleet",
                "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/query_bar.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/services/kibana/data_views.ts"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/services/kibana/data_views.ts"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/datasource/datasource_component.js"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.sagas.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/persistence.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/persistence.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/sourcerer/create_sourcerer_data_view.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/sourcerer/create_sourcerer_data_view.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/rules/eql_query_bar/validators.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/rules/step_define_rule/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detection_engine/rule_details_ui/pages/rule_details/index.tsx"
              },
              {
                "plugin": "timelines",
                "path": "x-pack/plugins/timelines/server/search_strategy/index_fields/index.ts"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/components/data_view_select_popover.tsx"
              },
              {
                "plugin": "synthetics",
                "path": "x-pack/plugins/synthetics/public/legacy_uptime/components/overview/filter_group/filter_group.tsx"
              },
              {
                "plugin": "synthetics",
                "path": "x-pack/plugins/synthetics/public/legacy_uptime/components/overview/alerts/monitor_expressions/filters_expression_select.tsx"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/common/filter_agg/components/filter_term_form.tsx"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/hooks/use_search_items/common.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/services/es_index_service.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/server/routes/api/transforms.ts"
              },
              {
                "plugin": "upgradeAssistant",
                "path": "x-pack/plugins/upgrade_assistant/public/application/components/es_deprecation_logs/fix_deprecation_logs/external_links.tsx"
              },
              {
                "plugin": "ux",
                "path": "x-pack/plugins/ux/public/components/app/rum_dashboard/local_uifilters/use_data_view.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.test.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.test.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/services/new_job_capabilities/remove_nested_field_children.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_kpi.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_with_reference_lines.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/test_formula_metric_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/lens_attributes/single_metric_attributes.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/lens_attributes/single_metric_attributes.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/mobile_test_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_cwv.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/common/common.test.ts"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/data_views/data_views.story.ts"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/components/scripting_help/test_script.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/field_editor.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/create_edit_field/create_edit_field.tsx"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/list_control_factory.ts"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/range_control_factory.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/server/routes/field_stats.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/server/routes/field_stats.ts"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/controls/field.tsx"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/controls/field.tsx"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/agg_select.tsx"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/test_utils/get_index_pattern_mock.ts"
              },
              {
                "plugin": "presentationUtil",
                "path": "src/plugins/presentation_util/public/services/data_views/data_views.story.ts"
              },
              {
                "plugin": "visTypeTimelion",
                "path": "src/plugins/vis_types/timelion/public/helpers/arg_value_suggestions.ts"
              },
              {
                "plugin": "visTypeTimelion",
                "path": "src/plugins/vis_types/timelion/public/helpers/arg_value_suggestions.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/components/lib/convert_series_to_datatable.ts"
              },
              {
                "plugin": "visTypeVega",
                "path": "src/plugins/vis_types/vega/public/data_model/search_api.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/components/lib/convert_series_to_datatable.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/lib/cached_index_pattern_fetcher.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/lib/cached_index_pattern_fetcher.test.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_views.ts"
              },
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/application/main/hooks/use_text_based_query_language.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/metrics/hosts/hooks/use_data_view.test.ts"
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.fieldFormatMap",
            "type": "Object",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [
              "\nMap of field formats by field name"
            ],
            "signature": [
              "{ [x: string]: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nOnly used by rollup indices, used by rollup specific endpoint to load field list."
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.fields",
            "type": "CompoundType",
            "tags": [],
            "label": "fields",
            "description": [
              "\nField list, in extended array format"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.IIndexPatternFieldList",
                "text": "IIndexPatternFieldList"
              },
              " & { toSpec: () => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              },
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [
              "\nTimestamp field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nType is used to identify rollup index patterns."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.flattenHit",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "flattenHit",
            "description": [],
            "signature": [
              "(hit: Record<string, unknown[]>, deep?: boolean | undefined) => Record<string, unknown>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
              }
            ],
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.flattenHit.$1",
                "type": "Object",
                "tags": [],
                "label": "hit",
                "description": [],
                "signature": [
                  "{ [x: string]: unknown[]; }"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.flattenHit.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "deep",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.metaFields",
            "type": "Array",
            "tags": [],
            "label": "metaFields",
            "description": [
              "\nList of meta fields by name"
            ],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.version",
            "type": "string",
            "tags": [],
            "label": "version",
            "description": [
              "\nSavedObject version"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.sourceFilters",
            "type": "Array",
            "tags": [],
            "label": "sourceFilters",
            "description": [
              "\nArray of filters - hides fields in discover"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.SourceFilter",
                "text": "SourceFilter"
              },
              "[] | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nArray of namespace ids"
            ],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.allowNoIndex",
            "type": "boolean",
            "tags": [],
            "label": "allowNoIndex",
            "description": [
              "\nPrevents errors when index pattern exists before indices"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nName of the data view. Human readable name used to differentiate data view."
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.matchedIndices",
            "type": "Array",
            "tags": [],
            "label": "matchedIndices",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [
                  "- config data and dependencies"
                ],
                "signature": [
                  "DataViewDeps"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getName",
            "type": "Function",
            "tags": [],
            "label": "getName",
            "description": [
              "\nGet name of Data View"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getIndexPattern",
            "description": [
              "\nGet index pattern"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "index pattern string"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.setIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "setIndexPattern",
            "description": [
              "\nSet index pattern"
            ],
            "signature": [
              "(indexPattern: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.setIndexPattern.$1",
                "type": "string",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getOriginalSavedObjectBody",
            "description": [
              "\nGet last saved saved object fields"
            ],
            "signature": [
              "() => { fieldAttrs?: string | undefined; title?: string | undefined; timeFieldName?: string | undefined; fields?: string | undefined; sourceFilters?: string | undefined; fieldFormatMap?: string | undefined; typeMeta?: string | undefined; type?: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.resetOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "resetOriginalSavedObjectBody",
            "description": [
              "\nReset last saved saved object fields. Used after saving."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "getFieldAttrs",
            "description": [
              "\nReturns field attributes map"
            ],
            "signature": [
              "() => { [x: string]: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getComputedFields",
            "type": "Function",
            "tags": [],
            "label": "getComputedFields",
            "description": [
              "\nReturns scripted fields"
            ],
            "signature": [
              "() => { storedFields: string[]; scriptFields: Record<string, ",
              "ScriptField",
              ">; docvalueFields: { field: string; format: string; }[]; runtimeFields: ",
              "MappingRuntimeFields",
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.isPersisted",
            "type": "Function",
            "tags": [],
            "label": "isPersisted",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [
              "\nCreates static representation of the data view."
            ],
            "signature": [
              "(includeFields?: boolean) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.toSpec.$1",
                "type": "boolean",
                "tags": [],
                "label": "includeFields",
                "description": [
                  "Whether or not to include the `fields` list as part of this spec. If not included, the list\nwill be fetched from Elasticsearch when instantiating a new Data View with this spec."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getSourceFiltering",
            "type": "Function",
            "tags": [],
            "label": "getSourceFiltering",
            "description": [
              "\nGet the source filtering configuration for that index."
            ],
            "signature": [
              "() => { excludes: string[]; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.removeScriptedField",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "removeScriptedField",
            "description": [
              "\nRemoves scripted field from field list."
            ],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/field_editor.tsx"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              }
            ],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.removeScriptedField.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of scripted field to remove"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getNonScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getNonScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/strategies/abstract_search_strategy.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/source_filters_table/components/table/table.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/lib/fetch_fields.ts"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_views.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/server/register_index_pattern_usage_collection.ts"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.isTSDBMode",
            "type": "Function",
            "tags": [],
            "label": "isTSDBMode",
            "description": [
              "\nreturns true if dataview contains TSDB fields"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.isTimeBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeBased",
            "description": [
              "\nDoes the data view have a timestamp field?"
            ],
            "signature": [
              "() => this is ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TimeBasedDataView",
                "text": "TimeBasedDataView"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.isTimeNanosBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeNanosBased",
            "description": [
              "\nDoes the data view have a timestamp field and is it a date nanos field?"
            ],
            "signature": [
              "() => this is ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TimeBasedDataView",
                "text": "TimeBasedDataView"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getTimeField",
            "type": "Function",
            "tags": [],
            "label": "getTimeField",
            "description": [
              "\nGet timestamp field as DataViewField or return undefined"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getFieldByName",
            "type": "Function",
            "tags": [],
            "label": "getFieldByName",
            "description": [
              "\nGet field by name."
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.getFieldByName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getAggregationRestrictions",
            "type": "Function",
            "tags": [],
            "label": "getAggregationRestrictions",
            "description": [
              "\nGet aggregation restrictions. Rollup fields can only perform a subset of aggregations."
            ],
            "signature": [
              "() => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.AggregationRestrictions",
                "text": "AggregationRestrictions"
              },
              "> | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getAsSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getAsSavedObjectBody",
            "description": [
              "\nReturns index pattern as saved object body for saving"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getFormatterForField",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForField",
            "description": [
              "\nProvide a field, get its formatter"
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.getFormatterForField.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [
                  "field to get formatter for"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewField",
                    "text": "DataViewField"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.addRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "addRuntimeField",
            "description": [
              "\nAdd a runtime field - Appended to existing mapped field or a new field is\ncreated as appropriate."
            ],
            "signature": [
              "(name: string, runtimeField: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ") => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.addRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.addRuntimeField.$2",
                "type": "Object",
                "tags": [],
                "label": "runtimeField",
                "description": [
                  "Runtime field definition"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.hasRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "hasRuntimeField",
            "description": [
              "\nChecks if runtime field exists"
            ],
            "signature": [
              "(name: string) => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.hasRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "getRuntimeField",
            "description": [
              "\nReturns runtime field if exists"
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              " | null"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.getRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Runtime field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getAllRuntimeFields",
            "type": "Function",
            "tags": [],
            "label": "getAllRuntimeFields",
            "description": [
              "\nGet all runtime field definitions.\nNOTE: this does not strip out runtime fields that match mapped field names"
            ],
            "signature": [
              "() => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "map of runtime field definitions by field name"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getFieldsByRuntimeFieldName",
            "type": "Function",
            "tags": [],
            "label": "getFieldsByRuntimeFieldName",
            "description": [
              "\nReturns data view fields backed by runtime fields."
            ],
            "signature": [
              "(name: string) => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "> | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.getFieldsByRuntimeFieldName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "runtime field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "map of DataViewFields (that are runtime fields) by field name"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.replaceAllRuntimeFields",
            "type": "Function",
            "tags": [],
            "label": "replaceAllRuntimeFields",
            "description": [
              "\nReplaces all existing runtime fields with new fields."
            ],
            "signature": [
              "(newFields: Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.replaceAllRuntimeFields.$1",
                "type": "Object",
                "tags": [],
                "label": "newFields",
                "description": [
                  "Map of runtime field definitions by field name"
                ],
                "signature": [
                  "Record<string, ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.removeRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "removeRuntimeField",
            "description": [
              "\nRemove a runtime field - removed from mapped field or removed unmapped\nfield as appropriate. Doesn't clear associated field attributes."
            ],
            "signature": [
              "(name: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.removeRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "- Field name to remove"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getRuntimeMappings",
            "type": "Function",
            "tags": [],
            "label": "getRuntimeMappings",
            "description": [
              "\nReturn the \"runtime_mappings\" section of the ES search query."
            ],
            "signature": [
              "() => ",
              "MappingRuntimeFields"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.getFormatterForFieldNoDefault",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForFieldNoDefault",
            "description": [
              "\nGet formatter for a given field name. Return undefined if none exists."
            ],
            "signature": [
              "(fieldname: string) => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.getFormatterForFieldNoDefault.$1",
                "type": "string",
                "tags": [],
                "label": "fieldname",
                "description": [
                  "name of field to get formatter for"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.setFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "setFieldAttrs",
            "description": [
              "\nSet field attribute"
            ],
            "signature": [
              "<K extends keyof ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              ">(fieldName: string, attrName: K, value: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "[K]) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.setFieldAttrs.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set attribute on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.setFieldAttrs.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "attrName",
                "description": [
                  "name of attribute to set"
                ],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.setFieldAttrs.$3",
                "type": "Uncategorized",
                "tags": [],
                "label": "value",
                "description": [
                  "value of attribute"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldAttrSet",
                    "text": "FieldAttrSet"
                  },
                  "[K]"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.setFieldCustomLabel",
            "type": "Function",
            "tags": [],
            "label": "setFieldCustomLabel",
            "description": [
              "\nSet field custom label"
            ],
            "signature": [
              "(fieldName: string, customLabel: string | null | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.setFieldCustomLabel.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set custom label on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.setFieldCustomLabel.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "customLabel",
                "description": [
                  "custom label value. If undefined, custom label is removed"
                ],
                "signature": [
                  "string | null | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.setFieldCount",
            "type": "Function",
            "tags": [],
            "label": "setFieldCount",
            "description": [
              "\nSet field count"
            ],
            "signature": [
              "(fieldName: string, count: number | null | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.setFieldCount.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set count on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.setFieldCount.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "count",
                "description": [
                  "count value. If undefined, count is removed"
                ],
                "signature": [
                  "number | null | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.setFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "setFieldFormat",
            "description": [
              "\nSet field formatter"
            ],
            "signature": [
              "(fieldName: string, format: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.setFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set format on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.setFieldFormat.$2",
                "type": "Object",
                "tags": [],
                "label": "format",
                "description": [
                  "field format in serialized form"
                ],
                "signature": [
                  {
                    "pluginId": "fieldFormats",
                    "scope": "common",
                    "docId": "kibFieldFormatsPluginApi",
                    "section": "def-common.SerializedFieldFormat",
                    "text": "SerializedFieldFormat"
                  },
                  "<{}, ",
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "common",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-common.SerializableRecord",
                    "text": "SerializableRecord"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataView.deleteFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "deleteFieldFormat",
            "description": [
              "\nRemove field format from the field format map."
            ],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataView.deleteFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "field name associated with the format for removal"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.DataViewsService",
        "type": "Class",
        "tags": [],
        "label": "DataViewsService",
        "description": [
          "\nData views service, providing CRUD operations for data views."
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.getCanSave",
            "type": "Function",
            "tags": [],
            "label": "getCanSave",
            "description": [
              "\nCan the user save data views?"
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nDataViewsService constructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "deps",
                "description": [
                  "Service dependencies"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewsServiceDeps",
                    "text": "DataViewsServiceDeps"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.getIds",
            "type": "Function",
            "tags": [],
            "label": "getIds",
            "description": [
              "\nGets list of index pattern ids."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.getIds.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.getTitles",
            "type": "Function",
            "tags": [],
            "label": "getTitles",
            "description": [
              "\nGets list of index pattern titles."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.getTitles.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nFind and load index patterns by title."
            ],
            "signature": [
              "(search: string, size?: number) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.find.$1",
                "type": "string",
                "tags": [],
                "label": "search",
                "description": [
                  "Search string"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.find.$2",
                "type": "number",
                "tags": [],
                "label": "size",
                "description": [
                  "Number of data views to return"
                ],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataView[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.getIdsWithTitle",
            "type": "Function",
            "tags": [],
            "label": "getIdsWithTitle",
            "description": [
              "\nGets list of index pattern ids with titles."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewListItem",
                "text": "DataViewListItem"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.getIdsWithTitle.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.clearCache",
            "type": "Function",
            "tags": [],
            "label": "clearCache",
            "description": [
              "\nClear index pattern saved objects cache."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.clearInstanceCache",
            "type": "Function",
            "tags": [],
            "label": "clearInstanceCache",
            "description": [
              "\nClear index pattern instance cache"
            ],
            "signature": [
              "(id?: string | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.clearInstanceCache.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.getCache",
            "type": "Function",
            "tags": [],
            "label": "getCache",
            "description": [
              "\nGet cache, contains data view saved objects."
            ],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSavedObjectAttrs",
                "text": "DataViewSavedObjectAttrs"
              },
              ">[] | null | undefined>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.getDefault",
            "type": "Function",
            "tags": [],
            "label": "getDefault",
            "description": [
              "\nGet default index pattern"
            ],
            "signature": [
              "(displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.getDefault.$1",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.getDefaultId",
            "type": "Function",
            "tags": [],
            "label": "getDefaultId",
            "description": [
              "\nGet default index pattern id"
            ],
            "signature": [
              "() => Promise<string | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.setDefault",
            "type": "Function",
            "tags": [],
            "label": "setDefault",
            "description": [
              "\nOptionally set default index pattern, unless force = true"
            ],
            "signature": [
              "(id: string | null, force?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.setDefault.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "id",
                "description": [
                  "data view id"
                ],
                "signature": [
                  "string | null"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.setDefault.$2",
                "type": "boolean",
                "tags": [],
                "label": "force",
                "description": [
                  "set default data view even if there's an existing default"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.hasUserDataView",
            "type": "Function",
            "tags": [],
            "label": "hasUserDataView",
            "description": [
              "\nChecks if current user has a user created index pattern ignoring fleet's server default index patterns."
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.getFieldsForWildcard",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForWildcard",
            "description": [
              "\nGet field list by providing { pattern }."
            ],
            "signature": [
              "(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              ") => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "options for getting field list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.getFieldsForIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForIndexPattern",
            "description": [
              "\nGet field list by providing an index patttern (or spec)."
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", options?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.getFieldsForIndexPattern.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.getFieldsForIndexPattern.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "options for getting field list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.refreshFields",
            "type": "Function",
            "tags": [],
            "label": "refreshFields",
            "description": [
              "\nRefresh field list for a given index pattern."
            ],
            "signature": [
              "(dataView: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", displayErrors?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.refreshFields.$1",
                "type": "Object",
                "tags": [],
                "label": "dataView",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.refreshFields.$2",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.fieldArrayToMap",
            "type": "Function",
            "tags": [],
            "label": "fieldArrayToMap",
            "description": [
              "\nConverts field array to map."
            ],
            "signature": [
              "(fields: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[], fieldAttrs?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrs",
                "text": "FieldAttrs"
              },
              " | undefined) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.fieldArrayToMap.$1",
                "type": "Array",
                "tags": [],
                "label": "fields",
                "description": [
                  ": FieldSpec[]"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  "[]"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.fieldArrayToMap.$2",
                "type": "Object",
                "tags": [],
                "label": "fieldAttrs",
                "description": [
                  ": FieldAttrs"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldAttrs",
                    "text": "FieldAttrs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "Record<string, FieldSpec>"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.savedObjectToSpec",
            "type": "Function",
            "tags": [],
            "label": "savedObjectToSpec",
            "description": [
              "\nConverts data view saved object to data view spec."
            ],
            "signature": [
              "(savedObject: ",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ">) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.savedObjectToSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "savedObject",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-common",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                    "section": "def-common.SavedObject",
                    "text": "SavedObject"
                  },
                  "<",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataViewSpec"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet an index pattern by id, cache optimized."
            ],
            "signature": [
              "(id: string, displayErrors?: boolean, refreshFields?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.get.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.get.$2",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.get.$3",
                "type": "boolean",
                "tags": [],
                "label": "refreshFields",
                "description": [
                  "- If set true, will fetch fields from the index pattern"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreate data view instance."
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.create.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [
                  "data view spec"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.create.$2",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "if true, will not fetch fields"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.create.$3",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataView"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.createAndSave",
            "type": "Function",
            "tags": [],
            "label": "createAndSave",
            "description": [
              "\nCreate a new data view and save it right away."
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", override?: boolean, skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.createAndSave.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [
                  "data view spec"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.createAndSave.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.createAndSave.$3",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "Whether to skip field refresh step."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.createAndSave.$4",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.createSavedObject",
            "type": "Function",
            "tags": [],
            "label": "createSavedObject",
            "description": [
              "\nSave a new data view."
            ],
            "signature": [
              "(dataView: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", override?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.createSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "dataView",
                "description": [
                  "data view instance"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.createSavedObject.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.createSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.updateSavedObject",
            "type": "Function",
            "tags": [],
            "label": "updateSavedObject",
            "description": [
              "\nSave existing data view. Will attempt to merge differences if there are conflicts."
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", saveAttempts?: number, ignoreErrors?: boolean, displayErrors?: boolean) => Promise<void | Error | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.updateSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.updateSavedObject.$2",
                "type": "number",
                "tags": [],
                "label": "saveAttempts",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.updateSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "ignoreErrors",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.updateSavedObject.$4",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDeletes an index pattern from .kibana index."
            ],
            "signature": [
              "(indexPatternId: string) => Promise<{}>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.delete.$1",
                "type": "string",
                "tags": [],
                "label": "indexPatternId",
                "description": [
                  ": Id of kibana Index Pattern to delete"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsService.getDefaultDataView",
            "type": "Function",
            "tags": [],
            "label": "getDefaultDataView",
            "description": [
              "\nReturns the default data view as an object.\nIf no default is found, or it is missing\nanother data view is selected as default and returned.\nIf no possible data view found to become a default returns null.\n"
            ],
            "signature": [
              "(options?: { displayErrors?: boolean | undefined; refreshFields?: boolean | undefined; }) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsService.getDefaultDataView.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-server.DataViewsService.getDefaultDataView.$1.displayErrors",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "displayErrors",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "src/plugins/data_views/common/data_views/data_views.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-server.DataViewsService.getDefaultDataView.$1.refreshFields",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "refreshFields",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "src/plugins/data_views/common/data_views/data_views.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": [
              "default data view"
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.IndexPatternsFetcher",
        "type": "Class",
        "tags": [],
        "label": "IndexPatternsFetcher",
        "description": [],
        "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsFetcher.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsFetcher.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "elasticsearchClient",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-elasticsearch-server",
                    "scope": "common",
                    "docId": "kibKbnCoreElasticsearchServerPluginApi",
                    "section": "def-common.ElasticsearchClient",
                    "text": "ElasticsearchClient"
                  }
                ],
                "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsFetcher.Unnamed.$2",
                "type": "boolean",
                "tags": [],
                "label": "allowNoIndices",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard",
            "type": "Function",
            "tags": [
              "property",
              "property",
              "return"
            ],
            "label": "getFieldsForWildcard",
            "description": [
              "\n Get a list of field objects for an index pattern that may contain wildcards\n"
            ],
            "signature": [
              "(options: { pattern: string | string[]; metaFields?: string[] | undefined; fieldCapsOptions?: { allow_no_indices: boolean; includeUnmapped?: boolean | undefined; } | undefined; type?: string | undefined; rollupIndex?: string | undefined; indexFilter?: ",
              "QueryDslQueryContainer",
              " | undefined; fields?: string[] | undefined; }) => Promise<{ fields: ",
              {
                "pluginId": "dataViews",
                "scope": "server",
                "docId": "kibDataViewsPluginApi",
                "section": "def-server.FieldDescriptor",
                "text": "FieldDescriptor"
              },
              "[]; indices: string[]; }>"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.pattern",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "pattern",
                    "description": [],
                    "signature": [
                      "string | string[]"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.metaFields",
                    "type": "Array",
                    "tags": [],
                    "label": "metaFields",
                    "description": [],
                    "signature": [
                      "string[] | undefined"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.fieldCapsOptions",
                    "type": "Object",
                    "tags": [],
                    "label": "fieldCapsOptions",
                    "description": [],
                    "signature": [
                      "{ allow_no_indices: boolean; includeUnmapped?: boolean | undefined; } | undefined"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.type",
                    "type": "string",
                    "tags": [],
                    "label": "type",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.rollupIndex",
                    "type": "string",
                    "tags": [],
                    "label": "rollupIndex",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.indexFilter",
                    "type": "Object",
                    "tags": [],
                    "label": "indexFilter",
                    "description": [],
                    "signature": [
                      "QueryDslQueryContainer",
                      " | undefined"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.fields",
                    "type": "Array",
                    "tags": [],
                    "label": "fields",
                    "description": [],
                    "signature": [
                      "string[] | undefined"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-server.IndexPatternsFetcher.validatePatternListActive",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "validatePatternListActive",
            "description": [
              "\n Returns an index pattern list of only those index pattern strings in the given list that return indices\n"
            ],
            "signature": [
              "(patternList: string[]) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.IndexPatternsFetcher.validatePatternListActive.$1",
                "type": "Array",
                "tags": [],
                "label": "patternList",
                "description": [
                  "string[]"
                ],
                "signature": [
                  "string[]"
                ],
                "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "data",
        "id": "def-server.getCapabilitiesForRollupIndices",
        "type": "Function",
        "tags": [],
        "label": "getCapabilitiesForRollupIndices",
        "description": [
          "\nGet rollup job capabilities"
        ],
        "signature": [
          "(indices: ",
          "RollupGetRollupIndexCapsResponse",
          ") => ",
          {
            "pluginId": "dataViews",
            "scope": "server",
            "docId": "kibDataViewsPluginApi",
            "section": "def-server.RollupIndexCapability",
            "text": "RollupIndexCapability"
          }
        ],
        "path": "src/plugins/data_views/server/fetcher/lib/map_capabilities.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.getCapabilitiesForRollupIndices.$1",
            "type": "Object",
            "tags": [],
            "label": "indices",
            "description": [
              "rollup job index capabilites"
            ],
            "signature": [
              "RollupGetRollupIndexCapsResponse"
            ],
            "path": "src/plugins/data_views/server/fetcher/lib/map_capabilities.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.getEsQueryConfig",
        "type": "Function",
        "tags": [],
        "label": "getEsQueryConfig",
        "description": [],
        "signature": [
          "(config: KibanaConfig) => ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.EsQueryConfig",
            "text": "EsQueryConfig"
          }
        ],
        "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.getEsQueryConfig.$1",
            "type": "Object",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "KibanaConfig"
            ],
            "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.getRequestAbortedSignal",
        "type": "Function",
        "tags": [],
        "label": "getRequestAbortedSignal",
        "description": [
          "\nA simple utility function that returns an `AbortSignal` corresponding to an `AbortController`\nwhich aborts when the given request is aborted."
        ],
        "signature": [
          "(aborted$: ",
          "Observable",
          "<void>) => AbortSignal"
        ],
        "path": "src/plugins/data/server/lib/get_request_aborted_signal.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.getRequestAbortedSignal.$1",
            "type": "Object",
            "tags": [],
            "label": "aborted$",
            "description": [
              "The observable of abort events (usually `request.events.aborted$`)"
            ],
            "signature": [
              "Observable",
              "<void>"
            ],
            "path": "src/plugins/data/server/lib/get_request_aborted_signal.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.getTime",
        "type": "Function",
        "tags": [],
        "label": "getTime",
        "description": [],
        "signature": [
          "(indexPattern: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " | undefined, timeRange: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          ", options: { forceNow?: Date | undefined; fieldName?: string | undefined; } | undefined) => ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.RangeFilter",
            "text": "RangeFilter"
          },
          " | ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.ScriptedRangeFilter",
            "text": "ScriptedRangeFilter"
          },
          " | ",
          "MatchAllRangeFilter",
          " | undefined"
        ],
        "path": "src/plugins/data/common/query/timefilter/get_time.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.getTime.$1",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.getTime.$2",
            "type": "Object",
            "tags": [],
            "label": "timeRange",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              }
            ],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-server.getTime.$3",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "path": "src/plugins/data/common/query/timefilter/get_time.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.getTime.$3.forceNow",
                "type": "Object",
                "tags": [],
                "label": "forceNow",
                "description": [],
                "signature": [
                  "Date | undefined"
                ],
                "path": "src/plugins/data/common/query/timefilter/get_time.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.getTime.$3.fieldName",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data/common/query/timefilter/get_time.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.parseInterval",
        "type": "Function",
        "tags": [],
        "label": "parseInterval",
        "description": [],
        "signature": [
          "(interval: string) => moment.Duration | null"
        ],
        "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_interval.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.parseInterval.$1",
            "type": "string",
            "tags": [],
            "label": "interval",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_interval.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "data",
        "id": "def-server.DataViewsServerPluginStart",
        "type": "Interface",
        "tags": [],
        "label": "DataViewsServerPluginStart",
        "description": [
          "\nDataViews server plugin start api"
        ],
        "path": "src/plugins/data_views/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.DataViewsServerPluginStart.dataViewsServiceFactory",
            "type": "Function",
            "tags": [],
            "label": "dataViewsServiceFactory",
            "description": [
              "\nReturns a DataViews service instance"
            ],
            "signature": [
              "(savedObjectsClient: ",
              {
                "pluginId": "@kbn/core-saved-objects-api-server",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
                "section": "def-common.SavedObjectsClientContract",
                "text": "SavedObjectsClientContract"
              },
              ", elasticsearchClient: ",
              {
                "pluginId": "@kbn/core-elasticsearch-server",
                "scope": "common",
                "docId": "kibKbnCoreElasticsearchServerPluginApi",
                "section": "def-common.ElasticsearchClient",
                "text": "ElasticsearchClient"
              },
              ", request?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any> | undefined, byPassCapabilities?: boolean | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewsService",
                "text": "DataViewsService"
              },
              ">"
            ],
            "path": "src/plugins/data_views/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsServerPluginStart.dataViewsServiceFactory.$1",
                "type": "Object",
                "tags": [],
                "label": "savedObjectsClient",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-api-server",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
                    "section": "def-common.SavedObjectsClientContract",
                    "text": "SavedObjectsClientContract"
                  }
                ],
                "path": "src/plugins/data_views/server/types.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsServerPluginStart.dataViewsServiceFactory.$2",
                "type": "Object",
                "tags": [],
                "label": "elasticsearchClient",
                "description": [],
                "signature": [
                  "{ create: { <TDocument = unknown>(this: That, params: ",
                  "CreateRequest",
                  "<TDocument> | ",
                  "CreateRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; <TDocument = unknown>(this: That, params: ",
                  "CreateRequest",
                  "<TDocument> | ",
                  "CreateRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "WriteResponseBase",
                  ", unknown>>; <TDocument = unknown>(this: That, params: ",
                  "CreateRequest",
                  "<TDocument> | ",
                  "CreateRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; }; update: { <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument> | ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "UpdateResponse",
                  "<TDocumentR>>; <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument> | ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "UpdateResponse",
                  "<TDocumentR>, unknown>>; <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument> | ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "UpdateResponse",
                  "<TDocumentR>>; }; get: { <TDocument = unknown>(this: That, params: ",
                  "GetRequest",
                  " | ",
                  "GetRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "GetResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params: ",
                  "GetRequest",
                  " | ",
                  "GetRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "GetResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
                  "GetRequest",
                  " | ",
                  "GetRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "GetResponse",
                  "<TDocument>>; }; delete: { (this: That, params: ",
                  "DeleteRequest",
                  " | ",
                  "DeleteRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; (this: That, params: ",
                  "DeleteRequest",
                  " | ",
                  "DeleteRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "WriteResponseBase",
                  ", unknown>>; (this: That, params: ",
                  "DeleteRequest",
                  " | ",
                  "DeleteRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; }; helpers: ",
                  "default",
                  "; search: { <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params?: ",
                  "SearchRequest",
                  " | ",
                  "SearchRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "SearchResponse",
                  "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params?: ",
                  "SearchRequest",
                  " | ",
                  "SearchRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "SearchResponse",
                  "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params?: ",
                  "SearchRequest",
                  " | ",
                  "SearchRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "SearchResponse",
                  "<TDocument, TAggregations>>; }; name: string | symbol; monitoring: ",
                  "default",
                  "; count: { (this: That, params?: ",
                  "CountRequest",
                  " | ",
                  "CountRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "CountResponse",
                  ">; (this: That, params?: ",
                  "CountRequest",
                  " | ",
                  "CountRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "CountResponse",
                  ", unknown>>; (this: That, params?: ",
                  "CountRequest",
                  " | ",
                  "CountRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "CountResponse",
                  ">; }; exists: { (this: That, params: ",
                  "ExistsRequest",
                  " | ",
                  "ExistsRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<boolean>; (this: That, params: ",
                  "ExistsRequest",
                  " | ",
                  "ExistsRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<boolean, unknown>>; (this: That, params: ",
                  "ExistsRequest",
                  " | ",
                  "ExistsRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<boolean>; }; security: ",
                  "default",
                  "; ping: { (this: That, params?: ",
                  "PingRequest",
                  " | ",
                  "PingRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<boolean>; (this: That, params?: ",
                  "PingRequest",
                  " | ",
                  "PingRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<boolean, unknown>>; (this: That, params?: ",
                  "PingRequest",
                  " | ",
                  "PingRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<boolean>; }; nodes: ",
                  "default",
                  "; indices: ",
                  "default",
                  "; [kAsyncSearch]: symbol | null; [kAutoscaling]: symbol | null; [kCat]: symbol | null; [kCcr]: symbol | null; [kCluster]: symbol | null; [kDanglingIndices]: symbol | null; [kEnrich]: symbol | null; [kEql]: symbol | null; [kFeatures]: symbol | null; [kFleet]: symbol | null; [kGraph]: symbol | null; [kIlm]: symbol | null; [kIndices]: symbol | null; [kIngest]: symbol | null; [kLicense]: symbol | null; [kLogstash]: symbol | null; [kMigration]: symbol | null; [kMl]: symbol | null; [kMonitoring]: symbol | null; [kNodes]: symbol | null; [kRollup]: symbol | null; [kSearchableSnapshots]: symbol | null; [kSecurity]: symbol | null; [kShutdown]: symbol | null; [kSlm]: symbol | null; [kSnapshot]: symbol | null; [kSql]: symbol | null; [kSsl]: symbol | null; [kTasks]: symbol | null; [kTextStructure]: symbol | null; [kTransform]: symbol | null; [kWatcher]: symbol | null; [kXpack]: symbol | null; transport: ",
                  "default",
                  "; child: (opts: ",
                  "ClientOptions",
                  ") => ",
                  "default",
                  "; asyncSearch: ",
                  "default",
                  "; autoscaling: ",
                  "default",
                  "; bulk: { <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument> | ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "BulkResponse",
                  ">; <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument> | ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "BulkResponse",
                  ", unknown>>; <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument> | ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "BulkResponse",
                  ">; }; cat: ",
                  "default",
                  "; ccr: ",
                  "default",
                  "; clearScroll: { (this: That, params?: ",
                  "ClearScrollRequest",
                  " | ",
                  "ClearScrollRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ClearScrollResponse",
                  ">; (this: That, params?: ",
                  "ClearScrollRequest",
                  " | ",
                  "ClearScrollRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ClearScrollResponse",
                  ", unknown>>; (this: That, params?: ",
                  "ClearScrollRequest",
                  " | ",
                  "ClearScrollRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ClearScrollResponse",
                  ">; }; closePointInTime: { (this: That, params: ",
                  "ClosePointInTimeRequest",
                  " | ",
                  "ClosePointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ClosePointInTimeResponse",
                  ">; (this: That, params: ",
                  "ClosePointInTimeRequest",
                  " | ",
                  "ClosePointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ClosePointInTimeResponse",
                  ", unknown>>; (this: That, params: ",
                  "ClosePointInTimeRequest",
                  " | ",
                  "ClosePointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ClosePointInTimeResponse",
                  ">; }; cluster: ",
                  "default",
                  "; danglingIndices: ",
                  "default",
                  "; deleteByQuery: { (this: That, params: ",
                  "DeleteByQueryRequest",
                  " | ",
                  "DeleteByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "DeleteByQueryResponse",
                  ">; (this: That, params: ",
                  "DeleteByQueryRequest",
                  " | ",
                  "DeleteByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "DeleteByQueryResponse",
                  ", unknown>>; (this: That, params: ",
                  "DeleteByQueryRequest",
                  " | ",
                  "DeleteByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "DeleteByQueryResponse",
                  ">; }; deleteByQueryRethrottle: { (this: That, params: ",
                  "DeleteByQueryRethrottleRequest",
                  " | ",
                  "DeleteByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "TasksTaskListResponseBase",
                  ">; (this: That, params: ",
                  "DeleteByQueryRethrottleRequest",
                  " | ",
                  "DeleteByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "TasksTaskListResponseBase",
                  ", unknown>>; (this: That, params: ",
                  "DeleteByQueryRethrottleRequest",
                  " | ",
                  "DeleteByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "TasksTaskListResponseBase",
                  ">; }; deleteScript: { (this: That, params: ",
                  "DeleteScriptRequest",
                  " | ",
                  "DeleteScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "AcknowledgedResponseBase",
                  ">; (this: That, params: ",
                  "DeleteScriptRequest",
                  " | ",
                  "DeleteScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "AcknowledgedResponseBase",
                  ", unknown>>; (this: That, params: ",
                  "DeleteScriptRequest",
                  " | ",
                  "DeleteScriptRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "AcknowledgedResponseBase",
                  ">; }; enrich: ",
                  "default",
                  "; eql: ",
                  "default",
                  "; existsSource: { (this: That, params: ",
                  "ExistsSourceRequest",
                  " | ",
                  "ExistsSourceRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<boolean>; (this: That, params: ",
                  "ExistsSourceRequest",
                  " | ",
                  "ExistsSourceRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<boolean, unknown>>; (this: That, params: ",
                  "ExistsSourceRequest",
                  " | ",
                  "ExistsSourceRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<boolean>; }; explain: { <TDocument = unknown>(this: That, params: ",
                  "ExplainRequest",
                  " | ",
                  "ExplainRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ExplainResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params: ",
                  "ExplainRequest",
                  " | ",
                  "ExplainRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ExplainResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
                  "ExplainRequest",
                  " | ",
                  "ExplainRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ExplainResponse",
                  "<TDocument>>; }; features: ",
                  "default",
                  "; fieldCaps: { (this: That, params: ",
                  "FieldCapsRequest",
                  " | ",
                  "FieldCapsRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "FieldCapsResponse",
                  ">; (this: That, params: ",
                  "FieldCapsRequest",
                  " | ",
                  "FieldCapsRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "FieldCapsResponse",
                  ", unknown>>; (this: That, params: ",
                  "FieldCapsRequest",
                  " | ",
                  "FieldCapsRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "FieldCapsResponse",
                  ">; }; fleet: ",
                  "default",
                  "; getScript: { (this: That, params: ",
                  "GetScriptRequest",
                  " | ",
                  "GetScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "GetScriptResponse",
                  ">; (this: That, params: ",
                  "GetScriptRequest",
                  " | ",
                  "GetScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "GetScriptResponse",
                  ", unknown>>; (this: That, params: ",
                  "GetScriptRequest",
                  " | ",
                  "GetScriptRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "GetScriptResponse",
                  ">; }; getScriptContext: { (this: That, params?: ",
                  "GetScriptContextRequest",
                  " | ",
                  "GetScriptContextRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "GetScriptContextResponse",
                  ">; (this: That, params?: ",
                  "GetScriptContextRequest",
                  " | ",
                  "GetScriptContextRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "GetScriptContextResponse",
                  ", unknown>>; (this: That, params?: ",
                  "GetScriptContextRequest",
                  " | ",
                  "GetScriptContextRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "GetScriptContextResponse",
                  ">; }; getScriptLanguages: { (this: That, params?: ",
                  "GetScriptLanguagesRequest",
                  " | ",
                  "GetScriptLanguagesRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "GetScriptLanguagesResponse",
                  ">; (this: That, params?: ",
                  "GetScriptLanguagesRequest",
                  " | ",
                  "GetScriptLanguagesRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "GetScriptLanguagesResponse",
                  ", unknown>>; (this: That, params?: ",
                  "GetScriptLanguagesRequest",
                  " | ",
                  "GetScriptLanguagesRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "GetScriptLanguagesResponse",
                  ">; }; getSource: { <TDocument = unknown>(this: That, params: ",
                  "GetSourceRequest",
                  " | ",
                  "GetSourceRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<TDocument>; <TDocument = unknown>(this: That, params: ",
                  "GetSourceRequest",
                  " | ",
                  "GetSourceRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<TDocument, unknown>>; <TDocument = unknown>(this: That, params: ",
                  "GetSourceRequest",
                  " | ",
                  "GetSourceRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<TDocument>; }; graph: ",
                  "default",
                  "; ilm: ",
                  "default",
                  "; index: { <TDocument = unknown>(this: That, params: ",
                  "IndexRequest",
                  "<TDocument> | ",
                  "IndexRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; <TDocument = unknown>(this: That, params: ",
                  "IndexRequest",
                  "<TDocument> | ",
                  "IndexRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "WriteResponseBase",
                  ", unknown>>; <TDocument = unknown>(this: That, params: ",
                  "IndexRequest",
                  "<TDocument> | ",
                  "IndexRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; }; info: { (this: That, params?: ",
                  "InfoRequest",
                  " | ",
                  "InfoRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "InfoResponse",
                  ">; (this: That, params?: ",
                  "InfoRequest",
                  " | ",
                  "InfoRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "InfoResponse",
                  ", unknown>>; (this: That, params?: ",
                  "InfoRequest",
                  " | ",
                  "InfoRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "InfoResponse",
                  ">; }; ingest: ",
                  "default",
                  "; knnSearch: { <TDocument = unknown>(this: That, params: ",
                  "KnnSearchRequest",
                  " | ",
                  "KnnSearchRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "KnnSearchResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params: ",
                  "KnnSearchRequest",
                  " | ",
                  "KnnSearchRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "KnnSearchResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
                  "KnnSearchRequest",
                  " | ",
                  "KnnSearchRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "KnnSearchResponse",
                  "<TDocument>>; }; license: ",
                  "default",
                  "; logstash: ",
                  "default",
                  "; mget: { <TDocument = unknown>(this: That, params?: ",
                  "MgetRequest",
                  " | ",
                  "MgetRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "MgetResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params?: ",
                  "MgetRequest",
                  " | ",
                  "MgetRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "MgetResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params?: ",
                  "MgetRequest",
                  " | ",
                  "MgetRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "MgetResponse",
                  "<TDocument>>; }; migration: ",
                  "default",
                  "; ml: ",
                  "default",
                  "; msearch: { <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchRequest",
                  " | ",
                  "MsearchRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "MsearchResponse",
                  "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchRequest",
                  " | ",
                  "MsearchRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "MsearchResponse",
                  "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchRequest",
                  " | ",
                  "MsearchRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "MsearchResponse",
                  "<TDocument, TAggregations>>; }; msearchTemplate: { <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchTemplateRequest",
                  " | ",
                  "MsearchTemplateRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "MsearchTemplateResponse",
                  "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchTemplateRequest",
                  " | ",
                  "MsearchTemplateRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "MsearchTemplateResponse",
                  "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchTemplateRequest",
                  " | ",
                  "MsearchTemplateRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "MsearchTemplateResponse",
                  "<TDocument, TAggregations>>; }; mtermvectors: { (this: That, params?: ",
                  "MtermvectorsRequest",
                  " | ",
                  "MtermvectorsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "MtermvectorsResponse",
                  ">; (this: That, params?: ",
                  "MtermvectorsRequest",
                  " | ",
                  "MtermvectorsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "MtermvectorsResponse",
                  ", unknown>>; (this: That, params?: ",
                  "MtermvectorsRequest",
                  " | ",
                  "MtermvectorsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "MtermvectorsResponse",
                  ">; }; openPointInTime: { (this: That, params: ",
                  "OpenPointInTimeRequest",
                  " | ",
                  "OpenPointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "OpenPointInTimeResponse",
                  ">; (this: That, params: ",
                  "OpenPointInTimeRequest",
                  " | ",
                  "OpenPointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "OpenPointInTimeResponse",
                  ", unknown>>; (this: That, params: ",
                  "OpenPointInTimeRequest",
                  " | ",
                  "OpenPointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "OpenPointInTimeResponse",
                  ">; }; putScript: { (this: That, params: ",
                  "PutScriptRequest",
                  " | ",
                  "PutScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "AcknowledgedResponseBase",
                  ">; (this: That, params: ",
                  "PutScriptRequest",
                  " | ",
                  "PutScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "AcknowledgedResponseBase",
                  ", unknown>>; (this: That, params: ",
                  "PutScriptRequest",
                  " | ",
                  "PutScriptRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "AcknowledgedResponseBase",
                  ">; }; rankEval: { (this: That, params: ",
                  "RankEvalRequest",
                  " | ",
                  "RankEvalRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "RankEvalResponse",
                  ">; (this: That, params: ",
                  "RankEvalRequest",
                  " | ",
                  "RankEvalRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "RankEvalResponse",
                  ", unknown>>; (this: That, params: ",
                  "RankEvalRequest",
                  " | ",
                  "RankEvalRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "RankEvalResponse",
                  ">; }; reindex: { (this: That, params: ",
                  "ReindexRequest",
                  " | ",
                  "ReindexRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ReindexResponse",
                  ">; (this: That, params: ",
                  "ReindexRequest",
                  " | ",
                  "ReindexRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ReindexResponse",
                  ", unknown>>; (this: That, params: ",
                  "ReindexRequest",
                  " | ",
                  "ReindexRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ReindexResponse",
                  ">; }; reindexRethrottle: { (this: That, params: ",
                  "ReindexRethrottleRequest",
                  " | ",
                  "ReindexRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ReindexRethrottleResponse",
                  ">; (this: That, params: ",
                  "ReindexRethrottleRequest",
                  " | ",
                  "ReindexRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ReindexRethrottleResponse",
                  ", unknown>>; (this: That, params: ",
                  "ReindexRethrottleRequest",
                  " | ",
                  "ReindexRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ReindexRethrottleResponse",
                  ">; }; renderSearchTemplate: { (this: That, params?: ",
                  "RenderSearchTemplateRequest",
                  " | ",
                  "RenderSearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "RenderSearchTemplateResponse",
                  ">; (this: That, params?: ",
                  "RenderSearchTemplateRequest",
                  " | ",
                  "RenderSearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "RenderSearchTemplateResponse",
                  ", unknown>>; (this: That, params?: ",
                  "RenderSearchTemplateRequest",
                  " | ",
                  "RenderSearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "RenderSearchTemplateResponse",
                  ">; }; rollup: ",
                  "default",
                  "; scriptsPainlessExecute: { <TResult = unknown>(this: That, params?: ",
                  "ScriptsPainlessExecuteRequest",
                  " | ",
                  "ScriptsPainlessExecuteRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ScriptsPainlessExecuteResponse",
                  "<TResult>>; <TResult = unknown>(this: That, params?: ",
                  "ScriptsPainlessExecuteRequest",
                  " | ",
                  "ScriptsPainlessExecuteRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ScriptsPainlessExecuteResponse",
                  "<TResult>, unknown>>; <TResult = unknown>(this: That, params?: ",
                  "ScriptsPainlessExecuteRequest",
                  " | ",
                  "ScriptsPainlessExecuteRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ScriptsPainlessExecuteResponse",
                  "<TResult>>; }; scroll: { <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "ScrollRequest",
                  " | ",
                  "ScrollRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ScrollResponse",
                  "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "ScrollRequest",
                  " | ",
                  "ScrollRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ScrollResponse",
                  "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "ScrollRequest",
                  " | ",
                  "ScrollRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ScrollResponse",
                  "<TDocument, TAggregations>>; }; searchMvt: { (this: That, params: ",
                  "SearchMvtRequest",
                  " | ",
                  "SearchMvtRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<ArrayBuffer>; (this: That, params: ",
                  "SearchMvtRequest",
                  " | ",
                  "SearchMvtRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<ArrayBuffer, unknown>>; (this: That, params: ",
                  "SearchMvtRequest",
                  " | ",
                  "SearchMvtRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<ArrayBuffer>; }; searchShards: { (this: That, params?: ",
                  "SearchShardsRequest",
                  " | ",
                  "SearchShardsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "SearchShardsResponse",
                  ">; (this: That, params?: ",
                  "SearchShardsRequest",
                  " | ",
                  "SearchShardsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "SearchShardsResponse",
                  ", unknown>>; (this: That, params?: ",
                  "SearchShardsRequest",
                  " | ",
                  "SearchShardsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "SearchShardsResponse",
                  ">; }; searchTemplate: { <TDocument = unknown>(this: That, params?: ",
                  "SearchTemplateRequest",
                  " | ",
                  "SearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "SearchTemplateResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params?: ",
                  "SearchTemplateRequest",
                  " | ",
                  "SearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "SearchTemplateResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params?: ",
                  "SearchTemplateRequest",
                  " | ",
                  "SearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "SearchTemplateResponse",
                  "<TDocument>>; }; searchableSnapshots: ",
                  "default",
                  "; shutdown: ",
                  "default",
                  "; slm: ",
                  "default",
                  "; snapshot: ",
                  "default",
                  "; sql: ",
                  "default",
                  "; ssl: ",
                  "default",
                  "; tasks: ",
                  "default",
                  "; termsEnum: { (this: That, params: ",
                  "TermsEnumRequest",
                  " | ",
                  "TermsEnumRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "TermsEnumResponse",
                  ">; (this: That, params: ",
                  "TermsEnumRequest",
                  " | ",
                  "TermsEnumRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "TermsEnumResponse",
                  ", unknown>>; (this: That, params: ",
                  "TermsEnumRequest",
                  " | ",
                  "TermsEnumRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "TermsEnumResponse",
                  ">; }; termvectors: { <TDocument = unknown>(this: That, params: ",
                  "TermvectorsRequest",
                  "<TDocument> | ",
                  "TermvectorsRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "TermvectorsResponse",
                  ">; <TDocument = unknown>(this: That, params: ",
                  "TermvectorsRequest",
                  "<TDocument> | ",
                  "TermvectorsRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "TermvectorsResponse",
                  ", unknown>>; <TDocument = unknown>(this: That, params: ",
                  "TermvectorsRequest",
                  "<TDocument> | ",
                  "TermvectorsRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "TermvectorsResponse",
                  ">; }; textStructure: ",
                  "default",
                  "; transform: ",
                  "default",
                  "; updateByQuery: { (this: That, params: ",
                  "UpdateByQueryRequest",
                  " | ",
                  "UpdateByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "UpdateByQueryResponse",
                  ">; (this: That, params: ",
                  "UpdateByQueryRequest",
                  " | ",
                  "UpdateByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "UpdateByQueryResponse",
                  ", unknown>>; (this: That, params: ",
                  "UpdateByQueryRequest",
                  " | ",
                  "UpdateByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "UpdateByQueryResponse",
                  ">; }; updateByQueryRethrottle: { (this: That, params: ",
                  "UpdateByQueryRethrottleRequest",
                  " | ",
                  "UpdateByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "UpdateByQueryRethrottleResponse",
                  ">; (this: That, params: ",
                  "UpdateByQueryRethrottleRequest",
                  " | ",
                  "UpdateByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "UpdateByQueryRethrottleResponse",
                  ", unknown>>; (this: That, params: ",
                  "UpdateByQueryRethrottleRequest",
                  " | ",
                  "UpdateByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "UpdateByQueryRethrottleResponse",
                  ">; }; watcher: ",
                  "default",
                  "; xpack: ",
                  "default",
                  "; }"
                ],
                "path": "src/plugins/data_views/server/types.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsServerPluginStart.dataViewsServiceFactory.$3",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any> | undefined"
                ],
                "path": "src/plugins/data_views/server/types.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.DataViewsServerPluginStart.dataViewsServiceFactory.$4",
                "type": "CompoundType",
                "tags": [],
                "label": "byPassCapabilities",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/server/types.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.FieldDescriptor",
        "type": "Interface",
        "tags": [],
        "label": "FieldDescriptor",
        "description": [],
        "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.FieldDescriptor.aggregatable",
            "type": "boolean",
            "tags": [],
            "label": "aggregatable",
            "description": [],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.FieldDescriptor.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.FieldDescriptor.readFromDocValues",
            "type": "boolean",
            "tags": [],
            "label": "readFromDocValues",
            "description": [],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.FieldDescriptor.searchable",
            "type": "boolean",
            "tags": [],
            "label": "searchable",
            "description": [],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.FieldDescriptor.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.FieldDescriptor.esTypes",
            "type": "Array",
            "tags": [],
            "label": "esTypes",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.FieldDescriptor.subType",
            "type": "Object",
            "tags": [],
            "label": "subType",
            "description": [],
            "signature": [
              "FieldSubType | undefined"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.FieldDescriptor.metadata_field",
            "type": "CompoundType",
            "tags": [],
            "label": "metadata_field",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.FieldDescriptor.fixedInterval",
            "type": "Array",
            "tags": [],
            "label": "fixedInterval",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.FieldDescriptor.timeZone",
            "type": "Array",
            "tags": [],
            "label": "timeZone",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.FieldDescriptor.timeSeriesMetric",
            "type": "CompoundType",
            "tags": [],
            "label": "timeSeriesMetric",
            "description": [],
            "signature": [
              "\"histogram\" | \"summary\" | \"gauge\" | \"counter\" | undefined"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.FieldDescriptor.timeSeriesDimension",
            "type": "CompoundType",
            "tags": [],
            "label": "timeSeriesDimension",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.IEsSearchRequest",
        "type": "Interface",
        "tags": [],
        "label": "IEsSearchRequest",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IEsSearchRequest",
            "text": "IEsSearchRequest"
          },
          " extends ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchRequest",
            "text": "IKibanaSearchRequest"
          },
          "<",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.ISearchRequestParams",
            "text": "ISearchRequestParams"
          },
          ">"
        ],
        "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.IEsSearchRequest.indexType",
            "type": "string",
            "tags": [],
            "label": "indexType",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.ISearchOptions",
        "type": "Interface",
        "tags": [],
        "label": "ISearchOptions",
        "description": [],
        "path": "src/plugins/data/common/search/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.abortSignal",
            "type": "Object",
            "tags": [],
            "label": "abortSignal",
            "description": [
              "\nAn `AbortSignal` that allows the caller of `search` to abort a search request."
            ],
            "signature": [
              "AbortSignal | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.strategy",
            "type": "string",
            "tags": [],
            "label": "strategy",
            "description": [
              "\nUse this option to force using a specific server side search strategy. Leave empty to use the default strategy."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.legacyHitsTotal",
            "type": "CompoundType",
            "tags": [],
            "label": "legacyHitsTotal",
            "description": [
              "\nRequest the legacy format for the total number of hits. If sending `rest_total_hits_as_int` to\nsomething other than `true`, this should be set to `false`."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.sessionId",
            "type": "string",
            "tags": [],
            "label": "sessionId",
            "description": [
              "\nA session ID, grouping multiple search requests into a single session."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.isStored",
            "type": "CompoundType",
            "tags": [],
            "label": "isStored",
            "description": [
              "\nWhether the session is already saved (i.e. sent to background)"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.isSearchStored",
            "type": "CompoundType",
            "tags": [],
            "label": "isSearchStored",
            "description": [
              "\nWhether the search was successfully polled after session was saved. Search was added to a session saved object and keepAlive extended."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.isRestore",
            "type": "CompoundType",
            "tags": [],
            "label": "isRestore",
            "description": [
              "\nWhether the session is restored (i.e. search requests should re-use the stored search IDs,\nrather than starting from scratch)"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.executionContext",
            "type": "Object",
            "tags": [],
            "label": "executionContext",
            "description": [
              "\nRepresents a meta-information about a Kibana entity intitating a saerch request."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-execution-context-common",
                "scope": "common",
                "docId": "kibKbnCoreExecutionContextCommonPluginApi",
                "section": "def-common.KibanaExecutionContext",
                "text": "KibanaExecutionContext"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.indexPattern",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [
              "\nIndex pattern reference is used for better error messages"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-server.ISearchOptions.transport",
            "type": "Object",
            "tags": [],
            "label": "transport",
            "description": [
              "\nTransportRequestOptions, other than `signal`, to pass through to the ES client.\nTo pass an abort signal, use {@link ISearchOptions.abortSignal}"
            ],
            "signature": [
              "Omit<",
              "TransportRequestOptions",
              ", \"signal\"> | undefined"
            ],
            "path": "src/plugins/data/common/search/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "data",
        "id": "def-server.ES_FIELD_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "ES_FIELD_TYPES",
        "description": [],
        "path": "packages/kbn-field-types/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.KBN_FIELD_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "KBN_FIELD_TYPES",
        "description": [],
        "path": "packages/kbn-field-types/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.METRIC_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "METRIC_TYPES",
        "description": [],
        "path": "src/plugins/data/common/search/aggs/metrics/metric_agg_types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "data",
        "id": "def-server.DEFAULT_QUERY_LANGUAGE",
        "type": "string",
        "tags": [],
        "label": "DEFAULT_QUERY_LANGUAGE",
        "description": [],
        "signature": [
          "\"kuery\""
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.ES_SEARCH_STRATEGY",
        "type": "string",
        "tags": [],
        "label": "ES_SEARCH_STRATEGY",
        "description": [],
        "signature": [
          "\"es\""
        ],
        "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.IEsSearchResponse",
        "type": "Type",
        "tags": [],
        "label": "IEsSearchResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IKibanaSearchResponse",
            "text": "IKibanaSearchResponse"
          },
          "<",
          "SearchResponse",
          "<Source, Record<string, ",
          "AggregationsAggregate",
          ">>>"
        ],
        "path": "src/plugins/data/common/search/strategies/es_search/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.ParsedInterval",
        "type": "Type",
        "tags": [],
        "label": "ParsedInterval",
        "description": [],
        "signature": [
          "{ value: number; unit: ",
          {
            "pluginId": "@kbn/datemath",
            "scope": "common",
            "docId": "kibKbnDatemathPluginApi",
            "section": "def-common.Unit",
            "text": "Unit"
          },
          "; type: \"fixed\" | \"calendar\"; }"
        ],
        "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_es_interval.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "data",
        "id": "def-server.exporters",
        "type": "Object",
        "tags": [],
        "label": "exporters",
        "description": [],
        "path": "src/plugins/data/server/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.exporters.datatableToCSV",
            "type": "Function",
            "tags": [],
            "label": "datatableToCSV",
            "description": [],
            "signature": [
              "({ columns, rows }: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.Datatable",
                "text": "Datatable"
              },
              ", { csvSeparator, quoteValues, formatFactory, raw, escapeFormulaValues }: CSVOptions) => string"
            ],
            "path": "src/plugins/data/server/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.exporters.datatableToCSV.$1",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.Datatable",
                    "text": "Datatable"
                  }
                ],
                "path": "src/plugins/data/common/exports/export_csv.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.exporters.datatableToCSV.$2",
                "type": "Object",
                "tags": [],
                "label": "__1",
                "description": [],
                "signature": [
                  "CSVOptions"
                ],
                "path": "src/plugins/data/common/exports/export_csv.tsx",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-server.exporters.CSV_MIME_TYPE",
            "type": "string",
            "tags": [],
            "label": "CSV_MIME_TYPE",
            "description": [],
            "path": "src/plugins/data/server/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.search",
        "type": "Object",
        "tags": [],
        "label": "search",
        "description": [],
        "path": "src/plugins/data/server/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-server.search.aggs",
            "type": "Object",
            "tags": [],
            "label": "aggs",
            "description": [],
            "path": "src/plugins/data/server/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-server.search.aggs.CidrMask",
                "type": "Object",
                "tags": [],
                "label": "CidrMask",
                "description": [],
                "signature": [
                  "typeof ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.CidrMask",
                    "text": "CidrMask"
                  }
                ],
                "path": "src/plugins/data/server/index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.search.aggs.dateHistogramInterval",
                "type": "Function",
                "tags": [],
                "label": "dateHistogramInterval",
                "description": [],
                "signature": [
                  "(interval: string, shouldForceFixed?: boolean | undefined) => Interval"
                ],
                "path": "src/plugins/data/server/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-server.search.aggs.dateHistogramInterval.$1",
                    "type": "string",
                    "tags": [],
                    "label": "interval",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/date_histogram_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-server.search.aggs.dateHistogramInterval.$2",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "shouldForceFixed",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/date_histogram_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-server.search.aggs.IpAddress",
                "type": "Object",
                "tags": [],
                "label": "IpAddress",
                "description": [],
                "signature": [
                  "typeof ",
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IpAddress",
                    "text": "IpAddress"
                  }
                ],
                "path": "src/plugins/data/server/index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-server.search.aggs.parseInterval",
                "type": "Function",
                "tags": [],
                "label": "parseInterval",
                "description": [],
                "signature": [
                  "(interval: string) => moment.Duration | null"
                ],
                "path": "src/plugins/data/server/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-server.search.aggs.parseInterval.$1",
                    "type": "string",
                    "tags": [],
                    "label": "interval",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/utils/date_interval_utils/parse_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "data",
                "id": "def-server.search.aggs.calcAutoIntervalLessThan",
                "type": "Function",
                "tags": [],
                "label": "calcAutoIntervalLessThan",
                "description": [],
                "signature": [
                  "(maxBucketCount: number, duration: number) => moment.Duration"
                ],
                "path": "src/plugins/data/server/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-server.search.aggs.calcAutoIntervalLessThan.$1",
                    "type": "number",
                    "tags": [],
                    "label": "maxBucketCount",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/buckets/lib/time_buckets/calc_auto_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-server.search.aggs.calcAutoIntervalLessThan.$2",
                    "type": "number",
                    "tags": [],
                    "label": "duration",
                    "description": [],
                    "path": "src/plugins/data/common/search/aggs/buckets/lib/time_buckets/calc_auto_interval.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-server.UI_SETTINGS",
        "type": "Object",
        "tags": [],
        "label": "UI_SETTINGS",
        "description": [],
        "signature": [
          "{ readonly META_FIELDS: \"metaFields\"; readonly DOC_HIGHLIGHT: \"doc_table:highlight\"; readonly QUERY_STRING_OPTIONS: \"query:queryString:options\"; readonly QUERY_ALLOW_LEADING_WILDCARDS: \"query:allowLeadingWildcards\"; readonly SEARCH_QUERY_LANGUAGE: \"search:queryLanguage\"; readonly SORT_OPTIONS: \"sort:options\"; readonly COURIER_IGNORE_FILTER_IF_FIELD_NOT_IN_INDEX: \"courier:ignoreFilterIfFieldNotInIndex\"; readonly COURIER_SET_REQUEST_PREFERENCE: \"courier:setRequestPreference\"; readonly COURIER_CUSTOM_REQUEST_PREFERENCE: \"courier:customRequestPreference\"; readonly COURIER_MAX_CONCURRENT_SHARD_REQUESTS: \"courier:maxConcurrentShardRequests\"; readonly SEARCH_INCLUDE_FROZEN: \"search:includeFrozen\"; readonly SEARCH_TIMEOUT: \"search:timeout\"; readonly HISTOGRAM_BAR_TARGET: \"histogram:barTarget\"; readonly HISTOGRAM_MAX_BARS: \"histogram:maxBars\"; readonly HISTORY_LIMIT: \"history:limit\"; readonly TIMEPICKER_REFRESH_INTERVAL_DEFAULTS: \"timepicker:refreshIntervalDefaults\"; readonly TIMEPICKER_QUICK_RANGES: \"timepicker:quickRanges\"; readonly TIMEPICKER_TIME_DEFAULTS: \"timepicker:timeDefaults\"; readonly FILTERS_PINNED_BY_DEFAULT: \"filters:pinnedByDefault\"; readonly FILTERS_EDITOR_SUGGEST_VALUES: \"filterEditor:suggestValues\"; readonly AUTOCOMPLETE_USE_TIMERANGE: \"autocomplete:useTimeRange\"; readonly AUTOCOMPLETE_VALUE_SUGGESTION_METHOD: \"autocomplete:valueSuggestionMethod\"; readonly DATE_FORMAT: \"dateFormat\"; readonly DATEFORMAT_TZ: \"dateFormat:tz\"; }"
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "setup": {
      "parentPluginId": "data",
      "id": "def-server.DataPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "DataPluginSetup",
      "description": [],
      "path": "src/plugins/data/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "data",
          "id": "def-server.DataPluginSetup.search",
          "type": "Object",
          "tags": [],
          "label": "search",
          "description": [],
          "signature": [
            "ISearchSetup"
          ],
          "path": "src/plugins/data/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "data",
          "id": "def-server.DataPluginSetup.query",
          "type": "Object",
          "tags": [],
          "label": "query",
          "description": [],
          "signature": [
            "QuerySetup"
          ],
          "path": "src/plugins/data/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "data",
          "id": "def-server.DataPluginSetup.fieldFormats",
          "type": "Object",
          "tags": [
            "deprecated"
          ],
          "label": "fieldFormats",
          "description": [],
          "signature": [
            {
              "pluginId": "fieldFormats",
              "scope": "server",
              "docId": "kibFieldFormatsPluginApi",
              "section": "def-server.FieldFormatsSetup",
              "text": "FieldFormatsSetup"
            }
          ],
          "path": "src/plugins/data/server/plugin.ts",
          "deprecated": true,
          "trackAdoption": false,
          "references": []
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "data",
      "id": "def-server.DataPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "DataPluginStart",
      "description": [],
      "path": "src/plugins/data/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "data",
          "id": "def-server.DataPluginStart.search",
          "type": "Object",
          "tags": [],
          "label": "search",
          "description": [],
          "signature": [
            "ISearchStart",
            "<",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataSearchPluginApi",
              "section": "def-common.IEsSearchRequest",
              "text": "IEsSearchRequest"
            },
            ", ",
            {
              "pluginId": "data",
              "scope": "common",
              "docId": "kibDataSearchPluginApi",
              "section": "def-common.IEsSearchResponse",
              "text": "IEsSearchResponse"
            },
            "<any>>"
          ],
          "path": "src/plugins/data/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "data",
          "id": "def-server.DataPluginStart.fieldFormats",
          "type": "Object",
          "tags": [
            "deprecated"
          ],
          "label": "fieldFormats",
          "description": [],
          "signature": [
            {
              "pluginId": "fieldFormats",
              "scope": "server",
              "docId": "kibFieldFormatsPluginApi",
              "section": "def-server.FieldFormatsStart",
              "text": "FieldFormatsStart"
            }
          ],
          "path": "src/plugins/data/server/plugin.ts",
          "deprecated": true,
          "trackAdoption": false,
          "references": []
        },
        {
          "parentPluginId": "data",
          "id": "def-server.DataPluginStart.indexPatterns",
          "type": "Object",
          "tags": [],
          "label": "indexPatterns",
          "description": [],
          "signature": [
            {
              "pluginId": "dataViews",
              "scope": "server",
              "docId": "kibDataViewsPluginApi",
              "section": "def-server.DataViewsServerPluginStart",
              "text": "DataViewsServerPluginStart"
            }
          ],
          "path": "src/plugins/data/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "data",
          "id": "def-server.DataPluginStart.datatableUtilities",
          "type": "Object",
          "tags": [],
          "label": "datatableUtilities",
          "description": [
            "\nDatatable type utility functions."
          ],
          "signature": [
            "DatatableUtilitiesService"
          ],
          "path": "src/plugins/data/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [
      {
        "parentPluginId": "data",
        "id": "def-common.DatatableUtilitiesService",
        "type": "Class",
        "tags": [],
        "label": "DatatableUtilitiesService",
        "description": [],
        "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "aggs",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.AggsCommonStart",
                    "text": "AggsCommonStart"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "dataViews",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewsContract",
                    "text": "DataViewsContract"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.Unnamed.$3",
                "type": "Object",
                "tags": [],
                "label": "fieldFormats",
                "description": [],
                "signature": [
                  {
                    "pluginId": "fieldFormats",
                    "scope": "common",
                    "docId": "kibFieldFormatsPluginApi",
                    "section": "def-common.FieldFormatsStartCommon",
                    "text": "FieldFormatsStartCommon"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.clearField",
            "type": "Function",
            "tags": [],
            "label": "clearField",
            "description": [],
            "signature": [
              "(column: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              ") => void"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.clearField.$1",
                "type": "Object",
                "tags": [],
                "label": "column",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.clearFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "clearFieldFormat",
            "description": [],
            "signature": [
              "(column: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              ") => void"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.clearFieldFormat.$1",
                "type": "Object",
                "tags": [],
                "label": "column",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.getAggConfig",
            "type": "Function",
            "tags": [],
            "label": "getAggConfig",
            "description": [],
            "signature": [
              "(column: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              ") => Promise<",
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.AggConfig",
                "text": "AggConfig"
              },
              " | undefined>"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.getAggConfig.$1",
                "type": "Object",
                "tags": [],
                "label": "column",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.getDateHistogramMeta",
            "type": "Function",
            "tags": [],
            "label": "getDateHistogramMeta",
            "description": [
              "\nHelper function returning the used interval, used time zone and applied time filters for data table column created by the date_histogramm agg type.\n\"auto\" will get expanded to the actually used interval.\nIf the column is not a column created by a date_histogram aggregation of the esaggs data source,\nthis function will return undefined."
            ],
            "signature": [
              "(column: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              ", defaults?: Partial<{ timeZone: string; }>) => DateHistogramMeta | undefined"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.getDateHistogramMeta.$1",
                "type": "Object",
                "tags": [],
                "label": "column",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.getDateHistogramMeta.$2",
                "type": "Object",
                "tags": [],
                "label": "defaults",
                "description": [],
                "signature": [
                  "Partial<{ timeZone: string; }>"
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.getDataView",
            "type": "Function",
            "tags": [],
            "label": "getDataView",
            "description": [],
            "signature": [
              "(column: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              ") => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | undefined>"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.getDataView.$1",
                "type": "Object",
                "tags": [],
                "label": "column",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.getField",
            "type": "Function",
            "tags": [],
            "label": "getField",
            "description": [],
            "signature": [
              "(column: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              ") => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined>"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.getField.$1",
                "type": "Object",
                "tags": [],
                "label": "column",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.getFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "getFieldFormat",
            "description": [],
            "signature": [
              "(column: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              " | undefined"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.getFieldFormat.$1",
                "type": "Object",
                "tags": [],
                "label": "column",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.getInterval",
            "type": "Function",
            "tags": [],
            "label": "getInterval",
            "description": [],
            "signature": [
              "(column: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              ") => string | undefined"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.getInterval.$1",
                "type": "Object",
                "tags": [],
                "label": "column",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.getNumberHistogramInterval",
            "type": "Function",
            "tags": [],
            "label": "getNumberHistogramInterval",
            "description": [
              "\nHelper function returning the used interval for data table column created by the histogramm agg type.\n\"auto\" will get expanded to the actually used interval.\nIf the column is not a column created by a histogram aggregation of the esaggs data source,\nthis function will return undefined."
            ],
            "signature": [
              "(column: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              ") => number | undefined"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.getNumberHistogramInterval.$1",
                "type": "Object",
                "tags": [],
                "label": "column",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.getTotalCount",
            "type": "Function",
            "tags": [],
            "label": "getTotalCount",
            "description": [],
            "signature": [
              "(table: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.Datatable",
                "text": "Datatable"
              },
              ") => number | undefined"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.getTotalCount.$1",
                "type": "Object",
                "tags": [],
                "label": "table",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.Datatable",
                    "text": "Datatable"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.hasPrecisionError",
            "type": "Function",
            "tags": [],
            "label": "hasPrecisionError",
            "description": [],
            "signature": [
              "(column: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              ") => ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.Serializable",
                "text": "Serializable"
              }
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.hasPrecisionError.$1",
                "type": "Object",
                "tags": [],
                "label": "column",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.isFilterable",
            "type": "Function",
            "tags": [],
            "label": "isFilterable",
            "description": [],
            "signature": [
              "(column: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              ") => boolean"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.isFilterable.$1",
                "type": "Object",
                "tags": [],
                "label": "column",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DatatableUtilitiesService.setFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "setFieldFormat",
            "description": [],
            "signature": [
              "(column: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              ", fieldFormat: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              ") => void"
            ],
            "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.setFieldFormat.$1",
                "type": "Object",
                "tags": [],
                "label": "column",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.DatatableColumn",
                    "text": "DatatableColumn"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DatatableUtilitiesService.setFieldFormat.$2",
                "type": "Object",
                "tags": [],
                "label": "fieldFormat",
                "description": [],
                "signature": [
                  {
                    "pluginId": "fieldFormats",
                    "scope": "common",
                    "docId": "kibFieldFormatsPluginApi",
                    "section": "def-common.FieldFormat",
                    "text": "FieldFormat"
                  }
                ],
                "path": "src/plugins/data/common/datatable_utilities/datatable_utilities_service.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.DataView",
        "type": "Class",
        "tags": [],
        "label": "DataView",
        "description": [
          "\nData view class. Central kibana abstraction around multiple indices."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " implements ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewBase",
            "text": "DataViewBase"
          }
        ],
        "path": "src/plugins/data_views/common/data_views/data_view.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nSaved object id"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.title",
            "type": "string",
            "tags": [
              "deprecated"
            ],
            "label": "title",
            "description": [
              "\nTitle of data view"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/types.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/containers/detection_engine/rules/use_rule_from_timeline.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/containers/detection_engine/exceptions/get_es_query_filter.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/grouped_alerts.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/utils.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/store/middleware.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/server/lib/detection_engine/rule_types/utils/get_query_filter.ts"
              },
              {
                "plugin": "timelines",
                "path": "x-pack/plugins/timelines/public/mock/index_pattern.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/mock/index_pattern.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "threatIntelligence",
                "path": "x-pack/plugins/threat_intelligence/public/common/mocks/mock_security_context.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detection_engine/rule_exceptions/components/flyout_components/alerts_actions/utils.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/build_es_query.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_combined_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_kuery.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_nested_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/build_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/exists_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/get_filter_field.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrase_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrase_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrases_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/ast/ast.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/and.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/exists.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/is.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/nested.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/not.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/or.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/range.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/node_types/function.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/utils/get_full_field_name_node.test.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "savedObjectsManagement",
                "path": "src/plugins/saved_objects_management/public/management_section/objects_table/components/flyout.tsx"
              },
              {
                "plugin": "savedObjectsManagement",
                "path": "src/plugins/saved_objects_management/public/management_section/objects_table/components/flyout.tsx"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/autocomplete/providers/value_suggestion_provider.ts"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/query_string_input/fetch_index_patterns.ts"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/dataview_picker/change_dataview.tsx"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/server/rest_api_routes/update_data_view.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/server/rest_api_routes/update_data_view.ts"
              },
              {
                "plugin": "triggersActionsUi",
                "path": "x-pack/plugins/triggers_actions_ui/public/common/lib/data_apis.ts"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/options_list/options_list_service.ts"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/options_list/options_list_service.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/services/field_stats/load_field_stats.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/common/utils/field_existing_utils.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/hooks/use_existing_fields.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/hooks/use_existing_fields.ts"
              },
              {
                "plugin": "lens",
                "path": "x-pack/plugins/lens/public/data_views_service/loader.ts"
              },
              {
                "plugin": "lens",
                "path": "x-pack/plugins/lens/public/app_plugin/lens_top_nav.tsx"
              },
              {
                "plugin": "aiops",
                "path": "x-pack/plugins/aiops/public/components/log_categorization/log_categorization_page.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/data_frame_analytics/index_patterns.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/job_service/new_job_caps/rollup.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/lib/alerts/alerting_service.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/data_recognizer/data_recognizer.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/log_views/resolved_log_view.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/get_fields.ts"
              },
              {
                "plugin": "apm",
                "path": "x-pack/plugins/apm/server/routes/data_view/create_static_data_view.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/utils/observability_data_views/observability_data_views.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/columns/report_definition_field.tsx"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/use_filter_values.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/columns/filter_value_btn.tsx"
              },
              {
                "plugin": "dataVisualizer",
                "path": "x-pack/plugins/data_visualizer/public/application/index_data_visualizer/hooks/use_data_visualizer_grid_data.ts"
              },
              {
                "plugin": "dataVisualizer",
                "path": "x-pack/plugins/data_visualizer/public/application/index_data_visualizer/components/index_data_visualizer_view/index_data_visualizer_view.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_details.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/datavisualizer/index_based/data_loader/data_loader.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/page.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/action_clone/clone_action_name.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/common/job_creator/job_creator.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/common/results_loader/categorization_examples_loader.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/index_or_search/preconfigured_job_redirect.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/components/pick_fields_step/components/bucket_span_estimator/estimate_bucket_span.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/components/datafeed_step/components/data_view/change_data_view.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_exploration/components/outlier_exploration/use_outlier_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_exploration/components/exploration_results_table/use_exploration_results.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/source_selection/source_selection.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/embeddables/anomaly_charts/anomaly_charts_embeddable.tsx"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "fleet",
                "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/query_bar.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/services/kibana/data_views.ts"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/services/kibana/data_views.ts"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/datasource/datasource_component.js"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.sagas.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/persistence.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/persistence.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/sourcerer/create_sourcerer_data_view.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/sourcerer/create_sourcerer_data_view.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/rules/eql_query_bar/validators.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/rules/step_define_rule/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detection_engine/rule_details_ui/pages/rule_details/index.tsx"
              },
              {
                "plugin": "timelines",
                "path": "x-pack/plugins/timelines/server/search_strategy/index_fields/index.ts"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/components/data_view_select_popover.tsx"
              },
              {
                "plugin": "synthetics",
                "path": "x-pack/plugins/synthetics/public/legacy_uptime/components/overview/filter_group/filter_group.tsx"
              },
              {
                "plugin": "synthetics",
                "path": "x-pack/plugins/synthetics/public/legacy_uptime/components/overview/alerts/monitor_expressions/filters_expression_select.tsx"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/common/filter_agg/components/filter_term_form.tsx"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/hooks/use_search_items/common.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/services/es_index_service.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/server/routes/api/transforms.ts"
              },
              {
                "plugin": "upgradeAssistant",
                "path": "x-pack/plugins/upgrade_assistant/public/application/components/es_deprecation_logs/fix_deprecation_logs/external_links.tsx"
              },
              {
                "plugin": "ux",
                "path": "x-pack/plugins/ux/public/components/app/rum_dashboard/local_uifilters/use_data_view.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.test.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.test.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/services/new_job_capabilities/remove_nested_field_children.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_kpi.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_with_reference_lines.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/test_formula_metric_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/lens_attributes/single_metric_attributes.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/lens_attributes/single_metric_attributes.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/mobile_test_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_cwv.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/common/common.test.ts"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/data_views/data_views.story.ts"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/components/scripting_help/test_script.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/field_editor.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/create_edit_field/create_edit_field.tsx"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/list_control_factory.ts"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/range_control_factory.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/server/routes/field_stats.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/server/routes/field_stats.ts"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/controls/field.tsx"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/controls/field.tsx"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/agg_select.tsx"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/test_utils/get_index_pattern_mock.ts"
              },
              {
                "plugin": "presentationUtil",
                "path": "src/plugins/presentation_util/public/services/data_views/data_views.story.ts"
              },
              {
                "plugin": "visTypeTimelion",
                "path": "src/plugins/vis_types/timelion/public/helpers/arg_value_suggestions.ts"
              },
              {
                "plugin": "visTypeTimelion",
                "path": "src/plugins/vis_types/timelion/public/helpers/arg_value_suggestions.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/components/lib/convert_series_to_datatable.ts"
              },
              {
                "plugin": "visTypeVega",
                "path": "src/plugins/vis_types/vega/public/data_model/search_api.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/components/lib/convert_series_to_datatable.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/lib/cached_index_pattern_fetcher.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/lib/cached_index_pattern_fetcher.test.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_views.ts"
              },
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/application/main/hooks/use_text_based_query_language.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/metrics/hosts/hooks/use_data_view.test.ts"
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.fieldFormatMap",
            "type": "Object",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [
              "\nMap of field formats by field name"
            ],
            "signature": [
              "{ [x: string]: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nOnly used by rollup indices, used by rollup specific endpoint to load field list."
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.fields",
            "type": "CompoundType",
            "tags": [],
            "label": "fields",
            "description": [
              "\nField list, in extended array format"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.IIndexPatternFieldList",
                "text": "IIndexPatternFieldList"
              },
              " & { toSpec: () => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              },
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [
              "\nTimestamp field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nType is used to identify rollup index patterns."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.flattenHit",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "flattenHit",
            "description": [],
            "signature": [
              "(hit: Record<string, unknown[]>, deep?: boolean | undefined) => Record<string, unknown>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
              }
            ],
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.flattenHit.$1",
                "type": "Object",
                "tags": [],
                "label": "hit",
                "description": [],
                "signature": [
                  "{ [x: string]: unknown[]; }"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.flattenHit.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "deep",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.metaFields",
            "type": "Array",
            "tags": [],
            "label": "metaFields",
            "description": [
              "\nList of meta fields by name"
            ],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.version",
            "type": "string",
            "tags": [],
            "label": "version",
            "description": [
              "\nSavedObject version"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.sourceFilters",
            "type": "Array",
            "tags": [],
            "label": "sourceFilters",
            "description": [
              "\nArray of filters - hides fields in discover"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.SourceFilter",
                "text": "SourceFilter"
              },
              "[] | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nArray of namespace ids"
            ],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.allowNoIndex",
            "type": "boolean",
            "tags": [],
            "label": "allowNoIndex",
            "description": [
              "\nPrevents errors when index pattern exists before indices"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nName of the data view. Human readable name used to differentiate data view."
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.matchedIndices",
            "type": "Array",
            "tags": [],
            "label": "matchedIndices",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [
                  "- config data and dependencies"
                ],
                "signature": [
                  "DataViewDeps"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getName",
            "type": "Function",
            "tags": [],
            "label": "getName",
            "description": [
              "\nGet name of Data View"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getIndexPattern",
            "description": [
              "\nGet index pattern"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "index pattern string"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.setIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "setIndexPattern",
            "description": [
              "\nSet index pattern"
            ],
            "signature": [
              "(indexPattern: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.setIndexPattern.$1",
                "type": "string",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getOriginalSavedObjectBody",
            "description": [
              "\nGet last saved saved object fields"
            ],
            "signature": [
              "() => { fieldAttrs?: string | undefined; title?: string | undefined; timeFieldName?: string | undefined; fields?: string | undefined; sourceFilters?: string | undefined; fieldFormatMap?: string | undefined; typeMeta?: string | undefined; type?: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.resetOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "resetOriginalSavedObjectBody",
            "description": [
              "\nReset last saved saved object fields. Used after saving."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "getFieldAttrs",
            "description": [
              "\nReturns field attributes map"
            ],
            "signature": [
              "() => { [x: string]: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getComputedFields",
            "type": "Function",
            "tags": [],
            "label": "getComputedFields",
            "description": [
              "\nReturns scripted fields"
            ],
            "signature": [
              "() => { storedFields: string[]; scriptFields: Record<string, ",
              "ScriptField",
              ">; docvalueFields: { field: string; format: string; }[]; runtimeFields: ",
              "MappingRuntimeFields",
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.isPersisted",
            "type": "Function",
            "tags": [],
            "label": "isPersisted",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [
              "\nCreates static representation of the data view."
            ],
            "signature": [
              "(includeFields?: boolean) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.toSpec.$1",
                "type": "boolean",
                "tags": [],
                "label": "includeFields",
                "description": [
                  "Whether or not to include the `fields` list as part of this spec. If not included, the list\nwill be fetched from Elasticsearch when instantiating a new Data View with this spec."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getSourceFiltering",
            "type": "Function",
            "tags": [],
            "label": "getSourceFiltering",
            "description": [
              "\nGet the source filtering configuration for that index."
            ],
            "signature": [
              "() => { excludes: string[]; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.removeScriptedField",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "removeScriptedField",
            "description": [
              "\nRemoves scripted field from field list."
            ],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/field_editor.tsx"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              }
            ],
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.removeScriptedField.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of scripted field to remove"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getNonScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getNonScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/strategies/abstract_search_strategy.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/source_filters_table/components/table/table.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/lib/fetch_fields.ts"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_views.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/server/register_index_pattern_usage_collection.ts"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              },
              {
                "plugin": "dataViews",
                "path": "src/plugins/data_views/common/data_views/data_view.test.ts"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.isTSDBMode",
            "type": "Function",
            "tags": [],
            "label": "isTSDBMode",
            "description": [
              "\nreturns true if dataview contains TSDB fields"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.isTimeBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeBased",
            "description": [
              "\nDoes the data view have a timestamp field?"
            ],
            "signature": [
              "() => this is ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TimeBasedDataView",
                "text": "TimeBasedDataView"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.isTimeNanosBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeNanosBased",
            "description": [
              "\nDoes the data view have a timestamp field and is it a date nanos field?"
            ],
            "signature": [
              "() => this is ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TimeBasedDataView",
                "text": "TimeBasedDataView"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getTimeField",
            "type": "Function",
            "tags": [],
            "label": "getTimeField",
            "description": [
              "\nGet timestamp field as DataViewField or return undefined"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getFieldByName",
            "type": "Function",
            "tags": [],
            "label": "getFieldByName",
            "description": [
              "\nGet field by name."
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.getFieldByName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getAggregationRestrictions",
            "type": "Function",
            "tags": [],
            "label": "getAggregationRestrictions",
            "description": [
              "\nGet aggregation restrictions. Rollup fields can only perform a subset of aggregations."
            ],
            "signature": [
              "() => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.AggregationRestrictions",
                "text": "AggregationRestrictions"
              },
              "> | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getAsSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getAsSavedObjectBody",
            "description": [
              "\nReturns index pattern as saved object body for saving"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getFormatterForField",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForField",
            "description": [
              "\nProvide a field, get its formatter"
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.getFormatterForField.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [
                  "field to get formatter for"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewField",
                    "text": "DataViewField"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.addRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "addRuntimeField",
            "description": [
              "\nAdd a runtime field - Appended to existing mapped field or a new field is\ncreated as appropriate."
            ],
            "signature": [
              "(name: string, runtimeField: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ") => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.addRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.addRuntimeField.$2",
                "type": "Object",
                "tags": [],
                "label": "runtimeField",
                "description": [
                  "Runtime field definition"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.hasRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "hasRuntimeField",
            "description": [
              "\nChecks if runtime field exists"
            ],
            "signature": [
              "(name: string) => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.hasRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "getRuntimeField",
            "description": [
              "\nReturns runtime field if exists"
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              " | null"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.getRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Runtime field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getAllRuntimeFields",
            "type": "Function",
            "tags": [],
            "label": "getAllRuntimeFields",
            "description": [
              "\nGet all runtime field definitions.\nNOTE: this does not strip out runtime fields that match mapped field names"
            ],
            "signature": [
              "() => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "map of runtime field definitions by field name"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getFieldsByRuntimeFieldName",
            "type": "Function",
            "tags": [],
            "label": "getFieldsByRuntimeFieldName",
            "description": [
              "\nReturns data view fields backed by runtime fields."
            ],
            "signature": [
              "(name: string) => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "> | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.getFieldsByRuntimeFieldName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "runtime field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "map of DataViewFields (that are runtime fields) by field name"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.replaceAllRuntimeFields",
            "type": "Function",
            "tags": [],
            "label": "replaceAllRuntimeFields",
            "description": [
              "\nReplaces all existing runtime fields with new fields."
            ],
            "signature": [
              "(newFields: Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.replaceAllRuntimeFields.$1",
                "type": "Object",
                "tags": [],
                "label": "newFields",
                "description": [
                  "Map of runtime field definitions by field name"
                ],
                "signature": [
                  "Record<string, ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.removeRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "removeRuntimeField",
            "description": [
              "\nRemove a runtime field - removed from mapped field or removed unmapped\nfield as appropriate. Doesn't clear associated field attributes."
            ],
            "signature": [
              "(name: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.removeRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "- Field name to remove"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getRuntimeMappings",
            "type": "Function",
            "tags": [],
            "label": "getRuntimeMappings",
            "description": [
              "\nReturn the \"runtime_mappings\" section of the ES search query."
            ],
            "signature": [
              "() => ",
              "MappingRuntimeFields"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.getFormatterForFieldNoDefault",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForFieldNoDefault",
            "description": [
              "\nGet formatter for a given field name. Return undefined if none exists."
            ],
            "signature": [
              "(fieldname: string) => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.getFormatterForFieldNoDefault.$1",
                "type": "string",
                "tags": [],
                "label": "fieldname",
                "description": [
                  "name of field to get formatter for"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.setFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "setFieldAttrs",
            "description": [
              "\nSet field attribute"
            ],
            "signature": [
              "<K extends keyof ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              ">(fieldName: string, attrName: K, value: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "[K]) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.setFieldAttrs.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set attribute on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.setFieldAttrs.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "attrName",
                "description": [
                  "name of attribute to set"
                ],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.setFieldAttrs.$3",
                "type": "Uncategorized",
                "tags": [],
                "label": "value",
                "description": [
                  "value of attribute"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldAttrSet",
                    "text": "FieldAttrSet"
                  },
                  "[K]"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.setFieldCustomLabel",
            "type": "Function",
            "tags": [],
            "label": "setFieldCustomLabel",
            "description": [
              "\nSet field custom label"
            ],
            "signature": [
              "(fieldName: string, customLabel: string | null | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.setFieldCustomLabel.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set custom label on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.setFieldCustomLabel.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "customLabel",
                "description": [
                  "custom label value. If undefined, custom label is removed"
                ],
                "signature": [
                  "string | null | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.setFieldCount",
            "type": "Function",
            "tags": [],
            "label": "setFieldCount",
            "description": [
              "\nSet field count"
            ],
            "signature": [
              "(fieldName: string, count: number | null | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.setFieldCount.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set count on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.setFieldCount.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "count",
                "description": [
                  "count value. If undefined, count is removed"
                ],
                "signature": [
                  "number | null | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.setFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "setFieldFormat",
            "description": [
              "\nSet field formatter"
            ],
            "signature": [
              "(fieldName: string, format: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.setFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set format on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.setFieldFormat.$2",
                "type": "Object",
                "tags": [],
                "label": "format",
                "description": [
                  "field format in serialized form"
                ],
                "signature": [
                  {
                    "pluginId": "fieldFormats",
                    "scope": "common",
                    "docId": "kibFieldFormatsPluginApi",
                    "section": "def-common.SerializedFieldFormat",
                    "text": "SerializedFieldFormat"
                  },
                  "<{}, ",
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "common",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-common.SerializableRecord",
                    "text": "SerializableRecord"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataView.deleteFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "deleteFieldFormat",
            "description": [
              "\nRemove field format from the field format map."
            ],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataView.deleteFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "field name associated with the format for removal"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.DataViewField",
        "type": "Class",
        "tags": [],
        "label": "DataViewField",
        "description": [
          "\nData view field class"
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewField",
            "text": "DataViewField"
          },
          " implements ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewFieldBase",
            "text": "DataViewFieldBase"
          }
        ],
        "path": "src/plugins/data_views/common/fields/data_view_field.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.spec",
            "type": "CompoundType",
            "tags": [],
            "label": "spec",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.DataViewFieldBase",
                "text": "DataViewFieldBase"
              },
              " & { count?: number | undefined; conflictDescriptions?: Record<string, string[]> | undefined; format?: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              "> | undefined; esTypes?: string[] | undefined; searchable: boolean; aggregatable: boolean; readFromDocValues?: boolean | undefined; indexed?: boolean | undefined; customLabel?: string | undefined; runtimeField?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSpec",
                "text": "RuntimeFieldSpec"
              },
              " | undefined; fixedInterval?: string[] | undefined; timeZone?: string[] | undefined; timeSeriesDimension?: boolean | undefined; timeSeriesMetric?: \"histogram\" | \"summary\" | \"gauge\" | \"counter\" | undefined; shortDotsEnable?: boolean | undefined; isMapped?: boolean | undefined; parentName?: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.Unnamed",
            "type": "Function",
            "tags": [
              "constructor"
            ],
            "label": "Constructor",
            "description": [
              "\nDataView constructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewField.Unnamed.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "spec",
                "description": [
                  "Configuration for the field"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/data_view_field.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.count",
            "type": "number",
            "tags": [],
            "label": "count",
            "description": [
              "\nCount is used for field popularity in discover."
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.count",
            "type": "number",
            "tags": [],
            "label": "count",
            "description": [
              "\nSet count, which is used for field popularity in discover."
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.runtimeField",
            "type": "CompoundType",
            "tags": [],
            "label": "runtimeField",
            "description": [
              "\nReturns runtime field definition or undefined if field is not runtime field."
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSpec",
                "text": "RuntimeFieldSpec"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.runtimeField",
            "type": "CompoundType",
            "tags": [],
            "label": "runtimeField",
            "description": [
              "\nSets runtime field definition or unsets if undefined is provided."
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSpec",
                "text": "RuntimeFieldSpec"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.script",
            "type": "string",
            "tags": [],
            "label": "script",
            "description": [
              "\nScript field code"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.script",
            "type": "string",
            "tags": [],
            "label": "script",
            "description": [
              "\nSets scripted field painless code"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.lang",
            "type": "string",
            "tags": [],
            "label": "lang",
            "description": [
              "\nScript field language"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.lang",
            "type": "string",
            "tags": [],
            "label": "lang",
            "description": [
              "\nSets scripted field langauge."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [
              "\nReturns custom label if set, otherwise undefined."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [
              "\nSets custom label for field, or unsets if passed undefined."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.conflictDescriptions",
            "type": "Object",
            "tags": [],
            "label": "conflictDescriptions",
            "description": [
              "\nDescription of field type conflicts across different indices in the same index pattern."
            ],
            "signature": [
              "Record<string, string[]> | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.conflictDescriptions",
            "type": "Object",
            "tags": [],
            "label": "conflictDescriptions",
            "description": [
              "\nSets conflict descriptions for field."
            ],
            "signature": [
              "Record<string, string[]> | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nGet field name"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.displayName",
            "type": "string",
            "tags": [],
            "label": "displayName",
            "description": [
              "\nGets display name, calcualted based on name, custom label and shortDotsEnable."
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nGets field type"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.esTypes",
            "type": "Array",
            "tags": [],
            "label": "esTypes",
            "description": [
              "\nGets ES types as string array"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.scripted",
            "type": "boolean",
            "tags": [],
            "label": "scripted",
            "description": [
              "\nReturns true if scripted field"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.searchable",
            "type": "boolean",
            "tags": [],
            "label": "searchable",
            "description": [
              "\nReturns true if field is searchable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.aggregatable",
            "type": "boolean",
            "tags": [],
            "label": "aggregatable",
            "description": [
              "\nReturns true if field is aggregatable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.timeSeriesDimension",
            "type": "boolean",
            "tags": [],
            "label": "timeSeriesDimension",
            "description": [
              "\nreturns true if field is a TSDB dimension field"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.timeSeriesMetric",
            "type": "CompoundType",
            "tags": [],
            "label": "timeSeriesMetric",
            "description": [
              "\nreturns type of TSDB metric or undefined"
            ],
            "signature": [
              "\"histogram\" | \"summary\" | \"gauge\" | \"counter\" | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.fixedInterval",
            "type": "Array",
            "tags": [],
            "label": "fixedInterval",
            "description": [
              "\nreturns list of alloeed fixed intervals"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.isRolledUpField",
            "type": "CompoundType",
            "tags": [],
            "label": "isRolledUpField",
            "description": [
              "\nreturns true if the field is of rolled up type"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.timeZone",
            "type": "Array",
            "tags": [],
            "label": "timeZone",
            "description": [
              "\nreturn list of allowed time zones"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.readFromDocValues",
            "type": "boolean",
            "tags": [],
            "label": "readFromDocValues",
            "description": [
              "\nReturns true if field is available via doc values"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.subType",
            "type": "CompoundType",
            "tags": [],
            "label": "subType",
            "description": [
              "\nReturns field subtype, multi, nested, or undefined if neither"
            ],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.isMapped",
            "type": "CompoundType",
            "tags": [],
            "label": "isMapped",
            "description": [
              "\nIs the field part of the index mapping?"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.isRuntimeField",
            "type": "boolean",
            "tags": [],
            "label": "isRuntimeField",
            "description": [
              "\nReturns true if runtime field defined on data view"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.sortable",
            "type": "boolean",
            "tags": [],
            "label": "sortable",
            "description": [
              "\nReturns true if field is sortable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.filterable",
            "type": "boolean",
            "tags": [],
            "label": "filterable",
            "description": [
              "\nReturns true if field is filterable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.visualizable",
            "type": "boolean",
            "tags": [],
            "label": "visualizable",
            "description": [
              "\nReturns true if field is visualizable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.isSubtypeNested",
            "type": "Function",
            "tags": [],
            "label": "isSubtypeNested",
            "description": [
              "\nReturns true if field is subtype nested"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.isSubtypeMulti",
            "type": "Function",
            "tags": [],
            "label": "isSubtypeMulti",
            "description": [
              "\nReturns true if field is subtype multi"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.getSubtypeNested",
            "type": "Function",
            "tags": [],
            "label": "getSubtypeNested",
            "description": [
              "\nReturns subtype nested data if exists"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubTypeNested",
                "text": "IFieldSubTypeNested"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.getSubtypeMulti",
            "type": "Function",
            "tags": [],
            "label": "getSubtypeMulti",
            "description": [
              "\nReturns subtype multi data if exists"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubTypeMulti",
                "text": "IFieldSubTypeMulti"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.deleteCount",
            "type": "Function",
            "tags": [],
            "label": "deleteCount",
            "description": [
              "\nDeletes count value. Popularity as used by discover"
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.toJSON",
            "type": "Function",
            "tags": [],
            "label": "toJSON",
            "description": [
              "\nJSON version of field"
            ],
            "signature": [
              "() => { count: number; script: string | undefined; lang: string | undefined; conflictDescriptions: Record<string, string[]> | undefined; name: string; type: string; esTypes: string[] | undefined; scripted: boolean; searchable: boolean; aggregatable: boolean; readFromDocValues: boolean; subType: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; customLabel: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [
              "\nGet field in serialized form - fieldspec."
            ],
            "signature": [
              "(config?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.ToSpecConfig",
                "text": "ToSpecConfig"
              },
              ") => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              }
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewField.toSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [
                  "provide a method to get a field formatter"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.ToSpecConfig",
                    "text": "ToSpecConfig"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/data_view_field.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "field in serialized form - field spec"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewField.isRuntimeCompositeSubField",
            "type": "Function",
            "tags": [],
            "label": "isRuntimeCompositeSubField",
            "description": [
              "\nReturns true if composite runtime field"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.DataViewSavedObjectConflictError",
        "type": "Class",
        "tags": [],
        "label": "DataViewSavedObjectConflictError",
        "description": [
          "\nError thrown when saved object has been changed when attempting to save."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSavedObjectConflictError",
            "text": "DataViewSavedObjectConflictError"
          },
          " extends Error"
        ],
        "path": "src/plugins/data_views/common/errors/data_view_saved_object_conflict.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewSavedObjectConflictError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/errors/data_view_saved_object_conflict.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewSavedObjectConflictError.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "savedObjectId",
                "description": [
                  "saved object id with conflict"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/errors/data_view_saved_object_conflict.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.DataViewsService",
        "type": "Class",
        "tags": [],
        "label": "DataViewsService",
        "description": [
          "\nData views service, providing CRUD operations for data views."
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.getCanSave",
            "type": "Function",
            "tags": [],
            "label": "getCanSave",
            "description": [
              "\nCan the user save data views?"
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nDataViewsService constructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "deps",
                "description": [
                  "Service dependencies"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewsServiceDeps",
                    "text": "DataViewsServiceDeps"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.getIds",
            "type": "Function",
            "tags": [],
            "label": "getIds",
            "description": [
              "\nGets list of index pattern ids."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.getIds.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.getTitles",
            "type": "Function",
            "tags": [],
            "label": "getTitles",
            "description": [
              "\nGets list of index pattern titles."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.getTitles.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nFind and load index patterns by title."
            ],
            "signature": [
              "(search: string, size?: number) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.find.$1",
                "type": "string",
                "tags": [],
                "label": "search",
                "description": [
                  "Search string"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.find.$2",
                "type": "number",
                "tags": [],
                "label": "size",
                "description": [
                  "Number of data views to return"
                ],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataView[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.getIdsWithTitle",
            "type": "Function",
            "tags": [],
            "label": "getIdsWithTitle",
            "description": [
              "\nGets list of index pattern ids with titles."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewListItem",
                "text": "DataViewListItem"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.getIdsWithTitle.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.clearCache",
            "type": "Function",
            "tags": [],
            "label": "clearCache",
            "description": [
              "\nClear index pattern saved objects cache."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.clearInstanceCache",
            "type": "Function",
            "tags": [],
            "label": "clearInstanceCache",
            "description": [
              "\nClear index pattern instance cache"
            ],
            "signature": [
              "(id?: string | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.clearInstanceCache.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.getCache",
            "type": "Function",
            "tags": [],
            "label": "getCache",
            "description": [
              "\nGet cache, contains data view saved objects."
            ],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSavedObjectAttrs",
                "text": "DataViewSavedObjectAttrs"
              },
              ">[] | null | undefined>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.getDefault",
            "type": "Function",
            "tags": [],
            "label": "getDefault",
            "description": [
              "\nGet default index pattern"
            ],
            "signature": [
              "(displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.getDefault.$1",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.getDefaultId",
            "type": "Function",
            "tags": [],
            "label": "getDefaultId",
            "description": [
              "\nGet default index pattern id"
            ],
            "signature": [
              "() => Promise<string | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.setDefault",
            "type": "Function",
            "tags": [],
            "label": "setDefault",
            "description": [
              "\nOptionally set default index pattern, unless force = true"
            ],
            "signature": [
              "(id: string | null, force?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.setDefault.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "id",
                "description": [
                  "data view id"
                ],
                "signature": [
                  "string | null"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.setDefault.$2",
                "type": "boolean",
                "tags": [],
                "label": "force",
                "description": [
                  "set default data view even if there's an existing default"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.hasUserDataView",
            "type": "Function",
            "tags": [],
            "label": "hasUserDataView",
            "description": [
              "\nChecks if current user has a user created index pattern ignoring fleet's server default index patterns."
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.getFieldsForWildcard",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForWildcard",
            "description": [
              "\nGet field list by providing { pattern }."
            ],
            "signature": [
              "(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              ") => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "options for getting field list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.getFieldsForIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForIndexPattern",
            "description": [
              "\nGet field list by providing an index patttern (or spec)."
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", options?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.getFieldsForIndexPattern.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.getFieldsForIndexPattern.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "options for getting field list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.refreshFields",
            "type": "Function",
            "tags": [],
            "label": "refreshFields",
            "description": [
              "\nRefresh field list for a given index pattern."
            ],
            "signature": [
              "(dataView: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", displayErrors?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.refreshFields.$1",
                "type": "Object",
                "tags": [],
                "label": "dataView",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.refreshFields.$2",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.fieldArrayToMap",
            "type": "Function",
            "tags": [],
            "label": "fieldArrayToMap",
            "description": [
              "\nConverts field array to map."
            ],
            "signature": [
              "(fields: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[], fieldAttrs?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrs",
                "text": "FieldAttrs"
              },
              " | undefined) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.fieldArrayToMap.$1",
                "type": "Array",
                "tags": [],
                "label": "fields",
                "description": [
                  ": FieldSpec[]"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  "[]"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.fieldArrayToMap.$2",
                "type": "Object",
                "tags": [],
                "label": "fieldAttrs",
                "description": [
                  ": FieldAttrs"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldAttrs",
                    "text": "FieldAttrs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "Record<string, FieldSpec>"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.savedObjectToSpec",
            "type": "Function",
            "tags": [],
            "label": "savedObjectToSpec",
            "description": [
              "\nConverts data view saved object to data view spec."
            ],
            "signature": [
              "(savedObject: ",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ">) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.savedObjectToSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "savedObject",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-common",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                    "section": "def-common.SavedObject",
                    "text": "SavedObject"
                  },
                  "<",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataViewSpec"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet an index pattern by id, cache optimized."
            ],
            "signature": [
              "(id: string, displayErrors?: boolean, refreshFields?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.get.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.get.$2",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.get.$3",
                "type": "boolean",
                "tags": [],
                "label": "refreshFields",
                "description": [
                  "- If set true, will fetch fields from the index pattern"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreate data view instance."
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.create.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [
                  "data view spec"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.create.$2",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "if true, will not fetch fields"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.create.$3",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataView"
            ]
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.createAndSave",
            "type": "Function",
            "tags": [],
            "label": "createAndSave",
            "description": [
              "\nCreate a new data view and save it right away."
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", override?: boolean, skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.createAndSave.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [
                  "data view spec"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.createAndSave.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.createAndSave.$3",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "Whether to skip field refresh step."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.createAndSave.$4",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.createSavedObject",
            "type": "Function",
            "tags": [],
            "label": "createSavedObject",
            "description": [
              "\nSave a new data view."
            ],
            "signature": [
              "(dataView: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", override?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.createSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "dataView",
                "description": [
                  "data view instance"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.createSavedObject.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.createSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.updateSavedObject",
            "type": "Function",
            "tags": [],
            "label": "updateSavedObject",
            "description": [
              "\nSave existing data view. Will attempt to merge differences if there are conflicts."
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", saveAttempts?: number, ignoreErrors?: boolean, displayErrors?: boolean) => Promise<void | Error | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.updateSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.updateSavedObject.$2",
                "type": "number",
                "tags": [],
                "label": "saveAttempts",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.updateSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "ignoreErrors",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.updateSavedObject.$4",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDeletes an index pattern from .kibana index."
            ],
            "signature": [
              "(indexPatternId: string) => Promise<{}>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.delete.$1",
                "type": "string",
                "tags": [],
                "label": "indexPatternId",
                "description": [
                  ": Id of kibana Index Pattern to delete"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewsService.getDefaultDataView",
            "type": "Function",
            "tags": [],
            "label": "getDefaultDataView",
            "description": [
              "\nReturns the default data view as an object.\nIf no default is found, or it is missing\nanother data view is selected as default and returned.\nIf no possible data view found to become a default returns null.\n"
            ],
            "signature": [
              "(options?: { displayErrors?: boolean | undefined; refreshFields?: boolean | undefined; }) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DataViewsService.getDefaultDataView.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "data",
                    "id": "def-common.DataViewsService.getDefaultDataView.$1.displayErrors",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "displayErrors",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "src/plugins/data_views/common/data_views/data_views.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "data",
                    "id": "def-common.DataViewsService.getDefaultDataView.$1.refreshFields",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "refreshFields",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "src/plugins/data_views/common/data_views/data_views.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": [
              "default data view"
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.DuplicateDataViewError",
        "type": "Class",
        "tags": [],
        "label": "DuplicateDataViewError",
        "description": [
          "\nError thrown when attempting to create duplicate index pattern based on title."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DuplicateDataViewError",
            "text": "DuplicateDataViewError"
          },
          " extends Error"
        ],
        "path": "src/plugins/data_views/common/errors/duplicate_index_pattern.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.DuplicateDataViewError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/errors/duplicate_index_pattern.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.DuplicateDataViewError.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "message",
                "description": [
                  "- Error message"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/errors/duplicate_index_pattern.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.KbnFieldType",
        "type": "Class",
        "tags": [],
        "label": "KbnFieldType",
        "description": [],
        "path": "packages/kbn-field-types/src/kbn_field_type.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldType.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "packages/kbn-field-types/src/kbn_field_type.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldType.sortable",
            "type": "boolean",
            "tags": [],
            "label": "sortable",
            "description": [],
            "path": "packages/kbn-field-types/src/kbn_field_type.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldType.filterable",
            "type": "boolean",
            "tags": [],
            "label": "filterable",
            "description": [],
            "path": "packages/kbn-field-types/src/kbn_field_type.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldType.esTypes",
            "type": "Object",
            "tags": [],
            "label": "esTypes",
            "description": [],
            "signature": [
              "readonly ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.ES_FIELD_TYPES",
                "text": "ES_FIELD_TYPES"
              },
              "[]"
            ],
            "path": "packages/kbn-field-types/src/kbn_field_type.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldType.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "packages/kbn-field-types/src/kbn_field_type.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.KbnFieldType.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "Partial<",
                  {
                    "pluginId": "@kbn/field-types",
                    "scope": "common",
                    "docId": "kibKbnFieldTypesPluginApi",
                    "section": "def-common.KbnFieldTypeOptions",
                    "text": "KbnFieldTypeOptions"
                  },
                  ">"
                ],
                "path": "packages/kbn-field-types/src/kbn_field_type.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "data",
        "id": "def-common.cellHasFormulas",
        "type": "Function",
        "tags": [],
        "label": "cellHasFormulas",
        "description": [],
        "signature": [
          "(val: string) => boolean"
        ],
        "path": "src/plugins/data/common/exports/formula_checks.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.cellHasFormulas.$1",
            "type": "string",
            "tags": [],
            "label": "val",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/data/common/exports/formula_checks.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.createEscapeValue",
        "type": "Function",
        "tags": [],
        "label": "createEscapeValue",
        "description": [
          "\nCreate a function that will escape CSV values like \"=\", \"@\" and \"+\" with a\n\"'\". This will also place CSV values in \"\" if contain non-alphanumeric chars.\n\nFor example:\n\nGiven: =1+1\nReturns: \"'=1+1\"\n\nSee OWASP: https://www.owasp.org/index.php/CSV_Injection."
        ],
        "signature": [
          "(quoteValues: boolean, escapeFormulas: boolean) => (val: RawValue) => string"
        ],
        "path": "src/plugins/data/common/exports/escape_value.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.createEscapeValue.$1",
            "type": "boolean",
            "tags": [],
            "label": "quoteValues",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "src/plugins/data/common/exports/escape_value.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-common.createEscapeValue.$2",
            "type": "boolean",
            "tags": [],
            "label": "escapeFormulas",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "src/plugins/data/common/exports/escape_value.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.datatableToCSV",
        "type": "Function",
        "tags": [],
        "label": "datatableToCSV",
        "description": [],
        "signature": [
          "({ columns, rows }: ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.Datatable",
            "text": "Datatable"
          },
          ", { csvSeparator, quoteValues, formatFactory, raw, escapeFormulaValues }: CSVOptions) => string"
        ],
        "path": "src/plugins/data/common/exports/export_csv.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.datatableToCSV.$1",
            "type": "Object",
            "tags": [],
            "label": "{ columns, rows }",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.Datatable",
                "text": "Datatable"
              }
            ],
            "path": "src/plugins/data/common/exports/export_csv.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-common.datatableToCSV.$2",
            "type": "Object",
            "tags": [],
            "label": "{ csvSeparator, quoteValues, formatFactory, raw, escapeFormulaValues }",
            "description": [],
            "signature": [
              "CSVOptions"
            ],
            "path": "src/plugins/data/common/exports/export_csv.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.fieldList",
        "type": "Function",
        "tags": [],
        "label": "fieldList",
        "description": [],
        "signature": [
          "(specs?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "[], shortDotsEnable?: boolean) => ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.IIndexPatternFieldList",
            "text": "IIndexPatternFieldList"
          }
        ],
        "path": "src/plugins/data_views/common/fields/field_list.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.fieldList.$1",
            "type": "Array",
            "tags": [],
            "label": "specs",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-common.fieldList.$2",
            "type": "boolean",
            "tags": [],
            "label": "shortDotsEnable",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.getEsQueryConfig",
        "type": "Function",
        "tags": [],
        "label": "getEsQueryConfig",
        "description": [],
        "signature": [
          "(config: KibanaConfig) => ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.EsQueryConfig",
            "text": "EsQueryConfig"
          }
        ],
        "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.getEsQueryConfig.$1",
            "type": "Object",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "KibanaConfig"
            ],
            "path": "src/plugins/data/common/es_query/get_es_query_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.getFieldSubtypeMulti",
        "type": "Function",
        "tags": [],
        "label": "getFieldSubtypeMulti",
        "description": [],
        "signature": [
          "(field: HasSubtype) => ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.IFieldSubTypeMulti",
            "text": "IFieldSubTypeMulti"
          },
          " | undefined"
        ],
        "path": "src/plugins/data_views/common/fields/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.getFieldSubtypeMulti.$1",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "{ subType?: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/utils.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.getFieldSubtypeNested",
        "type": "Function",
        "tags": [],
        "label": "getFieldSubtypeNested",
        "description": [],
        "signature": [
          "(field: HasSubtype) => ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.IFieldSubTypeNested",
            "text": "IFieldSubTypeNested"
          },
          " | undefined"
        ],
        "path": "src/plugins/data_views/common/fields/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.getFieldSubtypeNested.$1",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "{ subType?: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/utils.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.getIndexPatternLoadMeta",
        "type": "Function",
        "tags": [],
        "label": "getIndexPatternLoadMeta",
        "description": [],
        "signature": [
          "() => Omit<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.IndexPatternLoadExpressionFunctionDefinition",
            "text": "IndexPatternLoadExpressionFunctionDefinition"
          },
          ", \"fn\">"
        ],
        "path": "src/plugins/data_views/common/expressions/load_index_pattern.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isFilterable",
        "type": "Function",
        "tags": [],
        "label": "isFilterable",
        "description": [],
        "signature": [
          "(field: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewField",
            "text": "DataViewField"
          },
          ") => boolean"
        ],
        "path": "src/plugins/data_views/common/fields/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.isFilterable.$1",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              }
            ],
            "path": "src/plugins/data_views/common/fields/utils.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isMultiField",
        "type": "Function",
        "tags": [],
        "label": "isMultiField",
        "description": [],
        "signature": [
          "(field: HasSubtype) => boolean"
        ],
        "path": "src/plugins/data_views/common/fields/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.isMultiField.$1",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "{ subType?: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/utils.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.isNestedField",
        "type": "Function",
        "tags": [],
        "label": "isNestedField",
        "description": [],
        "signature": [
          "(field: HasSubtype) => boolean"
        ],
        "path": "src/plugins/data_views/common/fields/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.isNestedField.$1",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "{ subType?: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/utils.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.tableHasFormulas",
        "type": "Function",
        "tags": [],
        "label": "tableHasFormulas",
        "description": [],
        "signature": [
          "(columns: ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.DatatableColumn",
            "text": "DatatableColumn"
          },
          "[], rows: ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.DatatableRow",
            "text": "DatatableRow"
          },
          "[]) => boolean"
        ],
        "path": "src/plugins/data/common/exports/formula_checks.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.tableHasFormulas.$1",
            "type": "Array",
            "tags": [],
            "label": "columns",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableColumn",
                "text": "DatatableColumn"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/exports/formula_checks.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "data",
            "id": "def-common.tableHasFormulas.$2",
            "type": "Array",
            "tags": [],
            "label": "rows",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.DatatableRow",
                "text": "DatatableRow"
              },
              "[]"
            ],
            "path": "src/plugins/data/common/exports/formula_checks.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "data",
        "id": "def-common.DataViewAttributes",
        "type": "Interface",
        "tags": [],
        "label": "DataViewAttributes",
        "description": [
          "\nInterface for the data view saved object"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewAttributes.fields",
            "type": "string",
            "tags": [],
            "label": "fields",
            "description": [
              "\nFields as a serialized array of field specs"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewAttributes.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "\nData view title"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewAttributes.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nData view type, default or rollup"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewAttributes.typeMeta",
            "type": "string",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nType metadata information, serialized. Only used by rollup data views."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewAttributes.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [
              "\nTime field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewAttributes.sourceFilters",
            "type": "string",
            "tags": [],
            "label": "sourceFilters",
            "description": [
              "\nSerialized array of filters. Used by discover to hide fields."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewAttributes.fieldFormatMap",
            "type": "string",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [
              "\nSerialized map of field formats by field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewAttributes.fieldAttrs",
            "type": "string",
            "tags": [],
            "label": "fieldAttrs",
            "description": [
              "\nSerialized map of field attributes, currently field count and name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewAttributes.runtimeFieldMap",
            "type": "string",
            "tags": [],
            "label": "runtimeFieldMap",
            "description": [
              "\nSerialized map of runtime field definitions, by field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewAttributes.allowNoIndex",
            "type": "CompoundType",
            "tags": [],
            "label": "allowNoIndex",
            "description": [
              "\nPrevents errors when index pattern exists before indices"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewAttributes.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nName of the data view. Human readable name used to differentiate data view."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.DataViewListItem",
        "type": "Interface",
        "tags": [],
        "label": "DataViewListItem",
        "description": [
          "\nResult from data view search - summary data."
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewListItem.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nSaved object id (or generated id if in-memory only)"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewListItem.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nNamespace ids"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewListItem.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "\nData view title"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewListItem.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nData view type"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewListItem.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nData view type meta"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.DataViewListItem.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.GetFieldsOptions",
        "type": "Interface",
        "tags": [],
        "label": "GetFieldsOptions",
        "description": [],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.GetFieldsOptions.pattern",
            "type": "string",
            "tags": [],
            "label": "pattern",
            "description": [],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.GetFieldsOptions.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.GetFieldsOptions.lookBack",
            "type": "CompoundType",
            "tags": [],
            "label": "lookBack",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.GetFieldsOptions.metaFields",
            "type": "Array",
            "tags": [],
            "label": "metaFields",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.GetFieldsOptions.rollupIndex",
            "type": "string",
            "tags": [],
            "label": "rollupIndex",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.GetFieldsOptions.allowNoIndex",
            "type": "CompoundType",
            "tags": [],
            "label": "allowNoIndex",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.GetFieldsOptions.indexFilter",
            "type": "Object",
            "tags": [],
            "label": "indexFilter",
            "description": [],
            "signature": [
              "QueryDslQueryContainer",
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.GetFieldsOptions.includeUnmapped",
            "type": "CompoundType",
            "tags": [],
            "label": "includeUnmapped",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.GetFieldsOptions.fields",
            "type": "Array",
            "tags": [],
            "label": "fields",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.IDataViewsApiClient",
        "type": "Interface",
        "tags": [],
        "label": "IDataViewsApiClient",
        "description": [],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.IDataViewsApiClient.getFieldsForWildcard",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForWildcard",
            "description": [],
            "signature": [
              "(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              ") => Promise<",
              "FieldsForWildcardResponse",
              ">"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.IDataViewsApiClient.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.IDataViewsApiClient.hasUserDataView",
            "type": "Function",
            "tags": [],
            "label": "hasUserDataView",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.IndexPatternExpressionType",
        "type": "Interface",
        "tags": [],
        "label": "IndexPatternExpressionType",
        "description": [
          "\nIndex pattern expression interface"
        ],
        "path": "src/plugins/data_views/common/expressions/load_index_pattern.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.IndexPatternExpressionType.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nExpression type"
            ],
            "signature": [
              "\"index_pattern\""
            ],
            "path": "src/plugins/data_views/common/expressions/load_index_pattern.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.IndexPatternExpressionType.value",
            "type": "Object",
            "tags": [],
            "label": "value",
            "description": [
              "\nValue - DataViewSpec"
            ],
            "signature": [
              "{ id?: string | undefined; version?: string | undefined; title?: string | undefined; timeFieldName?: string | undefined; sourceFilters?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.SourceFilter",
                "text": "SourceFilter"
              },
              "[] | undefined; fields?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              },
              " | undefined; typeMeta?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined; type?: string | undefined; fieldFormats?: Record<string, ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">> | undefined; runtimeFieldMap?: Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSpec",
                "text": "RuntimeFieldSpec"
              },
              "> | undefined; fieldAttrs?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrs",
                "text": "FieldAttrs"
              },
              " | undefined; allowNoIndex?: boolean | undefined; namespaces?: string[] | undefined; name?: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/expressions/load_index_pattern.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.KbnFieldTypeOptions",
        "type": "Interface",
        "tags": [],
        "label": "KbnFieldTypeOptions",
        "description": [],
        "path": "packages/kbn-field-types/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldTypeOptions.sortable",
            "type": "boolean",
            "tags": [],
            "label": "sortable",
            "description": [],
            "path": "packages/kbn-field-types/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldTypeOptions.filterable",
            "type": "boolean",
            "tags": [],
            "label": "filterable",
            "description": [],
            "path": "packages/kbn-field-types/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldTypeOptions.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "packages/kbn-field-types/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.KbnFieldTypeOptions.esTypes",
            "type": "Array",
            "tags": [],
            "label": "esTypes",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.ES_FIELD_TYPES",
                "text": "ES_FIELD_TYPES"
              },
              "[]"
            ],
            "path": "packages/kbn-field-types/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.UiSettingsCommon",
        "type": "Interface",
        "tags": [],
        "label": "UiSettingsCommon",
        "description": [
          "\nInterface for UiSettings common interface {@link UiSettingsClient}"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.UiSettingsCommon.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet a setting value"
            ],
            "signature": [
              "<T = unknown>(key: string) => Promise<T | undefined>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.UiSettingsCommon.get.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [
                  "name of value"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.UiSettingsCommon.getAll",
            "type": "Function",
            "tags": [],
            "label": "getAll",
            "description": [
              "\nGet all settings values"
            ],
            "signature": [
              "() => Promise<Record<string, unknown>>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.UiSettingsCommon.set",
            "type": "Function",
            "tags": [],
            "label": "set",
            "description": [
              "\nSet a setting value"
            ],
            "signature": [
              "<T = unknown>(key: string, value: T) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.UiSettingsCommon.set.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [
                  "name of value"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "data",
                "id": "def-common.UiSettingsCommon.set.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "value",
                "description": [
                  "value to set"
                ],
                "signature": [
                  "T"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "data",
            "id": "def-common.UiSettingsCommon.remove",
            "type": "Function",
            "tags": [],
            "label": "remove",
            "description": [
              "\nRemove a setting value"
            ],
            "signature": [
              "(key: string) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "data",
                "id": "def-common.UiSettingsCommon.remove.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [
                  "name of value"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "data",
        "id": "def-common.DataViewType",
        "type": "Enum",
        "tags": [],
        "label": "DataViewType",
        "description": [
          "\nData View type. Default or rollup"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.ES_FIELD_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "ES_FIELD_TYPES",
        "description": [],
        "path": "packages/kbn-field-types/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.KBN_FIELD_TYPES",
        "type": "Enum",
        "tags": [],
        "label": "KBN_FIELD_TYPES",
        "description": [],
        "path": "packages/kbn-field-types/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "data",
        "id": "def-common.AggregationRestrictions",
        "type": "Type",
        "tags": [],
        "label": "AggregationRestrictions",
        "description": [],
        "signature": [
          "{ [x: string]: { agg?: string | undefined; interval?: number | undefined; fixed_interval?: string | undefined; calendar_interval?: string | undefined; delay?: string | undefined; time_zone?: string | undefined; }; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.CSV_FORMULA_CHARS",
        "type": "Array",
        "tags": [],
        "label": "CSV_FORMULA_CHARS",
        "description": [],
        "signature": [
          "string[]"
        ],
        "path": "src/plugins/data/common/exports/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.CSV_MIME_TYPE",
        "type": "string",
        "tags": [],
        "label": "CSV_MIME_TYPE",
        "description": [],
        "signature": [
          "\"text/plain;charset=utf-8\""
        ],
        "path": "src/plugins/data/common/exports/export_csv.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.DATA_VIEW_SAVED_OBJECT_TYPE",
        "type": "string",
        "tags": [],
        "label": "DATA_VIEW_SAVED_OBJECT_TYPE",
        "description": [
          "\nData view saved object type."
        ],
        "signature": [
          "\"index-pattern\""
        ],
        "path": "src/plugins/data_views/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.DataViewFieldMap",
        "type": "Type",
        "tags": [],
        "label": "DataViewFieldMap",
        "description": [],
        "signature": [
          "{ [x: string]: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.DataViewsContract",
        "type": "Type",
        "tags": [],
        "label": "DataViewsContract",
        "description": [
          "\nData views service interface"
        ],
        "signature": [
          "{ create: (spec: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSpec",
            "text": "DataViewSpec"
          },
          ", skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ">; get: (id: string, displayErrors?: boolean, refreshFields?: boolean) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ">; delete: (indexPatternId: string) => Promise<{}>; find: (search: string, size?: number) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          "[]>; getCanSave: () => Promise<boolean>; getIds: (refresh?: boolean) => Promise<string[]>; getTitles: (refresh?: boolean) => Promise<string[]>; getIdsWithTitle: (refresh?: boolean) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewListItem",
            "text": "DataViewListItem"
          },
          "[]>; clearCache: () => void; clearInstanceCache: (id?: string | undefined) => void; getCache: () => Promise<",
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObject",
            "text": "SavedObject"
          },
          "<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSavedObjectAttrs",
            "text": "DataViewSavedObjectAttrs"
          },
          ">[] | null | undefined>; getDefault: (displayErrors?: boolean) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " | null>; getDefaultId: () => Promise<string | null>; setDefault: (id: string | null, force?: boolean) => Promise<void>; hasUserDataView: () => Promise<boolean>; getFieldsForWildcard: (options: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.GetFieldsOptions",
            "text": "GetFieldsOptions"
          },
          ") => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "[]>; getFieldsForIndexPattern: (indexPattern: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " | ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSpec",
            "text": "DataViewSpec"
          },
          ", options?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.GetFieldsOptions",
            "text": "GetFieldsOptions"
          },
          " | undefined) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "[]>; refreshFields: (dataView: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ", displayErrors?: boolean) => Promise<void>; fieldArrayToMap: (fields: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "[], fieldAttrs?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldAttrs",
            "text": "FieldAttrs"
          },
          " | undefined) => ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewFieldMap",
            "text": "DataViewFieldMap"
          },
          "; savedObjectToSpec: (savedObject: ",
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObject",
            "text": "SavedObject"
          },
          "<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewAttributes",
            "text": "DataViewAttributes"
          },
          ">) => ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSpec",
            "text": "DataViewSpec"
          },
          "; createAndSave: (spec: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSpec",
            "text": "DataViewSpec"
          },
          ", override?: boolean, skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ">; createSavedObject: (dataView: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ", override?: boolean, displayErrors?: boolean) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ">; updateSavedObject: (indexPattern: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ", saveAttempts?: number, ignoreErrors?: boolean, displayErrors?: boolean) => Promise<void | Error | ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ">; getDefaultDataView: (options?: { displayErrors?: boolean | undefined; refreshFields?: boolean | undefined; }) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " | null>; }"
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.DataViewSpec",
        "type": "Type",
        "tags": [],
        "label": "DataViewSpec",
        "description": [
          "\nStatic data view format\nSerialized data object, representing data view attributes and state"
        ],
        "signature": [
          "{ id?: string | undefined; version?: string | undefined; title?: string | undefined; timeFieldName?: string | undefined; sourceFilters?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.SourceFilter",
            "text": "SourceFilter"
          },
          "[] | undefined; fields?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewFieldMap",
            "text": "DataViewFieldMap"
          },
          " | undefined; typeMeta?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.TypeMeta",
            "text": "TypeMeta"
          },
          " | undefined; type?: string | undefined; fieldFormats?: Record<string, ",
          {
            "pluginId": "fieldFormats",
            "scope": "common",
            "docId": "kibFieldFormatsPluginApi",
            "section": "def-common.SerializedFieldFormat",
            "text": "SerializedFieldFormat"
          },
          "<{}, ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">> | undefined; runtimeFieldMap?: Record<string, ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldSpec",
            "text": "RuntimeFieldSpec"
          },
          "> | undefined; fieldAttrs?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldAttrs",
            "text": "FieldAttrs"
          },
          " | undefined; allowNoIndex?: boolean | undefined; namespaces?: string[] | undefined; name?: string | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.DEFAULT_QUERY_LANGUAGE",
        "type": "string",
        "tags": [],
        "label": "DEFAULT_QUERY_LANGUAGE",
        "description": [],
        "signature": [
          "\"kuery\""
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.FieldAttrs",
        "type": "Type",
        "tags": [],
        "label": "FieldAttrs",
        "description": [
          "\nSet of field attributes"
        ],
        "signature": [
          "{ [key: string]: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldAttrSet",
            "text": "FieldAttrSet"
          },
          "; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.FieldAttrSet",
        "type": "Type",
        "tags": [],
        "label": "FieldAttrSet",
        "description": [
          "\nField attributes that are stored on the data view"
        ],
        "signature": [
          "{ customLabel?: string | undefined; count?: number | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.FieldSpec",
        "type": "Type",
        "tags": [],
        "label": "FieldSpec",
        "description": [
          "\nSerialized version of DataViewField"
        ],
        "signature": [
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewFieldBase",
            "text": "DataViewFieldBase"
          },
          " & { count?: number | undefined; conflictDescriptions?: Record<string, string[]> | undefined; format?: ",
          {
            "pluginId": "fieldFormats",
            "scope": "common",
            "docId": "kibFieldFormatsPluginApi",
            "section": "def-common.SerializedFieldFormat",
            "text": "SerializedFieldFormat"
          },
          "<{}, ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          "> | undefined; esTypes?: string[] | undefined; searchable: boolean; aggregatable: boolean; readFromDocValues?: boolean | undefined; indexed?: boolean | undefined; customLabel?: string | undefined; runtimeField?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldSpec",
            "text": "RuntimeFieldSpec"
          },
          " | undefined; fixedInterval?: string[] | undefined; timeZone?: string[] | undefined; timeSeriesDimension?: boolean | undefined; timeSeriesMetric?: \"histogram\" | \"summary\" | \"gauge\" | \"counter\" | undefined; shortDotsEnable?: boolean | undefined; isMapped?: boolean | undefined; parentName?: string | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.FieldSpecConflictDescriptions",
        "type": "Type",
        "tags": [],
        "label": "FieldSpecConflictDescriptions",
        "description": [],
        "signature": [
          "{ [x: string]: string[]; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.GetConfigFn",
        "type": "Type",
        "tags": [],
        "label": "GetConfigFn",
        "description": [
          "\nIf a service is being shared on both the client and the server, and\nthe client code requires synchronous access to uiSettings, both client\nand server should wrap the core uiSettings services in a function\nmatching this signature.\n\nThis matches the signature of the public `core.uiSettings.get`, and\nshould only be used in scenarios where async access to uiSettings is\nnot possible."
        ],
        "signature": [
          "<T = any>(key: string, defaultOverride?: T | undefined) => T"
        ],
        "path": "src/plugins/data/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.GetConfigFn.$1",
            "type": "string",
            "tags": [],
            "label": "key",
            "description": [],
            "path": "src/plugins/data/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "data",
            "id": "def-common.GetConfigFn.$2",
            "type": "Uncategorized",
            "tags": [],
            "label": "defaultOverride",
            "description": [],
            "signature": [
              "T | undefined"
            ],
            "path": "src/plugins/data/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.IndexPatternLoadExpressionFunctionDefinition",
        "type": "Type",
        "tags": [],
        "label": "IndexPatternLoadExpressionFunctionDefinition",
        "description": [],
        "signature": [
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"indexPatternLoad\", null, Arguments, Output, ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">>"
        ],
        "path": "src/plugins/data_views/common/expressions/load_index_pattern.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.KIBANA_USER_QUERY_LANGUAGE_KEY",
        "type": "string",
        "tags": [],
        "label": "KIBANA_USER_QUERY_LANGUAGE_KEY",
        "description": [],
        "signature": [
          "\"kibana.userQueryLanguage\""
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.META_FIELDS",
        "type": "string",
        "tags": [],
        "label": "META_FIELDS",
        "description": [
          "\nUiSettings key for metaFields list."
        ],
        "signature": [
          "\"metaFields\""
        ],
        "path": "src/plugins/data_views/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.Query",
        "type": "Type",
        "tags": [],
        "label": "Query",
        "description": [],
        "signature": [
          "{ query: string | { [key: string]: any; }; language: string; }"
        ],
        "path": "packages/kbn-es-query/src/filters/build_filters/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.SavedObject",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "SavedObject",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObject",
            "text": "SavedObject"
          },
          "<T>"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-common/src/saved_objects.ts",
        "deprecated": true,
        "trackAdoption": false,
        "references": [
          {
            "plugin": "@kbn/core-saved-objects-common",
            "path": "packages/core/saved-objects/core-saved-objects-common/index.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_repository.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_repository.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_repository.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_repository.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core",
            "path": "src/core/public/index.ts"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/server/services/sample_data/sample_data_registry.ts"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/server/services/sample_data/sample_data_registry.ts"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/server/services/sample_data/sample_data_registry.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/types.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/types.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/types.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/types.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/types.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/types.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/index.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/server/utils.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/server/utils.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/server/utils.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.test.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_views/data_views.test.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/ui_api/get_table_column_definition.tsx"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/ui_api/get_table_column_definition.tsx"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/ui_api/get_table_column_definition.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/common/types/models/epm.ts"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/common/types/models/epm.ts"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/common/types/models/epm.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/shareable_runtime/types.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/shareable_runtime/types.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/services/kibana/workpad.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/services/kibana/workpad.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/components/home/hooks/use_upload_workpad.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/components/home/hooks/use_upload_workpad.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/packs/types.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/packs/types.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/routes/saved_queries/list/index.tsx"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/routes/saved_queries/list/index.tsx"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/assets/use_assets_status.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/assets/use_assets_status.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/assets/use_assets_status.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/assets/use_assets_status.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/dashboards/utils.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/dashboards/utils.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/dashboards/use_security_dashboards_table.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/dashboards/use_security_dashboards_table.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/components/monitors_page/overview/overview/monitor_detail_flyout.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/components/monitors_page/overview/overview/monitor_detail_flyout.tsx"
          },
          {
            "plugin": "savedObjects",
            "path": "src/plugins/saved_objects/public/saved_object/helpers/find_object_by_title.test.ts"
          },
          {
            "plugin": "savedObjects",
            "path": "src/plugins/saved_objects/public/saved_object/helpers/find_object_by_title.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-mocks",
            "path": "packages/core/saved-objects/core-saved-objects-browser-mocks/src/simple_saved_object.mock.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-mocks",
            "path": "packages/core/saved-objects/core-saved-objects-browser-mocks/src/simple_saved_object.mock.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-mocks",
            "path": "packages/core/saved-objects/core-saved-objects-browser-mocks/src/simple_saved_object.mock.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/import/errors.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/import/errors.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/import/lib/regenerate_ids.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/import/lib/regenerate_ids.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core",
            "path": "src/core/types/index.ts"
          },
          {
            "plugin": "apm",
            "path": "x-pack/plugins/apm/server/routes/settings/apm_indices/route.ts"
          },
          {
            "plugin": "savedObjectsTaggingOss",
            "path": "src/plugins/saved_objects_tagging_oss/public/api.ts"
          },
          {
            "plugin": "savedObjectsTaggingOss",
            "path": "src/plugins/saved_objects_tagging_oss/public/api.ts"
          },
          {
            "plugin": "savedObjectsTaggingOss",
            "path": "src/plugins/saved_objects_tagging_oss/public/api.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/types.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/types.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/so_references.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/so_references.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/so_references.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/so_references.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.test.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.test.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/risk_score/prebuilt_saved_objects/saved_object/host_risk_score_dashboards.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/risk_score/prebuilt_saved_objects/saved_object/host_risk_score_dashboards.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/risk_score/prebuilt_saved_objects/saved_object/user_risk_score_dashboards.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/risk_score/prebuilt_saved_objects/saved_object/user_risk_score_dashboards.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/overview/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/overview/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_details/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_details/api.ts"
          },
          {
            "plugin": "upgradeAssistant",
            "path": "x-pack/plugins/upgrade_assistant/common/types.ts"
          },
          {
            "plugin": "upgradeAssistant",
            "path": "x-pack/plugins/upgrade_assistant/common/types.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/test_utils/index.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/test_utils/index.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/test_utils/index.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_view.stub.ts"
          },
          {
            "plugin": "dataViews",
            "path": "src/plugins/data_views/common/data_view.stub.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/server/lib/find_relationships.test.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/server/lib/find_relationships.test.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/server/lib/find_relationships.test.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/server/lib/find_relationships.test.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/operations/find.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/operations/find.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/operations/find.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/effects.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/effects.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/effects.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/index.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/index.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/components/settings/hooks/use_params_list.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/components/settings/hooks/use_params_list.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-ui-settings-server-internal",
            "path": "packages/core/ui-settings/core-ui-settings-server-internal/src/saved_objects/transforms.test.ts"
          },
          {
            "plugin": "@kbn/core-ui-settings-server-internal",
            "path": "packages/core/ui-settings/core-ui-settings-server-internal/src/saved_objects/transforms.test.ts"
          },
          {
            "plugin": "@kbn/core-ui-settings-server-internal",
            "path": "packages/core/ui-settings/core-ui-settings-server-internal/src/saved_objects/transforms.test.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.SourceFilter",
        "type": "Type",
        "tags": [],
        "label": "SourceFilter",
        "description": [],
        "signature": [
          "{ value: string; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.TypeMeta",
        "type": "Type",
        "tags": [],
        "label": "TypeMeta",
        "description": [
          "\nInterface for metadata about rollup indices"
        ],
        "signature": [
          "{ aggs?: Record<string, ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.AggregationRestrictions",
            "text": "AggregationRestrictions"
          },
          "> | undefined; params?: { rollup_index: string; } | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.ValueSuggestionsMethod",
        "type": "Type",
        "tags": [],
        "label": "ValueSuggestionsMethod",
        "description": [],
        "signature": [
          "\"terms_enum\" | \"terms_agg\""
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "data",
        "id": "def-common.DEFAULT_ASSETS_TO_IGNORE",
        "type": "Object",
        "tags": [],
        "label": "DEFAULT_ASSETS_TO_IGNORE",
        "description": [
          "\nUsed to optimize on-boarding experience to determine if the instance has some user created data views or data indices/streams by filtering data sources\nthat are created by default by elastic in ese.\nWe should somehow prevent creating initial data for the users without their explicit action\ninstead of relying on these hardcoded assets"
        ],
        "path": "src/plugins/data_views/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "data",
            "id": "def-common.DEFAULT_ASSETS_TO_IGNORE.DATA_STREAMS_TO_IGNORE",
            "type": "Array",
            "tags": [],
            "label": "DATA_STREAMS_TO_IGNORE",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/constants.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.RUNTIME_FIELD_TYPES",
        "type": "Object",
        "tags": [],
        "label": "RUNTIME_FIELD_TYPES",
        "description": [
          "\nAll runtime field types."
        ],
        "signature": [
          "readonly [\"keyword\", \"long\", \"double\", \"date\", \"ip\", \"boolean\", \"geo_point\", \"composite\"]"
        ],
        "path": "src/plugins/data_views/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "data",
        "id": "def-common.UI_SETTINGS",
        "type": "Object",
        "tags": [],
        "label": "UI_SETTINGS",
        "description": [],
        "signature": [
          "{ readonly META_FIELDS: \"metaFields\"; readonly DOC_HIGHLIGHT: \"doc_table:highlight\"; readonly QUERY_STRING_OPTIONS: \"query:queryString:options\"; readonly QUERY_ALLOW_LEADING_WILDCARDS: \"query:allowLeadingWildcards\"; readonly SEARCH_QUERY_LANGUAGE: \"search:queryLanguage\"; readonly SORT_OPTIONS: \"sort:options\"; readonly COURIER_IGNORE_FILTER_IF_FIELD_NOT_IN_INDEX: \"courier:ignoreFilterIfFieldNotInIndex\"; readonly COURIER_SET_REQUEST_PREFERENCE: \"courier:setRequestPreference\"; readonly COURIER_CUSTOM_REQUEST_PREFERENCE: \"courier:customRequestPreference\"; readonly COURIER_MAX_CONCURRENT_SHARD_REQUESTS: \"courier:maxConcurrentShardRequests\"; readonly SEARCH_INCLUDE_FROZEN: \"search:includeFrozen\"; readonly SEARCH_TIMEOUT: \"search:timeout\"; readonly HISTOGRAM_BAR_TARGET: \"histogram:barTarget\"; readonly HISTOGRAM_MAX_BARS: \"histogram:maxBars\"; readonly HISTORY_LIMIT: \"history:limit\"; readonly TIMEPICKER_REFRESH_INTERVAL_DEFAULTS: \"timepicker:refreshIntervalDefaults\"; readonly TIMEPICKER_QUICK_RANGES: \"timepicker:quickRanges\"; readonly TIMEPICKER_TIME_DEFAULTS: \"timepicker:timeDefaults\"; readonly FILTERS_PINNED_BY_DEFAULT: \"filters:pinnedByDefault\"; readonly FILTERS_EDITOR_SUGGEST_VALUES: \"filterEditor:suggestValues\"; readonly AUTOCOMPLETE_USE_TIMERANGE: \"autocomplete:useTimeRange\"; readonly AUTOCOMPLETE_VALUE_SUGGESTION_METHOD: \"autocomplete:valueSuggestionMethod\"; readonly DATE_FORMAT: \"dateFormat\"; readonly DATEFORMAT_TZ: \"dateFormat:tz\"; }"
        ],
        "path": "src/plugins/data/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  }
}