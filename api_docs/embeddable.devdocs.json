{
  "id": "embeddable",
  "client": {
    "classes": [
      {
        "parentPluginId": "embeddable",
        "id": "def-public.Embeddable",
        "type": "Class",
        "tags": [],
        "label": "Embeddable",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.Embeddable",
            "text": "Embeddable"
          },
          "<TEmbeddableInput, TEmbeddableOutput, TNode> implements ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.IEmbeddable",
            "text": "IEmbeddable"
          },
          "<TEmbeddableInput, TEmbeddableOutput, TNode>"
        ],
        "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.runtimeId",
            "type": "number",
            "tags": [],
            "label": "runtimeId",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.runtimeId",
            "type": "number",
            "tags": [],
            "label": "runtimeId",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.deferEmbeddableLoad",
            "type": "boolean",
            "tags": [],
            "label": "deferEmbeddableLoad",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.fatalError",
            "type": "Object",
            "tags": [],
            "label": "fatalError",
            "description": [],
            "signature": [
              "Error | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.output",
            "type": "Uncategorized",
            "tags": [],
            "label": "output",
            "description": [],
            "signature": [
              "TEmbeddableOutput"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.input",
            "type": "Uncategorized",
            "tags": [],
            "label": "input",
            "description": [],
            "signature": [
              "TEmbeddableInput"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.renderComplete",
            "type": "Object",
            "tags": [],
            "label": "renderComplete",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaUtils",
                "scope": "public",
                "docId": "kibKibanaUtilsPluginApi",
                "section": "def-public.RenderCompleteDispatcher",
                "text": "RenderCompleteDispatcher"
              }
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.destroyed",
            "type": "boolean",
            "tags": [],
            "label": "destroyed",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.Embeddable.Unnamed.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "input",
                "description": [],
                "signature": [
                  "TEmbeddableInput"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.Embeddable.Unnamed.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "output",
                "description": [],
                "signature": [
                  "TEmbeddableOutput"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.getEditHref",
            "type": "Function",
            "tags": [],
            "label": "getEditHref",
            "description": [],
            "signature": [
              "() => Promise<string | undefined>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.reportsEmbeddableLoad",
            "type": "Function",
            "tags": [],
            "label": "reportsEmbeddableLoad",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.reload",
            "type": "Function",
            "tags": [],
            "label": "reload",
            "description": [
              "\nReload will be called when there is a request to refresh the data or view, even if the\ninput data did not change.\n\nIn case if input data did change and reload is requested input$ and output$ would still emit before `reload` is called\n\nThe order would be as follows:\ninput$\noutput$\nreload()\n----\nupdated$"
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.getUpdated$",
            "type": "Function",
            "tags": [],
            "label": "getUpdated$",
            "description": [
              "\nMerges input$ and output$ streams and debounces emit till next macro-task.\nCould be useful to batch reactions to input$ and output$ updates that happen separately but synchronously.\nIn case corresponding state change triggered `reload` this stream is guarantied to emit later,\nwhich allows to skip state handling in case `reload` already handled it."
            ],
            "signature": [
              "() => Readonly<",
              "Observable",
              "<TEmbeddableInput | TEmbeddableOutput>>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.getInput$",
            "type": "Function",
            "tags": [],
            "label": "getInput$",
            "description": [],
            "signature": [
              "() => Readonly<",
              "Observable",
              "<TEmbeddableInput>>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.getOutput$",
            "type": "Function",
            "tags": [],
            "label": "getOutput$",
            "description": [],
            "signature": [
              "() => Readonly<",
              "Observable",
              "<TEmbeddableOutput>>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.getOutput",
            "type": "Function",
            "tags": [],
            "label": "getOutput",
            "description": [],
            "signature": [
              "() => Readonly<TEmbeddableOutput>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.getExplicitInputIsEqual",
            "type": "Function",
            "tags": [],
            "label": "getExplicitInputIsEqual",
            "description": [],
            "signature": [
              "(lastExplicitInput: Partial<TEmbeddableInput>) => Promise<boolean>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.Embeddable.getExplicitInputIsEqual.$1",
                "type": "Object",
                "tags": [],
                "label": "lastExplicitInput",
                "description": [],
                "signature": [
                  "Partial<TEmbeddableInput>"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.getExplicitInput",
            "type": "Function",
            "tags": [],
            "label": "getExplicitInput",
            "description": [],
            "signature": [
              "() => Readonly<TEmbeddableInput>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.getPersistableInput",
            "type": "Function",
            "tags": [],
            "label": "getPersistableInput",
            "description": [],
            "signature": [
              "() => Readonly<TEmbeddableInput>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.getInput",
            "type": "Function",
            "tags": [],
            "label": "getInput",
            "description": [],
            "signature": [
              "() => Readonly<TEmbeddableInput>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.getTitle",
            "type": "Function",
            "tags": [],
            "label": "getTitle",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.getDescription",
            "type": "Function",
            "tags": [],
            "label": "getDescription",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.updateInput",
            "type": "Function",
            "tags": [],
            "label": "updateInput",
            "description": [],
            "signature": [
              "(changes: Partial<TEmbeddableInput>) => void"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.Embeddable.updateInput.$1",
                "type": "Object",
                "tags": [],
                "label": "changes",
                "description": [],
                "signature": [
                  "Partial<TEmbeddableInput>"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.render",
            "type": "Function",
            "tags": [],
            "label": "render",
            "description": [],
            "signature": [
              "(el: HTMLElement) => void | TNode"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.Embeddable.render.$1",
                "type": "Object",
                "tags": [],
                "label": "el",
                "description": [],
                "signature": [
                  "HTMLElement"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.getInspectorAdapters",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "getInspectorAdapters",
            "description": [
              "\nAn embeddable can return inspector adapters if it want the inspector to be\navailable via the context menu of that panel."
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              " | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "Inspector adapters that will be used to open an inspector for."
            ]
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.destroy",
            "type": "Function",
            "tags": [],
            "label": "destroy",
            "description": [
              "\nCalled when this embeddable is no longer used, this should be the place for\nimplementors to add additional clean up tasks, like un-mounting and unsubscribing."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.untilInitializationFinished",
            "type": "Function",
            "tags": [],
            "label": "untilInitializationFinished",
            "description": [],
            "signature": [
              "() => Promise<void>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.setInitializationFinished",
            "type": "Function",
            "tags": [],
            "label": "setInitializationFinished",
            "description": [
              "\ncommunicate to the parent embeddable that this embeddable's initialization is finished.\nThis only applies to embeddables which defer their loading state with deferEmbeddableLoad."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.updateOutput",
            "type": "Function",
            "tags": [],
            "label": "updateOutput",
            "description": [],
            "signature": [
              "(outputChanges: Partial<TEmbeddableOutput>) => void"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.Embeddable.updateOutput.$1",
                "type": "Object",
                "tags": [],
                "label": "outputChanges",
                "description": [],
                "signature": [
                  "Partial<TEmbeddableOutput>"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.onFatalError",
            "type": "Function",
            "tags": [],
            "label": "onFatalError",
            "description": [
              "\nCall this **only** when your embeddable has encountered a non-recoverable error; recoverable errors\nshould be handled by the individual embeddable types"
            ],
            "signature": [
              "(e: Error) => void"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.Embeddable.onFatalError.$1",
                "type": "Object",
                "tags": [],
                "label": "e",
                "description": [
                  "The fatal, unrecoverable Error that was thrown"
                ],
                "signature": [
                  "Error"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.Embeddable.supportedTriggers",
            "type": "Function",
            "tags": [],
            "label": "supportedTriggers",
            "description": [],
            "signature": [
              "() => string[]"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.EmbeddableStateTransfer",
        "type": "Class",
        "tags": [],
        "label": "EmbeddableStateTransfer",
        "description": [
          "\nA wrapper around the session storage which provides strongly typed helper methods\nfor common incoming and outgoing states used by the embeddable infrastructure.\n"
        ],
        "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableStateTransfer.isTransferInProgress",
            "type": "boolean",
            "tags": [],
            "label": "isTransferInProgress",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableStateTransfer.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.Unnamed.$1",
                "type": "Function",
                "tags": [],
                "label": "navigateToApp",
                "description": [],
                "signature": [
                  "(appId: string, options?: ",
                  {
                    "pluginId": "@kbn/core-application-browser",
                    "scope": "public",
                    "docId": "kibKbnCoreApplicationBrowserPluginApi",
                    "section": "def-public.NavigateToAppOptions",
                    "text": "NavigateToAppOptions"
                  },
                  " | undefined) => Promise<void>"
                ],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "currentAppId$",
                "description": [],
                "signature": [
                  "Observable",
                  "<string | undefined>"
                ],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.Unnamed.$3",
                "type": "Object",
                "tags": [],
                "label": "appList",
                "description": [],
                "signature": [
                  "ReadonlyMap<string, ",
                  {
                    "pluginId": "@kbn/core-application-browser",
                    "scope": "public",
                    "docId": "kibKbnCoreApplicationBrowserPluginApi",
                    "section": "def-public.PublicAppInfo",
                    "text": "PublicAppInfo"
                  },
                  "> | undefined"
                ],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.Unnamed.$4",
                "type": "Object",
                "tags": [],
                "label": "customStorage",
                "description": [],
                "signature": [
                  {
                    "pluginId": "kibanaUtils",
                    "scope": "public",
                    "docId": "kibKibanaUtilsPluginApi",
                    "section": "def-public.Storage",
                    "text": "Storage"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableStateTransfer.getAppNameFromId",
            "type": "Function",
            "tags": [],
            "label": "getAppNameFromId",
            "description": [
              "\nFetches an internationalized app title when given an appId."
            ],
            "signature": [
              "(appId: string) => string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.getAppNameFromId.$1",
                "type": "string",
                "tags": [],
                "label": "appId",
                "description": [
                  "- The id of the app to fetch the title for"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableStateTransfer.getIncomingEditorState",
            "type": "Function",
            "tags": [],
            "label": "getIncomingEditorState",
            "description": [
              "\nFetches an {@link EmbeddableEditorState | editor state} from the sessionStorage for the provided app id\n"
            ],
            "signature": [
              "(appId: string, removeAfterFetch?: boolean | undefined) => ",
              {
                "pluginId": "embeddable",
                "scope": "public",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-public.EmbeddableEditorState",
                "text": "EmbeddableEditorState"
              },
              " | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.getIncomingEditorState.$1",
                "type": "string",
                "tags": [],
                "label": "appId",
                "description": [
                  "- The app to fetch incomingEditorState for"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.getIncomingEditorState.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "removeAfterFetch",
                "description": [
                  "- Whether to remove the package state after fetch to prevent duplicates."
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableStateTransfer.clearEditorState",
            "type": "Function",
            "tags": [],
            "label": "clearEditorState",
            "description": [
              "\nClears the {@link EmbeddableEditorState | editor state} from the sessionStorage for the provided app id\n"
            ],
            "signature": [
              "(appId?: string | undefined) => void"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.clearEditorState.$1",
                "type": "string",
                "tags": [],
                "label": "appId",
                "description": [
                  "- The app to fetch incomingEditorState for"
                ],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableStateTransfer.getIncomingEmbeddablePackage",
            "type": "Function",
            "tags": [],
            "label": "getIncomingEmbeddablePackage",
            "description": [
              "\nFetches an {@link EmbeddablePackageState | embeddable package} from the sessionStorage for the given AppId\n"
            ],
            "signature": [
              "(appId: string, removeAfterFetch?: boolean | undefined) => ",
              {
                "pluginId": "embeddable",
                "scope": "public",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-public.EmbeddablePackageState",
                "text": "EmbeddablePackageState"
              },
              " | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.getIncomingEmbeddablePackage.$1",
                "type": "string",
                "tags": [],
                "label": "appId",
                "description": [
                  "- The app to fetch EmbeddablePackageState for"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.getIncomingEmbeddablePackage.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "removeAfterFetch",
                "description": [
                  "- Whether to remove the package state after fetch to prevent duplicates."
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableStateTransfer.navigateToEditor",
            "type": "Function",
            "tags": [],
            "label": "navigateToEditor",
            "description": [
              "\nA wrapper around the {@link ApplicationStart.navigateToApp} method which navigates to the specified appId\nwith {@link EmbeddableEditorState | embeddable editor state}"
            ],
            "signature": [
              "(appId: string, options?: { path?: string | undefined; openInNewTab?: boolean | undefined; skipAppLeave?: boolean | undefined; state: ",
              {
                "pluginId": "embeddable",
                "scope": "public",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-public.EmbeddableEditorState",
                "text": "EmbeddableEditorState"
              },
              "; } | undefined) => Promise<void>"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.navigateToEditor.$1",
                "type": "string",
                "tags": [],
                "label": "appId",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.navigateToEditor.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "embeddable",
                    "id": "def-public.EmbeddableStateTransfer.navigateToEditor.$2.path",
                    "type": "string",
                    "tags": [],
                    "label": "path",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "embeddable",
                    "id": "def-public.EmbeddableStateTransfer.navigateToEditor.$2.openInNewTab",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "openInNewTab",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "embeddable",
                    "id": "def-public.EmbeddableStateTransfer.navigateToEditor.$2.skipAppLeave",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "skipAppLeave",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "embeddable",
                    "id": "def-public.EmbeddableStateTransfer.navigateToEditor.$2.state",
                    "type": "Object",
                    "tags": [],
                    "label": "state",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "embeddable",
                        "scope": "public",
                        "docId": "kibEmbeddablePluginApi",
                        "section": "def-public.EmbeddableEditorState",
                        "text": "EmbeddableEditorState"
                      }
                    ],
                    "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableStateTransfer.navigateToWithEmbeddablePackage",
            "type": "Function",
            "tags": [],
            "label": "navigateToWithEmbeddablePackage",
            "description": [
              "\nA wrapper around the {@link ApplicationStart.navigateToApp} method which navigates to the specified appId\nwith {@link EmbeddablePackageState | embeddable package state}"
            ],
            "signature": [
              "(appId: string, options?: { path?: string | undefined; state: ",
              {
                "pluginId": "embeddable",
                "scope": "public",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-public.EmbeddablePackageState",
                "text": "EmbeddablePackageState"
              },
              "; } | undefined) => Promise<void>"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.navigateToWithEmbeddablePackage.$1",
                "type": "string",
                "tags": [],
                "label": "appId",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.EmbeddableStateTransfer.navigateToWithEmbeddablePackage.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "embeddable",
                    "id": "def-public.EmbeddableStateTransfer.navigateToWithEmbeddablePackage.$2.path",
                    "type": "string",
                    "tags": [],
                    "label": "path",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "embeddable",
                    "id": "def-public.EmbeddableStateTransfer.navigateToWithEmbeddablePackage.$2.state",
                    "type": "Object",
                    "tags": [],
                    "label": "state",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "embeddable",
                        "scope": "public",
                        "docId": "kibEmbeddablePluginApi",
                        "section": "def-public.EmbeddablePackageState",
                        "text": "EmbeddablePackageState"
                      }
                    ],
                    "path": "src/plugins/embeddable/public/lib/state_transfer/embeddable_state_transfer.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.ErrorEmbeddable",
        "type": "Class",
        "tags": [],
        "label": "ErrorEmbeddable",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.ErrorEmbeddable",
            "text": "ErrorEmbeddable"
          },
          " extends ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.Embeddable",
            "text": "Embeddable"
          },
          "<",
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.EmbeddableInput",
            "text": "EmbeddableInput"
          },
          ", ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.EmbeddableOutput",
            "text": "EmbeddableOutput"
          },
          ", React.ReactNode>"
        ],
        "path": "src/plugins/embeddable/public/lib/embeddables/error_embeddable.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.ErrorEmbeddable.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "\"error\""
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/error_embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.ErrorEmbeddable.error",
            "type": "CompoundType",
            "tags": [],
            "label": "error",
            "description": [],
            "signature": [
              "string | Error"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/error_embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.ErrorEmbeddable.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/error_embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ErrorEmbeddable.Unnamed.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "error",
                "description": [],
                "signature": [
                  "string | Error"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/error_embeddable.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ErrorEmbeddable.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "input",
                "description": [],
                "signature": [
                  {
                    "pluginId": "embeddable",
                    "scope": "common",
                    "docId": "kibEmbeddablePluginApi",
                    "section": "def-common.EmbeddableInput",
                    "text": "EmbeddableInput"
                  }
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/error_embeddable.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.ErrorEmbeddable.reload",
            "type": "Function",
            "tags": [],
            "label": "reload",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/error_embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.ErrorEmbeddable.render",
            "type": "Function",
            "tags": [],
            "label": "render",
            "description": [],
            "signature": [
              "() => React.JSX.Element"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/error_embeddable.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.PanelIncompatibleError",
        "type": "Class",
        "tags": [],
        "label": "PanelIncompatibleError",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.PanelIncompatibleError",
            "text": "PanelIncompatibleError"
          },
          " extends Error"
        ],
        "path": "src/plugins/embeddable/public/lib/errors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.PanelIncompatibleError.code",
            "type": "string",
            "tags": [],
            "label": "code",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/errors.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.PanelIncompatibleError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/embeddable/public/lib/errors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.PanelNotFoundError",
        "type": "Class",
        "tags": [],
        "label": "PanelNotFoundError",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.PanelNotFoundError",
            "text": "PanelNotFoundError"
          },
          " extends Error"
        ],
        "path": "src/plugins/embeddable/public/lib/errors.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.PanelNotFoundError.code",
            "type": "string",
            "tags": [],
            "label": "code",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/errors.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.PanelNotFoundError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/embeddable/public/lib/errors.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "embeddable",
        "id": "def-public.isContextMenuTriggerContext",
        "type": "Function",
        "tags": [],
        "label": "isContextMenuTriggerContext",
        "description": [],
        "signature": [
          "(context: unknown) => context is ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.EmbeddableContext",
            "text": "EmbeddableContext"
          },
          "<",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.IEmbeddable",
            "text": "IEmbeddable"
          },
          "<",
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.EmbeddableInput",
            "text": "EmbeddableInput"
          },
          ", ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.EmbeddableOutput",
            "text": "EmbeddableOutput"
          },
          ", any>>"
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.isContextMenuTriggerContext.$1",
            "type": "Unknown",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.isMultiValueClickTriggerContext",
        "type": "Function",
        "tags": [],
        "label": "isMultiValueClickTriggerContext",
        "description": [],
        "signature": [
          "(context: ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.ChartActionContext",
            "text": "ChartActionContext"
          },
          ") => context is ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.MultiValueClickContext",
            "text": "MultiValueClickContext"
          }
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.isMultiValueClickTriggerContext.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              {
                "pluginId": "embeddable",
                "scope": "public",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-public.ChartActionContext",
                "text": "ChartActionContext"
              }
            ],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.isRangeSelectTriggerContext",
        "type": "Function",
        "tags": [],
        "label": "isRangeSelectTriggerContext",
        "description": [],
        "signature": [
          "(context: ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.ChartActionContext",
            "text": "ChartActionContext"
          },
          ") => context is ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.RangeSelectContext",
            "text": "RangeSelectContext"
          }
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.isRangeSelectTriggerContext.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              {
                "pluginId": "embeddable",
                "scope": "public",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-public.ChartActionContext",
                "text": "ChartActionContext"
              }
            ],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.isRowClickTriggerContext",
        "type": "Function",
        "tags": [],
        "label": "isRowClickTriggerContext",
        "description": [],
        "signature": [
          "(context: ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.ChartActionContext",
            "text": "ChartActionContext"
          },
          ") => context is ",
          {
            "pluginId": "@kbn/ui-actions-browser",
            "scope": "common",
            "docId": "kibKbnUiActionsBrowserPluginApi",
            "section": "def-common.RowClickContext",
            "text": "RowClickContext"
          }
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.isRowClickTriggerContext.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              {
                "pluginId": "embeddable",
                "scope": "public",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-public.ChartActionContext",
                "text": "ChartActionContext"
              }
            ],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.isValueClickTriggerContext",
        "type": "Function",
        "tags": [],
        "label": "isValueClickTriggerContext",
        "description": [],
        "signature": [
          "(context: ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.ChartActionContext",
            "text": "ChartActionContext"
          },
          ") => context is ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.ValueClickContext",
            "text": "ValueClickContext"
          }
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.isValueClickTriggerContext.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              {
                "pluginId": "embeddable",
                "scope": "public",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-public.ChartActionContext",
                "text": "ChartActionContext"
              }
            ],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.openAddFromLibraryFlyout",
        "type": "Function",
        "tags": [],
        "label": "openAddFromLibraryFlyout",
        "description": [],
        "signature": [
          "({ container, onClose, }: { container: ",
          {
            "pluginId": "@kbn/presentation-containers",
            "scope": "public",
            "docId": "kibKbnPresentationContainersPluginApi",
            "section": "def-public.CanAddNewPanel",
            "text": "CanAddNewPanel"
          },
          "; onClose?: (() => void) | undefined; }) => ",
          {
            "pluginId": "@kbn/core-mount-utils-browser",
            "scope": "public",
            "docId": "kibKbnCoreMountUtilsBrowserPluginApi",
            "section": "def-public.OverlayRef",
            "text": "OverlayRef"
          }
        ],
        "path": "src/plugins/embeddable/public/add_from_library/open_add_from_library_flyout.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.openAddFromLibraryFlyout.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  container,\n  onClose,\n}",
            "description": [],
            "path": "src/plugins/embeddable/public/add_from_library/open_add_from_library_flyout.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.openAddFromLibraryFlyout.$1.container",
                "type": "Object",
                "tags": [],
                "label": "container",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/presentation-containers",
                    "scope": "public",
                    "docId": "kibKbnPresentationContainersPluginApi",
                    "section": "def-public.CanAddNewPanel",
                    "text": "CanAddNewPanel"
                  }
                ],
                "path": "src/plugins/embeddable/public/add_from_library/open_add_from_library_flyout.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.openAddFromLibraryFlyout.$1.onClose",
                "type": "Function",
                "tags": [],
                "label": "onClose",
                "description": [],
                "signature": [
                  "(() => void) | undefined"
                ],
                "path": "src/plugins/embeddable/public/add_from_library/open_add_from_library_flyout.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "children": [],
                "returnComment": []
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.ReactEmbeddableRenderer",
        "type": "Function",
        "tags": [],
        "label": "ReactEmbeddableRenderer",
        "description": [
          "\nRenders a component from the React Embeddable registry into a Presentation Panel.\n\nTODO: Rename this to simply `Embeddable` when the legacy Embeddable system is removed."
        ],
        "signature": [
          "<SerializedState extends object = object, RuntimeState extends object = SerializedState, Api extends ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.DefaultEmbeddableApi",
            "text": "DefaultEmbeddableApi"
          },
          "<SerializedState, RuntimeState> = ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.DefaultEmbeddableApi",
            "text": "DefaultEmbeddableApi"
          },
          "<SerializedState, RuntimeState>, ParentApi extends ",
          {
            "pluginId": "@kbn/presentation-containers",
            "scope": "public",
            "docId": "kibKbnPresentationContainersPluginApi",
            "section": "def-public.HasSerializedChildState",
            "text": "HasSerializedChildState"
          },
          "<SerializedState> = ",
          {
            "pluginId": "@kbn/presentation-containers",
            "scope": "public",
            "docId": "kibKbnPresentationContainersPluginApi",
            "section": "def-public.HasSerializedChildState",
            "text": "HasSerializedChildState"
          },
          "<SerializedState>>({ type, maybeId, getParentApi, panelProps, onAnyStateChange, onApiAvailable, hidePanelChrome, }: { type: string; maybeId?: string | undefined; getParentApi: () => ParentApi; onApiAvailable?: ((api: Api) => void) | undefined; panelProps?: Pick<",
          {
            "pluginId": "presentationPanel",
            "scope": "public",
            "docId": "kibPresentationPanelPluginApi",
            "section": "def-public.PresentationPanelProps",
            "text": "PresentationPanelProps"
          },
          "<Api, {}>, \"showShadow\" | \"showBorder\" | \"showBadges\" | \"showNotifications\" | \"hideLoader\" | \"hideHeader\" | \"hideInspector\" | \"getActions\" | \"setDragHandles\"> | undefined; hidePanelChrome?: boolean | undefined; onAnyStateChange?: ((state: ",
          {
            "pluginId": "@kbn/presentation-containers",
            "scope": "public",
            "docId": "kibKbnPresentationContainersPluginApi",
            "section": "def-public.SerializedPanelState",
            "text": "SerializedPanelState"
          },
          "<SerializedState>) => void) | undefined; }) => React.JSX.Element"
        ],
        "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_renderer.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.ReactEmbeddableRenderer.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  type,\n  maybeId,\n  getParentApi,\n  panelProps,\n  onAnyStateChange,\n  onApiAvailable,\n  hidePanelChrome,\n}",
            "description": [],
            "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_renderer.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableRenderer.$1.type",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_renderer.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableRenderer.$1.maybeId",
                "type": "string",
                "tags": [],
                "label": "maybeId",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_renderer.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableRenderer.$1.getParentApi",
                "type": "Function",
                "tags": [],
                "label": "getParentApi",
                "description": [],
                "signature": [
                  "() => ParentApi"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_renderer.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "children": [],
                "returnComment": []
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableRenderer.$1.onApiAvailable",
                "type": "Function",
                "tags": [],
                "label": "onApiAvailable",
                "description": [],
                "signature": [
                  "((api: Api) => void) | undefined"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_renderer.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "embeddable",
                    "id": "def-public.ReactEmbeddableRenderer.$1.onApiAvailable.$1",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "api",
                    "description": [],
                    "signature": [
                      "Api"
                    ],
                    "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_renderer.tsx",
                    "deprecated": false,
                    "trackAdoption": false,
                    "isRequired": true
                  }
                ],
                "returnComment": []
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableRenderer.$1.panelProps",
                "type": "Object",
                "tags": [],
                "label": "panelProps",
                "description": [],
                "signature": [
                  "Pick<",
                  {
                    "pluginId": "presentationPanel",
                    "scope": "public",
                    "docId": "kibPresentationPanelPluginApi",
                    "section": "def-public.PresentationPanelProps",
                    "text": "PresentationPanelProps"
                  },
                  "<Api, {}>, \"showShadow\" | \"showBorder\" | \"showBadges\" | \"showNotifications\" | \"hideLoader\" | \"hideHeader\" | \"hideInspector\" | \"getActions\" | \"setDragHandles\"> | undefined"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_renderer.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableRenderer.$1.hidePanelChrome",
                "type": "CompoundType",
                "tags": [],
                "label": "hidePanelChrome",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_renderer.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableRenderer.$1.onAnyStateChange",
                "type": "Function",
                "tags": [],
                "label": "onAnyStateChange",
                "description": [
                  "\nThis `onAnyStateChange` callback allows the parent to keep track of the state of the embeddable\nas it changes. This is **not** expected to change over the lifetime of the component."
                ],
                "signature": [
                  "((state: ",
                  {
                    "pluginId": "@kbn/presentation-containers",
                    "scope": "public",
                    "docId": "kibKbnPresentationContainersPluginApi",
                    "section": "def-public.SerializedPanelState",
                    "text": "SerializedPanelState"
                  },
                  "<SerializedState>) => void) | undefined"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_renderer.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "embeddable",
                    "id": "def-public.ReactEmbeddableRenderer.$1.onAnyStateChange.$1",
                    "type": "Object",
                    "tags": [],
                    "label": "state",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "@kbn/presentation-containers",
                        "scope": "public",
                        "docId": "kibKbnPresentationContainersPluginApi",
                        "section": "def-public.SerializedPanelState",
                        "text": "SerializedPanelState"
                      },
                      "<SerializedState>"
                    ],
                    "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_renderer.tsx",
                    "deprecated": false,
                    "trackAdoption": false,
                    "isRequired": true
                  }
                ],
                "returnComment": []
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.useAddFromLibraryTypes",
        "type": "Function",
        "tags": [],
        "label": "useAddFromLibraryTypes",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "savedObjectsFinder",
            "scope": "public",
            "docId": "kibSavedObjectsFinderPluginApi",
            "section": "def-public.SavedObjectMetaData",
            "text": "SavedObjectMetaData"
          },
          "<",
          {
            "pluginId": "savedObjectsFinder",
            "scope": "common",
            "docId": "kibSavedObjectsFinderPluginApi",
            "section": "def-common.FinderAttributes",
            "text": "FinderAttributes"
          },
          ">[]"
        ],
        "path": "src/plugins/embeddable/public/add_from_library/registry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "embeddable",
        "id": "def-public.DefaultEmbeddableApi",
        "type": "Interface",
        "tags": [],
        "label": "DefaultEmbeddableApi",
        "description": [
          "\nThe default embeddable API that all Embeddables must implement.\n\nBefore adding anything to this interface, please be certain that it belongs in *every* embeddable."
        ],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.DefaultEmbeddableApi",
            "text": "DefaultEmbeddableApi"
          },
          "<SerializedState, RuntimeState> extends ",
          "DefaultPresentationPanelApi",
          ",",
          {
            "pluginId": "@kbn/presentation-publishing",
            "scope": "public",
            "docId": "kibKbnPresentationPublishingPluginApi",
            "section": "def-public.HasType",
            "text": "HasType"
          },
          "<string>,",
          {
            "pluginId": "@kbn/presentation-publishing",
            "scope": "public",
            "docId": "kibKbnPresentationPublishingPluginApi",
            "section": "def-public.PublishesPhaseEvents",
            "text": "PublishesPhaseEvents"
          },
          ",Partial<",
          {
            "pluginId": "@kbn/presentation-publishing",
            "scope": "public",
            "docId": "kibKbnPresentationPublishingPluginApi",
            "section": "def-public.PublishesUnsavedChanges",
            "text": "PublishesUnsavedChanges"
          },
          "<object>>,",
          {
            "pluginId": "@kbn/presentation-containers",
            "scope": "public",
            "docId": "kibKbnPresentationContainersPluginApi",
            "section": "def-public.HasSerializableState",
            "text": "HasSerializableState"
          },
          "<SerializedState>,",
          {
            "pluginId": "@kbn/presentation-containers",
            "scope": "public",
            "docId": "kibKbnPresentationContainersPluginApi",
            "section": "def-public.HasSnapshottableState",
            "text": "HasSnapshottableState"
          },
          "<RuntimeState>"
        ],
        "path": "src/plugins/embeddable/public/react_embeddable_system/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.EmbeddableContext",
        "type": "Interface",
        "tags": [
          "deprecated"
        ],
        "label": "EmbeddableContext",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.EmbeddableContext",
            "text": "EmbeddableContext"
          },
          "<T>"
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": true,
        "trackAdoption": false,
        "references": [],
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableContext.embeddable",
            "type": "Uncategorized",
            "tags": [],
            "label": "embeddable",
            "description": [],
            "signature": [
              "T"
            ],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.EmbeddableEditorState",
        "type": "Interface",
        "tags": [],
        "label": "EmbeddableEditorState",
        "description": [
          "\nA state package that contains information an editor will need to create or edit an embeddable then redirect back."
        ],
        "path": "src/plugins/embeddable/public/lib/state_transfer/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableEditorState.originatingApp",
            "type": "string",
            "tags": [],
            "label": "originatingApp",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/state_transfer/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableEditorState.originatingPath",
            "type": "string",
            "tags": [],
            "label": "originatingPath",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableEditorState.embeddableId",
            "type": "string",
            "tags": [],
            "label": "embeddableId",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableEditorState.valueInput",
            "type": "Uncategorized",
            "tags": [],
            "label": "valueInput",
            "description": [],
            "signature": [
              "object | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableEditorState.searchSessionId",
            "type": "string",
            "tags": [],
            "label": "searchSessionId",
            "description": [
              "\nPass current search session id when navigating to an editor,\nEditors could use it continue previous search session"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.EmbeddableOutput",
        "type": "Interface",
        "tags": [],
        "label": "EmbeddableOutput",
        "description": [],
        "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.loading",
            "type": "CompoundType",
            "tags": [],
            "label": "loading",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.rendered",
            "type": "CompoundType",
            "tags": [],
            "label": "rendered",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.error",
            "type": "CompoundType",
            "tags": [],
            "label": "error",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ErrorLike",
                "text": "ErrorLike"
              },
              " | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.editUrl",
            "type": "string",
            "tags": [],
            "label": "editUrl",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.editApp",
            "type": "string",
            "tags": [],
            "label": "editApp",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.editPath",
            "type": "string",
            "tags": [],
            "label": "editPath",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.defaultTitle",
            "type": "string",
            "tags": [],
            "label": "defaultTitle",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.defaultDescription",
            "type": "string",
            "tags": [],
            "label": "defaultDescription",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.editable",
            "type": "CompoundType",
            "tags": [],
            "label": "editable",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.inlineEditable",
            "type": "CompoundType",
            "tags": [],
            "label": "inlineEditable",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.editableWithExplicitInput",
            "type": "CompoundType",
            "tags": [],
            "label": "editableWithExplicitInput",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddableOutput.savedObjectId",
            "type": "string",
            "tags": [],
            "label": "savedObjectId",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.EmbeddablePackageState",
        "type": "Interface",
        "tags": [],
        "label": "EmbeddablePackageState",
        "description": [
          "\nA state package that contains all fields necessary to create or update an embeddable by reference or by value in a container."
        ],
        "path": "src/plugins/embeddable/public/lib/state_transfer/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddablePackageState.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/state_transfer/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddablePackageState.input",
            "type": "Uncategorized",
            "tags": [],
            "label": "input",
            "description": [
              "\nFor react embeddables, this input must be runtime state."
            ],
            "signature": [
              "object"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddablePackageState.embeddableId",
            "type": "string",
            "tags": [],
            "label": "embeddableId",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddablePackageState.size",
            "type": "Object",
            "tags": [],
            "label": "size",
            "description": [],
            "signature": [
              "{ width?: number | undefined; height?: number | undefined; } | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EmbeddablePackageState.searchSessionId",
            "type": "string",
            "tags": [],
            "label": "searchSessionId",
            "description": [
              "\nPass current search session id when navigating to an editor,\nEditors could use it continue previous search session"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/state_transfer/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.EnhancementRegistryDefinition",
        "type": "Interface",
        "tags": [],
        "label": "EnhancementRegistryDefinition",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.EnhancementRegistryDefinition",
            "text": "EnhancementRegistryDefinition"
          },
          "<P> extends Partial<",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.PersistableState",
            "text": "PersistableState"
          },
          "<P>>"
        ],
        "path": "src/plugins/embeddable/public/enhancements/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.EnhancementRegistryDefinition.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/embeddable/public/enhancements/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.IEmbeddable",
        "type": "Interface",
        "tags": [],
        "label": "IEmbeddable",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.IEmbeddable",
            "text": "IEmbeddable"
          },
          "<I, O, N>"
        ],
        "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nThe type of embeddable, this is what will be used to take a serialized\nembeddable and find the correct factory for which to create an instance of it."
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nA unique identifier for this embeddable. Mainly only used by containers to map their\nPanel States to a child embeddable instance."
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.deferEmbeddableLoad",
            "type": "boolean",
            "tags": [],
            "label": "deferEmbeddableLoad",
            "description": [
              "\nIf set to true, defer embeddable load tells the container that this embeddable\ntype isn't completely loaded when the constructor returns. This embeddable\nwill have to manually call setChildLoaded on its parent when all of its initial\noutput is finalized. For instance, after loading a saved object."
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.runtimeId",
            "type": "number",
            "tags": [],
            "label": "runtimeId",
            "description": [
              "\nUnique ID an embeddable is assigned each time it is initialized. This ID\nis different for different instances of the same embeddable. For example,\nif the same dashboard is rendered twice on the screen, all embeddable\ninstances will have a unique `runtimeId`."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.enhancements",
            "type": "Uncategorized",
            "tags": [],
            "label": "enhancements",
            "description": [
              "\nExtra abilities added to Embeddable by `*_enhanced` plugins."
            ],
            "signature": [
              "object | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.fatalError",
            "type": "Object",
            "tags": [],
            "label": "fatalError",
            "description": [
              "\nIf this embeddable has encountered a fatal error, that error will be stored here"
            ],
            "signature": [
              "Error | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.reportsEmbeddableLoad",
            "type": "Function",
            "tags": [],
            "label": "reportsEmbeddableLoad",
            "description": [
              "\nThis method returns false by default.\nIt should be set to true for any embeddable type that utilizes the `loading` and `rendered`\noutput variables to notify a container of their loading progress. If set to false, a container should assume\nthe embeddable is loaded immediately."
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.getInput",
            "type": "Function",
            "tags": [],
            "label": "getInput",
            "description": [
              "\nGet the input used to instantiate this embeddable. The input is a serialized representation of\nthis embeddable instance and can be used to clone or re-instantiate it. Input state:\n\n- Can be updated externally\n- Can change multiple times for a single embeddable instance.\n\nExamples: title, pie slice colors, custom search columns and sort order."
            ],
            "signature": [
              "() => Readonly<I>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.getExplicitInput",
            "type": "Function",
            "tags": [],
            "label": "getExplicitInput",
            "description": [
              "\nBecause embeddables can inherit input from their parents, they also need a way to separate their own\ninput from input which is inherited. If the embeddable does not have a parent, getExplicitInput\nand getInput should return the same."
            ],
            "signature": [
              "() => Readonly<Partial<I>>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.getPersistableInput",
            "type": "Function",
            "tags": [],
            "label": "getPersistableInput",
            "description": [
              "\nSome embeddables contain input that should not be persisted anywhere beyond their own state. This method\nis a way for containers to separate input to store from input which can be ephemeral. In most cases, this\nwill be the same as getExplicitInput"
            ],
            "signature": [
              "() => Readonly<Partial<I>>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.getOutput",
            "type": "Function",
            "tags": [],
            "label": "getOutput",
            "description": [
              "\nOutput state is:\n\n- State that should not change once the embeddable is instantiated, or\n- State that is derived from the input state, or\n- State that only the embeddable instance itself knows about, or the factory.\n\nExamples: editUrl, title taken from a saved object, if your input state was first name and\n  last name, your output state could be greeting."
            ],
            "signature": [
              "() => Readonly<O>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.updateInput",
            "type": "Function",
            "tags": [],
            "label": "updateInput",
            "description": [
              "\nUpdates input state with the given changes."
            ],
            "signature": [
              "(changes: Partial<I>) => void"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.IEmbeddable.updateInput.$1",
                "type": "Object",
                "tags": [],
                "label": "changes",
                "description": [],
                "signature": [
                  "Partial<I>"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.updateOutput",
            "type": "Function",
            "tags": [],
            "label": "updateOutput",
            "description": [
              "\nUpdates output state with the given changes."
            ],
            "signature": [
              "(changes: Partial<O>) => void"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.IEmbeddable.updateOutput.$1",
                "type": "Object",
                "tags": [],
                "label": "changes",
                "description": [],
                "signature": [
                  "Partial<O>"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.getInput$",
            "type": "Function",
            "tags": [],
            "label": "getInput$",
            "description": [
              "\nReturns an observable which will be notified when input state changes."
            ],
            "signature": [
              "() => Readonly<",
              "Observable",
              "<I>>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.getOutput$",
            "type": "Function",
            "tags": [],
            "label": "getOutput$",
            "description": [
              "\nReturns an observable which will be notified when output state changes."
            ],
            "signature": [
              "() => Readonly<",
              "Observable",
              "<O>>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.getTitle",
            "type": "Function",
            "tags": [],
            "label": "getTitle",
            "description": [
              "\nReturns the title of this embeddable."
            ],
            "signature": [
              "() => string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.getDescription",
            "type": "Function",
            "tags": [],
            "label": "getDescription",
            "description": [
              "\nReturns the description of this embeddable."
            ],
            "signature": [
              "() => string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.render",
            "type": "Function",
            "tags": [],
            "label": "render",
            "description": [
              "\nRenders the embeddable at the given node."
            ],
            "signature": [
              "(domNode: HTMLElement | Element) => void | N"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.IEmbeddable.render.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "domNode",
                "description": [],
                "signature": [
                  "HTMLElement | Element"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "A React node to mount or void in the case when rendering is done without React."
            ]
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.catchError",
            "type": "Function",
            "tags": [],
            "label": "catchError",
            "description": [
              "\nRenders a custom embeddable error at the given node."
            ],
            "signature": [
              "((error: ",
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ErrorLike",
                "text": "ErrorLike"
              },
              ", domNode: HTMLElement | Element) => N | (() => void)) | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.IEmbeddable.catchError.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "error",
                "description": [],
                "signature": [
                  {
                    "pluginId": "expressions",
                    "scope": "common",
                    "docId": "kibExpressionsPluginApi",
                    "section": "def-common.ErrorLike",
                    "text": "ErrorLike"
                  }
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.IEmbeddable.catchError.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "domNode",
                "description": [],
                "signature": [
                  "HTMLElement | Element"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "A React node or callback that will be called on error destroy."
            ]
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.reload",
            "type": "Function",
            "tags": [],
            "label": "reload",
            "description": [
              "\nReload the embeddable so output and rendering is up to date. Especially relevant\nif the embeddable takes relative time as input (e.g. now to now-15)"
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.getInspectorAdapters",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "getInspectorAdapters",
            "description": [
              "\nAn embeddable can return inspector adapters if it wants the inspector to be\navailable via the context menu of that panel."
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "inspector",
                "scope": "common",
                "docId": "kibInspectorPluginApi",
                "section": "def-common.Adapters",
                "text": "Adapters"
              },
              " | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "Inspector adapters that will be used to open an inspector for."
            ]
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.destroy",
            "type": "Function",
            "tags": [],
            "label": "destroy",
            "description": [
              "\nCleans up subscriptions, destroy nodes mounted from calls to render."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.supportedTriggers",
            "type": "Function",
            "tags": [],
            "label": "supportedTriggers",
            "description": [
              "\nList of triggers that this embeddable will execute."
            ],
            "signature": [
              "() => string[]"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.getExplicitInputIsEqual",
            "type": "Function",
            "tags": [],
            "label": "getExplicitInputIsEqual",
            "description": [
              "\nUsed to diff explicit embeddable input"
            ],
            "signature": [
              "(lastInput: Partial<I>) => Promise<boolean>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.IEmbeddable.getExplicitInputIsEqual.$1",
                "type": "Object",
                "tags": [],
                "label": "lastInput",
                "description": [],
                "signature": [
                  "Partial<I>"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.IEmbeddable.untilInitializationFinished",
            "type": "Function",
            "tags": [],
            "label": "untilInitializationFinished",
            "description": [],
            "signature": [
              "() => Promise<void>"
            ],
            "path": "src/plugins/embeddable/public/lib/embeddables/i_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.PropertySpec",
        "type": "Interface",
        "tags": [],
        "label": "PropertySpec",
        "description": [],
        "path": "src/plugins/embeddable/public/lib/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.PropertySpec.displayName",
            "type": "string",
            "tags": [],
            "label": "displayName",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.PropertySpec.accessPath",
            "type": "string",
            "tags": [],
            "label": "accessPath",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.PropertySpec.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.PropertySpec.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.PropertySpec.value",
            "type": "string",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/embeddable/public/lib/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.ReactEmbeddableFactory",
        "type": "Interface",
        "tags": [],
        "label": "ReactEmbeddableFactory",
        "description": [
          "\nThe React Embeddable Factory interface is used to register a series of functions that\ncreate and manage an embeddable instance.\n\nEmbeddables are React components that manage their own state, can be serialized and\ndeserialized, and return an API that can be used to interact with them imperatively."
        ],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.ReactEmbeddableFactory",
            "text": "ReactEmbeddableFactory"
          },
          "<SerializedState, RuntimeState, Api>"
        ],
        "path": "src/plugins/embeddable/public/react_embeddable_system/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.ReactEmbeddableFactory.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nA unique key for the type of this embeddable. The React Embeddable Renderer will use this type\nto find this factory."
            ],
            "path": "src/plugins/embeddable/public/react_embeddable_system/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.ReactEmbeddableFactory.deserializeState",
            "type": "Function",
            "tags": [],
            "label": "deserializeState",
            "description": [
              "\nA required asynchronous function that transforms serialized state into runtime state.\n\nThis could be used to:\n- Load state from some external store\n- Inject references provided by the parent\n- Migrate the state to a newer version (this must be undone when serializing)"
            ],
            "signature": [
              "(panelState: ",
              {
                "pluginId": "@kbn/presentation-containers",
                "scope": "public",
                "docId": "kibKbnPresentationContainersPluginApi",
                "section": "def-public.SerializedPanelState",
                "text": "SerializedPanelState"
              },
              "<SerializedState>) => ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.MaybePromise",
                "text": "MaybePromise"
              },
              "<RuntimeState>"
            ],
            "path": "src/plugins/embeddable/public/react_embeddable_system/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableFactory.deserializeState.$1",
                "type": "Object",
                "tags": [],
                "label": "panelState",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/presentation-containers",
                    "scope": "public",
                    "docId": "kibKbnPresentationContainersPluginApi",
                    "section": "def-public.SerializedPanelState",
                    "text": "SerializedPanelState"
                  },
                  "<SerializedState>"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.ReactEmbeddableFactory.buildEmbeddable",
            "type": "Function",
            "tags": [],
            "label": "buildEmbeddable",
            "description": [
              "\nA required async function that builds your embeddable component and a linked API instance. The API\nand component will be combined together by the ReactEmbeddableRenderer. Initial state will contain the result of\nthe deserialize function.\n\nThe returned API must extend {@link HasSerializableState} which does the opposite of the deserializeState\nfunction."
            ],
            "signature": [
              "(initialRuntimeState: RuntimeState, buildApi: (apiRegistration: ",
              "BuildReactEmbeddableApiRegistration",
              "<SerializedState, RuntimeState, Api>, comparators: ",
              {
                "pluginId": "@kbn/presentation-publishing",
                "scope": "public",
                "docId": "kibKbnPresentationPublishingPluginApi",
                "section": "def-public.StateComparators",
                "text": "StateComparators"
              },
              "<RuntimeState>) => Api & ",
              {
                "pluginId": "@kbn/presentation-containers",
                "scope": "public",
                "docId": "kibKbnPresentationContainersPluginApi",
                "section": "def-public.HasSnapshottableState",
                "text": "HasSnapshottableState"
              },
              "<RuntimeState>, uuid: string, parentApi: unknown, setApi: (api: ",
              "SetReactEmbeddableApiRegistration",
              "<SerializedState, RuntimeState, Api>) => Api, lastSavedRuntimeState: RuntimeState) => Promise<{ Component: React.FC<{}>; api: Api; }>"
            ],
            "path": "src/plugins/embeddable/public/react_embeddable_system/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableFactory.buildEmbeddable.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "initialRuntimeState",
                "description": [],
                "signature": [
                  "RuntimeState"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableFactory.buildEmbeddable.$2",
                "type": "Function",
                "tags": [],
                "label": "buildApi",
                "description": [],
                "signature": [
                  "(apiRegistration: ",
                  "BuildReactEmbeddableApiRegistration",
                  "<SerializedState, RuntimeState, Api>, comparators: ",
                  {
                    "pluginId": "@kbn/presentation-publishing",
                    "scope": "public",
                    "docId": "kibKbnPresentationPublishingPluginApi",
                    "section": "def-public.StateComparators",
                    "text": "StateComparators"
                  },
                  "<RuntimeState>) => Api & ",
                  {
                    "pluginId": "@kbn/presentation-containers",
                    "scope": "public",
                    "docId": "kibKbnPresentationContainersPluginApi",
                    "section": "def-public.HasSnapshottableState",
                    "text": "HasSnapshottableState"
                  },
                  "<RuntimeState>"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableFactory.buildEmbeddable.$3",
                "type": "string",
                "tags": [],
                "label": "uuid",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableFactory.buildEmbeddable.$4",
                "type": "Unknown",
                "tags": [],
                "label": "parentApi",
                "description": [],
                "signature": [
                  "unknown"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableFactory.buildEmbeddable.$5",
                "type": "Function",
                "tags": [],
                "label": "setApi",
                "description": [],
                "signature": [
                  "(api: ",
                  "SetReactEmbeddableApiRegistration",
                  "<SerializedState, RuntimeState, Api>) => Api"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.ReactEmbeddableFactory.buildEmbeddable.$6",
                "type": "Uncategorized",
                "tags": [],
                "label": "lastSavedRuntimeState",
                "description": [],
                "signature": [
                  "RuntimeState"
                ],
                "path": "src/plugins/embeddable/public/react_embeddable_system/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "embeddable",
        "id": "def-public.ViewMode",
        "type": "Enum",
        "tags": [],
        "label": "ViewMode",
        "description": [],
        "path": "src/plugins/embeddable/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "embeddable",
        "id": "def-public.CELL_VALUE_TRIGGER",
        "type": "string",
        "tags": [],
        "label": "CELL_VALUE_TRIGGER",
        "description": [],
        "signature": [
          "\"CELL_VALUE_TRIGGER\""
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.CellValueContext",
        "type": "Type",
        "tags": [],
        "label": "CellValueContext",
        "description": [],
        "signature": [
          "Partial<",
          {
            "pluginId": "@kbn/presentation-publishing",
            "scope": "public",
            "docId": "kibKbnPresentationPublishingPluginApi",
            "section": "def-public.EmbeddableApiContext",
            "text": "EmbeddableApiContext"
          },
          "> & { data: { value?: any; eventId?: string | undefined; columnMeta?: ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.DatatableColumnMeta",
            "text": "DatatableColumnMeta"
          },
          " | undefined; }[]; }"
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.ChartActionContext",
        "type": "Type",
        "tags": [],
        "label": "ChartActionContext",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.ValueClickContext",
            "text": "ValueClickContext"
          },
          " | ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.RangeSelectContext",
            "text": "RangeSelectContext"
          },
          " | ",
          {
            "pluginId": "embeddable",
            "scope": "public",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-public.MultiValueClickContext",
            "text": "MultiValueClickContext"
          },
          " | ",
          {
            "pluginId": "@kbn/ui-actions-browser",
            "scope": "common",
            "docId": "kibKbnUiActionsBrowserPluginApi",
            "section": "def-common.RowClickContext",
            "text": "RowClickContext"
          }
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.CONTEXT_MENU_TRIGGER",
        "type": "string",
        "tags": [],
        "label": "CONTEXT_MENU_TRIGGER",
        "description": [],
        "signature": [
          "\"CONTEXT_MENU_TRIGGER\""
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.EmbeddableInput",
        "type": "Type",
        "tags": [],
        "label": "EmbeddableInput",
        "description": [],
        "signature": [
          "{ version?: string | undefined; viewMode?: ",
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.ViewMode",
            "text": "ViewMode"
          },
          " | undefined; title?: string | undefined; description?: string | undefined; id: string; lastReloadRequestTime?: number | undefined; hidePanelTitles?: boolean | undefined; enhancements?: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          " | undefined; disabledActions?: string[] | undefined; disableTriggers?: boolean | undefined; searchSessionId?: string | undefined; syncColors?: boolean | undefined; syncCursor?: boolean | undefined; syncTooltips?: boolean | undefined; executionContext?: ",
          {
            "pluginId": "@kbn/core-execution-context-common",
            "scope": "common",
            "docId": "kibKbnCoreExecutionContextCommonPluginApi",
            "section": "def-common.KibanaExecutionContext",
            "text": "KibanaExecutionContext"
          },
          " | undefined; }"
        ],
        "path": "src/plugins/embeddable/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.MULTI_VALUE_CLICK_TRIGGER",
        "type": "string",
        "tags": [],
        "label": "MULTI_VALUE_CLICK_TRIGGER",
        "description": [],
        "signature": [
          "\"MULTI_VALUE_CLICK_TRIGGER\""
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.MultiValueClickContext",
        "type": "Type",
        "tags": [],
        "label": "MultiValueClickContext",
        "description": [],
        "signature": [
          "Partial<",
          {
            "pluginId": "@kbn/presentation-publishing",
            "scope": "public",
            "docId": "kibKbnPresentationPublishingPluginApi",
            "section": "def-public.EmbeddableApiContext",
            "text": "EmbeddableApiContext"
          },
          "> & { data: { data: { table: Pick<",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.Datatable",
            "text": "Datatable"
          },
          ", \"columns\" | \"rows\">; cells: { column: number; row: number; }[]; relation?: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.BooleanRelation",
            "text": "BooleanRelation"
          },
          " | undefined; }[]; timeFieldName?: string | undefined; negate?: boolean | undefined; }; }"
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.PANEL_BADGE_TRIGGER",
        "type": "string",
        "tags": [],
        "label": "PANEL_BADGE_TRIGGER",
        "description": [],
        "signature": [
          "\"PANEL_BADGE_TRIGGER\""
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.PANEL_HOVER_TRIGGER",
        "type": "string",
        "tags": [],
        "label": "PANEL_HOVER_TRIGGER",
        "description": [],
        "signature": [
          "\"PANEL_HOVER_TRIGGER\""
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.PANEL_NOTIFICATION_TRIGGER",
        "type": "string",
        "tags": [],
        "label": "PANEL_NOTIFICATION_TRIGGER",
        "description": [],
        "signature": [
          "\"PANEL_NOTIFICATION_TRIGGER\""
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.RangeSelectContext",
        "type": "Type",
        "tags": [],
        "label": "RangeSelectContext",
        "description": [],
        "signature": [
          "Partial<",
          {
            "pluginId": "@kbn/presentation-publishing",
            "scope": "public",
            "docId": "kibKbnPresentationPublishingPluginApi",
            "section": "def-public.EmbeddableApiContext",
            "text": "EmbeddableApiContext"
          },
          "> & { data: { table: ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.Datatable",
            "text": "Datatable"
          },
          "; column: number; range: number[]; timeFieldName?: string | undefined; }; }"
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.SELECT_RANGE_TRIGGER",
        "type": "string",
        "tags": [],
        "label": "SELECT_RANGE_TRIGGER",
        "description": [],
        "signature": [
          "\"SELECT_RANGE_TRIGGER\""
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.VALUE_CLICK_TRIGGER",
        "type": "string",
        "tags": [],
        "label": "VALUE_CLICK_TRIGGER",
        "description": [],
        "signature": [
          "\"VALUE_CLICK_TRIGGER\""
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.ValueClickContext",
        "type": "Type",
        "tags": [],
        "label": "ValueClickContext",
        "description": [],
        "signature": [
          "Partial<",
          {
            "pluginId": "@kbn/presentation-publishing",
            "scope": "public",
            "docId": "kibKbnPresentationPublishingPluginApi",
            "section": "def-public.EmbeddableApiContext",
            "text": "EmbeddableApiContext"
          },
          "> & { data: { data: { table: Pick<",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.Datatable",
            "text": "Datatable"
          },
          ", \"columns\" | \"rows\">; column: number; row: number; value: any; }[]; timeFieldName?: string | undefined; negate?: boolean | undefined; }; }"
        ],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "embeddable",
        "id": "def-public.cellValueTrigger",
        "type": "Object",
        "tags": [],
        "label": "cellValueTrigger",
        "description": [],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.cellValueTrigger.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.cellValueTrigger.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.cellValueTrigger.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.COMMON_EMBEDDABLE_GROUPING",
        "type": "Object",
        "tags": [],
        "label": "COMMON_EMBEDDABLE_GROUPING",
        "description": [],
        "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.COMMON_EMBEDDABLE_GROUPING.annotation",
            "type": "Object",
            "tags": [],
            "label": "annotation",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.COMMON_EMBEDDABLE_GROUPING.annotation.id",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.COMMON_EMBEDDABLE_GROUPING.annotation.getDisplayName",
                "type": "Function",
                "tags": [],
                "label": "getDisplayName",
                "description": [],
                "signature": [
                  "() => string"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [],
                "returnComment": []
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.COMMON_EMBEDDABLE_GROUPING.annotation.order",
                "type": "number",
                "tags": [],
                "label": "order",
                "description": [],
                "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.COMMON_EMBEDDABLE_GROUPING.other",
            "type": "Object",
            "tags": [],
            "label": "other",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.COMMON_EMBEDDABLE_GROUPING.other.id",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.COMMON_EMBEDDABLE_GROUPING.other.getDisplayName",
                "type": "Function",
                "tags": [],
                "label": "getDisplayName",
                "description": [],
                "signature": [
                  "() => string"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [],
                "returnComment": []
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.COMMON_EMBEDDABLE_GROUPING.other.getIconType",
                "type": "Function",
                "tags": [],
                "label": "getIconType",
                "description": [],
                "signature": [
                  "() => string"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [],
                "returnComment": []
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.COMMON_EMBEDDABLE_GROUPING.other.order",
                "type": "number",
                "tags": [],
                "label": "order",
                "description": [],
                "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.COMMON_EMBEDDABLE_GROUPING.legacy",
            "type": "Object",
            "tags": [],
            "label": "legacy",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-public.COMMON_EMBEDDABLE_GROUPING.legacy.id",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.COMMON_EMBEDDABLE_GROUPING.legacy.getDisplayName",
                "type": "Function",
                "tags": [],
                "label": "getDisplayName",
                "description": [],
                "signature": [
                  "() => string"
                ],
                "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [],
                "returnComment": []
              },
              {
                "parentPluginId": "embeddable",
                "id": "def-public.COMMON_EMBEDDABLE_GROUPING.legacy.order",
                "type": "number",
                "tags": [],
                "label": "order",
                "description": [],
                "path": "src/plugins/embeddable/public/lib/embeddables/common/constants.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.contextMenuTrigger",
        "type": "Object",
        "tags": [],
        "label": "contextMenuTrigger",
        "description": [],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.contextMenuTrigger.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.contextMenuTrigger.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.contextMenuTrigger.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.panelBadgeTrigger",
        "type": "Object",
        "tags": [],
        "label": "panelBadgeTrigger",
        "description": [],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.panelBadgeTrigger.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.panelBadgeTrigger.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.panelBadgeTrigger.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.panelHoverTrigger",
        "type": "Object",
        "tags": [],
        "label": "panelHoverTrigger",
        "description": [],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.panelHoverTrigger.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.panelHoverTrigger.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.panelHoverTrigger.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-public.panelNotificationTrigger",
        "type": "Object",
        "tags": [],
        "label": "panelNotificationTrigger",
        "description": [],
        "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-public.panelNotificationTrigger.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.panelNotificationTrigger.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-public.panelNotificationTrigger.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [],
            "path": "src/plugins/embeddable/public/lib/triggers/triggers.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "setup": {
      "parentPluginId": "embeddable",
      "id": "def-public.EmbeddableSetup",
      "type": "Interface",
      "tags": [],
      "label": "EmbeddableSetup",
      "description": [],
      "path": "src/plugins/embeddable/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "embeddable",
          "id": "def-public.EmbeddableSetup.registerAddFromLibraryType",
          "type": "Function",
          "tags": [],
          "label": "registerAddFromLibraryType",
          "description": [
            "\nRegister a saved object type with the \"Add from library\" flyout.\n"
          ],
          "signature": [
            "<TSavedObjectAttributes extends ",
            {
              "pluginId": "savedObjectsFinder",
              "scope": "common",
              "docId": "kibSavedObjectsFinderPluginApi",
              "section": "def-common.FinderAttributes",
              "text": "FinderAttributes"
            },
            ">({ onAdd, savedObjectType, savedObjectName, getIconForSavedObject, getSavedObjectSubType, getTooltipForSavedObject, }: { onAdd: (container: ",
            {
              "pluginId": "@kbn/presentation-containers",
              "scope": "public",
              "docId": "kibKbnPresentationContainersPluginApi",
              "section": "def-public.CanAddNewPanel",
              "text": "CanAddNewPanel"
            },
            ", savedObject: ",
            {
              "pluginId": "savedObjectsFinder",
              "scope": "common",
              "docId": "kibSavedObjectsFinderPluginApi",
              "section": "def-common.SavedObjectCommon",
              "text": "SavedObjectCommon"
            },
            "<",
            {
              "pluginId": "savedObjectsFinder",
              "scope": "common",
              "docId": "kibSavedObjectsFinderPluginApi",
              "section": "def-common.FinderAttributes",
              "text": "FinderAttributes"
            },
            ">) => void; savedObjectType: string; savedObjectName: string; getIconForSavedObject: (savedObject: ",
            {
              "pluginId": "savedObjectsFinder",
              "scope": "common",
              "docId": "kibSavedObjectsFinderPluginApi",
              "section": "def-common.SavedObjectCommon",
              "text": "SavedObjectCommon"
            },
            "<TSavedObjectAttributes>) => ",
            "IconType",
            "; getSavedObjectSubType?: ((savedObject: ",
            {
              "pluginId": "savedObjectsFinder",
              "scope": "common",
              "docId": "kibSavedObjectsFinderPluginApi",
              "section": "def-common.SavedObjectCommon",
              "text": "SavedObjectCommon"
            },
            "<TSavedObjectAttributes>) => string) | undefined; getTooltipForSavedObject?: ((savedObject: ",
            {
              "pluginId": "savedObjectsFinder",
              "scope": "common",
              "docId": "kibSavedObjectsFinderPluginApi",
              "section": "def-common.SavedObjectCommon",
              "text": "SavedObjectCommon"
            },
            "<TSavedObjectAttributes>) => string) | undefined; }) => void"
          ],
          "path": "src/plugins/embeddable/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "returnComment": [],
          "children": [
            {
              "parentPluginId": "embeddable",
              "id": "def-public.EmbeddableSetup.registerAddFromLibraryType.$1",
              "type": "Object",
              "tags": [],
              "label": "__0",
              "description": [],
              "signature": [
                "{ onAdd: (container: ",
                {
                  "pluginId": "@kbn/presentation-containers",
                  "scope": "public",
                  "docId": "kibKbnPresentationContainersPluginApi",
                  "section": "def-public.CanAddNewPanel",
                  "text": "CanAddNewPanel"
                },
                ", savedObject: ",
                {
                  "pluginId": "savedObjectsFinder",
                  "scope": "common",
                  "docId": "kibSavedObjectsFinderPluginApi",
                  "section": "def-common.SavedObjectCommon",
                  "text": "SavedObjectCommon"
                },
                "<",
                {
                  "pluginId": "savedObjectsFinder",
                  "scope": "common",
                  "docId": "kibSavedObjectsFinderPluginApi",
                  "section": "def-common.FinderAttributes",
                  "text": "FinderAttributes"
                },
                ">) => void; savedObjectType: string; savedObjectName: string; getIconForSavedObject: (savedObject: ",
                {
                  "pluginId": "savedObjectsFinder",
                  "scope": "common",
                  "docId": "kibSavedObjectsFinderPluginApi",
                  "section": "def-common.SavedObjectCommon",
                  "text": "SavedObjectCommon"
                },
                "<TSavedObjectAttributes>) => ",
                "IconType",
                "; getSavedObjectSubType?: ((savedObject: ",
                {
                  "pluginId": "savedObjectsFinder",
                  "scope": "common",
                  "docId": "kibSavedObjectsFinderPluginApi",
                  "section": "def-common.SavedObjectCommon",
                  "text": "SavedObjectCommon"
                },
                "<TSavedObjectAttributes>) => string) | undefined; getTooltipForSavedObject?: ((savedObject: ",
                {
                  "pluginId": "savedObjectsFinder",
                  "scope": "common",
                  "docId": "kibSavedObjectsFinderPluginApi",
                  "section": "def-common.SavedObjectCommon",
                  "text": "SavedObjectCommon"
                },
                "<TSavedObjectAttributes>) => string) | undefined; }"
              ],
              "path": "src/plugins/embeddable/public/add_from_library/registry.ts",
              "deprecated": false,
              "trackAdoption": false
            }
          ]
        },
        {
          "parentPluginId": "embeddable",
          "id": "def-public.EmbeddableSetup.registerReactEmbeddableFactory",
          "type": "Function",
          "tags": [],
          "label": "registerReactEmbeddableFactory",
          "description": [
            "\nRegisters an async {@link ReactEmbeddableFactory} getter."
          ],
          "signature": [
            "<SerializedState extends object = object, RuntimeState extends object = SerializedState, Api extends ",
            {
              "pluginId": "embeddable",
              "scope": "public",
              "docId": "kibEmbeddablePluginApi",
              "section": "def-public.DefaultEmbeddableApi",
              "text": "DefaultEmbeddableApi"
            },
            "<SerializedState, RuntimeState> = ",
            {
              "pluginId": "embeddable",
              "scope": "public",
              "docId": "kibEmbeddablePluginApi",
              "section": "def-public.DefaultEmbeddableApi",
              "text": "DefaultEmbeddableApi"
            },
            "<SerializedState, RuntimeState>>(type: string, getFactory: () => Promise<",
            {
              "pluginId": "embeddable",
              "scope": "public",
              "docId": "kibEmbeddablePluginApi",
              "section": "def-public.ReactEmbeddableFactory",
              "text": "ReactEmbeddableFactory"
            },
            "<SerializedState, RuntimeState, Api>>) => void"
          ],
          "path": "src/plugins/embeddable/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "returnComment": [],
          "children": [
            {
              "parentPluginId": "embeddable",
              "id": "def-public.EmbeddableSetup.registerReactEmbeddableFactory.$1",
              "type": "string",
              "tags": [],
              "label": "type",
              "description": [],
              "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_registry.ts",
              "deprecated": false,
              "trackAdoption": false
            },
            {
              "parentPluginId": "embeddable",
              "id": "def-public.EmbeddableSetup.registerReactEmbeddableFactory.$2",
              "type": "Function",
              "tags": [],
              "label": "getFactory",
              "description": [],
              "signature": [
                "() => Promise<",
                {
                  "pluginId": "embeddable",
                  "scope": "public",
                  "docId": "kibEmbeddablePluginApi",
                  "section": "def-public.ReactEmbeddableFactory",
                  "text": "ReactEmbeddableFactory"
                },
                "<SerializedState, RuntimeState, Api>>"
              ],
              "path": "src/plugins/embeddable/public/react_embeddable_system/react_embeddable_registry.ts",
              "deprecated": false,
              "trackAdoption": false,
              "returnComment": [],
              "children": []
            }
          ]
        },
        {
          "parentPluginId": "embeddable",
          "id": "def-public.EmbeddableSetup.registerEnhancement",
          "type": "Function",
          "tags": [
            "deprecated"
          ],
          "label": "registerEnhancement",
          "description": [],
          "signature": [
            "(enhancement: ",
            {
              "pluginId": "embeddable",
              "scope": "public",
              "docId": "kibEmbeddablePluginApi",
              "section": "def-public.EnhancementRegistryDefinition",
              "text": "EnhancementRegistryDefinition"
            },
            "<",
            {
              "pluginId": "@kbn/utility-types",
              "scope": "common",
              "docId": "kibKbnUtilityTypesPluginApi",
              "section": "def-common.SerializableRecord",
              "text": "SerializableRecord"
            },
            ">) => void"
          ],
          "path": "src/plugins/embeddable/public/types.ts",
          "deprecated": true,
          "trackAdoption": false,
          "references": [
            {
              "plugin": "uiActionsEnhanced",
              "path": "src/plugins/ui_actions_enhanced/public/plugin.ts"
            }
          ],
          "children": [
            {
              "parentPluginId": "embeddable",
              "id": "def-public.EmbeddableSetup.registerEnhancement.$1",
              "type": "Object",
              "tags": [],
              "label": "enhancement",
              "description": [],
              "signature": [
                {
                  "pluginId": "embeddable",
                  "scope": "public",
                  "docId": "kibEmbeddablePluginApi",
                  "section": "def-public.EnhancementRegistryDefinition",
                  "text": "EnhancementRegistryDefinition"
                },
                "<",
                {
                  "pluginId": "@kbn/utility-types",
                  "scope": "common",
                  "docId": "kibKbnUtilityTypesPluginApi",
                  "section": "def-common.SerializableRecord",
                  "text": "SerializableRecord"
                },
                ">"
              ],
              "path": "src/plugins/embeddable/public/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "embeddable",
      "id": "def-public.EmbeddableStart",
      "type": "Interface",
      "tags": [],
      "label": "EmbeddableStart",
      "description": [],
      "signature": [
        {
          "pluginId": "embeddable",
          "scope": "public",
          "docId": "kibEmbeddablePluginApi",
          "section": "def-public.EmbeddableStart",
          "text": "EmbeddableStart"
        },
        " extends ",
        {
          "pluginId": "kibanaUtils",
          "scope": "common",
          "docId": "kibKibanaUtilsPluginApi",
          "section": "def-common.PersistableStateService",
          "text": "PersistableStateService"
        },
        "<",
        {
          "pluginId": "embeddable",
          "scope": "common",
          "docId": "kibEmbeddablePluginApi",
          "section": "def-common.EmbeddableStateWithType",
          "text": "EmbeddableStateWithType"
        },
        ">"
      ],
      "path": "src/plugins/embeddable/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "embeddable",
          "id": "def-public.EmbeddableStart.getStateTransfer",
          "type": "Function",
          "tags": [],
          "label": "getStateTransfer",
          "description": [],
          "signature": [
            "(storage?: ",
            {
              "pluginId": "kibanaUtils",
              "scope": "public",
              "docId": "kibKibanaUtilsPluginApi",
              "section": "def-public.Storage",
              "text": "Storage"
            },
            " | undefined) => ",
            {
              "pluginId": "embeddable",
              "scope": "public",
              "docId": "kibEmbeddablePluginApi",
              "section": "def-public.EmbeddableStateTransfer",
              "text": "EmbeddableStateTransfer"
            }
          ],
          "path": "src/plugins/embeddable/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "embeddable",
              "id": "def-public.EmbeddableStart.getStateTransfer.$1",
              "type": "Object",
              "tags": [],
              "label": "storage",
              "description": [],
              "signature": [
                {
                  "pluginId": "kibanaUtils",
                  "scope": "public",
                  "docId": "kibKibanaUtilsPluginApi",
                  "section": "def-public.Storage",
                  "text": "Storage"
                },
                " | undefined"
              ],
              "path": "src/plugins/embeddable/public/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": false
            }
          ],
          "returnComment": []
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "embeddable",
        "id": "def-server.EmbeddableRegistryDefinition",
        "type": "Interface",
        "tags": [],
        "label": "EmbeddableRegistryDefinition",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.EmbeddableRegistryDefinition",
            "text": "EmbeddableRegistryDefinition"
          },
          "<P> extends Partial<",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.PersistableState",
            "text": "PersistableState"
          },
          "<P>>"
        ],
        "path": "src/plugins/embeddable/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-server.EmbeddableRegistryDefinition.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/embeddable/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-server.EnhancementRegistryDefinition",
        "type": "Interface",
        "tags": [],
        "label": "EnhancementRegistryDefinition",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "server",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-server.EnhancementRegistryDefinition",
            "text": "EnhancementRegistryDefinition"
          },
          "<P> extends Partial<",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.PersistableState",
            "text": "PersistableState"
          },
          "<P>>"
        ],
        "path": "src/plugins/embeddable/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-server.EnhancementRegistryDefinition.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/embeddable/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": [],
    "setup": {
      "parentPluginId": "embeddable",
      "id": "def-server.EmbeddableSetup",
      "type": "Interface",
      "tags": [],
      "label": "EmbeddableSetup",
      "description": [],
      "signature": [
        {
          "pluginId": "embeddable",
          "scope": "server",
          "docId": "kibEmbeddablePluginApi",
          "section": "def-server.EmbeddableSetup",
          "text": "EmbeddableSetup"
        },
        " extends ",
        {
          "pluginId": "kibanaUtils",
          "scope": "common",
          "docId": "kibKibanaUtilsPluginApi",
          "section": "def-common.PersistableStateService",
          "text": "PersistableStateService"
        },
        "<",
        {
          "pluginId": "embeddable",
          "scope": "common",
          "docId": "kibEmbeddablePluginApi",
          "section": "def-common.EmbeddableStateWithType",
          "text": "EmbeddableStateWithType"
        },
        ">"
      ],
      "path": "src/plugins/embeddable/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "embeddable",
          "id": "def-server.EmbeddableSetup.registerEmbeddableFactory",
          "type": "Function",
          "tags": [],
          "label": "registerEmbeddableFactory",
          "description": [],
          "signature": [
            "(factory: ",
            {
              "pluginId": "embeddable",
              "scope": "common",
              "docId": "kibEmbeddablePluginApi",
              "section": "def-common.EmbeddableRegistryDefinition",
              "text": "EmbeddableRegistryDefinition"
            },
            "<",
            {
              "pluginId": "embeddable",
              "scope": "common",
              "docId": "kibEmbeddablePluginApi",
              "section": "def-common.EmbeddableStateWithType",
              "text": "EmbeddableStateWithType"
            },
            ">) => void"
          ],
          "path": "src/plugins/embeddable/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "embeddable",
              "id": "def-server.EmbeddableSetup.registerEmbeddableFactory.$1",
              "type": "Object",
              "tags": [],
              "label": "factory",
              "description": [],
              "signature": [
                {
                  "pluginId": "embeddable",
                  "scope": "common",
                  "docId": "kibEmbeddablePluginApi",
                  "section": "def-common.EmbeddableRegistryDefinition",
                  "text": "EmbeddableRegistryDefinition"
                },
                "<",
                {
                  "pluginId": "embeddable",
                  "scope": "common",
                  "docId": "kibEmbeddablePluginApi",
                  "section": "def-common.EmbeddableStateWithType",
                  "text": "EmbeddableStateWithType"
                },
                ">"
              ],
              "path": "src/plugins/embeddable/server/plugin.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        },
        {
          "parentPluginId": "embeddable",
          "id": "def-server.EmbeddableSetup.registerEnhancement",
          "type": "Function",
          "tags": [],
          "label": "registerEnhancement",
          "description": [],
          "signature": [
            "(enhancement: ",
            {
              "pluginId": "embeddable",
              "scope": "server",
              "docId": "kibEmbeddablePluginApi",
              "section": "def-server.EnhancementRegistryDefinition",
              "text": "EnhancementRegistryDefinition"
            },
            "<",
            {
              "pluginId": "@kbn/utility-types",
              "scope": "common",
              "docId": "kibKbnUtilityTypesPluginApi",
              "section": "def-common.SerializableRecord",
              "text": "SerializableRecord"
            },
            ">) => void"
          ],
          "path": "src/plugins/embeddable/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "embeddable",
              "id": "def-server.EmbeddableSetup.registerEnhancement.$1",
              "type": "Object",
              "tags": [],
              "label": "enhancement",
              "description": [],
              "signature": [
                {
                  "pluginId": "embeddable",
                  "scope": "server",
                  "docId": "kibEmbeddablePluginApi",
                  "section": "def-server.EnhancementRegistryDefinition",
                  "text": "EnhancementRegistryDefinition"
                },
                "<",
                {
                  "pluginId": "@kbn/utility-types",
                  "scope": "common",
                  "docId": "kibKbnUtilityTypesPluginApi",
                  "section": "def-common.SerializableRecord",
                  "text": "SerializableRecord"
                },
                ">"
              ],
              "path": "src/plugins/embeddable/server/plugin.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        },
        {
          "parentPluginId": "embeddable",
          "id": "def-server.EmbeddableSetup.getAllMigrations",
          "type": "Function",
          "tags": [],
          "label": "getAllMigrations",
          "description": [],
          "signature": [
            "() => ",
            {
              "pluginId": "kibanaUtils",
              "scope": "common",
              "docId": "kibKibanaUtilsPluginApi",
              "section": "def-common.MigrateFunctionsObject",
              "text": "MigrateFunctionsObject"
            }
          ],
          "path": "src/plugins/embeddable/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "embeddable",
      "id": "def-server.EmbeddableStart",
      "type": "Type",
      "tags": [],
      "label": "EmbeddableStart",
      "description": [],
      "signature": [
        {
          "pluginId": "kibanaUtils",
          "scope": "common",
          "docId": "kibKibanaUtilsPluginApi",
          "section": "def-common.PersistableStateService",
          "text": "PersistableStateService"
        },
        "<",
        {
          "pluginId": "embeddable",
          "scope": "common",
          "docId": "kibEmbeddablePluginApi",
          "section": "def-common.EmbeddableStateWithType",
          "text": "EmbeddableStateWithType"
        },
        ">"
      ],
      "path": "src/plugins/embeddable/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "embeddable",
        "id": "def-common.isSavedObjectEmbeddableInput",
        "type": "Function",
        "tags": [],
        "label": "isSavedObjectEmbeddableInput",
        "description": [],
        "signature": [
          "(input: ",
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.EmbeddableInput",
            "text": "EmbeddableInput"
          },
          " | ",
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.SavedObjectEmbeddableInput",
            "text": "SavedObjectEmbeddableInput"
          },
          ") => boolean"
        ],
        "path": "src/plugins/embeddable/common/lib/saved_object_embeddable.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-common.isSavedObjectEmbeddableInput.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "input",
            "description": [],
            "signature": [
              {
                "pluginId": "embeddable",
                "scope": "common",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-common.EmbeddableInput",
                "text": "EmbeddableInput"
              },
              " | ",
              {
                "pluginId": "embeddable",
                "scope": "common",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-common.SavedObjectEmbeddableInput",
                "text": "SavedObjectEmbeddableInput"
              }
            ],
            "path": "src/plugins/embeddable/common/lib/saved_object_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "embeddable",
        "id": "def-common.CommonEmbeddableStartContract",
        "type": "Interface",
        "tags": [],
        "label": "CommonEmbeddableStartContract",
        "description": [],
        "path": "src/plugins/embeddable/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-common.CommonEmbeddableStartContract.getEmbeddableFactory",
            "type": "Function",
            "tags": [],
            "label": "getEmbeddableFactory",
            "description": [],
            "signature": [
              "((embeddableFactoryId: string) => ",
              {
                "pluginId": "kibanaUtils",
                "scope": "common",
                "docId": "kibKibanaUtilsPluginApi",
                "section": "def-common.PersistableState",
                "text": "PersistableState"
              },
              "<",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              "> & { isContainerType: boolean; }) | undefined"
            ],
            "path": "src/plugins/embeddable/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-common.CommonEmbeddableStartContract.getEmbeddableFactory.$1",
                "type": "string",
                "tags": [],
                "label": "embeddableFactoryId",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/embeddable/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-common.CommonEmbeddableStartContract.getEnhancement",
            "type": "Function",
            "tags": [],
            "label": "getEnhancement",
            "description": [],
            "signature": [
              "(enhancementId: string) => ",
              {
                "pluginId": "kibanaUtils",
                "scope": "common",
                "docId": "kibKibanaUtilsPluginApi",
                "section": "def-common.PersistableState",
                "text": "PersistableState"
              },
              "<",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">"
            ],
            "path": "src/plugins/embeddable/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "embeddable",
                "id": "def-common.CommonEmbeddableStartContract.getEnhancement.$1",
                "type": "string",
                "tags": [],
                "label": "enhancementId",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/embeddable/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-common.EmbeddableRegistryDefinition",
        "type": "Interface",
        "tags": [],
        "label": "EmbeddableRegistryDefinition",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.EmbeddableRegistryDefinition",
            "text": "EmbeddableRegistryDefinition"
          },
          "<P> extends Partial<",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.PersistableState",
            "text": "PersistableState"
          },
          "<P>>"
        ],
        "path": "src/plugins/embeddable/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-common.EmbeddableRegistryDefinition.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/embeddable/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-common.PanelState",
        "type": "Interface",
        "tags": [],
        "label": "PanelState",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.PanelState",
            "text": "PanelState"
          },
          "<E>"
        ],
        "path": "src/plugins/embeddable/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-common.PanelState.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "path": "src/plugins/embeddable/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "embeddable",
            "id": "def-common.PanelState.explicitInput",
            "type": "CompoundType",
            "tags": [],
            "label": "explicitInput",
            "description": [],
            "signature": [
              "Partial<E> & { id: string; }"
            ],
            "path": "src/plugins/embeddable/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-common.SavedObjectEmbeddableInput",
        "type": "Interface",
        "tags": [],
        "label": "SavedObjectEmbeddableInput",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.SavedObjectEmbeddableInput",
            "text": "SavedObjectEmbeddableInput"
          },
          " extends ",
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.EmbeddableInput",
            "text": "EmbeddableInput"
          }
        ],
        "path": "src/plugins/embeddable/common/lib/saved_object_embeddable.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "embeddable",
            "id": "def-common.SavedObjectEmbeddableInput.savedObjectId",
            "type": "string",
            "tags": [],
            "label": "savedObjectId",
            "description": [],
            "path": "src/plugins/embeddable/common/lib/saved_object_embeddable.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "embeddable",
        "id": "def-common.ViewMode",
        "type": "Enum",
        "tags": [],
        "label": "ViewMode",
        "description": [],
        "path": "src/plugins/embeddable/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "embeddable",
        "id": "def-common.EmbeddableInput",
        "type": "Type",
        "tags": [],
        "label": "EmbeddableInput",
        "description": [],
        "signature": [
          "{ version?: string | undefined; viewMode?: ",
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.ViewMode",
            "text": "ViewMode"
          },
          " | undefined; title?: string | undefined; description?: string | undefined; id: string; lastReloadRequestTime?: number | undefined; hidePanelTitles?: boolean | undefined; enhancements?: ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          " | undefined; disabledActions?: string[] | undefined; disableTriggers?: boolean | undefined; searchSessionId?: string | undefined; syncColors?: boolean | undefined; syncCursor?: boolean | undefined; syncTooltips?: boolean | undefined; executionContext?: ",
          {
            "pluginId": "@kbn/core-execution-context-common",
            "scope": "common",
            "docId": "kibKbnCoreExecutionContextCommonPluginApi",
            "section": "def-common.KibanaExecutionContext",
            "text": "KibanaExecutionContext"
          },
          " | undefined; }"
        ],
        "path": "src/plugins/embeddable/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-common.EmbeddablePersistableStateService",
        "type": "Type",
        "tags": [],
        "label": "EmbeddablePersistableStateService",
        "description": [],
        "signature": [
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.PersistableStateService",
            "text": "PersistableStateService"
          },
          "<",
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.EmbeddableStateWithType",
            "text": "EmbeddableStateWithType"
          },
          ">"
        ],
        "path": "src/plugins/embeddable/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "embeddable",
        "id": "def-common.EmbeddableStateWithType",
        "type": "Type",
        "tags": [],
        "label": "EmbeddableStateWithType",
        "description": [],
        "signature": [
          {
            "pluginId": "embeddable",
            "scope": "common",
            "docId": "kibEmbeddablePluginApi",
            "section": "def-common.EmbeddableInput",
            "text": "EmbeddableInput"
          },
          " & { type: string; }"
        ],
        "path": "src/plugins/embeddable/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}