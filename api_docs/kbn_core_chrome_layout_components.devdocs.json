{
  "id": "@kbn/core-chrome-layout-components",
  "client": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "@kbn/core-chrome-layout-components",
        "id": "def-public.ChromeLayout",
        "type": "Function",
        "tags": [],
        "label": "ChromeLayout",
        "description": [
          "\nThe main Chrome layout component.\nSets up the layout and required global css.\n"
        ],
        "signature": [
          "({ children, ...props }: ",
          "ChromeLayoutComponentProps",
          ") => React.JSX.Element"
        ],
        "path": "src/core/packages/chrome/layout/core-chrome-layout-components/layout.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-chrome-layout-components",
            "id": "def-public.ChromeLayout.$1",
            "type": "Object",
            "tags": [],
            "label": "{ children, ...props }",
            "description": [],
            "signature": [
              "ChromeLayoutComponentProps"
            ],
            "path": "src/core/packages/chrome/layout/core-chrome-layout-components/layout.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "The rendered ChromeLayout component."
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-chrome-layout-components",
        "id": "def-public.LayoutConfigProvider",
        "type": "Function",
        "tags": [],
        "label": "LayoutConfigProvider",
        "description": [
          "\nProvider of the layout config"
        ],
        "signature": [
          "({ value: initialValue, children, }: ",
          "LayoutConfigProviderProps",
          ") => React.JSX.Element"
        ],
        "path": "src/core/packages/chrome/layout/core-chrome-layout-components/layout_config_context.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-chrome-layout-components",
            "id": "def-public.LayoutConfigProvider.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  value: initialValue,\n  children,\n}",
            "description": [],
            "signature": [
              "LayoutConfigProviderProps"
            ],
            "path": "src/core/packages/chrome/layout/core-chrome-layout-components/layout_config_context.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-chrome-layout-components",
        "id": "def-public.LayoutDebugOverlay",
        "type": "Function",
        "tags": [],
        "label": "LayoutDebugOverlay",
        "description": [
          "\nA debug overlay component that visually outlines the main layout slots (banner, header, navigation, sidebar, etc.)\nusing colored rectangles. This is useful for development and debugging to understand the placement and sizing of layout regions.\n"
        ],
        "signature": [
          "({ colors }: LayoutDebugOverlayProps) => React.JSX.Element"
        ],
        "path": "src/core/packages/chrome/layout/core-chrome-layout-components/debug/layout_debug_overlay.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-chrome-layout-components",
            "id": "def-public.LayoutDebugOverlay.$1",
            "type": "Object",
            "tags": [],
            "label": "{ colors = {} }",
            "description": [],
            "signature": [
              "LayoutDebugOverlayProps"
            ],
            "path": "src/core/packages/chrome/layout/core-chrome-layout-components/debug/layout_debug_overlay.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "The rendered debug overlay as a fixed-position set of rectangles."
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-chrome-layout-components",
        "id": "def-public.SimpleDebugOverlay",
        "type": "Function",
        "tags": [],
        "label": "SimpleDebugOverlay",
        "description": [
          "\nA minimal debug component for temporary overlays (sidebar, footer, banner, etc.)\nFills its parent container, with customizable background and text.\n"
        ],
        "signature": [
          "({ label, background, color, style, children, }: SimpleDebugOverlayProps) => React.JSX.Element"
        ],
        "path": "src/core/packages/chrome/layout/core-chrome-layout-components/debug/simple_debug_overlay.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-chrome-layout-components",
            "id": "def-public.SimpleDebugOverlay.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  label = 'Debug Overlay',\n  background = '#e6f4ff',\n  color = '#0099ff',\n  style = {},\n  children,\n}",
            "description": [],
            "signature": [
              "SimpleDebugOverlayProps"
            ],
            "path": "src/core/packages/chrome/layout/core-chrome-layout-components/debug/simple_debug_overlay.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "The rendered debug overlay."
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-chrome-layout-components",
        "id": "def-public.useLayoutUpdate",
        "type": "Function",
        "tags": [
          "throws"
        ],
        "label": "useLayoutUpdate",
        "description": [
          "\nHook to access and update the layout configuration."
        ],
        "signature": [
          "() => (updates: Partial<",
          "LayoutConfig",
          ">) => void"
        ],
        "path": "src/core/packages/chrome/layout/core-chrome-layout-components/layout_config_context.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [
          "a function to update it"
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "@kbn/core-chrome-layout-components",
        "id": "def-public.LayoutConfigProviderProps",
        "type": "Interface",
        "tags": [],
        "label": "LayoutConfigProviderProps",
        "description": [
          "\nProps for the LayoutConfigProvider component."
        ],
        "path": "src/core/packages/chrome/layout/core-chrome-layout-components/layout_config_context.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-chrome-layout-components",
            "id": "def-public.LayoutConfigProviderProps.value",
            "type": "Object",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              "{ sidebarWidth?: number | undefined; bannerHeight?: number | undefined; headerHeight?: number | undefined; footerHeight?: number | undefined; navigationWidth?: number | undefined; applicationTopBarHeight?: number | undefined; applicationBottomBarHeight?: number | undefined; }"
            ],
            "path": "src/core/packages/chrome/layout/core-chrome-layout-components/layout_config_context.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-chrome-layout-components",
            "id": "def-public.LayoutConfigProviderProps.children",
            "type": "CompoundType",
            "tags": [],
            "label": "children",
            "description": [],
            "signature": [
              "string | number | boolean | React.ReactElement<any, string | React.JSXElementConstructor<any>> | Iterable<React.ReactNode> | React.ReactPortal | null | undefined"
            ],
            "path": "src/core/packages/chrome/layout/core-chrome-layout-components/layout_config_context.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/core-chrome-layout-components",
        "id": "def-public.ChromeLayoutProps",
        "type": "Type",
        "tags": [],
        "label": "ChromeLayoutProps",
        "description": [
          "\nProps for the ChromeLayout component."
        ],
        "signature": [
          "ChromeLayoutComponentProps"
        ],
        "path": "src/core/packages/chrome/layout/core-chrome-layout-components/layout.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-chrome-layout-components",
        "id": "def-public.LayoutConfig",
        "type": "Type",
        "tags": [],
        "label": "LayoutConfig",
        "description": [
          "\nConfiguration for the layout."
        ],
        "signature": [
          "{ sidebarWidth?: number | undefined; bannerHeight?: number | undefined; headerHeight?: number | undefined; footerHeight?: number | undefined; navigationWidth?: number | undefined; applicationTopBarHeight?: number | undefined; applicationBottomBarHeight?: number | undefined; }"
        ],
        "path": "src/core/packages/chrome/layout/core-chrome-layout-components/layout_config_context.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}