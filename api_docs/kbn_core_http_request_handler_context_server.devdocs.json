{
  "id": "@kbn/core-http-request-handler-context-server",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "@kbn/core-http-request-handler-context-server",
        "id": "def-server.CoreRequestHandlerContext",
        "type": "Interface",
        "tags": [],
        "label": "CoreRequestHandlerContext",
        "description": [
          "\nThe `core` context provided to route handler.\n\nProvides the following clients and services:\n   - {@link SavedObjectsClient | savedObjects.client} - Saved Objects client\n     which uses the credentials of the incoming request\n   - {@link ISavedObjectTypeRegistry | savedObjects.typeRegistry} - Type registry containing\n     all the registered types.\n   - {@link IScopedClusterClient | elasticsearch.client} - Elasticsearch\n     data client which uses the credentials of the incoming request\n   - {@link IUiSettingsClient | uiSettings.client} - uiSettings client\n     which uses the credentials of the incoming request"
        ],
        "path": "src/core/packages/http/request-handler-context-server/src/request_handler_context.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-request-handler-context-server",
            "id": "def-server.CoreRequestHandlerContext.savedObjects",
            "type": "Object",
            "tags": [],
            "label": "savedObjects",
            "description": [
              "\n{@link SavedObjectsRequestHandlerContext}"
            ],
            "signature": [
              "SavedObjectsRequestHandlerContext"
            ],
            "path": "src/core/packages/http/request-handler-context-server/src/request_handler_context.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-request-handler-context-server",
            "id": "def-server.CoreRequestHandlerContext.elasticsearch",
            "type": "Object",
            "tags": [],
            "label": "elasticsearch",
            "description": [
              "\n{@link ElasticsearchRequestHandlerContext}"
            ],
            "signature": [
              "ElasticsearchRequestHandlerContext"
            ],
            "path": "src/core/packages/http/request-handler-context-server/src/request_handler_context.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-request-handler-context-server",
            "id": "def-server.CoreRequestHandlerContext.featureFlags",
            "type": "Object",
            "tags": [],
            "label": "featureFlags",
            "description": [
              "\n{@link FeatureFlagsRequestHandlerContext}"
            ],
            "signature": [
              "{ getBooleanValue: (flagName: string, fallbackValue: boolean) => Promise<boolean>; getStringValue: <Value extends string>(flagName: string, fallbackValue: Value) => Promise<Value>; getNumberValue: <Value extends number>(flagName: string, fallbackValue: Value) => Promise<Value>; }"
            ],
            "path": "src/core/packages/http/request-handler-context-server/src/request_handler_context.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-request-handler-context-server",
            "id": "def-server.CoreRequestHandlerContext.uiSettings",
            "type": "Object",
            "tags": [],
            "label": "uiSettings",
            "description": [
              "\n{@link UiSettingsRequestHandlerContext}"
            ],
            "signature": [
              "UiSettingsRequestHandlerContext"
            ],
            "path": "src/core/packages/http/request-handler-context-server/src/request_handler_context.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-request-handler-context-server",
            "id": "def-server.CoreRequestHandlerContext.deprecations",
            "type": "Object",
            "tags": [],
            "label": "deprecations",
            "description": [
              "\n{@link DeprecationsRequestHandlerContext}"
            ],
            "signature": [
              "DeprecationsRequestHandlerContext"
            ],
            "path": "src/core/packages/http/request-handler-context-server/src/request_handler_context.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-request-handler-context-server",
            "id": "def-server.CoreRequestHandlerContext.security",
            "type": "Object",
            "tags": [],
            "label": "security",
            "description": [
              "\n{@link SecurityRequestHandlerContext}"
            ],
            "signature": [
              "SecurityRequestHandlerContext"
            ],
            "path": "src/core/packages/http/request-handler-context-server/src/request_handler_context.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-request-handler-context-server",
            "id": "def-server.CoreRequestHandlerContext.userProfile",
            "type": "Object",
            "tags": [],
            "label": "userProfile",
            "description": [
              "\n{@link UserProfileRequestHandlerContext}"
            ],
            "signature": [
              "UserProfileRequestHandlerContext"
            ],
            "path": "src/core/packages/http/request-handler-context-server/src/request_handler_context.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-request-handler-context-server",
        "id": "def-server.PrebootCoreRequestHandlerContext",
        "type": "Interface",
        "tags": [],
        "label": "PrebootCoreRequestHandlerContext",
        "description": [
          "\nThe `core` context provided to route handler during the preboot phase."
        ],
        "path": "src/core/packages/http/request-handler-context-server/src/preboot_request_handler_context.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-request-handler-context-server",
            "id": "def-server.PrebootCoreRequestHandlerContext.uiSettings",
            "type": "Object",
            "tags": [],
            "label": "uiSettings",
            "description": [
              "\n{@link PrebootUiSettingsRequestHandlerContext}"
            ],
            "signature": [
              "PrebootUiSettingsRequestHandlerContext"
            ],
            "path": "src/core/packages/http/request-handler-context-server/src/preboot_request_handler_context.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-request-handler-context-server",
        "id": "def-server.PrebootRequestHandlerContext",
        "type": "Interface",
        "tags": [],
        "label": "PrebootRequestHandlerContext",
        "description": [
          "\nBase context passed to a route handler during the preboot phase, containing the `core` context part."
        ],
        "signature": [
          "PrebootRequestHandlerContext",
          " extends ",
          "RequestHandlerContextBase"
        ],
        "path": "src/core/packages/http/request-handler-context-server/src/preboot_request_handler_context.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-request-handler-context-server",
            "id": "def-server.PrebootRequestHandlerContext.core",
            "type": "Object",
            "tags": [],
            "label": "core",
            "description": [
              "\nPromise that resolves the {@link PrebootCoreRequestHandlerContext}"
            ],
            "signature": [
              "Promise<",
              "PrebootCoreRequestHandlerContext",
              ">"
            ],
            "path": "src/core/packages/http/request-handler-context-server/src/preboot_request_handler_context.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-request-handler-context-server",
        "id": "def-server.PrebootUiSettingsRequestHandlerContext",
        "type": "Interface",
        "tags": [],
        "label": "PrebootUiSettingsRequestHandlerContext",
        "description": [
          "\n`uiSettings` http request context provider during the preboot phase."
        ],
        "path": "src/core/packages/http/request-handler-context-server/src/preboot_request_handler_context.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-request-handler-context-server",
            "id": "def-server.PrebootUiSettingsRequestHandlerContext.client",
            "type": "Object",
            "tags": [],
            "label": "client",
            "description": [
              "\nThe {@link IUiSettingsClient | UI Settings client}."
            ],
            "signature": [
              "IUiSettingsClient"
            ],
            "path": "src/core/packages/http/request-handler-context-server/src/preboot_request_handler_context.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-request-handler-context-server",
        "id": "def-server.RequestHandlerContext",
        "type": "Interface",
        "tags": [],
        "label": "RequestHandlerContext",
        "description": [
          "\nBase context passed to a route handler, containing the `core` context part.\n"
        ],
        "signature": [
          "RequestHandlerContext",
          " extends ",
          "RequestHandlerContextBase"
        ],
        "path": "src/core/packages/http/request-handler-context-server/src/request_handler_context.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-request-handler-context-server",
            "id": "def-server.RequestHandlerContext.core",
            "type": "Object",
            "tags": [],
            "label": "core",
            "description": [
              "\nPromise that resolves the {@link CoreRequestHandlerContext}"
            ],
            "signature": [
              "Promise<",
              "CoreRequestHandlerContext",
              ">"
            ],
            "path": "src/core/packages/http/request-handler-context-server/src/request_handler_context.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/core-http-request-handler-context-server",
        "id": "def-server.CustomRequestHandlerContext",
        "type": "Type",
        "tags": [],
        "label": "CustomRequestHandlerContext",
        "description": [
          "\nMixin allowing plugins to define their own request handler contexts.\n"
        ],
        "signature": [
          "RequestHandlerContext",
          " & { [Key in keyof T]: T[Key] extends Promise<unknown> ? T[Key] : Promise<T[Key]>; }"
        ],
        "path": "src/core/packages/http/request-handler-context-server/src/request_handler_context.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}