{
  "id": "@kbn/ml-query-utils",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.addExcludeFrozenToQuery",
        "type": "Function",
        "tags": [],
        "label": "addExcludeFrozenToQuery",
        "description": [
          "\nExtends an existing query with a clause to exclude the frozen tier.\n"
        ],
        "signature": [
          "(originalQuery: ",
          "QueryDslQueryContainer",
          " | undefined) => ",
          "QueryDslQueryContainer",
          " | { bool: { must_not: { term: { _tier: { value: string; }; }; }[]; }; }"
        ],
        "path": "x-pack/packages/ml/query_utils/src/add_exclude_frozen_to_query.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.addExcludeFrozenToQuery.$1",
            "type": "Object",
            "tags": [],
            "label": "originalQuery",
            "description": [
              "- the original query"
            ],
            "signature": [
              "QueryDslQueryContainer",
              " | undefined"
            ],
            "path": "x-pack/packages/ml/query_utils/src/add_exclude_frozen_to_query.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "the original query exluding the frozen tier"
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.buildBaseFilterCriteria",
        "type": "Function",
        "tags": [],
        "label": "buildBaseFilterCriteria",
        "description": [
          "\nBuilds the base filter criteria used in queries,\nadding criteria for the time range and an optional query.\n"
        ],
        "signature": [
          "(timeFieldName: string | undefined, earliestMs: number | undefined, latestMs: number | undefined, query: string | { [key: string]: any; } | undefined) => ",
          "QueryDslQueryContainer",
          "[]"
        ],
        "path": "x-pack/packages/ml/query_utils/src/build_base_filter_criteria.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.buildBaseFilterCriteria.$1",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [
              "- optional time field name of the data view"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/packages/ml/query_utils/src/build_base_filter_criteria.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.buildBaseFilterCriteria.$2",
            "type": "number",
            "tags": [],
            "label": "earliestMs",
            "description": [
              "- optional earliest timestamp of the selected time range"
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/packages/ml/query_utils/src/build_base_filter_criteria.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.buildBaseFilterCriteria.$3",
            "type": "number",
            "tags": [],
            "label": "latestMs",
            "description": [
              "- optional latest timestamp of the selected time range"
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/packages/ml/query_utils/src/build_base_filter_criteria.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.buildBaseFilterCriteria.$4",
            "type": "CompoundType",
            "tags": [],
            "label": "query",
            "description": [
              "- optional query"
            ],
            "signature": [
              "string | { [key: string]: any; } | undefined"
            ],
            "path": "x-pack/packages/ml/query_utils/src/build_base_filter_criteria.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "filter criteria"
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.getDefaultDSLQuery",
        "type": "Function",
        "tags": [],
        "label": "getDefaultDSLQuery",
        "description": [
          "\nDefault DSL query which matches all the results"
        ],
        "signature": [
          "() => ",
          "QueryDslQueryContainer"
        ],
        "path": "x-pack/packages/ml/query_utils/src/get_default_query.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.getSafeAggregationName",
        "type": "Function",
        "tags": [],
        "label": "getSafeAggregationName",
        "description": [
          "\nReturns a name which is safe to use in elasticsearch aggregations for the supplied\nfield name. Aggregation names must be alpha-numeric and can only contain '_' and '-' characters,\nso if the supplied field names contains disallowed characters, the provided index\nidentifier is used to return a safe 'dummy' name in the format 'field_index' e.g. field_0, field_1\n"
        ],
        "signature": [
          "(fieldName: string, index: number) => string"
        ],
        "path": "x-pack/packages/ml/query_utils/src/get_safe_aggregation_name.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.getSafeAggregationName.$1",
            "type": "string",
            "tags": [],
            "label": "fieldName",
            "description": [
              "- the field name to check"
            ],
            "signature": [
              "string"
            ],
            "path": "x-pack/packages/ml/query_utils/src/get_safe_aggregation_name.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.getSafeAggregationName.$2",
            "type": "number",
            "tags": [],
            "label": "index",
            "description": [
              "- the index number to be used for the safe aggregation name"
            ],
            "signature": [
              "number"
            ],
            "path": "x-pack/packages/ml/query_utils/src/get_safe_aggregation_name.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "safe aggregation name"
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.isDefaultQuery",
        "type": "Function",
        "tags": [],
        "label": "isDefaultQuery",
        "description": [
          "\nChecks if the provided query is a default query. A default query is considered as one that matches all documents,\neither directly through a `match_all` query, a `SimpleQuery` with a wildcard query string, or a `BoolFilterBasedSimpleQuery`\nthat contains a filter with a wildcard query or a `match_all` condition.\n"
        ],
        "signature": [
          "(query: ",
          {
            "pluginId": "@kbn/ml-query-utils",
            "scope": "common",
            "docId": "kibKbnMlQueryUtilsPluginApi",
            "section": "def-common.SearchQueryVariant",
            "text": "SearchQueryVariant"
          },
          ") => boolean"
        ],
        "path": "x-pack/packages/ml/query_utils/src/default_query.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.isDefaultQuery.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "query",
            "description": [
              "- The query to check."
            ],
            "signature": [
              {
                "pluginId": "@kbn/ml-query-utils",
                "scope": "common",
                "docId": "kibKbnMlQueryUtilsPluginApi",
                "section": "def-common.SearchQueryVariant",
                "text": "SearchQueryVariant"
              }
            ],
            "path": "x-pack/packages/ml/query_utils/src/default_query.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "True if the query is a default query, false otherwise."
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.isMatchAllQuery",
        "type": "Function",
        "tags": [],
        "label": "isMatchAllQuery",
        "description": [
          "\nChecks if an argument is a `match_all` query."
        ],
        "signature": [
          "(query: unknown) => boolean"
        ],
        "path": "x-pack/packages/ml/query_utils/src/match_all_query.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.isMatchAllQuery.$1",
            "type": "Unknown",
            "tags": [],
            "label": "query",
            "description": [
              "- Argument to check."
            ],
            "signature": [
              "unknown"
            ],
            "path": "x-pack/packages/ml/query_utils/src/match_all_query.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "True if `query` is a `match_all` query, false otherwise."
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.isSimpleQuery",
        "type": "Function",
        "tags": [],
        "label": "isSimpleQuery",
        "description": [
          "\nType guard verifying if an argument is a `SimpleQuery`."
        ],
        "signature": [
          "(arg: unknown) => boolean"
        ],
        "path": "x-pack/packages/ml/query_utils/src/simple_query.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.isSimpleQuery.$1",
            "type": "Unknown",
            "tags": [],
            "label": "arg",
            "description": [
              "- Argument to check."
            ],
            "signature": [
              "unknown"
            ],
            "path": "x-pack/packages/ml/query_utils/src/simple_query.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "True if `arg` is a `SimpleQuery`, false otherwise."
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.BoolFilterBasedSimpleQuery",
        "type": "Interface",
        "tags": [],
        "label": "BoolFilterBasedSimpleQuery",
        "description": [
          "\nRepresents simple queries that are based on a boolean filter."
        ],
        "path": "x-pack/packages/ml/query_utils/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.BoolFilterBasedSimpleQuery.bool",
            "type": "Object",
            "tags": [],
            "label": "bool",
            "description": [
              "\nThe container for the boolean filter logic."
            ],
            "signature": [
              "{ filter: [",
              {
                "pluginId": "@kbn/ml-query-utils",
                "scope": "common",
                "docId": "kibKbnMlQueryUtilsPluginApi",
                "section": "def-common.SimpleQuery",
                "text": "SimpleQuery"
              },
              "<string>]; must: []; must_not: []; should?: [] | undefined; }"
            ],
            "path": "x-pack/packages/ml/query_utils/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.SimpleQuery",
        "type": "Interface",
        "tags": [],
        "label": "SimpleQuery",
        "description": [
          "\nRepresents a simple query structure for searching documents."
        ],
        "signature": [
          {
            "pluginId": "@kbn/ml-query-utils",
            "scope": "common",
            "docId": "kibKbnMlQueryUtilsPluginApi",
            "section": "def-common.SimpleQuery",
            "text": "SimpleQuery"
          },
          "<Q>"
        ],
        "path": "x-pack/packages/ml/query_utils/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.SimpleQuery.query_string",
            "type": "Object",
            "tags": [],
            "label": "query_string",
            "description": [
              "\nDefines the query string parameters for the search."
            ],
            "signature": [
              "{ query: Q; default_operator?: ",
              "QueryDslOperator",
              " | undefined; }"
            ],
            "path": "x-pack/packages/ml/query_utils/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.SavedSearchQuery",
        "type": "Type",
        "tags": [],
        "label": "SavedSearchQuery",
        "description": [
          "\nPlaceholder for the structure for a saved search query."
        ],
        "signature": [
          "object"
        ],
        "path": "x-pack/packages/ml/query_utils/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.SearchQueryLanguage",
        "type": "Type",
        "tags": [],
        "label": "SearchQueryLanguage",
        "description": [
          "\nType for SearchQueryLanguage"
        ],
        "signature": [
          "\"kuery\" | \"lucene\""
        ],
        "path": "x-pack/packages/ml/query_utils/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.SearchQueryVariant",
        "type": "Type",
        "tags": [],
        "label": "SearchQueryVariant",
        "description": [
          "\nRepresents a union of search queries that can be used to fetch documents."
        ],
        "signature": [
          "object | ",
          {
            "pluginId": "@kbn/ml-query-utils",
            "scope": "common",
            "docId": "kibKbnMlQueryUtilsPluginApi",
            "section": "def-common.BoolFilterBasedSimpleQuery",
            "text": "BoolFilterBasedSimpleQuery"
          },
          " | ",
          {
            "pluginId": "@kbn/ml-query-utils",
            "scope": "common",
            "docId": "kibKbnMlQueryUtilsPluginApi",
            "section": "def-common.SimpleQuery",
            "text": "SimpleQuery"
          },
          "<string>"
        ],
        "path": "x-pack/packages/ml/query_utils/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.ES_CLIENT_TOTAL_HITS_RELATION",
        "type": "Object",
        "tags": [],
        "label": "ES_CLIENT_TOTAL_HITS_RELATION",
        "description": [
          "\nCustom enum for total hits relation values"
        ],
        "signature": [
          "{ GTE: ",
          "SearchTotalHitsRelation",
          "; EQ: ",
          "SearchTotalHitsRelation",
          "; }"
        ],
        "path": "x-pack/packages/ml/query_utils/src/es_client_total_hits_relation.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.matchAllQuery",
        "type": "Object",
        "tags": [],
        "label": "matchAllQuery",
        "description": [
          "\nRepresents a query that matches all documents."
        ],
        "path": "x-pack/packages/ml/query_utils/src/match_all_query.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/ml-query-utils",
            "id": "def-common.matchAllQuery.match_all",
            "type": "Object",
            "tags": [],
            "label": "match_all",
            "description": [
              "/**\n   * 'match_all' property specifies a query that matches all documents.\n   */"
            ],
            "path": "x-pack/packages/ml/query_utils/src/match_all_query.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/ml-query-utils",
        "id": "def-common.SEARCH_QUERY_LANGUAGE",
        "type": "Object",
        "tags": [],
        "label": "SEARCH_QUERY_LANGUAGE",
        "description": [
          "\nConstant for kuery and lucene string"
        ],
        "signature": [
          "{ readonly KUERY: \"kuery\"; readonly LUCENE: \"lucene\"; }"
        ],
        "path": "x-pack/packages/ml/query_utils/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  }
}