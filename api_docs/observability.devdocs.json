{
  "id": "observability",
  "client": {
    "classes": [
      {
        "parentPluginId": "observability",
        "id": "def-public.AutocompleteField",
        "type": "Class",
        "tags": [],
        "label": "AutocompleteField",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.AutocompleteField",
            "text": "AutocompleteField"
          },
          " extends React.Component<AutocompleteFieldProps, AutocompleteFieldState, any>"
        ],
        "path": "x-pack/plugins/observability/public/components/rule_kql_filter/autocomplete_field/autocomplete_field.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.AutocompleteField.state",
            "type": "Object",
            "tags": [],
            "label": "state",
            "description": [],
            "path": "x-pack/plugins/observability/public/components/rule_kql_filter/autocomplete_field/autocomplete_field.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.AutocompleteField.state.areSuggestionsVisible",
                "type": "boolean",
                "tags": [],
                "label": "areSuggestionsVisible",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "x-pack/plugins/observability/public/components/rule_kql_filter/autocomplete_field/autocomplete_field.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.AutocompleteField.state.isFocused",
                "type": "boolean",
                "tags": [],
                "label": "isFocused",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "x-pack/plugins/observability/public/components/rule_kql_filter/autocomplete_field/autocomplete_field.tsx",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.AutocompleteField.state.selectedIndex",
                "type": "Uncategorized",
                "tags": [],
                "label": "selectedIndex",
                "description": [],
                "signature": [
                  "null"
                ],
                "path": "x-pack/plugins/observability/public/components/rule_kql_filter/autocomplete_field/autocomplete_field.tsx",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.AutocompleteField.render",
            "type": "Function",
            "tags": [],
            "label": "render",
            "description": [],
            "signature": [
              "() => JSX.Element"
            ],
            "path": "x-pack/plugins/observability/public/components/rule_kql_filter/autocomplete_field/autocomplete_field.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.AutocompleteField.componentDidMount",
            "type": "Function",
            "tags": [],
            "label": "componentDidMount",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "x-pack/plugins/observability/public/components/rule_kql_filter/autocomplete_field/autocomplete_field.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.AutocompleteField.componentDidUpdate",
            "type": "Function",
            "tags": [],
            "label": "componentDidUpdate",
            "description": [],
            "signature": [
              "(prevProps: AutocompleteFieldProps) => void"
            ],
            "path": "x-pack/plugins/observability/public/components/rule_kql_filter/autocomplete_field/autocomplete_field.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.AutocompleteField.componentDidUpdate.$1",
                "type": "Object",
                "tags": [],
                "label": "prevProps",
                "description": [],
                "signature": [
                  "AutocompleteFieldProps"
                ],
                "path": "x-pack/plugins/observability/public/components/rule_kql_filter/autocomplete_field/autocomplete_field.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "observability",
        "id": "def-public.AlertSummary",
        "type": "Function",
        "tags": [],
        "label": "AlertSummary",
        "description": [],
        "signature": [
          "({ alertSummaryFields }: AlertSummaryProps) => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/pages/alert_details/components/alert_summary.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.AlertSummary.$1",
            "type": "Object",
            "tags": [],
            "label": "{ alertSummaryFields }",
            "description": [],
            "signature": [
              "AlertSummaryProps"
            ],
            "path": "x-pack/plugins/observability/public/pages/alert_details/components/alert_summary.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.calculateTimeRangeBucketSize",
        "type": "Function",
        "tags": [],
        "label": "calculateTimeRangeBucketSize",
        "description": [],
        "signature": [
          "({ from, to }: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          ", timeBuckets: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.TimeBuckets",
            "text": "TimeBuckets"
          },
          ") => ",
          "BucketSize"
        ],
        "path": "x-pack/plugins/observability/public/pages/overview/helpers/calculate_bucket_size.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.calculateTimeRangeBucketSize.$1",
            "type": "Object",
            "tags": [],
            "label": "{ from, to }",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              }
            ],
            "path": "x-pack/plugins/observability/public/pages/overview/helpers/calculate_bucket_size.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.calculateTimeRangeBucketSize.$2",
            "type": "Object",
            "tags": [],
            "label": "timeBuckets",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "common",
                "docId": "kibDataSearchPluginApi",
                "section": "def-common.TimeBuckets",
                "text": "TimeBuckets"
              }
            ],
            "path": "x-pack/plugins/observability/public/pages/overview/helpers/calculate_bucket_size.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.convertTo",
        "type": "Function",
        "tags": [],
        "label": "convertTo",
        "description": [
          "\nConverts a microseconds value into the unit defined."
        ],
        "signature": [
          "({\n  unit,\n  microseconds,\n  defaultValue = NOT_AVAILABLE_LABEL,\n  extended,\n}: { unit: DurationTimeUnit; microseconds: ",
          "Maybe",
          "<number>; defaultValue?: string | undefined; extended?: boolean | undefined; }) => ConvertedDuration"
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.convertTo.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  unit,\n  microseconds,\n  defaultValue = NOT_AVAILABLE_LABEL,\n  extended,\n}",
            "description": [],
            "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.convertTo.$1.unit",
                "type": "CompoundType",
                "tags": [],
                "label": "unit",
                "description": [],
                "signature": [
                  "\"microseconds\" | ",
                  "TimeUnit"
                ],
                "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.convertTo.$1.microseconds",
                "type": "CompoundType",
                "tags": [],
                "label": "microseconds",
                "description": [],
                "signature": [
                  "number | null | undefined"
                ],
                "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.convertTo.$1.defaultValue",
                "type": "string",
                "tags": [],
                "label": "defaultValue",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.convertTo.$1.extended",
                "type": "CompoundType",
                "tags": [],
                "label": "extended",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.createObservabilityRuleTypeRegistryMock",
        "type": "Function",
        "tags": [],
        "label": "createObservabilityRuleTypeRegistryMock",
        "description": [],
        "signature": [
          "() => { register: (type: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityRuleTypeModel",
            "text": "ObservabilityRuleTypeModel"
          },
          "<any>) => void; getFormatter: (typeId: string) => ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityRuleTypeFormatter",
            "text": "ObservabilityRuleTypeFormatter"
          },
          " | undefined; list: () => string[]; } & { getFormatter: () => () => string; registerFormatter: () => void; list: () => string[]; }"
        ],
        "path": "x-pack/plugins/observability/public/rules/observability_rule_type_registry_mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.createUseRulesLink",
        "type": "Function",
        "tags": [],
        "label": "createUseRulesLink",
        "description": [],
        "signature": [
          "() => (options?: ",
          {
            "pluginId": "observabilityShared",
            "scope": "public",
            "docId": "kibObservabilitySharedPluginApi",
            "section": "def-public.Options",
            "text": "Options"
          },
          ") => ",
          "LinkProps"
        ],
        "path": "x-pack/plugins/observability/public/hooks/create_use_rules_link.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.DatePicker",
        "type": "Function",
        "tags": [],
        "label": "DatePicker",
        "description": [],
        "signature": [
          "({\n  rangeFrom,\n  rangeTo,\n  refreshPaused,\n  refreshInterval,\n  width = 'restricted',\n  onTimeRangeRefresh,\n}: DatePickerProps) => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/pages/overview/components/date_picker/date_picker.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.DatePicker.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  rangeFrom,\n  rangeTo,\n  refreshPaused,\n  refreshInterval,\n  width = 'restricted',\n  onTimeRangeRefresh,\n}",
            "description": [],
            "signature": [
              "DatePickerProps"
            ],
            "path": "x-pack/plugins/observability/public/pages/overview/components/date_picker/date_picker.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.DatePickerContextProvider",
        "type": "Function",
        "tags": [],
        "label": "DatePickerContextProvider",
        "description": [],
        "signature": [
          "({ children }: { children: React.ReactElement<any, string | React.JSXElementConstructor<any>>; }) => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/context/date_picker_context/date_picker_context.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.DatePickerContextProvider.$1",
            "type": "Object",
            "tags": [],
            "label": "{ children }",
            "description": [],
            "path": "x-pack/plugins/observability/public/context/date_picker_context/date_picker_context.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.DatePickerContextProvider.$1.children",
                "type": "Object",
                "tags": [],
                "label": "children",
                "description": [],
                "signature": [
                  "React.ReactElement<any, string | React.JSXElementConstructor<any>>"
                ],
                "path": "x-pack/plugins/observability/public/context/date_picker_context/date_picker_context.tsx",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.formatAlertEvaluationValue",
        "type": "Function",
        "tags": [],
        "label": "formatAlertEvaluationValue",
        "description": [],
        "signature": [
          "(ruleTypeId?: string | undefined, evaluationValue?: number | undefined) => string | number"
        ],
        "path": "x-pack/plugins/observability/public/utils/format_alert_evaluation_value.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.formatAlertEvaluationValue.$1",
            "type": "string",
            "tags": [],
            "label": "ruleTypeId",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/public/utils/format_alert_evaluation_value.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.formatAlertEvaluationValue.$2",
            "type": "number",
            "tags": [],
            "label": "evaluationValue",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/observability/public/utils/format_alert_evaluation_value.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.fromQuery",
        "type": "Function",
        "tags": [],
        "label": "fromQuery",
        "description": [],
        "signature": [
          "(query: Record<string, any>) => string"
        ],
        "path": "x-pack/plugins/observability/public/utils/url.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.fromQuery.$1",
            "type": "Object",
            "tags": [],
            "label": "query",
            "description": [],
            "signature": [
              "Record<string, any>"
            ],
            "path": "x-pack/plugins/observability/public/utils/url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.getAlertSummaryTimeRange",
        "type": "Function",
        "tags": [],
        "label": "getAlertSummaryTimeRange",
        "description": [],
        "signature": [
          "(timeRange: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          ", fixedInterval: string, dateFormat: string) => ",
          {
            "pluginId": "triggersActionsUi",
            "scope": "public",
            "docId": "kibTriggersActionsUiPluginApi",
            "section": "def-public.AlertSummaryTimeRange",
            "text": "AlertSummaryTimeRange"
          }
        ],
        "path": "x-pack/plugins/observability/public/utils/alert_summary_widget/get_alert_summary_time_range.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.getAlertSummaryTimeRange.$1",
            "type": "Object",
            "tags": [],
            "label": "timeRange",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              }
            ],
            "path": "x-pack/plugins/observability/public/utils/alert_summary_widget/get_alert_summary_time_range.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.getAlertSummaryTimeRange.$2",
            "type": "string",
            "tags": [],
            "label": "fixedInterval",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability/public/utils/alert_summary_widget/get_alert_summary_time_range.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.getAlertSummaryTimeRange.$3",
            "type": "string",
            "tags": [],
            "label": "dateFormat",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability/public/utils/alert_summary_widget/get_alert_summary_time_range.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.getApmTraceUrl",
        "type": "Function",
        "tags": [],
        "label": "getApmTraceUrl",
        "description": [],
        "signature": [
          "({\n  traceId,\n  rangeFrom,\n  rangeTo,\n}: { traceId: string; rangeFrom: string; rangeTo: string; }) => string"
        ],
        "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.getApmTraceUrl.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  traceId,\n  rangeFrom,\n  rangeTo,\n}",
            "description": [],
            "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.getApmTraceUrl.$1.traceId",
                "type": "string",
                "tags": [],
                "label": "traceId",
                "description": [],
                "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.getApmTraceUrl.$1.rangeFrom",
                "type": "string",
                "tags": [],
                "label": "rangeFrom",
                "description": [],
                "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.getApmTraceUrl.$1.rangeTo",
                "type": "string",
                "tags": [],
                "label": "rangeTo",
                "description": [],
                "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.getCoreVitalsComponent",
        "type": "Function",
        "tags": [],
        "label": "getCoreVitalsComponent",
        "description": [],
        "signature": [
          "(props: ",
          "CoreVitalProps",
          ") => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/pages/overview/components/sections/ux/core_web_vitals/get_core_web_vitals_lazy.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.getCoreVitalsComponent.$1",
            "type": "Object",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "CoreVitalProps"
            ],
            "path": "x-pack/plugins/observability/public/pages/overview/components/sections/ux/core_web_vitals/get_core_web_vitals_lazy.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.LazyAlertsFlyout",
        "type": "Function",
        "tags": [],
        "label": "LazyAlertsFlyout",
        "description": [],
        "signature": [
          "React.ExoticComponent<Pick<{ alert?: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.TopAlert",
            "text": "TopAlert"
          },
          "<{}> | undefined; alerts?: Record<string, unknown>[] | undefined; isInApp?: boolean | undefined; observabilityRuleTypeRegistry: { register: (type: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityRuleTypeModel",
            "text": "ObservabilityRuleTypeModel"
          },
          "<any>) => void; getFormatter: (typeId: string) => ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityRuleTypeFormatter",
            "text": "ObservabilityRuleTypeFormatter"
          },
          " | undefined; list: () => string[]; }; selectedAlertId?: string | undefined; } & ",
          "CommonProps",
          " & { as?: \"div\" | undefined; } & _EuiFlyoutProps & Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, keyof _EuiFlyoutProps> & Omit<Pick<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, \"key\" | keyof React.HTMLAttributes<HTMLDivElement> | \"css\"> & { ref?: ((instance: HTMLDivElement | null) => void) | React.RefObject<HTMLDivElement> | null | undefined; }, \"type\" | \"prefix\" | \"key\" | \"id\" | \"defaultValue\" | \"security\" | \"children\" | \"ref\" | \"onChange\" | \"defaultChecked\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"title\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"data-test-subj\" | \"css\" | \"paddingSize\" | \"size\" | \"onClose\" | \"as\" | \"maxWidth\" | \"ownFocus\" | \"hideCloseButton\" | \"closeButtonProps\" | \"closeButtonPosition\" | \"maskProps\" | \"outsideClickCloses\" | \"side\" | \"pushMinBreakpoint\" | \"pushAnimation\" | \"focusTrapProps\" | \"includeFixedHeadersInFocusTrap\">, \"type\" | \"prefix\" | \"key\" | \"id\" | \"defaultValue\" | \"security\" | \"alert\" | \"children\" | \"onChange\" | \"defaultChecked\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"title\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"data-test-subj\" | \"css\" | \"alerts\" | \"paddingSize\" | \"size\" | \"onClose\" | \"as\" | \"maxWidth\" | \"ownFocus\" | \"hideCloseButton\" | \"closeButtonProps\" | \"closeButtonPosition\" | \"maskProps\" | \"outsideClickCloses\" | \"side\" | \"pushMinBreakpoint\" | \"pushAnimation\" | \"focusTrapProps\" | \"includeFixedHeadersInFocusTrap\" | \"isInApp\" | \"observabilityRuleTypeRegistry\" | \"selectedAlertId\"> & { ref?: ((instance: HTMLDivElement | null) => void) | React.RefObject<HTMLDivElement> | null | undefined; }> & { readonly _result: ({ alert, alerts, isInApp, observabilityRuleTypeRegistry, onClose, selectedAlertId, }: AlertsFlyoutProps) => JSX.Element | null; }"
        ],
        "path": "x-pack/plugins/observability/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.LazyAlertsFlyout.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityAlertSearchBar",
        "type": "Function",
        "tags": [],
        "label": "ObservabilityAlertSearchBar",
        "description": [],
        "signature": [
          "(props: ",
          "ObservabilityAlertSearchBarProps",
          ") => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/alert_search_bar/get_alert_search_bar_lazy.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityAlertSearchBar.$1",
            "type": "Object",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "ObservabilityAlertSearchBarProps"
            ],
            "path": "x-pack/plugins/observability/public/components/alert_search_bar/get_alert_search_bar_lazy.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.RuleFlyoutKueryBar",
        "type": "Function",
        "tags": [],
        "label": "RuleFlyoutKueryBar",
        "description": [],
        "signature": [
          "({\n  derivedIndexPattern,\n  onSubmit,\n  onChange,\n  value,\n  placeholder,\n  curryLoadSuggestions = defaultCurryLoadSuggestions,\n  compressed,\n}: Props) => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/rule_kql_filter/kuery_bar.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.RuleFlyoutKueryBar.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  derivedIndexPattern,\n  onSubmit,\n  onChange,\n  value,\n  placeholder,\n  curryLoadSuggestions = defaultCurryLoadSuggestions,\n  compressed,\n}",
            "description": [],
            "signature": [
              "Props"
            ],
            "path": "x-pack/plugins/observability/public/components/rule_kql_filter/kuery_bar.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.toQuery",
        "type": "Function",
        "tags": [],
        "label": "toQuery",
        "description": [],
        "signature": [
          "(search: string | undefined) => ",
          "ParsedQuery",
          "<string>"
        ],
        "path": "x-pack/plugins/observability/public/utils/url.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.toQuery.$1",
            "type": "string",
            "tags": [],
            "label": "search",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/public/utils/url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.useSummaryTimeRange",
        "type": "Function",
        "tags": [],
        "label": "useSummaryTimeRange",
        "description": [],
        "signature": [
          "(unifiedSearchDateRange: ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.TimeRange",
            "text": "TimeRange"
          },
          ") => ",
          {
            "pluginId": "triggersActionsUi",
            "scope": "public",
            "docId": "kibTriggersActionsUiPluginApi",
            "section": "def-public.AlertSummaryTimeRange",
            "text": "AlertSummaryTimeRange"
          }
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_summary_time_range.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.useSummaryTimeRange.$1",
            "type": "Object",
            "tags": [],
            "label": "unifiedSearchDateRange",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.TimeRange",
                "text": "TimeRange"
              }
            ],
            "path": "x-pack/plugins/observability/public/hooks/use_summary_time_range.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.useTimeBuckets",
        "type": "Function",
        "tags": [],
        "label": "useTimeBuckets",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.TimeBuckets",
            "text": "TimeBuckets"
          }
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_time_buckets.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.WithKueryAutocompletion",
        "type": "Function",
        "tags": [],
        "label": "WithKueryAutocompletion",
        "description": [],
        "signature": [
          "React.FunctionComponent<Omit<WithKueryAutocompletionLifecycleProps, \"kibana\">>"
        ],
        "path": "x-pack/plugins/observability/public/components/rule_kql_filter/with_kuery_autocompletion.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.WithKueryAutocompletion.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P & { children?: React.ReactNode; }"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.WithKueryAutocompletion.$2",
            "type": "Any",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "observability",
        "id": "def-public.AlertSummaryField",
        "type": "Interface",
        "tags": [],
        "label": "AlertSummaryField",
        "description": [],
        "path": "x-pack/plugins/observability/public/pages/alert_details/components/alert_summary.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.AlertSummaryField.label",
            "type": "CompoundType",
            "tags": [],
            "label": "label",
            "description": [],
            "signature": [
              "boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined"
            ],
            "path": "x-pack/plugins/observability/public/pages/alert_details/components/alert_summary.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.AlertSummaryField.value",
            "type": "CompoundType",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              "boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined"
            ],
            "path": "x-pack/plugins/observability/public/pages/alert_details/components/alert_summary.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ApmFetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "ApmFetchDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ApmFetchDataResponse",
            "text": "ApmFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ApmFetchDataResponse.stats",
            "type": "Object",
            "tags": [],
            "label": "stats",
            "description": [],
            "signature": [
              "{ services: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; transactions: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ApmFetchDataResponse.series",
            "type": "Object",
            "tags": [],
            "label": "series",
            "description": [],
            "signature": [
              "{ transactions: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Series",
                "text": "Series"
              },
              "; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.APMHasDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "APMHasDataResponse",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.APMHasDataResponse.hasData",
            "type": "boolean",
            "tags": [],
            "label": "hasData",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.APMHasDataResponse.indices",
            "type": "Object",
            "tags": [],
            "label": "indices",
            "description": [],
            "signature": [
              "ApmIndicesConfig"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.BurnRateRuleParams",
        "type": "Interface",
        "tags": [],
        "label": "BurnRateRuleParams",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.BurnRateRuleParams",
            "text": "BurnRateRuleParams"
          },
          " extends ",
          {
            "pluginId": "alerting",
            "scope": "common",
            "docId": "kibAlertingPluginApi",
            "section": "def-common.RuleTypeParams",
            "text": "RuleTypeParams"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.BurnRateRuleParams.sloId",
            "type": "string",
            "tags": [],
            "label": "sloId",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.BurnRateRuleParams.windows",
            "type": "Array",
            "tags": [],
            "label": "windows",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.WindowSchema",
                "text": "WindowSchema"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ChartData",
        "type": "Interface",
        "tags": [],
        "label": "ChartData",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ChartData.key",
            "type": "number",
            "tags": [],
            "label": "key",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ChartData.value",
            "type": "number",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.Coordinates",
        "type": "Interface",
        "tags": [],
        "label": "Coordinates",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.Coordinates.x",
            "type": "number",
            "tags": [],
            "label": "x",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.Coordinates.y",
            "type": "CompoundType",
            "tags": [],
            "label": "y",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.DataHandler",
        "type": "Interface",
        "tags": [],
        "label": "DataHandler",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.DataHandler",
            "text": "DataHandler"
          },
          "<T>"
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.DataHandler.fetchData",
            "type": "Function",
            "tags": [],
            "label": "fetchData",
            "description": [],
            "signature": [
              "(fetchDataParams: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.FetchDataParams",
                "text": "FetchDataParams"
              },
              ") => Promise<",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.ObservabilityFetchDataResponse",
                "text": "ObservabilityFetchDataResponse"
              },
              "[T]>"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.DataHandler.fetchData.$1",
                "type": "Object",
                "tags": [],
                "label": "fetchDataParams",
                "description": [],
                "signature": [
                  {
                    "pluginId": "observability",
                    "scope": "public",
                    "docId": "kibObservabilityPluginApi",
                    "section": "def-public.FetchDataParams",
                    "text": "FetchDataParams"
                  }
                ],
                "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.DataHandler.hasData",
            "type": "Function",
            "tags": [],
            "label": "hasData",
            "description": [],
            "signature": [
              "(params?: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.HasDataParams",
                "text": "HasDataParams"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.ObservabilityHasDataResponse",
                "text": "ObservabilityHasDataResponse"
              },
              "[T]>"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.DataHandler.hasData.$1",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  {
                    "pluginId": "observability",
                    "scope": "public",
                    "docId": "kibObservabilityPluginApi",
                    "section": "def-public.HasDataParams",
                    "text": "HasDataParams"
                  },
                  " | undefined"
                ],
                "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.Duration",
        "type": "Interface",
        "tags": [],
        "label": "Duration",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.Duration.value",
            "type": "number",
            "tags": [],
            "label": "value",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.Duration.unit",
            "type": "CompoundType",
            "tags": [],
            "label": "unit",
            "description": [],
            "signature": [
              "\"m\" | \"M\" | \"w\" | \"d\" | \"h\""
            ],
            "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.FetchDataParams",
        "type": "Interface",
        "tags": [],
        "label": "FetchDataParams",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataParams.absoluteTime",
            "type": "Object",
            "tags": [],
            "label": "absoluteTime",
            "description": [],
            "signature": [
              "{ start: number; end: number; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataParams.relativeTime",
            "type": "Object",
            "tags": [],
            "label": "relativeTime",
            "description": [],
            "signature": [
              "{ start: string; end: string; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataParams.serviceName",
            "type": "string",
            "tags": [],
            "label": "serviceName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataParams.bucketSize",
            "type": "number",
            "tags": [],
            "label": "bucketSize",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataParams.intervalString",
            "type": "string",
            "tags": [],
            "label": "intervalString",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataParams.timeZone",
            "type": "string",
            "tags": [],
            "label": "timeZone",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.FetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "FetchDataResponse",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataResponse.appLink",
            "type": "string",
            "tags": [],
            "label": "appLink",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.HasDataParams",
        "type": "Interface",
        "tags": [],
        "label": "HasDataParams",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.HasDataParams.absoluteTime",
            "type": "Object",
            "tags": [],
            "label": "absoluteTime",
            "description": [],
            "signature": [
              "{ start: number; end: number; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.HasDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "HasDataResponse",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.HasDataResponse.hasData",
            "type": "boolean",
            "tags": [],
            "label": "hasData",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.InfraLogsHasDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "InfraLogsHasDataResponse",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.InfraLogsHasDataResponse.hasData",
            "type": "boolean",
            "tags": [],
            "label": "hasData",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.InfraLogsHasDataResponse.indices",
            "type": "string",
            "tags": [],
            "label": "indices",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.InfraMetricsHasDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "InfraMetricsHasDataResponse",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.InfraMetricsHasDataResponse.hasData",
            "type": "boolean",
            "tags": [],
            "label": "hasData",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.InfraMetricsHasDataResponse.indices",
            "type": "string",
            "tags": [],
            "label": "indices",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.LogsFetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "LogsFetchDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.LogsFetchDataResponse",
            "text": "LogsFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.LogsFetchDataResponse.stats",
            "type": "Object",
            "tags": [],
            "label": "stats",
            "description": [],
            "signature": [
              "{ [x: string]: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              " & { label: string; }; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.LogsFetchDataResponse.series",
            "type": "Object",
            "tags": [],
            "label": "series",
            "description": [],
            "signature": [
              "{ [x: string]: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Series",
                "text": "Series"
              },
              " & { label: string; }; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.MetricsFetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "MetricsFetchDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.MetricsFetchDataResponse",
            "text": "MetricsFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataResponse.sort",
            "type": "Function",
            "tags": [],
            "label": "sort",
            "description": [],
            "signature": [
              "(by: string, direction: string) => Promise<",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.MetricsFetchDataResponse",
                "text": "MetricsFetchDataResponse"
              },
              ">"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.MetricsFetchDataResponse.sort.$1",
                "type": "string",
                "tags": [],
                "label": "by",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.MetricsFetchDataResponse.sort.$2",
                "type": "string",
                "tags": [],
                "label": "direction",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataResponse.series",
            "type": "Array",
            "tags": [],
            "label": "series",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.MetricsFetchDataSeries",
                "text": "MetricsFetchDataSeries"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.MetricsFetchDataSeries",
        "type": "Interface",
        "tags": [],
        "label": "MetricsFetchDataSeries",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.name",
            "type": "CompoundType",
            "tags": [],
            "label": "name",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.platform",
            "type": "CompoundType",
            "tags": [],
            "label": "platform",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.provider",
            "type": "CompoundType",
            "tags": [],
            "label": "provider",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.cpu",
            "type": "CompoundType",
            "tags": [],
            "label": "cpu",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.iowait",
            "type": "CompoundType",
            "tags": [],
            "label": "iowait",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.load",
            "type": "CompoundType",
            "tags": [],
            "label": "load",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.uptime",
            "type": "CompoundType",
            "tags": [],
            "label": "uptime",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.rx",
            "type": "CompoundType",
            "tags": [],
            "label": "rx",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.tx",
            "type": "CompoundType",
            "tags": [],
            "label": "tx",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.timeseries",
            "type": "Array",
            "tags": [],
            "label": "timeseries",
            "description": [],
            "signature": [
              "{ timestamp: number; cpu: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.NumberOrNull",
                "text": "NumberOrNull"
              },
              "; iowait: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.NumberOrNull",
                "text": "NumberOrNull"
              },
              "; load: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.NumberOrNull",
                "text": "NumberOrNull"
              },
              "; rx: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.NumberOrNull",
                "text": "NumberOrNull"
              },
              "; tx: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.NumberOrNull",
                "text": "NumberOrNull"
              },
              "; }[]"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityFetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityFetchDataResponse",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityFetchDataResponse.apm",
            "type": "Object",
            "tags": [],
            "label": "apm",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.ApmFetchDataResponse",
                "text": "ApmFetchDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityFetchDataResponse.infra_metrics",
            "type": "Object",
            "tags": [],
            "label": "infra_metrics",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.MetricsFetchDataResponse",
                "text": "MetricsFetchDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityFetchDataResponse.infra_logs",
            "type": "Object",
            "tags": [],
            "label": "infra_logs",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.LogsFetchDataResponse",
                "text": "LogsFetchDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityFetchDataResponse.uptime",
            "type": "Object",
            "tags": [],
            "label": "uptime",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.UptimeFetchDataResponse",
                "text": "UptimeFetchDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityFetchDataResponse.ux",
            "type": "Object",
            "tags": [],
            "label": "ux",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.UxFetchDataResponse",
                "text": "UxFetchDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityFetchDataResponse.universal_profiling",
            "type": "Object",
            "tags": [],
            "label": "universal_profiling",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.FetchDataResponse",
                "text": "FetchDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityHasDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityHasDataResponse",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityHasDataResponse.apm",
            "type": "Object",
            "tags": [],
            "label": "apm",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.APMHasDataResponse",
                "text": "APMHasDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityHasDataResponse.infra_metrics",
            "type": "Object",
            "tags": [],
            "label": "infra_metrics",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.InfraMetricsHasDataResponse",
                "text": "InfraMetricsHasDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityHasDataResponse.infra_logs",
            "type": "Object",
            "tags": [],
            "label": "infra_logs",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.InfraLogsHasDataResponse",
                "text": "InfraLogsHasDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityHasDataResponse.uptime",
            "type": "Object",
            "tags": [],
            "label": "uptime",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.SyntheticsHasDataResponse",
                "text": "SyntheticsHasDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityHasDataResponse.ux",
            "type": "Object",
            "tags": [],
            "label": "ux",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.UXHasDataResponse",
                "text": "UXHasDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityHasDataResponse.universal_profiling",
            "type": "Object",
            "tags": [],
            "label": "universal_profiling",
            "description": [],
            "signature": [
              "UniversalProfilingHasDataResponse"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityPublicPluginsSetup",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityPublicPluginsSetup",
        "description": [],
        "path": "x-pack/plugins/observability/public/plugin.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsSetup.data",
            "type": "Object",
            "tags": [],
            "label": "data",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginSetup",
                "text": "DataPublicPluginSetup"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsSetup.observabilityShared",
            "type": "Object",
            "tags": [],
            "label": "observabilityShared",
            "description": [],
            "signature": [
              "{ locators: { profiling: { flamegraphLocator: ",
              {
                "pluginId": "share",
                "scope": "common",
                "docId": "kibSharePluginApi",
                "section": "def-common.LocatorPublic",
                "text": "LocatorPublic"
              },
              "<",
              "FlamegraphLocatorParams",
              ">; topNFunctionsLocator: ",
              {
                "pluginId": "share",
                "scope": "common",
                "docId": "kibSharePluginApi",
                "section": "def-common.LocatorPublic",
                "text": "LocatorPublic"
              },
              "<",
              "TopNFunctionsLocatorParams",
              ">; stacktracesLocator: ",
              {
                "pluginId": "share",
                "scope": "common",
                "docId": "kibSharePluginApi",
                "section": "def-common.LocatorPublic",
                "text": "LocatorPublic"
              },
              "<",
              "StacktracesLocatorParams",
              ">; }; }; navigation: { registerSections: (sections$: ",
              "Observable",
              "<",
              {
                "pluginId": "observabilityShared",
                "scope": "public",
                "docId": "kibObservabilitySharedPluginApi",
                "section": "def-public.NavigationSection",
                "text": "NavigationSection"
              },
              "[]>) => void; }; }"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsSetup.observabilityAIAssistant",
            "type": "Object",
            "tags": [],
            "label": "observabilityAIAssistant",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "public",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-public.ObservabilityAIAssistantPluginSetup",
                "text": "ObservabilityAIAssistantPluginSetup"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsSetup.share",
            "type": "CompoundType",
            "tags": [],
            "label": "share",
            "description": [],
            "signature": [
              "{ register: (shareMenuProvider: ",
              {
                "pluginId": "share",
                "scope": "public",
                "docId": "kibSharePluginApi",
                "section": "def-public.ShareMenuProvider",
                "text": "ShareMenuProvider"
              },
              ") => void; } & { url: ",
              {
                "pluginId": "share",
                "scope": "public",
                "docId": "kibSharePluginApi",
                "section": "def-public.BrowserUrlService",
                "text": "BrowserUrlService"
              },
              "; navigate(options: ",
              "RedirectOptions",
              "<",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">): void; setAnonymousAccessServiceProvider: (provider: () => ",
              {
                "pluginId": "share",
                "scope": "common",
                "docId": "kibSharePluginApi",
                "section": "def-common.AnonymousAccessServiceContract",
                "text": "AnonymousAccessServiceContract"
              },
              ") => void; }"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsSetup.triggersActionsUi",
            "type": "Object",
            "tags": [],
            "label": "triggersActionsUi",
            "description": [],
            "signature": [
              {
                "pluginId": "triggersActionsUi",
                "scope": "public",
                "docId": "kibTriggersActionsUiPluginApi",
                "section": "def-public.TriggersAndActionsUIPublicPluginSetup",
                "text": "TriggersAndActionsUIPublicPluginSetup"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsSetup.home",
            "type": "Object",
            "tags": [],
            "label": "home",
            "description": [],
            "signature": [
              {
                "pluginId": "home",
                "scope": "public",
                "docId": "kibHomePluginApi",
                "section": "def-public.HomePublicPluginSetup",
                "text": "HomePublicPluginSetup"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsSetup.usageCollection",
            "type": "Object",
            "tags": [],
            "label": "usageCollection",
            "description": [],
            "signature": [
              {
                "pluginId": "usageCollection",
                "scope": "public",
                "docId": "kibUsageCollectionPluginApi",
                "section": "def-public.UsageCollectionSetup",
                "text": "UsageCollectionSetup"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsSetup.embeddable",
            "type": "Object",
            "tags": [],
            "label": "embeddable",
            "description": [],
            "signature": [
              {
                "pluginId": "embeddable",
                "scope": "public",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-public.EmbeddableSetup",
                "text": "EmbeddableSetup"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityPublicPluginsStart",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityPublicPluginsStart",
        "description": [],
        "path": "x-pack/plugins/observability/public/plugin.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.actionTypeRegistry",
            "type": "Object",
            "tags": [],
            "label": "actionTypeRegistry",
            "description": [],
            "signature": [
              "{ get: (id: string) => ",
              {
                "pluginId": "triggersActionsUi",
                "scope": "public",
                "docId": "kibTriggersActionsUiPluginApi",
                "section": "def-public.ActionTypeModel",
                "text": "ActionTypeModel"
              },
              "<unknown, unknown, any>; list: () => ",
              {
                "pluginId": "triggersActionsUi",
                "scope": "public",
                "docId": "kibTriggersActionsUiPluginApi",
                "section": "def-public.ActionTypeModel",
                "text": "ActionTypeModel"
              },
              "<unknown, unknown, any>[]; register: (objectType: ",
              {
                "pluginId": "triggersActionsUi",
                "scope": "public",
                "docId": "kibTriggersActionsUiPluginApi",
                "section": "def-public.ActionTypeModel",
                "text": "ActionTypeModel"
              },
              "<unknown, unknown, any>) => void; has: (id: string) => boolean; }"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.cases",
            "type": "Object",
            "tags": [],
            "label": "cases",
            "description": [],
            "signature": [
              {
                "pluginId": "cases",
                "scope": "public",
                "docId": "kibCasesPluginApi",
                "section": "def-public.CasesUiStart",
                "text": "CasesUiStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.charts",
            "type": "CompoundType",
            "tags": [],
            "label": "charts",
            "description": [],
            "signature": [
              {
                "pluginId": "charts",
                "scope": "public",
                "docId": "kibChartsPluginApi",
                "section": "def-public.ChartsPluginSetup",
                "text": "ChartsPluginSetup"
              },
              " & { activeCursor: ",
              "ActiveCursor",
              "; }"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.contentManagement",
            "type": "Object",
            "tags": [],
            "label": "contentManagement",
            "description": [],
            "signature": [
              {
                "pluginId": "contentManagement",
                "scope": "public",
                "docId": "kibContentManagementPluginApi",
                "section": "def-public.ContentManagementPublicStart",
                "text": "ContentManagementPublicStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.data",
            "type": "Object",
            "tags": [],
            "label": "data",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginStart",
                "text": "DataPublicPluginStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.dataViews",
            "type": "Object",
            "tags": [],
            "label": "dataViews",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "public",
                "docId": "kibDataViewsPluginApi",
                "section": "def-public.DataViewsServicePublic",
                "text": "DataViewsServicePublic"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.dataViewEditor",
            "type": "Object",
            "tags": [],
            "label": "dataViewEditor",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViewEditor",
                "scope": "public",
                "docId": "kibDataViewEditorPluginApi",
                "section": "def-public.PluginStart",
                "text": "PluginStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.discover",
            "type": "Object",
            "tags": [],
            "label": "discover",
            "description": [],
            "signature": [
              {
                "pluginId": "discover",
                "scope": "public",
                "docId": "kibDiscoverPluginApi",
                "section": "def-public.DiscoverStart",
                "text": "DiscoverStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.embeddable",
            "type": "Object",
            "tags": [],
            "label": "embeddable",
            "description": [],
            "signature": [
              {
                "pluginId": "embeddable",
                "scope": "public",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-public.EmbeddableStart",
                "text": "EmbeddableStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.exploratoryView",
            "type": "Object",
            "tags": [],
            "label": "exploratoryView",
            "description": [],
            "signature": [
              "{ createExploratoryViewUrl: ({ reportType, allSeries }: { reportType: ",
              "ReportViewType",
              "; allSeries: ",
              {
                "pluginId": "exploratoryView",
                "scope": "public",
                "docId": "kibExploratoryViewPluginApi",
                "section": "def-public.AllSeries",
                "text": "AllSeries"
              },
              "; }, baseHref?: string) => string; getAppDataView: (appId: ",
              "AppDataType",
              ", indexPattern?: string | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null | undefined>; ExploratoryViewEmbeddable: (props: ",
              {
                "pluginId": "exploratoryView",
                "scope": "public",
                "docId": "kibExploratoryViewPluginApi",
                "section": "def-public.ExploratoryEmbeddableProps",
                "text": "ExploratoryEmbeddableProps"
              },
              ") => JSX.Element | null; }"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.guidedOnboarding",
            "type": "Object",
            "tags": [],
            "label": "guidedOnboarding",
            "description": [],
            "signature": [
              {
                "pluginId": "guidedOnboarding",
                "scope": "public",
                "docId": "kibGuidedOnboardingPluginApi",
                "section": "def-public.GuidedOnboardingPluginStart",
                "text": "GuidedOnboardingPluginStart"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.lens",
            "type": "Object",
            "tags": [],
            "label": "lens",
            "description": [],
            "signature": [
              {
                "pluginId": "lens",
                "scope": "public",
                "docId": "kibLensPluginApi",
                "section": "def-public.LensPublicStart",
                "text": "LensPublicStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.licensing",
            "type": "Object",
            "tags": [],
            "label": "licensing",
            "description": [],
            "signature": [
              {
                "pluginId": "licensing",
                "scope": "public",
                "docId": "kibLicensingPluginApi",
                "section": "def-public.LicensingPluginStart",
                "text": "LicensingPluginStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.observabilityShared",
            "type": "Object",
            "tags": [],
            "label": "observabilityShared",
            "description": [],
            "signature": [
              "{ navigation: { PageTemplate: (pageTemplateProps: ",
              "WrappedPageTemplateProps",
              ") => JSX.Element; registerSections: (sections$: ",
              "Observable",
              "<",
              {
                "pluginId": "observabilityShared",
                "scope": "public",
                "docId": "kibObservabilitySharedPluginApi",
                "section": "def-public.NavigationSection",
                "text": "NavigationSection"
              },
              "[]>) => void; }; updateGlobalNavigation: ({ capabilities, deepLinks, updater$, }: { capabilities: Readonly<{ [x: string]: Readonly<{ [x: string]: boolean | Readonly<{ [x: string]: boolean; }>; }>; navLinks: Readonly<{ [x: string]: boolean; }>; management: Readonly<{ [x: string]: Readonly<{ [x: string]: boolean; }>; }>; catalogue: Readonly<{ [x: string]: boolean; }>; }>; deepLinks: ",
              {
                "pluginId": "@kbn/core-application-browser",
                "scope": "common",
                "docId": "kibKbnCoreApplicationBrowserPluginApi",
                "section": "def-common.AppDeepLink",
                "text": "AppDeepLink"
              },
              "<string>[]; updater$: ",
              "Subject",
              "<",
              {
                "pluginId": "@kbn/core-application-browser",
                "scope": "common",
                "docId": "kibKbnCoreApplicationBrowserPluginApi",
                "section": "def-common.AppUpdater",
                "text": "AppUpdater"
              },
              ">; }) => void; setIsSidebarEnabled: (isEnabled: boolean) => void; }"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.observabilityAIAssistant",
            "type": "Object",
            "tags": [],
            "label": "observabilityAIAssistant",
            "description": [],
            "signature": [
              {
                "pluginId": "observabilityAIAssistant",
                "scope": "public",
                "docId": "kibObservabilityAIAssistantPluginApi",
                "section": "def-public.ObservabilityAIAssistantPluginStart",
                "text": "ObservabilityAIAssistantPluginStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.ruleTypeRegistry",
            "type": "Object",
            "tags": [],
            "label": "ruleTypeRegistry",
            "description": [],
            "signature": [
              "{ get: (id: string) => ",
              {
                "pluginId": "triggersActionsUi",
                "scope": "public",
                "docId": "kibTriggersActionsUiPluginApi",
                "section": "def-public.RuleTypeModel",
                "text": "RuleTypeModel"
              },
              "<",
              {
                "pluginId": "alerting",
                "scope": "common",
                "docId": "kibAlertingPluginApi",
                "section": "def-common.RuleTypeParams",
                "text": "RuleTypeParams"
              },
              ">; list: () => ",
              {
                "pluginId": "triggersActionsUi",
                "scope": "public",
                "docId": "kibTriggersActionsUiPluginApi",
                "section": "def-public.RuleTypeModel",
                "text": "RuleTypeModel"
              },
              "<",
              {
                "pluginId": "alerting",
                "scope": "common",
                "docId": "kibAlertingPluginApi",
                "section": "def-common.RuleTypeParams",
                "text": "RuleTypeParams"
              },
              ">[]; register: (objectType: ",
              {
                "pluginId": "triggersActionsUi",
                "scope": "public",
                "docId": "kibTriggersActionsUiPluginApi",
                "section": "def-public.RuleTypeModel",
                "text": "RuleTypeModel"
              },
              "<",
              {
                "pluginId": "alerting",
                "scope": "common",
                "docId": "kibAlertingPluginApi",
                "section": "def-common.RuleTypeParams",
                "text": "RuleTypeParams"
              },
              ">) => void; has: (id: string) => boolean; }"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.security",
            "type": "Object",
            "tags": [],
            "label": "security",
            "description": [],
            "signature": [
              {
                "pluginId": "security",
                "scope": "public",
                "docId": "kibSecurityPluginApi",
                "section": "def-public.SecurityPluginStart",
                "text": "SecurityPluginStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.share",
            "type": "CompoundType",
            "tags": [],
            "label": "share",
            "description": [],
            "signature": [
              "{ toggleShareContextMenu: (options: ",
              {
                "pluginId": "share",
                "scope": "public",
                "docId": "kibSharePluginApi",
                "section": "def-public.ShowShareMenuOptions",
                "text": "ShowShareMenuOptions"
              },
              ") => void; } & { url: ",
              {
                "pluginId": "share",
                "scope": "public",
                "docId": "kibSharePluginApi",
                "section": "def-public.BrowserUrlService",
                "text": "BrowserUrlService"
              },
              "; navigate(options: ",
              "RedirectOptions",
              "<",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">): void; }"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.spaces",
            "type": "Object",
            "tags": [],
            "label": "spaces",
            "description": [],
            "signature": [
              {
                "pluginId": "spaces",
                "scope": "public",
                "docId": "kibSpacesPluginApi",
                "section": "def-public.SpacesApi",
                "text": "SpacesApi"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.triggersActionsUi",
            "type": "Object",
            "tags": [],
            "label": "triggersActionsUi",
            "description": [],
            "signature": [
              {
                "pluginId": "triggersActionsUi",
                "scope": "public",
                "docId": "kibTriggersActionsUiPluginApi",
                "section": "def-public.TriggersAndActionsUIPublicPluginStart",
                "text": "TriggersAndActionsUIPublicPluginStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.usageCollection",
            "type": "Object",
            "tags": [],
            "label": "usageCollection",
            "description": [],
            "signature": [
              {
                "pluginId": "usageCollection",
                "scope": "public",
                "docId": "kibUsageCollectionPluginApi",
                "section": "def-public.UsageCollectionSetup",
                "text": "UsageCollectionSetup"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.unifiedSearch",
            "type": "Object",
            "tags": [],
            "label": "unifiedSearch",
            "description": [],
            "signature": [
              {
                "pluginId": "unifiedSearch",
                "scope": "public",
                "docId": "kibUnifiedSearchPluginApi",
                "section": "def-public.UnifiedSearchPublicPluginStart",
                "text": "UnifiedSearchPublicPluginStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.home",
            "type": "Object",
            "tags": [],
            "label": "home",
            "description": [],
            "signature": [
              {
                "pluginId": "home",
                "scope": "public",
                "docId": "kibHomePluginApi",
                "section": "def-public.HomePublicPluginStart",
                "text": "HomePublicPluginStart"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.cloud",
            "type": "Object",
            "tags": [],
            "label": "cloud",
            "description": [],
            "signature": [
              {
                "pluginId": "cloud",
                "scope": "public",
                "docId": "kibCloudPluginApi",
                "section": "def-public.CloudStart",
                "text": "CloudStart"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.aiops",
            "type": "Object",
            "tags": [],
            "label": "aiops",
            "description": [],
            "signature": [
              "AiopsPluginStart"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.serverless",
            "type": "Object",
            "tags": [],
            "label": "serverless",
            "description": [],
            "signature": [
              {
                "pluginId": "serverless",
                "scope": "public",
                "docId": "kibServerlessPluginApi",
                "section": "def-public.ServerlessPluginStart",
                "text": "ServerlessPluginStart"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityRuleTypeModel",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityRuleTypeModel",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityRuleTypeModel",
            "text": "ObservabilityRuleTypeModel"
          },
          "<Params> extends ",
          {
            "pluginId": "triggersActionsUi",
            "scope": "public",
            "docId": "kibTriggersActionsUiPluginApi",
            "section": "def-public.RuleTypeModel",
            "text": "RuleTypeModel"
          },
          "<Params>"
        ],
        "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityRuleTypeModel.format",
            "type": "Function",
            "tags": [],
            "label": "format",
            "description": [],
            "signature": [
              "(options: { fields: OutputOf<SetOptional<{ readonly \"kibana.alert.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.author\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.description\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.enabled\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.from\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.interval\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.license\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.note\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.references\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.rule_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_name_override\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.to\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.type\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.severity\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.docs_count\": { readonly type: \"long\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.end\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.terms.field\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.suppression.start\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.terms.value\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.system_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_user\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"ecs.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"@timestamp\": { readonly type: \"date\"; readonly required: true; readonly array: false; }; readonly \"event.action\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.rule_type_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.consumer\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.execution.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.instance.id\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.category\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.name\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.producer\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.revision\": { readonly type: \"long\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.status\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.space_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: true; }; readonly \"event.kind\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.action_group\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.case_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.duration.us\": { readonly type: \"long\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.end\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.flapping\": { readonly type: \"boolean\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.flapping_history\": { readonly type: \"boolean\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.last_detected\": { readonly type: \"date\"; readonly required: false; readonly array: false; }; readonly \"kibana.alert.maintenance_window_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.parameters\": { readonly array: false; readonly type: \"flattened\"; readonly ignore_above: 4096; readonly required: false; }; readonly \"kibana.alert.rule.tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.start\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.time_range\": { readonly type: \"date_range\"; readonly format: \"epoch_millis||strict_date_optional_time\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.url\": { readonly type: \"keyword\"; readonly array: false; readonly index: false; readonly required: false; readonly ignore_above: 2048; }; readonly \"kibana.alert.workflow_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.version\": { readonly type: \"version\"; readonly array: false; readonly required: false; }; }>> & Record<string, any>; formatters: { asDuration: (value: ",
              "Maybe",
              "<number>, { defaultValue, extended }?: FormatterOptions) => string; asPercent: (numerator: ",
              "Maybe",
              "<number>, denominator: number | undefined, fallbackResult?: string) => string; }; }) => { reason: string; link?: string | undefined; }"
            ],
            "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.ObservabilityRuleTypeModel.format.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "{ fields: OutputOf<SetOptional<{ readonly \"kibana.alert.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.author\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.description\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.enabled\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.from\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.interval\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.license\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.note\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.references\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.rule_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_name_override\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.to\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.type\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.severity\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.docs_count\": { readonly type: \"long\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.end\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.terms.field\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.suppression.start\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.terms.value\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.system_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_user\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"ecs.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"@timestamp\": { readonly type: \"date\"; readonly required: true; readonly array: false; }; readonly \"event.action\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.rule_type_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.consumer\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.execution.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.instance.id\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.category\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.name\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.producer\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.revision\": { readonly type: \"long\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.status\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.space_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: true; }; readonly \"event.kind\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.action_group\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.case_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.duration.us\": { readonly type: \"long\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.end\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.flapping\": { readonly type: \"boolean\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.flapping_history\": { readonly type: \"boolean\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.last_detected\": { readonly type: \"date\"; readonly required: false; readonly array: false; }; readonly \"kibana.alert.maintenance_window_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.parameters\": { readonly array: false; readonly type: \"flattened\"; readonly ignore_above: 4096; readonly required: false; }; readonly \"kibana.alert.rule.tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.start\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.time_range\": { readonly type: \"date_range\"; readonly format: \"epoch_millis||strict_date_optional_time\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.url\": { readonly type: \"keyword\"; readonly array: false; readonly index: false; readonly required: false; readonly ignore_above: 2048; }; readonly \"kibana.alert.workflow_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.version\": { readonly type: \"version\"; readonly array: false; readonly required: false; }; }>> & Record<string, any>; formatters: { asDuration: (value: ",
                  "Maybe",
                  "<number>, { defaultValue, extended }?: FormatterOptions) => string; asPercent: (numerator: ",
                  "Maybe",
                  "<number>, denominator: number | undefined, fallbackResult?: string) => string; }; }"
                ],
                "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityRuleTypeModel.priority",
            "type": "number",
            "tags": [],
            "label": "priority",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.Series",
        "type": "Interface",
        "tags": [],
        "label": "Series",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.Series.coordinates",
            "type": "Array",
            "tags": [],
            "label": "coordinates",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Coordinates",
                "text": "Coordinates"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.SloEditLocatorParams",
        "type": "Interface",
        "tags": [],
        "label": "SloEditLocatorParams",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.SloEditLocatorParams",
            "text": "SloEditLocatorParams"
          },
          " extends ",
          "RecursivePartial",
          "<",
          "CreateSLOForm",
          ">,",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          }
        ],
        "path": "x-pack/plugins/observability/public/locators/slo_edit.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.Stat",
        "type": "Interface",
        "tags": [],
        "label": "Stat",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.Stat.type",
            "type": "CompoundType",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "\"number\" | \"percent\" | \"bytesPerSecond\""
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.Stat.value",
            "type": "number",
            "tags": [],
            "label": "value",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.SyntheticsHasDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "SyntheticsHasDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.SyntheticsHasDataResponse",
            "text": "SyntheticsHasDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.HasDataResponse",
            "text": "HasDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.SyntheticsHasDataResponse.indices",
            "type": "string",
            "tags": [],
            "label": "indices",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.TopAlert",
        "type": "Interface",
        "tags": [],
        "label": "TopAlert",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.TopAlert",
            "text": "TopAlert"
          },
          "<TAdditionalMetaFields>"
        ],
        "path": "x-pack/plugins/observability/public/typings/alerts.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.TopAlert.fields",
            "type": "CompoundType",
            "tags": [],
            "label": "fields",
            "description": [],
            "signature": [
              "OutputOf<SetOptional<{ readonly \"kibana.alert.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.author\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.description\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.enabled\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.from\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.interval\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.license\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.note\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.references\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.rule_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_name_override\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.to\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.type\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.severity\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.docs_count\": { readonly type: \"long\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.end\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.terms.field\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.suppression.start\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.terms.value\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.system_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_user\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"ecs.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"@timestamp\": { readonly type: \"date\"; readonly required: true; readonly array: false; }; readonly \"event.action\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.rule_type_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.consumer\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.execution.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.instance.id\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.category\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.name\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.producer\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.revision\": { readonly type: \"long\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.status\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.space_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: true; }; readonly \"event.kind\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.action_group\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.case_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.duration.us\": { readonly type: \"long\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.end\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.flapping\": { readonly type: \"boolean\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.flapping_history\": { readonly type: \"boolean\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.last_detected\": { readonly type: \"date\"; readonly required: false; readonly array: false; }; readonly \"kibana.alert.maintenance_window_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.parameters\": { readonly array: false; readonly type: \"flattened\"; readonly ignore_above: 4096; readonly required: false; }; readonly \"kibana.alert.rule.tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.start\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.time_range\": { readonly type: \"date_range\"; readonly format: \"epoch_millis||strict_date_optional_time\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.url\": { readonly type: \"keyword\"; readonly array: false; readonly index: false; readonly required: false; readonly ignore_above: 2048; }; readonly \"kibana.alert.workflow_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.version\": { readonly type: \"version\"; readonly array: false; readonly required: false; }; }>> & OutputOf<SetOptional<{ readonly \"kibana.alert.evaluation.threshold\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; readonly required: false; }; readonly \"kibana.alert.evaluation.value\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; readonly required: false; }; readonly \"kibana.alert.context\": { readonly type: \"object\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.evaluation.values\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; readonly required: false; readonly array: true; }; readonly \"kibana.alert.group\": { readonly type: \"object\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.group.field\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.group.value\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; }>> & TAdditionalMetaFields"
            ],
            "path": "x-pack/plugins/observability/public/typings/alerts.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.TopAlert.start",
            "type": "number",
            "tags": [],
            "label": "start",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/alerts.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.TopAlert.lastUpdated",
            "type": "number",
            "tags": [],
            "label": "lastUpdated",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/alerts.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.TopAlert.reason",
            "type": "string",
            "tags": [],
            "label": "reason",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/alerts.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.TopAlert.link",
            "type": "string",
            "tags": [],
            "label": "link",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/alerts.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.TopAlert.active",
            "type": "boolean",
            "tags": [],
            "label": "active",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/alerts.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.UptimeFetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "UptimeFetchDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.UptimeFetchDataResponse",
            "text": "UptimeFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.UptimeFetchDataResponse.stats",
            "type": "Object",
            "tags": [],
            "label": "stats",
            "description": [],
            "signature": [
              "{ monitors: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; up: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; down: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UptimeFetchDataResponse.series",
            "type": "Object",
            "tags": [],
            "label": "series",
            "description": [],
            "signature": [
              "{ up: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Series",
                "text": "Series"
              },
              "; down: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Series",
                "text": "Series"
              },
              "; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.UxFetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "UxFetchDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.UxFetchDataResponse",
            "text": "UxFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.UxFetchDataResponse.coreWebVitals",
            "type": "Object",
            "tags": [],
            "label": "coreWebVitals",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.UXMetrics",
                "text": "UXMetrics"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.UXHasDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "UXHasDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.UXHasDataResponse",
            "text": "UXHasDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.HasDataResponse",
            "text": "HasDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.UXHasDataResponse.serviceName",
            "type": "CompoundType",
            "tags": [],
            "label": "serviceName",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXHasDataResponse.indices",
            "type": "string",
            "tags": [],
            "label": "indices",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.UXMetrics",
        "type": "Interface",
        "tags": [],
        "label": "UXMetrics",
        "description": [],
        "path": "x-pack/plugins/observability/public/pages/overview/components/sections/ux/core_web_vitals/core_vitals.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.cls",
            "type": "CompoundType",
            "tags": [],
            "label": "cls",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/pages/overview/components/sections/ux/core_web_vitals/core_vitals.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.fid",
            "type": "CompoundType",
            "tags": [],
            "label": "fid",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/public/pages/overview/components/sections/ux/core_web_vitals/core_vitals.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.lcp",
            "type": "CompoundType",
            "tags": [],
            "label": "lcp",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/public/pages/overview/components/sections/ux/core_web_vitals/core_vitals.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.tbt",
            "type": "number",
            "tags": [],
            "label": "tbt",
            "description": [],
            "path": "x-pack/plugins/observability/public/pages/overview/components/sections/ux/core_web_vitals/core_vitals.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.fcp",
            "type": "CompoundType",
            "tags": [],
            "label": "fcp",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/public/pages/overview/components/sections/ux/core_web_vitals/core_vitals.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.coreVitalPages",
            "type": "number",
            "tags": [],
            "label": "coreVitalPages",
            "description": [],
            "path": "x-pack/plugins/observability/public/pages/overview/components/sections/ux/core_web_vitals/core_vitals.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.lcpRanks",
            "type": "Array",
            "tags": [],
            "label": "lcpRanks",
            "description": [],
            "signature": [
              "number[]"
            ],
            "path": "x-pack/plugins/observability/public/pages/overview/components/sections/ux/core_web_vitals/core_vitals.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.fidRanks",
            "type": "Array",
            "tags": [],
            "label": "fidRanks",
            "description": [],
            "signature": [
              "number[]"
            ],
            "path": "x-pack/plugins/observability/public/pages/overview/components/sections/ux/core_web_vitals/core_vitals.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.clsRanks",
            "type": "Array",
            "tags": [],
            "label": "clsRanks",
            "description": [],
            "signature": [
              "number[]"
            ],
            "path": "x-pack/plugins/observability/public/pages/overview/components/sections/ux/core_web_vitals/core_vitals.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.WindowSchema",
        "type": "Interface",
        "tags": [],
        "label": "WindowSchema",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.WindowSchema.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.WindowSchema.burnRateThreshold",
            "type": "number",
            "tags": [],
            "label": "burnRateThreshold",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.WindowSchema.maxBurnRateThreshold",
            "type": "number",
            "tags": [],
            "label": "maxBurnRateThreshold",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.WindowSchema.longWindow",
            "type": "Object",
            "tags": [],
            "label": "longWindow",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Duration",
                "text": "Duration"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.WindowSchema.shortWindow",
            "type": "Object",
            "tags": [],
            "label": "shortWindow",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Duration",
                "text": "Duration"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.WindowSchema.actionGroup",
            "type": "string",
            "tags": [],
            "label": "actionGroup",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "observability",
        "id": "def-public.alertsLocatorID",
        "type": "string",
        "tags": [],
        "label": "alertsLocatorID",
        "description": [],
        "signature": [
          "\"ALERTS_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.apmServiceGroupMaxNumberOfServices",
        "type": "string",
        "tags": [],
        "label": "apmServiceGroupMaxNumberOfServices",
        "description": [],
        "signature": [
          "\"observability:apmServiceGroupMaxNumberOfServices\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.DurationUnit",
        "type": "Type",
        "tags": [],
        "label": "DurationUnit",
        "description": [],
        "signature": [
          "\"m\" | \"M\" | \"w\" | \"d\" | \"h\""
        ],
        "path": "x-pack/plugins/observability/public/typings/slo/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.enableAgentExplorerView",
        "type": "string",
        "tags": [],
        "label": "enableAgentExplorerView",
        "description": [],
        "signature": [
          "\"observability:apmAgentExplorerView\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.enableComparisonByDefault",
        "type": "string",
        "tags": [],
        "label": "enableComparisonByDefault",
        "description": [],
        "signature": [
          "\"observability:enableComparisonByDefault\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.enableInfrastructureHostsView",
        "type": "string",
        "tags": [],
        "label": "enableInfrastructureHostsView",
        "description": [],
        "signature": [
          "\"observability:enableInfrastructureHostsView\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.enableInspectEsQueries",
        "type": "string",
        "tags": [],
        "label": "enableInspectEsQueries",
        "description": [],
        "signature": [
          "\"observability:enableInspectEsQueries\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.enableLegacyUptimeApp",
        "type": "string",
        "tags": [],
        "label": "enableLegacyUptimeApp",
        "description": [],
        "signature": [
          "\"observability:enableLegacyUptimeApp\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.FetchData",
        "type": "Type",
        "tags": [],
        "label": "FetchData",
        "description": [],
        "signature": [
          "(fetchDataParams: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataParams",
            "text": "FetchDataParams"
          },
          ") => Promise<T>"
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchData.$1",
            "type": "Object",
            "tags": [],
            "label": "fetchDataParams",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.FetchDataParams",
                "text": "FetchDataParams"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.HasData",
        "type": "Type",
        "tags": [],
        "label": "HasData",
        "description": [],
        "signature": [
          "(params?: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.HasDataParams",
            "text": "HasDataParams"
          },
          " | undefined) => Promise<",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityHasDataResponse",
            "text": "ObservabilityHasDataResponse"
          },
          "[T]>"
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.HasData.$1",
            "type": "Object",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.HasDataParams",
                "text": "HasDataParams"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.NumberOrNull",
        "type": "Type",
        "tags": [],
        "label": "NumberOrNull",
        "description": [],
        "signature": [
          "number | null"
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.observabilityAppId",
        "type": "string",
        "tags": [],
        "label": "observabilityAppId",
        "description": [],
        "signature": [
          "\"observability-overview\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.observabilityFeatureId",
        "type": "string",
        "tags": [],
        "label": "observabilityFeatureId",
        "description": [],
        "signature": [
          "\"observability\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityFetchDataPlugins",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityFetchDataPlugins",
        "description": [],
        "signature": [
          "\"uptime\" | \"ux\" | \"infra_logs\" | \"infra_metrics\" | \"apm\" | \"universal_profiling\""
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityRuleTypeFormatter",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityRuleTypeFormatter",
        "description": [],
        "signature": [
          "(options: { fields: OutputOf<SetOptional<{ readonly \"kibana.alert.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.author\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.description\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.enabled\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.from\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.interval\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.license\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.note\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.references\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.rule_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_name_override\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.to\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.type\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.severity\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.docs_count\": { readonly type: \"long\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.end\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.terms.field\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.suppression.start\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.terms.value\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.system_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_user\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"ecs.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"@timestamp\": { readonly type: \"date\"; readonly required: true; readonly array: false; }; readonly \"event.action\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.rule_type_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.consumer\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.execution.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.instance.id\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.category\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.name\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.producer\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.revision\": { readonly type: \"long\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.status\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.space_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: true; }; readonly \"event.kind\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.action_group\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.case_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.duration.us\": { readonly type: \"long\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.end\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.flapping\": { readonly type: \"boolean\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.flapping_history\": { readonly type: \"boolean\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.last_detected\": { readonly type: \"date\"; readonly required: false; readonly array: false; }; readonly \"kibana.alert.maintenance_window_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.parameters\": { readonly array: false; readonly type: \"flattened\"; readonly ignore_above: 4096; readonly required: false; }; readonly \"kibana.alert.rule.tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.start\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.time_range\": { readonly type: \"date_range\"; readonly format: \"epoch_millis||strict_date_optional_time\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.url\": { readonly type: \"keyword\"; readonly array: false; readonly index: false; readonly required: false; readonly ignore_above: 2048; }; readonly \"kibana.alert.workflow_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.version\": { readonly type: \"version\"; readonly array: false; readonly required: false; }; }>> & Record<string, any>; formatters: { asDuration: (value: ",
          "Maybe",
          "<number>, { defaultValue, extended }?: FormatterOptions) => string; asPercent: (numerator: ",
          "Maybe",
          "<number>, denominator: number | undefined, fallbackResult?: string) => string; }; }) => { reason: string; link?: string | undefined; }"
        ],
        "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityRuleTypeFormatter.$1",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "{ fields: OutputOf<SetOptional<{ readonly \"kibana.alert.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.author\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.description\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.enabled\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.from\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.interval\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.license\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.note\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.references\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.rule_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_name_override\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.to\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.type\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.severity\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.docs_count\": { readonly type: \"long\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.end\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.terms.field\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.suppression.start\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.suppression.terms.value\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.system_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_user\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"ecs.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"@timestamp\": { readonly type: \"date\"; readonly required: true; readonly array: false; }; readonly \"event.action\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.rule_type_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.consumer\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.execution.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.instance.id\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.category\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.name\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.producer\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.revision\": { readonly type: \"long\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.status\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.space_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: true; }; readonly \"event.kind\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.action_group\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.case_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.duration.us\": { readonly type: \"long\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.end\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.flapping\": { readonly type: \"boolean\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.flapping_history\": { readonly type: \"boolean\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.last_detected\": { readonly type: \"date\"; readonly required: false; readonly array: false; }; readonly \"kibana.alert.maintenance_window_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.parameters\": { readonly array: false; readonly type: \"flattened\"; readonly ignore_above: 4096; readonly required: false; }; readonly \"kibana.alert.rule.tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.start\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.time_range\": { readonly type: \"date_range\"; readonly format: \"epoch_millis||strict_date_optional_time\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.url\": { readonly type: \"keyword\"; readonly array: false; readonly index: false; readonly required: false; readonly ignore_above: 2048; }; readonly \"kibana.alert.workflow_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.version\": { readonly type: \"version\"; readonly array: false; readonly required: false; }; }>> & Record<string, any>; formatters: { asDuration: (value: ",
              "Maybe",
              "<number>, { defaultValue, extended }?: FormatterOptions) => string; asPercent: (numerator: ",
              "Maybe",
              "<number>, denominator: number | undefined, fallbackResult?: string) => string; }; }"
            ],
            "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityRuleTypeRegistry",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityRuleTypeRegistry",
        "description": [],
        "signature": [
          "{ register: (type: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityRuleTypeModel",
            "text": "ObservabilityRuleTypeModel"
          },
          "<any>) => void; getFormatter: (typeId: string) => ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityRuleTypeFormatter",
            "text": "ObservabilityRuleTypeFormatter"
          },
          " | undefined; list: () => string[]; }"
        ],
        "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ruleDetailsLocatorID",
        "type": "string",
        "tags": [],
        "label": "ruleDetailsLocatorID",
        "description": [],
        "signature": [
          "\"RULE_DETAILS_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.rulesLocatorID",
        "type": "string",
        "tags": [],
        "label": "rulesLocatorID",
        "description": [],
        "signature": [
          "\"RULES_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.sloDetailsLocatorID",
        "type": "string",
        "tags": [],
        "label": "sloDetailsLocatorID",
        "description": [],
        "signature": [
          "\"SLO_DETAILS_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.sloEditLocatorID",
        "type": "string",
        "tags": [],
        "label": "sloEditLocatorID",
        "description": [],
        "signature": [
          "\"SLO_EDIT_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.StringOrNull",
        "type": "Type",
        "tags": [],
        "label": "StringOrNull",
        "description": [],
        "signature": [
          "string | null"
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.Subset",
        "type": "Type",
        "tags": [],
        "label": "Subset",
        "description": [
          "\nAllow partial of nested object"
        ],
        "signature": [
          "{ [attr in keyof K]?: (K[attr] extends object ? ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.Subset",
            "text": "Subset"
          },
          "<K[attr]> : K[attr]) | undefined; }"
        ],
        "path": "x-pack/plugins/observability/public/typings/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.syntheticsThrottlingEnabled",
        "type": "string",
        "tags": [],
        "label": "syntheticsThrottlingEnabled",
        "description": [],
        "signature": [
          "\"observability:syntheticsThrottlingEnabled\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.UniversalProfilingDataResponse",
        "type": "Type",
        "tags": [],
        "label": "UniversalProfilingDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.uptimeOverviewLocatorID",
        "type": "string",
        "tags": [],
        "label": "uptimeOverviewLocatorID",
        "description": [],
        "signature": [
          "\"UPTIME_OVERVIEW_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "observability",
      "id": "def-public.ObservabilityPublicSetup",
      "type": "Type",
      "tags": [],
      "label": "ObservabilityPublicSetup",
      "description": [],
      "signature": [
        "{ dashboard: { register: <T extends ",
        {
          "pluginId": "observability",
          "scope": "public",
          "docId": "kibObservabilityPluginApi",
          "section": "def-public.ObservabilityFetchDataPlugins",
          "text": "ObservabilityFetchDataPlugins"
        },
        ">({ appName, fetchData, hasData, }: { appName: T; } & ",
        {
          "pluginId": "observability",
          "scope": "public",
          "docId": "kibObservabilityPluginApi",
          "section": "def-public.DataHandler",
          "text": "DataHandler"
        },
        "<T>) => void; }; observabilityRuleTypeRegistry: { register: (type: ",
        {
          "pluginId": "observability",
          "scope": "public",
          "docId": "kibObservabilityPluginApi",
          "section": "def-public.ObservabilityRuleTypeModel",
          "text": "ObservabilityRuleTypeModel"
        },
        "<any>) => void; getFormatter: (typeId: string) => ",
        {
          "pluginId": "observability",
          "scope": "public",
          "docId": "kibObservabilityPluginApi",
          "section": "def-public.ObservabilityRuleTypeFormatter",
          "text": "ObservabilityRuleTypeFormatter"
        },
        " | undefined; list: () => string[]; }; useRulesLink: (options?: ",
        {
          "pluginId": "observabilityShared",
          "scope": "public",
          "docId": "kibObservabilitySharedPluginApi",
          "section": "def-public.Options",
          "text": "Options"
        },
        ") => ",
        "LinkProps",
        "; rulesLocator: ",
        {
          "pluginId": "share",
          "scope": "common",
          "docId": "kibSharePluginApi",
          "section": "def-common.LocatorPublic",
          "text": "LocatorPublic"
        },
        "<",
        "RulesParams",
        ">; ruleDetailsLocator: ",
        {
          "pluginId": "share",
          "scope": "common",
          "docId": "kibSharePluginApi",
          "section": "def-common.LocatorPublic",
          "text": "LocatorPublic"
        },
        "<",
        "RuleDetailsLocatorParams",
        ">; sloDetailsLocator: ",
        {
          "pluginId": "share",
          "scope": "common",
          "docId": "kibSharePluginApi",
          "section": "def-common.LocatorPublic",
          "text": "LocatorPublic"
        },
        "<",
        "SloDetailsLocatorParams",
        ">; sloEditLocator: ",
        {
          "pluginId": "share",
          "scope": "common",
          "docId": "kibSharePluginApi",
          "section": "def-common.LocatorPublic",
          "text": "LocatorPublic"
        },
        "<",
        {
          "pluginId": "observability",
          "scope": "public",
          "docId": "kibObservabilityPluginApi",
          "section": "def-public.SloEditLocatorParams",
          "text": "SloEditLocatorParams"
        },
        ">; sloListLocator: ",
        {
          "pluginId": "share",
          "scope": "common",
          "docId": "kibSharePluginApi",
          "section": "def-common.LocatorPublic",
          "text": "LocatorPublic"
        },
        "<",
        "SloListLocatorParams",
        ">; }"
      ],
      "path": "x-pack/plugins/observability/public/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "observability",
      "id": "def-public.ObservabilityPublicStart",
      "type": "Type",
      "tags": [],
      "label": "ObservabilityPublicStart",
      "description": [],
      "signature": [
        "{ observabilityRuleTypeRegistry: { register: (type: ",
        {
          "pluginId": "observability",
          "scope": "public",
          "docId": "kibObservabilityPluginApi",
          "section": "def-public.ObservabilityRuleTypeModel",
          "text": "ObservabilityRuleTypeModel"
        },
        "<any>) => void; getFormatter: (typeId: string) => ",
        {
          "pluginId": "observability",
          "scope": "public",
          "docId": "kibObservabilityPluginApi",
          "section": "def-public.ObservabilityRuleTypeFormatter",
          "text": "ObservabilityRuleTypeFormatter"
        },
        " | undefined; list: () => string[]; }; useRulesLink: (options?: ",
        {
          "pluginId": "observabilityShared",
          "scope": "public",
          "docId": "kibObservabilitySharedPluginApi",
          "section": "def-public.Options",
          "text": "Options"
        },
        ") => ",
        "LinkProps",
        "; }"
      ],
      "path": "x-pack/plugins/observability/public/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "observability",
        "id": "def-server.WrappedElasticsearchClientError",
        "type": "Class",
        "tags": [],
        "label": "WrappedElasticsearchClientError",
        "description": [],
        "signature": [
          "WrappedElasticsearchClientError",
          " extends Error"
        ],
        "path": "x-pack/plugins/observability/common/utils/unwrap_es_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.WrappedElasticsearchClientError.originalError",
            "type": "Object",
            "tags": [],
            "label": "originalError",
            "description": [],
            "signature": [
              "ElasticsearchClientError"
            ],
            "path": "x-pack/plugins/observability/common/utils/unwrap_es_response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.WrappedElasticsearchClientError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/observability/common/utils/unwrap_es_response.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.WrappedElasticsearchClientError.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "originalError",
                "description": [],
                "signature": [
                  "ElasticsearchClientError"
                ],
                "path": "x-pack/plugins/observability/common/utils/unwrap_es_response.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "observability",
        "id": "def-server.createOrUpdateIndex",
        "type": "Function",
        "tags": [],
        "label": "createOrUpdateIndex",
        "description": [],
        "signature": [
          "({\n  index,\n  mappings,\n  client,\n  logger,\n}: { index: string; mappings: ",
          "MappingTypeMapping",
          " & { date_detection?: boolean | undefined; dynamic?: ",
          "MappingDynamicMapping",
          " | undefined; dynamic_date_formats?: string[] | undefined; dynamic_templates?: Record<string, ",
          "MappingDynamicTemplate",
          "> | Record<string, ",
          "MappingDynamicTemplate",
          ">[] | undefined; _field_names?: ",
          "MappingFieldNamesField",
          " | undefined; _meta?: ",
          "Metadata",
          " | undefined; numeric_detection?: boolean | undefined; properties?: Record<string, ",
          "MappingProperty",
          "> | undefined; _routing?: ",
          "MappingRoutingField",
          " | undefined; _source?: ",
          "MappingSourceField",
          " | undefined; runtime?: ",
          "MappingRuntimeFields",
          " | undefined; }; client: ",
          {
            "pluginId": "@kbn/core-elasticsearch-server",
            "scope": "common",
            "docId": "kibKbnCoreElasticsearchServerPluginApi",
            "section": "def-common.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          "; logger: ",
          {
            "pluginId": "@kbn/logging",
            "scope": "common",
            "docId": "kibKbnLoggingPluginApi",
            "section": "def-common.Logger",
            "text": "Logger"
          },
          "; }) => Promise<void>"
        ],
        "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.createOrUpdateIndex.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  index,\n  mappings,\n  client,\n  logger,\n}",
            "description": [],
            "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.createOrUpdateIndex.$1.index",
                "type": "string",
                "tags": [],
                "label": "index",
                "description": [],
                "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.createOrUpdateIndex.$1.mappings",
                "type": "CompoundType",
                "tags": [],
                "label": "mappings",
                "description": [],
                "signature": [
                  "MappingTypeMapping",
                  " & { date_detection?: boolean | undefined; dynamic?: ",
                  "MappingDynamicMapping",
                  " | undefined; dynamic_date_formats?: string[] | undefined; dynamic_templates?: Record<string, ",
                  "MappingDynamicTemplate",
                  "> | Record<string, ",
                  "MappingDynamicTemplate",
                  ">[] | undefined; _field_names?: ",
                  "MappingFieldNamesField",
                  " | undefined; _meta?: ",
                  "Metadata",
                  " | undefined; numeric_detection?: boolean | undefined; properties?: Record<string, ",
                  "MappingProperty",
                  "> | undefined; _routing?: ",
                  "MappingRoutingField",
                  " | undefined; _source?: ",
                  "MappingSourceField",
                  " | undefined; runtime?: ",
                  "MappingRuntimeFields",
                  " | undefined; }"
                ],
                "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.createOrUpdateIndex.$1.client",
                "type": "Object",
                "tags": [],
                "label": "client",
                "description": [],
                "signature": [
                  "{ create: { <TDocument = unknown>(this: That, params: ",
                  "CreateRequest",
                  "<TDocument> | ",
                  "CreateRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; <TDocument = unknown>(this: That, params: ",
                  "CreateRequest",
                  "<TDocument> | ",
                  "CreateRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "WriteResponseBase",
                  ", unknown>>; <TDocument = unknown>(this: That, params: ",
                  "CreateRequest",
                  "<TDocument> | ",
                  "CreateRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; }; update: { <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument> | ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "UpdateResponse",
                  "<TDocumentR>>; <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument> | ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "UpdateResponse",
                  "<TDocumentR>, unknown>>; <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument> | ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "UpdateResponse",
                  "<TDocumentR>>; }; get: { <TDocument = unknown>(this: That, params: ",
                  "GetRequest",
                  " | ",
                  "GetRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "GetResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params: ",
                  "GetRequest",
                  " | ",
                  "GetRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "GetResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
                  "GetRequest",
                  " | ",
                  "GetRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "GetResponse",
                  "<TDocument>>; }; delete: { (this: That, params: ",
                  "DeleteRequest",
                  " | ",
                  "DeleteRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; (this: That, params: ",
                  "DeleteRequest",
                  " | ",
                  "DeleteRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "WriteResponseBase",
                  ", unknown>>; (this: That, params: ",
                  "DeleteRequest",
                  " | ",
                  "DeleteRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; }; search: { <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params?: ",
                  "SearchRequest",
                  " | ",
                  "SearchRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "SearchResponse",
                  "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params?: ",
                  "SearchRequest",
                  " | ",
                  "SearchRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "SearchResponse",
                  "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params?: ",
                  "SearchRequest",
                  " | ",
                  "SearchRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "SearchResponse",
                  "<TDocument, TAggregations>>; }; helpers: ",
                  "default",
                  "; name: string | symbol; [kAsyncSearch]: symbol | null; [kAutoscaling]: symbol | null; [kCat]: symbol | null; [kCcr]: symbol | null; [kCluster]: symbol | null; [kDanglingIndices]: symbol | null; [kEnrich]: symbol | null; [kEql]: symbol | null; [kFeatures]: symbol | null; [kFleet]: symbol | null; [kGraph]: symbol | null; [kIlm]: symbol | null; [kIndices]: symbol | null; [kIngest]: symbol | null; [kLicense]: symbol | null; [kLogstash]: symbol | null; [kMigration]: symbol | null; [kMl]: symbol | null; [kMonitoring]: symbol | null; [kNodes]: symbol | null; [kRollup]: symbol | null; [kSearchApplication]: symbol | null; [kSearchableSnapshots]: symbol | null; [kSecurity]: symbol | null; [kShutdown]: symbol | null; [kSlm]: symbol | null; [kSnapshot]: symbol | null; [kSql]: symbol | null; [kSsl]: symbol | null; [kSynonyms]: symbol | null; [kTasks]: symbol | null; [kTextStructure]: symbol | null; [kTransform]: symbol | null; [kWatcher]: symbol | null; [kXpack]: symbol | null; transport: ",
                  "default",
                  "; child: (opts: ",
                  "ClientOptions",
                  ") => ",
                  "default",
                  "; asyncSearch: ",
                  "default",
                  "; autoscaling: ",
                  "default",
                  "; bulk: { <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument> | ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "BulkResponse",
                  ">; <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument> | ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "BulkResponse",
                  ", unknown>>; <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument> | ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "BulkResponse",
                  ">; }; cat: ",
                  "default",
                  "; ccr: ",
                  "default",
                  "; clearScroll: { (this: That, params?: ",
                  "ClearScrollRequest",
                  " | ",
                  "ClearScrollRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ClearScrollResponse",
                  ">; (this: That, params?: ",
                  "ClearScrollRequest",
                  " | ",
                  "ClearScrollRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ClearScrollResponse",
                  ", unknown>>; (this: That, params?: ",
                  "ClearScrollRequest",
                  " | ",
                  "ClearScrollRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ClearScrollResponse",
                  ">; }; closePointInTime: { (this: That, params: ",
                  "ClosePointInTimeRequest",
                  " | ",
                  "ClosePointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ClosePointInTimeResponse",
                  ">; (this: That, params: ",
                  "ClosePointInTimeRequest",
                  " | ",
                  "ClosePointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ClosePointInTimeResponse",
                  ", unknown>>; (this: That, params: ",
                  "ClosePointInTimeRequest",
                  " | ",
                  "ClosePointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ClosePointInTimeResponse",
                  ">; }; cluster: ",
                  "default",
                  "; count: { (this: That, params?: ",
                  "CountRequest",
                  " | ",
                  "CountRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "CountResponse",
                  ">; (this: That, params?: ",
                  "CountRequest",
                  " | ",
                  "CountRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "CountResponse",
                  ", unknown>>; (this: That, params?: ",
                  "CountRequest",
                  " | ",
                  "CountRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "CountResponse",
                  ">; }; danglingIndices: ",
                  "default",
                  "; deleteByQuery: { (this: That, params: ",
                  "DeleteByQueryRequest",
                  " | ",
                  "DeleteByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "DeleteByQueryResponse",
                  ">; (this: That, params: ",
                  "DeleteByQueryRequest",
                  " | ",
                  "DeleteByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "DeleteByQueryResponse",
                  ", unknown>>; (this: That, params: ",
                  "DeleteByQueryRequest",
                  " | ",
                  "DeleteByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "DeleteByQueryResponse",
                  ">; }; deleteByQueryRethrottle: { (this: That, params: ",
                  "DeleteByQueryRethrottleRequest",
                  " | ",
                  "DeleteByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "TasksTaskListResponseBase",
                  ">; (this: That, params: ",
                  "DeleteByQueryRethrottleRequest",
                  " | ",
                  "DeleteByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "TasksTaskListResponseBase",
                  ", unknown>>; (this: That, params: ",
                  "DeleteByQueryRethrottleRequest",
                  " | ",
                  "DeleteByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "TasksTaskListResponseBase",
                  ">; }; deleteScript: { (this: That, params: ",
                  "DeleteScriptRequest",
                  " | ",
                  "DeleteScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "AcknowledgedResponseBase",
                  ">; (this: That, params: ",
                  "DeleteScriptRequest",
                  " | ",
                  "DeleteScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "AcknowledgedResponseBase",
                  ", unknown>>; (this: That, params: ",
                  "DeleteScriptRequest",
                  " | ",
                  "DeleteScriptRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "AcknowledgedResponseBase",
                  ">; }; enrich: ",
                  "default",
                  "; eql: ",
                  "default",
                  "; exists: { (this: That, params: ",
                  "ExistsRequest",
                  " | ",
                  "ExistsRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<boolean>; (this: That, params: ",
                  "ExistsRequest",
                  " | ",
                  "ExistsRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<boolean, unknown>>; (this: That, params: ",
                  "ExistsRequest",
                  " | ",
                  "ExistsRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<boolean>; }; existsSource: { (this: That, params: ",
                  "ExistsSourceRequest",
                  " | ",
                  "ExistsSourceRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<boolean>; (this: That, params: ",
                  "ExistsSourceRequest",
                  " | ",
                  "ExistsSourceRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<boolean, unknown>>; (this: That, params: ",
                  "ExistsSourceRequest",
                  " | ",
                  "ExistsSourceRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<boolean>; }; explain: { <TDocument = unknown>(this: That, params: ",
                  "ExplainRequest",
                  " | ",
                  "ExplainRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ExplainResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params: ",
                  "ExplainRequest",
                  " | ",
                  "ExplainRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ExplainResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
                  "ExplainRequest",
                  " | ",
                  "ExplainRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ExplainResponse",
                  "<TDocument>>; }; features: ",
                  "default",
                  "; fieldCaps: { (this: That, params?: ",
                  "FieldCapsRequest",
                  " | ",
                  "FieldCapsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "FieldCapsResponse",
                  ">; (this: That, params?: ",
                  "FieldCapsRequest",
                  " | ",
                  "FieldCapsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "FieldCapsResponse",
                  ", unknown>>; (this: That, params?: ",
                  "FieldCapsRequest",
                  " | ",
                  "FieldCapsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "FieldCapsResponse",
                  ">; }; fleet: ",
                  "default",
                  "; getScript: { (this: That, params: ",
                  "GetScriptRequest",
                  " | ",
                  "GetScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "GetScriptResponse",
                  ">; (this: That, params: ",
                  "GetScriptRequest",
                  " | ",
                  "GetScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "GetScriptResponse",
                  ", unknown>>; (this: That, params: ",
                  "GetScriptRequest",
                  " | ",
                  "GetScriptRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "GetScriptResponse",
                  ">; }; getScriptContext: { (this: That, params?: ",
                  "GetScriptContextRequest",
                  " | ",
                  "GetScriptContextRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "GetScriptContextResponse",
                  ">; (this: That, params?: ",
                  "GetScriptContextRequest",
                  " | ",
                  "GetScriptContextRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "GetScriptContextResponse",
                  ", unknown>>; (this: That, params?: ",
                  "GetScriptContextRequest",
                  " | ",
                  "GetScriptContextRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "GetScriptContextResponse",
                  ">; }; getScriptLanguages: { (this: That, params?: ",
                  "GetScriptLanguagesRequest",
                  " | ",
                  "GetScriptLanguagesRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "GetScriptLanguagesResponse",
                  ">; (this: That, params?: ",
                  "GetScriptLanguagesRequest",
                  " | ",
                  "GetScriptLanguagesRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "GetScriptLanguagesResponse",
                  ", unknown>>; (this: That, params?: ",
                  "GetScriptLanguagesRequest",
                  " | ",
                  "GetScriptLanguagesRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "GetScriptLanguagesResponse",
                  ">; }; getSource: { <TDocument = unknown>(this: That, params: ",
                  "GetSourceRequest",
                  " | ",
                  "GetSourceRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<TDocument>; <TDocument = unknown>(this: That, params: ",
                  "GetSourceRequest",
                  " | ",
                  "GetSourceRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<TDocument, unknown>>; <TDocument = unknown>(this: That, params: ",
                  "GetSourceRequest",
                  " | ",
                  "GetSourceRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<TDocument>; }; graph: ",
                  "default",
                  "; healthReport: { (this: That, params?: ",
                  "HealthReportRequest",
                  " | ",
                  "HealthReportRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "HealthReportResponse",
                  ">; (this: That, params?: ",
                  "HealthReportRequest",
                  " | ",
                  "HealthReportRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "HealthReportResponse",
                  ", unknown>>; (this: That, params?: ",
                  "HealthReportRequest",
                  " | ",
                  "HealthReportRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "HealthReportResponse",
                  ">; }; ilm: ",
                  "default",
                  "; index: { <TDocument = unknown>(this: That, params: ",
                  "IndexRequest",
                  "<TDocument> | ",
                  "IndexRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; <TDocument = unknown>(this: That, params: ",
                  "IndexRequest",
                  "<TDocument> | ",
                  "IndexRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "WriteResponseBase",
                  ", unknown>>; <TDocument = unknown>(this: That, params: ",
                  "IndexRequest",
                  "<TDocument> | ",
                  "IndexRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; }; indices: ",
                  "default",
                  "; info: { (this: That, params?: ",
                  "InfoRequest",
                  " | ",
                  "InfoRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "InfoResponse",
                  ">; (this: That, params?: ",
                  "InfoRequest",
                  " | ",
                  "InfoRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "InfoResponse",
                  ", unknown>>; (this: That, params?: ",
                  "InfoRequest",
                  " | ",
                  "InfoRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "InfoResponse",
                  ">; }; ingest: ",
                  "default",
                  "; knnSearch: { <TDocument = unknown>(this: That, params: ",
                  "KnnSearchRequest",
                  " | ",
                  "KnnSearchRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "KnnSearchResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params: ",
                  "KnnSearchRequest",
                  " | ",
                  "KnnSearchRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "KnnSearchResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
                  "KnnSearchRequest",
                  " | ",
                  "KnnSearchRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "KnnSearchResponse",
                  "<TDocument>>; }; license: ",
                  "default",
                  "; logstash: ",
                  "default",
                  "; mget: { <TDocument = unknown>(this: That, params?: ",
                  "MgetRequest",
                  " | ",
                  "MgetRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "MgetResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params?: ",
                  "MgetRequest",
                  " | ",
                  "MgetRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "MgetResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params?: ",
                  "MgetRequest",
                  " | ",
                  "MgetRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "MgetResponse",
                  "<TDocument>>; }; migration: ",
                  "default",
                  "; ml: ",
                  "default",
                  "; monitoring: ",
                  "default",
                  "; msearch: { <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchRequest",
                  " | ",
                  "MsearchRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "MsearchResponse",
                  "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchRequest",
                  " | ",
                  "MsearchRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "MsearchResponse",
                  "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchRequest",
                  " | ",
                  "MsearchRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "MsearchResponse",
                  "<TDocument, TAggregations>>; }; msearchTemplate: { <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchTemplateRequest",
                  " | ",
                  "MsearchTemplateRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "MsearchTemplateResponse",
                  "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchTemplateRequest",
                  " | ",
                  "MsearchTemplateRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "MsearchTemplateResponse",
                  "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchTemplateRequest",
                  " | ",
                  "MsearchTemplateRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "MsearchTemplateResponse",
                  "<TDocument, TAggregations>>; }; mtermvectors: { (this: That, params?: ",
                  "MtermvectorsRequest",
                  " | ",
                  "MtermvectorsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "MtermvectorsResponse",
                  ">; (this: That, params?: ",
                  "MtermvectorsRequest",
                  " | ",
                  "MtermvectorsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "MtermvectorsResponse",
                  ", unknown>>; (this: That, params?: ",
                  "MtermvectorsRequest",
                  " | ",
                  "MtermvectorsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "MtermvectorsResponse",
                  ">; }; nodes: ",
                  "default",
                  "; openPointInTime: { (this: That, params: ",
                  "OpenPointInTimeRequest",
                  " | ",
                  "OpenPointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "OpenPointInTimeResponse",
                  ">; (this: That, params: ",
                  "OpenPointInTimeRequest",
                  " | ",
                  "OpenPointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "OpenPointInTimeResponse",
                  ", unknown>>; (this: That, params: ",
                  "OpenPointInTimeRequest",
                  " | ",
                  "OpenPointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "OpenPointInTimeResponse",
                  ">; }; ping: { (this: That, params?: ",
                  "PingRequest",
                  " | ",
                  "PingRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<boolean>; (this: That, params?: ",
                  "PingRequest",
                  " | ",
                  "PingRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<boolean, unknown>>; (this: That, params?: ",
                  "PingRequest",
                  " | ",
                  "PingRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<boolean>; }; putScript: { (this: That, params: ",
                  "PutScriptRequest",
                  " | ",
                  "PutScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "AcknowledgedResponseBase",
                  ">; (this: That, params: ",
                  "PutScriptRequest",
                  " | ",
                  "PutScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "AcknowledgedResponseBase",
                  ", unknown>>; (this: That, params: ",
                  "PutScriptRequest",
                  " | ",
                  "PutScriptRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "AcknowledgedResponseBase",
                  ">; }; rankEval: { (this: That, params: ",
                  "RankEvalRequest",
                  " | ",
                  "RankEvalRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "RankEvalResponse",
                  ">; (this: That, params: ",
                  "RankEvalRequest",
                  " | ",
                  "RankEvalRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "RankEvalResponse",
                  ", unknown>>; (this: That, params: ",
                  "RankEvalRequest",
                  " | ",
                  "RankEvalRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "RankEvalResponse",
                  ">; }; reindex: { (this: That, params: ",
                  "ReindexRequest",
                  " | ",
                  "ReindexRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ReindexResponse",
                  ">; (this: That, params: ",
                  "ReindexRequest",
                  " | ",
                  "ReindexRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ReindexResponse",
                  ", unknown>>; (this: That, params: ",
                  "ReindexRequest",
                  " | ",
                  "ReindexRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ReindexResponse",
                  ">; }; reindexRethrottle: { (this: That, params: ",
                  "ReindexRethrottleRequest",
                  " | ",
                  "ReindexRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ReindexRethrottleResponse",
                  ">; (this: That, params: ",
                  "ReindexRethrottleRequest",
                  " | ",
                  "ReindexRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ReindexRethrottleResponse",
                  ", unknown>>; (this: That, params: ",
                  "ReindexRethrottleRequest",
                  " | ",
                  "ReindexRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ReindexRethrottleResponse",
                  ">; }; renderSearchTemplate: { (this: That, params?: ",
                  "RenderSearchTemplateRequest",
                  " | ",
                  "RenderSearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "RenderSearchTemplateResponse",
                  ">; (this: That, params?: ",
                  "RenderSearchTemplateRequest",
                  " | ",
                  "RenderSearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "RenderSearchTemplateResponse",
                  ", unknown>>; (this: That, params?: ",
                  "RenderSearchTemplateRequest",
                  " | ",
                  "RenderSearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "RenderSearchTemplateResponse",
                  ">; }; rollup: ",
                  "default",
                  "; scriptsPainlessExecute: { <TResult = unknown>(this: That, params?: ",
                  "ScriptsPainlessExecuteRequest",
                  " | ",
                  "ScriptsPainlessExecuteRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ScriptsPainlessExecuteResponse",
                  "<TResult>>; <TResult = unknown>(this: That, params?: ",
                  "ScriptsPainlessExecuteRequest",
                  " | ",
                  "ScriptsPainlessExecuteRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ScriptsPainlessExecuteResponse",
                  "<TResult>, unknown>>; <TResult = unknown>(this: That, params?: ",
                  "ScriptsPainlessExecuteRequest",
                  " | ",
                  "ScriptsPainlessExecuteRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ScriptsPainlessExecuteResponse",
                  "<TResult>>; }; scroll: { <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "ScrollRequest",
                  " | ",
                  "ScrollRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ScrollResponse",
                  "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "ScrollRequest",
                  " | ",
                  "ScrollRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ScrollResponse",
                  "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "ScrollRequest",
                  " | ",
                  "ScrollRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ScrollResponse",
                  "<TDocument, TAggregations>>; }; searchApplication: ",
                  "default",
                  "; searchMvt: { (this: That, params: ",
                  "SearchMvtRequest",
                  " | ",
                  "SearchMvtRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<ArrayBuffer>; (this: That, params: ",
                  "SearchMvtRequest",
                  " | ",
                  "SearchMvtRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<ArrayBuffer, unknown>>; (this: That, params: ",
                  "SearchMvtRequest",
                  " | ",
                  "SearchMvtRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<ArrayBuffer>; }; searchShards: { (this: That, params?: ",
                  "SearchShardsRequest",
                  " | ",
                  "SearchShardsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "SearchShardsResponse",
                  ">; (this: That, params?: ",
                  "SearchShardsRequest",
                  " | ",
                  "SearchShardsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "SearchShardsResponse",
                  ", unknown>>; (this: That, params?: ",
                  "SearchShardsRequest",
                  " | ",
                  "SearchShardsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "SearchShardsResponse",
                  ">; }; searchTemplate: { <TDocument = unknown>(this: That, params?: ",
                  "SearchTemplateRequest",
                  " | ",
                  "SearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "SearchTemplateResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params?: ",
                  "SearchTemplateRequest",
                  " | ",
                  "SearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "SearchTemplateResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params?: ",
                  "SearchTemplateRequest",
                  " | ",
                  "SearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "SearchTemplateResponse",
                  "<TDocument>>; }; searchableSnapshots: ",
                  "default",
                  "; security: ",
                  "default",
                  "; shutdown: ",
                  "default",
                  "; slm: ",
                  "default",
                  "; snapshot: ",
                  "default",
                  "; sql: ",
                  "default",
                  "; ssl: ",
                  "default",
                  "; synonyms: ",
                  "default",
                  "; tasks: ",
                  "default",
                  "; termsEnum: { (this: That, params: ",
                  "TermsEnumRequest",
                  " | ",
                  "TermsEnumRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "TermsEnumResponse",
                  ">; (this: That, params: ",
                  "TermsEnumRequest",
                  " | ",
                  "TermsEnumRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "TermsEnumResponse",
                  ", unknown>>; (this: That, params: ",
                  "TermsEnumRequest",
                  " | ",
                  "TermsEnumRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "TermsEnumResponse",
                  ">; }; termvectors: { <TDocument = unknown>(this: That, params: ",
                  "TermvectorsRequest",
                  "<TDocument> | ",
                  "TermvectorsRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "TermvectorsResponse",
                  ">; <TDocument = unknown>(this: That, params: ",
                  "TermvectorsRequest",
                  "<TDocument> | ",
                  "TermvectorsRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "TermvectorsResponse",
                  ", unknown>>; <TDocument = unknown>(this: That, params: ",
                  "TermvectorsRequest",
                  "<TDocument> | ",
                  "TermvectorsRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "TermvectorsResponse",
                  ">; }; textStructure: ",
                  "default",
                  "; transform: ",
                  "default",
                  "; updateByQuery: { (this: That, params: ",
                  "UpdateByQueryRequest",
                  " | ",
                  "UpdateByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "UpdateByQueryResponse",
                  ">; (this: That, params: ",
                  "UpdateByQueryRequest",
                  " | ",
                  "UpdateByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "UpdateByQueryResponse",
                  ", unknown>>; (this: That, params: ",
                  "UpdateByQueryRequest",
                  " | ",
                  "UpdateByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "UpdateByQueryResponse",
                  ">; }; updateByQueryRethrottle: { (this: That, params: ",
                  "UpdateByQueryRethrottleRequest",
                  " | ",
                  "UpdateByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "UpdateByQueryRethrottleResponse",
                  ">; (this: That, params: ",
                  "UpdateByQueryRethrottleRequest",
                  " | ",
                  "UpdateByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "UpdateByQueryRethrottleResponse",
                  ", unknown>>; (this: That, params: ",
                  "UpdateByQueryRethrottleRequest",
                  " | ",
                  "UpdateByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "UpdateByQueryRethrottleResponse",
                  ">; }; watcher: ",
                  "default",
                  "; xpack: ",
                  "default",
                  "; }"
                ],
                "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.createOrUpdateIndex.$1.logger",
                "type": "Object",
                "tags": [],
                "label": "logger",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/logging",
                    "scope": "common",
                    "docId": "kibKbnLoggingPluginApi",
                    "section": "def-common.Logger",
                    "text": "Logger"
                  }
                ],
                "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.createOrUpdateIndexTemplate",
        "type": "Function",
        "tags": [],
        "label": "createOrUpdateIndexTemplate",
        "description": [],
        "signature": [
          "({\n  indexTemplate,\n  client,\n  logger,\n}: { indexTemplate: ",
          "IndicesPutIndexTemplateRequest",
          "; client: ",
          {
            "pluginId": "@kbn/core-elasticsearch-server",
            "scope": "common",
            "docId": "kibKbnCoreElasticsearchServerPluginApi",
            "section": "def-common.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          "; logger: ",
          {
            "pluginId": "@kbn/logging",
            "scope": "common",
            "docId": "kibKbnLoggingPluginApi",
            "section": "def-common.Logger",
            "text": "Logger"
          },
          "; }) => Promise<",
          "AcknowledgedResponseBase",
          " | undefined>"
        ],
        "path": "x-pack/plugins/observability/server/utils/create_or_update_index_template.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.createOrUpdateIndexTemplate.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  indexTemplate,\n  client,\n  logger,\n}",
            "description": [],
            "path": "x-pack/plugins/observability/server/utils/create_or_update_index_template.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.createOrUpdateIndexTemplate.$1.indexTemplate",
                "type": "Object",
                "tags": [],
                "label": "indexTemplate",
                "description": [],
                "signature": [
                  "IndicesPutIndexTemplateRequest"
                ],
                "path": "x-pack/plugins/observability/server/utils/create_or_update_index_template.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.createOrUpdateIndexTemplate.$1.client",
                "type": "Object",
                "tags": [],
                "label": "client",
                "description": [],
                "signature": [
                  "{ create: { <TDocument = unknown>(this: That, params: ",
                  "CreateRequest",
                  "<TDocument> | ",
                  "CreateRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; <TDocument = unknown>(this: That, params: ",
                  "CreateRequest",
                  "<TDocument> | ",
                  "CreateRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "WriteResponseBase",
                  ", unknown>>; <TDocument = unknown>(this: That, params: ",
                  "CreateRequest",
                  "<TDocument> | ",
                  "CreateRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; }; update: { <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument> | ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "UpdateResponse",
                  "<TDocumentR>>; <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument> | ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "UpdateResponse",
                  "<TDocumentR>, unknown>>; <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument> | ",
                  "UpdateRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "UpdateResponse",
                  "<TDocumentR>>; }; get: { <TDocument = unknown>(this: That, params: ",
                  "GetRequest",
                  " | ",
                  "GetRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "GetResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params: ",
                  "GetRequest",
                  " | ",
                  "GetRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "GetResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
                  "GetRequest",
                  " | ",
                  "GetRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "GetResponse",
                  "<TDocument>>; }; delete: { (this: That, params: ",
                  "DeleteRequest",
                  " | ",
                  "DeleteRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; (this: That, params: ",
                  "DeleteRequest",
                  " | ",
                  "DeleteRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "WriteResponseBase",
                  ", unknown>>; (this: That, params: ",
                  "DeleteRequest",
                  " | ",
                  "DeleteRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; }; search: { <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params?: ",
                  "SearchRequest",
                  " | ",
                  "SearchRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "SearchResponse",
                  "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params?: ",
                  "SearchRequest",
                  " | ",
                  "SearchRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "SearchResponse",
                  "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params?: ",
                  "SearchRequest",
                  " | ",
                  "SearchRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "SearchResponse",
                  "<TDocument, TAggregations>>; }; helpers: ",
                  "default",
                  "; name: string | symbol; [kAsyncSearch]: symbol | null; [kAutoscaling]: symbol | null; [kCat]: symbol | null; [kCcr]: symbol | null; [kCluster]: symbol | null; [kDanglingIndices]: symbol | null; [kEnrich]: symbol | null; [kEql]: symbol | null; [kFeatures]: symbol | null; [kFleet]: symbol | null; [kGraph]: symbol | null; [kIlm]: symbol | null; [kIndices]: symbol | null; [kIngest]: symbol | null; [kLicense]: symbol | null; [kLogstash]: symbol | null; [kMigration]: symbol | null; [kMl]: symbol | null; [kMonitoring]: symbol | null; [kNodes]: symbol | null; [kRollup]: symbol | null; [kSearchApplication]: symbol | null; [kSearchableSnapshots]: symbol | null; [kSecurity]: symbol | null; [kShutdown]: symbol | null; [kSlm]: symbol | null; [kSnapshot]: symbol | null; [kSql]: symbol | null; [kSsl]: symbol | null; [kSynonyms]: symbol | null; [kTasks]: symbol | null; [kTextStructure]: symbol | null; [kTransform]: symbol | null; [kWatcher]: symbol | null; [kXpack]: symbol | null; transport: ",
                  "default",
                  "; child: (opts: ",
                  "ClientOptions",
                  ") => ",
                  "default",
                  "; asyncSearch: ",
                  "default",
                  "; autoscaling: ",
                  "default",
                  "; bulk: { <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument> | ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "BulkResponse",
                  ">; <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument> | ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "BulkResponse",
                  ", unknown>>; <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument> | ",
                  "BulkRequest",
                  "<TDocument, TPartialDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "BulkResponse",
                  ">; }; cat: ",
                  "default",
                  "; ccr: ",
                  "default",
                  "; clearScroll: { (this: That, params?: ",
                  "ClearScrollRequest",
                  " | ",
                  "ClearScrollRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ClearScrollResponse",
                  ">; (this: That, params?: ",
                  "ClearScrollRequest",
                  " | ",
                  "ClearScrollRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ClearScrollResponse",
                  ", unknown>>; (this: That, params?: ",
                  "ClearScrollRequest",
                  " | ",
                  "ClearScrollRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ClearScrollResponse",
                  ">; }; closePointInTime: { (this: That, params: ",
                  "ClosePointInTimeRequest",
                  " | ",
                  "ClosePointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ClosePointInTimeResponse",
                  ">; (this: That, params: ",
                  "ClosePointInTimeRequest",
                  " | ",
                  "ClosePointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ClosePointInTimeResponse",
                  ", unknown>>; (this: That, params: ",
                  "ClosePointInTimeRequest",
                  " | ",
                  "ClosePointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ClosePointInTimeResponse",
                  ">; }; cluster: ",
                  "default",
                  "; count: { (this: That, params?: ",
                  "CountRequest",
                  " | ",
                  "CountRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "CountResponse",
                  ">; (this: That, params?: ",
                  "CountRequest",
                  " | ",
                  "CountRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "CountResponse",
                  ", unknown>>; (this: That, params?: ",
                  "CountRequest",
                  " | ",
                  "CountRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "CountResponse",
                  ">; }; danglingIndices: ",
                  "default",
                  "; deleteByQuery: { (this: That, params: ",
                  "DeleteByQueryRequest",
                  " | ",
                  "DeleteByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "DeleteByQueryResponse",
                  ">; (this: That, params: ",
                  "DeleteByQueryRequest",
                  " | ",
                  "DeleteByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "DeleteByQueryResponse",
                  ", unknown>>; (this: That, params: ",
                  "DeleteByQueryRequest",
                  " | ",
                  "DeleteByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "DeleteByQueryResponse",
                  ">; }; deleteByQueryRethrottle: { (this: That, params: ",
                  "DeleteByQueryRethrottleRequest",
                  " | ",
                  "DeleteByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "TasksTaskListResponseBase",
                  ">; (this: That, params: ",
                  "DeleteByQueryRethrottleRequest",
                  " | ",
                  "DeleteByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "TasksTaskListResponseBase",
                  ", unknown>>; (this: That, params: ",
                  "DeleteByQueryRethrottleRequest",
                  " | ",
                  "DeleteByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "TasksTaskListResponseBase",
                  ">; }; deleteScript: { (this: That, params: ",
                  "DeleteScriptRequest",
                  " | ",
                  "DeleteScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "AcknowledgedResponseBase",
                  ">; (this: That, params: ",
                  "DeleteScriptRequest",
                  " | ",
                  "DeleteScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "AcknowledgedResponseBase",
                  ", unknown>>; (this: That, params: ",
                  "DeleteScriptRequest",
                  " | ",
                  "DeleteScriptRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "AcknowledgedResponseBase",
                  ">; }; enrich: ",
                  "default",
                  "; eql: ",
                  "default",
                  "; exists: { (this: That, params: ",
                  "ExistsRequest",
                  " | ",
                  "ExistsRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<boolean>; (this: That, params: ",
                  "ExistsRequest",
                  " | ",
                  "ExistsRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<boolean, unknown>>; (this: That, params: ",
                  "ExistsRequest",
                  " | ",
                  "ExistsRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<boolean>; }; existsSource: { (this: That, params: ",
                  "ExistsSourceRequest",
                  " | ",
                  "ExistsSourceRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<boolean>; (this: That, params: ",
                  "ExistsSourceRequest",
                  " | ",
                  "ExistsSourceRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<boolean, unknown>>; (this: That, params: ",
                  "ExistsSourceRequest",
                  " | ",
                  "ExistsSourceRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<boolean>; }; explain: { <TDocument = unknown>(this: That, params: ",
                  "ExplainRequest",
                  " | ",
                  "ExplainRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ExplainResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params: ",
                  "ExplainRequest",
                  " | ",
                  "ExplainRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ExplainResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
                  "ExplainRequest",
                  " | ",
                  "ExplainRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ExplainResponse",
                  "<TDocument>>; }; features: ",
                  "default",
                  "; fieldCaps: { (this: That, params?: ",
                  "FieldCapsRequest",
                  " | ",
                  "FieldCapsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "FieldCapsResponse",
                  ">; (this: That, params?: ",
                  "FieldCapsRequest",
                  " | ",
                  "FieldCapsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "FieldCapsResponse",
                  ", unknown>>; (this: That, params?: ",
                  "FieldCapsRequest",
                  " | ",
                  "FieldCapsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "FieldCapsResponse",
                  ">; }; fleet: ",
                  "default",
                  "; getScript: { (this: That, params: ",
                  "GetScriptRequest",
                  " | ",
                  "GetScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "GetScriptResponse",
                  ">; (this: That, params: ",
                  "GetScriptRequest",
                  " | ",
                  "GetScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "GetScriptResponse",
                  ", unknown>>; (this: That, params: ",
                  "GetScriptRequest",
                  " | ",
                  "GetScriptRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "GetScriptResponse",
                  ">; }; getScriptContext: { (this: That, params?: ",
                  "GetScriptContextRequest",
                  " | ",
                  "GetScriptContextRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "GetScriptContextResponse",
                  ">; (this: That, params?: ",
                  "GetScriptContextRequest",
                  " | ",
                  "GetScriptContextRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "GetScriptContextResponse",
                  ", unknown>>; (this: That, params?: ",
                  "GetScriptContextRequest",
                  " | ",
                  "GetScriptContextRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "GetScriptContextResponse",
                  ">; }; getScriptLanguages: { (this: That, params?: ",
                  "GetScriptLanguagesRequest",
                  " | ",
                  "GetScriptLanguagesRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "GetScriptLanguagesResponse",
                  ">; (this: That, params?: ",
                  "GetScriptLanguagesRequest",
                  " | ",
                  "GetScriptLanguagesRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "GetScriptLanguagesResponse",
                  ", unknown>>; (this: That, params?: ",
                  "GetScriptLanguagesRequest",
                  " | ",
                  "GetScriptLanguagesRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "GetScriptLanguagesResponse",
                  ">; }; getSource: { <TDocument = unknown>(this: That, params: ",
                  "GetSourceRequest",
                  " | ",
                  "GetSourceRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<TDocument>; <TDocument = unknown>(this: That, params: ",
                  "GetSourceRequest",
                  " | ",
                  "GetSourceRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<TDocument, unknown>>; <TDocument = unknown>(this: That, params: ",
                  "GetSourceRequest",
                  " | ",
                  "GetSourceRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<TDocument>; }; graph: ",
                  "default",
                  "; healthReport: { (this: That, params?: ",
                  "HealthReportRequest",
                  " | ",
                  "HealthReportRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "HealthReportResponse",
                  ">; (this: That, params?: ",
                  "HealthReportRequest",
                  " | ",
                  "HealthReportRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "HealthReportResponse",
                  ", unknown>>; (this: That, params?: ",
                  "HealthReportRequest",
                  " | ",
                  "HealthReportRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "HealthReportResponse",
                  ">; }; ilm: ",
                  "default",
                  "; index: { <TDocument = unknown>(this: That, params: ",
                  "IndexRequest",
                  "<TDocument> | ",
                  "IndexRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; <TDocument = unknown>(this: That, params: ",
                  "IndexRequest",
                  "<TDocument> | ",
                  "IndexRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "WriteResponseBase",
                  ", unknown>>; <TDocument = unknown>(this: That, params: ",
                  "IndexRequest",
                  "<TDocument> | ",
                  "IndexRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "WriteResponseBase",
                  ">; }; indices: ",
                  "default",
                  "; info: { (this: That, params?: ",
                  "InfoRequest",
                  " | ",
                  "InfoRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "InfoResponse",
                  ">; (this: That, params?: ",
                  "InfoRequest",
                  " | ",
                  "InfoRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "InfoResponse",
                  ", unknown>>; (this: That, params?: ",
                  "InfoRequest",
                  " | ",
                  "InfoRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "InfoResponse",
                  ">; }; ingest: ",
                  "default",
                  "; knnSearch: { <TDocument = unknown>(this: That, params: ",
                  "KnnSearchRequest",
                  " | ",
                  "KnnSearchRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "KnnSearchResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params: ",
                  "KnnSearchRequest",
                  " | ",
                  "KnnSearchRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "KnnSearchResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
                  "KnnSearchRequest",
                  " | ",
                  "KnnSearchRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "KnnSearchResponse",
                  "<TDocument>>; }; license: ",
                  "default",
                  "; logstash: ",
                  "default",
                  "; mget: { <TDocument = unknown>(this: That, params?: ",
                  "MgetRequest",
                  " | ",
                  "MgetRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "MgetResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params?: ",
                  "MgetRequest",
                  " | ",
                  "MgetRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "MgetResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params?: ",
                  "MgetRequest",
                  " | ",
                  "MgetRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "MgetResponse",
                  "<TDocument>>; }; migration: ",
                  "default",
                  "; ml: ",
                  "default",
                  "; monitoring: ",
                  "default",
                  "; msearch: { <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchRequest",
                  " | ",
                  "MsearchRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "MsearchResponse",
                  "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchRequest",
                  " | ",
                  "MsearchRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "MsearchResponse",
                  "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchRequest",
                  " | ",
                  "MsearchRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "MsearchResponse",
                  "<TDocument, TAggregations>>; }; msearchTemplate: { <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchTemplateRequest",
                  " | ",
                  "MsearchTemplateRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "MsearchTemplateResponse",
                  "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchTemplateRequest",
                  " | ",
                  "MsearchTemplateRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "MsearchTemplateResponse",
                  "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "MsearchTemplateRequest",
                  " | ",
                  "MsearchTemplateRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "MsearchTemplateResponse",
                  "<TDocument, TAggregations>>; }; mtermvectors: { (this: That, params?: ",
                  "MtermvectorsRequest",
                  " | ",
                  "MtermvectorsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "MtermvectorsResponse",
                  ">; (this: That, params?: ",
                  "MtermvectorsRequest",
                  " | ",
                  "MtermvectorsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "MtermvectorsResponse",
                  ", unknown>>; (this: That, params?: ",
                  "MtermvectorsRequest",
                  " | ",
                  "MtermvectorsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "MtermvectorsResponse",
                  ">; }; nodes: ",
                  "default",
                  "; openPointInTime: { (this: That, params: ",
                  "OpenPointInTimeRequest",
                  " | ",
                  "OpenPointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "OpenPointInTimeResponse",
                  ">; (this: That, params: ",
                  "OpenPointInTimeRequest",
                  " | ",
                  "OpenPointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "OpenPointInTimeResponse",
                  ", unknown>>; (this: That, params: ",
                  "OpenPointInTimeRequest",
                  " | ",
                  "OpenPointInTimeRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "OpenPointInTimeResponse",
                  ">; }; ping: { (this: That, params?: ",
                  "PingRequest",
                  " | ",
                  "PingRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<boolean>; (this: That, params?: ",
                  "PingRequest",
                  " | ",
                  "PingRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<boolean, unknown>>; (this: That, params?: ",
                  "PingRequest",
                  " | ",
                  "PingRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<boolean>; }; putScript: { (this: That, params: ",
                  "PutScriptRequest",
                  " | ",
                  "PutScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "AcknowledgedResponseBase",
                  ">; (this: That, params: ",
                  "PutScriptRequest",
                  " | ",
                  "PutScriptRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "AcknowledgedResponseBase",
                  ", unknown>>; (this: That, params: ",
                  "PutScriptRequest",
                  " | ",
                  "PutScriptRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "AcknowledgedResponseBase",
                  ">; }; rankEval: { (this: That, params: ",
                  "RankEvalRequest",
                  " | ",
                  "RankEvalRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "RankEvalResponse",
                  ">; (this: That, params: ",
                  "RankEvalRequest",
                  " | ",
                  "RankEvalRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "RankEvalResponse",
                  ", unknown>>; (this: That, params: ",
                  "RankEvalRequest",
                  " | ",
                  "RankEvalRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "RankEvalResponse",
                  ">; }; reindex: { (this: That, params: ",
                  "ReindexRequest",
                  " | ",
                  "ReindexRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ReindexResponse",
                  ">; (this: That, params: ",
                  "ReindexRequest",
                  " | ",
                  "ReindexRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ReindexResponse",
                  ", unknown>>; (this: That, params: ",
                  "ReindexRequest",
                  " | ",
                  "ReindexRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ReindexResponse",
                  ">; }; reindexRethrottle: { (this: That, params: ",
                  "ReindexRethrottleRequest",
                  " | ",
                  "ReindexRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ReindexRethrottleResponse",
                  ">; (this: That, params: ",
                  "ReindexRethrottleRequest",
                  " | ",
                  "ReindexRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ReindexRethrottleResponse",
                  ", unknown>>; (this: That, params: ",
                  "ReindexRethrottleRequest",
                  " | ",
                  "ReindexRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ReindexRethrottleResponse",
                  ">; }; renderSearchTemplate: { (this: That, params?: ",
                  "RenderSearchTemplateRequest",
                  " | ",
                  "RenderSearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "RenderSearchTemplateResponse",
                  ">; (this: That, params?: ",
                  "RenderSearchTemplateRequest",
                  " | ",
                  "RenderSearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "RenderSearchTemplateResponse",
                  ", unknown>>; (this: That, params?: ",
                  "RenderSearchTemplateRequest",
                  " | ",
                  "RenderSearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "RenderSearchTemplateResponse",
                  ">; }; rollup: ",
                  "default",
                  "; scriptsPainlessExecute: { <TResult = unknown>(this: That, params?: ",
                  "ScriptsPainlessExecuteRequest",
                  " | ",
                  "ScriptsPainlessExecuteRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ScriptsPainlessExecuteResponse",
                  "<TResult>>; <TResult = unknown>(this: That, params?: ",
                  "ScriptsPainlessExecuteRequest",
                  " | ",
                  "ScriptsPainlessExecuteRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ScriptsPainlessExecuteResponse",
                  "<TResult>, unknown>>; <TResult = unknown>(this: That, params?: ",
                  "ScriptsPainlessExecuteRequest",
                  " | ",
                  "ScriptsPainlessExecuteRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ScriptsPainlessExecuteResponse",
                  "<TResult>>; }; scroll: { <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "ScrollRequest",
                  " | ",
                  "ScrollRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "ScrollResponse",
                  "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "ScrollRequest",
                  " | ",
                  "ScrollRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "ScrollResponse",
                  "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                  "AggregationsAggregate",
                  ">>(this: That, params: ",
                  "ScrollRequest",
                  " | ",
                  "ScrollRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "ScrollResponse",
                  "<TDocument, TAggregations>>; }; searchApplication: ",
                  "default",
                  "; searchMvt: { (this: That, params: ",
                  "SearchMvtRequest",
                  " | ",
                  "SearchMvtRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<ArrayBuffer>; (this: That, params: ",
                  "SearchMvtRequest",
                  " | ",
                  "SearchMvtRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<ArrayBuffer, unknown>>; (this: That, params: ",
                  "SearchMvtRequest",
                  " | ",
                  "SearchMvtRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<ArrayBuffer>; }; searchShards: { (this: That, params?: ",
                  "SearchShardsRequest",
                  " | ",
                  "SearchShardsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "SearchShardsResponse",
                  ">; (this: That, params?: ",
                  "SearchShardsRequest",
                  " | ",
                  "SearchShardsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "SearchShardsResponse",
                  ", unknown>>; (this: That, params?: ",
                  "SearchShardsRequest",
                  " | ",
                  "SearchShardsRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "SearchShardsResponse",
                  ">; }; searchTemplate: { <TDocument = unknown>(this: That, params?: ",
                  "SearchTemplateRequest",
                  " | ",
                  "SearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "SearchTemplateResponse",
                  "<TDocument>>; <TDocument = unknown>(this: That, params?: ",
                  "SearchTemplateRequest",
                  " | ",
                  "SearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "SearchTemplateResponse",
                  "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params?: ",
                  "SearchTemplateRequest",
                  " | ",
                  "SearchTemplateRequest",
                  " | undefined, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "SearchTemplateResponse",
                  "<TDocument>>; }; searchableSnapshots: ",
                  "default",
                  "; security: ",
                  "default",
                  "; shutdown: ",
                  "default",
                  "; slm: ",
                  "default",
                  "; snapshot: ",
                  "default",
                  "; sql: ",
                  "default",
                  "; ssl: ",
                  "default",
                  "; synonyms: ",
                  "default",
                  "; tasks: ",
                  "default",
                  "; termsEnum: { (this: That, params: ",
                  "TermsEnumRequest",
                  " | ",
                  "TermsEnumRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "TermsEnumResponse",
                  ">; (this: That, params: ",
                  "TermsEnumRequest",
                  " | ",
                  "TermsEnumRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "TermsEnumResponse",
                  ", unknown>>; (this: That, params: ",
                  "TermsEnumRequest",
                  " | ",
                  "TermsEnumRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "TermsEnumResponse",
                  ">; }; termvectors: { <TDocument = unknown>(this: That, params: ",
                  "TermvectorsRequest",
                  "<TDocument> | ",
                  "TermvectorsRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "TermvectorsResponse",
                  ">; <TDocument = unknown>(this: That, params: ",
                  "TermvectorsRequest",
                  "<TDocument> | ",
                  "TermvectorsRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "TermvectorsResponse",
                  ", unknown>>; <TDocument = unknown>(this: That, params: ",
                  "TermvectorsRequest",
                  "<TDocument> | ",
                  "TermvectorsRequest",
                  "<TDocument>, options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "TermvectorsResponse",
                  ">; }; textStructure: ",
                  "default",
                  "; transform: ",
                  "default",
                  "; updateByQuery: { (this: That, params: ",
                  "UpdateByQueryRequest",
                  " | ",
                  "UpdateByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "UpdateByQueryResponse",
                  ">; (this: That, params: ",
                  "UpdateByQueryRequest",
                  " | ",
                  "UpdateByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "UpdateByQueryResponse",
                  ", unknown>>; (this: That, params: ",
                  "UpdateByQueryRequest",
                  " | ",
                  "UpdateByQueryRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "UpdateByQueryResponse",
                  ">; }; updateByQueryRethrottle: { (this: That, params: ",
                  "UpdateByQueryRethrottleRequest",
                  " | ",
                  "UpdateByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithOutMeta",
                  " | undefined): Promise<",
                  "UpdateByQueryRethrottleResponse",
                  ">; (this: That, params: ",
                  "UpdateByQueryRethrottleRequest",
                  " | ",
                  "UpdateByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptionsWithMeta",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<",
                  "UpdateByQueryRethrottleResponse",
                  ", unknown>>; (this: That, params: ",
                  "UpdateByQueryRethrottleRequest",
                  " | ",
                  "UpdateByQueryRethrottleRequest",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "UpdateByQueryRethrottleResponse",
                  ">; }; watcher: ",
                  "default",
                  "; xpack: ",
                  "default",
                  "; }"
                ],
                "path": "x-pack/plugins/observability/server/utils/create_or_update_index_template.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.createOrUpdateIndexTemplate.$1.logger",
                "type": "Object",
                "tags": [],
                "label": "logger",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/logging",
                    "scope": "common",
                    "docId": "kibKbnLoggingPluginApi",
                    "section": "def-common.Logger",
                    "text": "Logger"
                  }
                ],
                "path": "x-pack/plugins/observability/server/utils/create_or_update_index_template.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.getInspectResponse",
        "type": "Function",
        "tags": [],
        "label": "getInspectResponse",
        "description": [
          "\nCreate a formatted response to be sent in the _inspect key for use in the\ninspector."
        ],
        "signature": [
          "({\n  esError,\n  esRequestParams,\n  esRequestStatus,\n  esResponse,\n  kibanaRequest,\n  operationName,\n  startTime,\n}: { esError: ",
          "WrappedElasticsearchClientError",
          " | null; esRequestParams: Record<string, any>; esRequestStatus: ",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.RequestStatus",
            "text": "RequestStatus"
          },
          "; esResponse: any; kibanaRequest: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>; operationName: string; startTime: number; }) => ",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Request",
            "text": "Request"
          }
        ],
        "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.getInspectResponse.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  esError,\n  esRequestParams,\n  esRequestStatus,\n  esResponse,\n  kibanaRequest,\n  operationName,\n  startTime,\n}",
            "description": [],
            "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.esError",
                "type": "CompoundType",
                "tags": [],
                "label": "esError",
                "description": [],
                "signature": [
                  "WrappedElasticsearchClientError",
                  " | null"
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.esRequestParams",
                "type": "Object",
                "tags": [],
                "label": "esRequestParams",
                "description": [],
                "signature": [
                  "{ [x: string]: any; }"
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.esRequestStatus",
                "type": "Enum",
                "tags": [],
                "label": "esRequestStatus",
                "description": [],
                "signature": [
                  {
                    "pluginId": "inspector",
                    "scope": "common",
                    "docId": "kibInspectorPluginApi",
                    "section": "def-common.RequestStatus",
                    "text": "RequestStatus"
                  }
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.esResponse",
                "type": "Any",
                "tags": [],
                "label": "esResponse",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.kibanaRequest",
                "type": "Object",
                "tags": [],
                "label": "kibanaRequest",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.operationName",
                "type": "string",
                "tags": [],
                "label": "operationName",
                "description": [],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.startTime",
                "type": "number",
                "tags": [],
                "label": "startTime",
                "description": [],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.getParsedFilterQuery",
        "type": "Function",
        "tags": [],
        "label": "getParsedFilterQuery",
        "description": [],
        "signature": [
          "(filter: string | undefined) => ",
          "QueryDslQueryContainer",
          "[]"
        ],
        "path": "x-pack/plugins/observability/server/utils/get_parsed_filtered_query.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.getParsedFilterQuery.$1",
            "type": "string",
            "tags": [],
            "label": "filter",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/server/utils/get_parsed_filtered_query.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.kqlQuery",
        "type": "Function",
        "tags": [],
        "label": "kqlQuery",
        "description": [],
        "signature": [
          "(kql: string | undefined) => ",
          "QueryDslQueryContainer",
          "[]"
        ],
        "path": "x-pack/plugins/observability/server/utils/queries.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.kqlQuery.$1",
            "type": "string",
            "tags": [],
            "label": "kql",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.rangeQuery",
        "type": "Function",
        "tags": [],
        "label": "rangeQuery",
        "description": [],
        "signature": [
          "(start: number | undefined, end: number | undefined, field: string) => ",
          "QueryDslQueryContainer",
          "[]"
        ],
        "path": "x-pack/plugins/observability/server/utils/queries.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.rangeQuery.$1",
            "type": "number",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.rangeQuery.$2",
            "type": "number",
            "tags": [],
            "label": "end",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.rangeQuery.$3",
            "type": "string",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.termQuery",
        "type": "Function",
        "tags": [],
        "label": "termQuery",
        "description": [],
        "signature": [
          "(field: T, value: string | number | boolean | null | undefined, opts: TermQueryOpts) => ",
          "QueryDslQueryContainer",
          "[]"
        ],
        "path": "x-pack/plugins/observability/server/utils/queries.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.termQuery.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "T"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.termQuery.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              "string | number | boolean | null | undefined"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.termQuery.$3",
            "type": "Object",
            "tags": [],
            "label": "opts",
            "description": [],
            "signature": [
              "TermQueryOpts"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.termsQuery",
        "type": "Function",
        "tags": [],
        "label": "termsQuery",
        "description": [],
        "signature": [
          "(field: string, values: (string | number | boolean | null | undefined)[]) => ",
          "QueryDslQueryContainer",
          "[]"
        ],
        "path": "x-pack/plugins/observability/server/utils/queries.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.termsQuery.$1",
            "type": "string",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.termsQuery.$2",
            "type": "Array",
            "tags": [],
            "label": "values",
            "description": [],
            "signature": [
              "(string | number | boolean | null | undefined)[]"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.unwrapEsResponse",
        "type": "Function",
        "tags": [],
        "label": "unwrapEsResponse",
        "description": [],
        "signature": [
          "(responsePromise: T) => Promise<Awaited<T>[\"body\"]>"
        ],
        "path": "x-pack/plugins/observability/common/utils/unwrap_es_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.unwrapEsResponse.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "responsePromise",
            "description": [],
            "signature": [
              "T"
            ],
            "path": "x-pack/plugins/observability/common/utils/unwrap_es_response.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "observability",
        "id": "def-server.ObservabilityRouteCreateOptions",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityRouteCreateOptions",
        "description": [],
        "path": "x-pack/plugins/observability/server/routes/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.ObservabilityRouteCreateOptions.options",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "{ tags: string[]; access?: \"public\" | \"internal\" | undefined; }"
            ],
            "path": "x-pack/plugins/observability/server/routes/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.ObservabilityRouteHandlerResources",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityRouteHandlerResources",
        "description": [],
        "path": "x-pack/plugins/observability/server/routes/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.ObservabilityRouteHandlerResources.context",
            "type": "CompoundType",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              " & { licensing: Promise<",
              {
                "pluginId": "licensing",
                "scope": "server",
                "docId": "kibLicensingPluginApi",
                "section": "def-server.LicensingApiRequestHandlerContext",
                "text": "LicensingApiRequestHandlerContext"
              },
              ">; alerting: Promise<",
              {
                "pluginId": "alerting",
                "scope": "server",
                "docId": "kibAlertingPluginApi",
                "section": "def-server.AlertingApiRequestHandlerContext",
                "text": "AlertingApiRequestHandlerContext"
              },
              ">; core: Promise<",
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.CoreRequestHandlerContext",
                "text": "CoreRequestHandlerContext"
              },
              ">; }"
            ],
            "path": "x-pack/plugins/observability/server/routes/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.ObservabilityRouteHandlerResources.dependencies",
            "type": "Object",
            "tags": [],
            "label": "dependencies",
            "description": [],
            "signature": [
              "RegisterRoutesDependencies"
            ],
            "path": "x-pack/plugins/observability/server/routes/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.ObservabilityRouteHandlerResources.logger",
            "type": "Object",
            "tags": [],
            "label": "logger",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/logging",
                "scope": "common",
                "docId": "kibKbnLoggingPluginApi",
                "section": "def-common.Logger",
                "text": "Logger"
              }
            ],
            "path": "x-pack/plugins/observability/server/routes/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.ObservabilityRouteHandlerResources.request",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "x-pack/plugins/observability/server/routes/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.ObservabilityRouteHandlerResources.config",
            "type": "Object",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "{ readonly enabled: boolean; readonly unsafe: Readonly<{} & { alertDetails: Readonly<{} & { uptime: Readonly<{} & { enabled: boolean; }>; observability: Readonly<{} & { enabled: boolean; }>; metrics: Readonly<{} & { enabled: boolean; }>; logs: Readonly<{} & { enabled: boolean; }>; }>; thresholdRule: Readonly<{} & { enabled: boolean; }>; }>; readonly annotations: Readonly<{} & { index: string; enabled: boolean; }>; readonly customThresholdRule: Readonly<{} & { groupByPageSize: number; }>; readonly createO11yGenericFeatureId: boolean; }"
            ],
            "path": "x-pack/plugins/observability/server/routes/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "observability",
        "id": "def-server.AbstractObservabilityServerRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "AbstractObservabilityServerRouteRepository",
        "description": [],
        "signature": [
          "{ [x: string]: { endpoint: string; params?: ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-common.RouteParamsRT",
            "text": "RouteParamsRT"
          },
          " | undefined; handler: ({}: any) => Promise<any>; } & Record<string, any>; }"
        ],
        "path": "x-pack/plugins/observability/server/routes/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.Mappings",
        "type": "Type",
        "tags": [],
        "label": "Mappings",
        "description": [],
        "signature": [
          "MappingTypeMapping",
          " & { date_detection?: boolean | undefined; dynamic?: ",
          "MappingDynamicMapping",
          " | undefined; dynamic_date_formats?: string[] | undefined; dynamic_templates?: Record<string, ",
          "MappingDynamicTemplate",
          "> | Record<string, ",
          "MappingDynamicTemplate",
          ">[] | undefined; _field_names?: ",
          "MappingFieldNamesField",
          " | undefined; _meta?: ",
          "Metadata",
          " | undefined; numeric_detection?: boolean | undefined; properties?: Record<string, ",
          "MappingProperty",
          "> | undefined; _routing?: ",
          "MappingRoutingField",
          " | undefined; _source?: ",
          "MappingSourceField",
          " | undefined; runtime?: ",
          "MappingRuntimeFields",
          " | undefined; }"
        ],
        "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.ObservabilityAPIReturnType",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityAPIReturnType",
        "description": [],
        "signature": [
          "{ \"GET /internal/observability/slos/{id}/_instances\": { endpoint: \"GET /internal/observability/slos/{id}/_instances\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; }; }) => Promise<{ groupBy: string; instances: string[]; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /internal/observability/slos/_preview\": { endpoint: \"POST /internal/observability/slos/_preview\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ indicator: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.apm.transactionDuration\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; service: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; threshold: ",
          "NumberC",
          "; index: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.apm.transactionErrorRate\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; service: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; index: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.kql.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; good: ",
          "StringC",
          "; total: ",
          "StringC",
          "; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.metric.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; good: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ sum: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>>; equation: ",
          "StringC",
          "; }>; total: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ sum: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>>; equation: ",
          "StringC",
          "; }>; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.metric.timeslice\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; metric: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ avg: boolean; max: boolean; min: boolean; sum: boolean; cardinality: boolean; last_value: boolean; std_deviation: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"doc_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"percentile\">; field: ",
          "StringC",
          "; percentile: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>>; equation: ",
          "StringC",
          "; threshold: ",
          "NumberC",
          "; comparator: ",
          "KeyofC",
          "<{ GT: string; GTE: string; LT: string; LTE: string; }>; }>; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.histogram.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; timestampField: ",
          "StringC",
          "; good: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"value_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"range\">; from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>; total: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"value_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"range\">; from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>]>; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { body: { indicator: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; }; }; }; }) => Promise<{ date: string; sliValue: number; }[]>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /internal/observability/slos/{id}/_burn_rates\": { endpoint: \"POST /internal/observability/slos/{id}/_burn_rates\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ instanceId: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; windows: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; duration: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; }>>; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; body: { instanceId: string; windows: { name: string; duration: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          "; }[]; }; }; }) => Promise<{ burnRates: { name: string; burnRate: number; sli: number; }[]; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"GET /internal/observability/slos/_diagnosis\": { endpoint: \"GET /internal/observability/slos/_diagnosis\"; params?: undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          ") => Promise<{ licenseAndFeatures: ",
          "PublicLicenseJSON",
          "; userPrivileges: { write: ",
          "SecurityHasPrivilegesResponse",
          "; read: ",
          "SecurityHasPrivilegesResponse",
          "; }; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"PUT /api/observability/slos/{id} 2023-10-31\": { endpoint: \"PUT /api/observability/slos/{id} 2023-10-31\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; body: ",
          "PartialC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; indicator: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.apm.transactionDuration\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; service: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; threshold: ",
          "NumberC",
          "; index: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.apm.transactionErrorRate\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; service: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; index: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.kql.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; good: ",
          "StringC",
          "; total: ",
          "StringC",
          "; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.metric.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; good: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ sum: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>>; equation: ",
          "StringC",
          "; }>; total: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ sum: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>>; equation: ",
          "StringC",
          "; }>; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.metric.timeslice\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; metric: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ avg: boolean; max: boolean; min: boolean; sum: boolean; cardinality: boolean; last_value: boolean; std_deviation: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"doc_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"percentile\">; field: ",
          "StringC",
          "; percentile: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>>; equation: ",
          "StringC",
          "; threshold: ",
          "NumberC",
          "; comparator: ",
          "KeyofC",
          "<{ GT: string; GTE: string; LT: string; LTE: string; }>; }>; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.histogram.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; timestampField: ",
          "StringC",
          "; good: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"value_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"range\">; from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>; total: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"value_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"range\">; from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>]>; timeWindow: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ duration: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; type: ",
          "LiteralC",
          "<\"rolling\">; }>, ",
          "TypeC",
          "<{ duration: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; type: ",
          "LiteralC",
          "<\"calendarAligned\">; }>]>; budgetingMethod: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"occurrences\">, ",
          "LiteralC",
          "<\"timeslices\">]>; objective: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ target: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ timesliceTarget: ",
          "NumberC",
          "; timesliceWindow: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; }>]>; settings: ",
          "PartialC",
          "<{ syncDelay: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; frequency: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; }>; tags: ",
          "ArrayC",
          "<",
          "StringC",
          ">; groupBy: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; body: { name?: string | undefined; description?: string | undefined; indicator?: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; } | undefined; timeWindow?: { duration: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          "; type: \"rolling\"; } | { duration: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          "; type: \"calendarAligned\"; } | undefined; budgetingMethod?: \"occurrences\" | \"timeslices\" | undefined; objective?: ({ target: number; } & { timesliceTarget?: number | undefined; timesliceWindow?: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          " | undefined; }) | undefined; settings?: { syncDelay?: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          " | undefined; frequency?: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          " | undefined; } | undefined; tags?: string[] | undefined; groupBy?: string | undefined; }; }; }) => Promise<{ id: string; name: string; description: string; indicator: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; }; timeWindow: { duration: string; type: \"rolling\"; } | { duration: string; type: \"calendarAligned\"; }; budgetingMethod: \"occurrences\" | \"timeslices\"; objective: { target: number; } & { timesliceTarget?: number | undefined; timesliceWindow?: string | undefined; }; revision: number; settings: { syncDelay: string; frequency: string; }; enabled: boolean; tags: string[]; groupBy: string; createdAt: string; updatedAt: string; } & { instanceId?: string | undefined; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"GET /api/observability/slos/{id} 2023-10-31\": { endpoint: \"GET /api/observability/slos/{id} 2023-10-31\"; params?: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }>, ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ instanceId: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; }>; }>]> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; } & { query?: { instanceId?: string | undefined; } | undefined; }; }) => Promise<{ id: string; name: string; description: string; indicator: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; }; timeWindow: { duration: string; type: \"rolling\"; } | { duration: string; type: \"calendarAligned\"; }; budgetingMethod: \"occurrences\" | \"timeslices\"; objective: { target: number; } & { timesliceTarget?: number | undefined; timesliceWindow?: string | undefined; }; revision: number; settings: { syncDelay: string; frequency: string; }; enabled: boolean; tags: string[]; groupBy: string; createdAt: string; updatedAt: string; } & { instanceId?: string | undefined; } & { summary: { status: \"HEALTHY\" | \"NO_DATA\" | \"DEGRADING\" | \"VIOLATED\"; sliValue: number; errorBudget: { initial: number; consumed: number; remaining: number; isEstimated: boolean; }; }; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"GET /api/observability/slos 2023-10-31\": { endpoint: \"GET /api/observability/slos 2023-10-31\"; params?: ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ kqlQuery: ",
          "StringC",
          "; page: ",
          "StringC",
          "; perPage: ",
          "StringC",
          "; sortBy: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"error_budget_consumed\">, ",
          "LiteralC",
          "<\"error_budget_remaining\">, ",
          "LiteralC",
          "<\"sli_value\">, ",
          "LiteralC",
          "<\"status\">]>; sortDirection: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"asc\">, ",
          "LiteralC",
          "<\"desc\">]>; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params?: { query?: { kqlQuery?: string | undefined; page?: string | undefined; perPage?: string | undefined; sortBy?: \"status\" | \"error_budget_consumed\" | \"error_budget_remaining\" | \"sli_value\" | undefined; sortDirection?: \"asc\" | \"desc\" | undefined; } | undefined; } | undefined; }) => Promise<{ page: number; perPage: number; total: number; results: ({ id: string; name: string; description: string; indicator: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; }; timeWindow: { duration: string; type: \"rolling\"; } | { duration: string; type: \"calendarAligned\"; }; budgetingMethod: \"occurrences\" | \"timeslices\"; objective: { target: number; } & { timesliceTarget?: number | undefined; timesliceWindow?: string | undefined; }; revision: number; settings: { syncDelay: string; frequency: string; }; enabled: boolean; tags: string[]; groupBy: string; createdAt: string; updatedAt: string; } & { instanceId?: string | undefined; } & { summary: { status: \"HEALTHY\" | \"NO_DATA\" | \"DEGRADING\" | \"VIOLATED\"; sliValue: number; errorBudget: { initial: number; consumed: number; remaining: number; isEstimated: boolean; }; }; })[]; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"GET /internal/observability/slos/_definitions\": { endpoint: \"GET /internal/observability/slos/_definitions\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ search: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { query: { search: string; }; }; }) => Promise<({ id: string; name: string; description: string; indicator: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; }; timeWindow: { duration: string; type: \"rolling\"; } | { duration: string; type: \"calendarAligned\"; }; budgetingMethod: \"occurrences\" | \"timeslices\"; objective: { target: number; } & { timesliceTarget?: number | undefined; timesliceWindow?: string | undefined; }; revision: number; settings: { syncDelay: string; frequency: string; }; enabled: boolean; tags: string[]; groupBy: string; createdAt: string; updatedAt: string; } & { instanceId?: string | undefined; })[]>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /internal/observability/slos/_historical_summary\": { endpoint: \"POST /internal/observability/slos/_historical_summary\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ list: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ sloId: ",
          "StringC",
          "; instanceId: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; }>>; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { body: { list: { sloId: string; instanceId: string; }[]; }; }; }) => Promise<{ sloId: string; instanceId: string; data: ({ date: string; } & { status: \"HEALTHY\" | \"NO_DATA\" | \"DEGRADING\" | \"VIOLATED\"; sliValue: number; errorBudget: { initial: number; consumed: number; remaining: number; isEstimated: boolean; }; })[]; }[]>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /api/observability/slos/{id}/enable 2023-10-31\": { endpoint: \"POST /api/observability/slos/{id}/enable 2023-10-31\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; }; }) => Promise<void>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /api/observability/slos/{id}/disable 2023-10-31\": { endpoint: \"POST /api/observability/slos/{id}/disable 2023-10-31\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; }; }) => Promise<void>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /api/observability/slos/_delete_instances 2023-10-31\": { endpoint: \"POST /api/observability/slos/_delete_instances 2023-10-31\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ list: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ sloId: ",
          "StringC",
          "; instanceId: ",
          "StringC",
          "; }>>; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { body: { list: { sloId: string; instanceId: string; }[]; }; }; }) => Promise<void>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"DELETE /api/observability/slos/{id} 2023-10-31\": { endpoint: \"DELETE /api/observability/slos/{id} 2023-10-31\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; }; }) => Promise<void>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /api/observability/slos 2023-10-31\": { endpoint: \"POST /api/observability/slos 2023-10-31\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; indicator: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.apm.transactionDuration\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; service: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; threshold: ",
          "NumberC",
          "; index: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.apm.transactionErrorRate\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; service: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; index: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.kql.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; good: ",
          "StringC",
          "; total: ",
          "StringC",
          "; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.metric.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; good: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ sum: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>>; equation: ",
          "StringC",
          "; }>; total: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ sum: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>>; equation: ",
          "StringC",
          "; }>; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.metric.timeslice\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; metric: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ avg: boolean; max: boolean; min: boolean; sum: boolean; cardinality: boolean; last_value: boolean; std_deviation: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"doc_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"percentile\">; field: ",
          "StringC",
          "; percentile: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>>; equation: ",
          "StringC",
          "; threshold: ",
          "NumberC",
          "; comparator: ",
          "KeyofC",
          "<{ GT: string; GTE: string; LT: string; LTE: string; }>; }>; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.histogram.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; timestampField: ",
          "StringC",
          "; good: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"value_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"range\">; from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>; total: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"value_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"range\">; from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>]>; timeWindow: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ duration: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; type: ",
          "LiteralC",
          "<\"rolling\">; }>, ",
          "TypeC",
          "<{ duration: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; type: ",
          "LiteralC",
          "<\"calendarAligned\">; }>]>; budgetingMethod: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"occurrences\">, ",
          "LiteralC",
          "<\"timeslices\">]>; objective: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ target: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ timesliceTarget: ",
          "NumberC",
          "; timesliceWindow: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; }>]>; }>, ",
          "PartialC",
          "<{ id: ",
          "StringC",
          "; settings: ",
          "PartialC",
          "<{ syncDelay: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; frequency: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; }>; tags: ",
          "ArrayC",
          "<",
          "StringC",
          ">; groupBy: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; }>]>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { body: { name: string; description: string; indicator: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; }; timeWindow: { duration: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          "; type: \"rolling\"; } | { duration: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          "; type: \"calendarAligned\"; }; budgetingMethod: \"occurrences\" | \"timeslices\"; objective: { target: number; } & { timesliceTarget?: number | undefined; timesliceWindow?: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          " | undefined; }; } & { id?: string | undefined; settings?: { syncDelay?: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          " | undefined; frequency?: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          " | undefined; } | undefined; tags?: string[] | undefined; groupBy?: string | undefined; }; }; }) => Promise<{ id: string; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"GET /api/observability/rules/alerts/dynamic_index_pattern 2023-10-31\": { endpoint: \"GET /api/observability/rules/alerts/dynamic_index_pattern 2023-10-31\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ registrationContexts: ",
          "ArrayC",
          "<",
          "StringC",
          ">; namespace: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { query: { registrationContexts: string[]; namespace: string; }; }; }) => Promise<string[]>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; }[TEndpoint] extends { endpoint: any; params?: any; handler: ({}: any) => Promise<infer TReturnType>; } & ",
          "ServerRouteCreateOptions",
          " ? TReturnType : never"
        ],
        "path": "x-pack/plugins/observability/server/routes/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.ObservabilityConfig",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityConfig",
        "description": [],
        "signature": [
          "{ readonly enabled: boolean; readonly unsafe: Readonly<{} & { alertDetails: Readonly<{} & { uptime: Readonly<{} & { enabled: boolean; }>; observability: Readonly<{} & { enabled: boolean; }>; metrics: Readonly<{} & { enabled: boolean; }>; logs: Readonly<{} & { enabled: boolean; }>; }>; thresholdRule: Readonly<{} & { enabled: boolean; }>; }>; readonly annotations: Readonly<{} & { index: string; enabled: boolean; }>; readonly customThresholdRule: Readonly<{} & { groupByPageSize: number; }>; readonly createO11yGenericFeatureId: boolean; }"
        ],
        "path": "x-pack/plugins/observability/server/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.ObservabilityServerRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityServerRouteRepository",
        "description": [],
        "signature": [
          "{ \"GET /internal/observability/slos/{id}/_instances\": { endpoint: \"GET /internal/observability/slos/{id}/_instances\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; }; }) => Promise<{ groupBy: string; instances: string[]; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /internal/observability/slos/_preview\": { endpoint: \"POST /internal/observability/slos/_preview\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ indicator: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.apm.transactionDuration\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; service: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; threshold: ",
          "NumberC",
          "; index: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.apm.transactionErrorRate\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; service: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; index: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.kql.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; good: ",
          "StringC",
          "; total: ",
          "StringC",
          "; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.metric.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; good: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ sum: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>>; equation: ",
          "StringC",
          "; }>; total: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ sum: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>>; equation: ",
          "StringC",
          "; }>; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.metric.timeslice\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; metric: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ avg: boolean; max: boolean; min: boolean; sum: boolean; cardinality: boolean; last_value: boolean; std_deviation: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"doc_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"percentile\">; field: ",
          "StringC",
          "; percentile: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>>; equation: ",
          "StringC",
          "; threshold: ",
          "NumberC",
          "; comparator: ",
          "KeyofC",
          "<{ GT: string; GTE: string; LT: string; LTE: string; }>; }>; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.histogram.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; timestampField: ",
          "StringC",
          "; good: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"value_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"range\">; from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>; total: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"value_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"range\">; from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>]>; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { body: { indicator: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; }; }; }; }) => Promise<{ date: string; sliValue: number; }[]>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /internal/observability/slos/{id}/_burn_rates\": { endpoint: \"POST /internal/observability/slos/{id}/_burn_rates\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; body: ",
          "TypeC",
          "<{ instanceId: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; windows: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; duration: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; }>>; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; body: { instanceId: string; windows: { name: string; duration: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          "; }[]; }; }; }) => Promise<{ burnRates: { name: string; burnRate: number; sli: number; }[]; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"GET /internal/observability/slos/_diagnosis\": { endpoint: \"GET /internal/observability/slos/_diagnosis\"; params?: undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          ") => Promise<{ licenseAndFeatures: ",
          "PublicLicenseJSON",
          "; userPrivileges: { write: ",
          "SecurityHasPrivilegesResponse",
          "; read: ",
          "SecurityHasPrivilegesResponse",
          "; }; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"PUT /api/observability/slos/{id} 2023-10-31\": { endpoint: \"PUT /api/observability/slos/{id} 2023-10-31\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; body: ",
          "PartialC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; indicator: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.apm.transactionDuration\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; service: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; threshold: ",
          "NumberC",
          "; index: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.apm.transactionErrorRate\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; service: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; index: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.kql.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; good: ",
          "StringC",
          "; total: ",
          "StringC",
          "; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.metric.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; good: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ sum: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>>; equation: ",
          "StringC",
          "; }>; total: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ sum: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>>; equation: ",
          "StringC",
          "; }>; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.metric.timeslice\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; metric: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ avg: boolean; max: boolean; min: boolean; sum: boolean; cardinality: boolean; last_value: boolean; std_deviation: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"doc_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"percentile\">; field: ",
          "StringC",
          "; percentile: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>>; equation: ",
          "StringC",
          "; threshold: ",
          "NumberC",
          "; comparator: ",
          "KeyofC",
          "<{ GT: string; GTE: string; LT: string; LTE: string; }>; }>; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.histogram.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; timestampField: ",
          "StringC",
          "; good: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"value_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"range\">; from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>; total: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"value_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"range\">; from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>]>; timeWindow: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ duration: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; type: ",
          "LiteralC",
          "<\"rolling\">; }>, ",
          "TypeC",
          "<{ duration: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; type: ",
          "LiteralC",
          "<\"calendarAligned\">; }>]>; budgetingMethod: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"occurrences\">, ",
          "LiteralC",
          "<\"timeslices\">]>; objective: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ target: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ timesliceTarget: ",
          "NumberC",
          "; timesliceWindow: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; }>]>; settings: ",
          "PartialC",
          "<{ syncDelay: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; frequency: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; }>; tags: ",
          "ArrayC",
          "<",
          "StringC",
          ">; groupBy: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; body: { name?: string | undefined; description?: string | undefined; indicator?: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; } | undefined; timeWindow?: { duration: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          "; type: \"rolling\"; } | { duration: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          "; type: \"calendarAligned\"; } | undefined; budgetingMethod?: \"occurrences\" | \"timeslices\" | undefined; objective?: ({ target: number; } & { timesliceTarget?: number | undefined; timesliceWindow?: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          " | undefined; }) | undefined; settings?: { syncDelay?: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          " | undefined; frequency?: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          " | undefined; } | undefined; tags?: string[] | undefined; groupBy?: string | undefined; }; }; }) => Promise<{ id: string; name: string; description: string; indicator: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; }; timeWindow: { duration: string; type: \"rolling\"; } | { duration: string; type: \"calendarAligned\"; }; budgetingMethod: \"occurrences\" | \"timeslices\"; objective: { target: number; } & { timesliceTarget?: number | undefined; timesliceWindow?: string | undefined; }; revision: number; settings: { syncDelay: string; frequency: string; }; enabled: boolean; tags: string[]; groupBy: string; createdAt: string; updatedAt: string; } & { instanceId?: string | undefined; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"GET /api/observability/slos/{id} 2023-10-31\": { endpoint: \"GET /api/observability/slos/{id} 2023-10-31\"; params?: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }>, ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ instanceId: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; }>; }>]> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; } & { query?: { instanceId?: string | undefined; } | undefined; }; }) => Promise<{ id: string; name: string; description: string; indicator: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; }; timeWindow: { duration: string; type: \"rolling\"; } | { duration: string; type: \"calendarAligned\"; }; budgetingMethod: \"occurrences\" | \"timeslices\"; objective: { target: number; } & { timesliceTarget?: number | undefined; timesliceWindow?: string | undefined; }; revision: number; settings: { syncDelay: string; frequency: string; }; enabled: boolean; tags: string[]; groupBy: string; createdAt: string; updatedAt: string; } & { instanceId?: string | undefined; } & { summary: { status: \"HEALTHY\" | \"NO_DATA\" | \"DEGRADING\" | \"VIOLATED\"; sliValue: number; errorBudget: { initial: number; consumed: number; remaining: number; isEstimated: boolean; }; }; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"GET /api/observability/slos 2023-10-31\": { endpoint: \"GET /api/observability/slos 2023-10-31\"; params?: ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ kqlQuery: ",
          "StringC",
          "; page: ",
          "StringC",
          "; perPage: ",
          "StringC",
          "; sortBy: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"error_budget_consumed\">, ",
          "LiteralC",
          "<\"error_budget_remaining\">, ",
          "LiteralC",
          "<\"sli_value\">, ",
          "LiteralC",
          "<\"status\">]>; sortDirection: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"asc\">, ",
          "LiteralC",
          "<\"desc\">]>; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params?: { query?: { kqlQuery?: string | undefined; page?: string | undefined; perPage?: string | undefined; sortBy?: \"status\" | \"error_budget_consumed\" | \"error_budget_remaining\" | \"sli_value\" | undefined; sortDirection?: \"asc\" | \"desc\" | undefined; } | undefined; } | undefined; }) => Promise<{ page: number; perPage: number; total: number; results: ({ id: string; name: string; description: string; indicator: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; }; timeWindow: { duration: string; type: \"rolling\"; } | { duration: string; type: \"calendarAligned\"; }; budgetingMethod: \"occurrences\" | \"timeslices\"; objective: { target: number; } & { timesliceTarget?: number | undefined; timesliceWindow?: string | undefined; }; revision: number; settings: { syncDelay: string; frequency: string; }; enabled: boolean; tags: string[]; groupBy: string; createdAt: string; updatedAt: string; } & { instanceId?: string | undefined; } & { summary: { status: \"HEALTHY\" | \"NO_DATA\" | \"DEGRADING\" | \"VIOLATED\"; sliValue: number; errorBudget: { initial: number; consumed: number; remaining: number; isEstimated: boolean; }; }; })[]; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"GET /internal/observability/slos/_definitions\": { endpoint: \"GET /internal/observability/slos/_definitions\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ search: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { query: { search: string; }; }; }) => Promise<({ id: string; name: string; description: string; indicator: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; }; timeWindow: { duration: string; type: \"rolling\"; } | { duration: string; type: \"calendarAligned\"; }; budgetingMethod: \"occurrences\" | \"timeslices\"; objective: { target: number; } & { timesliceTarget?: number | undefined; timesliceWindow?: string | undefined; }; revision: number; settings: { syncDelay: string; frequency: string; }; enabled: boolean; tags: string[]; groupBy: string; createdAt: string; updatedAt: string; } & { instanceId?: string | undefined; })[]>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /internal/observability/slos/_historical_summary\": { endpoint: \"POST /internal/observability/slos/_historical_summary\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ list: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ sloId: ",
          "StringC",
          "; instanceId: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; }>>; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { body: { list: { sloId: string; instanceId: string; }[]; }; }; }) => Promise<{ sloId: string; instanceId: string; data: ({ date: string; } & { status: \"HEALTHY\" | \"NO_DATA\" | \"DEGRADING\" | \"VIOLATED\"; sliValue: number; errorBudget: { initial: number; consumed: number; remaining: number; isEstimated: boolean; }; })[]; }[]>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /api/observability/slos/{id}/enable 2023-10-31\": { endpoint: \"POST /api/observability/slos/{id}/enable 2023-10-31\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; }; }) => Promise<void>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /api/observability/slos/{id}/disable 2023-10-31\": { endpoint: \"POST /api/observability/slos/{id}/disable 2023-10-31\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; }; }) => Promise<void>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /api/observability/slos/_delete_instances 2023-10-31\": { endpoint: \"POST /api/observability/slos/_delete_instances 2023-10-31\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ list: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ sloId: ",
          "StringC",
          "; instanceId: ",
          "StringC",
          "; }>>; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { body: { list: { sloId: string; instanceId: string; }[]; }; }; }) => Promise<void>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"DELETE /api/observability/slos/{id} 2023-10-31\": { endpoint: \"DELETE /api/observability/slos/{id} 2023-10-31\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { path: { id: string; }; }; }) => Promise<void>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"POST /api/observability/slos 2023-10-31\": { endpoint: \"POST /api/observability/slos 2023-10-31\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; description: ",
          "StringC",
          "; indicator: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.apm.transactionDuration\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; service: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; threshold: ",
          "NumberC",
          "; index: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.apm.transactionErrorRate\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; service: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; index: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.kql.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; good: ",
          "StringC",
          "; total: ",
          "StringC",
          "; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.metric.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; good: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ sum: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>>; equation: ",
          "StringC",
          "; }>; total: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ sum: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>>; equation: ",
          "StringC",
          "; }>; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.metric.timeslice\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; metric: ",
          "TypeC",
          "<{ metrics: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "KeyofC",
          "<{ avg: boolean; max: boolean; min: boolean; sum: boolean; cardinality: boolean; last_value: boolean; std_deviation: boolean; }>; field: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"doc_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"percentile\">; field: ",
          "StringC",
          "; percentile: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>>; equation: ",
          "StringC",
          "; threshold: ",
          "NumberC",
          "; comparator: ",
          "KeyofC",
          "<{ GT: string; GTE: string; LT: string; LTE: string; }>; }>; timestampField: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>, ",
          "TypeC",
          "<{ type: ",
          "LiteralC",
          "<\"sli.histogram.custom\">; params: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ index: ",
          "StringC",
          "; timestampField: ",
          "StringC",
          "; good: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"value_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"range\">; from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>; total: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"value_count\">; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; aggregation: ",
          "LiteralC",
          "<\"range\">; from: ",
          "NumberC",
          "; to: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>]>; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; }>]>; }>]>; timeWindow: ",
          "UnionC",
          "<[",
          "TypeC",
          "<{ duration: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; type: ",
          "LiteralC",
          "<\"rolling\">; }>, ",
          "TypeC",
          "<{ duration: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; type: ",
          "LiteralC",
          "<\"calendarAligned\">; }>]>; budgetingMethod: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"occurrences\">, ",
          "LiteralC",
          "<\"timeslices\">]>; objective: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ target: ",
          "NumberC",
          "; }>, ",
          "PartialC",
          "<{ timesliceTarget: ",
          "NumberC",
          "; timesliceWindow: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; }>]>; }>, ",
          "PartialC",
          "<{ id: ",
          "StringC",
          "; settings: ",
          "PartialC",
          "<{ syncDelay: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; frequency: ",
          "Type",
          "<",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          ", string, unknown>; }>; tags: ",
          "ArrayC",
          "<",
          "StringC",
          ">; groupBy: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"*\">, ",
          "StringC",
          "]>; }>]>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { body: { name: string; description: string; indicator: { type: \"sli.apm.transactionDuration\"; params: { environment: string; service: string; transactionType: string; transactionName: string; threshold: number; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.apm.transactionErrorRate\"; params: { environment: string; service: string; transactionType: string; transactionName: string; index: string; } & { filter?: string | undefined; }; } | { type: \"sli.kql.custom\"; params: { index: string; good: string; total: string; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.custom\"; params: { index: string; good: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; total: { metrics: ({ name: string; aggregation: \"sum\"; field: string; } & { filter?: string | undefined; })[]; equation: string; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.metric.timeslice\"; params: { index: string; metric: { metrics: (({ name: string; aggregation: \"min\" | \"max\" | \"sum\" | \"avg\" | \"cardinality\" | \"last_value\" | \"std_deviation\"; field: string; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"doc_count\"; } & { filter?: string | undefined; }) | ({ name: string; aggregation: \"percentile\"; field: string; percentile: number; } & { filter?: string | undefined; }))[]; equation: string; threshold: number; comparator: \"GT\" | \"GTE\" | \"LT\" | \"LTE\"; }; timestampField: string; } & { filter?: string | undefined; }; } | { type: \"sli.histogram.custom\"; params: { index: string; timestampField: string; good: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); total: ({ field: string; aggregation: \"value_count\"; } & { filter?: string | undefined; }) | ({ field: string; aggregation: \"range\"; from: number; to: number; } & { filter?: string | undefined; }); } & { filter?: string | undefined; }; }; timeWindow: { duration: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          "; type: \"rolling\"; } | { duration: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          "; type: \"calendarAligned\"; }; budgetingMethod: \"occurrences\" | \"timeslices\"; objective: { target: number; } & { timesliceTarget?: number | undefined; timesliceWindow?: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          " | undefined; }; } & { id?: string | undefined; settings?: { syncDelay?: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          " | undefined; frequency?: ",
          {
            "pluginId": "@kbn/slo-schema",
            "scope": "common",
            "docId": "kibKbnSloSchemaPluginApi",
            "section": "def-common.Duration",
            "text": "Duration"
          },
          " | undefined; } | undefined; tags?: string[] | undefined; groupBy?: string | undefined; }; }; }) => Promise<{ id: string; }>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; \"GET /api/observability/rules/alerts/dynamic_index_pattern 2023-10-31\": { endpoint: \"GET /api/observability/rules/alerts/dynamic_index_pattern 2023-10-31\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ registrationContexts: ",
          "ArrayC",
          "<",
          "StringC",
          ">; namespace: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          " & { params: { query: { registrationContexts: string[]; namespace: string; }; }; }) => Promise<string[]>; } & ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          "; }"
        ],
        "path": "x-pack/plugins/observability/server/routes/get_global_observability_server_route_repository.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.ScopedAnnotationsClient",
        "type": "Type",
        "tags": [],
        "label": "ScopedAnnotationsClient",
        "description": [],
        "signature": [
          "{ readonly index: string; create: (createParams: { annotation: { type: string; }; '@timestamp': string; message: string; } & { tags?: string[] | undefined; service?: { name?: string | undefined; environment?: string | undefined; version?: string | undefined; } | undefined; }) => Promise<{ _id: string; _index: string; _source: ",
          "Annotation",
          "; }>; getById: (getByIdParams: { id: string; }) => Promise<",
          "GetResponse",
          "<unknown>>; delete: (deleteParams: { id: string; }) => Promise<",
          "WriteResponseBase",
          ">; }"
        ],
        "path": "x-pack/plugins/observability/server/lib/annotations/bootstrap_annotations.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "observability",
        "id": "def-server.metricsExplorerViewSavedObjectAttributesRT",
        "type": "Object",
        "tags": [],
        "label": "metricsExplorerViewSavedObjectAttributesRT",
        "description": [],
        "signature": [
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ name: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>>, ",
          "UnknownRecordC",
          "]>"
        ],
        "path": "x-pack/plugins/observability/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.metricsExplorerViewSavedObjectRT",
        "type": "Object",
        "tags": [],
        "label": "metricsExplorerViewSavedObjectRT",
        "description": [],
        "signature": [
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; attributes: ",
          "IntersectionC",
          "<[",
          "ExactC",
          "<",
          "TypeC",
          "<{ name: ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }>>, ",
          "UnknownRecordC",
          "]>; }>, ",
          "PartialC",
          "<{ version: ",
          "StringC",
          "; updated_at: ",
          "Type",
          "<number, string, unknown>; }>]>"
        ],
        "path": "x-pack/plugins/observability/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.uiSettings",
        "type": "Object",
        "tags": [],
        "label": "uiSettings",
        "description": [
          "\nuiSettings definitions for Observability."
        ],
        "path": "x-pack/plugins/observability/server/ui_settings.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.enableInspectEsQueries",
            "type": "Object",
            "tags": [],
            "label": "[enableInspectEsQueries]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableInspectEsQueries.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableInspectEsQueries.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableInspectEsQueries.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableInspectEsQueries.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableInspectEsQueries.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableInspectEsQueries.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.maxSuggestions",
            "type": "Object",
            "tags": [],
            "label": "[maxSuggestions]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.maxSuggestions.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.maxSuggestions.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.maxSuggestions.value",
                "type": "number",
                "tags": [],
                "label": "value",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.maxSuggestions.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.maxSuggestions.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<number>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.enableComparisonByDefault",
            "type": "Object",
            "tags": [],
            "label": "[enableComparisonByDefault]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableComparisonByDefault.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableComparisonByDefault.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableComparisonByDefault.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableComparisonByDefault.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableComparisonByDefault.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.defaultApmServiceEnvironment",
            "type": "Object",
            "tags": [],
            "label": "[defaultApmServiceEnvironment]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.defaultApmServiceEnvironment.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.defaultApmServiceEnvironment.sensitive",
                "type": "boolean",
                "tags": [],
                "label": "sensitive",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.defaultApmServiceEnvironment.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.defaultApmServiceEnvironment.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.defaultApmServiceEnvironment.value",
                "type": "string",
                "tags": [],
                "label": "value",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.defaultApmServiceEnvironment.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<string>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.apmProgressiveLoading",
            "type": "Object",
            "tags": [],
            "label": "[apmProgressiveLoading]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmProgressiveLoading.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmProgressiveLoading.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmProgressiveLoading.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmProgressiveLoading.value",
                "type": "Enum",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  {
                    "pluginId": "observability",
                    "scope": "common",
                    "docId": "kibObservabilityPluginApi",
                    "section": "def-common.ProgressiveLoadingQuality",
                    "text": "ProgressiveLoadingQuality"
                  }
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmProgressiveLoading.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<",
                  {
                    "pluginId": "observability",
                    "scope": "common",
                    "docId": "kibObservabilityPluginApi",
                    "section": "def-common.ProgressiveLoadingQuality",
                    "text": "ProgressiveLoadingQuality"
                  },
                  ">"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmProgressiveLoading.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmProgressiveLoading.type",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "\"select\""
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmProgressiveLoading.options",
                "type": "Array",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "observability",
                    "scope": "common",
                    "docId": "kibObservabilityPluginApi",
                    "section": "def-common.ProgressiveLoadingQuality",
                    "text": "ProgressiveLoadingQuality"
                  },
                  "[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmProgressiveLoading.optionLabels",
                "type": "Object",
                "tags": [],
                "label": "optionLabels",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "observability",
                    "id": "def-server.uiSettings.apmProgressiveLoading.optionLabels.ProgressiveLoadingQuality.off",
                    "type": "string",
                    "tags": [],
                    "label": "[ProgressiveLoadingQuality.off]",
                    "description": [],
                    "path": "x-pack/plugins/observability/server/ui_settings.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observability",
                    "id": "def-server.uiSettings.apmProgressiveLoading.optionLabels.ProgressiveLoadingQuality.low",
                    "type": "string",
                    "tags": [],
                    "label": "[ProgressiveLoadingQuality.low]",
                    "description": [],
                    "path": "x-pack/plugins/observability/server/ui_settings.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observability",
                    "id": "def-server.uiSettings.apmProgressiveLoading.optionLabels.ProgressiveLoadingQuality.medium",
                    "type": "string",
                    "tags": [],
                    "label": "[ProgressiveLoadingQuality.medium]",
                    "description": [],
                    "path": "x-pack/plugins/observability/server/ui_settings.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "observability",
                    "id": "def-server.uiSettings.apmProgressiveLoading.optionLabels.ProgressiveLoadingQuality.high",
                    "type": "string",
                    "tags": [],
                    "label": "[ProgressiveLoadingQuality.high]",
                    "description": [],
                    "path": "x-pack/plugins/observability/server/ui_settings.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmProgressiveLoading.showInLabs",
                "type": "boolean",
                "tags": [],
                "label": "showInLabs",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.apmServiceInventoryOptimizedSorting",
            "type": "Object",
            "tags": [],
            "label": "[apmServiceInventoryOptimizedSorting]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceInventoryOptimizedSorting.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceInventoryOptimizedSorting.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceInventoryOptimizedSorting.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceInventoryOptimizedSorting.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceInventoryOptimizedSorting.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceInventoryOptimizedSorting.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceInventoryOptimizedSorting.type",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "\"boolean\""
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceInventoryOptimizedSorting.showInLabs",
                "type": "boolean",
                "tags": [],
                "label": "showInLabs",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.apmServiceGroupMaxNumberOfServices",
            "type": "Object",
            "tags": [],
            "label": "[apmServiceGroupMaxNumberOfServices]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceGroupMaxNumberOfServices.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceGroupMaxNumberOfServices.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceGroupMaxNumberOfServices.value",
                "type": "number",
                "tags": [],
                "label": "value",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceGroupMaxNumberOfServices.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmServiceGroupMaxNumberOfServices.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<number>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.apmTraceExplorerTab",
            "type": "Object",
            "tags": [],
            "label": "[apmTraceExplorerTab]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmTraceExplorerTab.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmTraceExplorerTab.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmTraceExplorerTab.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmTraceExplorerTab.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmTraceExplorerTab.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmTraceExplorerTab.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmTraceExplorerTab.type",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "\"boolean\""
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmTraceExplorerTab.showInLabs",
                "type": "boolean",
                "tags": [],
                "label": "showInLabs",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.apmLabsButton",
            "type": "Object",
            "tags": [],
            "label": "[apmLabsButton]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmLabsButton.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmLabsButton.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmLabsButton.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmLabsButton.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmLabsButton.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmLabsButton.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmLabsButton.type",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "\"boolean\""
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.enableInfrastructureHostsView",
            "type": "Object",
            "tags": [],
            "label": "[enableInfrastructureHostsView]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableInfrastructureHostsView.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableInfrastructureHostsView.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableInfrastructureHostsView.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableInfrastructureHostsView.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableInfrastructureHostsView.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.enableAwsLambdaMetrics",
            "type": "Object",
            "tags": [],
            "label": "[enableAwsLambdaMetrics]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAwsLambdaMetrics.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAwsLambdaMetrics.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAwsLambdaMetrics.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAwsLambdaMetrics.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAwsLambdaMetrics.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAwsLambdaMetrics.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAwsLambdaMetrics.type",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "\"boolean\""
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAwsLambdaMetrics.showInLabs",
                "type": "boolean",
                "tags": [],
                "label": "showInLabs",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.enableAgentExplorerView",
            "type": "Object",
            "tags": [],
            "label": "[enableAgentExplorerView]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAgentExplorerView.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAgentExplorerView.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAgentExplorerView.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAgentExplorerView.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAgentExplorerView.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAgentExplorerView.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableAgentExplorerView.type",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "\"boolean\""
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.apmAWSLambdaPriceFactor",
            "type": "Object",
            "tags": [],
            "label": "[apmAWSLambdaPriceFactor]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmAWSLambdaPriceFactor.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmAWSLambdaPriceFactor.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmAWSLambdaPriceFactor.type",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "\"json\""
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmAWSLambdaPriceFactor.value",
                "type": "string",
                "tags": [],
                "label": "value",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmAWSLambdaPriceFactor.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmAWSLambdaPriceFactor.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.ObjectType",
                    "text": "ObjectType"
                  },
                  "<{ arm: ",
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<number>; x86_64: ",
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<number>; }>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.apmAWSLambdaRequestCostPerMillion",
            "type": "Object",
            "tags": [],
            "label": "[apmAWSLambdaRequestCostPerMillion]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmAWSLambdaRequestCostPerMillion.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmAWSLambdaRequestCostPerMillion.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmAWSLambdaRequestCostPerMillion.value",
                "type": "number",
                "tags": [],
                "label": "value",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmAWSLambdaRequestCostPerMillion.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<number>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.apmEnableServiceMetrics",
            "type": "Object",
            "tags": [],
            "label": "[apmEnableServiceMetrics]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableServiceMetrics.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableServiceMetrics.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableServiceMetrics.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableServiceMetrics.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableServiceMetrics.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableServiceMetrics.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.apmEnableContinuousRollups",
            "type": "Object",
            "tags": [],
            "label": "[apmEnableContinuousRollups]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableContinuousRollups.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableContinuousRollups.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableContinuousRollups.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableContinuousRollups.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableContinuousRollups.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableContinuousRollups.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.enableCriticalPath",
            "type": "Object",
            "tags": [],
            "label": "[enableCriticalPath]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableCriticalPath.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableCriticalPath.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableCriticalPath.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableCriticalPath.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableCriticalPath.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableCriticalPath.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableCriticalPath.type",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "\"boolean\""
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableCriticalPath.showInLabs",
                "type": "boolean",
                "tags": [],
                "label": "showInLabs",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.syntheticsThrottlingEnabled",
            "type": "Object",
            "tags": [],
            "label": "[syntheticsThrottlingEnabled]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.syntheticsThrottlingEnabled.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.syntheticsThrottlingEnabled.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.syntheticsThrottlingEnabled.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.syntheticsThrottlingEnabled.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.syntheticsThrottlingEnabled.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.syntheticsThrottlingEnabled.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.enableLegacyUptimeApp",
            "type": "Object",
            "tags": [],
            "label": "[enableLegacyUptimeApp]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableLegacyUptimeApp.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableLegacyUptimeApp.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableLegacyUptimeApp.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableLegacyUptimeApp.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableLegacyUptimeApp.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.enableLegacyUptimeApp.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.apmEnableProfilingIntegration",
            "type": "Object",
            "tags": [],
            "label": "[apmEnableProfilingIntegration]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableProfilingIntegration.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableProfilingIntegration.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableProfilingIntegration.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableProfilingIntegration.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.apmEnableProfilingIntegration.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.profilingUseLegacyFlamegraphAPI",
            "type": "Object",
            "tags": [],
            "label": "[profilingUseLegacyFlamegraphAPI]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingUseLegacyFlamegraphAPI.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingUseLegacyFlamegraphAPI.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingUseLegacyFlamegraphAPI.value",
                "type": "boolean",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingUseLegacyFlamegraphAPI.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<boolean>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.profilingPerCoreWatt",
            "type": "Object",
            "tags": [],
            "label": "[profilingPerCoreWatt]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingPerCoreWatt.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingPerCoreWatt.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingPerCoreWatt.value",
                "type": "number",
                "tags": [],
                "label": "value",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingPerCoreWatt.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingPerCoreWatt.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<number>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingPerCoreWatt.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.profilingDatacenterPUE",
            "type": "Object",
            "tags": [],
            "label": "[profilingDatacenterPUE]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingDatacenterPUE.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingDatacenterPUE.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingDatacenterPUE.value",
                "type": "number",
                "tags": [],
                "label": "value",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingDatacenterPUE.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingDatacenterPUE.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<number>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingDatacenterPUE.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.uiSettings.profilingCo2PerKWH",
            "type": "Object",
            "tags": [],
            "label": "[profilingCo2PerKWH]",
            "description": [],
            "path": "x-pack/plugins/observability/server/ui_settings.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingCo2PerKWH.category",
                "type": "Array",
                "tags": [],
                "label": "category",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingCo2PerKWH.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingCo2PerKWH.value",
                "type": "number",
                "tags": [],
                "label": "value",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingCo2PerKWH.description",
                "type": "string",
                "tags": [],
                "label": "description",
                "description": [],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingCo2PerKWH.schema",
                "type": "Object",
                "tags": [],
                "label": "schema",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/config-schema",
                    "scope": "common",
                    "docId": "kibKbnConfigSchemaPluginApi",
                    "section": "def-common.Type",
                    "text": "Type"
                  },
                  "<number>"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.uiSettings.profilingCo2PerKWH.requiresPageReload",
                "type": "boolean",
                "tags": [],
                "label": "requiresPageReload",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "x-pack/plugins/observability/server/ui_settings.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      }
    ],
    "setup": {
      "parentPluginId": "observability",
      "id": "def-server.ObservabilityPluginSetup",
      "type": "Type",
      "tags": [],
      "label": "ObservabilityPluginSetup",
      "description": [],
      "signature": [
        "{ getAlertDetailsConfig(): Readonly<{} & { uptime: Readonly<{} & { enabled: boolean; }>; observability: Readonly<{} & { enabled: boolean; }>; metrics: Readonly<{} & { enabled: boolean; }>; logs: Readonly<{} & { enabled: boolean; }>; }>; getScopedAnnotationsClient: (requestContext: ",
        {
          "pluginId": "@kbn/core-http-request-handler-context-server",
          "scope": "common",
          "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
          "section": "def-common.RequestHandlerContext",
          "text": "RequestHandlerContext"
        },
        " & { licensing: Promise<",
        {
          "pluginId": "licensing",
          "scope": "server",
          "docId": "kibLicensingPluginApi",
          "section": "def-server.LicensingApiRequestHandlerContext",
          "text": "LicensingApiRequestHandlerContext"
        },
        ">; }, request: ",
        {
          "pluginId": "@kbn/core-http-server",
          "scope": "common",
          "docId": "kibKbnCoreHttpServerPluginApi",
          "section": "def-common.KibanaRequest",
          "text": "KibanaRequest"
        },
        "<unknown, unknown, unknown, any>) => Promise<{ readonly index: string; create: (createParams: { annotation: { type: string; }; '@timestamp': string; message: string; } & { tags?: string[] | undefined; service?: { name?: string | undefined; environment?: string | undefined; version?: string | undefined; } | undefined; }) => Promise<{ _id: string; _index: string; _source: ",
        "Annotation",
        "; }>; getById: (getByIdParams: { id: string; }) => Promise<",
        "GetResponse",
        "<unknown>>; delete: (deleteParams: { id: string; }) => Promise<",
        "WriteResponseBase",
        ">; } | undefined>; alertsLocator: ",
        {
          "pluginId": "share",
          "scope": "common",
          "docId": "kibSharePluginApi",
          "section": "def-common.LocatorPublic",
          "text": "LocatorPublic"
        },
        "<",
        {
          "pluginId": "observability",
          "scope": "common",
          "docId": "kibObservabilityPluginApi",
          "section": "def-common.AlertsLocatorParams",
          "text": "AlertsLocatorParams"
        },
        ">; }"
      ],
      "path": "x-pack/plugins/observability/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "observability",
        "id": "def-common.asAbsoluteDateTime",
        "type": "Function",
        "tags": [],
        "label": "asAbsoluteDateTime",
        "description": [],
        "signature": [
          "(time: number, timeUnit: ",
          "TimeUnit",
          ") => string"
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/datetime.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.asAbsoluteDateTime.$1",
            "type": "number",
            "tags": [],
            "label": "time",
            "description": [],
            "signature": [
              "number"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/datetime.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.asAbsoluteDateTime.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "timeUnit",
            "description": [],
            "signature": [
              "TimeUnit"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/datetime.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.asDuration",
        "type": "Function",
        "tags": [],
        "label": "asDuration",
        "description": [
          "\nConverts value and returns it formatted - 00 unit"
        ],
        "signature": [
          "(value: ",
          "Maybe",
          "<number>, { defaultValue = NOT_AVAILABLE_LABEL, extended }: FormatterOptions) => string"
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.asDuration.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              "Maybe",
              "<number>"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.asDuration.$2",
            "type": "Object",
            "tags": [],
            "label": "{ defaultValue = NOT_AVAILABLE_LABEL, extended }",
            "description": [],
            "signature": [
              "FormatterOptions"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.asDynamicBytes",
        "type": "Function",
        "tags": [],
        "label": "asDynamicBytes",
        "description": [],
        "signature": [
          "(val: ",
          "Maybe",
          "<number>) => string"
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/size.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.asDynamicBytes.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "val",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/size.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.asInteger",
        "type": "Function",
        "tags": [],
        "label": "asInteger",
        "description": [],
        "signature": [
          "(value: number | null | undefined) => string"
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.asInteger.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.asPercent",
        "type": "Function",
        "tags": [],
        "label": "asPercent",
        "description": [],
        "signature": [
          "(numerator: ",
          "Maybe",
          "<number>, denominator: number | undefined, fallbackResult: string) => string"
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.asPercent.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "numerator",
            "description": [],
            "signature": [
              "Maybe",
              "<number>"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.asPercent.$2",
            "type": "number",
            "tags": [],
            "label": "denominator",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.asPercent.$3",
            "type": "string",
            "tags": [],
            "label": "fallbackResult",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.formatDurationFromTimeUnitChar",
        "type": "Function",
        "tags": [],
        "label": "formatDurationFromTimeUnitChar",
        "description": [],
        "signature": [
          "(time: number, unit: ",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.TimeUnitChar",
            "text": "TimeUnitChar"
          },
          ") => string"
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.formatDurationFromTimeUnitChar.$1",
            "type": "number",
            "tags": [],
            "label": "time",
            "description": [],
            "signature": [
              "number"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.formatDurationFromTimeUnitChar.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "unit",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "common",
                "docId": "kibObservabilityPluginApi",
                "section": "def-common.TimeUnitChar",
                "text": "TimeUnitChar"
              }
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.getAlertDetailsUrl",
        "type": "Function",
        "tags": [],
        "label": "getAlertDetailsUrl",
        "description": [],
        "signature": [
          "(basePath: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IBasePath",
            "text": "IBasePath"
          },
          ", spaceId: string, alertUuid: string | null) => string"
        ],
        "path": "x-pack/plugins/observability/common/utils/alerting/alert_url.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.getAlertDetailsUrl.$1",
            "type": "Object",
            "tags": [],
            "label": "basePath",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IBasePath",
                "text": "IBasePath"
              }
            ],
            "path": "x-pack/plugins/observability/common/utils/alerting/alert_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.getAlertDetailsUrl.$2",
            "type": "string",
            "tags": [],
            "label": "spaceId",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability/common/utils/alerting/alert_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.getAlertDetailsUrl.$3",
            "type": "CompoundType",
            "tags": [],
            "label": "alertUuid",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/observability/common/utils/alerting/alert_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.getAlertUrl",
        "type": "Function",
        "tags": [],
        "label": "getAlertUrl",
        "description": [],
        "signature": [
          "(alertUuid: string | null, spaceId: string, startedAt: string, alertsLocator?: ",
          {
            "pluginId": "share",
            "scope": "common",
            "docId": "kibSharePluginApi",
            "section": "def-common.LocatorPublic",
            "text": "LocatorPublic"
          },
          "<",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.AlertsLocatorParams",
            "text": "AlertsLocatorParams"
          },
          "> | undefined, publicBaseUrl?: string | undefined) => Promise<string>"
        ],
        "path": "x-pack/plugins/observability/common/utils/alerting/alert_url.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.getAlertUrl.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "alertUuid",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/observability/common/utils/alerting/alert_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.getAlertUrl.$2",
            "type": "string",
            "tags": [],
            "label": "spaceId",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability/common/utils/alerting/alert_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.getAlertUrl.$3",
            "type": "string",
            "tags": [],
            "label": "startedAt",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability/common/utils/alerting/alert_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.getAlertUrl.$4",
            "type": "Object",
            "tags": [],
            "label": "alertsLocator",
            "description": [],
            "signature": [
              {
                "pluginId": "share",
                "scope": "common",
                "docId": "kibSharePluginApi",
                "section": "def-common.LocatorPublic",
                "text": "LocatorPublic"
              },
              "<",
              {
                "pluginId": "observability",
                "scope": "common",
                "docId": "kibObservabilityPluginApi",
                "section": "def-common.AlertsLocatorParams",
                "text": "AlertsLocatorParams"
              },
              "> | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/alerting/alert_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.getAlertUrl.$5",
            "type": "string",
            "tags": [],
            "label": "publicBaseUrl",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/alerting/alert_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.getDurationFormatter",
        "type": "Function",
        "tags": [],
        "label": "getDurationFormatter",
        "description": [],
        "signature": [
          "(max: number) => ",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.TimeFormatter",
            "text": "TimeFormatter"
          }
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.getDurationFormatter.$1",
            "type": "number",
            "tags": [],
            "label": "max",
            "description": [],
            "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.getInspectResponse",
        "type": "Function",
        "tags": [],
        "label": "getInspectResponse",
        "description": [
          "\nCreate a formatted response to be sent in the _inspect key for use in the\ninspector."
        ],
        "signature": [
          "({\n  esError,\n  esRequestParams,\n  esRequestStatus,\n  esResponse,\n  kibanaRequest,\n  operationName,\n  startTime,\n}: { esError: ",
          "WrappedElasticsearchClientError",
          " | null; esRequestParams: Record<string, any>; esRequestStatus: ",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.RequestStatus",
            "text": "RequestStatus"
          },
          "; esResponse: any; kibanaRequest: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>; operationName: string; startTime: number; }) => ",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Request",
            "text": "Request"
          }
        ],
        "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.getInspectResponse.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  esError,\n  esRequestParams,\n  esRequestStatus,\n  esResponse,\n  kibanaRequest,\n  operationName,\n  startTime,\n}",
            "description": [],
            "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-common.getInspectResponse.$1.esError",
                "type": "CompoundType",
                "tags": [],
                "label": "esError",
                "description": [],
                "signature": [
                  "WrappedElasticsearchClientError",
                  " | null"
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-common.getInspectResponse.$1.esRequestParams",
                "type": "Object",
                "tags": [],
                "label": "esRequestParams",
                "description": [],
                "signature": [
                  "{ [x: string]: any; }"
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-common.getInspectResponse.$1.esRequestStatus",
                "type": "Enum",
                "tags": [],
                "label": "esRequestStatus",
                "description": [],
                "signature": [
                  {
                    "pluginId": "inspector",
                    "scope": "common",
                    "docId": "kibInspectorPluginApi",
                    "section": "def-common.RequestStatus",
                    "text": "RequestStatus"
                  }
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-common.getInspectResponse.$1.esResponse",
                "type": "Any",
                "tags": [],
                "label": "esResponse",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-common.getInspectResponse.$1.kibanaRequest",
                "type": "Object",
                "tags": [],
                "label": "kibanaRequest",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-common.getInspectResponse.$1.operationName",
                "type": "string",
                "tags": [],
                "label": "operationName",
                "description": [],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-common.getInspectResponse.$1.startTime",
                "type": "number",
                "tags": [],
                "label": "startTime",
                "description": [],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.getProbabilityFromProgressiveLoadingQuality",
        "type": "Function",
        "tags": [],
        "label": "getProbabilityFromProgressiveLoadingQuality",
        "description": [],
        "signature": [
          "(quality: ",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.ProgressiveLoadingQuality",
            "text": "ProgressiveLoadingQuality"
          },
          ") => number"
        ],
        "path": "x-pack/plugins/observability/common/progressive_loading.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.getProbabilityFromProgressiveLoadingQuality.$1",
            "type": "Enum",
            "tags": [],
            "label": "quality",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "common",
                "docId": "kibObservabilityPluginApi",
                "section": "def-common.ProgressiveLoadingQuality",
                "text": "ProgressiveLoadingQuality"
              }
            ],
            "path": "x-pack/plugins/observability/common/progressive_loading.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "observability",
        "id": "def-common.AlertsLocatorParams",
        "type": "Interface",
        "tags": [],
        "label": "AlertsLocatorParams",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.AlertsLocatorParams",
            "text": "AlertsLocatorParams"
          },
          " extends ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          }
        ],
        "path": "x-pack/plugins/observability/common/locators/alerts.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.AlertsLocatorParams.baseUrl",
            "type": "string",
            "tags": [],
            "label": "baseUrl",
            "description": [],
            "path": "x-pack/plugins/observability/common/locators/alerts.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.AlertsLocatorParams.spaceId",
            "type": "string",
            "tags": [],
            "label": "spaceId",
            "description": [],
            "path": "x-pack/plugins/observability/common/locators/alerts.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.AlertsLocatorParams.rangeFrom",
            "type": "string",
            "tags": [],
            "label": "rangeFrom",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/common/locators/alerts.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.AlertsLocatorParams.rangeTo",
            "type": "string",
            "tags": [],
            "label": "rangeTo",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/common/locators/alerts.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.AlertsLocatorParams.kuery",
            "type": "string",
            "tags": [],
            "label": "kuery",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/common/locators/alerts.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.AlertsLocatorParams.status",
            "type": "CompoundType",
            "tags": [],
            "label": "status",
            "description": [],
            "signature": [
              "AlertStatus",
              " | undefined"
            ],
            "path": "x-pack/plugins/observability/common/locators/alerts.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "observability",
        "id": "def-common.ProcessorEvent",
        "type": "Enum",
        "tags": [],
        "label": "ProcessorEvent",
        "description": [],
        "path": "x-pack/plugins/observability/common/processor_event.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.ProgressiveLoadingQuality",
        "type": "Enum",
        "tags": [],
        "label": "ProgressiveLoadingQuality",
        "description": [],
        "path": "x-pack/plugins/observability/common/progressive_loading.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "observability",
        "id": "def-common.alertsLocatorID",
        "type": "string",
        "tags": [],
        "label": "alertsLocatorID",
        "description": [],
        "signature": [
          "\"ALERTS_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.apmAWSLambdaPriceFactor",
        "type": "string",
        "tags": [],
        "label": "apmAWSLambdaPriceFactor",
        "description": [],
        "signature": [
          "\"observability:apmAWSLambdaPriceFactor\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.apmAWSLambdaRequestCostPerMillion",
        "type": "string",
        "tags": [],
        "label": "apmAWSLambdaRequestCostPerMillion",
        "description": [],
        "signature": [
          "\"observability:apmAWSLambdaRequestCostPerMillion\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.apmEnableContinuousRollups",
        "type": "string",
        "tags": [],
        "label": "apmEnableContinuousRollups",
        "description": [],
        "signature": [
          "\"observability:apmEnableContinuousRollups\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.apmEnableProfilingIntegration",
        "type": "string",
        "tags": [],
        "label": "apmEnableProfilingIntegration",
        "description": [],
        "signature": [
          "\"observability:apmEnableProfilingIntegration\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.apmEnableServiceMetrics",
        "type": "string",
        "tags": [],
        "label": "apmEnableServiceMetrics",
        "description": [],
        "signature": [
          "\"observability:apmEnableServiceMetrics\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.apmLabsButton",
        "type": "string",
        "tags": [],
        "label": "apmLabsButton",
        "description": [],
        "signature": [
          "\"observability:apmLabsButton\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.apmProgressiveLoading",
        "type": "string",
        "tags": [],
        "label": "apmProgressiveLoading",
        "description": [],
        "signature": [
          "\"observability:apmProgressiveLoading\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.apmServiceGroupMaxNumberOfServices",
        "type": "string",
        "tags": [],
        "label": "apmServiceGroupMaxNumberOfServices",
        "description": [],
        "signature": [
          "\"observability:apmServiceGroupMaxNumberOfServices\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.apmServiceInventoryOptimizedSorting",
        "type": "string",
        "tags": [],
        "label": "apmServiceInventoryOptimizedSorting",
        "description": [],
        "signature": [
          "\"observability:apmServiceInventoryOptimizedSorting\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.apmTraceExplorerTab",
        "type": "string",
        "tags": [],
        "label": "apmTraceExplorerTab",
        "description": [],
        "signature": [
          "\"observability:apmTraceExplorerTab\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.AsDuration",
        "type": "Type",
        "tags": [],
        "label": "AsDuration",
        "description": [],
        "signature": [
          "(value: ",
          "Maybe",
          "<number>, { defaultValue, extended }?: FormatterOptions) => string"
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.AsDuration.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.AsDuration.$2",
            "type": "Object",
            "tags": [],
            "label": "__1",
            "description": [],
            "signature": [
              "FormatterOptions"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.AsPercent",
        "type": "Type",
        "tags": [],
        "label": "AsPercent",
        "description": [],
        "signature": [
          "(numerator: ",
          "Maybe",
          "<number>, denominator: number | undefined, fallbackResult?: string) => string"
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.AsPercent.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "numerator",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.AsPercent.$2",
            "type": "number",
            "tags": [],
            "label": "denominator",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.AsPercent.$3",
            "type": "string",
            "tags": [],
            "label": "fallbackResult",
            "description": [],
            "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.casesFeatureId",
        "type": "string",
        "tags": [],
        "label": "casesFeatureId",
        "description": [],
        "signature": [
          "\"observabilityCases\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.defaultApmServiceEnvironment",
        "type": "string",
        "tags": [],
        "label": "defaultApmServiceEnvironment",
        "description": [],
        "signature": [
          "\"observability:apmDefaultServiceEnvironment\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.enableAgentExplorerView",
        "type": "string",
        "tags": [],
        "label": "enableAgentExplorerView",
        "description": [],
        "signature": [
          "\"observability:apmAgentExplorerView\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.enableAwsLambdaMetrics",
        "type": "string",
        "tags": [],
        "label": "enableAwsLambdaMetrics",
        "description": [],
        "signature": [
          "\"observability:enableAwsLambdaMetrics\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.enableComparisonByDefault",
        "type": "string",
        "tags": [],
        "label": "enableComparisonByDefault",
        "description": [],
        "signature": [
          "\"observability:enableComparisonByDefault\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.enableCriticalPath",
        "type": "string",
        "tags": [],
        "label": "enableCriticalPath",
        "description": [],
        "signature": [
          "\"observability:apmEnableCriticalPath\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.enableInfrastructureHostsView",
        "type": "string",
        "tags": [],
        "label": "enableInfrastructureHostsView",
        "description": [],
        "signature": [
          "\"observability:enableInfrastructureHostsView\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.enableInspectEsQueries",
        "type": "string",
        "tags": [],
        "label": "enableInspectEsQueries",
        "description": [],
        "signature": [
          "\"observability:enableInspectEsQueries\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.maxSuggestions",
        "type": "string",
        "tags": [],
        "label": "maxSuggestions",
        "description": [],
        "signature": [
          "\"observability:maxSuggestions\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.observabilityAppId",
        "type": "string",
        "tags": [],
        "label": "observabilityAppId",
        "description": [],
        "signature": [
          "\"observability-overview\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.observabilityFeatureId",
        "type": "string",
        "tags": [],
        "label": "observabilityFeatureId",
        "description": [],
        "signature": [
          "\"observability\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.profilingCo2PerKWH",
        "type": "string",
        "tags": [],
        "label": "profilingCo2PerKWH",
        "description": [],
        "signature": [
          "\"observability:profilingCo2PerKWH\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.profilingDatacenterPUE",
        "type": "string",
        "tags": [],
        "label": "profilingDatacenterPUE",
        "description": [],
        "signature": [
          "\"observability:profilingDatacenterPUE\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.profilingPerCoreWatt",
        "type": "string",
        "tags": [],
        "label": "profilingPerCoreWatt",
        "description": [],
        "signature": [
          "\"observability:profilingPerCoreWatt\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.profilingUseLegacyFlamegraphAPI",
        "type": "string",
        "tags": [],
        "label": "profilingUseLegacyFlamegraphAPI",
        "description": [],
        "signature": [
          "\"observability:profilingUseLegacyFlamegraphAPI\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.ruleDetailsLocatorID",
        "type": "string",
        "tags": [],
        "label": "ruleDetailsLocatorID",
        "description": [],
        "signature": [
          "\"RULE_DETAILS_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.rulesLocatorID",
        "type": "string",
        "tags": [],
        "label": "rulesLocatorID",
        "description": [],
        "signature": [
          "\"RULES_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.sloDetailsLocatorID",
        "type": "string",
        "tags": [],
        "label": "sloDetailsLocatorID",
        "description": [],
        "signature": [
          "\"SLO_DETAILS_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.sloEditLocatorID",
        "type": "string",
        "tags": [],
        "label": "sloEditLocatorID",
        "description": [],
        "signature": [
          "\"SLO_EDIT_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.sloFeatureId",
        "type": "string",
        "tags": [],
        "label": "sloFeatureId",
        "description": [],
        "signature": [
          "\"slo\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.sloListLocatorID",
        "type": "string",
        "tags": [],
        "label": "sloListLocatorID",
        "description": [],
        "signature": [
          "\"SLO_LIST_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.syntheticsEditMonitorLocatorID",
        "type": "string",
        "tags": [],
        "label": "syntheticsEditMonitorLocatorID",
        "description": [],
        "signature": [
          "\"SYNTHETICS_EDIT_MONITOR_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.syntheticsMonitorDetailLocatorID",
        "type": "string",
        "tags": [],
        "label": "syntheticsMonitorDetailLocatorID",
        "description": [],
        "signature": [
          "\"SYNTHETICS_MONITOR_DETAIL_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.syntheticsSettingsLocatorID",
        "type": "string",
        "tags": [],
        "label": "syntheticsSettingsLocatorID",
        "description": [],
        "signature": [
          "\"SYNTHETICS_SETTINGS\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.syntheticsThrottlingEnabled",
        "type": "string",
        "tags": [],
        "label": "syntheticsThrottlingEnabled",
        "description": [],
        "signature": [
          "\"observability:syntheticsThrottlingEnabled\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.TimeFormatter",
        "type": "Type",
        "tags": [],
        "label": "TimeFormatter",
        "description": [],
        "signature": [
          "(value: ",
          "Maybe",
          "<number>, options?: FormatterOptions | undefined) => ConvertedDuration"
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.TimeFormatter.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.TimeFormatter.$2",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "FormatterOptions | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.TimeUnitChar",
        "type": "Type",
        "tags": [],
        "label": "TimeUnitChar",
        "description": [],
        "signature": [
          "\"m\" | \"d\" | \"h\" | \"s\""
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.uptimeOverviewLocatorID",
        "type": "string",
        "tags": [],
        "label": "uptimeOverviewLocatorID",
        "description": [],
        "signature": [
          "\"UPTIME_OVERVIEW_LOCATOR\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "observability",
        "id": "def-common.observabilityPaths",
        "type": "Object",
        "tags": [],
        "label": "observabilityPaths",
        "description": [],
        "signature": [
          "{ alerts: string; alertDetails: (alertId: string) => string; rules: string; ruleDetails: (ruleId: string) => string; slos: string; slosWelcome: string; sloCreate: string; sloCreateWithEncodedForm: (encodedParams: string) => string; sloEdit: (sloId: string) => string; sloEditWithEncodedForm: (sloId: string, encodedParams: string) => string; sloDetails: (sloId: string, instanceId?: string | undefined) => string; }"
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  }
}