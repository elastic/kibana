{
  "id": "@kbn/scout",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.Client",
        "type": "Class",
        "tags": [],
        "label": "Client",
        "description": [],
        "signature": [
          "default",
          " extends ",
          "default"
        ],
        "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.Client.diagnostic",
            "type": "Object",
            "tags": [],
            "label": "diagnostic",
            "description": [],
            "signature": [
              "default"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.Client.name",
            "type": "CompoundType",
            "tags": [],
            "label": "name",
            "description": [],
            "signature": [
              "string | symbol"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.Client.connectionPool",
            "type": "Object",
            "tags": [],
            "label": "connectionPool",
            "description": [],
            "signature": [
              "default"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.Client.transport",
            "type": "Object",
            "tags": [],
            "label": "transport",
            "description": [],
            "signature": [
              "default"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.Client.serializer",
            "type": "Object",
            "tags": [],
            "label": "serializer",
            "description": [],
            "signature": [
              "default"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.Client.helpers",
            "type": "Object",
            "tags": [],
            "label": "helpers",
            "description": [],
            "signature": [
              "default"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.Client.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.Client.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "opts",
                "description": [],
                "signature": [
                  "ClientOptions"
                ],
                "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.Client.child",
            "type": "Function",
            "tags": [],
            "label": "child",
            "description": [],
            "signature": [
              "(opts: ",
              "ClientOptions",
              ") => ",
              "default"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.Client.child.$1",
                "type": "Object",
                "tags": [],
                "label": "opts",
                "description": [],
                "signature": [
                  "ClientOptions"
                ],
                "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.Client.close",
            "type": "Function",
            "tags": [],
            "label": "close",
            "description": [],
            "signature": [
              "() => Promise<void>"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.KbnClient",
        "type": "Class",
        "tags": [],
        "label": "KbnClient",
        "description": [],
        "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KbnClient.status",
            "type": "Object",
            "tags": [],
            "label": "status",
            "description": [],
            "signature": [
              "KbnClientStatus"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KbnClient.plugins",
            "type": "Object",
            "tags": [],
            "label": "plugins",
            "description": [],
            "signature": [
              "KbnClientPlugins"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KbnClient.version",
            "type": "Object",
            "tags": [],
            "label": "version",
            "description": [],
            "signature": [
              "KbnClientVersion"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KbnClient.savedObjects",
            "type": "Object",
            "tags": [],
            "label": "savedObjects",
            "description": [],
            "signature": [
              "KbnClientSavedObjects"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KbnClient.spaces",
            "type": "Object",
            "tags": [],
            "label": "spaces",
            "description": [],
            "signature": [
              "KbnClientSpaces"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KbnClient.uiSettings",
            "type": "Object",
            "tags": [],
            "label": "uiSettings",
            "description": [],
            "signature": [
              "KbnClientUiSettings"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KbnClient.importExport",
            "type": "Object",
            "tags": [],
            "label": "importExport",
            "description": [],
            "signature": [
              "KbnClientImportExport"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KbnClient.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nBasic Kibana server client that implements common behaviors for talking\nto the Kibana server from dev tooling."
            ],
            "signature": [
              "any"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.KbnClient.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/test",
                    "scope": "common",
                    "docId": "kibKbnTestPluginApi",
                    "section": "def-common.KbnClientOptions",
                    "text": "KbnClientOptions"
                  }
                ],
                "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KbnClient.request",
            "type": "Function",
            "tags": [],
            "label": "request",
            "description": [
              "\nMake a direct request to the Kibana server"
            ],
            "signature": [
              "<T>(options: ",
              "ReqOptions",
              ") => Promise<",
              "AxiosResponse",
              "<T, any>>"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.KbnClient.request.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "ReqOptions"
                ],
                "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KbnClient.resolveUrl",
            "type": "Function",
            "tags": [],
            "label": "resolveUrl",
            "description": [],
            "signature": [
              "(relativeUrl: string) => string"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.KbnClient.resolveUrl.$1",
                "type": "string",
                "tags": [],
                "label": "relativeUrl",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.KibanaUrl",
        "type": "Class",
        "tags": [],
        "label": "KibanaUrl",
        "description": [],
        "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KibanaUrl.baseUrl",
            "type": "Object",
            "tags": [],
            "label": "#baseUrl",
            "description": [],
            "signature": [
              "URL"
            ],
            "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KibanaUrl.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.KibanaUrl.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "baseUrl",
                "description": [],
                "signature": [
                  "URL"
                ],
                "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KibanaUrl.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet an absolute URL based on Kibana's URL"
            ],
            "signature": [
              "(rel?: string | undefined, options?: ",
              "PathOptions",
              " | undefined) => string"
            ],
            "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.KibanaUrl.get.$1",
                "type": "string",
                "tags": [],
                "label": "rel",
                "description": [
                  "relative url, resolved relative to Kibana's url"
                ],
                "signature": [
                  "string | undefined"
                ],
                "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.KibanaUrl.get.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "optional modifications to apply to the URL"
                ],
                "signature": [
                  "PathOptions",
                  " | undefined"
                ],
                "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KibanaUrl.app",
            "type": "Function",
            "tags": [],
            "label": "app",
            "description": [
              "\nGet the URL for an app"
            ],
            "signature": [
              "(appName: string, options?: ",
              "PathOptions",
              " | undefined) => string"
            ],
            "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.KibanaUrl.app.$1",
                "type": "string",
                "tags": [],
                "label": "appName",
                "description": [
                  "name of the app to get the URL for"
                ],
                "signature": [
                  "string"
                ],
                "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.KibanaUrl.app.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "optional modifications to apply to the URL"
                ],
                "signature": [
                  "PathOptions",
                  " | undefined"
                ],
                "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.KibanaUrl.toString",
            "type": "Function",
            "tags": [],
            "label": "toString",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.SamlSessionManager",
        "type": "Class",
        "tags": [],
        "label": "SamlSessionManager",
        "description": [
          "\nManages cookies associated with user roles"
        ],
        "path": "packages/kbn-test/src/auth/session_manager.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.SamlSessionManager.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "packages/kbn-test/src/auth/session_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.SamlSessionManager.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/test",
                    "scope": "common",
                    "docId": "kibKbnTestPluginApi",
                    "section": "def-common.SamlSessionManagerOptions",
                    "text": "SamlSessionManagerOptions"
                  }
                ],
                "path": "packages/kbn-test/src/auth/session_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.SamlSessionManager.getApiCredentialsForRole",
            "type": "Function",
            "tags": [],
            "label": "getApiCredentialsForRole",
            "description": [],
            "signature": [
              "(role: string, options?: ",
              {
                "pluginId": "@kbn/test",
                "scope": "common",
                "docId": "kibKbnTestPluginApi",
                "section": "def-common.GetCookieOptions",
                "text": "GetCookieOptions"
              },
              " | undefined) => Promise<{ Cookie: string; }>"
            ],
            "path": "packages/kbn-test/src/auth/session_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.SamlSessionManager.getApiCredentialsForRole.$1",
                "type": "string",
                "tags": [],
                "label": "role",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "packages/kbn-test/src/auth/session_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.SamlSessionManager.getApiCredentialsForRole.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/test",
                    "scope": "common",
                    "docId": "kibKbnTestPluginApi",
                    "section": "def-common.GetCookieOptions",
                    "text": "GetCookieOptions"
                  },
                  " | undefined"
                ],
                "path": "packages/kbn-test/src/auth/session_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.SamlSessionManager.getInteractiveUserSessionCookieWithRoleScope",
            "type": "Function",
            "tags": [],
            "label": "getInteractiveUserSessionCookieWithRoleScope",
            "description": [],
            "signature": [
              "(role: string, options?: ",
              {
                "pluginId": "@kbn/test",
                "scope": "common",
                "docId": "kibKbnTestPluginApi",
                "section": "def-common.GetCookieOptions",
                "text": "GetCookieOptions"
              },
              " | undefined) => Promise<string>"
            ],
            "path": "packages/kbn-test/src/auth/session_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.SamlSessionManager.getInteractiveUserSessionCookieWithRoleScope.$1",
                "type": "string",
                "tags": [],
                "label": "role",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "packages/kbn-test/src/auth/session_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.SamlSessionManager.getInteractiveUserSessionCookieWithRoleScope.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/test",
                    "scope": "common",
                    "docId": "kibKbnTestPluginApi",
                    "section": "def-common.GetCookieOptions",
                    "text": "GetCookieOptions"
                  },
                  " | undefined"
                ],
                "path": "packages/kbn-test/src/auth/session_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.SamlSessionManager.getEmail",
            "type": "Function",
            "tags": [],
            "label": "getEmail",
            "description": [],
            "signature": [
              "(role: string) => Promise<string>"
            ],
            "path": "packages/kbn-test/src/auth/session_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.SamlSessionManager.getEmail.$1",
                "type": "string",
                "tags": [],
                "label": "role",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "packages/kbn-test/src/auth/session_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.SamlSessionManager.getUserData",
            "type": "Function",
            "tags": [],
            "label": "getUserData",
            "description": [],
            "signature": [
              "(role: string) => Promise<",
              "UserProfile",
              ">"
            ],
            "path": "packages/kbn-test/src/auth/session_manager.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.SamlSessionManager.getUserData.$1",
                "type": "string",
                "tags": [],
                "label": "role",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "packages/kbn-test/src/auth/session_manager.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.ToolingLog",
        "type": "Class",
        "tags": [],
        "label": "ToolingLog",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/tooling-log",
            "scope": "common",
            "docId": "kibKbnToolingLogPluginApi",
            "section": "def-common.ToolingLog",
            "text": "ToolingLog"
          },
          " implements ",
          {
            "pluginId": "@kbn/some-dev-log",
            "scope": "common",
            "docId": "kibKbnSomeDevLogPluginApi",
            "section": "def-common.SomeDevLog",
            "text": "SomeDevLog"
          }
        ],
        "path": "packages/kbn-tooling-log/src/tooling_log.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "writerConfig",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/tooling-log",
                    "scope": "common",
                    "docId": "kibKbnToolingLogPluginApi",
                    "section": "def-common.ToolingLogTextWriterConfig",
                    "text": "ToolingLogTextWriterConfig"
                  },
                  " | undefined"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.Unnamed.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/tooling-log",
                    "scope": "common",
                    "docId": "kibKbnToolingLogPluginApi",
                    "section": "def-common.ToolingLogOptions",
                    "text": "ToolingLogOptions"
                  },
                  " | undefined"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.getIndent",
            "type": "Function",
            "tags": [],
            "label": "getIndent",
            "description": [
              "\nGet the current indentation level of the ToolingLog"
            ],
            "signature": [
              "() => number"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.indent",
            "type": "Function",
            "tags": [],
            "label": "indent",
            "description": [],
            "signature": [
              "{ (delta: number): void; <T>(delta: number, block: () => Promise<T>): Promise<T>; <T>(delta: number, block: () => T): T; }"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.indent.$1",
                "type": "number",
                "tags": [],
                "label": "delta",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.indent.$2",
                "type": "Function",
                "tags": [],
                "label": "block",
                "description": [],
                "signature": [
                  "(() => T | Promise<T>) | undefined"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.verbose",
            "type": "Function",
            "tags": [],
            "label": "verbose",
            "description": [],
            "signature": [
              "(...args: any[]) => void"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.verbose.$1",
                "type": "Array",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "any[]"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.debug",
            "type": "Function",
            "tags": [],
            "label": "debug",
            "description": [],
            "signature": [
              "(...args: any[]) => void"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.debug.$1",
                "type": "Array",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "any[]"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.info",
            "type": "Function",
            "tags": [],
            "label": "info",
            "description": [],
            "signature": [
              "(...args: any[]) => void"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.info.$1",
                "type": "Array",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "any[]"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.success",
            "type": "Function",
            "tags": [],
            "label": "success",
            "description": [],
            "signature": [
              "(...args: any[]) => void"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.success.$1",
                "type": "Array",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "any[]"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.warning",
            "type": "Function",
            "tags": [],
            "label": "warning",
            "description": [],
            "signature": [
              "(...args: any[]) => void"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.warning.$1",
                "type": "Array",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "any[]"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.error",
            "type": "Function",
            "tags": [],
            "label": "error",
            "description": [],
            "signature": [
              "(error: string | Error) => void"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.error.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "error",
                "description": [],
                "signature": [
                  "string | Error"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.write",
            "type": "Function",
            "tags": [],
            "label": "write",
            "description": [],
            "signature": [
              "(...args: any[]) => void"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.write.$1",
                "type": "Array",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "any[]"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.getWriters",
            "type": "Function",
            "tags": [],
            "label": "getWriters",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/tooling-log",
                "scope": "common",
                "docId": "kibKbnToolingLogPluginApi",
                "section": "def-common.Writer",
                "text": "Writer"
              },
              "[]"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.setWriters",
            "type": "Function",
            "tags": [],
            "label": "setWriters",
            "description": [],
            "signature": [
              "(writers: ",
              {
                "pluginId": "@kbn/tooling-log",
                "scope": "common",
                "docId": "kibKbnToolingLogPluginApi",
                "section": "def-common.Writer",
                "text": "Writer"
              },
              "[]) => void"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.setWriters.$1",
                "type": "Array",
                "tags": [],
                "label": "writers",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/tooling-log",
                    "scope": "common",
                    "docId": "kibKbnToolingLogPluginApi",
                    "section": "def-common.Writer",
                    "text": "Writer"
                  },
                  "[]"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.getWritten$",
            "type": "Function",
            "tags": [],
            "label": "getWritten$",
            "description": [],
            "signature": [
              "() => ",
              "Observable",
              "<",
              {
                "pluginId": "@kbn/tooling-log",
                "scope": "common",
                "docId": "kibKbnToolingLogPluginApi",
                "section": "def-common.Message",
                "text": "Message"
              },
              ">"
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ToolingLog.withType",
            "type": "Function",
            "tags": [],
            "label": "withType",
            "description": [
              "\nCreate a new ToolingLog which sets a different \"type\", allowing messages to be filtered out by \"source\""
            ],
            "signature": [
              "(type: string) => ",
              {
                "pluginId": "@kbn/tooling-log",
                "scope": "common",
                "docId": "kibKbnToolingLogPluginApi",
                "section": "def-common.ToolingLog",
                "text": "ToolingLog"
              }
            ],
            "path": "packages/kbn-tooling-log/src/tooling_log.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.ToolingLog.withType.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "A string that will be passed along with messages from this logger which can be used to filter messages with `ignoreSources`"
                ],
                "signature": [
                  "string"
                ],
                "path": "packages/kbn-tooling-log/src/tooling_log.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.createLazyPageObject",
        "type": "Function",
        "tags": [],
        "label": "createLazyPageObject",
        "description": [
          "\nCreates a lazily instantiated proxy for a Page Object class, deferring the creation of the instance until\na property or method is accessed. It helps avoiding instantiation of page objects that may not be used\nin certain test scenarios.\n"
        ],
        "signature": [
          "(PageObjectClass: new (page: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutPage",
            "text": "ScoutPage"
          },
          ", ...args: any[]) => T, scoutPage: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutPage",
            "text": "ScoutPage"
          },
          ", constructorArgs: any[]) => T"
        ],
        "path": "packages/kbn-scout/src/playwright/page_objects/utils/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.createLazyPageObject.$1",
            "type": "Object",
            "tags": [],
            "label": "PageObjectClass",
            "description": [
              "- The page object class to be instantiated lazily."
            ],
            "signature": [
              "new (page: ",
              {
                "pluginId": "@kbn/scout",
                "scope": "common",
                "docId": "kibKbnScoutPluginApi",
                "section": "def-common.ScoutPage",
                "text": "ScoutPage"
              },
              ", ...args: any[]) => T"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/utils/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.createLazyPageObject.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "scoutPage",
            "description": [
              "- ScoutPage instance, that extendes the Playwright `page` fixture and passed to the page object class constructor."
            ],
            "signature": [
              {
                "pluginId": "@kbn/scout",
                "scope": "common",
                "docId": "kibKbnScoutPluginApi",
                "section": "def-common.ScoutPage",
                "text": "ScoutPage"
              }
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/utils/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.createLazyPageObject.$3",
            "type": "Array",
            "tags": [],
            "label": "constructorArgs",
            "description": [
              "- Additional arguments to be passed to the page object class constructor."
            ],
            "signature": [
              "any[]"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/utils/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "A proxy object that behaves like an instance of the page object class, instantiating it on demand."
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.createPlaywrightConfig",
        "type": "Function",
        "tags": [],
        "label": "createPlaywrightConfig",
        "description": [],
        "signature": [
          "(options: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutPlaywrightOptions",
            "text": "ScoutPlaywrightOptions"
          },
          ") => ",
          "PlaywrightTestConfig",
          "<{}, {}>"
        ],
        "path": "packages/kbn-scout/src/playwright/config/create_config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.createPlaywrightConfig.$1",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/scout",
                "scope": "common",
                "docId": "kibKbnScoutPluginApi",
                "section": "def-common.ScoutPlaywrightOptions",
                "text": "ScoutPlaywrightOptions"
              }
            ],
            "path": "packages/kbn-scout/src/playwright/config/create_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.expect",
        "type": "Function",
        "tags": [],
        "label": "expect",
        "description": [],
        "signature": [
          "{ <T = unknown>(actual: T, messageOrOptions?: string | { message?: string | undefined; } | undefined): MakeMatchers<void, T, {}>; soft: <T = unknown>(actual: T, messageOrOptions?: string | { message?: string | undefined; } | undefined) => MakeMatchers<void, T, {}>; poll: <T = unknown>(actual: () => T | Promise<T>, messageOrOptions?: string | { message?: string | undefined; timeout?: number | undefined; intervals?: number[] | undefined; } | undefined) => PollMatchers<Promise<void>, T, {}>; extend<MoreMatchers extends Record<string, (this: ",
          "ExpectMatcherState",
          ", receiver: any, ...args: any[]) => ",
          "MatcherReturnType",
          " | Promise<",
          "MatcherReturnType",
          ">>>(matchers: MoreMatchers): ",
          "Expect",
          "<{} & MoreMatchers>; configure: (configuration: { message?: string | undefined; timeout?: number | undefined; soft?: boolean | undefined; }) => ",
          "Expect",
          "<{}>; getState(): unknown; not: Omit<AsymmetricMatchers, \"any\" | \"anything\">; } & AsymmetricMatchers"
        ],
        "path": "packages/kbn-scout/src/playwright/expect.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.expect.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "actual",
            "description": [],
            "signature": [
              "T"
            ],
            "path": "node_modules/playwright/types/test.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.expect.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "messageOrOptions",
            "description": [],
            "signature": [
              "string | { message?: string | undefined; } | undefined"
            ],
            "path": "node_modules/playwright/types/test.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.test",
        "type": "Function",
        "tags": [],
        "label": "test",
        "description": [],
        "signature": [
          "TestType",
          "<",
          "PlaywrightTestArgs",
          " & ",
          "PlaywrightTestOptions",
          " & { browserAuth: ",
          "LoginFixture",
          "; } & ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutTestFixtures",
            "text": "ScoutTestFixtures"
          },
          " & { validateTags: void; }, ",
          "PlaywrightWorkerArgs",
          " & ",
          "PlaywrightWorkerOptions",
          " & ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutWorkerFixtures",
            "text": "ScoutWorkerFixtures"
          },
          ">"
        ],
        "path": "packages/kbn-scout/src/playwright/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.EsArchiverFixture",
        "type": "Interface",
        "tags": [],
        "label": "EsArchiverFixture",
        "description": [],
        "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.EsArchiverFixture.loadIfNeeded",
            "type": "Function",
            "tags": [],
            "label": "loadIfNeeded",
            "description": [
              "\nLoads an Elasticsearch archive if the specified data index is not present."
            ],
            "signature": [
              "(name: string, performance?: ",
              {
                "pluginId": "@kbn/es-archiver",
                "scope": "common",
                "docId": "kibKbnEsArchiverPluginApi",
                "section": "def-common.LoadActionPerfOptions",
                "text": "LoadActionPerfOptions"
              },
              " | undefined) => Promise<Record<string, ",
              "IndexStats",
              ">>"
            ],
            "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.EsArchiverFixture.loadIfNeeded.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "The name of the archive to load."
                ],
                "signature": [
                  "string"
                ],
                "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout",
                "id": "def-common.EsArchiverFixture.loadIfNeeded.$2",
                "type": "Object",
                "tags": [],
                "label": "performance",
                "description": [
                  "An object of type LoadActionPerfOptions to measure and\nreport performance metrics during the load operation."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/es-archiver",
                    "scope": "common",
                    "docId": "kibKbnEsArchiverPluginApi",
                    "section": "def-common.LoadActionPerfOptions",
                    "text": "LoadActionPerfOptions"
                  },
                  " | undefined"
                ],
                "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "A Promise that resolves to an object containing index statistics."
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.PageObjects",
        "type": "Interface",
        "tags": [],
        "label": "PageObjects",
        "description": [],
        "path": "packages/kbn-scout/src/playwright/page_objects/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.PageObjects.datePicker",
            "type": "Object",
            "tags": [],
            "label": "datePicker",
            "description": [],
            "signature": [
              "DatePicker"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.PageObjects.discover",
            "type": "Object",
            "tags": [],
            "label": "discover",
            "description": [],
            "signature": [
              "DiscoverApp"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.PageObjects.dashboard",
            "type": "Object",
            "tags": [],
            "label": "dashboard",
            "description": [],
            "signature": [
              "DashboardApp"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.PageObjects.filterBar",
            "type": "Object",
            "tags": [],
            "label": "filterBar",
            "description": [],
            "signature": [
              "FilterBar"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.ScoutPlaywrightOptions",
        "type": "Interface",
        "tags": [],
        "label": "ScoutPlaywrightOptions",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutPlaywrightOptions",
            "text": "ScoutPlaywrightOptions"
          },
          " extends Pick<",
          "PlaywrightTestConfig",
          "<{}, {}>, \"workers\" | \"testDir\">"
        ],
        "path": "packages/kbn-scout/src/playwright/types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutPlaywrightOptions.testDir",
            "type": "string",
            "tags": [],
            "label": "testDir",
            "description": [],
            "path": "packages/kbn-scout/src/playwright/types/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutPlaywrightOptions.workers",
            "type": "CompoundType",
            "tags": [],
            "label": "workers",
            "description": [],
            "signature": [
              "2 | 1 | undefined"
            ],
            "path": "packages/kbn-scout/src/playwright/types/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.ScoutTestFixtures",
        "type": "Interface",
        "tags": [],
        "label": "ScoutTestFixtures",
        "description": [],
        "path": "packages/kbn-scout/src/playwright/fixtures/types/test_scope.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutTestFixtures.browserAuth",
            "type": "Object",
            "tags": [],
            "label": "browserAuth",
            "description": [],
            "signature": [
              "LoginFixture"
            ],
            "path": "packages/kbn-scout/src/playwright/fixtures/types/test_scope.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutTestFixtures.page",
            "type": "CompoundType",
            "tags": [],
            "label": "page",
            "description": [],
            "signature": [
              "Page",
              " & { gotoApp: (appName: string, options?: { referer?: string | undefined; timeout?: number | undefined; waitUntil?: \"load\" | \"domcontentloaded\" | \"networkidle\" | \"commit\" | undefined; } | undefined) => Promise<",
              "Response",
              " | null>; waitForLoadingIndicatorHidden: () => Promise<",
              "ElementHandle",
              "<HTMLElement | SVGElement> | null>; testSubj: { check: (selector: string, options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; strict?: boolean | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>; click: (selector: string, options?: { button?: \"right\" | \"left\" | \"middle\" | undefined; clickCount?: number | undefined; delay?: number | undefined; force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; strict?: boolean | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>; dblclick: (selector: string, options?: { button?: \"right\" | \"left\" | \"middle\" | undefined; delay?: number | undefined; force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; strict?: boolean | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>; fill: (selector: string, value: string, options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>; focus: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>; getAttribute: (selector: string, name: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<string | null>; hover: (selector: string, options?: { force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; strict?: boolean | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>; innerText: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<string>; isEnabled: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<boolean>; isChecked: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<boolean>; isHidden: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<boolean>; isVisible: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<boolean>; locator: (selector: string, options?: { has?: ",
              "Locator",
              " | undefined; hasNot?: ",
              "Locator",
              " | undefined; hasNotText?: string | RegExp | undefined; hasText?: string | RegExp | undefined; } | undefined) => ",
              "Locator",
              "; waitForSelector: (selector: string, options?: PageWaitForSelectorOptions | undefined) => Promise<",
              "ElementHandle",
              "<HTMLElement | SVGElement> | null>; typeWithDelay: (selector: string, text: string, options?: { delay: number; } | undefined) => Promise<void>; clearInput: (selector: string) => Promise<void>; }; }"
            ],
            "path": "packages/kbn-scout/src/playwright/fixtures/types/test_scope.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutTestFixtures.pageObjects",
            "type": "Object",
            "tags": [],
            "label": "pageObjects",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/scout",
                "scope": "common",
                "docId": "kibKbnScoutPluginApi",
                "section": "def-common.PageObjects",
                "text": "PageObjects"
              }
            ],
            "path": "packages/kbn-scout/src/playwright/fixtures/types/test_scope.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.ScoutTestOptions",
        "type": "Interface",
        "tags": [],
        "label": "ScoutTestOptions",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutTestOptions",
            "text": "ScoutTestOptions"
          },
          " extends ",
          "PlaywrightTestOptions"
        ],
        "path": "packages/kbn-scout/src/playwright/types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutTestOptions.serversConfigDir",
            "type": "string",
            "tags": [],
            "label": "serversConfigDir",
            "description": [],
            "path": "packages/kbn-scout/src/playwright/types/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutTestOptions.VALID_CONFIG_MARKER",
            "type": "boolean",
            "tags": [],
            "label": "[VALID_CONFIG_MARKER]",
            "description": [],
            "path": "packages/kbn-scout/src/playwright/types/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.ScoutWorkerFixtures",
        "type": "Interface",
        "tags": [],
        "label": "ScoutWorkerFixtures",
        "description": [
          "\nThe `ScoutWorkerFixtures` type defines the set of fixtures that are available"
        ],
        "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutWorkerFixtures.log",
            "type": "Object",
            "tags": [],
            "label": "log",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/tooling-log",
                "scope": "common",
                "docId": "kibKbnToolingLogPluginApi",
                "section": "def-common.ToolingLog",
                "text": "ToolingLog"
              }
            ],
            "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutWorkerFixtures.config",
            "type": "Object",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "ScoutTestConfig"
            ],
            "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutWorkerFixtures.kbnUrl",
            "type": "Object",
            "tags": [],
            "label": "kbnUrl",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/scout",
                "scope": "common",
                "docId": "kibKbnScoutPluginApi",
                "section": "def-common.KibanaUrl",
                "text": "KibanaUrl"
              }
            ],
            "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutWorkerFixtures.esClient",
            "type": "Object",
            "tags": [],
            "label": "esClient",
            "description": [],
            "signature": [
              "default"
            ],
            "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutWorkerFixtures.kbnClient",
            "type": "Object",
            "tags": [],
            "label": "kbnClient",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/test",
                "scope": "common",
                "docId": "kibKbnTestPluginApi",
                "section": "def-common.KbnClient",
                "text": "KbnClient"
              }
            ],
            "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutWorkerFixtures.uiSettings",
            "type": "Object",
            "tags": [],
            "label": "uiSettings",
            "description": [],
            "signature": [
              "UiSettingsFixture"
            ],
            "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutWorkerFixtures.esArchiver",
            "type": "Object",
            "tags": [],
            "label": "esArchiver",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/scout",
                "scope": "common",
                "docId": "kibKbnScoutPluginApi",
                "section": "def-common.EsArchiverFixture",
                "text": "EsArchiverFixture"
              }
            ],
            "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.ScoutWorkerFixtures.samlAuth",
            "type": "Object",
            "tags": [],
            "label": "samlAuth",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/test",
                "scope": "common",
                "docId": "kibKbnTestPluginApi",
                "section": "def-common.SamlSessionManager",
                "text": "SamlSessionManager"
              }
            ],
            "path": "packages/kbn-scout/src/playwright/fixtures/types/worker_scope.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.ScoutPage",
        "type": "Type",
        "tags": [],
        "label": "ScoutPage",
        "description": [
          "\nExtends the Playwright 'Page' interface with methods specific to Kibana.\nReasons to use 'ReturnType' instead of Explicit Typings:\n- DRY Principle: automatically stays in sync with the Playwright API, reducing maintenance overhead.\n- Future-Proofing: If Playwright changes the return type of methods, these types will update accordingly.\nRecommendation: define Explicit Types as return types only if methods (e.g. 'typeWithDelay')\nhave any additional logic or Kibana-specific behavior."
        ],
        "signature": [
          "Page",
          " & { gotoApp: (appName: string, options?: { referer?: string | undefined; timeout?: number | undefined; waitUntil?: \"load\" | \"domcontentloaded\" | \"networkidle\" | \"commit\" | undefined; } | undefined) => Promise<",
          "Response",
          " | null>; waitForLoadingIndicatorHidden: () => Promise<",
          "ElementHandle",
          "<HTMLElement | SVGElement> | null>; testSubj: { check: (selector: string, options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; strict?: boolean | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>; click: (selector: string, options?: { button?: \"right\" | \"left\" | \"middle\" | undefined; clickCount?: number | undefined; delay?: number | undefined; force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; strict?: boolean | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>; dblclick: (selector: string, options?: { button?: \"right\" | \"left\" | \"middle\" | undefined; delay?: number | undefined; force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; strict?: boolean | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>; fill: (selector: string, value: string, options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>; focus: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>; getAttribute: (selector: string, name: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<string | null>; hover: (selector: string, options?: { force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; strict?: boolean | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>; innerText: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<string>; isEnabled: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<boolean>; isChecked: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<boolean>; isHidden: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<boolean>; isVisible: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<boolean>; locator: (selector: string, options?: { has?: ",
          "Locator",
          " | undefined; hasNot?: ",
          "Locator",
          " | undefined; hasNotText?: string | RegExp | undefined; hasText?: string | RegExp | undefined; } | undefined) => ",
          "Locator",
          "; waitForSelector: (selector: string, options?: PageWaitForSelectorOptions | undefined) => Promise<",
          "ElementHandle",
          "<HTMLElement | SVGElement> | null>; typeWithDelay: (selector: string, text: string, options?: { delay: number; } | undefined) => Promise<void>; clearInput: (selector: string) => Promise<void>; }; }"
        ],
        "path": "packages/kbn-scout/src/playwright/fixtures/types/test_scope.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "@kbn/scout",
        "id": "def-common.tags",
        "type": "Object",
        "tags": [],
        "label": "tags",
        "description": [],
        "path": "packages/kbn-scout/src/playwright/tags.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.tags.ESS_ONLY",
            "type": "Array",
            "tags": [],
            "label": "ESS_ONLY",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "packages/kbn-scout/src/playwright/tags.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.tags.SERVERLESS_ONLY",
            "type": "Array",
            "tags": [],
            "label": "SERVERLESS_ONLY",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "packages/kbn-scout/src/playwright/tags.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout",
            "id": "def-common.tags.DEPLOYMENT_AGNOSTIC",
            "type": "Array",
            "tags": [],
            "label": "DEPLOYMENT_AGNOSTIC",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "packages/kbn-scout/src/playwright/tags.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ]
  }
}