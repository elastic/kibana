{
  "id": "@kbn/core-http-server",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteValidationError",
        "type": "Class",
        "tags": [],
        "label": "RouteValidationError",
        "description": [
          "\nError to return when the validation is not successful."
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteValidationError",
            "text": "RouteValidationError"
          },
          " extends ",
          {
            "pluginId": "@kbn/config-schema",
            "scope": "common",
            "docId": "kibKbnConfigSchemaPluginApi",
            "section": "def-common.SchemaTypeError",
            "text": "SchemaTypeError"
          }
        ],
        "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteValidationError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RouteValidationError.Unnamed.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "error",
                "description": [],
                "signature": [
                  "string | Error"
                ],
                "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RouteValidationError.Unnamed.$2",
                "type": "Array",
                "tags": [],
                "label": "path",
                "description": [],
                "signature": [
                  "string[]"
                ],
                "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.AuthRedirectedParams",
        "type": "Interface",
        "tags": [],
        "label": "AuthRedirectedParams",
        "description": [
          "\nResult of auth redirection."
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthRedirectedParams.headers",
            "type": "CompoundType",
            "tags": [],
            "label": "headers",
            "description": [
              "\nHeaders to attach for auth redirect.\nMust include \"location\" header"
            ],
            "signature": [
              "{ location: string; } & ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ResponseHeaders",
                "text": "ResponseHeaders"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.AuthResultAuthenticated",
        "type": "Interface",
        "tags": [],
        "label": "AuthResultAuthenticated",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthResultAuthenticated",
            "text": "AuthResultAuthenticated"
          },
          " extends ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthResultParams",
            "text": "AuthResultParams"
          }
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthResultAuthenticated.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthResultType",
                "text": "AuthResultType"
              },
              ".authenticated"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.AuthResultNotHandled",
        "type": "Interface",
        "tags": [],
        "label": "AuthResultNotHandled",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthResultNotHandled.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthResultType",
                "text": "AuthResultType"
              },
              ".notHandled"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.AuthResultParams",
        "type": "Interface",
        "tags": [],
        "label": "AuthResultParams",
        "description": [
          "\nResult of successful authentication."
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthResultParams.state",
            "type": "Object",
            "tags": [],
            "label": "state",
            "description": [
              "\nData to associate with an incoming request. Any downstream plugin may get access to the data."
            ],
            "signature": [
              "Record<string, any> | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthResultParams.requestHeaders",
            "type": "Object",
            "tags": [],
            "label": "requestHeaders",
            "description": [
              "\nAuth specific headers to attach to a request object.\nUsed to perform a request to Elasticsearch on behalf of an authenticated user."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthHeaders",
                "text": "AuthHeaders"
              },
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthResultParams.responseHeaders",
            "type": "Object",
            "tags": [],
            "label": "responseHeaders",
            "description": [
              "\nAuth specific headers to attach to a response object.\nUsed to send back authentication mechanism related headers to a client when needed."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthHeaders",
                "text": "AuthHeaders"
              },
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.AuthResultRedirected",
        "type": "Interface",
        "tags": [],
        "label": "AuthResultRedirected",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthResultRedirected",
            "text": "AuthResultRedirected"
          },
          " extends ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthRedirectedParams",
            "text": "AuthRedirectedParams"
          }
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthResultRedirected.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthResultType",
                "text": "AuthResultType"
              },
              ".redirected"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.AuthToolkit",
        "type": "Interface",
        "tags": [],
        "label": "AuthToolkit",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthToolkit.authenticated",
            "type": "Function",
            "tags": [],
            "label": "authenticated",
            "description": [
              "Authentication is successful with given credentials, allow request to pass through"
            ],
            "signature": [
              "(data?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthResultParams",
                "text": "AuthResultParams"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthResult",
                "text": "AuthResult"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.AuthToolkit.authenticated.$1",
                "type": "Object",
                "tags": [],
                "label": "data",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.AuthResultParams",
                    "text": "AuthResultParams"
                  },
                  " | undefined"
                ],
                "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthToolkit.notHandled",
            "type": "Function",
            "tags": [],
            "label": "notHandled",
            "description": [
              "\nUser has no credentials.\nAllows user to access a resource when authRequired is 'optional'\nRejects a request when authRequired: true"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthResult",
                "text": "AuthResult"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthToolkit.redirected",
            "type": "Function",
            "tags": [],
            "label": "redirected",
            "description": [
              "\nRedirects user to another location to complete authentication when authRequired: true\nAllows user to access a resource without redirection when authRequired: 'optional'"
            ],
            "signature": [
              "(headers: { location: string; } & ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ResponseHeaders",
                "text": "ResponseHeaders"
              },
              ") => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthResult",
                "text": "AuthResult"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.AuthToolkit.redirected.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "headers",
                "description": [],
                "signature": [
                  "{ location: string; } & ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.ResponseHeaders",
                    "text": "ResponseHeaders"
                  }
                ],
                "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.CustomHttpResponseOptions",
        "type": "Interface",
        "tags": [],
        "label": "CustomHttpResponseOptions",
        "description": [
          "\nHTTP response parameters for a response with adjustable status code."
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.CustomHttpResponseOptions",
            "text": "CustomHttpResponseOptions"
          },
          "<T>"
        ],
        "path": "packages/core/http/core-http-server/src/router/response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.CustomHttpResponseOptions.body",
            "type": "Uncategorized",
            "tags": [],
            "label": "body",
            "description": [
              "HTTP message to send to the client"
            ],
            "signature": [
              "T | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.CustomHttpResponseOptions.headers",
            "type": "CompoundType",
            "tags": [],
            "label": "headers",
            "description": [
              "HTTP Headers with additional information about response"
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ResponseHeaders",
                "text": "ResponseHeaders"
              },
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.CustomHttpResponseOptions.bypassErrorFormat",
            "type": "CompoundType",
            "tags": [],
            "label": "bypassErrorFormat",
            "description": [
              "Bypass the default error formatting"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.CustomHttpResponseOptions.statusCode",
            "type": "number",
            "tags": [],
            "label": "statusCode",
            "description": [],
            "path": "packages/core/http/core-http-server/src/router/response.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.ErrorHttpResponseOptions",
        "type": "Interface",
        "tags": [],
        "label": "ErrorHttpResponseOptions",
        "description": [
          "\nHTTP response parameters"
        ],
        "path": "packages/core/http/core-http-server/src/router/response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.ErrorHttpResponseOptions.body",
            "type": "CompoundType",
            "tags": [],
            "label": "body",
            "description": [
              "HTTP message to send to the client"
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ResponseError",
                "text": "ResponseError"
              },
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.ErrorHttpResponseOptions.headers",
            "type": "CompoundType",
            "tags": [],
            "label": "headers",
            "description": [
              "HTTP Headers with additional information about response"
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ResponseHeaders",
                "text": "ResponseHeaders"
              },
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/response.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.FakeRawRequest",
        "type": "Interface",
        "tags": [],
        "label": "FakeRawRequest",
        "description": [
          "\nRepresents a fake raw request.\nCan be used to instantiate a `KibanaRequest`."
        ],
        "path": "packages/core/http/core-http-server/src/router/raw_request.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.FakeRawRequest.headers",
            "type": "CompoundType",
            "tags": [],
            "label": "headers",
            "description": [
              "The headers associated with the request."
            ],
            "signature": [
              "{ accept?: string | string[] | undefined; \"accept-language\"?: string | string[] | undefined; \"accept-patch\"?: string | string[] | undefined; \"accept-ranges\"?: string | string[] | undefined; \"access-control-allow-credentials\"?: string | string[] | undefined; \"access-control-allow-headers\"?: string | string[] | undefined; \"access-control-allow-methods\"?: string | string[] | undefined; \"access-control-allow-origin\"?: string | string[] | undefined; \"access-control-expose-headers\"?: string | string[] | undefined; \"access-control-max-age\"?: string | string[] | undefined; \"access-control-request-headers\"?: string | string[] | undefined; \"access-control-request-method\"?: string | string[] | undefined; age?: string | string[] | undefined; allow?: string | string[] | undefined; \"alt-svc\"?: string | string[] | undefined; authorization?: string | string[] | undefined; \"cache-control\"?: string | string[] | undefined; connection?: string | string[] | undefined; \"content-disposition\"?: string | string[] | undefined; \"content-encoding\"?: string | string[] | undefined; \"content-language\"?: string | string[] | undefined; \"content-length\"?: string | string[] | undefined; \"content-location\"?: string | string[] | undefined; \"content-range\"?: string | string[] | undefined; \"content-type\"?: string | string[] | undefined; cookie?: string | string[] | undefined; date?: string | string[] | undefined; etag?: string | string[] | undefined; expect?: string | string[] | undefined; expires?: string | string[] | undefined; forwarded?: string | string[] | undefined; from?: string | string[] | undefined; host?: string | string[] | undefined; \"if-match\"?: string | string[] | undefined; \"if-modified-since\"?: string | string[] | undefined; \"if-none-match\"?: string | string[] | undefined; \"if-unmodified-since\"?: string | string[] | undefined; \"last-modified\"?: string | string[] | undefined; location?: string | string[] | undefined; origin?: string | string[] | undefined; pragma?: string | string[] | undefined; \"proxy-authenticate\"?: string | string[] | undefined; \"proxy-authorization\"?: string | string[] | undefined; \"public-key-pins\"?: string | string[] | undefined; range?: string | string[] | undefined; referer?: string | string[] | undefined; \"retry-after\"?: string | string[] | undefined; \"sec-websocket-accept\"?: string | string[] | undefined; \"sec-websocket-extensions\"?: string | string[] | undefined; \"sec-websocket-key\"?: string | string[] | undefined; \"sec-websocket-protocol\"?: string | string[] | undefined; \"sec-websocket-version\"?: string | string[] | undefined; \"set-cookie\"?: string | string[] | undefined; \"strict-transport-security\"?: string | string[] | undefined; tk?: string | string[] | undefined; trailer?: string | string[] | undefined; \"transfer-encoding\"?: string | string[] | undefined; upgrade?: string | string[] | undefined; \"user-agent\"?: string | string[] | undefined; vary?: string | string[] | undefined; via?: string | string[] | undefined; warning?: string | string[] | undefined; \"www-authenticate\"?: string | string[] | undefined; } & { [header: string]: string | string[] | undefined; }"
            ],
            "path": "packages/core/http/core-http-server/src/router/raw_request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.FakeRawRequest.path",
            "type": "string",
            "tags": [],
            "label": "path",
            "description": [
              "The path of the request"
            ],
            "path": "packages/core/http/core-http-server/src/router/raw_request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.FakeRawRequest.method",
            "type": "string",
            "tags": [],
            "label": "method",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/raw_request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.FakeRawRequest.url",
            "type": "Object",
            "tags": [],
            "label": "url",
            "description": [],
            "signature": [
              "URL",
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/raw_request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.FakeRawRequest.app",
            "type": "Object",
            "tags": [],
            "label": "app",
            "description": [],
            "signature": [
              "Record<string, unknown> | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/raw_request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.FakeRawRequest.auth",
            "type": "Object",
            "tags": [],
            "label": "auth",
            "description": [],
            "signature": [
              "{ isAuthenticated?: boolean | undefined; } | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/raw_request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.FakeRawRequest.route",
            "type": "Object",
            "tags": [],
            "label": "route",
            "description": [],
            "signature": [
              "{ settings?: { tags?: string[] | undefined; app?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRouteOptions",
                "text": "KibanaRouteOptions"
              },
              " | undefined; payload?: ",
              "RouteOptionsPayload",
              " | undefined; } | undefined; } | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/raw_request.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.HttpAuth",
        "type": "Interface",
        "tags": [],
        "label": "HttpAuth",
        "description": [],
        "path": "packages/core/http/core-http-server/src/http_contract.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpAuth.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGets authentication state for a request. Returned by `auth` interceptor.\n{@link GetAuthState}"
            ],
            "signature": [
              "<T = unknown>(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => { status: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthStatus",
                "text": "AuthStatus"
              },
              "; state: T; }"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.HttpAuth.get.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "packages/core/http/core-http-server/src/auth_state.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpAuth.isAuthenticated",
            "type": "Function",
            "tags": [],
            "label": "isAuthenticated",
            "description": [
              "\nReturns authentication status for a request.\n{@link IsAuthenticated}"
            ],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => boolean"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.HttpAuth.isAuthenticated.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "packages/core/http/core-http-server/src/auth_state.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.HttpResponseOptions",
        "type": "Interface",
        "tags": [],
        "label": "HttpResponseOptions",
        "description": [
          "\nHTTP response parameters"
        ],
        "path": "packages/core/http/core-http-server/src/router/response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpResponseOptions.body",
            "type": "CompoundType",
            "tags": [],
            "label": "body",
            "description": [
              "HTTP message to send to the client"
            ],
            "signature": [
              "string | Record<string, any> | ",
              "Stream",
              " | Buffer | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpResponseOptions.headers",
            "type": "CompoundType",
            "tags": [],
            "label": "headers",
            "description": [
              "HTTP Headers with additional information about response"
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ResponseHeaders",
                "text": "ResponseHeaders"
              },
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpResponseOptions.bypassErrorFormat",
            "type": "CompoundType",
            "tags": [],
            "label": "bypassErrorFormat",
            "description": [
              "Bypass the default error formatting"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/response.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.HttpServerInfo",
        "type": "Interface",
        "tags": [],
        "label": "HttpServerInfo",
        "description": [
          "\nInformation about what hostname, port, and protocol the server process is\nrunning on. Note that this may not match the URL that end-users access\nKibana at. For the public URL, see {@link BasePath.publicBaseUrl}."
        ],
        "path": "packages/core/http/core-http-server/src/http_contract.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServerInfo.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "The name of the Kibana server"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServerInfo.hostname",
            "type": "string",
            "tags": [],
            "label": "hostname",
            "description": [
              "The hostname of the server"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServerInfo.port",
            "type": "number",
            "tags": [],
            "label": "port",
            "description": [
              "The port the server is listening on"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServerInfo.protocol",
            "type": "CompoundType",
            "tags": [],
            "label": "protocol",
            "description": [
              "The protocol used by the server"
            ],
            "signature": [
              "\"http\" | \"https\" | \"socket\""
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.HttpServicePreboot",
        "type": "Interface",
        "tags": [],
        "label": "HttpServicePreboot",
        "description": [
          "\nKibana HTTP Service provides an abstraction to work with the HTTP stack at the `preboot` stage. This functionality\nallows Kibana to serve user requests even before Kibana becomes fully operational. Only Core and `preboot` plugins\ncan define HTTP routes at this stage.\n"
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.HttpServicePreboot",
            "text": "HttpServicePreboot"
          },
          "<DefaultRequestHandlerType>"
        ],
        "path": "packages/core/http/core-http-server/src/http_contract.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServicePreboot.registerRoutes",
            "type": "Function",
            "tags": [],
            "label": "registerRoutes",
            "description": [
              "\nProvides ability to acquire `preboot` {@link IRouter} instance for a particular top-level path and register handler\nfunctions for any number of nested routes.\n"
            ],
            "signature": [
              "<ContextType extends DefaultRequestHandlerType = DefaultRequestHandlerType>(path: string, callback: (router: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IRouter",
                "text": "IRouter"
              },
              "<ContextType>) => void) => void"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.HttpServicePreboot.registerRoutes.$1",
                "type": "string",
                "tags": [],
                "label": "path",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "packages/core/http/core-http-server/src/http_contract.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.HttpServicePreboot.registerRoutes.$2",
                "type": "Function",
                "tags": [],
                "label": "callback",
                "description": [],
                "signature": [
                  "(router: ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IRouter",
                    "text": "IRouter"
                  },
                  "<ContextType>) => void"
                ],
                "path": "packages/core/http/core-http-server/src/http_contract.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServicePreboot.basePath",
            "type": "Object",
            "tags": [],
            "label": "basePath",
            "description": [
              "\nAccess or manipulate the Kibana base path\nSee {@link IBasePath}."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IBasePath",
                "text": "IBasePath"
              }
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServicePreboot.getServerInfo",
            "type": "Function",
            "tags": [],
            "label": "getServerInfo",
            "description": [
              "\nProvides common {@link HttpServerInfo | information} about the running preboot http server."
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.HttpServerInfo",
                "text": "HttpServerInfo"
              }
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.HttpServiceSetup",
        "type": "Interface",
        "tags": [],
        "label": "HttpServiceSetup",
        "description": [
          "\nKibana HTTP Service provides own abstraction for work with HTTP stack.\nPlugins don't have direct access to `hapi` server and its primitives anymore. Moreover,\nplugins shouldn't rely on the fact that HTTP Service uses one or another library under the hood.\nThis gives the platform flexibility to upgrade or changing our internal HTTP stack without breaking plugins.\nIf the HTTP Service lacks functionality you need, we are happy to discuss and support your needs.\n"
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.HttpServiceSetup",
            "text": "HttpServiceSetup"
          },
          "<DefaultRequestHandlerType>"
        ],
        "path": "packages/core/http/core-http-server/src/http_contract.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceSetup.createCookieSessionStorageFactory",
            "type": "Function",
            "tags": [],
            "label": "createCookieSessionStorageFactory",
            "description": [
              "\nCreates cookie based session storage factory {@link SessionStorageFactory}"
            ],
            "signature": [
              "<T>(cookieOptions: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.SessionStorageCookieOptions",
                "text": "SessionStorageCookieOptions"
              },
              "<T>) => Promise<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.SessionStorageFactory",
                "text": "SessionStorageFactory"
              },
              "<T>>"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.HttpServiceSetup.createCookieSessionStorageFactory.$1",
                "type": "Object",
                "tags": [],
                "label": "cookieOptions",
                "description": [
                  "{@link SessionStorageCookieOptions } - options to configure created cookie session storage."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.SessionStorageCookieOptions",
                    "text": "SessionStorageCookieOptions"
                  },
                  "<T>"
                ],
                "path": "packages/core/http/core-http-server/src/http_contract.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceSetup.registerOnPreRouting",
            "type": "Function",
            "tags": [],
            "label": "registerOnPreRouting",
            "description": [
              "\nTo define custom logic to perform for incoming requests before server performs a route lookup.\n"
            ],
            "signature": [
              "(handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreRoutingHandler",
                "text": "OnPreRoutingHandler"
              },
              ") => void"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.HttpServiceSetup.registerOnPreRouting.$1",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [
                  "{@link OnPreRoutingHandler } - function to call."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.OnPreRoutingHandler",
                    "text": "OnPreRoutingHandler"
                  }
                ],
                "path": "packages/core/http/core-http-server/src/http_contract.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceSetup.registerOnPreAuth",
            "type": "Function",
            "tags": [],
            "label": "registerOnPreAuth",
            "description": [
              "\nTo define custom logic to perform for incoming requests before\nthe Auth interceptor performs a check that user has access to requested resources.\n"
            ],
            "signature": [
              "(handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreAuthHandler",
                "text": "OnPreAuthHandler"
              },
              ") => void"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.HttpServiceSetup.registerOnPreAuth.$1",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [
                  "{@link OnPreRoutingHandler } - function to call."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.OnPreAuthHandler",
                    "text": "OnPreAuthHandler"
                  }
                ],
                "path": "packages/core/http/core-http-server/src/http_contract.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceSetup.registerAuth",
            "type": "Function",
            "tags": [],
            "label": "registerAuth",
            "description": [
              "\nTo define custom authentication and/or authorization mechanism for incoming requests.\n"
            ],
            "signature": [
              "(handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthenticationHandler",
                "text": "AuthenticationHandler"
              },
              ") => void"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.HttpServiceSetup.registerAuth.$1",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [
                  "{@link AuthenticationHandler } - function to perform authentication."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.AuthenticationHandler",
                    "text": "AuthenticationHandler"
                  }
                ],
                "path": "packages/core/http/core-http-server/src/http_contract.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceSetup.registerOnPostAuth",
            "type": "Function",
            "tags": [],
            "label": "registerOnPostAuth",
            "description": [
              "\nTo define custom logic after Auth interceptor did make sure a user has access to the requested resource.\n"
            ],
            "signature": [
              "(handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPostAuthHandler",
                "text": "OnPostAuthHandler"
              },
              ") => void"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.HttpServiceSetup.registerOnPostAuth.$1",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [
                  "{@link OnPostAuthHandler } - function to call."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.OnPostAuthHandler",
                    "text": "OnPostAuthHandler"
                  }
                ],
                "path": "packages/core/http/core-http-server/src/http_contract.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceSetup.registerOnPreResponse",
            "type": "Function",
            "tags": [],
            "label": "registerOnPreResponse",
            "description": [
              "\nTo define custom logic to perform for the server response.\n"
            ],
            "signature": [
              "(handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreResponseHandler",
                "text": "OnPreResponseHandler"
              },
              ") => void"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.HttpServiceSetup.registerOnPreResponse.$1",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [
                  "{@link OnPreResponseHandler } - function to call."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.OnPreResponseHandler",
                    "text": "OnPreResponseHandler"
                  }
                ],
                "path": "packages/core/http/core-http-server/src/http_contract.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceSetup.basePath",
            "type": "Object",
            "tags": [],
            "label": "basePath",
            "description": [
              "\nAccess or manipulate the Kibana base path\nSee {@link IBasePath}."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IBasePath",
                "text": "IBasePath"
              }
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceSetup.csp",
            "type": "Object",
            "tags": [],
            "label": "csp",
            "description": [
              "\nThe CSP config used for Kibana."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ICspConfig",
                "text": "ICspConfig"
              }
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceSetup.createRouter",
            "type": "Function",
            "tags": [],
            "label": "createRouter",
            "description": [
              "\nProvides ability to declare a handler function for a particular path and HTTP request method.\n"
            ],
            "signature": [
              "<Context extends DefaultRequestHandlerType = DefaultRequestHandlerType>() => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IRouter",
                "text": "IRouter"
              },
              "<Context>"
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceSetup.registerRouteHandlerContext",
            "type": "Function",
            "tags": [],
            "label": "registerRouteHandlerContext",
            "description": [
              "\nRegister a context provider for a route handler."
            ],
            "signature": [
              "<Context extends DefaultRequestHandlerType, ContextName extends Exclude<keyof Context, \"resolve\">>(contextName: ContextName, provider: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IContextProvider",
                "text": "IContextProvider"
              },
              "<Context, ContextName>) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IContextContainer",
                "text": "IContextContainer"
              }
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.HttpServiceSetup.registerRouteHandlerContext.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "contextName",
                "description": [],
                "signature": [
                  "ContextName"
                ],
                "path": "packages/core/http/core-http-server/src/http_contract.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.HttpServiceSetup.registerRouteHandlerContext.$2",
                "type": "Function",
                "tags": [],
                "label": "provider",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IContextProvider",
                    "text": "IContextProvider"
                  },
                  "<Context, ContextName>"
                ],
                "path": "packages/core/http/core-http-server/src/http_contract.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceSetup.getServerInfo",
            "type": "Function",
            "tags": [],
            "label": "getServerInfo",
            "description": [
              "\nProvides common {@link HttpServerInfo | information} about the running http server."
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.HttpServerInfo",
                "text": "HttpServerInfo"
              }
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.HttpServiceStart",
        "type": "Interface",
        "tags": [],
        "label": "HttpServiceStart",
        "description": [],
        "path": "packages/core/http/core-http-server/src/http_contract.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceStart.basePath",
            "type": "Object",
            "tags": [],
            "label": "basePath",
            "description": [
              "\nAccess or manipulate the Kibana base path\nSee {@link IBasePath}."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IBasePath",
                "text": "IBasePath"
              }
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceStart.auth",
            "type": "Object",
            "tags": [],
            "label": "auth",
            "description": [
              "\nAuth status.\nSee {@link HttpAuth}"
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.HttpAuth",
                "text": "HttpAuth"
              }
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HttpServiceStart.getServerInfo",
            "type": "Function",
            "tags": [],
            "label": "getServerInfo",
            "description": [
              "\nProvides common {@link HttpServerInfo | information} about the running http server."
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.HttpServerInfo",
                "text": "HttpServerInfo"
              }
            ],
            "path": "packages/core/http/core-http-server/src/http_contract.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.IAuthHeadersStorage",
        "type": "Interface",
        "tags": [],
        "label": "IAuthHeadersStorage",
        "description": [],
        "path": "packages/core/http/core-http-server/src/auth_headers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IAuthHeadersStorage.set",
            "type": "Function",
            "tags": [],
            "label": "set",
            "description": [],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>, headers: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthHeaders",
                "text": "AuthHeaders"
              },
              ") => void"
            ],
            "path": "packages/core/http/core-http-server/src/auth_headers.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IAuthHeadersStorage.set.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "packages/core/http/core-http-server/src/auth_headers.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IAuthHeadersStorage.set.$2",
                "type": "Object",
                "tags": [],
                "label": "headers",
                "description": [],
                "signature": [
                  "{ [x: string]: string | string[]; }"
                ],
                "path": "packages/core/http/core-http-server/src/auth_headers.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IAuthHeadersStorage.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthHeaders",
                "text": "AuthHeaders"
              },
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/auth_headers.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IAuthHeadersStorage.get.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "packages/core/http/core-http-server/src/auth_headers.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.IBasePath",
        "type": "Interface",
        "tags": [],
        "label": "IBasePath",
        "description": [
          "\nAccess or manipulate the Kibana base path\n"
        ],
        "path": "packages/core/http/core-http-server/src/base_path.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IBasePath.serverBasePath",
            "type": "string",
            "tags": [],
            "label": "serverBasePath",
            "description": [
              "\nreturns the server's basePath.\n\nSee {@link IBasePath.get} for getting the basePath value for a specific request"
            ],
            "path": "packages/core/http/core-http-server/src/base_path.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IBasePath.publicBaseUrl",
            "type": "string",
            "tags": [],
            "label": "publicBaseUrl",
            "description": [
              "\nThe server's publicly exposed base URL, if configured. Includes protocol, host, port (optional) and the\n{@link IBasePath.serverBasePath}.\n"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/base_path.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IBasePath.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nreturns `basePath` value, specific for an incoming request."
            ],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => string"
            ],
            "path": "packages/core/http/core-http-server/src/base_path.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IBasePath.get.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "packages/core/http/core-http-server/src/base_path.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IBasePath.set",
            "type": "Function",
            "tags": [],
            "label": "set",
            "description": [
              "\nsets `basePath` value, specific for an incoming request."
            ],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>, requestSpecificBasePath: string) => void"
            ],
            "path": "packages/core/http/core-http-server/src/base_path.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IBasePath.set.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "packages/core/http/core-http-server/src/base_path.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IBasePath.set.$2",
                "type": "string",
                "tags": [],
                "label": "requestSpecificBasePath",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "packages/core/http/core-http-server/src/base_path.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IBasePath.prepend",
            "type": "Function",
            "tags": [],
            "label": "prepend",
            "description": [
              "\nPrepends `path` with the basePath."
            ],
            "signature": [
              "(path: string) => string"
            ],
            "path": "packages/core/http/core-http-server/src/base_path.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IBasePath.prepend.$1",
                "type": "string",
                "tags": [],
                "label": "path",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "packages/core/http/core-http-server/src/base_path.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IBasePath.remove",
            "type": "Function",
            "tags": [],
            "label": "remove",
            "description": [
              "\nRemoves the prepended basePath from the `path`."
            ],
            "signature": [
              "(path: string) => string"
            ],
            "path": "packages/core/http/core-http-server/src/base_path.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IBasePath.remove.$1",
                "type": "string",
                "tags": [],
                "label": "path",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "packages/core/http/core-http-server/src/base_path.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.IContextContainer",
        "type": "Interface",
        "tags": [],
        "label": "IContextContainer",
        "description": [
          "\nAn object that handles registration of context providers and configuring handlers with context.\n"
        ],
        "path": "packages/core/http/core-http-server/src/router/context_container.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IContextContainer.registerContext",
            "type": "Function",
            "tags": [],
            "label": "registerContext",
            "description": [
              "\nRegister a new context provider.\n"
            ],
            "signature": [
              "<Context extends ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RequestHandlerContextBase",
                "text": "RequestHandlerContextBase"
              },
              ", ContextName extends keyof Context>(pluginOpaqueId: symbol, contextName: ContextName, provider: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IContextProvider",
                "text": "IContextProvider"
              },
              "<Context, ContextName>) => this"
            ],
            "path": "packages/core/http/core-http-server/src/router/context_container.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IContextContainer.registerContext.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "pluginOpaqueId",
                "description": [
                  "- The plugin opaque ID for the plugin that registers this context."
                ],
                "signature": [
                  "symbol"
                ],
                "path": "packages/core/http/core-http-server/src/router/context_container.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IContextContainer.registerContext.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "contextName",
                "description": [
                  "- The key of the `TContext` object this provider supplies the value for."
                ],
                "signature": [
                  "ContextName"
                ],
                "path": "packages/core/http/core-http-server/src/router/context_container.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IContextContainer.registerContext.$3",
                "type": "Function",
                "tags": [],
                "label": "provider",
                "description": [
                  "- A {@link IContextProvider } to be called each time a new context is created."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IContextProvider",
                    "text": "IContextProvider"
                  },
                  "<Context, ContextName>"
                ],
                "path": "packages/core/http/core-http-server/src/router/context_container.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "The {@link IContextContainer } for method chaining."
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IContextContainer.createHandler",
            "type": "Function",
            "tags": [],
            "label": "createHandler",
            "description": [
              "\nCreate a new handler function pre-wired to context for the plugin.\n"
            ],
            "signature": [
              "(pluginOpaqueId: symbol, handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RequestHandler",
                "text": "RequestHandler"
              },
              "<unknown, unknown, unknown, ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RequestHandlerContextBase",
                "text": "RequestHandlerContextBase"
              },
              ", any, ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ">) => (request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>, response: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ") => Promise<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>>"
            ],
            "path": "packages/core/http/core-http-server/src/router/context_container.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IContextContainer.createHandler.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "pluginOpaqueId",
                "description": [
                  "- The plugin opaque ID for the plugin that registers this handler."
                ],
                "signature": [
                  "symbol"
                ],
                "path": "packages/core/http/core-http-server/src/router/context_container.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IContextContainer.createHandler.$2",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [
                  "- Handler function to pass context object to."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.RequestHandler",
                    "text": "RequestHandler"
                  },
                  "<unknown, unknown, unknown, ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.RequestHandlerContextBase",
                    "text": "RequestHandlerContextBase"
                  },
                  ", any, ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaResponseFactory",
                    "text": "KibanaResponseFactory"
                  },
                  ">"
                ],
                "path": "packages/core/http/core-http-server/src/router/context_container.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "A function that takes `RequestHandler` parameters, calls `handler` with a new context, and returns a Promise of\nthe `handler` return value."
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.ICspConfig",
        "type": "Interface",
        "tags": [],
        "label": "ICspConfig",
        "description": [
          "\nCSP configuration for use in Kibana."
        ],
        "path": "packages/core/http/core-http-server/src/csp.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.ICspConfig.strict",
            "type": "boolean",
            "tags": [],
            "label": "strict",
            "description": [
              "\nSpecify whether browsers that do not support CSP should be\nable to use Kibana. Use `true` to block and `false` to allow."
            ],
            "path": "packages/core/http/core-http-server/src/csp.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.ICspConfig.warnLegacyBrowsers",
            "type": "boolean",
            "tags": [],
            "label": "warnLegacyBrowsers",
            "description": [
              "\nSpecify whether users with legacy browsers should be warned\nabout their lack of Kibana security compliance."
            ],
            "path": "packages/core/http/core-http-server/src/csp.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.ICspConfig.disableEmbedding",
            "type": "boolean",
            "tags": [],
            "label": "disableEmbedding",
            "description": [
              "\nWhether or not embedding (using iframes) should be allowed by the CSP. If embedding is disabled, a restrictive 'frame-ancestors' rule will be added to the default CSP rules."
            ],
            "path": "packages/core/http/core-http-server/src/csp.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.ICspConfig.header",
            "type": "string",
            "tags": [],
            "label": "header",
            "description": [
              "\nThe CSP rules in a formatted directives string for use\nin a `Content-Security-Policy` header."
            ],
            "path": "packages/core/http/core-http-server/src/csp.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.IExternalUrlConfig",
        "type": "Interface",
        "tags": [],
        "label": "IExternalUrlConfig",
        "description": [
          "\nExternal Url configuration for use in Kibana."
        ],
        "path": "packages/core/http/core-http-server/src/external_url.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IExternalUrlConfig.policy",
            "type": "Array",
            "tags": [],
            "label": "policy",
            "description": [
              "\nA set of policies describing which external urls are allowed."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-common",
                "scope": "common",
                "docId": "kibKbnCoreHttpCommonPluginApi",
                "section": "def-common.IExternalUrlPolicy",
                "text": "IExternalUrlPolicy"
              },
              "[]"
            ],
            "path": "packages/core/http/core-http-server/src/external_url.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.IKibanaResponse",
        "type": "Interface",
        "tags": [],
        "label": "IKibanaResponse",
        "description": [
          "\nA response data object, expected to returned as a result of {@link RequestHandler} execution"
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<T>"
        ],
        "path": "packages/core/http/core-http-server/src/router/response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IKibanaResponse.status",
            "type": "number",
            "tags": [],
            "label": "status",
            "description": [],
            "path": "packages/core/http/core-http-server/src/router/response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IKibanaResponse.payload",
            "type": "Uncategorized",
            "tags": [],
            "label": "payload",
            "description": [],
            "signature": [
              "T | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IKibanaResponse.options",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.HttpResponseOptions",
                "text": "HttpResponseOptions"
              }
            ],
            "path": "packages/core/http/core-http-server/src/router/response.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.IKibanaSocket",
        "type": "Interface",
        "tags": [],
        "label": "IKibanaSocket",
        "description": [
          "\nA tiny abstraction for TCP socket."
        ],
        "path": "packages/core/http/core-http-server/src/router/socket.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IKibanaSocket.getPeerCertificate",
            "type": "Function",
            "tags": [],
            "label": "getPeerCertificate",
            "description": [],
            "signature": [
              "{ (detailed: true): ",
              "DetailedPeerCertificate",
              " | null; (detailed: false): ",
              "PeerCertificate",
              " | null; (detailed?: boolean | undefined): ",
              "PeerCertificate",
              " | ",
              "DetailedPeerCertificate",
              " | null; }"
            ],
            "path": "packages/core/http/core-http-server/src/router/socket.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IKibanaSocket.getPeerCertificate.$1",
                "type": "boolean",
                "tags": [],
                "label": "detailed",
                "description": [],
                "signature": [
                  "true"
                ],
                "path": "packages/core/http/core-http-server/src/router/socket.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IKibanaSocket.getPeerCertificate",
            "type": "Function",
            "tags": [],
            "label": "getPeerCertificate",
            "description": [],
            "signature": [
              "{ (detailed: true): ",
              "DetailedPeerCertificate",
              " | null; (detailed: false): ",
              "PeerCertificate",
              " | null; (detailed?: boolean | undefined): ",
              "PeerCertificate",
              " | ",
              "DetailedPeerCertificate",
              " | null; }"
            ],
            "path": "packages/core/http/core-http-server/src/router/socket.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IKibanaSocket.getPeerCertificate.$1",
                "type": "boolean",
                "tags": [],
                "label": "detailed",
                "description": [],
                "signature": [
                  "false"
                ],
                "path": "packages/core/http/core-http-server/src/router/socket.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IKibanaSocket.getPeerCertificate",
            "type": "Function",
            "tags": [],
            "label": "getPeerCertificate",
            "description": [
              "\nReturns an object representing the peer's certificate.\nThe returned object has some properties corresponding to the field of the certificate.\nIf detailed argument is true the full chain with issuer property will be returned,\nif false only the top certificate without issuer property.\nIf the peer does not provide a certificate, it returns null."
            ],
            "signature": [
              "{ (detailed: true): ",
              "DetailedPeerCertificate",
              " | null; (detailed: false): ",
              "PeerCertificate",
              " | null; (detailed?: boolean | undefined): ",
              "PeerCertificate",
              " | ",
              "DetailedPeerCertificate",
              " | null; }"
            ],
            "path": "packages/core/http/core-http-server/src/router/socket.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IKibanaSocket.getPeerCertificate.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "detailed",
                "description": [
                  "- If true; the full chain with issuer property will be returned."
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "packages/core/http/core-http-server/src/router/socket.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "An object representing the peer's certificate."
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IKibanaSocket.getProtocol",
            "type": "Function",
            "tags": [],
            "label": "getProtocol",
            "description": [
              "\nReturns a string containing the negotiated SSL/TLS protocol version of the current connection. The value 'unknown' will be returned for\nconnected sockets that have not completed the handshaking process. The value null will be returned for server sockets or disconnected\nclient sockets. See https://www.openssl.org/docs/man1.0.2/ssl/SSL_get_version.html for more information."
            ],
            "signature": [
              "() => string | null"
            ],
            "path": "packages/core/http/core-http-server/src/router/socket.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IKibanaSocket.renegotiate",
            "type": "Function",
            "tags": [],
            "label": "renegotiate",
            "description": [
              "\nRenegotiates a connection to obtain the peer's certificate. This cannot be used when the protocol version is TLSv1.3."
            ],
            "signature": [
              "(options: { rejectUnauthorized?: boolean | undefined; requestCert?: boolean | undefined; }) => Promise<void>"
            ],
            "path": "packages/core/http/core-http-server/src/router/socket.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IKibanaSocket.renegotiate.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "packages/core/http/core-http-server/src/router/socket.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IKibanaSocket.renegotiate.$1.rejectUnauthorized",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "rejectUnauthorized",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/socket.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IKibanaSocket.renegotiate.$1.requestCert",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "requestCert",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/socket.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": [
              "A Promise that will be resolved if renegotiation succeeded, or will be rejected if renegotiation failed."
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IKibanaSocket.authorized",
            "type": "CompoundType",
            "tags": [],
            "label": "authorized",
            "description": [
              "\nIndicates whether or not the peer certificate was signed by one of the specified CAs. When TLS\nisn't used the value is `undefined`."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/socket.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IKibanaSocket.authorizationError",
            "type": "Object",
            "tags": [],
            "label": "authorizationError",
            "description": [
              "\nThe reason why the peer's certificate has not been verified. This property becomes available\nonly when `authorized` is `false`."
            ],
            "signature": [
              "Error | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/socket.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IKibanaSocket.remoteAddress",
            "type": "string",
            "tags": [],
            "label": "remoteAddress",
            "description": [
              "\nThe string representation of the remote IP address. For example,`'74.125.127.100'` or\n`'2001:4860:a005::68'`. Value may be `undefined` if the socket is destroyed (for example, if\nthe client disconnected)."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/socket.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.IRouter",
        "type": "Interface",
        "tags": [],
        "label": "IRouter",
        "description": [
          "\nRegisters route handlers for specified resource path and method.\nSee {@link RouteConfig} and {@link RequestHandler} for more information about arguments to route registrations.\n"
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IRouter",
            "text": "IRouter"
          },
          "<Context>"
        ],
        "path": "packages/core/http/core-http-server/src/router/router.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IRouter.routerPath",
            "type": "string",
            "tags": [],
            "label": "routerPath",
            "description": [
              "\nResulted path"
            ],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IRouter.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nRegister a route handler for `GET` request."
            ],
            "signature": [
              "<P, Q, B>(route: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteConfig",
                "text": "RouteConfig"
              },
              "<P, Q, B, \"get\">, handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RequestHandler",
                "text": "RequestHandler"
              },
              "<P, Q, B, Context, \"get\", ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ">) => void"
            ],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IRouter.get.$1",
                "type": "Object",
                "tags": [],
                "label": "route",
                "description": [
                  "{@link RouteConfig } - a route configuration."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.RouteConfig",
                    "text": "RouteConfig"
                  },
                  "<P, Q, B, Method>"
                ],
                "path": "packages/core/http/core-http-server/src/router/router.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IRouter.get.$2",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [
                  "{@link RequestHandler } - a function to call to respond to an incoming request"
                ],
                "signature": [
                  "(context: Context, request: ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<P, Q, B, Method>, response: ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaResponseFactory",
                    "text": "KibanaResponseFactory"
                  },
                  ") => ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IKibanaResponse",
                    "text": "IKibanaResponse"
                  },
                  "<any> | Promise<",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IKibanaResponse",
                    "text": "IKibanaResponse"
                  },
                  "<any>>"
                ],
                "path": "packages/core/http/core-http-server/src/router/router.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.get.$2.$1",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "context",
                    "description": [],
                    "signature": [
                      "Context"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.get.$2.$2",
                    "type": "Object",
                    "tags": [],
                    "label": "request",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "@kbn/core-http-server",
                        "scope": "common",
                        "docId": "kibKbnCoreHttpServerPluginApi",
                        "section": "def-common.KibanaRequest",
                        "text": "KibanaRequest"
                      },
                      "<P, Q, B, Method>"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.get.$2.$3",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "response",
                    "description": [],
                    "signature": [
                      "ResponseFactory"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IRouter.post",
            "type": "Function",
            "tags": [],
            "label": "post",
            "description": [
              "\nRegister a route handler for `POST` request."
            ],
            "signature": [
              "<P, Q, B>(route: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteConfig",
                "text": "RouteConfig"
              },
              "<P, Q, B, \"post\">, handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RequestHandler",
                "text": "RequestHandler"
              },
              "<P, Q, B, Context, \"post\", ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ">) => void"
            ],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IRouter.post.$1",
                "type": "Object",
                "tags": [],
                "label": "route",
                "description": [
                  "{@link RouteConfig } - a route configuration."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.RouteConfig",
                    "text": "RouteConfig"
                  },
                  "<P, Q, B, Method>"
                ],
                "path": "packages/core/http/core-http-server/src/router/router.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IRouter.post.$2",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [
                  "{@link RequestHandler } - a function to call to respond to an incoming request"
                ],
                "signature": [
                  "(context: Context, request: ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<P, Q, B, Method>, response: ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaResponseFactory",
                    "text": "KibanaResponseFactory"
                  },
                  ") => ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IKibanaResponse",
                    "text": "IKibanaResponse"
                  },
                  "<any> | Promise<",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IKibanaResponse",
                    "text": "IKibanaResponse"
                  },
                  "<any>>"
                ],
                "path": "packages/core/http/core-http-server/src/router/router.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.post.$2.$1",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "context",
                    "description": [],
                    "signature": [
                      "Context"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.post.$2.$2",
                    "type": "Object",
                    "tags": [],
                    "label": "request",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "@kbn/core-http-server",
                        "scope": "common",
                        "docId": "kibKbnCoreHttpServerPluginApi",
                        "section": "def-common.KibanaRequest",
                        "text": "KibanaRequest"
                      },
                      "<P, Q, B, Method>"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.post.$2.$3",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "response",
                    "description": [],
                    "signature": [
                      "ResponseFactory"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IRouter.put",
            "type": "Function",
            "tags": [],
            "label": "put",
            "description": [
              "\nRegister a route handler for `PUT` request."
            ],
            "signature": [
              "<P, Q, B>(route: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteConfig",
                "text": "RouteConfig"
              },
              "<P, Q, B, \"put\">, handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RequestHandler",
                "text": "RequestHandler"
              },
              "<P, Q, B, Context, \"put\", ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ">) => void"
            ],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IRouter.put.$1",
                "type": "Object",
                "tags": [],
                "label": "route",
                "description": [
                  "{@link RouteConfig } - a route configuration."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.RouteConfig",
                    "text": "RouteConfig"
                  },
                  "<P, Q, B, Method>"
                ],
                "path": "packages/core/http/core-http-server/src/router/router.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IRouter.put.$2",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [
                  "{@link RequestHandler } - a function to call to respond to an incoming request"
                ],
                "signature": [
                  "(context: Context, request: ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<P, Q, B, Method>, response: ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaResponseFactory",
                    "text": "KibanaResponseFactory"
                  },
                  ") => ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IKibanaResponse",
                    "text": "IKibanaResponse"
                  },
                  "<any> | Promise<",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IKibanaResponse",
                    "text": "IKibanaResponse"
                  },
                  "<any>>"
                ],
                "path": "packages/core/http/core-http-server/src/router/router.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.put.$2.$1",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "context",
                    "description": [],
                    "signature": [
                      "Context"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.put.$2.$2",
                    "type": "Object",
                    "tags": [],
                    "label": "request",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "@kbn/core-http-server",
                        "scope": "common",
                        "docId": "kibKbnCoreHttpServerPluginApi",
                        "section": "def-common.KibanaRequest",
                        "text": "KibanaRequest"
                      },
                      "<P, Q, B, Method>"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.put.$2.$3",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "response",
                    "description": [],
                    "signature": [
                      "ResponseFactory"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IRouter.patch",
            "type": "Function",
            "tags": [],
            "label": "patch",
            "description": [
              "\nRegister a route handler for `PATCH` request."
            ],
            "signature": [
              "<P, Q, B>(route: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteConfig",
                "text": "RouteConfig"
              },
              "<P, Q, B, \"patch\">, handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RequestHandler",
                "text": "RequestHandler"
              },
              "<P, Q, B, Context, \"patch\", ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ">) => void"
            ],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IRouter.patch.$1",
                "type": "Object",
                "tags": [],
                "label": "route",
                "description": [
                  "{@link RouteConfig } - a route configuration."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.RouteConfig",
                    "text": "RouteConfig"
                  },
                  "<P, Q, B, Method>"
                ],
                "path": "packages/core/http/core-http-server/src/router/router.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IRouter.patch.$2",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [
                  "{@link RequestHandler } - a function to call to respond to an incoming request"
                ],
                "signature": [
                  "(context: Context, request: ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<P, Q, B, Method>, response: ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaResponseFactory",
                    "text": "KibanaResponseFactory"
                  },
                  ") => ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IKibanaResponse",
                    "text": "IKibanaResponse"
                  },
                  "<any> | Promise<",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IKibanaResponse",
                    "text": "IKibanaResponse"
                  },
                  "<any>>"
                ],
                "path": "packages/core/http/core-http-server/src/router/router.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.patch.$2.$1",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "context",
                    "description": [],
                    "signature": [
                      "Context"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.patch.$2.$2",
                    "type": "Object",
                    "tags": [],
                    "label": "request",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "@kbn/core-http-server",
                        "scope": "common",
                        "docId": "kibKbnCoreHttpServerPluginApi",
                        "section": "def-common.KibanaRequest",
                        "text": "KibanaRequest"
                      },
                      "<P, Q, B, Method>"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.patch.$2.$3",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "response",
                    "description": [],
                    "signature": [
                      "ResponseFactory"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IRouter.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nRegister a route handler for `DELETE` request."
            ],
            "signature": [
              "<P, Q, B>(route: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteConfig",
                "text": "RouteConfig"
              },
              "<P, Q, B, \"delete\">, handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RequestHandler",
                "text": "RequestHandler"
              },
              "<P, Q, B, Context, \"delete\", ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ">) => void"
            ],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IRouter.delete.$1",
                "type": "Object",
                "tags": [],
                "label": "route",
                "description": [
                  "{@link RouteConfig } - a route configuration."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.RouteConfig",
                    "text": "RouteConfig"
                  },
                  "<P, Q, B, Method>"
                ],
                "path": "packages/core/http/core-http-server/src/router/router.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IRouter.delete.$2",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [
                  "{@link RequestHandler } - a function to call to respond to an incoming request"
                ],
                "signature": [
                  "(context: Context, request: ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<P, Q, B, Method>, response: ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaResponseFactory",
                    "text": "KibanaResponseFactory"
                  },
                  ") => ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IKibanaResponse",
                    "text": "IKibanaResponse"
                  },
                  "<any> | Promise<",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IKibanaResponse",
                    "text": "IKibanaResponse"
                  },
                  "<any>>"
                ],
                "path": "packages/core/http/core-http-server/src/router/router.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.delete.$2.$1",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "context",
                    "description": [],
                    "signature": [
                      "Context"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.delete.$2.$2",
                    "type": "Object",
                    "tags": [],
                    "label": "request",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "@kbn/core-http-server",
                        "scope": "common",
                        "docId": "kibKbnCoreHttpServerPluginApi",
                        "section": "def-common.KibanaRequest",
                        "text": "KibanaRequest"
                      },
                      "<P, Q, B, Method>"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.delete.$2.$3",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "response",
                    "description": [],
                    "signature": [
                      "ResponseFactory"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IRouter.handleLegacyErrors",
            "type": "Function",
            "tags": [],
            "label": "handleLegacyErrors",
            "description": [
              "\nWrap a router handler to catch and converts legacy boom errors to proper custom errors."
            ],
            "signature": [
              "<P, Q, B, Context extends ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RequestHandlerContextBase",
                "text": "RequestHandlerContextBase"
              },
              " = ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RequestHandlerContextBase",
                "text": "RequestHandlerContextBase"
              },
              ", Method extends ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteMethod",
                "text": "RouteMethod"
              },
              " = any, ResponseFactory extends ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              " = ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ">(handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RequestHandler",
                "text": "RequestHandler"
              },
              "<P, Q, B, Context, Method, ResponseFactory>) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RequestHandler",
                "text": "RequestHandler"
              },
              "<P, Q, B, Context, Method, ResponseFactory>"
            ],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.IRouter.handleLegacyErrors.$1",
                "type": "Function",
                "tags": [],
                "label": "handler",
                "description": [
                  "{@link RequestHandler } - a route handler to wrap"
                ],
                "signature": [
                  "(context: Context, request: ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<P, Q, B, Method>, response: ResponseFactory) => ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IKibanaResponse",
                    "text": "IKibanaResponse"
                  },
                  "<any> | Promise<",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.IKibanaResponse",
                    "text": "IKibanaResponse"
                  },
                  "<any>>"
                ],
                "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                "deprecated": false,
                "trackAdoption": false,
                "returnComment": [],
                "children": [
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.handleLegacyErrors.$1.$1",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "context",
                    "description": [],
                    "signature": [
                      "Context"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.handleLegacyErrors.$1.$2",
                    "type": "Object",
                    "tags": [],
                    "label": "request",
                    "description": [],
                    "signature": [
                      {
                        "pluginId": "@kbn/core-http-server",
                        "scope": "common",
                        "docId": "kibKbnCoreHttpServerPluginApi",
                        "section": "def-common.KibanaRequest",
                        "text": "KibanaRequest"
                      },
                      "<P, Q, B, Method>"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/core-http-server",
                    "id": "def-common.IRouter.handleLegacyErrors.$1.$3",
                    "type": "Uncategorized",
                    "tags": [],
                    "label": "response",
                    "description": [],
                    "signature": [
                      "ResponseFactory"
                    ],
                    "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KibanaErrorResponseFactory",
        "type": "Interface",
        "tags": [],
        "label": "KibanaErrorResponseFactory",
        "description": [],
        "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaErrorResponseFactory.badRequest",
            "type": "Function",
            "tags": [],
            "label": "badRequest",
            "description": [
              "\nThe server cannot process the request due to something that is perceived to be a client error.\nStatus code: `400`."
            ],
            "signature": [
              "(options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>"
            ],
            "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.KibanaErrorResponseFactory.badRequest.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- {@link HttpResponseOptions } configures HTTP response headers, error message and other error details to pass to the client"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.ErrorHttpResponseOptions",
                    "text": "ErrorHttpResponseOptions"
                  },
                  " | undefined"
                ],
                "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaErrorResponseFactory.unauthorized",
            "type": "Function",
            "tags": [],
            "label": "unauthorized",
            "description": [
              "\nThe request cannot be applied because it lacks valid authentication credentials for the target resource.\nStatus code: `401`."
            ],
            "signature": [
              "(options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>"
            ],
            "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.KibanaErrorResponseFactory.unauthorized.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- {@link HttpResponseOptions } configures HTTP response headers, error message and other error details to pass to the client"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.ErrorHttpResponseOptions",
                    "text": "ErrorHttpResponseOptions"
                  },
                  " | undefined"
                ],
                "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaErrorResponseFactory.forbidden",
            "type": "Function",
            "tags": [],
            "label": "forbidden",
            "description": [
              "\nServer cannot grant access to a resource.\nStatus code: `403`."
            ],
            "signature": [
              "(options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>"
            ],
            "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.KibanaErrorResponseFactory.forbidden.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- {@link HttpResponseOptions } configures HTTP response headers, error message and other error details to pass to the client"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.ErrorHttpResponseOptions",
                    "text": "ErrorHttpResponseOptions"
                  },
                  " | undefined"
                ],
                "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaErrorResponseFactory.notFound",
            "type": "Function",
            "tags": [],
            "label": "notFound",
            "description": [
              "\nServer cannot find a current representation for the target resource.\nStatus code: `404`."
            ],
            "signature": [
              "(options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>"
            ],
            "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.KibanaErrorResponseFactory.notFound.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- {@link HttpResponseOptions } configures HTTP response headers, error message and other error details to pass to the client"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.ErrorHttpResponseOptions",
                    "text": "ErrorHttpResponseOptions"
                  },
                  " | undefined"
                ],
                "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaErrorResponseFactory.conflict",
            "type": "Function",
            "tags": [],
            "label": "conflict",
            "description": [
              "\nThe request could not be completed due to a conflict with the current state of the target resource.\nStatus code: `409`."
            ],
            "signature": [
              "(options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>"
            ],
            "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.KibanaErrorResponseFactory.conflict.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- {@link HttpResponseOptions } configures HTTP response headers, error message and other error details to pass to the client"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.ErrorHttpResponseOptions",
                    "text": "ErrorHttpResponseOptions"
                  },
                  " | undefined"
                ],
                "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaErrorResponseFactory.customError",
            "type": "Function",
            "tags": [],
            "label": "customError",
            "description": [
              "\nCreates an error response with defined status code and payload."
            ],
            "signature": [
              "(options: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.CustomHttpResponseOptions",
                "text": "CustomHttpResponseOptions"
              },
              "<",
              "Stream",
              " | Buffer | ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ResponseError",
                "text": "ResponseError"
              },
              ">) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>"
            ],
            "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.KibanaErrorResponseFactory.customError.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- {@link CustomHttpResponseOptions } configures HTTP response headers, error message and other error details to pass to the client"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.CustomHttpResponseOptions",
                    "text": "CustomHttpResponseOptions"
                  },
                  "<",
                  "Stream",
                  " | Buffer | ",
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.ResponseError",
                    "text": "ResponseError"
                  },
                  ">"
                ],
                "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KibanaRedirectionResponseFactory",
        "type": "Interface",
        "tags": [],
        "label": "KibanaRedirectionResponseFactory",
        "description": [],
        "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRedirectionResponseFactory.redirected",
            "type": "Function",
            "tags": [],
            "label": "redirected",
            "description": [
              "\nRedirect to a different URI.\nStatus code: `302`."
            ],
            "signature": [
              "(options: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RedirectResponseOptions",
                "text": "RedirectResponseOptions"
              },
              ") => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>"
            ],
            "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.KibanaRedirectionResponseFactory.redirected.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "options",
                "description": [
                  "- {@link RedirectResponseOptions } configures HTTP response body & headers.\nExpects `location` header to be set."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.RedirectResponseOptions",
                    "text": "RedirectResponseOptions"
                  }
                ],
                "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KibanaRequest",
        "type": "Interface",
        "tags": [],
        "label": "KibanaRequest",
        "description": [
          "\nKibana specific abstraction for an incoming request."
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<Params, Query, Body, Method>"
        ],
        "path": "packages/core/http/core-http-server/src/router/request.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nA identifier to identify this request.\n"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.uuid",
            "type": "string",
            "tags": [],
            "label": "uuid",
            "description": [
              "\nA UUID to identify this request.\n"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.url",
            "type": "Object",
            "tags": [],
            "label": "url",
            "description": [
              "a WHATWG URL standard object."
            ],
            "signature": [
              "URL"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.route",
            "type": "Object",
            "tags": [],
            "label": "route",
            "description": [
              "matched route details"
            ],
            "signature": [
              "{ readonly path: string; readonly method: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.RecursiveReadonly",
                "text": "RecursiveReadonly"
              },
              "<Method>; readonly options: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.RecursiveReadonly",
                "text": "RecursiveReadonly"
              },
              "<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequestRouteOptions",
                "text": "KibanaRequestRouteOptions"
              },
              "<Method>>; }"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.headers",
            "type": "CompoundType",
            "tags": [],
            "label": "headers",
            "description": [
              "\nReadonly copy of incoming request headers."
            ],
            "signature": [
              "{ accept?: string | string[] | undefined; \"accept-language\"?: string | string[] | undefined; \"accept-patch\"?: string | string[] | undefined; \"accept-ranges\"?: string | string[] | undefined; \"access-control-allow-credentials\"?: string | string[] | undefined; \"access-control-allow-headers\"?: string | string[] | undefined; \"access-control-allow-methods\"?: string | string[] | undefined; \"access-control-allow-origin\"?: string | string[] | undefined; \"access-control-expose-headers\"?: string | string[] | undefined; \"access-control-max-age\"?: string | string[] | undefined; \"access-control-request-headers\"?: string | string[] | undefined; \"access-control-request-method\"?: string | string[] | undefined; age?: string | string[] | undefined; allow?: string | string[] | undefined; \"alt-svc\"?: string | string[] | undefined; authorization?: string | string[] | undefined; \"cache-control\"?: string | string[] | undefined; connection?: string | string[] | undefined; \"content-disposition\"?: string | string[] | undefined; \"content-encoding\"?: string | string[] | undefined; \"content-language\"?: string | string[] | undefined; \"content-length\"?: string | string[] | undefined; \"content-location\"?: string | string[] | undefined; \"content-range\"?: string | string[] | undefined; \"content-type\"?: string | string[] | undefined; cookie?: string | string[] | undefined; date?: string | string[] | undefined; etag?: string | string[] | undefined; expect?: string | string[] | undefined; expires?: string | string[] | undefined; forwarded?: string | string[] | undefined; from?: string | string[] | undefined; host?: string | string[] | undefined; \"if-match\"?: string | string[] | undefined; \"if-modified-since\"?: string | string[] | undefined; \"if-none-match\"?: string | string[] | undefined; \"if-unmodified-since\"?: string | string[] | undefined; \"last-modified\"?: string | string[] | undefined; location?: string | string[] | undefined; origin?: string | string[] | undefined; pragma?: string | string[] | undefined; \"proxy-authenticate\"?: string | string[] | undefined; \"proxy-authorization\"?: string | string[] | undefined; \"public-key-pins\"?: string | string[] | undefined; range?: string | string[] | undefined; referer?: string | string[] | undefined; \"retry-after\"?: string | string[] | undefined; \"sec-websocket-accept\"?: string | string[] | undefined; \"sec-websocket-extensions\"?: string | string[] | undefined; \"sec-websocket-key\"?: string | string[] | undefined; \"sec-websocket-protocol\"?: string | string[] | undefined; \"sec-websocket-version\"?: string | string[] | undefined; \"set-cookie\"?: string | string[] | undefined; \"strict-transport-security\"?: string | string[] | undefined; tk?: string | string[] | undefined; trailer?: string | string[] | undefined; \"transfer-encoding\"?: string | string[] | undefined; upgrade?: string | string[] | undefined; \"user-agent\"?: string | string[] | undefined; vary?: string | string[] | undefined; via?: string | string[] | undefined; warning?: string | string[] | undefined; \"www-authenticate\"?: string | string[] | undefined; } & { [header: string]: string | string[] | undefined; }"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.isSystemRequest",
            "type": "boolean",
            "tags": [],
            "label": "isSystemRequest",
            "description": [
              "\nWhether or not the request is a \"system request\" rather than an application-level request.\nCan be set on the client using the `HttpFetchOptions#asSystemRequest` option."
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.isFakeRequest",
            "type": "boolean",
            "tags": [],
            "label": "isFakeRequest",
            "description": [
              "\nAllows identifying requests that were created using a {@link FakeRawRequest}\nEven if the API facade is the same, fake requests have some stubbed functionalities."
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.socket",
            "type": "Object",
            "tags": [],
            "label": "socket",
            "description": [
              "\nThe socket associated with this request.\nSee {@link IKibanaSocket}."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaSocket",
                "text": "IKibanaSocket"
              }
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.events",
            "type": "Object",
            "tags": [],
            "label": "events",
            "description": [
              "\nAllow to listen to events bound to this request.\nSee {@link KibanaRequestEvents}."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequestEvents",
                "text": "KibanaRequestEvents"
              }
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.auth",
            "type": "Object",
            "tags": [],
            "label": "auth",
            "description": [
              "\nThe auth status of this request.\nSee {@link KibanaRequestAuth}."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequestAuth",
                "text": "KibanaRequestAuth"
              }
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.rewrittenUrl",
            "type": "Object",
            "tags": [],
            "label": "rewrittenUrl",
            "description": [
              "\nURL rewritten in onPreRouting request interceptor."
            ],
            "signature": [
              "URL",
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.params",
            "type": "Uncategorized",
            "tags": [],
            "label": "params",
            "description": [
              "\nThe path parameter of this request."
            ],
            "signature": [
              "Params"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.query",
            "type": "Uncategorized",
            "tags": [],
            "label": "query",
            "description": [
              "\nThe query parameter of this request."
            ],
            "signature": [
              "Query"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequest.body",
            "type": "Uncategorized",
            "tags": [],
            "label": "body",
            "description": [
              "\nThe body payload of this request."
            ],
            "signature": [
              "Body"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KibanaRequestAuth",
        "type": "Interface",
        "tags": [],
        "label": "KibanaRequestAuth",
        "description": [
          "\nAuth status for this request."
        ],
        "path": "packages/core/http/core-http-server/src/router/request.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequestAuth.isAuthenticated",
            "type": "boolean",
            "tags": [],
            "label": "isAuthenticated",
            "description": [
              "true if the request has been successfully authenticated, false otherwise."
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KibanaRequestEvents",
        "type": "Interface",
        "tags": [],
        "label": "KibanaRequestEvents",
        "description": [
          "\nRequest events."
        ],
        "path": "packages/core/http/core-http-server/src/router/request.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequestEvents.aborted$",
            "type": "Object",
            "tags": [],
            "label": "aborted$",
            "description": [
              "\nObservable that emits once if and when the request has been aborted."
            ],
            "signature": [
              "Observable",
              "<void>"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequestEvents.completed$",
            "type": "Object",
            "tags": [],
            "label": "completed$",
            "description": [
              "\nObservable that emits once if and when the request has been completely handled.\n"
            ],
            "signature": [
              "Observable",
              "<void>"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KibanaRequestRoute",
        "type": "Interface",
        "tags": [],
        "label": "KibanaRequestRoute",
        "description": [
          "\nRequest specific route information exposed to a handler."
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequestRoute",
            "text": "KibanaRequestRoute"
          },
          "<Method>"
        ],
        "path": "packages/core/http/core-http-server/src/router/request.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequestRoute.path",
            "type": "string",
            "tags": [],
            "label": "path",
            "description": [],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequestRoute.method",
            "type": "Uncategorized",
            "tags": [],
            "label": "method",
            "description": [],
            "signature": [
              "Method"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequestRoute.options",
            "type": "Uncategorized",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "Method extends \"options\" | \"get\" ? Required<Omit<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteConfigOptions",
                "text": "RouteConfigOptions"
              },
              "<Method>, \"body\">> : Required<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteConfigOptions",
                "text": "RouteConfigOptions"
              },
              "<Method>>"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KibanaRequestState",
        "type": "Interface",
        "tags": [],
        "label": "KibanaRequestState",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequestState",
            "text": "KibanaRequestState"
          },
          " extends ",
          "RequestApplicationState"
        ],
        "path": "packages/core/http/core-http-server/src/router/request.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequestState.requestId",
            "type": "string",
            "tags": [],
            "label": "requestId",
            "description": [],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequestState.requestUuid",
            "type": "string",
            "tags": [],
            "label": "requestUuid",
            "description": [],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequestState.rewrittenUrl",
            "type": "Object",
            "tags": [],
            "label": "rewrittenUrl",
            "description": [],
            "signature": [
              "URL",
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRequestState.traceId",
            "type": "string",
            "tags": [],
            "label": "traceId",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KibanaRouteOptions",
        "type": "Interface",
        "tags": [],
        "label": "KibanaRouteOptions",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRouteOptions",
            "text": "KibanaRouteOptions"
          },
          " extends ",
          "RouteOptionsApp"
        ],
        "path": "packages/core/http/core-http-server/src/router/request.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaRouteOptions.xsrfRequired",
            "type": "boolean",
            "tags": [],
            "label": "xsrfRequired",
            "description": [],
            "path": "packages/core/http/core-http-server/src/router/request.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KibanaSuccessResponseFactory",
        "type": "Interface",
        "tags": [],
        "label": "KibanaSuccessResponseFactory",
        "description": [],
        "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaSuccessResponseFactory.ok",
            "type": "Function",
            "tags": [],
            "label": "ok",
            "description": [
              "\nThe request has succeeded.\nStatus code: `200`."
            ],
            "signature": [
              "(options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>"
            ],
            "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.KibanaSuccessResponseFactory.ok.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- {@link HttpResponseOptions } configures HTTP response body & headers."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.HttpResponseOptions",
                    "text": "HttpResponseOptions"
                  },
                  " | undefined"
                ],
                "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaSuccessResponseFactory.accepted",
            "type": "Function",
            "tags": [],
            "label": "accepted",
            "description": [
              "\nThe request has been accepted for processing.\nStatus code: `202`."
            ],
            "signature": [
              "(options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>"
            ],
            "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.KibanaSuccessResponseFactory.accepted.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- {@link HttpResponseOptions } configures HTTP response body & headers."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.HttpResponseOptions",
                    "text": "HttpResponseOptions"
                  },
                  " | undefined"
                ],
                "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.KibanaSuccessResponseFactory.noContent",
            "type": "Function",
            "tags": [],
            "label": "noContent",
            "description": [
              "\nThe server has successfully fulfilled the request and that there is no additional content to send in the response payload body.\nStatus code: `204`."
            ],
            "signature": [
              "(options?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.HttpResponseOptions",
                "text": "HttpResponseOptions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>"
            ],
            "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.KibanaSuccessResponseFactory.noContent.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- {@link HttpResponseOptions } configures HTTP response body & headers."
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.HttpResponseOptions",
                    "text": "HttpResponseOptions"
                  },
                  " | undefined"
                ],
                "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPostAuthNextResult",
        "type": "Interface",
        "tags": [],
        "label": "OnPostAuthNextResult",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_post_auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPostAuthNextResult.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPostAuthResultType",
                "text": "OnPostAuthResultType"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_post_auth.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPostAuthToolkit",
        "type": "Interface",
        "tags": [],
        "label": "OnPostAuthToolkit",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_post_auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPostAuthToolkit.next",
            "type": "Function",
            "tags": [],
            "label": "next",
            "description": [
              "To pass request to the next handler"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPostAuthNextResult",
                "text": "OnPostAuthNextResult"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_post_auth.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreAuthNextResult",
        "type": "Interface",
        "tags": [],
        "label": "OnPreAuthNextResult",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreAuthNextResult.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreAuthResultType",
                "text": "OnPreAuthResultType"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_auth.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreAuthToolkit",
        "type": "Interface",
        "tags": [],
        "label": "OnPreAuthToolkit",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreAuthToolkit.next",
            "type": "Function",
            "tags": [],
            "label": "next",
            "description": [
              "To pass request to the next handler"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreAuthNextResult",
                "text": "OnPreAuthNextResult"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_auth.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreResponseExtensions",
        "type": "Interface",
        "tags": [],
        "label": "OnPreResponseExtensions",
        "description": [
          "\nAdditional data to extend a response."
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseExtensions.headers",
            "type": "CompoundType",
            "tags": [],
            "label": "headers",
            "description": [
              "additional headers to attach to the response"
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ResponseHeaders",
                "text": "ResponseHeaders"
              },
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreResponseInfo",
        "type": "Interface",
        "tags": [],
        "label": "OnPreResponseInfo",
        "description": [
          "\nResponse status code."
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseInfo.statusCode",
            "type": "number",
            "tags": [],
            "label": "statusCode",
            "description": [],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreResponseRender",
        "type": "Interface",
        "tags": [],
        "label": "OnPreResponseRender",
        "description": [
          "\nAdditional data to extend a response when rendering a new body"
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseRender.headers",
            "type": "CompoundType",
            "tags": [],
            "label": "headers",
            "description": [
              "additional headers to attach to the response"
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ResponseHeaders",
                "text": "ResponseHeaders"
              },
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseRender.body",
            "type": "string",
            "tags": [],
            "label": "body",
            "description": [
              "the body to use in the response"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreResponseResultNext",
        "type": "Interface",
        "tags": [],
        "label": "OnPreResponseResultNext",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseResultNext.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreResponseResultType",
                "text": "OnPreResponseResultType"
              },
              ".next"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseResultNext.headers",
            "type": "CompoundType",
            "tags": [],
            "label": "headers",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ResponseHeaders",
                "text": "ResponseHeaders"
              },
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreResponseResultRender",
        "type": "Interface",
        "tags": [],
        "label": "OnPreResponseResultRender",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseResultRender.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreResponseResultType",
                "text": "OnPreResponseResultType"
              },
              ".render"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseResultRender.body",
            "type": "string",
            "tags": [],
            "label": "body",
            "description": [],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseResultRender.headers",
            "type": "CompoundType",
            "tags": [],
            "label": "headers",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.ResponseHeaders",
                "text": "ResponseHeaders"
              },
              " | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreResponseToolkit",
        "type": "Interface",
        "tags": [],
        "label": "OnPreResponseToolkit",
        "description": [
          "\nA tool set defining an outcome of OnPreResponse interceptor for incoming request."
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseToolkit.render",
            "type": "Function",
            "tags": [],
            "label": "render",
            "description": [
              "To override the response with a different body"
            ],
            "signature": [
              "(responseRender: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreResponseRender",
                "text": "OnPreResponseRender"
              },
              ") => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreResponseResult",
                "text": "OnPreResponseResult"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.OnPreResponseToolkit.render.$1",
                "type": "Object",
                "tags": [],
                "label": "responseRender",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.OnPreResponseRender",
                    "text": "OnPreResponseRender"
                  }
                ],
                "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseToolkit.next",
            "type": "Function",
            "tags": [],
            "label": "next",
            "description": [
              "To pass request to the next handler"
            ],
            "signature": [
              "(responseExtensions?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreResponseExtensions",
                "text": "OnPreResponseExtensions"
              },
              " | undefined) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreResponseResult",
                "text": "OnPreResponseResult"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.OnPreResponseToolkit.next.$1",
                "type": "Object",
                "tags": [],
                "label": "responseExtensions",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.OnPreResponseExtensions",
                    "text": "OnPreResponseExtensions"
                  },
                  " | undefined"
                ],
                "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreRoutingResultNext",
        "type": "Interface",
        "tags": [],
        "label": "OnPreRoutingResultNext",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreRoutingResultNext.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreRoutingResultType",
                "text": "OnPreRoutingResultType"
              },
              ".next"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreRoutingResultRewriteUrl",
        "type": "Interface",
        "tags": [],
        "label": "OnPreRoutingResultRewriteUrl",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreRoutingResultRewriteUrl.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreRoutingResultType",
                "text": "OnPreRoutingResultType"
              },
              ".rewriteUrl"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreRoutingResultRewriteUrl.url",
            "type": "string",
            "tags": [],
            "label": "url",
            "description": [],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreRoutingToolkit",
        "type": "Interface",
        "tags": [],
        "label": "OnPreRoutingToolkit",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreRoutingToolkit.next",
            "type": "Function",
            "tags": [],
            "label": "next",
            "description": [
              "To pass request to the next handler"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreRoutingResult",
                "text": "OnPreRoutingResult"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreRoutingToolkit.rewriteUrl",
            "type": "Function",
            "tags": [],
            "label": "rewriteUrl",
            "description": [
              "Rewrite requested resources url before is was authenticated and routed to a handler"
            ],
            "signature": [
              "(url: string) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreRoutingResult",
                "text": "OnPreRoutingResult"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.OnPreRoutingToolkit.rewriteUrl.$1",
                "type": "string",
                "tags": [],
                "label": "url",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RequestHandlerContextBase",
        "type": "Interface",
        "tags": [],
        "label": "RequestHandlerContextBase",
        "description": [
          "\nBase, abstract type for request handler contexts."
        ],
        "path": "packages/core/http/core-http-server/src/router/request_handler_context.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RequestHandlerContextBase.resolve",
            "type": "Function",
            "tags": [],
            "label": "resolve",
            "description": [
              "\nAwait all the specified context parts and return them.\n"
            ],
            "signature": [
              "<T extends Exclude<keyof this, \"resolve\">>(parts: T[]) => Promise<",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.AwaitedProperties",
                "text": "AwaitedProperties"
              },
              "<Pick<this, T>>>"
            ],
            "path": "packages/core/http/core-http-server/src/router/request_handler_context.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RequestHandlerContextBase.resolve.$1",
                "type": "Array",
                "tags": [],
                "label": "parts",
                "description": [],
                "signature": [
                  "T[]"
                ],
                "path": "packages/core/http/core-http-server/src/router/request_handler_context.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteConfig",
        "type": "Interface",
        "tags": [],
        "label": "RouteConfig",
        "description": [
          "\nRoute specific configuration."
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteConfig",
            "text": "RouteConfig"
          },
          "<P, Q, B, Method>"
        ],
        "path": "packages/core/http/core-http-server/src/router/route.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteConfig.path",
            "type": "string",
            "tags": [],
            "label": "path",
            "description": [
              "\nThe endpoint _within_ the router path to register the route.\n"
            ],
            "path": "packages/core/http/core-http-server/src/router/route.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteConfig.validate",
            "type": "CompoundType",
            "tags": [],
            "label": "validate",
            "description": [
              "\nA schema created with `@kbn/config-schema` that every request will be validated against.\n"
            ],
            "signature": [
              "false | ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteValidatorFullConfig",
                "text": "RouteValidatorFullConfig"
              },
              "<P, Q, B>"
            ],
            "path": "packages/core/http/core-http-server/src/router/route.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteConfig.options",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [
              "\nAdditional route options {@link RouteConfigOptions}."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteConfigOptions",
                "text": "RouteConfigOptions"
              },
              "<Method> | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteConfigOptions",
        "type": "Interface",
        "tags": [],
        "label": "RouteConfigOptions",
        "description": [
          "\nAdditional route options."
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteConfigOptions",
            "text": "RouteConfigOptions"
          },
          "<Method>"
        ],
        "path": "packages/core/http/core-http-server/src/router/route.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteConfigOptions.authRequired",
            "type": "CompoundType",
            "tags": [],
            "label": "authRequired",
            "description": [
              "\nDefines authentication mode for a route:\n- true. A user has to have valid credentials to access a resource\n- false. A user can access a resource without any credentials.\n- 'optional'. A user can access a resource, and will be authenticated if provided credentials are valid.\n              Can be useful when we grant access to a resource but want to identify a user if possible.\n\nDefaults to `true` if an auth mechanism is registered."
            ],
            "signature": [
              "boolean | \"optional\" | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteConfigOptions.xsrfRequired",
            "type": "Uncategorized",
            "tags": [],
            "label": "xsrfRequired",
            "description": [
              "\nDefines xsrf protection requirements for a route:\n- true. Requires an incoming POST/PUT/DELETE request to contain `kbn-xsrf` header.\n- false. Disables xsrf protection.\n\nSet to true by default"
            ],
            "signature": [
              "(Method extends \"get\" ? never : boolean) | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteConfigOptions.tags",
            "type": "Object",
            "tags": [],
            "label": "tags",
            "description": [
              "\nAdditional metadata tag strings to attach to the route."
            ],
            "signature": [
              "readonly string[] | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteConfigOptions.body",
            "type": "Uncategorized",
            "tags": [],
            "label": "body",
            "description": [
              "\nAdditional body options {@link RouteConfigOptionsBody}."
            ],
            "signature": [
              "(Method extends \"options\" | \"get\" ? undefined : ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteConfigOptionsBody",
                "text": "RouteConfigOptionsBody"
              },
              ") | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteConfigOptions.timeout",
            "type": "Object",
            "tags": [],
            "label": "timeout",
            "description": [
              "\nDefines per-route timeouts."
            ],
            "signature": [
              "{ payload?: (Method extends \"options\" | \"get\" ? undefined : number) | undefined; idleSocket?: number | undefined; } | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteConfigOptionsBody",
        "type": "Interface",
        "tags": [],
        "label": "RouteConfigOptionsBody",
        "description": [
          "\nAdditional body options for a route"
        ],
        "path": "packages/core/http/core-http-server/src/router/route.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteConfigOptionsBody.accepts",
            "type": "CompoundType",
            "tags": [],
            "label": "accepts",
            "description": [
              "\nA string or an array of strings with the allowed mime types for the endpoint. Use this settings to limit the set of allowed mime types. Note that allowing additional mime types not listed\nabove will not enable them to be parsed, and if parse is true, the request will result in an error response.\n\nDefault value: allows parsing of the following mime types:\n* application/json\n* application/*+json\n* application/octet-stream\n* application/x-www-form-urlencoded\n* multipart/form-data\n* text/*"
            ],
            "signature": [
              "string | string[] | ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteContentType",
                "text": "RouteContentType"
              },
              "[] | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteConfigOptionsBody.maxBytes",
            "type": "number",
            "tags": [],
            "label": "maxBytes",
            "description": [
              "\nLimits the size of incoming payloads to the specified byte count. Allowing very large payloads may cause the server to run out of memory.\n\nDefault value: The one set in the kibana.yml config file under the parameter `server.maxPayload`."
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteConfigOptionsBody.output",
            "type": "CompoundType",
            "tags": [],
            "label": "output",
            "description": [
              "\nThe processed payload format. The value must be one of:\n* 'data' - the incoming payload is read fully into memory. If parse is true, the payload is parsed (JSON, form-decoded, multipart) based on the 'Content-Type' header. If parse is false, a raw\nBuffer is returned.\n* 'stream' - the incoming payload is made available via a Stream.Readable interface. If the payload is 'multipart/form-data' and parse is true, field values are presented as text while files\nare provided as streams. File streams from a 'multipart/form-data' upload will also have a hapi property containing the filename and headers properties. Note that payload streams for multipart\npayloads are a synthetic interface created on top of the entire multipart content loaded into memory. To avoid loading large multipart payloads into memory, set parse to false and handle the\nmultipart payload in the handler using a streaming parser (e.g. pez).\n\nDefault value: 'data', unless no validation.body is provided in the route definition. In that case the default is 'stream' to alleviate memory pressure."
            ],
            "signature": [
              "\"data\" | \"stream\" | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteConfigOptionsBody.parse",
            "type": "CompoundType",
            "tags": [],
            "label": "parse",
            "description": [
              "\nDetermines if the incoming payload is processed or presented raw. Available values:\n* true - if the request 'Content-Type' matches the allowed mime types set by allow (for the whole payload as well as parts), the payload is converted into an object when possible. If the\nformat is unknown, a Bad Request (400) error response is sent. Any known content encoding is decoded.\n* false - the raw payload is returned unmodified.\n* 'gunzip' - the raw payload is returned unmodified after any known content encoding is decoded.\n\nDefault value: true, unless no validation.body is provided in the route definition. In that case the default is false to alleviate memory pressure."
            ],
            "signature": [
              "boolean | \"gunzip\" | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouterRoute",
        "type": "Interface",
        "tags": [],
        "label": "RouterRoute",
        "description": [],
        "path": "packages/core/http/core-http-server/src/router/router.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouterRoute.method",
            "type": "CompoundType",
            "tags": [],
            "label": "method",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.SafeRouteMethod",
                "text": "SafeRouteMethod"
              },
              " | ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.DestructiveRouteMethod",
                "text": "DestructiveRouteMethod"
              }
            ],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouterRoute.path",
            "type": "string",
            "tags": [],
            "label": "path",
            "description": [],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouterRoute.options",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteConfigOptions",
                "text": "RouteConfigOptions"
              },
              "<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteMethod",
                "text": "RouteMethod"
              },
              ">"
            ],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouterRoute.handler",
            "type": "Function",
            "tags": [],
            "label": "handler",
            "description": [],
            "signature": [
              "(req: ",
              "Request",
              ", responseToolkit: ",
              "ResponseToolkit",
              ") => Promise<",
              "Boom",
              "<any> | ",
              "ResponseObject",
              ">"
            ],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RouterRoute.handler.$1",
                "type": "Object",
                "tags": [],
                "label": "req",
                "description": [],
                "signature": [
                  "Request"
                ],
                "path": "packages/core/http/core-http-server/src/router/router.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RouterRoute.handler.$2",
                "type": "Object",
                "tags": [],
                "label": "responseToolkit",
                "description": [],
                "signature": [
                  "ResponseToolkit"
                ],
                "path": "packages/core/http/core-http-server/src/router/router.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteValidationResultFactory",
        "type": "Interface",
        "tags": [],
        "label": "RouteValidationResultFactory",
        "description": [
          "\nValidation result factory to be used in the custom validation function to return the valid data or validation errors\n\nSee {@link RouteValidationFunction}.\n"
        ],
        "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteValidationResultFactory.ok",
            "type": "Function",
            "tags": [],
            "label": "ok",
            "description": [],
            "signature": [
              "<T>(value: T) => { value: T; }"
            ],
            "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RouteValidationResultFactory.ok.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "T"
                ],
                "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteValidationResultFactory.badRequest",
            "type": "Function",
            "tags": [],
            "label": "badRequest",
            "description": [],
            "signature": [
              "(error: string | Error, path?: string[] | undefined) => { error: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteValidationError",
                "text": "RouteValidationError"
              },
              "; }"
            ],
            "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RouteValidationResultFactory.badRequest.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "error",
                "description": [],
                "signature": [
                  "string | Error"
                ],
                "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RouteValidationResultFactory.badRequest.$2",
                "type": "Array",
                "tags": [],
                "label": "path",
                "description": [],
                "signature": [
                  "string[] | undefined"
                ],
                "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteValidatorConfig",
        "type": "Interface",
        "tags": [],
        "label": "RouteValidatorConfig",
        "description": [
          "\nThe configuration object to the RouteValidator class.\nSet `params`, `query` and/or `body` to specify the validation logic to follow for that property.\n"
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteValidatorConfig",
            "text": "RouteValidatorConfig"
          },
          "<P, Q, B>"
        ],
        "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteValidatorConfig.params",
            "type": "CompoundType",
            "tags": [],
            "label": "params",
            "description": [
              "\nValidation logic for the URL params"
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteValidationSpec",
                "text": "RouteValidationSpec"
              },
              "<P> | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteValidatorConfig.query",
            "type": "CompoundType",
            "tags": [],
            "label": "query",
            "description": [
              "\nValidation logic for the Query params"
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteValidationSpec",
                "text": "RouteValidationSpec"
              },
              "<Q> | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteValidatorConfig.body",
            "type": "CompoundType",
            "tags": [],
            "label": "body",
            "description": [
              "\nValidation logic for the body payload"
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteValidationSpec",
                "text": "RouteValidationSpec"
              },
              "<B> | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteValidatorOptions",
        "type": "Interface",
        "tags": [],
        "label": "RouteValidatorOptions",
        "description": [
          "\nAdditional options for the RouteValidator class to modify its default behaviour.\n"
        ],
        "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteValidatorOptions.unsafe",
            "type": "Object",
            "tags": [],
            "label": "unsafe",
            "description": [
              "\nSet the `unsafe` config to avoid running some additional internal *safe* validations on top of your custom validation"
            ],
            "signature": [
              "{ params?: boolean | undefined; query?: boolean | undefined; body?: boolean | undefined; } | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.SessionCookieValidationResult",
        "type": "Interface",
        "tags": [],
        "label": "SessionCookieValidationResult",
        "description": [
          "\nReturn type from a function to validate cookie contents."
        ],
        "path": "packages/core/http/core-http-server/src/session_storage.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SessionCookieValidationResult.isValid",
            "type": "boolean",
            "tags": [],
            "label": "isValid",
            "description": [
              "\nWhether the cookie is valid or not."
            ],
            "path": "packages/core/http/core-http-server/src/session_storage.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SessionCookieValidationResult.path",
            "type": "string",
            "tags": [],
            "label": "path",
            "description": [
              "\nThe \"Path\" attribute of the cookie; if the cookie is invalid, this is used to clear it."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/session_storage.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.SessionStorage",
        "type": "Interface",
        "tags": [],
        "label": "SessionStorage",
        "description": [
          "\nProvides an interface to store and retrieve data across requests."
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.SessionStorage",
            "text": "SessionStorage"
          },
          "<T>"
        ],
        "path": "packages/core/http/core-http-server/src/session_storage.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SessionStorage.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nRetrieves session value from the session storage."
            ],
            "signature": [
              "() => Promise<T | null>"
            ],
            "path": "packages/core/http/core-http-server/src/session_storage.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SessionStorage.set",
            "type": "Function",
            "tags": [],
            "label": "set",
            "description": [
              "\nPuts current session value into the session storage."
            ],
            "signature": [
              "(sessionValue: T) => void"
            ],
            "path": "packages/core/http/core-http-server/src/session_storage.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.SessionStorage.set.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "sessionValue",
                "description": [
                  "- value to put"
                ],
                "signature": [
                  "T"
                ],
                "path": "packages/core/http/core-http-server/src/session_storage.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SessionStorage.clear",
            "type": "Function",
            "tags": [],
            "label": "clear",
            "description": [
              "\nClears current session."
            ],
            "signature": [
              "() => void"
            ],
            "path": "packages/core/http/core-http-server/src/session_storage.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.SessionStorageCookieOptions",
        "type": "Interface",
        "tags": [],
        "label": "SessionStorageCookieOptions",
        "description": [
          "\nConfiguration used to create HTTP session storage based on top of cookie mechanism."
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.SessionStorageCookieOptions",
            "text": "SessionStorageCookieOptions"
          },
          "<T>"
        ],
        "path": "packages/core/http/core-http-server/src/session_storage.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SessionStorageCookieOptions.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nName of the session cookie."
            ],
            "path": "packages/core/http/core-http-server/src/session_storage.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SessionStorageCookieOptions.encryptionKey",
            "type": "string",
            "tags": [],
            "label": "encryptionKey",
            "description": [
              "\nA key used to encrypt a cookie's value. Should be at least 32 characters long."
            ],
            "path": "packages/core/http/core-http-server/src/session_storage.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SessionStorageCookieOptions.validate",
            "type": "Function",
            "tags": [],
            "label": "validate",
            "description": [
              "\nFunction called to validate a cookie's decrypted value."
            ],
            "signature": [
              "(sessionValue: T | T[]) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.SessionCookieValidationResult",
                "text": "SessionCookieValidationResult"
              }
            ],
            "path": "packages/core/http/core-http-server/src/session_storage.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.SessionStorageCookieOptions.validate.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "sessionValue",
                "description": [],
                "signature": [
                  "T | T[]"
                ],
                "path": "packages/core/http/core-http-server/src/session_storage.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SessionStorageCookieOptions.isSecure",
            "type": "boolean",
            "tags": [],
            "label": "isSecure",
            "description": [
              "\nFlag indicating whether the cookie should be sent only via a secure connection."
            ],
            "path": "packages/core/http/core-http-server/src/session_storage.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SessionStorageCookieOptions.sameSite",
            "type": "CompoundType",
            "tags": [],
            "label": "sameSite",
            "description": [
              "\nDefines SameSite attribute of the Set-Cookie Header.\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite"
            ],
            "signature": [
              "\"None\" | \"Strict\" | \"Lax\" | undefined"
            ],
            "path": "packages/core/http/core-http-server/src/session_storage.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.SessionStorageFactory",
        "type": "Interface",
        "tags": [],
        "label": "SessionStorageFactory",
        "description": [
          "\nSessionStorage factory to bind one to an incoming request"
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.SessionStorageFactory",
            "text": "SessionStorageFactory"
          },
          "<T>"
        ],
        "path": "packages/core/http/core-http-server/src/session_storage.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SessionStorageFactory.asScoped",
            "type": "Function",
            "tags": [],
            "label": "asScoped",
            "description": [],
            "signature": [
              "(request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.SessionStorage",
                "text": "SessionStorage"
              },
              "<T>"
            ],
            "path": "packages/core/http/core-http-server/src/session_storage.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.SessionStorageFactory.asScoped.$1",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "packages/core/http/core-http-server/src/session_storage.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.AuthResultType",
        "type": "Enum",
        "tags": [],
        "label": "AuthResultType",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.AuthStatus",
        "type": "Enum",
        "tags": [],
        "label": "AuthStatus",
        "description": [
          "\nStatus indicating an outcome of the authentication."
        ],
        "path": "packages/core/http/core-http-server/src/auth_state.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreResponseResultType",
        "type": "Enum",
        "tags": [],
        "label": "OnPreResponseResultType",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreRoutingResultType",
        "type": "Enum",
        "tags": [],
        "label": "OnPreRoutingResultType",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.AuthenticationHandler",
        "type": "Type",
        "tags": [],
        "label": "AuthenticationHandler",
        "description": [
          "\nSee {@link AuthToolkit}."
        ],
        "signature": [
          "(request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>, response: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.LifecycleResponseFactory",
            "text": "LifecycleResponseFactory"
          },
          ", toolkit: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthToolkit",
            "text": "AuthToolkit"
          },
          ") => ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<any> | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthResult",
            "text": "AuthResult"
          },
          " | Promise<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<any> | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthResult",
            "text": "AuthResult"
          },
          ">"
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthenticationHandler.$1",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthenticationHandler.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "response",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRedirectionResponseFactory",
                "text": "KibanaRedirectionResponseFactory"
              },
              " & ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaErrorResponseFactory",
                "text": "KibanaErrorResponseFactory"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.AuthenticationHandler.$3",
            "type": "Object",
            "tags": [],
            "label": "toolkit",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.AuthToolkit",
                "text": "AuthToolkit"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.AuthHeaders",
        "type": "Type",
        "tags": [],
        "label": "AuthHeaders",
        "description": [],
        "signature": [
          "{ [x: string]: string | string[]; }"
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.AuthResult",
        "type": "Type",
        "tags": [],
        "label": "AuthResult",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthResultAuthenticated",
            "text": "AuthResultAuthenticated"
          },
          " | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthResultNotHandled",
            "text": "AuthResultNotHandled"
          },
          " | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthResultRedirected",
            "text": "AuthResultRedirected"
          }
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.DestructiveRouteMethod",
        "type": "Type",
        "tags": [],
        "label": "DestructiveRouteMethod",
        "description": [
          "\nSet of HTTP methods changing the state of the server."
        ],
        "signature": [
          "\"post\" | \"put\" | \"delete\" | \"patch\""
        ],
        "path": "packages/core/http/core-http-server/src/router/route.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.GetAuthHeaders",
        "type": "Type",
        "tags": [
          "return"
        ],
        "label": "GetAuthHeaders",
        "description": [
          "\nGet headers to authenticate a user against Elasticsearch."
        ],
        "signature": [
          "(request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>) => ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthHeaders",
            "text": "AuthHeaders"
          },
          " | undefined"
        ],
        "path": "packages/core/http/core-http-server/src/auth_headers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [
          "authentication headers {@link AuthHeaders } for - an incoming request."
        ],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.GetAuthHeaders.$1",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [
              "{@link KibanaRequest } - an incoming request."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "packages/core/http/core-http-server/src/auth_headers.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.GetAuthState",
        "type": "Type",
        "tags": [],
        "label": "GetAuthState",
        "description": [
          "\nGets authentication state for a request. Returned by `auth` interceptor."
        ],
        "signature": [
          "<T = unknown>(request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>) => { status: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthStatus",
            "text": "AuthStatus"
          },
          "; state: T; }"
        ],
        "path": "packages/core/http/core-http-server/src/auth_state.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.GetAuthState.$1",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [
              "{@link KibanaRequest } - an incoming request."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "packages/core/http/core-http-server/src/auth_state.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.HandlerContextType",
        "type": "Type",
        "tags": [],
        "label": "HandlerContextType",
        "description": [
          "\nExtracts the type of the first argument of a {@link HandlerFunction} to represent the type of the context.\n"
        ],
        "signature": [
          "T extends ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.HandlerFunction",
            "text": "HandlerFunction"
          },
          "<infer U> ? U : never"
        ],
        "path": "packages/core/http/core-http-server/src/router/context_provider.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.HandlerFunction",
        "type": "Type",
        "tags": [],
        "label": "HandlerFunction",
        "description": [
          "\nA function that accepts a context object and an optional number of additional arguments. Used for the generic types\nin {@link IContextContainer}\n"
        ],
        "signature": [
          "(context: T, ...args: any[]) => any"
        ],
        "path": "packages/core/http/core-http-server/src/router/context_provider.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HandlerFunction.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "T"
            ],
            "path": "packages/core/http/core-http-server/src/router/context_provider.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.HandlerFunction.$2",
            "type": "Array",
            "tags": [],
            "label": "args",
            "description": [],
            "signature": [
              "any[]"
            ],
            "path": "packages/core/http/core-http-server/src/router/context_provider.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.HandlerParameters",
        "type": "Type",
        "tags": [],
        "label": "HandlerParameters",
        "description": [
          "\nExtracts the types of the additional arguments of a {@link HandlerFunction}, excluding the\n{@link HandlerContextType}.\n"
        ],
        "signature": [
          "T extends (context: any, ...args: infer U) => any ? U : never"
        ],
        "path": "packages/core/http/core-http-server/src/router/context_provider.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.Headers",
        "type": "Type",
        "tags": [],
        "label": "Headers",
        "description": [
          "\nHttp request headers to read."
        ],
        "signature": [
          "{ accept?: string | string[] | undefined; \"accept-language\"?: string | string[] | undefined; \"accept-patch\"?: string | string[] | undefined; \"accept-ranges\"?: string | string[] | undefined; \"access-control-allow-credentials\"?: string | string[] | undefined; \"access-control-allow-headers\"?: string | string[] | undefined; \"access-control-allow-methods\"?: string | string[] | undefined; \"access-control-allow-origin\"?: string | string[] | undefined; \"access-control-expose-headers\"?: string | string[] | undefined; \"access-control-max-age\"?: string | string[] | undefined; \"access-control-request-headers\"?: string | string[] | undefined; \"access-control-request-method\"?: string | string[] | undefined; age?: string | string[] | undefined; allow?: string | string[] | undefined; \"alt-svc\"?: string | string[] | undefined; authorization?: string | string[] | undefined; \"cache-control\"?: string | string[] | undefined; connection?: string | string[] | undefined; \"content-disposition\"?: string | string[] | undefined; \"content-encoding\"?: string | string[] | undefined; \"content-language\"?: string | string[] | undefined; \"content-length\"?: string | string[] | undefined; \"content-location\"?: string | string[] | undefined; \"content-range\"?: string | string[] | undefined; \"content-type\"?: string | string[] | undefined; cookie?: string | string[] | undefined; date?: string | string[] | undefined; etag?: string | string[] | undefined; expect?: string | string[] | undefined; expires?: string | string[] | undefined; forwarded?: string | string[] | undefined; from?: string | string[] | undefined; host?: string | string[] | undefined; \"if-match\"?: string | string[] | undefined; \"if-modified-since\"?: string | string[] | undefined; \"if-none-match\"?: string | string[] | undefined; \"if-unmodified-since\"?: string | string[] | undefined; \"last-modified\"?: string | string[] | undefined; location?: string | string[] | undefined; origin?: string | string[] | undefined; pragma?: string | string[] | undefined; \"proxy-authenticate\"?: string | string[] | undefined; \"proxy-authorization\"?: string | string[] | undefined; \"public-key-pins\"?: string | string[] | undefined; range?: string | string[] | undefined; referer?: string | string[] | undefined; \"retry-after\"?: string | string[] | undefined; \"sec-websocket-accept\"?: string | string[] | undefined; \"sec-websocket-extensions\"?: string | string[] | undefined; \"sec-websocket-key\"?: string | string[] | undefined; \"sec-websocket-protocol\"?: string | string[] | undefined; \"sec-websocket-version\"?: string | string[] | undefined; \"set-cookie\"?: string | string[] | undefined; \"strict-transport-security\"?: string | string[] | undefined; tk?: string | string[] | undefined; trailer?: string | string[] | undefined; \"transfer-encoding\"?: string | string[] | undefined; upgrade?: string | string[] | undefined; \"user-agent\"?: string | string[] | undefined; vary?: string | string[] | undefined; via?: string | string[] | undefined; warning?: string | string[] | undefined; \"www-authenticate\"?: string | string[] | undefined; } & { [header: string]: string | string[] | undefined; }"
        ],
        "path": "packages/core/http/core-http-server/src/router/headers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.HttpResponsePayload",
        "type": "Type",
        "tags": [],
        "label": "HttpResponsePayload",
        "description": [
          "\nData send to the client as a response payload."
        ],
        "signature": [
          "string | Record<string, any> | ",
          "Stream",
          " | Buffer | undefined"
        ],
        "path": "packages/core/http/core-http-server/src/router/response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.IContextProvider",
        "type": "Type",
        "tags": [],
        "label": "IContextProvider",
        "description": [
          "\nA function that returns a context value for a specific key of given context type.\n"
        ],
        "signature": [
          "(context: Omit<Context, ContextName>, request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>, response: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaResponseFactory",
            "text": "KibanaResponseFactory"
          },
          ") => ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.MaybePromise",
            "text": "MaybePromise"
          },
          "<Awaited<Context[ContextName]>>"
        ],
        "path": "packages/core/http/core-http-server/src/router/context_provider.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [
          "The context value associated with this key. May also return a Promise which will be resolved before\nattaching to the context object."
        ],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IContextProvider.$1",
            "type": "Object",
            "tags": [],
            "label": "context",
            "description": [
              "- A partial context object containing only the keys for values provided by plugin dependencies"
            ],
            "signature": [
              "{ [P in Exclude<keyof Context, ContextName>]: Context[P]; }"
            ],
            "path": "packages/core/http/core-http-server/src/router/context_provider.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IContextProvider.$2",
            "type": "Object",
            "tags": [],
            "label": "rest",
            "description": [
              "- Additional parameters provided by the service owner of this context"
            ],
            "signature": [
              "[request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>, response: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              "]"
            ],
            "path": "packages/core/http/core-http-server/src/router/context_provider.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.IsAuthenticated",
        "type": "Type",
        "tags": [],
        "label": "IsAuthenticated",
        "description": [
          "\nReturns authentication status for a request."
        ],
        "signature": [
          "(request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>) => boolean"
        ],
        "path": "packages/core/http/core-http-server/src/auth_state.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.IsAuthenticated.$1",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [
              "{@link KibanaRequest } - an incoming request."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "packages/core/http/core-http-server/src/auth_state.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KibanaRequestRouteOptions",
        "type": "Type",
        "tags": [],
        "label": "KibanaRequestRouteOptions",
        "description": [
          "\nRoute options: If 'GET' or 'OPTIONS' method, body options won't be returned."
        ],
        "signature": [
          "Method extends \"options\" | \"get\" ? Required<Omit<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteConfigOptions",
            "text": "RouteConfigOptions"
          },
          "<Method>, \"body\">> : Required<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteConfigOptions",
            "text": "RouteConfigOptions"
          },
          "<Method>>"
        ],
        "path": "packages/core/http/core-http-server/src/router/request.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KibanaResponseFactory",
        "type": "Type",
        "tags": [],
        "label": "KibanaResponseFactory",
        "description": [
          "\nSet of helpers used to create `KibanaResponse` to form HTTP response on an incoming request.\nShould be returned as a result of {@link RequestHandler} execution.\n"
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaSuccessResponseFactory",
            "text": "KibanaSuccessResponseFactory"
          },
          " & ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRedirectionResponseFactory",
            "text": "KibanaRedirectionResponseFactory"
          },
          " & ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaErrorResponseFactory",
            "text": "KibanaErrorResponseFactory"
          },
          " & { custom<T extends string | Record<string, any> | Error | ",
          "Stream",
          " | Buffer | { message: string | Error; attributes?: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.ResponseErrorAttributes",
            "text": "ResponseErrorAttributes"
          },
          " | undefined; } | undefined>(options: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.CustomHttpResponseOptions",
            "text": "CustomHttpResponseOptions"
          },
          "<T>): ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<any>; }"
        ],
        "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KnownHeaders",
        "type": "Type",
        "tags": [],
        "label": "KnownHeaders",
        "description": [
          "\nSet of well-known HTTP headers."
        ],
        "signature": [
          "\"accept\" | \"accept-language\" | \"accept-patch\" | \"accept-ranges\" | \"access-control-allow-credentials\" | \"access-control-allow-headers\" | \"access-control-allow-methods\" | \"access-control-allow-origin\" | \"access-control-expose-headers\" | \"access-control-max-age\" | \"access-control-request-headers\" | \"access-control-request-method\" | \"age\" | \"allow\" | \"alt-svc\" | \"authorization\" | \"cache-control\" | \"connection\" | \"content-disposition\" | \"content-encoding\" | \"content-language\" | \"content-length\" | \"content-location\" | \"content-range\" | \"content-type\" | \"cookie\" | \"date\" | \"etag\" | \"expect\" | \"expires\" | \"forwarded\" | \"from\" | \"host\" | \"if-match\" | \"if-modified-since\" | \"if-none-match\" | \"if-unmodified-since\" | \"last-modified\" | \"location\" | \"origin\" | \"pragma\" | \"proxy-authenticate\" | \"proxy-authorization\" | \"public-key-pins\" | \"range\" | \"referer\" | \"retry-after\" | \"sec-websocket-accept\" | \"sec-websocket-extensions\" | \"sec-websocket-key\" | \"sec-websocket-protocol\" | \"sec-websocket-version\" | \"set-cookie\" | \"strict-transport-security\" | \"tk\" | \"trailer\" | \"transfer-encoding\" | \"upgrade\" | \"user-agent\" | \"vary\" | \"via\" | \"warning\" | \"www-authenticate\""
        ],
        "path": "packages/core/http/core-http-server/src/router/headers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.KnownKeys",
        "type": "Type",
        "tags": [],
        "label": "KnownKeys",
        "description": [
          "\nCreates a Union type of all known keys of a given interface."
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.StringKeysAsVals",
            "text": "StringKeysAsVals"
          },
          "<T> extends { [_ in keyof T]: infer U; } ? U : never"
        ],
        "path": "packages/core/http/core-http-server/src/router/headers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.LifecycleResponseFactory",
        "type": "Type",
        "tags": [],
        "label": "LifecycleResponseFactory",
        "description": [
          "\nCreates an object containing redirection or error response with error details, HTTP headers, and other data transmitted to the client."
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRedirectionResponseFactory",
            "text": "KibanaRedirectionResponseFactory"
          },
          " & ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaErrorResponseFactory",
            "text": "KibanaErrorResponseFactory"
          }
        ],
        "path": "packages/core/http/core-http-server/src/router/response_factory.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPostAuthHandler",
        "type": "Type",
        "tags": [],
        "label": "OnPostAuthHandler",
        "description": [
          "\nSee {@link OnPostAuthToolkit}."
        ],
        "signature": [
          "(request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>, response: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.LifecycleResponseFactory",
            "text": "LifecycleResponseFactory"
          },
          ", toolkit: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPostAuthToolkit",
            "text": "OnPostAuthToolkit"
          },
          ") => ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<any> | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPostAuthNextResult",
            "text": "OnPostAuthNextResult"
          },
          " | Promise<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<any> | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPostAuthNextResult",
            "text": "OnPostAuthNextResult"
          },
          ">"
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_post_auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPostAuthHandler.$1",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_post_auth.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPostAuthHandler.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "response",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRedirectionResponseFactory",
                "text": "KibanaRedirectionResponseFactory"
              },
              " & ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaErrorResponseFactory",
                "text": "KibanaErrorResponseFactory"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_post_auth.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPostAuthHandler.$3",
            "type": "Object",
            "tags": [],
            "label": "toolkit",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPostAuthToolkit",
                "text": "OnPostAuthToolkit"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_post_auth.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPostAuthResult",
        "type": "Type",
        "tags": [],
        "label": "OnPostAuthResult",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPostAuthNextResult",
            "text": "OnPostAuthNextResult"
          }
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_post_auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPostAuthResultType",
        "type": "string",
        "tags": [],
        "label": "OnPostAuthResultType",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_post_auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreAuthHandler",
        "type": "Type",
        "tags": [],
        "label": "OnPreAuthHandler",
        "description": [
          "\nSee {@link OnPreAuthToolkit}."
        ],
        "signature": [
          "(request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>, response: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.LifecycleResponseFactory",
            "text": "LifecycleResponseFactory"
          },
          ", toolkit: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreAuthToolkit",
            "text": "OnPreAuthToolkit"
          },
          ") => ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<any> | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreAuthNextResult",
            "text": "OnPreAuthNextResult"
          },
          " | Promise<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<any> | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreAuthNextResult",
            "text": "OnPreAuthNextResult"
          },
          ">"
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreAuthHandler.$1",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_auth.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreAuthHandler.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "response",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRedirectionResponseFactory",
                "text": "KibanaRedirectionResponseFactory"
              },
              " & ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaErrorResponseFactory",
                "text": "KibanaErrorResponseFactory"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_auth.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreAuthHandler.$3",
            "type": "Object",
            "tags": [],
            "label": "toolkit",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreAuthToolkit",
                "text": "OnPreAuthToolkit"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_auth.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreAuthResult",
        "type": "Type",
        "tags": [],
        "label": "OnPreAuthResult",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreAuthNextResult",
            "text": "OnPreAuthNextResult"
          }
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreAuthResultType",
        "type": "string",
        "tags": [],
        "label": "OnPreAuthResultType",
        "description": [],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_auth.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreResponseHandler",
        "type": "Type",
        "tags": [],
        "label": "OnPreResponseHandler",
        "description": [
          "\nSee {@link OnPreResponseToolkit}."
        ],
        "signature": [
          "(request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>, preResponse: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreResponseInfo",
            "text": "OnPreResponseInfo"
          },
          ", toolkit: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreResponseToolkit",
            "text": "OnPreResponseToolkit"
          },
          ") => ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreResponseResult",
            "text": "OnPreResponseResult"
          },
          " | Promise<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreResponseResult",
            "text": "OnPreResponseResult"
          },
          ">"
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseHandler.$1",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseHandler.$2",
            "type": "Object",
            "tags": [],
            "label": "preResponse",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreResponseInfo",
                "text": "OnPreResponseInfo"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreResponseHandler.$3",
            "type": "Object",
            "tags": [],
            "label": "toolkit",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreResponseToolkit",
                "text": "OnPreResponseToolkit"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreResponseResult",
        "type": "Type",
        "tags": [],
        "label": "OnPreResponseResult",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreResponseResultRender",
            "text": "OnPreResponseResultRender"
          },
          " | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreResponseResultNext",
            "text": "OnPreResponseResultNext"
          }
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreRoutingHandler",
        "type": "Type",
        "tags": [],
        "label": "OnPreRoutingHandler",
        "description": [
          "\nSee {@link OnPreRoutingToolkit}."
        ],
        "signature": [
          "(request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>, response: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.LifecycleResponseFactory",
            "text": "LifecycleResponseFactory"
          },
          ", toolkit: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreRoutingToolkit",
            "text": "OnPreRoutingToolkit"
          },
          ") => ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<any> | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreRoutingResult",
            "text": "OnPreRoutingResult"
          },
          " | Promise<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<any> | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreRoutingResult",
            "text": "OnPreRoutingResult"
          },
          ">"
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreRoutingHandler.$1",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreRoutingHandler.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "response",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRedirectionResponseFactory",
                "text": "KibanaRedirectionResponseFactory"
              },
              " & ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaErrorResponseFactory",
                "text": "KibanaErrorResponseFactory"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.OnPreRoutingHandler.$3",
            "type": "Object",
            "tags": [],
            "label": "toolkit",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.OnPreRoutingToolkit",
                "text": "OnPreRoutingToolkit"
              }
            ],
            "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.OnPreRoutingResult",
        "type": "Type",
        "tags": [],
        "label": "OnPreRoutingResult",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreRoutingResultNext",
            "text": "OnPreRoutingResultNext"
          },
          " | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.OnPreRoutingResultRewriteUrl",
            "text": "OnPreRoutingResultRewriteUrl"
          }
        ],
        "path": "packages/core/http/core-http-server/src/lifecycle/on_pre_routing.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RawRequest",
        "type": "Type",
        "tags": [],
        "label": "RawRequest",
        "description": [],
        "signature": [
          "Request",
          " | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.FakeRawRequest",
            "text": "FakeRawRequest"
          }
        ],
        "path": "packages/core/http/core-http-server/src/router/raw_request.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RedirectResponseOptions",
        "type": "Type",
        "tags": [],
        "label": "RedirectResponseOptions",
        "description": [
          "\nHTTP response parameters for redirection response"
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.HttpResponseOptions",
            "text": "HttpResponseOptions"
          },
          " & { headers: { location: string; }; }"
        ],
        "path": "packages/core/http/core-http-server/src/router/response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RequestHandler",
        "type": "Type",
        "tags": [],
        "label": "RequestHandler",
        "description": [
          "\nA function executed when route path matched requested resource path.\nRequest handler is expected to return a result of one of {@link KibanaResponseFactory} functions.\nIf anything else is returned, or an error is thrown, the HTTP service will automatically log the error\nand respond `500 - Internal Server Error`."
        ],
        "signature": [
          "(context: Context, request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<P, Q, B, Method>, response: ResponseFactory) => ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<any> | Promise<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<any>>"
        ],
        "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RequestHandler.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "context",
            "description": [
              "{@link RequestHandlerContext } - the core context exposed for this request."
            ],
            "signature": [
              "Context"
            ],
            "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RequestHandler.$2",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [
              "{@link KibanaRequest } - object containing information about requested resource,\nsuch as path, method, headers, parameters, query, body, etc."
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<P, Q, B, Method>"
            ],
            "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RequestHandler.$3",
            "type": "Uncategorized",
            "tags": [],
            "label": "response",
            "description": [
              "{@link KibanaResponseFactory } - a set of helper functions used to respond to a request."
            ],
            "signature": [
              "ResponseFactory"
            ],
            "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RequestHandlerWrapper",
        "type": "Type",
        "tags": [],
        "label": "RequestHandlerWrapper",
        "description": [
          "\nType-safe wrapper for {@link RequestHandler} function."
        ],
        "signature": [
          "<P, Q, B, Context extends ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RequestHandlerContextBase",
            "text": "RequestHandlerContextBase"
          },
          " = ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RequestHandlerContextBase",
            "text": "RequestHandlerContextBase"
          },
          ", Method extends ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteMethod",
            "text": "RouteMethod"
          },
          " = any, ResponseFactory extends ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaResponseFactory",
            "text": "KibanaResponseFactory"
          },
          " = ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaResponseFactory",
            "text": "KibanaResponseFactory"
          },
          ">(handler: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RequestHandler",
            "text": "RequestHandler"
          },
          "<P, Q, B, Context, Method, ResponseFactory>) => ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RequestHandler",
            "text": "RequestHandler"
          },
          "<P, Q, B, Context, Method, ResponseFactory>"
        ],
        "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RequestHandlerWrapper.$1",
            "type": "Function",
            "tags": [],
            "label": "handler",
            "description": [],
            "signature": [
              "(context: Context, request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<P, Q, B, Method>, response: ResponseFactory) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any> | Promise<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>>"
            ],
            "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RequestHandlerWrapper.$1.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "context",
                "description": [],
                "signature": [
                  "Context"
                ],
                "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RequestHandlerWrapper.$1.$2",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<P, Q, B, Method>"
                ],
                "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RequestHandlerWrapper.$1.$3",
                "type": "Uncategorized",
                "tags": [],
                "label": "response",
                "description": [],
                "signature": [
                  "ResponseFactory"
                ],
                "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.ResponseError",
        "type": "Type",
        "tags": [],
        "label": "ResponseError",
        "description": [
          "\nError message and optional data send to the client in case of error."
        ],
        "signature": [
          "string | Error | { message: string | Error; attributes?: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.ResponseErrorAttributes",
            "text": "ResponseErrorAttributes"
          },
          " | undefined; }"
        ],
        "path": "packages/core/http/core-http-server/src/router/response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.ResponseErrorAttributes",
        "type": "Type",
        "tags": [],
        "label": "ResponseErrorAttributes",
        "description": [
          "\nAdditional data to provide error details."
        ],
        "signature": [
          "{ [x: string]: any; }"
        ],
        "path": "packages/core/http/core-http-server/src/router/response.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.ResponseHeaders",
        "type": "Type",
        "tags": [],
        "label": "ResponseHeaders",
        "description": [
          "\nHttp response headers to set."
        ],
        "signature": [
          "Record<\"accept\" | \"accept-language\" | \"accept-patch\" | \"accept-ranges\" | \"access-control-allow-credentials\" | \"access-control-allow-headers\" | \"access-control-allow-methods\" | \"access-control-allow-origin\" | \"access-control-expose-headers\" | \"access-control-max-age\" | \"access-control-request-headers\" | \"access-control-request-method\" | \"age\" | \"allow\" | \"alt-svc\" | \"authorization\" | \"cache-control\" | \"connection\" | \"content-disposition\" | \"content-encoding\" | \"content-language\" | \"content-length\" | \"content-location\" | \"content-range\" | \"content-type\" | \"cookie\" | \"date\" | \"etag\" | \"expect\" | \"expires\" | \"forwarded\" | \"from\" | \"host\" | \"if-match\" | \"if-modified-since\" | \"if-none-match\" | \"if-unmodified-since\" | \"last-modified\" | \"location\" | \"origin\" | \"pragma\" | \"proxy-authenticate\" | \"proxy-authorization\" | \"public-key-pins\" | \"range\" | \"referer\" | \"retry-after\" | \"sec-websocket-accept\" | \"sec-websocket-extensions\" | \"sec-websocket-key\" | \"sec-websocket-protocol\" | \"sec-websocket-version\" | \"set-cookie\" | \"strict-transport-security\" | \"tk\" | \"trailer\" | \"transfer-encoding\" | \"upgrade\" | \"user-agent\" | \"vary\" | \"via\" | \"warning\" | \"www-authenticate\", string | string[]> | Record<string, string | string[]>"
        ],
        "path": "packages/core/http/core-http-server/src/router/headers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteContentType",
        "type": "Type",
        "tags": [],
        "label": "RouteContentType",
        "description": [
          "\nThe set of supported parseable Content-Types"
        ],
        "signature": [
          "\"application/json\" | \"multipart/form-data\" | \"application/*+json\" | \"application/octet-stream\" | \"application/x-www-form-urlencoded\" | \"text/*\""
        ],
        "path": "packages/core/http/core-http-server/src/router/route.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteMethod",
        "type": "Type",
        "tags": [],
        "label": "RouteMethod",
        "description": [
          "\nThe set of common HTTP methods supported by Kibana routing."
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.SafeRouteMethod",
            "text": "SafeRouteMethod"
          },
          " | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.DestructiveRouteMethod",
            "text": "DestructiveRouteMethod"
          }
        ],
        "path": "packages/core/http/core-http-server/src/router/route.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteRegistrar",
        "type": "Type",
        "tags": [],
        "label": "RouteRegistrar",
        "description": [
          "\nRoute handler common definition\n"
        ],
        "signature": [
          "<P, Q, B>(route: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteConfig",
            "text": "RouteConfig"
          },
          "<P, Q, B, Method>, handler: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RequestHandler",
            "text": "RequestHandler"
          },
          "<P, Q, B, Context, Method, ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaResponseFactory",
            "text": "KibanaResponseFactory"
          },
          ">) => void"
        ],
        "path": "packages/core/http/core-http-server/src/router/router.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteRegistrar.$1",
            "type": "Object",
            "tags": [],
            "label": "route",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteConfig",
                "text": "RouteConfig"
              },
              "<P, Q, B, Method>"
            ],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteRegistrar.$2",
            "type": "Function",
            "tags": [],
            "label": "handler",
            "description": [],
            "signature": [
              "(context: Context, request: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<P, Q, B, Method>, response: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ") => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any> | Promise<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.IKibanaResponse",
                "text": "IKibanaResponse"
              },
              "<any>>"
            ],
            "path": "packages/core/http/core-http-server/src/router/router.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RouteRegistrar.$2.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "context",
                "description": [],
                "signature": [
                  "Context"
                ],
                "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RouteRegistrar.$2.$2",
                "type": "Object",
                "tags": [],
                "label": "request",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<P, Q, B, Method>"
                ],
                "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "@kbn/core-http-server",
                "id": "def-common.RouteRegistrar.$2.$3",
                "type": "Uncategorized",
                "tags": [],
                "label": "response",
                "description": [],
                "signature": [
                  "ResponseFactory"
                ],
                "path": "packages/core/http/core-http-server/src/router/request_handler.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteValidationFunction",
        "type": "Type",
        "tags": [],
        "label": "RouteValidationFunction",
        "description": [
          "\nThe custom validation function if @kbn/config-schema is not a valid solution for your specific plugin requirements.\n"
        ],
        "signature": [
          "(data: any, validationResult: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteValidationResultFactory",
            "text": "RouteValidationResultFactory"
          },
          ") => { value: T; error?: undefined; } | { value?: undefined; error: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteValidationError",
            "text": "RouteValidationError"
          },
          "; }"
        ],
        "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteValidationFunction.$1",
            "type": "Any",
            "tags": [],
            "label": "data",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.RouteValidationFunction.$2",
            "type": "Object",
            "tags": [],
            "label": "validationResult",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.RouteValidationResultFactory",
                "text": "RouteValidationResultFactory"
              }
            ],
            "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteValidationSpec",
        "type": "Type",
        "tags": [],
        "label": "RouteValidationSpec",
        "description": [
          "\nAllowed property validation options: either @kbn/config-schema validations or custom validation functions\n\nSee {@link RouteValidationFunction} for custom validation.\n"
        ],
        "signature": [
          {
            "pluginId": "@kbn/config-schema",
            "scope": "common",
            "docId": "kibKbnConfigSchemaPluginApi",
            "section": "def-common.ObjectType",
            "text": "ObjectType"
          },
          "<any> | ",
          {
            "pluginId": "@kbn/config-schema",
            "scope": "common",
            "docId": "kibKbnConfigSchemaPluginApi",
            "section": "def-common.Type",
            "text": "Type"
          },
          "<T> | ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteValidationFunction",
            "text": "RouteValidationFunction"
          },
          "<T>"
        ],
        "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.RouteValidatorFullConfig",
        "type": "Type",
        "tags": [],
        "label": "RouteValidatorFullConfig",
        "description": [
          "\nRoute validations config and options merged into one object"
        ],
        "signature": [
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteValidatorConfig",
            "text": "RouteValidatorConfig"
          },
          "<P, Q, B> & ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.RouteValidatorOptions",
            "text": "RouteValidatorOptions"
          }
        ],
        "path": "packages/core/http/core-http-server/src/router/route_validator.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.SafeRouteMethod",
        "type": "Type",
        "tags": [],
        "label": "SafeRouteMethod",
        "description": [
          "\nSet of HTTP methods not changing the state of the server."
        ],
        "signature": [
          "\"options\" | \"get\""
        ],
        "path": "packages/core/http/core-http-server/src/router/route.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.SetAuthHeaders",
        "type": "Type",
        "tags": [],
        "label": "SetAuthHeaders",
        "description": [],
        "signature": [
          "(request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>, headers: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.AuthHeaders",
            "text": "AuthHeaders"
          },
          ") => void"
        ],
        "path": "packages/core/http/core-http-server/src/auth_headers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SetAuthHeaders.$1",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "packages/core/http/core-http-server/src/auth_headers.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-server",
            "id": "def-common.SetAuthHeaders.$2",
            "type": "Object",
            "tags": [],
            "label": "headers",
            "description": [],
            "signature": [
              "{ [x: string]: string | string[]; }"
            ],
            "path": "packages/core/http/core-http-server/src/auth_headers.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.StringKeysAsVals",
        "type": "Type",
        "tags": [],
        "label": "StringKeysAsVals",
        "description": [
          "\nConverts an object type to a new object type where each string\nkey is copied to the values of the object, and non string keys are\ngiven a `never` value. This allows us to map over the values and\nget the list of all string keys on a type in `KnownKeys<T>`\n"
        ],
        "signature": [
          "{ [K in keyof T]: string extends K ? never : number extends K ? never : K; }"
        ],
        "path": "packages/core/http/core-http-server/src/router/headers.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "@kbn/core-http-server",
        "id": "def-common.validBodyOutput",
        "type": "Object",
        "tags": [],
        "label": "validBodyOutput",
        "description": [
          "\nThe set of valid body.output"
        ],
        "signature": [
          "readonly [\"data\", \"stream\"]"
        ],
        "path": "packages/core/http/core-http-server/src/router/route.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  }
}