{
  "id": "streams",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": [],
    "setup": {
      "parentPluginId": "streams",
      "id": "def-public.StreamsPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "StreamsPluginSetup",
      "description": [],
      "path": "x-pack/solutions/observability/plugins/streams/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "streams",
          "id": "def-public.StreamsPluginSetup.status$",
          "type": "Object",
          "tags": [],
          "label": "status$",
          "description": [],
          "signature": [
            "Observable",
            "<{ status: \"unknown\" | \"disabled\" | \"enabled\"; }>"
          ],
          "path": "x-pack/solutions/observability/plugins/streams/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "streams",
      "id": "def-public.StreamsPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "StreamsPluginStart",
      "description": [],
      "path": "x-pack/solutions/observability/plugins/streams/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "streams",
          "id": "def-public.StreamsPluginStart.streamsRepositoryClient",
          "type": "Object",
          "tags": [],
          "label": "streamsRepositoryClient",
          "description": [],
          "signature": [
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.RouteRepositoryClient",
              "text": "RouteRepositoryClient"
            },
            "<{ \"PUT /api/streams/{name}/_ingest\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"PUT /api/streams/{name}/_ingest\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; body: Zod.ZodType<",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.IngestUpsertRequest",
              "text": "IngestUpsertRequest"
            },
            ", Zod.ZodTypeDef, ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.IngestUpsertRequest",
              "text": "IngestUpsertRequest"
            },
            ">; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; body: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.IngestUpsertRequest",
              "text": "IngestUpsertRequest"
            },
            "; }, { path: { name: string; }; body: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.IngestUpsertRequest",
              "text": "IngestUpsertRequest"
            },
            "; }>, ",
            "StreamsRouteHandlerResources",
            ", ",
            "UpsertStreamResponse",
            ", undefined>; \"GET /api/streams/{name}/_ingest\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"GET /api/streams/{name}/_ingest\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; }, { path: { name: string; }; }>, ",
            "StreamsRouteHandlerResources",
            ", ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.IngestGetResponse",
              "text": "IngestGetResponse"
            },
            ", undefined>; \"POST /api/streams/{name}/processing/_simulate\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"POST /api/streams/{name}/processing/_simulate\", any, ",
            "StreamsRouteHandlerResources",
            ", { detected_fields: ({ name: string; } | (",
            "MappingBooleanProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingKeywordProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingMatchOnlyTextProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingDateProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingIpProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingDoubleNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingLongNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingBooleanProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }) | (",
            "MappingKeywordProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }) | (",
            "MappingMatchOnlyTextProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }) | (",
            "MappingDateProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }) | (",
            "MappingIpProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }) | (",
            "MappingDoubleNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }) | (",
            "MappingLongNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }))[]; documents: ",
            "SimulationDocReport",
            "[]; processors_metrics: Record<string, ",
            "ProcessorMetrics",
            ">; failure_rate: number; success_rate: number; is_non_additive_simulation: boolean; }, undefined>; \"POST /api/streams/{name}/schema/fields_simulation\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"POST /api/streams/{name}/schema/fields_simulation\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; body: Zod.ZodObject<{ field_definitions: Zod.ZodArray<Zod.ZodIntersection<Zod.ZodType<(",
            "MappingBooleanProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
            "MappingKeywordProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
            "MappingMatchOnlyTextProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
            "MappingDateProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
            "MappingIpProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
            "MappingDoubleNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
            "MappingLongNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }), Zod.ZodTypeDef, (",
            "MappingBooleanProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
            "MappingKeywordProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
            "MappingMatchOnlyTextProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
            "MappingDateProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
            "MappingIpProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
            "MappingDoubleNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
            "MappingLongNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; })>, Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>>, \"many\">; }, \"strip\", Zod.ZodTypeAny, { field_definitions: ((",
            "MappingBooleanProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingKeywordProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingMatchOnlyTextProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingDateProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingIpProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingDoubleNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingLongNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }))[]; }, { field_definitions: ((",
            "MappingBooleanProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingKeywordProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingMatchOnlyTextProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingDateProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingIpProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingDoubleNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingLongNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }))[]; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; body: { field_definitions: ((",
            "MappingBooleanProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingKeywordProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingMatchOnlyTextProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingDateProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingIpProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingDoubleNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingLongNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }))[]; }; }, { path: { name: string; }; body: { field_definitions: ((",
            "MappingBooleanProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingKeywordProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingMatchOnlyTextProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingDateProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingIpProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingDoubleNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
            "MappingLongNumberProperty",
            " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }))[]; }; }>, ",
            "StreamsRouteHandlerResources",
            ", { status: \"unknown\" | \"success\" | \"failure\"; simulationError: string | null; documentsWithRuntimeFieldsApplied: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.RecursiveRecord",
              "text": "RecursiveRecord"
            },
            "[] | null; }, undefined>; \"GET /api/streams/{name}/schema/unmapped_fields\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"GET /api/streams/{name}/schema/unmapped_fields\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; }, { path: { name: string; }; }>, ",
            "StreamsRouteHandlerResources",
            ", { unmappedFields: string[]; }, undefined>; \"POST /api/streams/{name}/_sample\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"POST /api/streams/{name}/_sample\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; body: Zod.ZodObject<{ if: Zod.ZodOptional<Zod.ZodType<",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.Condition",
              "text": "Condition"
            },
            ", Zod.ZodTypeDef, ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.Condition",
              "text": "Condition"
            },
            ">>; start: Zod.ZodOptional<Zod.ZodNumber>; end: Zod.ZodOptional<Zod.ZodNumber>; size: Zod.ZodOptional<Zod.ZodNumber>; }, \"strip\", Zod.ZodTypeAny, { start?: number | undefined; end?: number | undefined; size?: number | undefined; if?: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.Condition",
              "text": "Condition"
            },
            " | undefined; }, { start?: number | undefined; end?: number | undefined; size?: number | undefined; if?: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.Condition",
              "text": "Condition"
            },
            " | undefined; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; body: { start?: number | undefined; end?: number | undefined; size?: number | undefined; if?: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.Condition",
              "text": "Condition"
            },
            " | undefined; }; }, { path: { name: string; }; body: { start?: number | undefined; end?: number | undefined; size?: number | undefined; if?: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.Condition",
              "text": "Condition"
            },
            " | undefined; }; }>, ",
            "StreamsRouteHandlerResources",
            ", { documents: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.RecursiveRecord",
              "text": "RecursiveRecord"
            },
            "[]; }, undefined>; \"GET /api/streams/_status\": { endpoint: \"GET /api/streams/_status\"; handler: ServerRouteHandler<",
            "StreamsRouteHandlerResources",
            ", undefined, { enabled: boolean; }>; security?: ",
            "RouteSecurity",
            " | undefined; }; \"POST /api/streams/_resync\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"POST /api/streams/_resync\", Zod.ZodObject<{}, \"strip\", Zod.ZodTypeAny, {}, {}>, ",
            "StreamsRouteHandlerResources",
            ", ",
            "ResyncStreamsResponse",
            ", undefined>; \"POST /api/streams/{name}/_fork\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"POST /api/streams/{name}/_fork\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; body: Zod.ZodObject<{ stream: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; if: Zod.ZodType<",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.Condition",
              "text": "Condition"
            },
            ", Zod.ZodTypeDef, ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.Condition",
              "text": "Condition"
            },
            ">; }, \"strip\", Zod.ZodTypeAny, { stream: { name: string; }; if: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.Condition",
              "text": "Condition"
            },
            "; }, { stream: { name: string; }; if: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.Condition",
              "text": "Condition"
            },
            "; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; body: { stream: { name: string; }; if: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.Condition",
              "text": "Condition"
            },
            "; }; }, { path: { name: string; }; body: { stream: { name: string; }; if: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.Condition",
              "text": "Condition"
            },
            "; }; }>, ",
            "StreamsRouteHandlerResources",
            ", { acknowledged: true; }, undefined>; \"POST /api/streams/_disable\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"POST /api/streams/_disable\", Zod.ZodObject<{}, \"strip\", Zod.ZodTypeAny, {}, {}>, ",
            "StreamsRouteHandlerResources",
            ", ",
            "DisableStreamsResponse",
            ", undefined>; \"POST /api/streams/_enable\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"POST /api/streams/_enable\", Zod.ZodObject<{}, \"strip\", Zod.ZodTypeAny, {}, {}>, ",
            "StreamsRouteHandlerResources",
            ", ",
            "EnableStreamsResponse",
            ", undefined>; \"DELETE /api/streams/{name}\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"DELETE /api/streams/{name}\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; }, { path: { name: string; }; }>, ",
            "StreamsRouteHandlerResources",
            ", { acknowledged: true; }, undefined>; \"PUT /api/streams/{name}\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"PUT /api/streams/{name}\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; body: Zod.ZodType<",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.StreamUpsertRequest",
              "text": "StreamUpsertRequest"
            },
            ", Zod.ZodTypeDef, ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.StreamUpsertRequest",
              "text": "StreamUpsertRequest"
            },
            ">; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; body: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.StreamUpsertRequest",
              "text": "StreamUpsertRequest"
            },
            "; }, { path: { name: string; }; body: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.StreamUpsertRequest",
              "text": "StreamUpsertRequest"
            },
            "; }>, ",
            "StreamsRouteHandlerResources",
            ", ",
            "UpsertStreamResponse",
            ", undefined>; \"GET /api/streams\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"GET /api/streams\", Zod.ZodObject<{}, \"strip\", Zod.ZodTypeAny, {}, {}>, ",
            "StreamsRouteHandlerResources",
            ", { streams: ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.StreamDefinition",
              "text": "StreamDefinition"
            },
            "[]; }, undefined>; \"GET /api/streams/{name}/_details\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"GET /api/streams/{name}/_details\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; query: Zod.ZodObject<{ start: Zod.ZodString; end: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { start: string; end: string; }, { start: string; end: string; }>; }, \"strip\", Zod.ZodTypeAny, { query: { start: string; end: string; }; path: { name: string; }; }, { query: { start: string; end: string; }; path: { name: string; }; }>, ",
            "StreamsRouteHandlerResources",
            ", ",
            "StreamDetailsResponse",
            ", undefined>; \"GET /api/streams/{name}\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"GET /api/streams/{name}\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; }, { path: { name: string; }; }>, ",
            "StreamsRouteHandlerResources",
            ", ",
            {
              "pluginId": "@kbn/streams-schema",
              "scope": "common",
              "docId": "kibKbnStreamsSchemaPluginApi",
              "section": "def-common.StreamGetResponse",
              "text": "StreamGetResponse"
            },
            ", undefined>; \"POST /api/streams/{name}/dashboards/_bulk\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"POST /api/streams/{name}/dashboards/_bulk\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; body: Zod.ZodObject<{ operations: Zod.ZodArray<Zod.ZodUnion<[Zod.ZodObject<{ index: Zod.ZodObject<{ id: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { id: string; }, { id: string; }>; }, \"strip\", Zod.ZodTypeAny, { index: { id: string; }; }, { index: { id: string; }; }>, Zod.ZodObject<{ delete: Zod.ZodObject<{ id: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { id: string; }, { id: string; }>; }, \"strip\", Zod.ZodTypeAny, { delete: { id: string; }; }, { delete: { id: string; }; }>]>, \"many\">; }, \"strip\", Zod.ZodTypeAny, { operations: ({ index: { id: string; }; } | { delete: { id: string; }; })[]; }, { operations: ({ index: { id: string; }; } | { delete: { id: string; }; })[]; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; body: { operations: ({ index: { id: string; }; } | { delete: { id: string; }; })[]; }; }, { path: { name: string; }; body: { operations: ({ index: { id: string; }; } | { delete: { id: string; }; })[]; }; }>, ",
            "StreamsRouteHandlerResources",
            ", ",
            "BulkUpdateAssetsResponse",
            ", undefined>; \"POST /api/streams/{name}/dashboards/_suggestions\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"POST /api/streams/{name}/dashboards/_suggestions\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; query: Zod.ZodObject<{ query: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { query: string; }, { query: string; }>; body: Zod.ZodObject<{ tags: Zod.ZodOptional<Zod.ZodArray<Zod.ZodString, \"many\">>; }, \"strip\", Zod.ZodTypeAny, { tags?: string[] | undefined; }, { tags?: string[] | undefined; }>; }, \"strip\", Zod.ZodTypeAny, { query: { query: string; }; path: { name: string; }; body: { tags?: string[] | undefined; }; }, { query: { query: string; }; path: { name: string; }; body: { tags?: string[] | undefined; }; }>, ",
            "StreamsRouteHandlerResources",
            ", ",
            "SuggestDashboardResponse",
            ", undefined>; \"DELETE /api/streams/{name}/dashboards/{dashboardId}\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"DELETE /api/streams/{name}/dashboards/{dashboardId}\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; dashboardId: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; dashboardId: string; }, { name: string; dashboardId: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; dashboardId: string; }; }, { path: { name: string; dashboardId: string; }; }>, ",
            "StreamsRouteHandlerResources",
            ", ",
            "UnlinkDashboardResponse",
            ", undefined>; \"PUT /api/streams/{name}/dashboards/{dashboardId}\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"PUT /api/streams/{name}/dashboards/{dashboardId}\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; dashboardId: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; dashboardId: string; }, { name: string; dashboardId: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; dashboardId: string; }; }, { path: { name: string; dashboardId: string; }; }>, ",
            "StreamsRouteHandlerResources",
            ", ",
            "LinkDashboardResponse",
            ", undefined>; \"GET /api/streams/{name}/dashboards\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"GET /api/streams/{name}/dashboards\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; }, { path: { name: string; }; }>, ",
            "StreamsRouteHandlerResources",
            ", ",
            "ListDashboardsResponse",
            ", undefined>; \"POST /internal/streams/esql\": ",
            {
              "pluginId": "@kbn/server-route-repository-utils",
              "scope": "common",
              "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
              "section": "def-common.ServerRoute",
              "text": "ServerRoute"
            },
            "<\"POST /internal/streams/esql\", Zod.ZodObject<{ body: Zod.ZodObject<{ query: Zod.ZodString; operationName: Zod.ZodString; filter: Zod.ZodOptional<Zod.ZodObject<{}, \"passthrough\", Zod.ZodTypeAny, Zod.objectOutputType<{}, Zod.ZodTypeAny, \"passthrough\">, Zod.objectInputType<{}, Zod.ZodTypeAny, \"passthrough\">>>; kuery: Zod.ZodOptional<Zod.ZodString>; start: Zod.ZodOptional<Zod.ZodNumber>; end: Zod.ZodOptional<Zod.ZodNumber>; }, \"strip\", Zod.ZodTypeAny, { query: string; operationName: string; start?: number | undefined; end?: number | undefined; filter?: Zod.objectOutputType<{}, Zod.ZodTypeAny, \"passthrough\"> | undefined; kuery?: string | undefined; }, { query: string; operationName: string; start?: number | undefined; end?: number | undefined; filter?: Zod.objectInputType<{}, Zod.ZodTypeAny, \"passthrough\"> | undefined; kuery?: string | undefined; }>; }, \"strip\", Zod.ZodTypeAny, { body: { query: string; operationName: string; start?: number | undefined; end?: number | undefined; filter?: Zod.objectOutputType<{}, Zod.ZodTypeAny, \"passthrough\"> | undefined; kuery?: string | undefined; }; }, { body: { query: string; operationName: string; start?: number | undefined; end?: number | undefined; filter?: Zod.objectInputType<{}, Zod.ZodTypeAny, \"passthrough\"> | undefined; kuery?: string | undefined; }; }>, ",
            "StreamsRouteHandlerResources",
            ", ",
            {
              "pluginId": "@kbn/traced-es-client",
              "scope": "server",
              "docId": "kibKbnTracedEsClientPluginApi",
              "section": "def-server.UnparsedEsqlResponse",
              "text": "UnparsedEsqlResponse"
            },
            ", undefined>; }, ",
            "StreamsRepositoryClientOptions",
            ">"
          ],
          "path": "x-pack/solutions/observability/plugins/streams/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "streams",
          "id": "def-public.StreamsPluginStart.status$",
          "type": "Object",
          "tags": [],
          "label": "status$",
          "description": [],
          "signature": [
            "Observable",
            "<{ status: \"unknown\" | \"disabled\" | \"enabled\"; }>"
          ],
          "path": "x-pack/solutions/observability/plugins/streams/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "streams",
        "id": "def-server.StreamsConfig",
        "type": "Type",
        "tags": [],
        "label": "StreamsConfig",
        "description": [],
        "signature": [
          "{}"
        ],
        "path": "x-pack/solutions/observability/plugins/streams/common/config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "streams",
        "id": "def-server.StreamsRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "StreamsRouteRepository",
        "description": [],
        "signature": [
          "{ \"PUT /api/streams/{name}/_ingest\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"PUT /api/streams/{name}/_ingest\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; body: Zod.ZodType<",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.IngestUpsertRequest",
            "text": "IngestUpsertRequest"
          },
          ", Zod.ZodTypeDef, ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.IngestUpsertRequest",
            "text": "IngestUpsertRequest"
          },
          ">; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; body: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.IngestUpsertRequest",
            "text": "IngestUpsertRequest"
          },
          "; }, { path: { name: string; }; body: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.IngestUpsertRequest",
            "text": "IngestUpsertRequest"
          },
          "; }>, ",
          "StreamsRouteHandlerResources",
          ", ",
          "UpsertStreamResponse",
          ", undefined>; \"GET /api/streams/{name}/_ingest\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /api/streams/{name}/_ingest\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; }, { path: { name: string; }; }>, ",
          "StreamsRouteHandlerResources",
          ", ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.IngestGetResponse",
            "text": "IngestGetResponse"
          },
          ", undefined>; \"POST /api/streams/{name}/processing/_simulate\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /api/streams/{name}/processing/_simulate\", any, ",
          "StreamsRouteHandlerResources",
          ", { detected_fields: ({ name: string; } | (",
          "MappingBooleanProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingKeywordProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingMatchOnlyTextProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingDateProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingIpProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingDoubleNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingLongNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingBooleanProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }) | (",
          "MappingKeywordProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }) | (",
          "MappingMatchOnlyTextProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }) | (",
          "MappingDateProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }) | (",
          "MappingIpProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }) | (",
          "MappingDoubleNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }) | (",
          "MappingLongNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { from: string; } & { name: string; }))[]; documents: ",
          "SimulationDocReport",
          "[]; processors_metrics: Record<string, ",
          "ProcessorMetrics",
          ">; failure_rate: number; success_rate: number; is_non_additive_simulation: boolean; }, undefined>; \"POST /api/streams/{name}/schema/fields_simulation\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /api/streams/{name}/schema/fields_simulation\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; body: Zod.ZodObject<{ field_definitions: Zod.ZodArray<Zod.ZodIntersection<Zod.ZodType<(",
          "MappingBooleanProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
          "MappingKeywordProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
          "MappingMatchOnlyTextProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
          "MappingDateProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
          "MappingIpProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
          "MappingDoubleNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
          "MappingLongNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }), Zod.ZodTypeDef, (",
          "MappingBooleanProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
          "MappingKeywordProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
          "MappingMatchOnlyTextProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
          "MappingDateProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
          "MappingIpProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
          "MappingDoubleNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; }) | (",
          "MappingLongNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; })>, Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>>, \"many\">; }, \"strip\", Zod.ZodTypeAny, { field_definitions: ((",
          "MappingBooleanProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingKeywordProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingMatchOnlyTextProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingDateProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingIpProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingDoubleNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingLongNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }))[]; }, { field_definitions: ((",
          "MappingBooleanProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingKeywordProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingMatchOnlyTextProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingDateProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingIpProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingDoubleNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingLongNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }))[]; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; body: { field_definitions: ((",
          "MappingBooleanProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingKeywordProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingMatchOnlyTextProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingDateProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingIpProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingDoubleNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingLongNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }))[]; }; }, { path: { name: string; }; body: { field_definitions: ((",
          "MappingBooleanProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingKeywordProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingMatchOnlyTextProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingDateProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingIpProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingDoubleNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }) | (",
          "MappingLongNumberProperty",
          " & { type: \"boolean\" | \"ip\" | \"keyword\" | \"date\" | \"long\" | \"double\" | \"match_only_text\"; format?: string | undefined; } & { name: string; }))[]; }; }>, ",
          "StreamsRouteHandlerResources",
          ", { status: \"unknown\" | \"success\" | \"failure\"; simulationError: string | null; documentsWithRuntimeFieldsApplied: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.RecursiveRecord",
            "text": "RecursiveRecord"
          },
          "[] | null; }, undefined>; \"GET /api/streams/{name}/schema/unmapped_fields\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /api/streams/{name}/schema/unmapped_fields\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; }, { path: { name: string; }; }>, ",
          "StreamsRouteHandlerResources",
          ", { unmappedFields: string[]; }, undefined>; \"POST /api/streams/{name}/_sample\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /api/streams/{name}/_sample\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; body: Zod.ZodObject<{ if: Zod.ZodOptional<Zod.ZodType<",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.Condition",
            "text": "Condition"
          },
          ", Zod.ZodTypeDef, ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.Condition",
            "text": "Condition"
          },
          ">>; start: Zod.ZodOptional<Zod.ZodNumber>; end: Zod.ZodOptional<Zod.ZodNumber>; size: Zod.ZodOptional<Zod.ZodNumber>; }, \"strip\", Zod.ZodTypeAny, { start?: number | undefined; end?: number | undefined; size?: number | undefined; if?: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.Condition",
            "text": "Condition"
          },
          " | undefined; }, { start?: number | undefined; end?: number | undefined; size?: number | undefined; if?: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.Condition",
            "text": "Condition"
          },
          " | undefined; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; body: { start?: number | undefined; end?: number | undefined; size?: number | undefined; if?: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.Condition",
            "text": "Condition"
          },
          " | undefined; }; }, { path: { name: string; }; body: { start?: number | undefined; end?: number | undefined; size?: number | undefined; if?: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.Condition",
            "text": "Condition"
          },
          " | undefined; }; }>, ",
          "StreamsRouteHandlerResources",
          ", { documents: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.RecursiveRecord",
            "text": "RecursiveRecord"
          },
          "[]; }, undefined>; \"GET /api/streams/_status\": { endpoint: \"GET /api/streams/_status\"; handler: ServerRouteHandler<",
          "StreamsRouteHandlerResources",
          ", undefined, { enabled: boolean; }>; security?: ",
          "RouteSecurity",
          " | undefined; }; \"POST /api/streams/_resync\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /api/streams/_resync\", Zod.ZodObject<{}, \"strip\", Zod.ZodTypeAny, {}, {}>, ",
          "StreamsRouteHandlerResources",
          ", ",
          "ResyncStreamsResponse",
          ", undefined>; \"POST /api/streams/{name}/_fork\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /api/streams/{name}/_fork\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; body: Zod.ZodObject<{ stream: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; if: Zod.ZodType<",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.Condition",
            "text": "Condition"
          },
          ", Zod.ZodTypeDef, ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.Condition",
            "text": "Condition"
          },
          ">; }, \"strip\", Zod.ZodTypeAny, { stream: { name: string; }; if: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.Condition",
            "text": "Condition"
          },
          "; }, { stream: { name: string; }; if: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.Condition",
            "text": "Condition"
          },
          "; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; body: { stream: { name: string; }; if: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.Condition",
            "text": "Condition"
          },
          "; }; }, { path: { name: string; }; body: { stream: { name: string; }; if: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.Condition",
            "text": "Condition"
          },
          "; }; }>, ",
          "StreamsRouteHandlerResources",
          ", { acknowledged: true; }, undefined>; \"POST /api/streams/_disable\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /api/streams/_disable\", Zod.ZodObject<{}, \"strip\", Zod.ZodTypeAny, {}, {}>, ",
          "StreamsRouteHandlerResources",
          ", ",
          "DisableStreamsResponse",
          ", undefined>; \"POST /api/streams/_enable\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /api/streams/_enable\", Zod.ZodObject<{}, \"strip\", Zod.ZodTypeAny, {}, {}>, ",
          "StreamsRouteHandlerResources",
          ", ",
          "EnableStreamsResponse",
          ", undefined>; \"DELETE /api/streams/{name}\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"DELETE /api/streams/{name}\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; }, { path: { name: string; }; }>, ",
          "StreamsRouteHandlerResources",
          ", { acknowledged: true; }, undefined>; \"PUT /api/streams/{name}\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"PUT /api/streams/{name}\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; body: Zod.ZodType<",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.StreamUpsertRequest",
            "text": "StreamUpsertRequest"
          },
          ", Zod.ZodTypeDef, ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.StreamUpsertRequest",
            "text": "StreamUpsertRequest"
          },
          ">; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; body: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.StreamUpsertRequest",
            "text": "StreamUpsertRequest"
          },
          "; }, { path: { name: string; }; body: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.StreamUpsertRequest",
            "text": "StreamUpsertRequest"
          },
          "; }>, ",
          "StreamsRouteHandlerResources",
          ", ",
          "UpsertStreamResponse",
          ", undefined>; \"GET /api/streams\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /api/streams\", Zod.ZodObject<{}, \"strip\", Zod.ZodTypeAny, {}, {}>, ",
          "StreamsRouteHandlerResources",
          ", { streams: ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.StreamDefinition",
            "text": "StreamDefinition"
          },
          "[]; }, undefined>; \"GET /api/streams/{name}/_details\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /api/streams/{name}/_details\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; query: Zod.ZodObject<{ start: Zod.ZodString; end: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { start: string; end: string; }, { start: string; end: string; }>; }, \"strip\", Zod.ZodTypeAny, { query: { start: string; end: string; }; path: { name: string; }; }, { query: { start: string; end: string; }; path: { name: string; }; }>, ",
          "StreamsRouteHandlerResources",
          ", ",
          "StreamDetailsResponse",
          ", undefined>; \"GET /api/streams/{name}\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /api/streams/{name}\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; }, { path: { name: string; }; }>, ",
          "StreamsRouteHandlerResources",
          ", ",
          {
            "pluginId": "@kbn/streams-schema",
            "scope": "common",
            "docId": "kibKbnStreamsSchemaPluginApi",
            "section": "def-common.StreamGetResponse",
            "text": "StreamGetResponse"
          },
          ", undefined>; \"POST /api/streams/{name}/dashboards/_bulk\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /api/streams/{name}/dashboards/_bulk\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; body: Zod.ZodObject<{ operations: Zod.ZodArray<Zod.ZodUnion<[Zod.ZodObject<{ index: Zod.ZodObject<{ id: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { id: string; }, { id: string; }>; }, \"strip\", Zod.ZodTypeAny, { index: { id: string; }; }, { index: { id: string; }; }>, Zod.ZodObject<{ delete: Zod.ZodObject<{ id: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { id: string; }, { id: string; }>; }, \"strip\", Zod.ZodTypeAny, { delete: { id: string; }; }, { delete: { id: string; }; }>]>, \"many\">; }, \"strip\", Zod.ZodTypeAny, { operations: ({ index: { id: string; }; } | { delete: { id: string; }; })[]; }, { operations: ({ index: { id: string; }; } | { delete: { id: string; }; })[]; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; body: { operations: ({ index: { id: string; }; } | { delete: { id: string; }; })[]; }; }, { path: { name: string; }; body: { operations: ({ index: { id: string; }; } | { delete: { id: string; }; })[]; }; }>, ",
          "StreamsRouteHandlerResources",
          ", ",
          "BulkUpdateAssetsResponse",
          ", undefined>; \"POST /api/streams/{name}/dashboards/_suggestions\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /api/streams/{name}/dashboards/_suggestions\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; query: Zod.ZodObject<{ query: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { query: string; }, { query: string; }>; body: Zod.ZodObject<{ tags: Zod.ZodOptional<Zod.ZodArray<Zod.ZodString, \"many\">>; }, \"strip\", Zod.ZodTypeAny, { tags?: string[] | undefined; }, { tags?: string[] | undefined; }>; }, \"strip\", Zod.ZodTypeAny, { query: { query: string; }; path: { name: string; }; body: { tags?: string[] | undefined; }; }, { query: { query: string; }; path: { name: string; }; body: { tags?: string[] | undefined; }; }>, ",
          "StreamsRouteHandlerResources",
          ", ",
          "SuggestDashboardResponse",
          ", undefined>; \"DELETE /api/streams/{name}/dashboards/{dashboardId}\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"DELETE /api/streams/{name}/dashboards/{dashboardId}\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; dashboardId: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; dashboardId: string; }, { name: string; dashboardId: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; dashboardId: string; }; }, { path: { name: string; dashboardId: string; }; }>, ",
          "StreamsRouteHandlerResources",
          ", ",
          "UnlinkDashboardResponse",
          ", undefined>; \"PUT /api/streams/{name}/dashboards/{dashboardId}\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"PUT /api/streams/{name}/dashboards/{dashboardId}\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; dashboardId: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; dashboardId: string; }, { name: string; dashboardId: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; dashboardId: string; }; }, { path: { name: string; dashboardId: string; }; }>, ",
          "StreamsRouteHandlerResources",
          ", ",
          "LinkDashboardResponse",
          ", undefined>; \"GET /api/streams/{name}/dashboards\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /api/streams/{name}/dashboards\", Zod.ZodObject<{ path: Zod.ZodObject<{ name: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { name: string; }, { name: string; }>; }, \"strip\", Zod.ZodTypeAny, { path: { name: string; }; }, { path: { name: string; }; }>, ",
          "StreamsRouteHandlerResources",
          ", ",
          "ListDashboardsResponse",
          ", undefined>; \"POST /internal/streams/esql\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /internal/streams/esql\", Zod.ZodObject<{ body: Zod.ZodObject<{ query: Zod.ZodString; operationName: Zod.ZodString; filter: Zod.ZodOptional<Zod.ZodObject<{}, \"passthrough\", Zod.ZodTypeAny, Zod.objectOutputType<{}, Zod.ZodTypeAny, \"passthrough\">, Zod.objectInputType<{}, Zod.ZodTypeAny, \"passthrough\">>>; kuery: Zod.ZodOptional<Zod.ZodString>; start: Zod.ZodOptional<Zod.ZodNumber>; end: Zod.ZodOptional<Zod.ZodNumber>; }, \"strip\", Zod.ZodTypeAny, { query: string; operationName: string; start?: number | undefined; end?: number | undefined; filter?: Zod.objectOutputType<{}, Zod.ZodTypeAny, \"passthrough\"> | undefined; kuery?: string | undefined; }, { query: string; operationName: string; start?: number | undefined; end?: number | undefined; filter?: Zod.objectInputType<{}, Zod.ZodTypeAny, \"passthrough\"> | undefined; kuery?: string | undefined; }>; }, \"strip\", Zod.ZodTypeAny, { body: { query: string; operationName: string; start?: number | undefined; end?: number | undefined; filter?: Zod.objectOutputType<{}, Zod.ZodTypeAny, \"passthrough\"> | undefined; kuery?: string | undefined; }; }, { body: { query: string; operationName: string; start?: number | undefined; end?: number | undefined; filter?: Zod.objectInputType<{}, Zod.ZodTypeAny, \"passthrough\"> | undefined; kuery?: string | undefined; }; }>, ",
          "StreamsRouteHandlerResources",
          ", ",
          {
            "pluginId": "@kbn/traced-es-client",
            "scope": "server",
            "docId": "kibKbnTracedEsClientPluginApi",
            "section": "def-server.UnparsedEsqlResponse",
            "text": "UnparsedEsqlResponse"
          },
          ", undefined>; }"
        ],
        "path": "x-pack/solutions/observability/plugins/streams/server/routes/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "streams",
      "id": "def-server.StreamsPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "StreamsPluginSetup",
      "description": [],
      "path": "x-pack/solutions/observability/plugins/streams/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "streams",
      "id": "def-server.StreamsPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "StreamsPluginStart",
      "description": [],
      "path": "x-pack/solutions/observability/plugins/streams/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "streams",
        "id": "def-common.Asset",
        "type": "Interface",
        "tags": [],
        "label": "Asset",
        "description": [],
        "signature": [
          {
            "pluginId": "streams",
            "scope": "common",
            "docId": "kibStreamsPluginApi",
            "section": "def-common.Asset",
            "text": "Asset"
          },
          "<TAssetType> extends ",
          "AssetLink",
          "<TAssetType>"
        ],
        "path": "x-pack/solutions/observability/plugins/streams/common/assets.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "streams",
            "id": "def-common.Asset.label",
            "type": "string",
            "tags": [],
            "label": "label",
            "description": [],
            "path": "x-pack/solutions/observability/plugins/streams/common/assets.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "streams",
            "id": "def-common.Asset.tags",
            "type": "Array",
            "tags": [],
            "label": "tags",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/solutions/observability/plugins/streams/common/assets.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "streams",
        "id": "def-common.AssetType",
        "type": "Type",
        "tags": [],
        "label": "AssetType",
        "description": [],
        "signature": [
          "\"rule\" | \"slo\" | \"dashboard\""
        ],
        "path": "x-pack/solutions/observability/plugins/streams/common/assets.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}