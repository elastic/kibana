{
  "id": "licensing",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "id": "def-public.ILicense",
        "type": "Interface",
        "label": "ILicense",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.ILicense.uid",
            "type": "string",
            "label": "uid",
            "description": [
              "\nUID for license."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 101
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ILicense.status",
            "type": "CompoundType",
            "label": "status",
            "description": [
              "\nThe validity status of the license."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 106
            },
            "signature": [
              "\"active\" | \"invalid\" | \"expired\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ILicense.isActive",
            "type": "boolean",
            "label": "isActive",
            "description": [
              "\nDetermine if the status of the license is active."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 111
            }
          },
          {
            "tags": [],
            "id": "def-public.ILicense.expiryDateInMillis",
            "type": "number",
            "label": "expiryDateInMillis",
            "description": [
              "\nUnix epoch of the expiration date of the license."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 116
            },
            "signature": [
              "number | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ILicense.type",
            "type": "CompoundType",
            "label": "type",
            "description": [
              "\nThe license type, being usually one of basic, standard, gold, platinum, or trial."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 121
            },
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ]
          },
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-public.ILicense.mode",
            "type": "CompoundType",
            "label": "mode",
            "description": [
              "\nThe license type, being usually one of basic, standard, gold, platinum, or trial."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 127
            },
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ILicense.signature",
            "type": "string",
            "label": "signature",
            "description": [
              "\nSignature of the license content."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 132
            }
          },
          {
            "tags": [],
            "id": "def-public.ILicense.isAvailable",
            "type": "boolean",
            "label": "isAvailable",
            "description": [
              "\nDetermine if the license container has information."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 137
            }
          },
          {
            "tags": [],
            "id": "def-public.ILicense.toJSON",
            "type": "Function",
            "label": "toJSON",
            "description": [
              "\nReturns"
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 142
            },
            "signature": [
              "() => ",
              "PublicLicenseJSON"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ILicense.error",
            "type": "string",
            "label": "error",
            "description": [
              "\nA potential error denoting the failure of the license from being retrieved."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 147
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ILicense.getUnavailableReason",
            "type": "Function",
            "label": "getUnavailableReason",
            "description": [
              "\nIf the license is not available, provides a string or Error containing the reason."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 152
            },
            "signature": [
              "() => string | undefined"
            ]
          },
          {
            "id": "def-public.ILicense.hasAtLeast",
            "type": "Function",
            "label": "hasAtLeast",
            "signature": [
              "(minimumLicenseRequired: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\") => boolean"
            ],
            "description": [
              "\nDetermine if license type >= minimal required license type."
            ],
            "children": [
              {
                "id": "def-public.ILicense.hasAtLeast.$1",
                "type": "CompoundType",
                "label": "minimumLicenseRequired",
                "isRequired": true,
                "signature": [
                  "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
                ],
                "description": [
                  "the minimum valid license required for the given feature"
                ],
                "source": {
                  "path": "x-pack/plugins/licensing/common/types.ts",
                  "lineNumber": 158
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 158
            }
          },
          {
            "id": "def-public.ILicense.check",
            "type": "Function",
            "label": "check",
            "signature": [
              "(pluginName: string, minimumLicenseRequired: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\") => ",
              "LicenseCheck"
            ],
            "description": [
              "\nFor a given plugin and license type, receive information about the status of the license."
            ],
            "children": [
              {
                "id": "def-public.ILicense.check.$1",
                "type": "string",
                "label": "pluginName",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [
                  "the name of the plugin"
                ],
                "source": {
                  "path": "x-pack/plugins/licensing/common/types.ts",
                  "lineNumber": 165
                }
              },
              {
                "id": "def-public.ILicense.check.$2",
                "type": "CompoundType",
                "label": "minimumLicenseRequired",
                "isRequired": true,
                "signature": [
                  "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
                ],
                "description": [
                  "the minimum valid license for operating the given plugin"
                ],
                "source": {
                  "path": "x-pack/plugins/licensing/common/types.ts",
                  "lineNumber": 165
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 165
            }
          },
          {
            "id": "def-public.ILicense.getFeature",
            "type": "Function",
            "label": "getFeature",
            "signature": [
              "(name: string) => ",
              "LicenseFeature"
            ],
            "description": [
              "\nA specific API for interacting with the specific features of the license."
            ],
            "children": [
              {
                "id": "def-public.ILicense.getFeature.$1",
                "type": "string",
                "label": "name",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [
                  "the name of the feature to interact with"
                ],
                "source": {
                  "path": "x-pack/plugins/licensing/common/types.ts",
                  "lineNumber": 171
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 171
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 97
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.LicenseCheck",
        "type": "Interface",
        "label": "LicenseCheck",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.LicenseCheck.state",
            "type": "CompoundType",
            "label": "state",
            "description": [
              "\nThe state of checking the results of a license type meeting the license minimum."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 89
            },
            "signature": [
              "LicenseCheckState"
            ]
          },
          {
            "tags": [],
            "id": "def-public.LicenseCheck.message",
            "type": "string",
            "label": "message",
            "description": [
              "\nA message containing the reason for a license type not being valid."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 93
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 85
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.LicenseFeature",
        "type": "Interface",
        "label": "LicenseFeature",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.LicenseFeature.isAvailable",
            "type": "boolean",
            "label": "isAvailable",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 27
            }
          },
          {
            "tags": [],
            "id": "def-public.LicenseFeature.isEnabled",
            "type": "boolean",
            "label": "isEnabled",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 28
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 26
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.PublicLicense",
        "type": "Interface",
        "label": "PublicLicense",
        "description": [
          "\nSubset of license data considered as non-sensitive information.\nCan be passed to the client."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.PublicLicense.uid",
            "type": "string",
            "label": "uid",
            "description": [
              "\nUID for license."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 40
            }
          },
          {
            "tags": [],
            "id": "def-public.PublicLicense.status",
            "type": "CompoundType",
            "label": "status",
            "description": [
              "\nThe validity status of the license."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 45
            },
            "signature": [
              "LicenseStatus"
            ]
          },
          {
            "tags": [],
            "id": "def-public.PublicLicense.expiryDateInMillis",
            "type": "number",
            "label": "expiryDateInMillis",
            "description": [
              "\nUnix epoch of the expiration date of the license."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 50
            }
          },
          {
            "tags": [],
            "id": "def-public.PublicLicense.type",
            "type": "CompoundType",
            "label": "type",
            "description": [
              "\nThe license type, being usually one of basic, standard, gold, platinum, or trial."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 55
            },
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
            ]
          },
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-public.PublicLicense.mode",
            "type": "CompoundType",
            "label": "mode",
            "description": [
              "\nThe license type, being usually one of basic, standard, gold, platinum, or trial."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 60
            },
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 36
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.PublicLicenseJSON",
        "type": "Interface",
        "label": "PublicLicenseJSON",
        "description": [
          "\nSubset of license & features data considered as non-sensitive information.\nStructured as json to be passed to the client."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.PublicLicenseJSON.license",
            "type": "Object",
            "label": "license",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 75
            },
            "signature": [
              "PublicLicense",
              " | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.PublicLicenseJSON.features",
            "type": "Object",
            "label": "features",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 76
            },
            "signature": [
              "Record<string, ",
              "LicenseFeature",
              "> | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.PublicLicenseJSON.signature",
            "type": "string",
            "label": "signature",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 77
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 74
        },
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "id": "def-public.LICENSE_TYPE",
        "type": "Enum",
        "label": "LICENSE_TYPE",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 10
        },
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "id": "def-public.LicenseCheckState",
        "type": "Type",
        "label": "LicenseCheckState",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 8
        },
        "signature": [
          "\"valid\" | \"unavailable\" | \"invalid\" | \"expired\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.LicenseStatus",
        "type": "Type",
        "label": "LicenseStatus",
        "tags": [
          "public"
        ],
        "description": [],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 23
        },
        "signature": [
          "\"active\" | \"invalid\" | \"expired\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.LicenseType",
        "type": "Type",
        "label": "LicenseType",
        "tags": [
          "public"
        ],
        "description": [],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 20
        },
        "signature": [
          "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.PublicFeatures",
        "type": "Type",
        "label": "PublicFeatures",
        "tags": [
          "public"
        ],
        "description": [
          "\nProvides information about feature availability for the current license."
        ],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 67
        },
        "signature": [
          "{ [x: string]: LicenseFeature; }"
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "id": "def-public.LicensingPluginSetup",
      "type": "Interface",
      "label": "LicensingPluginSetup",
      "description": [],
      "tags": [
        "public"
      ],
      "children": [
        {
          "tags": [
            "deprecated"
          ],
          "id": "def-public.LicensingPluginSetup.license$",
          "type": "Object",
          "label": "license$",
          "description": [
            "\nSteam of licensing information {@link ILicense}."
          ],
          "source": {
            "path": "x-pack/plugins/licensing/public/types.ts",
            "lineNumber": 19
          },
          "signature": [
            "Observable",
            "<",
            "ILicense",
            ">"
          ]
        },
        {
          "id": "def-public.LicensingPluginSetup.refresh",
          "type": "Function",
          "label": "refresh",
          "signature": [
            "() => Promise<",
            "ILicense",
            ">"
          ],
          "description": [
            "\nTriggers licensing information re-fetch."
          ],
          "children": [],
          "tags": [
            "deprecated"
          ],
          "returnComment": [],
          "source": {
            "path": "x-pack/plugins/licensing/public/types.ts",
            "lineNumber": 24
          }
        },
        {
          "tags": [],
          "id": "def-public.LicensingPluginSetup.featureUsage",
          "type": "Object",
          "label": "featureUsage",
          "description": [
            "\nAPIs to register licensed feature usage."
          ],
          "source": {
            "path": "x-pack/plugins/licensing/public/types.ts",
            "lineNumber": 28
          },
          "signature": [
            "FeatureUsageServiceSetup"
          ]
        }
      ],
      "source": {
        "path": "x-pack/plugins/licensing/public/types.ts",
        "lineNumber": 14
      },
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "id": "def-public.LicensingPluginStart",
      "type": "Interface",
      "label": "LicensingPluginStart",
      "description": [],
      "tags": [
        "public"
      ],
      "children": [
        {
          "tags": [],
          "id": "def-public.LicensingPluginStart.license$",
          "type": "Object",
          "label": "license$",
          "description": [
            "\nSteam of licensing information {@link ILicense}."
          ],
          "source": {
            "path": "x-pack/plugins/licensing/public/types.ts",
            "lineNumber": 36
          },
          "signature": [
            "Observable",
            "<",
            "ILicense",
            ">"
          ]
        },
        {
          "id": "def-public.LicensingPluginStart.refresh",
          "type": "Function",
          "label": "refresh",
          "signature": [
            "() => Promise<",
            "ILicense",
            ">"
          ],
          "description": [
            "\nTriggers licensing information re-fetch."
          ],
          "children": [],
          "tags": [],
          "returnComment": [],
          "source": {
            "path": "x-pack/plugins/licensing/public/types.ts",
            "lineNumber": 40
          }
        },
        {
          "tags": [],
          "id": "def-public.LicensingPluginStart.featureUsage",
          "type": "Object",
          "label": "featureUsage",
          "description": [
            "\nAPIs to manage licensed feature usage."
          ],
          "source": {
            "path": "x-pack/plugins/licensing/public/types.ts",
            "lineNumber": 44
          },
          "signature": [
            "FeatureUsageServiceStart"
          ]
        }
      ],
      "source": {
        "path": "x-pack/plugins/licensing/public/types.ts",
        "lineNumber": 32
      },
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [
      {
        "id": "def-server.wrapRouteWithLicenseCheck",
        "type": "Function",
        "label": "wrapRouteWithLicenseCheck",
        "signature": [
          "(checkLicense: ",
          {
            "pluginId": "licensing",
            "scope": "server",
            "docId": "kibLicensingPluginApi",
            "section": "def-server.CheckLicense",
            "text": "CheckLicense"
          },
          ", handler: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.RequestHandler",
            "text": "RequestHandler"
          },
          "<P, Q, B, Context, any, { custom: <T extends string | Record<string, any> | Error | { message: string | Error; attributes?: Record<string, any> | undefined; } | Buffer | ",
          "Stream",
          " | undefined>(options: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.CustomHttpResponseOptions",
            "text": "CustomHttpResponseOptions"
          },
          "<T>) => ",
          "KibanaResponse"
        ],
        "description": [],
        "children": [
          {
            "id": "def-server.wrapRouteWithLicenseCheck.$1",
            "type": "Function",
            "label": "checkLicense",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "licensing",
                "scope": "server",
                "docId": "kibLicensingPluginApi",
                "section": "def-server.CheckLicense",
                "text": "CheckLicense"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/server/wrap_route_with_license_check.ts",
              "lineNumber": 18
            }
          },
          {
            "id": "def-server.wrapRouteWithLicenseCheck.$2",
            "type": "Function",
            "label": "handler",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.RequestHandler",
                "text": "RequestHandler"
              },
              "<P, Q, B, Context, any, { custom: <T extends string | Record<string, any> | Error | { message: string | Error; attributes?: Record<string, any> | undefined; } | Buffer | ",
              "Stream",
              " | undefined>(options: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.CustomHttpResponseOptions",
                "text": "CustomHttpResponseOptions"
              },
              "<T>) => ",
              "KibanaResponse",
              "<T>; badRequest: (options?: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.ErrorHttpResponseOptions",
                "text": "ErrorHttpResponseOptions"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/server/wrap_route_with_license_check.ts",
              "lineNumber": 19
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/licensing/server/wrap_route_with_license_check.ts",
          "lineNumber": 17
        },
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "id": "def-server.ElasticsearchError",
        "type": "Interface",
        "label": "ElasticsearchError",
        "signature": [
          {
            "pluginId": "licensing",
            "scope": "server",
            "docId": "kibLicensingPluginApi",
            "section": "def-server.ElasticsearchError",
            "text": "ElasticsearchError"
          },
          " extends Error"
        ],
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-server.ElasticsearchError.status",
            "type": "number",
            "label": "status",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/server/types.ts",
              "lineNumber": 14
            },
            "signature": [
              "number | undefined"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/server/types.ts",
          "lineNumber": 13
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.FeatureUsageServiceSetup",
        "type": "Interface",
        "label": "FeatureUsageServiceSetup",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.FeatureUsageServiceSetup.register",
            "type": "Function",
            "label": "register",
            "signature": [
              "(featureName: string, licenseType: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\") => void"
            ],
            "description": [
              "\nRegister a feature to be able to notify of it's usages using the {@link FeatureUsageServiceStart | service start contract}."
            ],
            "children": [
              {
                "id": "def-server.FeatureUsageServiceSetup.register.$1",
                "type": "string",
                "label": "featureName",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/licensing/server/services/feature_usage_service.ts",
                  "lineNumber": 16
                }
              },
              {
                "id": "def-server.FeatureUsageServiceSetup.register.$2",
                "type": "CompoundType",
                "label": "licenseType",
                "isRequired": true,
                "signature": [
                  "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/licensing/server/services/feature_usage_service.ts",
                  "lineNumber": 16
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/licensing/server/services/feature_usage_service.ts",
              "lineNumber": 16
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/server/services/feature_usage_service.ts",
          "lineNumber": 12
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.FeatureUsageServiceStart",
        "type": "Interface",
        "label": "FeatureUsageServiceStart",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "id": "def-server.FeatureUsageServiceStart.notifyUsage",
            "type": "Function",
            "label": "notifyUsage",
            "signature": [
              "(featureName: string, usedAt?: number | Date | undefined) => void"
            ],
            "description": [
              "\nNotify of a registered feature usage at given time.\n"
            ],
            "children": [
              {
                "id": "def-server.FeatureUsageServiceStart.notifyUsage.$1",
                "type": "string",
                "label": "featureName",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [
                  "- the name of the feature to notify usage of"
                ],
                "source": {
                  "path": "x-pack/plugins/licensing/server/services/feature_usage_service.ts",
                  "lineNumber": 33
                }
              },
              {
                "id": "def-server.FeatureUsageServiceStart.notifyUsage.$2",
                "type": "CompoundType",
                "label": "usedAt",
                "isRequired": false,
                "signature": [
                  "number | Date | undefined"
                ],
                "description": [
                  "- Either a `Date` or an unix timestamp with ms. If not specified, it will be set to the current time."
                ],
                "source": {
                  "path": "x-pack/plugins/licensing/server/services/feature_usage_service.ts",
                  "lineNumber": 33
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/licensing/server/services/feature_usage_service.ts",
              "lineNumber": 33
            }
          },
          {
            "id": "def-server.FeatureUsageServiceStart.getLastUsages",
            "type": "Function",
            "label": "getLastUsages",
            "signature": [
              "() => ",
              "LastFeatureUsage",
              "[]"
            ],
            "description": [
              "\nReturn a map containing last usage timestamp for all features.\nFeatures that were not used yet do not appear in the map."
            ],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/licensing/server/services/feature_usage_service.ts",
              "lineNumber": 38
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/server/services/feature_usage_service.ts",
          "lineNumber": 26
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ILicense",
        "type": "Interface",
        "label": "ILicense",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.ILicense.uid",
            "type": "string",
            "label": "uid",
            "description": [
              "\nUID for license."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 101
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ILicense.status",
            "type": "CompoundType",
            "label": "status",
            "description": [
              "\nThe validity status of the license."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 106
            },
            "signature": [
              "\"active\" | \"invalid\" | \"expired\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ILicense.isActive",
            "type": "boolean",
            "label": "isActive",
            "description": [
              "\nDetermine if the status of the license is active."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 111
            }
          },
          {
            "tags": [],
            "id": "def-server.ILicense.expiryDateInMillis",
            "type": "number",
            "label": "expiryDateInMillis",
            "description": [
              "\nUnix epoch of the expiration date of the license."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 116
            },
            "signature": [
              "number | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ILicense.type",
            "type": "CompoundType",
            "label": "type",
            "description": [
              "\nThe license type, being usually one of basic, standard, gold, platinum, or trial."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 121
            },
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ]
          },
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-server.ILicense.mode",
            "type": "CompoundType",
            "label": "mode",
            "description": [
              "\nThe license type, being usually one of basic, standard, gold, platinum, or trial."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 127
            },
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ILicense.signature",
            "type": "string",
            "label": "signature",
            "description": [
              "\nSignature of the license content."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 132
            }
          },
          {
            "tags": [],
            "id": "def-server.ILicense.isAvailable",
            "type": "boolean",
            "label": "isAvailable",
            "description": [
              "\nDetermine if the license container has information."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 137
            }
          },
          {
            "tags": [],
            "id": "def-server.ILicense.toJSON",
            "type": "Function",
            "label": "toJSON",
            "description": [
              "\nReturns"
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 142
            },
            "signature": [
              "() => ",
              "PublicLicenseJSON"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ILicense.error",
            "type": "string",
            "label": "error",
            "description": [
              "\nA potential error denoting the failure of the license from being retrieved."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 147
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ILicense.getUnavailableReason",
            "type": "Function",
            "label": "getUnavailableReason",
            "description": [
              "\nIf the license is not available, provides a string or Error containing the reason."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 152
            },
            "signature": [
              "() => string | undefined"
            ]
          },
          {
            "id": "def-server.ILicense.hasAtLeast",
            "type": "Function",
            "label": "hasAtLeast",
            "signature": [
              "(minimumLicenseRequired: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\") => boolean"
            ],
            "description": [
              "\nDetermine if license type >= minimal required license type."
            ],
            "children": [
              {
                "id": "def-server.ILicense.hasAtLeast.$1",
                "type": "CompoundType",
                "label": "minimumLicenseRequired",
                "isRequired": true,
                "signature": [
                  "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
                ],
                "description": [
                  "the minimum valid license required for the given feature"
                ],
                "source": {
                  "path": "x-pack/plugins/licensing/common/types.ts",
                  "lineNumber": 158
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 158
            }
          },
          {
            "id": "def-server.ILicense.check",
            "type": "Function",
            "label": "check",
            "signature": [
              "(pluginName: string, minimumLicenseRequired: \"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\") => ",
              "LicenseCheck"
            ],
            "description": [
              "\nFor a given plugin and license type, receive information about the status of the license."
            ],
            "children": [
              {
                "id": "def-server.ILicense.check.$1",
                "type": "string",
                "label": "pluginName",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [
                  "the name of the plugin"
                ],
                "source": {
                  "path": "x-pack/plugins/licensing/common/types.ts",
                  "lineNumber": 165
                }
              },
              {
                "id": "def-server.ILicense.check.$2",
                "type": "CompoundType",
                "label": "minimumLicenseRequired",
                "isRequired": true,
                "signature": [
                  "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
                ],
                "description": [
                  "the minimum valid license for operating the given plugin"
                ],
                "source": {
                  "path": "x-pack/plugins/licensing/common/types.ts",
                  "lineNumber": 165
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 165
            }
          },
          {
            "id": "def-server.ILicense.getFeature",
            "type": "Function",
            "label": "getFeature",
            "signature": [
              "(name: string) => ",
              "LicenseFeature"
            ],
            "description": [
              "\nA specific API for interacting with the specific features of the license."
            ],
            "children": [
              {
                "id": "def-server.ILicense.getFeature.$1",
                "type": "string",
                "label": "name",
                "isRequired": true,
                "signature": [
                  "string"
                ],
                "description": [
                  "the name of the feature to interact with"
                ],
                "source": {
                  "path": "x-pack/plugins/licensing/common/types.ts",
                  "lineNumber": 171
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 171
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 97
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LicenseCheck",
        "type": "Interface",
        "label": "LicenseCheck",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.LicenseCheck.state",
            "type": "CompoundType",
            "label": "state",
            "description": [
              "\nThe state of checking the results of a license type meeting the license minimum."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 89
            },
            "signature": [
              "LicenseCheckState"
            ]
          },
          {
            "tags": [],
            "id": "def-server.LicenseCheck.message",
            "type": "string",
            "label": "message",
            "description": [
              "\nA message containing the reason for a license type not being valid."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 93
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 85
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LicenseFeature",
        "type": "Interface",
        "label": "LicenseFeature",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.LicenseFeature.isAvailable",
            "type": "boolean",
            "label": "isAvailable",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 27
            }
          },
          {
            "tags": [],
            "id": "def-server.LicenseFeature.isEnabled",
            "type": "boolean",
            "label": "isEnabled",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 28
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 26
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.LicensingApiRequestHandlerContext",
        "type": "Interface",
        "label": "LicensingApiRequestHandlerContext",
        "description": [
          "\nThe APIs exposed on the `licensing` key of {@link RequestHandlerContext} for plugins that depend on licensing."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.LicensingApiRequestHandlerContext.featureUsage",
            "type": "Object",
            "label": "featureUsage",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/server/types.ts",
              "lineNumber": 50
            },
            "signature": [
              {
                "pluginId": "licensing",
                "scope": "server",
                "docId": "kibLicensingPluginApi",
                "section": "def-server.FeatureUsageServiceStart",
                "text": "FeatureUsageServiceStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-server.LicensingApiRequestHandlerContext.license",
            "type": "Object",
            "label": "license",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/server/types.ts",
              "lineNumber": 51
            },
            "signature": [
              "ILicense"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/server/types.ts",
          "lineNumber": 49
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.PublicLicense",
        "type": "Interface",
        "label": "PublicLicense",
        "description": [
          "\nSubset of license data considered as non-sensitive information.\nCan be passed to the client."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.PublicLicense.uid",
            "type": "string",
            "label": "uid",
            "description": [
              "\nUID for license."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 40
            }
          },
          {
            "tags": [],
            "id": "def-server.PublicLicense.status",
            "type": "CompoundType",
            "label": "status",
            "description": [
              "\nThe validity status of the license."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 45
            },
            "signature": [
              "LicenseStatus"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PublicLicense.expiryDateInMillis",
            "type": "number",
            "label": "expiryDateInMillis",
            "description": [
              "\nUnix epoch of the expiration date of the license."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 50
            }
          },
          {
            "tags": [],
            "id": "def-server.PublicLicense.type",
            "type": "CompoundType",
            "label": "type",
            "description": [
              "\nThe license type, being usually one of basic, standard, gold, platinum, or trial."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 55
            },
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
            ]
          },
          {
            "tags": [
              "deprecated"
            ],
            "id": "def-server.PublicLicense.mode",
            "type": "CompoundType",
            "label": "mode",
            "description": [
              "\nThe license type, being usually one of basic, standard, gold, platinum, or trial."
            ],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 60
            },
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 36
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.PublicLicenseJSON",
        "type": "Interface",
        "label": "PublicLicenseJSON",
        "description": [
          "\nSubset of license & features data considered as non-sensitive information.\nStructured as json to be passed to the client."
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.PublicLicenseJSON.license",
            "type": "Object",
            "label": "license",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 75
            },
            "signature": [
              "PublicLicense",
              " | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PublicLicenseJSON.features",
            "type": "Object",
            "label": "features",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 76
            },
            "signature": [
              "Record<string, ",
              "LicenseFeature",
              "> | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-server.PublicLicenseJSON.signature",
            "type": "string",
            "label": "signature",
            "description": [],
            "source": {
              "path": "x-pack/plugins/licensing/common/types.ts",
              "lineNumber": 77
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 74
        },
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "id": "def-server.LICENSE_TYPE",
        "type": "Enum",
        "label": "LICENSE_TYPE",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 10
        },
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "id": "def-server.CheckLicense",
        "type": "Type",
        "label": "CheckLicense",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/licensing/server/wrap_route_with_license_check.ts",
          "lineNumber": 13
        },
        "signature": [
          "(license: ",
          "ILicense",
          ") => { valid: false; message: string; } | { valid: true; message: null; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.LicenseCheckState",
        "type": "Type",
        "label": "LicenseCheckState",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 8
        },
        "signature": [
          "\"valid\" | \"unavailable\" | \"invalid\" | \"expired\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.LicenseStatus",
        "type": "Type",
        "label": "LicenseStatus",
        "tags": [
          "public"
        ],
        "description": [],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 23
        },
        "signature": [
          "\"active\" | \"invalid\" | \"expired\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.LicenseType",
        "type": "Type",
        "label": "LicenseType",
        "tags": [
          "public"
        ],
        "description": [],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 20
        },
        "signature": [
          "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.PublicFeatures",
        "type": "Type",
        "label": "PublicFeatures",
        "tags": [
          "public"
        ],
        "description": [
          "\nProvides information about feature availability for the current license."
        ],
        "source": {
          "path": "x-pack/plugins/licensing/common/types.ts",
          "lineNumber": 67
        },
        "signature": [
          "{ [x: string]: LicenseFeature; }"
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "id": "def-server.LicensingPluginSetup",
      "type": "Interface",
      "label": "LicensingPluginSetup",
      "description": [],
      "tags": [
        "public"
      ],
      "children": [
        {
          "tags": [
            "deprecated"
          ],
          "id": "def-server.LicensingPluginSetup.license$",
          "type": "Object",
          "label": "license$",
          "description": [
            "\nSteam of licensing information {@link ILicense}."
          ],
          "source": {
            "path": "x-pack/plugins/licensing/server/types.ts",
            "lineNumber": 72
          },
          "signature": [
            "Observable",
            "<",
            "ILicense",
            ">"
          ]
        },
        {
          "id": "def-server.LicensingPluginSetup.refresh",
          "type": "Function",
          "label": "refresh",
          "signature": [
            "() => Promise<",
            "ILicense",
            ">"
          ],
          "description": [
            "\nTriggers licensing information re-fetch."
          ],
          "children": [],
          "tags": [
            "deprecated"
          ],
          "returnComment": [],
          "source": {
            "path": "x-pack/plugins/licensing/server/types.ts",
            "lineNumber": 77
          }
        },
        {
          "tags": [
            "deprecated"
          ],
          "id": "def-server.LicensingPluginSetup.createLicensePoller",
          "type": "Function",
          "label": "createLicensePoller",
          "description": [
            "\nCreates a license poller to retrieve a license data with.\nAllows a plugin to configure a cluster to retrieve data from at\ngiven polling frequency."
          ],
          "source": {
            "path": "x-pack/plugins/licensing/server/types.ts",
            "lineNumber": 84
          },
          "signature": [
            "(clusterClient: Pick<",
            {
              "pluginId": "core",
              "scope": "server",
              "docId": "kibCorePluginApi",
              "section": "def-server.LegacyClusterClient",
              "text": "LegacyClusterClient"
            },
            ", \"callAsInternalUser\" | \"asScoped\">, pollingFrequency: number) => { license$: ",
            "Observable",
            "<",
            "ILicense",
            ">; refresh(): Promise<",
            "ILicense",
            ">; }"
          ]
        },
        {
          "tags": [],
          "id": "def-server.LicensingPluginSetup.featureUsage",
          "type": "Object",
          "label": "featureUsage",
          "description": [
            "\nAPIs to register licensed feature usage."
          ],
          "source": {
            "path": "x-pack/plugins/licensing/server/types.ts",
            "lineNumber": 91
          },
          "signature": [
            {
              "pluginId": "licensing",
              "scope": "server",
              "docId": "kibLicensingPluginApi",
              "section": "def-server.FeatureUsageServiceSetup",
              "text": "FeatureUsageServiceSetup"
            }
          ]
        }
      ],
      "source": {
        "path": "x-pack/plugins/licensing/server/types.ts",
        "lineNumber": 67
      },
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "id": "def-server.LicensingPluginStart",
      "type": "Interface",
      "label": "LicensingPluginStart",
      "description": [],
      "tags": [
        "public"
      ],
      "children": [
        {
          "tags": [],
          "id": "def-server.LicensingPluginStart.license$",
          "type": "Object",
          "label": "license$",
          "description": [
            "\nSteam of licensing information {@link ILicense}."
          ],
          "source": {
            "path": "x-pack/plugins/licensing/server/types.ts",
            "lineNumber": 99
          },
          "signature": [
            "Observable",
            "<",
            "ILicense",
            ">"
          ]
        },
        {
          "id": "def-server.LicensingPluginStart.refresh",
          "type": "Function",
          "label": "refresh",
          "signature": [
            "() => Promise<",
            "ILicense",
            ">"
          ],
          "description": [
            "\nTriggers licensing information re-fetch."
          ],
          "children": [],
          "tags": [],
          "returnComment": [],
          "source": {
            "path": "x-pack/plugins/licensing/server/types.ts",
            "lineNumber": 103
          }
        },
        {
          "tags": [],
          "id": "def-server.LicensingPluginStart.createLicensePoller",
          "type": "Function",
          "label": "createLicensePoller",
          "description": [
            "\nCreates a license poller to retrieve a license data with.\nAllows a plugin to configure a cluster to retrieve data from at\ngiven polling frequency."
          ],
          "source": {
            "path": "x-pack/plugins/licensing/server/types.ts",
            "lineNumber": 109
          },
          "signature": [
            "(clusterClient: Pick<",
            {
              "pluginId": "core",
              "scope": "server",
              "docId": "kibCorePluginApi",
              "section": "def-server.LegacyClusterClient",
              "text": "LegacyClusterClient"
            },
            ", \"callAsInternalUser\" | \"asScoped\">, pollingFrequency: number) => { license$: ",
            "Observable",
            "<",
            "ILicense",
            ">; refresh(): Promise<",
            "ILicense",
            ">; }"
          ]
        },
        {
          "tags": [],
          "id": "def-server.LicensingPluginStart.featureUsage",
          "type": "Object",
          "label": "featureUsage",
          "description": [
            "\nAPIs to manage licensed feature usage."
          ],
          "source": {
            "path": "x-pack/plugins/licensing/server/types.ts",
            "lineNumber": 116
          },
          "signature": [
            {
              "pluginId": "licensing",
              "scope": "server",
              "docId": "kibLicensingPluginApi",
              "section": "def-server.FeatureUsageServiceStart",
              "text": "FeatureUsageServiceStart"
            }
          ]
        }
      ],
      "source": {
        "path": "x-pack/plugins/licensing/server/types.ts",
        "lineNumber": 95
      },
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}