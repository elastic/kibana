{
  "id": "kibanaLegacy",
  "client": {
    "classes": [
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.KibanaLegacyPlugin",
        "type": "Class",
        "tags": [],
        "label": "KibanaLegacyPlugin",
        "description": [],
        "path": "src/plugins/kibana_legacy/public/plugin.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.KibanaLegacyPlugin.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/kibana_legacy/public/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.KibanaLegacyPlugin.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "initializerContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<Readonly<{} & { defaultAppId: string; }>>"
                ],
                "path": "src/plugins/kibana_legacy/public/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.KibanaLegacyPlugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreSetup",
                "text": "CoreSetup"
              },
              "<{}, { dashboardConfig: ",
              "DashboardConfig",
              "; loadFontAwesome: () => Promise<void>; loadAngularBootstrap: () => Promise<void>; config: Readonly<{} & { defaultAppId: string; }>; }>) => {}"
            ],
            "path": "src/plugins/kibana_legacy/public/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.KibanaLegacyPlugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<{}, { dashboardConfig: ",
                  "DashboardConfig",
                  "; loadFontAwesome: () => Promise<void>; loadAngularBootstrap: () => Promise<void>; config: Readonly<{} & { defaultAppId: string; }>; }>"
                ],
                "path": "src/plugins/kibana_legacy/public/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.KibanaLegacyPlugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "({ application, http: { basePath }, uiSettings }: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreStart",
                "text": "CoreStart"
              },
              ") => { dashboardConfig: ",
              "DashboardConfig",
              "; loadFontAwesome: () => Promise<void>; loadAngularBootstrap: () => Promise<void>; config: Readonly<{} & { defaultAppId: string; }>; }"
            ],
            "path": "src/plugins/kibana_legacy/public/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.KibanaLegacyPlugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "{ application, http: { basePath }, uiSettings }",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "src/plugins/kibana_legacy/public/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.$setupXsrfRequestInterceptor",
        "type": "Function",
        "tags": [],
        "label": "$setupXsrfRequestInterceptor",
        "description": [],
        "signature": [
          "(version: string) => ($httpProvider: angular.IHttpProvider) => void"
        ],
        "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.$setupXsrfRequestInterceptor.$1",
            "type": "string",
            "tags": [],
            "label": "version",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.addFatalError",
        "type": "Function",
        "tags": [],
        "label": "addFatalError",
        "description": [],
        "signature": [
          "(fatalErrors: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.FatalErrorsSetup",
            "text": "FatalErrorsSetup"
          },
          ", error: string | Error | ",
          {
            "pluginId": "kibanaLegacy",
            "scope": "public",
            "docId": "kibKibanaLegacyPluginApi",
            "section": "def-public.AngularHttpError",
            "text": "AngularHttpError"
          },
          ", location: string | undefined) => void"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/add_fatal_error.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.addFatalError.$1",
            "type": "Object",
            "tags": [],
            "label": "fatalErrors",
            "description": [],
            "signature": [
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.FatalErrorsSetup",
                "text": "FatalErrorsSetup"
              }
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/add_fatal_error.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.addFatalError.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "error",
            "description": [],
            "signature": [
              "string | Error | ",
              {
                "pluginId": "kibanaLegacy",
                "scope": "public",
                "docId": "kibKibanaLegacyPluginApi",
                "section": "def-public.AngularHttpError",
                "text": "AngularHttpError"
              }
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/add_fatal_error.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.addFatalError.$3",
            "type": "string",
            "tags": [],
            "label": "location",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/add_fatal_error.ts",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.configureAppAngularModule",
        "type": "Function",
        "tags": [],
        "label": "configureAppAngularModule",
        "description": [],
        "signature": [
          "(angularModule: angular.IModule, newPlatform: { core: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          "; readonly env: { mode: Readonly<",
          "EnvironmentMode",
          ">; packageInfo: Readonly<",
          "PackageInfo",
          ">; }; }, isLocalAngular: boolean, getHistory?: (() => ",
          "History",
          "<any>) | undefined) => void"
        ],
        "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.configureAppAngularModule.$1",
            "type": "Object",
            "tags": [],
            "label": "angularModule",
            "description": [],
            "signature": [
              "angular.IModule"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.configureAppAngularModule.$2.newPlatform",
            "type": "Object",
            "tags": [],
            "label": "newPlatform",
            "description": [],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.configureAppAngularModule.$2.newPlatform.core",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
                "deprecated": false
              },
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.configureAppAngularModule.$2.newPlatform.env",
                "type": "Object",
                "tags": [],
                "label": "env",
                "description": [],
                "signature": [
                  "{ mode: Readonly<",
                  "EnvironmentMode",
                  ">; packageInfo: Readonly<",
                  "PackageInfo",
                  ">; }"
                ],
                "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.configureAppAngularModule.$3",
            "type": "boolean",
            "tags": [],
            "label": "isLocalAngular",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.configureAppAngularModule.$4",
            "type": "Function",
            "tags": [],
            "label": "getHistory",
            "description": [],
            "signature": [
              "(() => ",
              "History",
              "<any>) | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.createTopNavHelper",
        "type": "Function",
        "tags": [],
        "label": "createTopNavHelper",
        "description": [],
        "signature": [
          "(options: unknown) => angular.Injectable<angular.IDirectiveFactory<angular.IScope, JQLite, angular.IAttributes, angular.IController>>"
        ],
        "path": "src/plugins/kibana_legacy/public/angular/kbn_top_nav.d.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.options",
            "type": "Unknown",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/kbn_top_nav.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.formatAngularHttpError",
        "type": "Function",
        "tags": [],
        "label": "formatAngularHttpError",
        "description": [],
        "signature": [
          "(error: ",
          {
            "pluginId": "kibanaLegacy",
            "scope": "public",
            "docId": "kibKibanaLegacyPluginApi",
            "section": "def-public.AngularHttpError",
            "text": "AngularHttpError"
          },
          ") => string"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_angular_http_error.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.formatAngularHttpError.$1",
            "type": "Object",
            "tags": [],
            "label": "error",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaLegacy",
                "scope": "public",
                "docId": "kibKibanaLegacyPluginApi",
                "section": "def-public.AngularHttpError",
                "text": "AngularHttpError"
              }
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_angular_http_error.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.formatESMsg",
        "type": "Function",
        "tags": [],
        "label": "formatESMsg",
        "description": [
          "\nUtilize the extended error information returned from elasticsearch"
        ],
        "signature": [
          "(err: string | Record<string, any>) => string | undefined"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_es_msg.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.formatESMsg.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "err",
            "description": [],
            "signature": [
              "string | Record<string, any>"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_es_msg.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.formatMsg",
        "type": "Function",
        "tags": [],
        "label": "formatMsg",
        "description": [
          "\nFormats the error message from an error object, extended elasticsearch\nobject or simple string; prepends optional second parameter to the message"
        ],
        "signature": [
          "(err: string | Record<string, any>, source: string) => string"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_msg.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.formatMsg.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "err",
            "description": [],
            "signature": [
              "string | Record<string, any>"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_msg.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.formatMsg.$2",
            "type": "string",
            "tags": [],
            "label": "source",
            "description": [
              "- Prefix for message indicating source (optional)"
            ],
            "signature": [
              "string"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_msg.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.formatStack",
        "type": "Function",
        "tags": [],
        "label": "formatStack",
        "description": [],
        "signature": [
          "(err: Record<string, any>) => any"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_stack.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.formatStack.$1",
            "type": "Object",
            "tags": [],
            "label": "err",
            "description": [],
            "signature": [
              "Record<string, any>"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_stack.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.isAngularHttpError",
        "type": "Function",
        "tags": [],
        "label": "isAngularHttpError",
        "description": [],
        "signature": [
          "(error: any) => boolean"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_angular_http_error.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.isAngularHttpError.$1",
            "type": "Any",
            "tags": [],
            "label": "error",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_angular_http_error.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.loadKbnTopNavDirectives",
        "type": "Function",
        "tags": [],
        "label": "loadKbnTopNavDirectives",
        "description": [],
        "signature": [
          "(navUi: unknown) => void"
        ],
        "path": "src/plugins/kibana_legacy/public/angular/kbn_top_nav.d.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.loadKbnTopNavDirectives.$1",
            "type": "Unknown",
            "tags": [],
            "label": "navUi",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/kbn_top_nav.d.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.PaginateControlsDirectiveProvider",
        "type": "Function",
        "tags": [],
        "label": "PaginateControlsDirectiveProvider",
        "description": [],
        "signature": [
          "() => any"
        ],
        "path": "src/plugins/kibana_legacy/public/paginate/paginate.d.ts",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.PaginateDirectiveProvider",
        "type": "Function",
        "tags": [],
        "label": "PaginateDirectiveProvider",
        "description": [],
        "signature": [
          "($parse: any, $compile: any) => any"
        ],
        "path": "src/plugins/kibana_legacy/public/paginate/paginate.d.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.PaginateDirectiveProvider.$1",
            "type": "Any",
            "tags": [],
            "label": "$parse",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/kibana_legacy/public/paginate/paginate.d.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.PaginateDirectiveProvider.$2",
            "type": "Any",
            "tags": [],
            "label": "$compile",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/kibana_legacy/public/paginate/paginate.d.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.PrivateProvider",
        "type": "Function",
        "tags": [],
        "label": "PrivateProvider",
        "description": [],
        "signature": [
          "() => angular.IServiceProvider"
        ],
        "path": "src/plugins/kibana_legacy/public/utils/private.d.ts",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.registerListenEventListener",
        "type": "Function",
        "tags": [],
        "label": "registerListenEventListener",
        "description": [],
        "signature": [
          "($rootScope: unknown) => void"
        ],
        "path": "src/plugins/kibana_legacy/public/utils/register_listen_event_listener.d.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.registerListenEventListener.$1",
            "type": "Unknown",
            "tags": [],
            "label": "$rootScope",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/kibana_legacy/public/utils/register_listen_event_listener.d.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.subscribeWithScope",
        "type": "Function",
        "tags": [],
        "label": "subscribeWithScope",
        "description": [
          "\nSubscribe to an observable at a $scope, ensuring that the digest cycle\nis run for subscriber hooks and routing errors to fatalError if not handled."
        ],
        "signature": [
          "($scope: angular.IScope, observable: ",
          "Observable",
          "<T>, observer: ",
          "NextObserver",
          "<T> | ",
          "ErrorObserver",
          "<T> | ",
          "CompletionObserver",
          "<T> | undefined, fatalError: FatalErrorFn | undefined) => ",
          "Subscription"
        ],
        "path": "src/plugins/kibana_legacy/public/angular/subscribe_with_scope.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.subscribeWithScope.$1",
            "type": "Object",
            "tags": [],
            "label": "$scope",
            "description": [],
            "signature": [
              "angular.IScope"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/subscribe_with_scope.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.subscribeWithScope.$2",
            "type": "Object",
            "tags": [],
            "label": "observable",
            "description": [],
            "signature": [
              "Observable",
              "<T>"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/subscribe_with_scope.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.subscribeWithScope.$3",
            "type": "CompoundType",
            "tags": [],
            "label": "observer",
            "description": [],
            "signature": [
              "NextObserver",
              "<T> | ",
              "ErrorObserver",
              "<T> | ",
              "CompletionObserver",
              "<T> | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/subscribe_with_scope.ts",
            "deprecated": false,
            "isRequired": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.subscribeWithScope.$4",
            "type": "Function",
            "tags": [],
            "label": "fatalError",
            "description": [],
            "signature": [
              "FatalErrorFn | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/subscribe_with_scope.ts",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.watchMultiDecorator",
        "type": "Function",
        "tags": [],
        "label": "watchMultiDecorator",
        "description": [],
        "signature": [
          "($provide: unknown) => void"
        ],
        "path": "src/plugins/kibana_legacy/public/angular/watch_multi.d.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.watchMultiDecorator.$1",
            "type": "Unknown",
            "tags": [],
            "label": "$provide",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/watch_multi.d.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.RouteConfiguration",
        "type": "Interface",
        "tags": [],
        "label": "RouteConfiguration",
        "description": [],
        "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.controller",
            "type": "CompoundType",
            "tags": [],
            "label": "controller",
            "description": [],
            "signature": [
              "string | ((...args: any[]) => void) | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.redirectTo",
            "type": "string",
            "tags": [],
            "label": "redirectTo",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.resolveRedirectTo",
            "type": "Function",
            "tags": [],
            "label": "resolveRedirectTo",
            "description": [],
            "signature": [
              "((...args: any[]) => void) | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.reloadOnSearch",
            "type": "CompoundType",
            "tags": [],
            "label": "reloadOnSearch",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.reloadOnUrl",
            "type": "CompoundType",
            "tags": [],
            "label": "reloadOnUrl",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.outerAngularWrapperRoute",
            "type": "CompoundType",
            "tags": [],
            "label": "outerAngularWrapperRoute",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.resolve",
            "type": "Uncategorized",
            "tags": [],
            "label": "resolve",
            "description": [],
            "signature": [
              "object | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.template",
            "type": "string",
            "tags": [],
            "label": "template",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.k7Breadcrumbs",
            "type": "Function",
            "tags": [],
            "label": "k7Breadcrumbs",
            "description": [],
            "signature": [
              "((...args: any[]) => ",
              "EuiBreadcrumb",
              "[]) | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.requireUICapability",
            "type": "string",
            "tags": [],
            "label": "requireUICapability",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.AngularHttpError",
        "type": "Type",
        "tags": [],
        "label": "AngularHttpError",
        "description": [],
        "signature": [
          "angular.IHttpResponse<{ message: string; }>"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_angular_http_error.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.createTopNavDirective",
        "type": "CompoundType",
        "tags": [],
        "label": "createTopNavDirective",
        "description": [],
        "signature": [
          "angular.IDirectiveFactory<angular.IScope, JQLite, angular.IAttributes, angular.IController> | (string | angular.IDirectiveFactory<angular.IScope, JQLite, angular.IAttributes, angular.IController>)[]"
        ],
        "path": "src/plugins/kibana_legacy/public/angular/kbn_top_nav.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.IPrivate",
        "type": "Type",
        "tags": [],
        "label": "IPrivate",
        "description": [],
        "signature": [
          "<T>(provider: (...injectable: any[]) => T) => T"
        ],
        "path": "src/plugins/kibana_legacy/public/utils/private.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.KbnAccessibleClickProvider",
        "type": "CompoundType",
        "tags": [],
        "label": "KbnAccessibleClickProvider",
        "description": [],
        "signature": [
          "angular.IDirectiveFactory<angular.IScope, JQLite, angular.IAttributes, angular.IController> | (string | angular.IDirectiveFactory<angular.IScope, JQLite, angular.IAttributes, angular.IController>)[]"
        ],
        "path": "src/plugins/kibana_legacy/public/utils/kbn_accessible_click.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.KibanaLegacySetup",
        "type": "Type",
        "tags": [],
        "label": "KibanaLegacySetup",
        "description": [],
        "signature": [
          "{}"
        ],
        "path": "src/plugins/kibana_legacy/public/plugin.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.KibanaLegacyStart",
        "type": "Type",
        "tags": [],
        "label": "KibanaLegacyStart",
        "description": [],
        "signature": [
          "{ dashboardConfig: ",
          "DashboardConfig",
          "; loadFontAwesome: () => Promise<void>; loadAngularBootstrap: () => Promise<void>; config: Readonly<{} & { defaultAppId: string; }>; }"
        ],
        "path": "src/plugins/kibana_legacy/public/plugin.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}