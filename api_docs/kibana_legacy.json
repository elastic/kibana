{
  "id": "kibanaLegacy",
  "client": {
    "classes": [
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.KibanaLegacyPlugin",
        "type": "Class",
        "tags": [],
        "label": "KibanaLegacyPlugin",
        "description": [],
        "path": "src/plugins/kibana_legacy/public/plugin.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.KibanaLegacyPlugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreSetup",
                "text": "CoreSetup"
              },
              "<{}, { loadFontAwesome: () => Promise<void>; }>) => {}"
            ],
            "path": "src/plugins/kibana_legacy/public/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.KibanaLegacyPlugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<{}, { loadFontAwesome: () => Promise<void>; }>"
                ],
                "path": "src/plugins/kibana_legacy/public/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.KibanaLegacyPlugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "({ uiSettings }: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreStart",
                "text": "CoreStart"
              },
              ") => { loadFontAwesome: () => Promise<void>; }"
            ],
            "path": "src/plugins/kibana_legacy/public/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.KibanaLegacyPlugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "{ uiSettings }",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "src/plugins/kibana_legacy/public/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.$setupXsrfRequestInterceptor",
        "type": "Function",
        "tags": [],
        "label": "$setupXsrfRequestInterceptor",
        "description": [],
        "signature": [
          "(version: string) => ($httpProvider: angular.IHttpProvider) => void"
        ],
        "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.$setupXsrfRequestInterceptor.$1",
            "type": "string",
            "tags": [],
            "label": "version",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.configureAppAngularModule",
        "type": "Function",
        "tags": [],
        "label": "configureAppAngularModule",
        "description": [],
        "signature": [
          "(angularModule: angular.IModule, newPlatform: { core: ",
          {
            "pluginId": "core",
            "scope": "public",
            "docId": "kibCorePluginApi",
            "section": "def-public.CoreStart",
            "text": "CoreStart"
          },
          "; readonly env: { mode: Readonly<",
          {
            "pluginId": "@kbn/config",
            "scope": "server",
            "docId": "kibKbnConfigPluginApi",
            "section": "def-server.EnvironmentMode",
            "text": "EnvironmentMode"
          },
          ">; packageInfo: Readonly<",
          {
            "pluginId": "@kbn/config",
            "scope": "server",
            "docId": "kibKbnConfigPluginApi",
            "section": "def-server.PackageInfo",
            "text": "PackageInfo"
          },
          ">; }; }, isLocalAngular: boolean, getHistory?: (() => ",
          "History",
          "<any>) | undefined) => void"
        ],
        "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.configureAppAngularModule.$1",
            "type": "Object",
            "tags": [],
            "label": "angularModule",
            "description": [],
            "signature": [
              "angular.IModule"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.configureAppAngularModule.$2",
            "type": "Object",
            "tags": [],
            "label": "newPlatform",
            "description": [],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.configureAppAngularModule.$2.core",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
                "deprecated": false
              },
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.configureAppAngularModule.$2.env",
                "type": "Object",
                "tags": [],
                "label": "env",
                "description": [],
                "signature": [
                  "{ mode: Readonly<",
                  {
                    "pluginId": "@kbn/config",
                    "scope": "server",
                    "docId": "kibKbnConfigPluginApi",
                    "section": "def-server.EnvironmentMode",
                    "text": "EnvironmentMode"
                  },
                  ">; packageInfo: Readonly<",
                  {
                    "pluginId": "@kbn/config",
                    "scope": "server",
                    "docId": "kibKbnConfigPluginApi",
                    "section": "def-server.PackageInfo",
                    "text": "PackageInfo"
                  },
                  ">; }"
                ],
                "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.configureAppAngularModule.$3",
            "type": "boolean",
            "tags": [],
            "label": "isLocalAngular",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.configureAppAngularModule.$4",
            "type": "Function",
            "tags": [],
            "label": "getHistory",
            "description": [],
            "signature": [
              "(() => ",
              "History",
              "<any>) | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.createTopNavHelper",
        "type": "Function",
        "tags": [],
        "label": "createTopNavHelper",
        "description": [],
        "signature": [
          "(options: unknown) => angular.Injectable<angular.IDirectiveFactory<angular.IScope, JQLite, angular.IAttributes, angular.IController>>"
        ],
        "path": "src/plugins/kibana_legacy/public/angular/kbn_top_nav.d.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.createTopNavHelper.$1",
            "type": "Unknown",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/kbn_top_nav.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.formatAngularHttpError",
        "type": "Function",
        "tags": [],
        "label": "formatAngularHttpError",
        "description": [],
        "signature": [
          "(error: ",
          {
            "pluginId": "kibanaLegacy",
            "scope": "public",
            "docId": "kibKibanaLegacyPluginApi",
            "section": "def-public.AngularHttpError",
            "text": "AngularHttpError"
          },
          ") => string"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_angular_http_error.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.formatAngularHttpError.$1",
            "type": "Object",
            "tags": [],
            "label": "error",
            "description": [],
            "signature": [
              {
                "pluginId": "kibanaLegacy",
                "scope": "public",
                "docId": "kibKibanaLegacyPluginApi",
                "section": "def-public.AngularHttpError",
                "text": "AngularHttpError"
              }
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_angular_http_error.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.formatESMsg",
        "type": "Function",
        "tags": [],
        "label": "formatESMsg",
        "description": [
          "\nUtilize the extended error information returned from elasticsearch"
        ],
        "signature": [
          "(err: string | Record<string, any>) => string | undefined"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_es_msg.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.formatESMsg.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "err",
            "description": [],
            "signature": [
              "string | Record<string, any>"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_es_msg.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.formatMsg",
        "type": "Function",
        "tags": [],
        "label": "formatMsg",
        "description": [
          "\nFormats the error message from an error object, extended elasticsearch\nobject or simple string; prepends optional second parameter to the message"
        ],
        "signature": [
          "(err: string | Record<string, any>, source: string) => string"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_msg.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.formatMsg.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "err",
            "description": [],
            "signature": [
              "string | Record<string, any>"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_msg.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.formatMsg.$2",
            "type": "string",
            "tags": [],
            "label": "source",
            "description": [
              "- Prefix for message indicating source (optional)"
            ],
            "signature": [
              "string"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_msg.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.isAngularHttpError",
        "type": "Function",
        "tags": [],
        "label": "isAngularHttpError",
        "description": [],
        "signature": [
          "(error: any) => boolean"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_angular_http_error.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.isAngularHttpError.$1",
            "type": "Any",
            "tags": [],
            "label": "error",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_angular_http_error.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.loadKbnTopNavDirectives",
        "type": "Function",
        "tags": [],
        "label": "loadKbnTopNavDirectives",
        "description": [],
        "signature": [
          "(navUi: unknown) => void"
        ],
        "path": "src/plugins/kibana_legacy/public/angular/kbn_top_nav.d.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.loadKbnTopNavDirectives.$1",
            "type": "Unknown",
            "tags": [],
            "label": "navUi",
            "description": [],
            "signature": [
              "unknown"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/kbn_top_nav.d.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.PrivateProvider",
        "type": "Function",
        "tags": [],
        "label": "PrivateProvider",
        "description": [],
        "signature": [
          "() => angular.IServiceProvider"
        ],
        "path": "src/plugins/kibana_legacy/public/utils/private.d.ts",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.RouteConfiguration",
        "type": "Interface",
        "tags": [],
        "label": "RouteConfiguration",
        "description": [],
        "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.controller",
            "type": "CompoundType",
            "tags": [],
            "label": "controller",
            "description": [],
            "signature": [
              "string | ((...args: any[]) => void) | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.redirectTo",
            "type": "string",
            "tags": [],
            "label": "redirectTo",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.resolveRedirectTo",
            "type": "Function",
            "tags": [],
            "label": "resolveRedirectTo",
            "description": [],
            "signature": [
              "((...args: any[]) => void) | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.RouteConfiguration.resolveRedirectTo.$1",
                "type": "Array",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "any[]"
                ],
                "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.reloadOnSearch",
            "type": "CompoundType",
            "tags": [],
            "label": "reloadOnSearch",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.reloadOnUrl",
            "type": "CompoundType",
            "tags": [],
            "label": "reloadOnUrl",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.outerAngularWrapperRoute",
            "type": "CompoundType",
            "tags": [],
            "label": "outerAngularWrapperRoute",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.resolve",
            "type": "Uncategorized",
            "tags": [],
            "label": "resolve",
            "description": [],
            "signature": [
              "object | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.template",
            "type": "string",
            "tags": [],
            "label": "template",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.k7Breadcrumbs",
            "type": "Function",
            "tags": [],
            "label": "k7Breadcrumbs",
            "description": [],
            "signature": [
              "((...args: any[]) => ",
              "EuiBreadcrumb",
              "[]) | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.RouteConfiguration.k7Breadcrumbs.$1",
                "type": "Array",
                "tags": [],
                "label": "args",
                "description": [],
                "signature": [
                  "any[]"
                ],
                "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.RouteConfiguration.requireUICapability",
            "type": "string",
            "tags": [],
            "label": "requireUICapability",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/kibana_legacy/public/angular/angular_config.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.AngularHttpError",
        "type": "Type",
        "tags": [],
        "label": "AngularHttpError",
        "description": [],
        "signature": [
          "angular.IHttpResponse<{ message: string; }>"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_angular_http_error.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.createTopNavDirective",
        "type": "CompoundType",
        "tags": [],
        "label": "createTopNavDirective",
        "description": [],
        "signature": [
          "angular.IDirectiveFactory<angular.IScope, JQLite, angular.IAttributes, angular.IController> | (string | angular.IDirectiveFactory<angular.IScope, JQLite, angular.IAttributes, angular.IController>)[]"
        ],
        "path": "src/plugins/kibana_legacy/public/angular/kbn_top_nav.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.IPrivate",
        "type": "Type",
        "tags": [],
        "label": "IPrivate",
        "description": [],
        "signature": [
          "<T>(provider: (...injectable: any[]) => T) => T"
        ],
        "path": "src/plugins/kibana_legacy/public/utils/private.d.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.IPrivate.$1",
            "type": "Function",
            "tags": [],
            "label": "provider",
            "description": [],
            "signature": [
              "(...injectable: any[]) => T"
            ],
            "path": "src/plugins/kibana_legacy/public/utils/private.d.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.IPrivate.$1.$1",
                "type": "Array",
                "tags": [],
                "label": "injectable",
                "description": [],
                "signature": [
                  "any[]"
                ],
                "path": "src/plugins/kibana_legacy/public/utils/private.d.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.KibanaLegacySetup",
        "type": "Type",
        "tags": [],
        "label": "KibanaLegacySetup",
        "description": [],
        "signature": [
          "{}"
        ],
        "path": "src/plugins/kibana_legacy/public/plugin.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.KibanaLegacyStart",
        "type": "Type",
        "tags": [],
        "label": "KibanaLegacyStart",
        "description": [],
        "signature": [
          "{ loadFontAwesome: () => Promise<void>; }"
        ],
        "path": "src/plugins/kibana_legacy/public/plugin.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}