{
  "id": "kibanaLegacy",
  "client": {
    "classes": [
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.KibanaLegacyPlugin",
        "type": "Class",
        "tags": [],
        "label": "KibanaLegacyPlugin",
        "description": [],
        "path": "src/plugins/kibana_legacy/public/plugin.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.KibanaLegacyPlugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "public",
                "docId": "kibCorePluginApi",
                "section": "def-public.CoreSetup",
                "text": "CoreSetup"
              },
              "<{}, { loadFontAwesome: () => Promise<void>; }>) => {}"
            ],
            "path": "src/plugins/kibana_legacy/public/plugin.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "kibanaLegacy",
                "id": "def-public.KibanaLegacyPlugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "public",
                    "docId": "kibCorePluginApi",
                    "section": "def-public.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<{}, { loadFontAwesome: () => Promise<void>; }>"
                ],
                "path": "src/plugins/kibana_legacy/public/plugin.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.KibanaLegacyPlugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "() => { loadFontAwesome: () => Promise<void>; }"
            ],
            "path": "src/plugins/kibana_legacy/public/plugin.ts",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.formatESMsg",
        "type": "Function",
        "tags": [],
        "label": "formatESMsg",
        "description": [
          "\nUtilize the extended error information returned from elasticsearch"
        ],
        "signature": [
          "(err: string | Record<string, any>) => string | undefined"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_es_msg.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.formatESMsg.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "err",
            "description": [],
            "signature": [
              "string | Record<string, any>"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_es_msg.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.formatMsg",
        "type": "Function",
        "tags": [],
        "label": "formatMsg",
        "description": [
          "\nFormats the error message from an error object, extended elasticsearch\nobject or simple string; prepends optional second parameter to the message"
        ],
        "signature": [
          "(err: string | Record<string, any>, source: string) => string"
        ],
        "path": "src/plugins/kibana_legacy/public/notify/lib/format_msg.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.formatMsg.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "err",
            "description": [],
            "signature": [
              "string | Record<string, any>"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_msg.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "kibanaLegacy",
            "id": "def-public.formatMsg.$2",
            "type": "string",
            "tags": [],
            "label": "source",
            "description": [
              "- Prefix for message indicating source (optional)"
            ],
            "signature": [
              "string"
            ],
            "path": "src/plugins/kibana_legacy/public/notify/lib/format_msg.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.KibanaLegacySetup",
        "type": "Type",
        "tags": [],
        "label": "KibanaLegacySetup",
        "description": [],
        "signature": [
          "{}"
        ],
        "path": "src/plugins/kibana_legacy/public/plugin.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "kibanaLegacy",
        "id": "def-public.KibanaLegacyStart",
        "type": "Type",
        "tags": [],
        "label": "KibanaLegacyStart",
        "description": [],
        "signature": [
          "{ loadFontAwesome: () => Promise<void>; }"
        ],
        "path": "src/plugins/kibana_legacy/public/plugin.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}