{
  "id": "ruleRegistry",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.RuleDataClient",
        "type": "Class",
        "tags": [],
        "label": "RuleDataClient",
        "description": [],
        "signature": [
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.RuleDataClient",
            "text": "RuleDataClient"
          },
          " implements ",
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.IRuleDataClient",
            "text": "IRuleDataClient"
          }
        ],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/rule_data_client/index.ts",
          "lineNumber": 23
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.RuleDataClient.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/rule_data_client/index.ts",
              "lineNumber": 24
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "ruleRegistry",
                "id": "def-server.RuleDataClient.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "RuleDataClientConstructorOptions"
                ],
                "source": {
                  "path": "x-pack/plugins/rule_registry/server/rule_data_client/index.ts",
                  "lineNumber": 24
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.RuleDataClient.getReader",
            "type": "Function",
            "tags": [],
            "label": "getReader",
            "description": [],
            "signature": [
              "(options?: { namespace?: string | undefined; }) => ",
              "RuleDataReader"
            ],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/rule_data_client/index.ts",
              "lineNumber": 31
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "ruleRegistry",
                "id": "def-server.RuleDataClient.getReader.$1.options",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/rule_registry/server/rule_data_client/index.ts",
                  "lineNumber": 31
                },
                "deprecated": false,
                "children": [
                  {
                    "parentPluginId": "ruleRegistry",
                    "id": "def-server.RuleDataClient.getReader.$1.options.namespace",
                    "type": "string",
                    "tags": [],
                    "label": "namespace",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "source": {
                      "path": "x-pack/plugins/rule_registry/server/rule_data_client/index.ts",
                      "lineNumber": 31
                    },
                    "deprecated": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.RuleDataClient.getWriter",
            "type": "Function",
            "tags": [],
            "label": "getWriter",
            "description": [],
            "signature": [
              "(options?: { namespace?: string | undefined; }) => ",
              "RuleDataWriter"
            ],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/rule_data_client/index.ts",
              "lineNumber": 73
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "ruleRegistry",
                "id": "def-server.RuleDataClient.getWriter.$1.options",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/rule_registry/server/rule_data_client/index.ts",
                  "lineNumber": 73
                },
                "deprecated": false,
                "children": [
                  {
                    "parentPluginId": "ruleRegistry",
                    "id": "def-server.RuleDataClient.getWriter.$1.options.namespace",
                    "type": "string",
                    "tags": [],
                    "label": "namespace",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "source": {
                      "path": "x-pack/plugins/rule_registry/server/rule_data_client/index.ts",
                      "lineNumber": 73
                    },
                    "deprecated": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.RuleDataClient.createOrUpdateWriteTarget",
            "type": "Function",
            "tags": [],
            "label": "createOrUpdateWriteTarget",
            "description": [],
            "signature": [
              "({ namespace }: { namespace?: string | undefined; }) => Promise<void>"
            ],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/rule_data_client/index.ts",
              "lineNumber": 105
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "ruleRegistry",
                "id": "def-server.RuleDataClient.createOrUpdateWriteTarget.$1.namespace",
                "type": "Object",
                "tags": [],
                "label": "{ namespace }",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/rule_registry/server/rule_data_client/index.ts",
                  "lineNumber": 105
                },
                "deprecated": false,
                "children": [
                  {
                    "parentPluginId": "ruleRegistry",
                    "id": "def-server.RuleDataClient.createOrUpdateWriteTarget.$1.namespace.namespace",
                    "type": "string",
                    "tags": [],
                    "label": "namespace",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "source": {
                      "path": "x-pack/plugins/rule_registry/server/rule_data_client/index.ts",
                      "lineNumber": 105
                    },
                    "deprecated": false
                  }
                ]
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.createLifecycleRuleTypeFactory",
        "type": "Function",
        "tags": [],
        "label": "createLifecycleRuleTypeFactory",
        "description": [],
        "signature": [
          "({ logger, ruleDataClient, }: { logger: ",
          "Logger",
          "; ruleDataClient: ",
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.RuleDataClient",
            "text": "RuleDataClient"
          },
          "; }) => <Params extends Record<string, unknown> = never, State extends Record<string, unknown> = never, InstanceState extends { [x: string]: unknown; } = never, InstanceContext extends { [x: string]: unknown; } = never, ActionGroupIds extends string = never, RecoveryActionGroupId extends string = never>(type: ",
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.AlertTypeWithExecutor",
            "text": "AlertTypeWithExecutor"
          },
          "<Params, InstanceState, InstanceContext, ActionGroupIds, RecoveryActionGroupId, ",
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.ExecutorTypeWithExtraServices",
            "text": "ExecutorTypeWithExtraServices"
          },
          "<Params, State, InstanceState, InstanceContext, ActionGroupIds, ",
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.LifecycleAlertServices",
            "text": "LifecycleAlertServices"
          },
          "<InstanceState, InstanceContext, ActionGroupIds>>>) => ",
          {
            "pluginId": "alerting",
            "scope": "server",
            "docId": "kibAlertingPluginApi",
            "section": "def-server.AlertType",
            "text": "AlertType"
          },
          "<Params, ",
          "WrappedLifecycleRuleState",
          "<State>, InstanceState, InstanceContext, ActionGroupIds, RecoveryActionGroupId>"
        ],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/utils/create_lifecycle_rule_type_factory.ts",
          "lineNumber": 96
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.createLifecycleRuleTypeFactory.$1.loggerruleDataClient",
            "type": "Object",
            "tags": [],
            "label": "{\n  logger,\n  ruleDataClient,\n}",
            "description": [],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/utils/create_lifecycle_rule_type_factory.ts",
              "lineNumber": 99
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "ruleRegistry",
                "id": "def-server.createLifecycleRuleTypeFactory.$1.loggerruleDataClient.logger",
                "type": "Object",
                "tags": [],
                "label": "logger",
                "description": [],
                "signature": [
                  "Logger"
                ],
                "source": {
                  "path": "x-pack/plugins/rule_registry/server/utils/create_lifecycle_rule_type_factory.ts",
                  "lineNumber": 100
                },
                "deprecated": false
              },
              {
                "parentPluginId": "ruleRegistry",
                "id": "def-server.createLifecycleRuleTypeFactory.$1.loggerruleDataClient.ruleDataClient",
                "type": "Object",
                "tags": [],
                "label": "ruleDataClient",
                "description": [],
                "signature": [
                  {
                    "pluginId": "ruleRegistry",
                    "scope": "server",
                    "docId": "kibRuleRegistryPluginApi",
                    "section": "def-server.RuleDataClient",
                    "text": "RuleDataClient"
                  }
                ],
                "source": {
                  "path": "x-pack/plugins/rule_registry/server/utils/create_lifecycle_rule_type_factory.ts",
                  "lineNumber": 101
                },
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.createPersistenceRuleTypeFactory",
        "type": "Function",
        "tags": [],
        "label": "createPersistenceRuleTypeFactory",
        "description": [],
        "signature": [
          "({ logger, ruleDataClient, }: { ruleDataClient: ",
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.RuleDataClient",
            "text": "RuleDataClient"
          },
          "; logger: ",
          "Logger",
          "; }) => <Params extends Record<string, unknown> = never, State extends Record<string, unknown> = never, InstanceState extends { [x: string]: unknown; } = never, InstanceContext extends { [x: string]: unknown; } = never, ActionGroupIds extends string = never, RecoveryActionGroupId extends string = never>(type: ",
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.AlertTypeWithExecutor",
            "text": "AlertTypeWithExecutor"
          },
          "<Params, InstanceState, InstanceContext, ActionGroupIds, RecoveryActionGroupId, ",
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.ExecutorTypeWithExtraServices",
            "text": "ExecutorTypeWithExtraServices"
          },
          "<Params, State, InstanceState, InstanceContext, ActionGroupIds, ",
          "PersistenceAlertServices",
          "<InstanceContext>>>) => ",
          {
            "pluginId": "alerting",
            "scope": "server",
            "docId": "kibAlertingPluginApi",
            "section": "def-server.AlertType",
            "text": "AlertType"
          },
          "<Params, any, InstanceState, InstanceContext, ActionGroupIds, RecoveryActionGroupId>"
        ],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/utils/create_persistence_rule_type_factory.ts",
          "lineNumber": 33
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.createPersistenceRuleTypeFactory.$1.loggerruleDataClient",
            "type": "Object",
            "tags": [],
            "label": "{\n  logger,\n  ruleDataClient,\n}",
            "description": [],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/utils/create_persistence_rule_type_factory.ts",
              "lineNumber": 36
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "ruleRegistry",
                "id": "def-server.createPersistenceRuleTypeFactory.$1.loggerruleDataClient.ruleDataClient",
                "type": "Object",
                "tags": [],
                "label": "ruleDataClient",
                "description": [],
                "signature": [
                  {
                    "pluginId": "ruleRegistry",
                    "scope": "server",
                    "docId": "kibRuleRegistryPluginApi",
                    "section": "def-server.RuleDataClient",
                    "text": "RuleDataClient"
                  }
                ],
                "source": {
                  "path": "x-pack/plugins/rule_registry/server/utils/create_persistence_rule_type_factory.ts",
                  "lineNumber": 37
                },
                "deprecated": false
              },
              {
                "parentPluginId": "ruleRegistry",
                "id": "def-server.createPersistenceRuleTypeFactory.$1.loggerruleDataClient.logger",
                "type": "Object",
                "tags": [],
                "label": "logger",
                "description": [],
                "signature": [
                  "Logger"
                ],
                "source": {
                  "path": "x-pack/plugins/rule_registry/server/utils/create_persistence_rule_type_factory.ts",
                  "lineNumber": 38
                },
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.getRuleExecutorData",
        "type": "Function",
        "tags": [],
        "label": "getRuleExecutorData",
        "description": [],
        "signature": [
          "(type: ",
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.AlertTypeWithExecutor",
            "text": "AlertTypeWithExecutor"
          },
          "<any, any, any, any, any, any>, options: ",
          {
            "pluginId": "alerting",
            "scope": "server",
            "docId": "kibAlertingPluginApi",
            "section": "def-server.AlertExecutorOptions",
            "text": "AlertExecutorOptions"
          },
          "<any, any, any, any, any>) => { \"rule.id\": string; \"rule.uuid\": string; \"rule.category\": string; \"rule.name\": string; tags: string[]; \"kibana.rac.alert.producer\": string; }"
        ],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/utils/get_rule_executor_data.ts",
          "lineNumber": 28
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.getRuleExecutorData.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              {
                "pluginId": "ruleRegistry",
                "scope": "server",
                "docId": "kibRuleRegistryPluginApi",
                "section": "def-server.AlertTypeWithExecutor",
                "text": "AlertTypeWithExecutor"
              },
              "<any, any, any, any, any, any>"
            ],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/utils/get_rule_executor_data.ts",
              "lineNumber": 29
            },
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.getRuleExecutorData.$2",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              {
                "pluginId": "alerting",
                "scope": "server",
                "docId": "kibAlertingPluginApi",
                "section": "def-server.AlertExecutorOptions",
                "text": "AlertExecutorOptions"
              },
              "<any, any, any, any, any>"
            ],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/utils/get_rule_executor_data.ts",
              "lineNumber": 30
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.IRuleDataClient",
        "type": "Interface",
        "tags": [],
        "label": "IRuleDataClient",
        "description": [],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/rule_data_client/types.ts",
          "lineNumber": 34
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.IRuleDataClient.getReader",
            "type": "Function",
            "tags": [],
            "label": "getReader",
            "description": [],
            "signature": [
              "(options?: { namespace?: string | undefined; } | undefined) => ",
              "RuleDataReader"
            ],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/rule_data_client/types.ts",
              "lineNumber": 35
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "ruleRegistry",
                "id": "def-server.IRuleDataClient.getReader.$1.options",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/rule_registry/server/rule_data_client/types.ts",
                  "lineNumber": 35
                },
                "deprecated": false,
                "children": [
                  {
                    "parentPluginId": "ruleRegistry",
                    "id": "def-server.IRuleDataClient.getReader.$1.options.namespace",
                    "type": "string",
                    "tags": [],
                    "label": "namespace",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "source": {
                      "path": "x-pack/plugins/rule_registry/server/rule_data_client/types.ts",
                      "lineNumber": 35
                    },
                    "deprecated": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.IRuleDataClient.getWriter",
            "type": "Function",
            "tags": [],
            "label": "getWriter",
            "description": [],
            "signature": [
              "(options?: { namespace?: string | undefined; } | undefined) => ",
              "RuleDataWriter"
            ],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/rule_data_client/types.ts",
              "lineNumber": 36
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "ruleRegistry",
                "id": "def-server.IRuleDataClient.getWriter.$1.options",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/rule_registry/server/rule_data_client/types.ts",
                  "lineNumber": 36
                },
                "deprecated": false,
                "children": [
                  {
                    "parentPluginId": "ruleRegistry",
                    "id": "def-server.IRuleDataClient.getWriter.$1.options.namespace",
                    "type": "string",
                    "tags": [],
                    "label": "namespace",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "source": {
                      "path": "x-pack/plugins/rule_registry/server/rule_data_client/types.ts",
                      "lineNumber": 36
                    },
                    "deprecated": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.IRuleDataClient.createOrUpdateWriteTarget",
            "type": "Function",
            "tags": [],
            "label": "createOrUpdateWriteTarget",
            "description": [],
            "signature": [
              "(options: { namespace?: string | undefined; }) => Promise<void>"
            ],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/rule_data_client/types.ts",
              "lineNumber": 37
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "ruleRegistry",
                "id": "def-server.IRuleDataClient.createOrUpdateWriteTarget.$1.options",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/rule_registry/server/rule_data_client/types.ts",
                  "lineNumber": 37
                },
                "deprecated": false,
                "children": [
                  {
                    "parentPluginId": "ruleRegistry",
                    "id": "def-server.IRuleDataClient.createOrUpdateWriteTarget.$1.options.namespace",
                    "type": "string",
                    "tags": [],
                    "label": "namespace",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "source": {
                      "path": "x-pack/plugins/rule_registry/server/rule_data_client/types.ts",
                      "lineNumber": 37
                    },
                    "deprecated": false
                  }
                ]
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.LifecycleAlertServices",
        "type": "Interface",
        "tags": [],
        "label": "LifecycleAlertServices",
        "description": [],
        "signature": [
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.LifecycleAlertServices",
            "text": "LifecycleAlertServices"
          },
          "<InstanceState, InstanceContext, ActionGroupIds>"
        ],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/utils/create_lifecycle_rule_type_factory.ts",
          "lineNumber": 46
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.LifecycleAlertServices.alertWithLifecycle",
            "type": "Function",
            "tags": [],
            "label": "alertWithLifecycle",
            "description": [],
            "signature": [
              "(alert: { id: string; fields: Record<string, unknown>; }) => Pick<",
              "AlertInstance",
              "<InstanceState, InstanceContext, ActionGroupIds>, \"getState\" | \"replaceState\" | \"scheduleActions\" | \"scheduleActionsWithSubGroup\">"
            ],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/utils/create_lifecycle_rule_type_factory.ts",
              "lineNumber": 51
            },
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "ruleRegistry",
                "id": "def-server.alert",
                "type": "Object",
                "tags": [],
                "label": "alert",
                "description": [],
                "signature": [
                  "{ id: string; fields: Record<string, unknown>; }"
                ],
                "source": {
                  "path": "x-pack/plugins/rule_registry/server/utils/create_lifecycle_rule_type_factory.ts",
                  "lineNumber": 41
                },
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.RuleExecutorData",
        "type": "Interface",
        "tags": [],
        "label": "RuleExecutorData",
        "description": [],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/utils/get_rule_executor_data.ts",
          "lineNumber": 19
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.RuleExecutorData.RULE_CATEGORY",
            "type": "string",
            "tags": [],
            "label": "[RULE_CATEGORY]",
            "description": [],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/utils/get_rule_executor_data.ts",
              "lineNumber": 20
            },
            "deprecated": false
          },
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.RuleExecutorData.RULE_ID",
            "type": "string",
            "tags": [],
            "label": "[RULE_ID]",
            "description": [],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/utils/get_rule_executor_data.ts",
              "lineNumber": 21
            },
            "deprecated": false
          },
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.RuleExecutorData.RULE_UUID",
            "type": "string",
            "tags": [],
            "label": "[RULE_UUID]",
            "description": [],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/utils/get_rule_executor_data.ts",
              "lineNumber": 22
            },
            "deprecated": false
          },
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.RuleExecutorData.RULE_NAME",
            "type": "string",
            "tags": [],
            "label": "[RULE_NAME]",
            "description": [],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/utils/get_rule_executor_data.ts",
              "lineNumber": 23
            },
            "deprecated": false
          },
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.RuleExecutorData.PRODUCER",
            "type": "string",
            "tags": [],
            "label": "[PRODUCER]",
            "description": [],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/utils/get_rule_executor_data.ts",
              "lineNumber": 24
            },
            "deprecated": false
          },
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-server.RuleExecutorData.TAGS",
            "type": "Array",
            "tags": [],
            "label": "[TAGS]",
            "description": [],
            "signature": [
              "string[]"
            ],
            "source": {
              "path": "x-pack/plugins/rule_registry/server/utils/get_rule_executor_data.ts",
              "lineNumber": 25
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.AlertExecutorOptionsWithExtraServices",
        "type": "Type",
        "tags": [],
        "label": "AlertExecutorOptionsWithExtraServices",
        "description": [],
        "signature": [
          "Pick<",
          {
            "pluginId": "alerting",
            "scope": "server",
            "docId": "kibAlertingPluginApi",
            "section": "def-server.AlertExecutorOptions",
            "text": "AlertExecutorOptions"
          },
          "<Params, State, InstanceState, InstanceContext, ActionGroupIds>, \"name\" | \"params\" | \"tags\" | \"spaceId\" | \"rule\" | \"createdBy\" | \"updatedBy\" | \"previousStartedAt\" | \"state\" | \"alertId\" | \"namespace\" | \"startedAt\"> & { services: ",
          {
            "pluginId": "alerting",
            "scope": "server",
            "docId": "kibAlertingPluginApi",
            "section": "def-server.AlertServices",
            "text": "AlertServices"
          },
          "<InstanceState, InstanceContext, ActionGroupIds> & TExtraServices; }"
        ],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/types.ts",
          "lineNumber": 16
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.AlertTypeWithExecutor",
        "type": "Type",
        "tags": [],
        "label": "AlertTypeWithExecutor",
        "description": [],
        "signature": [
          "Pick<",
          {
            "pluginId": "alerting",
            "scope": "server",
            "docId": "kibAlertingPluginApi",
            "section": "def-server.AlertType",
            "text": "AlertType"
          },
          "<TParams, any, TInstanceState, TInstanceContext, TActionGroupIds, TRecoveryActionGroupId>, \"id\" | \"name\" | \"validate\" | \"actionGroups\" | \"defaultActionGroupId\" | \"recoveryActionGroup\" | \"producer\" | \"actionVariables\" | \"minimumLicenseRequired\"> & { executor: TExecutorType; }"
        ],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/types.ts",
          "lineNumber": 58
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.ExecutorType",
        "type": "Type",
        "tags": [],
        "label": "ExecutorType",
        "description": [],
        "signature": [
          "(options: ",
          {
            "pluginId": "alerting",
            "scope": "server",
            "docId": "kibAlertingPluginApi",
            "section": "def-server.AlertExecutorOptions",
            "text": "AlertExecutorOptions"
          },
          "<Params, State, InstanceState, InstanceContext, ActionGroupIds>) => Promise<void | State>"
        ],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/types.ts",
          "lineNumber": 30
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.ExecutorTypeWithExtraServices",
        "type": "Type",
        "tags": [],
        "label": "ExecutorTypeWithExtraServices",
        "description": [],
        "signature": [
          "(options: ",
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.AlertExecutorOptionsWithExtraServices",
            "text": "AlertExecutorOptionsWithExtraServices"
          },
          "<Params, State, InstanceState, InstanceContext, ActionGroupIds, ExtraServices>) => Promise<void | State>"
        ],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/types.ts",
          "lineNumber": 40
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.LifecycleRuleExecutor",
        "type": "Type",
        "tags": [],
        "label": "LifecycleRuleExecutor",
        "description": [],
        "signature": [
          "(options: ",
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.AlertExecutorOptionsWithExtraServices",
            "text": "AlertExecutorOptionsWithExtraServices"
          },
          "<Params, State, InstanceState, InstanceContext, ActionGroupIds, ",
          {
            "pluginId": "ruleRegistry",
            "scope": "server",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-server.LifecycleAlertServices",
            "text": "LifecycleAlertServices"
          },
          "<InstanceState, InstanceContext, ActionGroupIds>>) => Promise<void | State>"
        ],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/utils/create_lifecycle_rule_type_factory.ts",
          "lineNumber": 54
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-server.RuleRegistryPluginConfig",
        "type": "Type",
        "tags": [],
        "label": "RuleRegistryPluginConfig",
        "description": [],
        "signature": [
          "{ readonly enabled: boolean; readonly index: string; readonly write: Readonly<{} & { enabled: boolean; }>; }"
        ],
        "source": {
          "path": "x-pack/plugins/rule_registry/server/config.ts",
          "lineNumber": 20
        },
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "ruleRegistry",
      "id": "def-server.RuleRegistryPluginSetupContract",
      "type": "Interface",
      "tags": [],
      "label": "RuleRegistryPluginSetupContract",
      "description": [],
      "source": {
        "path": "x-pack/plugins/rule_registry/server/plugin.ts",
        "lineNumber": 22
      },
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "ruleRegistry",
          "id": "def-server.RuleRegistryPluginSetupContract.ruleDataService",
          "type": "Object",
          "tags": [],
          "label": "ruleDataService",
          "description": [],
          "signature": [
            "RuleDataPluginService"
          ],
          "source": {
            "path": "x-pack/plugins/rule_registry/server/plugin.ts",
            "lineNumber": 23
          },
          "deprecated": false
        },
        {
          "parentPluginId": "ruleRegistry",
          "id": "def-server.RuleRegistryPluginSetupContract.eventLogService",
          "type": "Object",
          "tags": [],
          "label": "eventLogService",
          "description": [],
          "signature": [
            "IEventLogService"
          ],
          "source": {
            "path": "x-pack/plugins/rule_registry/server/plugin.ts",
            "lineNumber": 24
          },
          "deprecated": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "ruleRegistry",
      "id": "def-server.RuleRegistryPluginStartContract",
      "type": "Type",
      "tags": [],
      "label": "RuleRegistryPluginStartContract",
      "description": [],
      "signature": [
        "void"
      ],
      "source": {
        "path": "x-pack/plugins/rule_registry/server/plugin.ts",
        "lineNumber": 27
      },
      "deprecated": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "ruleRegistry",
        "id": "def-common.parseTechnicalFields",
        "type": "Function",
        "tags": [],
        "label": "parseTechnicalFields",
        "description": [],
        "signature": [
          "(input: unknown) => OutputOf<",
          "Optional",
          "<{ readonly \"kibana.rac.alert.producer\": { readonly type: \"keyword\"; }; readonly \"kibana.rac.alert.uuid\": { readonly type: \"keyword\"; }; readonly \"kibana.rac.alert.id\": { readonly type: \"keyword\"; }; readonly \"kibana.rac.alert.start\": { readonly type: \"date\"; }; readonly \"kibana.rac.alert.end\": { readonly type: \"date\"; }; readonly \"kibana.rac.alert.duration.us\": { readonly type: \"long\"; }; readonly \"kibana.rac.alert.severity.level\": { readonly type: \"keyword\"; }; readonly \"kibana.rac.alert.severity.value\": { readonly type: \"long\"; }; readonly \"kibana.rac.alert.status\": { readonly type: \"keyword\"; }; readonly \"kibana.rac.alert.evaluation.threshold\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; }; readonly \"kibana.rac.alert.evaluation.value\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly '@timestamp': { readonly type: \"date\"; readonly array: false; readonly required: true; }; readonly 'event.kind': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'event.action': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.uuid': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.id': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.name': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.category': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; }, \"tags\" | \"event.kind\" | \"event.action\" | \"rule.uuid\" | \"rule.id\" | \"rule.name\" | \"rule.category\" | \"kibana.rac.alert.producer\" | \"kibana.rac.alert.id\" | \"kibana.rac.alert.uuid\" | \"kibana.rac.alert.start\" | \"kibana.rac.alert.end\" | \"kibana.rac.alert.duration.us\" | \"kibana.rac.alert.severity.level\" | \"kibana.rac.alert.severity.value\" | \"kibana.rac.alert.status\" | \"kibana.rac.alert.evaluation.threshold\" | \"kibana.rac.alert.evaluation.value\">>"
        ],
        "source": {
          "path": "x-pack/plugins/rule_registry/common/parse_technical_fields.ts",
          "lineNumber": 15
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "ruleRegistry",
            "id": "def-common.parseTechnicalFields.$1",
            "type": "Unknown",
            "tags": [],
            "label": "input",
            "description": [],
            "signature": [
              "unknown"
            ],
            "source": {
              "path": "x-pack/plugins/rule_registry/common/parse_technical_fields.ts",
              "lineNumber": 15
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}