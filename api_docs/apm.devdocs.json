{
  "id": "apm",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "apm",
        "id": "def-public.ConfigSchema",
        "type": "Interface",
        "tags": [],
        "label": "ConfigSchema",
        "description": [],
        "path": "x-pack/plugins/apm/public/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "apm",
            "id": "def-public.ConfigSchema.serviceMapEnabled",
            "type": "boolean",
            "tags": [],
            "label": "serviceMapEnabled",
            "description": [],
            "path": "x-pack/plugins/apm/public/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-public.ConfigSchema.ui",
            "type": "Object",
            "tags": [],
            "label": "ui",
            "description": [],
            "signature": [
              "{ enabled: boolean; }"
            ],
            "path": "x-pack/plugins/apm/public/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-public.ConfigSchema.latestAgentVersionsUrl",
            "type": "string",
            "tags": [],
            "label": "latestAgentVersionsUrl",
            "description": [],
            "path": "x-pack/plugins/apm/public/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-public.ConfigSchema.serverlessOnboarding",
            "type": "boolean",
            "tags": [],
            "label": "serverlessOnboarding",
            "description": [],
            "path": "x-pack/plugins/apm/public/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-public.ConfigSchema.managedServiceUrl",
            "type": "string",
            "tags": [],
            "label": "managedServiceUrl",
            "description": [],
            "path": "x-pack/plugins/apm/public/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-public.ConfigSchema.featureFlags",
            "type": "Object",
            "tags": [],
            "label": "featureFlags",
            "description": [],
            "signature": [
              "{ agentConfigurationAvailable: boolean; configurableIndicesAvailable: boolean; infrastructureTabAvailable: boolean; infraUiAvailable: boolean; migrationToFleetAvailable: boolean; sourcemapApiAvailable: boolean; storageExplorerAvailable: boolean; }"
            ],
            "path": "x-pack/plugins/apm/public/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-public.ConfigSchema.serverless",
            "type": "Object",
            "tags": [],
            "label": "serverless",
            "description": [],
            "signature": [
              "{ enabled: boolean; }"
            ],
            "path": "x-pack/plugins/apm/public/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": [],
    "setup": {
      "parentPluginId": "apm",
      "id": "def-public.ApmPluginSetup",
      "type": "Type",
      "tags": [],
      "label": "ApmPluginSetup",
      "description": [],
      "signature": [
        "{ locator: ",
        {
          "pluginId": "share",
          "scope": "common",
          "docId": "kibSharePluginApi",
          "section": "def-common.LocatorPublic",
          "text": "LocatorPublic"
        },
        "<{ serviceName: undefined; } | ({ serviceName: string; } & { serviceOverviewTab?: \"errors\" | \"metrics\" | \"traces\" | \"logs\" | undefined; } & { query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
        "Branded",
        "<string, ",
        {
          "pluginId": "@kbn/io-ts-utils",
          "scope": "common",
          "docId": "kibKbnIoTsUtilsPluginApi",
          "section": "def-common.NonEmptyStringBrand",
          "text": "NonEmptyStringBrand"
        },
        ">; }; })>; }"
      ],
      "path": "x-pack/plugins/apm/public/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "apm",
      "id": "def-public.ApmPluginStart",
      "type": "Type",
      "tags": [],
      "label": "ApmPluginStart",
      "description": [],
      "signature": [
        "void"
      ],
      "path": "x-pack/plugins/apm/public/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "apm",
        "id": "def-server.APMPlugin",
        "type": "Class",
        "tags": [],
        "label": "APMPlugin",
        "description": [],
        "signature": [
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMPlugin",
            "text": "APMPlugin"
          },
          " implements ",
          {
            "pluginId": "@kbn/core-plugins-server",
            "scope": "common",
            "docId": "kibKbnCorePluginsServerPluginApi",
            "section": "def-common.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMPluginSetup",
            "text": "APMPluginSetup"
          },
          ", void, ",
          "APMPluginSetupDependencies",
          ", ",
          "APMPluginStartDependencies",
          ">"
        ],
        "path": "x-pack/plugins/apm/server/plugin.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "apm",
            "id": "def-server.APMPlugin.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/apm/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "apm",
                "id": "def-server.APMPlugin.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "initContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-plugins-server",
                    "scope": "common",
                    "docId": "kibKbnCorePluginsServerPluginApi",
                    "section": "def-common.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<unknown>"
                ],
                "path": "x-pack/plugins/apm/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMPlugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-server",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleServerPluginApi",
                "section": "def-common.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              "APMPluginStartDependencies",
              ", unknown>, plugins: ",
              "APMPluginSetupDependencies",
              ") => { config$: ",
              "Observable",
              "<Readonly<{} & { enabled: boolean; autoCreateApmDataView: boolean; serviceMapEnabled: boolean; serviceMapFingerprintBucketSize: number; serviceMapFingerprintGlobalBucketSize: number; serviceMapTraceIdBucketSize: number; serviceMapTraceIdGlobalBucketSize: number; serviceMapMaxTracesPerRequest: number; serviceMapTerminateAfter: number; serviceMapMaxTraces: number; ui: Readonly<{} & { enabled: boolean; maxTraceItems: number; }>; searchAggregatedTransactions: ",
              "SearchAggregatedTransactionSetting",
              "; telemetryCollectionEnabled: boolean; metricsInterval: number; agent: Readonly<{} & { migrations: Readonly<{} & { enabled: boolean; }>; }>; forceSyntheticSource: boolean; latestAgentVersionsUrl: string; serverless: Readonly<{} & { enabled: true; }>; serverlessOnboarding: boolean; managedServiceUrl: string; featureFlags: Readonly<{} & { agentConfigurationAvailable: boolean; configurableIndicesAvailable: boolean; infrastructureTabAvailable: boolean; infraUiAvailable: boolean; migrationToFleetAvailable: boolean; sourcemapApiAvailable: boolean; storageExplorerAvailable: boolean; }>; }>>; }"
            ],
            "path": "x-pack/plugins/apm/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "apm",
                "id": "def-server.APMPlugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-server",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleServerPluginApi",
                    "section": "def-common.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  "APMPluginStartDependencies",
                  ", unknown>"
                ],
                "path": "x-pack/plugins/apm/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "apm",
                "id": "def-server.APMPlugin.setup.$2",
                "type": "Object",
                "tags": [],
                "label": "plugins",
                "description": [],
                "signature": [
                  "APMPluginSetupDependencies"
                ],
                "path": "x-pack/plugins/apm/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMPlugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-server",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleServerPluginApi",
                "section": "def-common.CoreStart",
                "text": "CoreStart"
              },
              ", plugins: ",
              "APMPluginStartDependencies",
              ") => void"
            ],
            "path": "x-pack/plugins/apm/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "apm",
                "id": "def-server.APMPlugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-server",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleServerPluginApi",
                    "section": "def-common.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "x-pack/plugins/apm/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "apm",
                "id": "def-server.APMPlugin.start.$2",
                "type": "Object",
                "tags": [],
                "label": "plugins",
                "description": [],
                "signature": [
                  "APMPluginStartDependencies"
                ],
                "path": "x-pack/plugins/apm/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMPlugin.stop",
            "type": "Function",
            "tags": [],
            "label": "stop",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "x-pack/plugins/apm/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "apm",
        "id": "def-server.APIEndpoint",
        "type": "Type",
        "tags": [],
        "label": "APIEndpoint",
        "description": [],
        "signature": [
          "\"POST /internal/apm/data_view/static\" | \"GET /internal/apm/data_view/title\" | \"GET /internal/apm/environments\" | \"GET /internal/apm/services/{serviceName}/errors/groups/main_statistics\" | \"GET /internal/apm/services/{serviceName}/errors/groups/main_statistics_by_transaction_name\" | \"POST /internal/apm/services/{serviceName}/errors/groups/detailed_statistics\" | \"GET /internal/apm/services/{serviceName}/errors/{groupId}/samples\" | \"GET /internal/apm/services/{serviceName}/errors/{groupId}/error/{errorId}\" | \"GET /internal/apm/services/{serviceName}/errors/distribution\" | \"GET /internal/apm/services/{serviceName}/errors/{groupId}/top_erroneous_transactions\" | \"POST /internal/apm/latency/overall_distribution/transactions\" | \"GET /internal/apm/services/{serviceName}/metrics/charts\" | \"GET /internal/apm/services/{serviceName}/metrics/nodes\" | \"GET /internal/apm/services/{serviceName}/metrics/serverless/charts\" | \"GET /internal/apm/services/{serviceName}/metrics/serverless/summary\" | \"GET /internal/apm/services/{serviceName}/metrics/serverless/functions_overview\" | \"GET /internal/apm/services/{serviceName}/metrics/serverless/active_instances\" | \"GET /internal/apm/observability_overview\" | \"GET /internal/apm/observability_overview/has_data\" | \"GET /internal/apm/service-map\" | \"GET /internal/apm/service-map/service/{serviceName}\" | \"GET /internal/apm/service-map/dependency\" | \"GET /internal/apm/services\" | \"POST /internal/apm/services/detailed_statistics\" | \"GET /internal/apm/services/{serviceName}/metadata/details\" | \"GET /internal/apm/services/{serviceName}/metadata/icons\" | \"GET /internal/apm/services/{serviceName}/agent\" | \"GET /internal/apm/services/{serviceName}/transaction_types\" | \"GET /internal/apm/services/{serviceName}/node/{serviceNodeName}/metadata\" | \"GET /api/apm/services/{serviceName}/annotation/search 2023-10-31\" | \"POST /api/apm/services/{serviceName}/annotation 2023-10-31\" | \"GET /internal/apm/services/{serviceName}/service_overview_instances/details/{serviceNodeName}\" | \"GET /internal/apm/services/{serviceName}/throughput\" | \"GET /internal/apm/services/{serviceName}/service_overview_instances/main_statistics\" | \"GET /internal/apm/services/{serviceName}/service_overview_instances/detailed_statistics\" | \"GET /internal/apm/services/{serviceName}/dependencies\" | \"GET /internal/apm/services/{serviceName}/dependencies/breakdown\" | \"GET /internal/apm/services/{serviceName}/anomaly_charts\" | \"GET /internal/apm/services/{serviceName}/alerts_count\" | \"GET /internal/apm/service-groups\" | \"GET /internal/apm/service-group\" | \"POST /internal/apm/service-group\" | \"DELETE /internal/apm/service-group\" | \"GET /internal/apm/service-group/services\" | \"GET /internal/apm/service-group/counts\" | \"GET /internal/apm/suggestions\" | \"GET /internal/apm/traces/{traceId}\" | \"GET /internal/apm/traces\" | \"GET /internal/apm/traces/{traceId}/root_transaction\" | \"GET /internal/apm/transactions/{transactionId}\" | \"GET /internal/apm/traces/find\" | \"POST /internal/apm/traces/aggregated_critical_path\" | \"GET /internal/apm/traces/{traceId}/transactions/{transactionId}\" | \"GET /internal/apm/traces/{traceId}/spans/{spanId}\" | \"GET /internal/apm/services/{serviceName}/transactions/groups/main_statistics\" | \"GET /internal/apm/services/{serviceName}/transactions/groups/detailed_statistics\" | \"GET /internal/apm/services/{serviceName}/transactions/charts/latency\" | \"GET /internal/apm/services/{serviceName}/transactions/traces/samples\" | \"GET /internal/apm/services/{serviceName}/transaction/charts/breakdown\" | \"GET /internal/apm/services/{serviceName}/transactions/charts/error_rate\" | \"GET /internal/apm/services/{serviceName}/transactions/charts/coldstart_rate\" | \"GET /internal/apm/services/{serviceName}/transactions/charts/coldstart_rate_by_transaction_name\" | \"GET /internal/apm/rule_types/transaction_error_rate/chart_preview\" | \"GET /internal/apm/rule_types/error_count/chart_preview\" | \"GET /internal/apm/rule_types/transaction_duration/chart_preview\" | \"GET /api/apm/settings/agent-configuration 2023-10-31\" | \"GET /api/apm/settings/agent-configuration/view 2023-10-31\" | \"DELETE /api/apm/settings/agent-configuration 2023-10-31\" | \"PUT /api/apm/settings/agent-configuration 2023-10-31\" | \"POST /api/apm/settings/agent-configuration/search 2023-10-31\" | \"GET /api/apm/settings/agent-configuration/environments 2023-10-31\" | \"GET /api/apm/settings/agent-configuration/agent_name 2023-10-31\" | \"GET /internal/apm/settings/anomaly-detection/jobs\" | \"POST /internal/apm/settings/anomaly-detection/jobs\" | \"GET /internal/apm/settings/anomaly-detection/environments\" | \"POST /internal/apm/settings/anomaly-detection/update_to_v3\" | \"GET /internal/apm/settings/apm-index-settings\" | \"GET /internal/apm/settings/apm-indices\" | \"POST /internal/apm/settings/apm-indices/save\" | \"GET /internal/apm/settings/custom_links/transaction\" | \"GET /internal/apm/settings/custom_links\" | \"POST /internal/apm/settings/custom_links\" | \"PUT /internal/apm/settings/custom_links/{id}\" | \"DELETE /internal/apm/settings/custom_links/{id}\" | \"GET /api/apm/sourcemaps 2023-10-31\" | \"POST /api/apm/sourcemaps 2023-10-31\" | \"DELETE /api/apm/sourcemaps/{id} 2023-10-31\" | \"POST /internal/apm/sourcemaps/migrate_fleet_artifacts\" | \"GET /internal/apm/fleet/has_apm_policies\" | \"GET /internal/apm/fleet/agents\" | \"POST /api/apm/fleet/apm_server_schema 2023-10-31\" | \"GET /internal/apm/fleet/apm_server_schema/unsupported\" | \"GET /internal/apm/fleet/migration_check\" | \"POST /internal/apm/fleet/cloud_apm_package_policy\" | \"GET /internal/apm/fleet/java_agent_versions\" | \"GET /internal/apm/dependencies/top_dependencies\" | \"GET /internal/apm/dependencies/upstream_services\" | \"GET /internal/apm/dependencies/metadata\" | \"GET /internal/apm/dependencies/charts/latency\" | \"GET /internal/apm/dependencies/charts/throughput\" | \"GET /internal/apm/dependencies/charts/error_rate\" | \"GET /internal/apm/dependencies/operations\" | \"GET /internal/apm/dependencies/charts/distribution\" | \"GET /internal/apm/dependencies/operations/spans\" | \"GET /internal/apm/correlations/field_candidates/transactions\" | \"GET /internal/apm/correlations/field_value_stats/transactions\" | \"POST /internal/apm/correlations/field_value_pairs/transactions\" | \"POST /internal/apm/correlations/significant_correlations/transactions\" | \"POST /internal/apm/correlations/p_values/transactions\" | \"GET /internal/apm/fallback_to_transactions\" | \"GET /internal/apm/has_data\" | \"GET /internal/apm/event_metadata/{processorEvent}/{id}\" | \"GET /internal/apm/agent_keys\" | \"GET /internal/apm/agent_keys/privileges\" | \"POST /internal/apm/api_key/invalidate\" | \"POST /api/apm/agent_keys 2023-10-31\" | \"GET /internal/apm/storage_explorer\" | \"GET /internal/apm/services/{serviceName}/storage_details\" | \"GET /internal/apm/storage_chart\" | \"GET /internal/apm/storage_explorer/privileges\" | \"GET /internal/apm/storage_explorer_summary_stats\" | \"GET /internal/apm/storage_explorer/is_cross_cluster_search\" | \"GET /internal/apm/storage_explorer/get_services\" | \"GET /internal/apm/traces/{traceId}/span_links/{spanId}/parents\" | \"GET /internal/apm/traces/{traceId}/span_links/{spanId}/children\" | \"GET /internal/apm/services/{serviceName}/infrastructure_attributes\" | \"GET /internal/apm/debug-telemetry\" | \"GET /internal/apm/time_range_metadata\" | \"GET /internal/apm/settings/labs\" | \"GET /internal/apm/get_agents_per_service\" | \"GET /internal/apm/get_latest_agent_versions\" | \"GET /internal/apm/services/{serviceName}/agent_instances\" | \"GET /internal/apm/services/{serviceName}/mobile/filters\" | \"GET /internal/apm/mobile-services/{serviceName}/most_used_charts\" | \"GET /internal/apm/mobile-services/{serviceName}/transactions/charts/sessions\" | \"GET /internal/apm/mobile-services/{serviceName}/transactions/charts/http_requests\" | \"GET /internal/apm/mobile-services/{serviceName}/stats\" | \"GET /internal/apm/mobile-services/{serviceName}/location/stats\" | \"GET /internal/apm/mobile-services/{serviceName}/terms\" | \"GET /internal/apm/mobile-services/{serviceName}/main_statistics\" | \"GET /internal/apm/mobile-services/{serviceName}/detailed_statistics\" | \"GET /internal/apm/diagnostics\" | \"POST /internal/apm/assistant/get_apm_timeseries\" | \"GET /internal/apm/assistant/get_service_summary\" | \"GET /internal/apm/assistant/get_error_document\" | \"POST /internal/apm/assistant/get_correlation_values\" | \"GET /internal/apm/assistant/get_downstream_dependencies\" | \"POST /internal/apm/assistant/get_services_list\" | \"GET /internal/apm/services/{serviceName}/profiling/flamegraph\" | \"GET /internal/apm/profiling/status\" | \"GET /internal/apm/services/{serviceName}/profiling/functions\" | \"POST /internal/apm/custom-dashboard\" | \"DELETE /internal/apm/custom-dashboard\" | \"GET /internal/apm/services/{serviceName}/dashboards\""
        ],
        "path": "x-pack/plugins/apm/server/routes/apm_routes/get_global_apm_server_route_repository.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "apm",
        "id": "def-server.APM_SERVER_FEATURE_ID",
        "type": "string",
        "tags": [],
        "label": "APM_SERVER_FEATURE_ID",
        "description": [],
        "signature": [
          "\"apm\""
        ],
        "path": "x-pack/plugins/apm/common/rules/apm_rule_types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "apm",
        "id": "def-server.APMConfig",
        "type": "Type",
        "tags": [],
        "label": "APMConfig",
        "description": [],
        "signature": [
          "{ readonly enabled: boolean; readonly autoCreateApmDataView: boolean; readonly serviceMapEnabled: boolean; readonly serviceMapFingerprintBucketSize: number; readonly serviceMapFingerprintGlobalBucketSize: number; readonly serviceMapTraceIdBucketSize: number; readonly serviceMapTraceIdGlobalBucketSize: number; readonly serviceMapMaxTracesPerRequest: number; readonly serviceMapTerminateAfter: number; readonly serviceMapMaxTraces: number; readonly ui: Readonly<{} & { enabled: boolean; maxTraceItems: number; }>; readonly searchAggregatedTransactions: ",
          "SearchAggregatedTransactionSetting",
          "; readonly telemetryCollectionEnabled: boolean; readonly metricsInterval: number; readonly agent: Readonly<{} & { migrations: Readonly<{} & { enabled: boolean; }>; }>; readonly forceSyntheticSource: boolean; readonly latestAgentVersionsUrl: string; readonly serverless: Readonly<{} & { enabled: true; }>; readonly serverlessOnboarding: boolean; readonly managedServiceUrl: string; readonly featureFlags: Readonly<{} & { agentConfigurationAvailable: boolean; configurableIndicesAvailable: boolean; infrastructureTabAvailable: boolean; infraUiAvailable: boolean; migrationToFleetAvailable: boolean; sourcemapApiAvailable: boolean; storageExplorerAvailable: boolean; }>; }"
        ],
        "path": "x-pack/plugins/apm/server/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "apm",
        "id": "def-server.APMServerRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "APMServerRouteRepository",
        "description": [],
        "signature": [
          "{ \"GET /internal/apm/services/{serviceName}/dashboards\": { endpoint: \"GET /internal/apm/services/{serviceName}/dashboards\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { start: number; end: number; }; }; }) => Promise<{ serviceDashboards: ",
          "SavedApmCustomDashboard",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"DELETE /internal/apm/custom-dashboard\": { endpoint: \"DELETE /internal/apm/custom-dashboard\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ customDashboardId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { customDashboardId: string; }; }; }) => Promise<void>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/custom-dashboard\": { endpoint: \"POST /internal/apm/custom-dashboard\"; params?: ",
          "TypeC",
          "<{ query: ",
          "UnionC",
          "<[",
          "PartialC",
          "<{ customDashboardId: ",
          "StringC",
          "; }>, ",
          "UndefinedC",
          "]>; body: ",
          "TypeC",
          "<{ dashboardSavedObjectId: ",
          "StringC",
          "; kuery: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "UndefinedC",
          "]>; serviceNameFilterEnabled: ",
          "BooleanC",
          "; serviceEnvironmentFilterEnabled: ",
          "BooleanC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { customDashboardId?: string | undefined; } | undefined; body: { dashboardSavedObjectId: string; kuery: string | undefined; serviceNameFilterEnabled: boolean; serviceEnvironmentFilterEnabled: boolean; }; }; }) => Promise<",
          "SavedApmCustomDashboard",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/profiling/functions\": { endpoint: \"GET /internal/apm/services/{serviceName}/profiling/functions\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ documentType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".ServiceTransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionEvent>]>; rollupInterval: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "RollupInterval",
          ".OneMinute>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".TenMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".SixtyMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".None>]>; }>, ",
          "TypeC",
          "<{ startIndex: ",
          "Type",
          "<number, number, unknown>; endIndex: ",
          "Type",
          "<number, number, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { documentType: ",
          "ApmDocumentType",
          ".TransactionMetric | ",
          "ApmDocumentType",
          ".ServiceTransactionMetric | ",
          "ApmDocumentType",
          ".TransactionEvent; rollupInterval: ",
          "RollupInterval",
          "; } & { startIndex: number; endIndex: number; }; }; }) => Promise<{ functions: ",
          {
            "pluginId": "@kbn/profiling-utils",
            "scope": "common",
            "docId": "kibKbnProfilingUtilsPluginApi",
            "section": "def-common.TopNFunctions",
            "text": "TopNFunctions"
          },
          "; hostNames: string[]; } | undefined>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/profiling/status\": { endpoint: \"GET /internal/apm/profiling/status\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ initialized: boolean; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/profiling/flamegraph\": { endpoint: \"GET /internal/apm/services/{serviceName}/profiling/flamegraph\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ documentType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".ServiceTransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionEvent>]>; rollupInterval: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "RollupInterval",
          ".OneMinute>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".TenMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".SixtyMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".None>]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { documentType: ",
          "ApmDocumentType",
          ".TransactionMetric | ",
          "ApmDocumentType",
          ".ServiceTransactionMetric | ",
          "ApmDocumentType",
          ".TransactionEvent; rollupInterval: ",
          "RollupInterval",
          "; }; }; }) => Promise<{ flamegraph: ",
          {
            "pluginId": "@kbn/profiling-utils",
            "scope": "common",
            "docId": "kibKbnProfilingUtilsPluginApi",
            "section": "def-common.BaseFlameGraph",
            "text": "BaseFlameGraph"
          },
          "; hostNames: string[]; } | undefined>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/assistant/get_services_list\": { endpoint: \"POST /internal/apm/assistant/get_services_list\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "StringC",
          "; end: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ 'service.environment': ",
          "StringC",
          "; healthStatus: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ServiceHealthStatus",
          ".unknown>, ",
          "LiteralC",
          "<",
          "ServiceHealthStatus",
          ".healthy>, ",
          "LiteralC",
          "<",
          "ServiceHealthStatus",
          ".warning>, ",
          "LiteralC",
          "<",
          "ServiceHealthStatus",
          ".critical>]>>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { start: string; end: string; } & { 'service.environment'?: string | undefined; healthStatus?: ",
          "ServiceHealthStatus",
          "[] | undefined; }; }; }) => Promise<{ content: ApmServicesListContent; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/assistant/get_downstream_dependencies\": { endpoint: \"GET /internal/apm/assistant/get_downstream_dependencies\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ 'service.name': ",
          "StringC",
          "; start: ",
          "StringC",
          "; end: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ 'service.environment': ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { 'service.name': string; start: string; end: string; } & { 'service.environment'?: string | undefined; }; }; }) => Promise<{ content: ",
          "APMDownstreamDependency",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/assistant/get_correlation_values\": { endpoint: \"POST /internal/apm/assistant/get_correlation_values\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ sets: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ foreground: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "StringC",
          "; end: ",
          "StringC",
          "; 'service.name': ",
          "StringC",
          "; label: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; 'service.environment': ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>]>; background: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "StringC",
          "; end: ",
          "StringC",
          "; 'service.name': ",
          "StringC",
          "; label: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; 'service.environment': ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>]>; event: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "CorrelationsEventType",
          ".Transaction>, ",
          "LiteralC",
          "<",
          "CorrelationsEventType",
          ".ExitSpan>, ",
          "LiteralC",
          "<",
          "CorrelationsEventType",
          ".Error>]>; }>>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { sets: { foreground: { start: string; end: string; 'service.name': string; label: string; } & { filter?: string | undefined; 'service.environment'?: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          "> | undefined; }; background: { start: string; end: string; 'service.name': string; label: string; } & { filter?: string | undefined; 'service.environment'?: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          "> | undefined; }; event: ",
          "CorrelationsEventType",
          "; }[]; }; }; }) => Promise<{ content: ",
          "CorrelationValue",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/assistant/get_error_document\": { endpoint: \"GET /internal/apm/assistant/get_error_document\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "StringC",
          "; end: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ 'error.grouping_name': ",
          "StringC",
          "; 'service.name': ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { start: string; end: string; } & { 'error.grouping_name'?: string | undefined; 'service.name'?: string | undefined; }; }; }) => Promise<{ content: Partial<",
          "APMError",
          ">[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/assistant/get_service_summary\": { endpoint: \"GET /internal/apm/assistant/get_service_summary\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ 'service.name': ",
          "StringC",
          "; start: ",
          "StringC",
          "; end: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ 'service.environment': ",
          "StringC",
          "; 'transaction.type': ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { 'service.name': string; start: string; end: string; } & { 'service.environment'?: string | undefined; 'transaction.type'?: string | undefined; }; }; }) => Promise<{ content: ",
          "ServiceSummary",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/assistant/get_apm_timeseries\": { endpoint: \"POST /internal/apm/assistant/get_apm_timeseries\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ stats: ",
          "ArrayC",
          "<",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ 'service.name': ",
          "StringC",
          "; title: ",
          "StringC",
          "; timeseries: ",
          "UnionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmTimeseriesType",
          ".transactionThroughput>, ",
          "LiteralC",
          "<",
          "ApmTimeseriesType",
          ".transactionFailureRate>]>; }>, ",
          "PartialC",
          "<{ 'transaction.type': ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmTimeseriesType",
          ".exitSpanThroughput>, ",
          "LiteralC",
          "<",
          "ApmTimeseriesType",
          ".exitSpanFailureRate>, ",
          "LiteralC",
          "<",
          "ApmTimeseriesType",
          ".exitSpanLatency>]>; }>, ",
          "PartialC",
          "<{ 'span.destination.service.resource': ",
          "StringC",
          "; }>]>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ name: ",
          "LiteralC",
          "<",
          "ApmTimeseriesType",
          ".transactionLatency>; function: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".avg>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p95>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p99>]>; }>, ",
          "PartialC",
          "<{ 'transaction.type': ",
          "StringC",
          "; }>]>, ",
          "TypeC",
          "<{ name: ",
          "LiteralC",
          "<",
          "ApmTimeseriesType",
          ".errorEventRate>; }>]>; }>, ",
          "PartialC",
          "<{ filter: ",
          "StringC",
          "; offset: ",
          "StringC",
          "; 'service.environment': ",
          "StringC",
          "; }>]>>; start: ",
          "StringC",
          "; end: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { stats: ({ 'service.name': string; title: string; timeseries: ({ name: ",
          "ApmTimeseriesType",
          ".transactionThroughput | ",
          "ApmTimeseriesType",
          ".transactionFailureRate; } & { 'transaction.type'?: string | undefined; }) | ({ name: ",
          "ApmTimeseriesType",
          ".exitSpanThroughput | ",
          "ApmTimeseriesType",
          ".exitSpanLatency | ",
          "ApmTimeseriesType",
          ".exitSpanFailureRate; } & { 'span.destination.service.resource'?: string | undefined; }) | ({ name: ",
          "ApmTimeseriesType",
          ".transactionLatency; function: ",
          "LatencyAggregationType",
          "; } & { 'transaction.type'?: string | undefined; }) | { name: ",
          "ApmTimeseriesType",
          ".errorEventRate; }; } & { filter?: string | undefined; offset?: string | undefined; 'service.environment'?: string | undefined; })[]; start: string; end: string; }; }; }) => Promise<{ content: Omit<",
          "ApmTimeseries",
          ", \"data\">[]; data: ",
          "ApmTimeseries",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/diagnostics\": { endpoint: \"GET /internal/apm/diagnostics\"; params?: ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params?: { query?: { kuery?: string | undefined; start?: number | undefined; end?: number | undefined; } | undefined; } | undefined; }) => Promise<{ esResponses: { existingIndexTemplates: ",
          "IndicesGetIndexTemplateIndexTemplateItem",
          "[]; fieldCaps?: ",
          "FieldCapsResponse",
          " | undefined; indices?: ",
          "IndicesGetResponse",
          " | undefined; ingestPipelines?: ",
          "IngestGetPipelineResponse",
          " | undefined; }; diagnosticsPrivileges: { index: Record<string, ",
          "SecurityHasPrivilegesPrivileges",
          ">; cluster: Record<string, boolean>; hasAllClusterPrivileges: boolean; hasAllIndexPrivileges: boolean; hasAllPrivileges: boolean; }; apmIndices: Readonly<{} & { error: string; metric: string; transaction: string; span: string; onboarding: string; sourcemap: string; }>; apmIndexTemplates: { name: string; isNonStandard: boolean; exists: boolean; }[]; fleetPackageInfo: { isInstalled: boolean; version?: string | undefined; }; kibanaVersion: string; elasticsearchVersion: string; apmEvents: ",
          "ApmEvent",
          "[]; invalidIndices?: ",
          "IndiciesItem",
          "[] | undefined; validIndices?: ",
          "IndiciesItem",
          "[] | undefined; dataStreams: ",
          "IndicesDataStream",
          "[]; nonDataStreamIndices: string[]; indexTemplatesByIndexPattern: { indexPattern: string; indexTemplates: { priority: number | undefined; isNonStandard: boolean; templateIndexPatterns: string[]; templateName: string; }[]; }[]; params: { start: number; end: number; kuery?: string | undefined; }; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/mobile-services/{serviceName}/detailed_statistics\": { endpoint: \"GET /internal/apm/mobile-services/{serviceName}/detailed_statistics\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; fieldValues: ",
          "Type",
          "<string[], string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { kuery: string; } & { start: number; end: number; } & { offset?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { field: string; fieldValues: string[]; }; }; }) => Promise<",
          "MobileDetailedStatisticsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/mobile-services/{serviceName}/main_statistics\": { endpoint: \"GET /internal/apm/mobile-services/{serviceName}/main_statistics\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ field: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { kuery: string; } & { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { field: string; }; }; }) => Promise<",
          "MobileMainStatisticsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/mobile-services/{serviceName}/terms\": { endpoint: \"GET /internal/apm/mobile-services/{serviceName}/terms\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ size: ",
          "Type",
          "<number, number, unknown>; fieldName: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { kuery: string; } & { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { size: number; fieldName: string; }; }; }) => Promise<{ terms: ",
          "MobileTermsByFieldResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/mobile-services/{serviceName}/location/stats\": { endpoint: \"GET /internal/apm/mobile-services/{serviceName}/location/stats\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ locationField: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { kuery: string; } & { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { offset?: string | undefined; } & { locationField?: string | undefined; }; }; }) => Promise<",
          "MobileLocationStats",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/mobile-services/{serviceName}/stats\": { endpoint: \"GET /internal/apm/mobile-services/{serviceName}/stats\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ transactionType: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { kuery: string; } & { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { offset?: string | undefined; } & { transactionType?: string | undefined; }; }; }) => Promise<",
          "MobilePeriodStats",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/mobile-services/{serviceName}/transactions/charts/http_requests\": { endpoint: \"GET /internal/apm/mobile-services/{serviceName}/transactions/charts/http_requests\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ transactionType: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { kuery: string; } & { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { offset?: string | undefined; } & { transactionType?: string | undefined; transactionName?: string | undefined; }; }; }) => Promise<",
          "HttpRequestsTimeseries",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/mobile-services/{serviceName}/transactions/charts/sessions\": { endpoint: \"GET /internal/apm/mobile-services/{serviceName}/transactions/charts/sessions\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ transactionType: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { kuery: string; } & { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { offset?: string | undefined; } & { transactionType?: string | undefined; transactionName?: string | undefined; }; }; }) => Promise<",
          "SessionsTimeseries",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/mobile-services/{serviceName}/most_used_charts\": { endpoint: \"GET /internal/apm/mobile-services/{serviceName}/most_used_charts\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "PartialC",
          "<{ transactionType: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { kuery: string; } & { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { transactionType?: string | undefined; }; }; }) => Promise<{ mostUsedCharts: { key: ",
          "MobilePropertyType",
          "; options: { key: string | number; docCount: number; }[]; }[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/mobile/filters\": { endpoint: \"GET /internal/apm/services/{serviceName}/mobile/filters\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "PartialC",
          "<{ transactionType: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { kuery: string; } & { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { transactionType?: string | undefined; }; }; }) => Promise<{ mobileFilters: ",
          "MobileFiltersResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/agent_instances\": { endpoint: \"GET /internal/apm/services/{serviceName}/agent_instances\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ probability: ",
          "Type",
          "<number, number, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { probability: number; }; }; }) => Promise<{ items: ",
          "AgentExplorerAgentInstancesResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/get_latest_agent_versions\": { endpoint: \"GET /internal/apm/get_latest_agent_versions\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<",
          "AgentLatestVersionsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/get_agents_per_service\": { endpoint: \"GET /internal/apm/get_agents_per_service\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ probability: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; agentLanguage: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { probability: number; } & { serviceName?: string | undefined; agentLanguage?: string | undefined; }; }; }) => Promise<",
          "AgentExplorerAgentsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/settings/labs\": { endpoint: \"GET /internal/apm/settings/labs\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ labsItems: string[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/time_range_metadata\": { endpoint: \"GET /internal/apm/time_range_metadata\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ useSpanName: ",
          "Type",
          "<boolean, boolean, unknown>; enableServiceTransactionMetrics: ",
          "Type",
          "<boolean, boolean, unknown>; enableContinuousRollups: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { useSpanName: boolean; enableServiceTransactionMetrics: boolean; enableContinuousRollups: boolean; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<",
          "TimeRangeMetadata",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/debug-telemetry\": { endpoint: \"GET /internal/apm/debug-telemetry\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<unknown>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/infrastructure_attributes\": { endpoint: \"GET /internal/apm/services/{serviceName}/infrastructure_attributes\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { kuery: string; } & { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }; }; }) => Promise<{ containerIds: string[]; hostNames: string[]; podNames: string[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/traces/{traceId}/span_links/{spanId}/children\": { endpoint: \"GET /internal/apm/traces/{traceId}/span_links/{spanId}/children\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ traceId: ",
          "StringC",
          "; spanId: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { traceId: string; spanId: string; }; query: { kuery: string; } & { start: number; end: number; }; }; }) => Promise<{ spanLinksDetails: ",
          "SpanLinkDetails",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/traces/{traceId}/span_links/{spanId}/parents\": { endpoint: \"GET /internal/apm/traces/{traceId}/span_links/{spanId}/parents\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ traceId: ",
          "StringC",
          "; spanId: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ processorEvent: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.ProcessorEvent",
            "text": "ProcessorEvent"
          },
          ".transaction>, ",
          "LiteralC",
          "<",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.ProcessorEvent",
            "text": "ProcessorEvent"
          },
          ".error>, ",
          "LiteralC",
          "<",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.ProcessorEvent",
            "text": "ProcessorEvent"
          },
          ".metric>, ",
          "LiteralC",
          "<",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.ProcessorEvent",
            "text": "ProcessorEvent"
          },
          ".span>]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { traceId: string; spanId: string; }; query: { kuery: string; } & { start: number; end: number; } & { processorEvent: ",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.ProcessorEvent",
            "text": "ProcessorEvent"
          },
          "; }; }; }) => Promise<{ spanLinksDetails: ",
          "SpanLinkDetails",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/storage_explorer/get_services\": { endpoint: \"GET /internal/apm/storage_explorer/get_services\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ indexLifecyclePhase: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".All>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Hot>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Warm>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Cold>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Frozen>]>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { indexLifecyclePhase: ",
          "IndexLifecyclePhaseSelectOption",
          "; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<{ services: { serviceName: string; }[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/storage_explorer/is_cross_cluster_search\": { endpoint: \"GET /internal/apm/storage_explorer/is_cross_cluster_search\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ isCrossClusterSearch: boolean; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/storage_explorer_summary_stats\": { endpoint: \"GET /internal/apm/storage_explorer_summary_stats\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ indexLifecyclePhase: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".All>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Hot>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Warm>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Cold>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Frozen>]>; }>, ",
          "TypeC",
          "<{ probability: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { indexLifecyclePhase: ",
          "IndexLifecyclePhaseSelectOption",
          "; } & { probability: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<",
          "StorageExplorerSummaryStatisticsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/storage_explorer/privileges\": { endpoint: \"GET /internal/apm/storage_explorer/privileges\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ hasPrivileges: boolean; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/storage_chart\": { endpoint: \"GET /internal/apm/storage_chart\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ indexLifecyclePhase: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".All>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Hot>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Warm>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Cold>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Frozen>]>; }>, ",
          "TypeC",
          "<{ probability: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { indexLifecyclePhase: ",
          "IndexLifecyclePhaseSelectOption",
          "; } & { probability: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<{ storageTimeSeries: ",
          "SizeTimeseriesResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/storage_details\": { endpoint: \"GET /internal/apm/services/{serviceName}/storage_details\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ indexLifecyclePhase: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".All>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Hot>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Warm>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Cold>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Frozen>]>; }>, ",
          "TypeC",
          "<{ probability: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { indexLifecyclePhase: ",
          "IndexLifecyclePhaseSelectOption",
          "; } & { probability: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<",
          "StorageDetailsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/storage_explorer\": { endpoint: \"GET /internal/apm/storage_explorer\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ indexLifecyclePhase: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".All>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Hot>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Warm>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Cold>, ",
          "LiteralC",
          "<",
          "IndexLifecyclePhaseSelectOption",
          ".Frozen>]>; }>, ",
          "TypeC",
          "<{ probability: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { indexLifecyclePhase: ",
          "IndexLifecyclePhaseSelectOption",
          "; } & { probability: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<{ serviceStatistics: ",
          "StorageExplorerServiceStatisticsResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /api/apm/agent_keys 2023-10-31\": { endpoint: \"POST /api/apm/agent_keys 2023-10-31\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ name: ",
          "StringC",
          "; privileges: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "PrivilegeType",
          ".EVENT>, ",
          "LiteralC",
          "<",
          "PrivilegeType",
          ".AGENT_CONFIG>]>>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { name: string; privileges: ",
          "PrivilegeType",
          "[]; }; }; }) => Promise<",
          "CreateAgentKeyResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/api_key/invalidate\": { endpoint: \"POST /internal/apm/api_key/invalidate\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { id: string; }; }; }) => Promise<",
          "InvalidateAgentKeyResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/agent_keys/privileges\": { endpoint: \"GET /internal/apm/agent_keys/privileges\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<",
          "AgentKeysPrivilegesResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/agent_keys\": { endpoint: \"GET /internal/apm/agent_keys\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<",
          "AgentKeysResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/event_metadata/{processorEvent}/{id}\": { endpoint: \"GET /internal/apm/event_metadata/{processorEvent}/{id}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ processorEvent: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.ProcessorEvent",
            "text": "ProcessorEvent"
          },
          ".transaction>, ",
          "LiteralC",
          "<",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.ProcessorEvent",
            "text": "ProcessorEvent"
          },
          ".error>, ",
          "LiteralC",
          "<",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.ProcessorEvent",
            "text": "ProcessorEvent"
          },
          ".metric>, ",
          "LiteralC",
          "<",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.ProcessorEvent",
            "text": "ProcessorEvent"
          },
          ".span>]>; id: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { processorEvent: ",
          {
            "pluginId": "observability",
            "scope": "common",
            "docId": "kibObservabilityPluginApi",
            "section": "def-common.ProcessorEvent",
            "text": "ProcessorEvent"
          },
          "; id: string; }; query: { start: number; end: number; }; }; }) => Promise<{ metadata: Partial<Record<string, unknown[]>>; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/has_data\": { endpoint: \"GET /internal/apm/has_data\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ hasData: boolean; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/fallback_to_transactions\": { endpoint: \"GET /internal/apm/fallback_to_transactions\"; params?: ",
          "PartialC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params?: { query?: ({ kuery: string; } & { start?: number | undefined; end?: number | undefined; }) | undefined; } | undefined; }) => Promise<{ fallbackToTransactions: boolean; }>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/correlations/p_values/transactions\": { endpoint: \"POST /internal/apm/correlations/p_values/transactions\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; durationMin: ",
          "Type",
          "<number, number, unknown>; durationMax: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ fieldCandidates: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { serviceName?: string | undefined; transactionName?: string | undefined; transactionType?: string | undefined; durationMin?: number | undefined; durationMax?: number | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { fieldCandidates: string[]; }; }; }) => Promise<",
          "PValuesResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/correlations/significant_correlations/transactions\": { endpoint: \"POST /internal/apm/correlations/significant_correlations/transactions\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; durationMin: ",
          "Type",
          "<number, number, unknown>; durationMax: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ fieldValuePairs: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ fieldName: ",
          "StringC",
          "; fieldValue: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "Type",
          "<number, number, unknown>]>; }>>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { serviceName?: string | undefined; transactionName?: string | undefined; transactionType?: string | undefined; durationMin?: number | undefined; durationMax?: number | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { fieldValuePairs: { fieldName: string; fieldValue: string | number; }[]; }; }; }) => Promise<",
          "SignificantCorrelationsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/correlations/field_value_pairs/transactions\": { endpoint: \"POST /internal/apm/correlations/field_value_pairs/transactions\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ fieldCandidates: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { serviceName?: string | undefined; transactionName?: string | undefined; transactionType?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { fieldCandidates: string[]; }; }; }) => Promise<",
          "FieldValuePairsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/correlations/field_value_stats/transactions\": { endpoint: \"GET /internal/apm/correlations/field_value_stats/transactions\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; samplerShardSize: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ fieldName: ",
          "StringC",
          "; fieldValue: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "NumberC",
          "]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { serviceName?: string | undefined; transactionName?: string | undefined; transactionType?: string | undefined; samplerShardSize?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { fieldName: string; fieldValue: string | number; }; }; }) => Promise<",
          "TopValuesStats",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/correlations/field_candidates/transactions\": { endpoint: \"GET /internal/apm/correlations/field_candidates/transactions\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { serviceName?: string | undefined; transactionName?: string | undefined; transactionType?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<",
          "DurationFieldCandidatesResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/dependencies/operations/spans\": { endpoint: \"GET /internal/apm/dependencies/operations/spans\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ dependencyName: ",
          "StringC",
          "; spanName: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ sampleRangeFrom: ",
          "Type",
          "<number, number, unknown>; sampleRangeTo: ",
          "Type",
          "<number, number, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { dependencyName: string; spanName: string; } & { sampleRangeFrom?: number | undefined; sampleRangeTo?: number | undefined; }; }; }) => Promise<{ spans: ",
          "DependencySpan",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/dependencies/charts/distribution\": { endpoint: \"GET /internal/apm/dependencies/charts/distribution\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ dependencyName: ",
          "StringC",
          "; spanName: ",
          "StringC",
          "; percentileThreshold: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { dependencyName: string; spanName: string; percentileThreshold: number; } & { start: number; end: number; } & { kuery: string; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }; }; }) => Promise<",
          "DependencyLatencyDistributionResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/dependencies/operations\": { endpoint: \"GET /internal/apm/dependencies/operations\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ dependencyName: ",
          "StringC",
          "; searchServiceDestinationMetrics: ",
          "Type",
          "<boolean, boolean, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { offset?: string | undefined; } & { dependencyName: string; searchServiceDestinationMetrics: boolean; }; }; }) => Promise<{ operations: ",
          "DependencyOperation",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/dependencies/charts/error_rate\": { endpoint: \"GET /internal/apm/dependencies/charts/error_rate\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ dependencyName: ",
          "StringC",
          "; spanName: ",
          "StringC",
          "; searchServiceDestinationMetrics: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { dependencyName: string; spanName: string; searchServiceDestinationMetrics: boolean; } & { start: number; end: number; } & { kuery: string; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { offset?: string | undefined; }; }; }) => Promise<{ currentTimeseries: { x: number; y: number; }[]; comparisonTimeseries: { x: number; y: number; }[] | null; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/dependencies/charts/throughput\": { endpoint: \"GET /internal/apm/dependencies/charts/throughput\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ dependencyName: ",
          "StringC",
          "; spanName: ",
          "StringC",
          "; searchServiceDestinationMetrics: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { dependencyName: string; spanName: string; searchServiceDestinationMetrics: boolean; } & { start: number; end: number; } & { kuery: string; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { offset?: string | undefined; }; }; }) => Promise<",
          "ThroughputChartsForDependencyResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/dependencies/charts/latency\": { endpoint: \"GET /internal/apm/dependencies/charts/latency\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ dependencyName: ",
          "StringC",
          "; spanName: ",
          "StringC",
          "; searchServiceDestinationMetrics: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { dependencyName: string; spanName: string; searchServiceDestinationMetrics: boolean; } & { start: number; end: number; } & { kuery: string; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { offset?: string | undefined; }; }; }) => Promise<",
          "LatencyChartsDependencyResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/dependencies/metadata\": { endpoint: \"GET /internal/apm/dependencies/metadata\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ dependencyName: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { dependencyName: string; } & { start: number; end: number; }; }; }) => Promise<{ metadata: ",
          "MetadataForDependencyResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/dependencies/upstream_services\": { endpoint: \"GET /internal/apm/dependencies/upstream_services\"; params?: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ dependencyName: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ numBuckets: ",
          "Type",
          "<number, number, unknown>; }>]>; }>, ",
          "PartialC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>]>; }>]> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { dependencyName: string; } & { start: number; end: number; } & { numBuckets: number; }; } & { query?: ({ environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { offset?: string | undefined; } & { kuery: string; }) | undefined; }; }) => Promise<",
          "UpstreamServicesForDependencyResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/dependencies/top_dependencies\": { endpoint: \"GET /internal/apm/dependencies/top_dependencies\"; params?: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ numBuckets: ",
          "Type",
          "<number, number, unknown>; }>]>; }>, ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>; }>]> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { numBuckets: number; }; } & { query?: { offset?: string | undefined; } | undefined; }; }) => Promise<",
          "TopDependenciesResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/fleet/java_agent_versions\": { endpoint: \"GET /internal/apm/fleet/java_agent_versions\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ versions: string[] | undefined; }>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/fleet/cloud_apm_package_policy\": { endpoint: \"POST /internal/apm/fleet/cloud_apm_package_policy\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ cloudApmPackagePolicy: ",
          {
            "pluginId": "fleet",
            "scope": "common",
            "docId": "kibFleetPluginApi",
            "section": "def-common.PackagePolicy",
            "text": "PackagePolicy"
          },
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/fleet/migration_check\": { endpoint: \"GET /internal/apm/fleet/migration_check\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<",
          "RunMigrationCheckResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/fleet/apm_server_schema/unsupported\": { endpoint: \"GET /internal/apm/fleet/apm_server_schema/unsupported\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ unsupported: ",
          "UnsupportedApmServerSchema",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /api/apm/fleet/apm_server_schema 2023-10-31\": { endpoint: \"POST /api/apm/fleet/apm_server_schema 2023-10-31\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ schema: ",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "UnknownC",
          ">; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { schema: { [x: string]: unknown; }; }; }; }) => Promise<void>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/fleet/agents\": { endpoint: \"GET /internal/apm/fleet/agents\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<",
          "FleetAgentResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/fleet/has_apm_policies\": { endpoint: \"GET /internal/apm/fleet/has_apm_policies\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ hasApmPolicies: boolean; }>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/sourcemaps/migrate_fleet_artifacts\": { endpoint: \"POST /internal/apm/sourcemaps/migrate_fleet_artifacts\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<void>; } & ",
          "APMRouteCreateOptions",
          "; \"DELETE /api/apm/sourcemaps/{id} 2023-10-31\": { endpoint: \"DELETE /api/apm/sourcemaps/{id} 2023-10-31\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { id: string; }; }; }) => Promise<void>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /api/apm/sourcemaps 2023-10-31\": { endpoint: \"POST /api/apm/sourcemaps 2023-10-31\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ service_name: ",
          "StringC",
          "; service_version: ",
          "StringC",
          "; bundle_filepath: ",
          "StringC",
          "; sourcemap: ",
          "Type",
          "<{ version: number; sources: string[]; mappings: string; } & { names?: string[] | undefined; file?: string | undefined; sourceRoot?: string | undefined; sourcesContent?: (string | null)[] | undefined; }, string | Buffer, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { service_name: string; service_version: string; bundle_filepath: string; sourcemap: { version: number; sources: string[]; mappings: string; } & { names?: string[] | undefined; file?: string | undefined; sourceRoot?: string | undefined; sourcesContent?: (string | null)[] | undefined; }; }; }; }) => Promise<",
          {
            "pluginId": "fleet",
            "scope": "server",
            "docId": "kibFleetPluginApi",
            "section": "def-server.Artifact",
            "text": "Artifact"
          },
          " | undefined>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /api/apm/sourcemaps 2023-10-31\": { endpoint: \"GET /api/apm/sourcemaps 2023-10-31\"; params?: ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ page: ",
          "Type",
          "<number, number, unknown>; perPage: ",
          "Type",
          "<number, number, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params?: { query?: { page?: number | undefined; perPage?: number | undefined; } | undefined; } | undefined; }) => Promise<",
          "ListSourceMapArtifactsResponse",
          " | undefined>; } & ",
          "APMRouteCreateOptions",
          "; \"DELETE /internal/apm/settings/custom_links/{id}\": { endpoint: \"DELETE /internal/apm/settings/custom_links/{id}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { id: string; }; }; }) => Promise<{ result: string; }>; } & ",
          "APMRouteCreateOptions",
          "; \"PUT /internal/apm/settings/custom_links/{id}\": { endpoint: \"PUT /internal/apm/settings/custom_links/{id}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ label: ",
          "StringC",
          "; url: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ id: ",
          "StringC",
          "; filters: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ key: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"\">, ",
          "KeyofC",
          "<{ 'service.name': ",
          "StringC",
          "; 'service.environment': ",
          "StringC",
          "; 'transaction.name': ",
          "StringC",
          "; 'transaction.type': ",
          "StringC",
          "; }>]>; value: ",
          "StringC",
          "; }>>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { id: string; }; body: { label: string; url: string; } & { id?: string | undefined; filters?: { key: \"\" | \"service.name\" | \"service.environment\" | \"transaction.name\" | \"transaction.type\"; value: string; }[] | undefined; }; }; }) => Promise<void>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/settings/custom_links\": { endpoint: \"POST /internal/apm/settings/custom_links\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ label: ",
          "StringC",
          "; url: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ id: ",
          "StringC",
          "; filters: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ key: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"\">, ",
          "KeyofC",
          "<{ 'service.name': ",
          "StringC",
          "; 'service.environment': ",
          "StringC",
          "; 'transaction.name': ",
          "StringC",
          "; 'transaction.type': ",
          "StringC",
          "; }>]>; value: ",
          "StringC",
          "; }>>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { label: string; url: string; } & { id?: string | undefined; filters?: { key: \"\" | \"service.name\" | \"service.environment\" | \"transaction.name\" | \"transaction.type\"; value: string; }[] | undefined; }; }; }) => Promise<void>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/settings/custom_links\": { endpoint: \"GET /internal/apm/settings/custom_links\"; params?: ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ 'service.name': ",
          "StringC",
          "; 'service.environment': ",
          "StringC",
          "; 'transaction.name': ",
          "StringC",
          "; 'transaction.type': ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params?: { query?: { 'service.name'?: string | undefined; 'service.environment'?: string | undefined; 'transaction.name'?: string | undefined; 'transaction.type'?: string | undefined; } | undefined; } | undefined; }) => Promise<{ customLinks: ",
          "CustomLink",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/settings/custom_links/transaction\": { endpoint: \"GET /internal/apm/settings/custom_links/transaction\"; params?: ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ 'service.name': ",
          "StringC",
          "; 'service.environment': ",
          "StringC",
          "; 'transaction.name': ",
          "StringC",
          "; 'transaction.type': ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params?: { query?: { 'service.name'?: string | undefined; 'service.environment'?: string | undefined; 'transaction.name'?: string | undefined; 'transaction.type'?: string | undefined; } | undefined; } | undefined; }) => Promise<",
          "Transaction",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/settings/apm-indices/save\": { endpoint: \"POST /internal/apm/settings/apm-indices/save\"; params?: ",
          "TypeC",
          "<{ body: ",
          "PartialC",
          "<SaveApmIndicesBodySchema>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { readonly error?: string | undefined; readonly metric?: string | undefined; readonly transaction?: string | undefined; readonly span?: string | undefined; readonly onboarding?: string | undefined; readonly sourcemap?: string | undefined; }; }; }) => Promise<",
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObject",
            "text": "SavedObject"
          },
          "<{}>>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/settings/apm-indices\": { endpoint: \"GET /internal/apm/settings/apm-indices\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<Readonly<{} & { error: string; metric: string; transaction: string; span: string; onboarding: string; sourcemap: string; }>>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/settings/apm-index-settings\": { endpoint: \"GET /internal/apm/settings/apm-index-settings\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ apmIndexSettings: ",
          "ApmIndexSettingsResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/settings/anomaly-detection/update_to_v3\": { endpoint: \"POST /internal/apm/settings/anomaly-detection/update_to_v3\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ update: boolean; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/settings/anomaly-detection/environments\": { endpoint: \"GET /internal/apm/settings/anomaly-detection/environments\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ environments: string[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/settings/anomaly-detection/jobs\": { endpoint: \"POST /internal/apm/settings/anomaly-detection/jobs\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ environments: ",
          "ArrayC",
          "<",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { environments: (\"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">)[]; }; }; }) => Promise<{ jobCreated: true; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/settings/anomaly-detection/jobs\": { endpoint: \"GET /internal/apm/settings/anomaly-detection/jobs\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ jobs: ",
          "ApmMlJob",
          "[]; hasLegacyJobs: boolean; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /api/apm/settings/agent-configuration/agent_name 2023-10-31\": { endpoint: \"GET /api/apm/settings/agent-configuration/agent_name 2023-10-31\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { serviceName: string; }; }; }) => Promise<{ agentName: string | undefined; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /api/apm/settings/agent-configuration/environments 2023-10-31\": { endpoint: \"GET /api/apm/settings/agent-configuration/environments 2023-10-31\"; params?: ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params?: { query?: { serviceName?: string | undefined; } | undefined; } | undefined; }) => Promise<{ environments: ",
          "EnvironmentsResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /api/apm/settings/agent-configuration/search 2023-10-31\": { endpoint: \"POST /api/apm/settings/agent-configuration/search 2023-10-31\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ service: ",
          "PartialC",
          "<{ name: ",
          "StringC",
          "; environment: ",
          "StringC",
          "; }>; }>, ",
          "PartialC",
          "<{ etag: ",
          "StringC",
          "; mark_as_applied_by_agent: ",
          "BooleanC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { service: { name?: string | undefined; environment?: string | undefined; }; } & { etag?: string | undefined; mark_as_applied_by_agent?: boolean | undefined; }; }; }) => Promise<",
          {
            "pluginId": "@kbn/es-types",
            "scope": "common",
            "docId": "kibKbnEsTypesPluginApi",
            "section": "def-common.SearchHit",
            "text": "SearchHit"
          },
          "<",
          "AgentConfiguration",
          ", undefined, undefined> | null>; } & ",
          "APMRouteCreateOptions",
          "; \"PUT /api/apm/settings/agent-configuration 2023-10-31\": { endpoint: \"PUT /api/apm/settings/agent-configuration 2023-10-31\"; params?: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ overwrite: ",
          "Type",
          "<boolean, boolean, unknown>; }>; }>, ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ agent_name: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ service: ",
          "PartialC",
          "<{ name: ",
          "StringC",
          "; environment: ",
          "StringC",
          "; }>; settings: ",
          "IntersectionC",
          "<[",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">, ",
          "PartialC",
          "<Record<string, ",
          "SettingValidation",
          ">>]>; }>]>; }>]> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query?: { overwrite?: boolean | undefined; } | undefined; } & { body: { agent_name?: string | undefined; } & { service: { name?: string | undefined; environment?: string | undefined; }; settings: { [x: string]: string; } & { [x: string]: any; }; }; }; }) => Promise<void>; } & ",
          "APMRouteCreateOptions",
          "; \"DELETE /api/apm/settings/agent-configuration 2023-10-31\": { endpoint: \"DELETE /api/apm/settings/agent-configuration 2023-10-31\"; params?: ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ service: ",
          "PartialC",
          "<{ name: ",
          "StringC",
          "; environment: ",
          "StringC",
          "; }>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { service: { name?: string | undefined; environment?: string | undefined; }; }; }; }) => Promise<{ result: string; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /api/apm/settings/agent-configuration/view 2023-10-31\": { endpoint: \"GET /api/apm/settings/agent-configuration/view 2023-10-31\"; params?: ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ name: ",
          "StringC",
          "; environment: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params?: { query?: { name?: string | undefined; environment?: string | undefined; } | undefined; } | undefined; }) => Promise<",
          "AgentConfiguration",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /api/apm/settings/agent-configuration 2023-10-31\": { endpoint: \"GET /api/apm/settings/agent-configuration 2023-10-31\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ configurations: ",
          "AgentConfiguration",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/rule_types/transaction_duration/chart_preview\": { endpoint: \"GET /internal/apm/rule_types/transaction_duration/chart_preview\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ aggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "AggregationType",
          ".Avg>, ",
          "LiteralC",
          "<",
          "AggregationType",
          ".P95>, ",
          "LiteralC",
          "<",
          "AggregationType",
          ".P99>]>; serviceName: ",
          "StringC",
          "; errorGroupingKey: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ interval: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ groupBy: ",
          "ArrayC",
          "<",
          "StringC",
          ">; searchConfiguration: ",
          "Type",
          "<{ query: { query: string | { [x: string]: any; }; language: string; }; }, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { aggregationType?: ",
          "AggregationType",
          " | undefined; serviceName?: string | undefined; errorGroupingKey?: string | undefined; transactionType?: string | undefined; transactionName?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { start: number; end: number; } & { interval: string; } & { groupBy?: string[] | undefined; searchConfiguration?: { query: { query: string | { [x: string]: any; }; language: string; }; } | undefined; }; }; }) => Promise<{ latencyChartPreview: ",
          "PreviewChartResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/rule_types/error_count/chart_preview\": { endpoint: \"GET /internal/apm/rule_types/error_count/chart_preview\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ aggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "AggregationType",
          ".Avg>, ",
          "LiteralC",
          "<",
          "AggregationType",
          ".P95>, ",
          "LiteralC",
          "<",
          "AggregationType",
          ".P99>]>; serviceName: ",
          "StringC",
          "; errorGroupingKey: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ interval: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ groupBy: ",
          "ArrayC",
          "<",
          "StringC",
          ">; searchConfiguration: ",
          "Type",
          "<{ query: { query: string | { [x: string]: any; }; language: string; }; }, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { aggregationType?: ",
          "AggregationType",
          " | undefined; serviceName?: string | undefined; errorGroupingKey?: string | undefined; transactionType?: string | undefined; transactionName?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { start: number; end: number; } & { interval: string; } & { groupBy?: string[] | undefined; searchConfiguration?: { query: { query: string | { [x: string]: any; }; language: string; }; } | undefined; }; }; }) => Promise<{ errorCountChartPreview: ",
          "PreviewChartResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/rule_types/transaction_error_rate/chart_preview\": { endpoint: \"GET /internal/apm/rule_types/transaction_error_rate/chart_preview\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ aggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "AggregationType",
          ".Avg>, ",
          "LiteralC",
          "<",
          "AggregationType",
          ".P95>, ",
          "LiteralC",
          "<",
          "AggregationType",
          ".P99>]>; serviceName: ",
          "StringC",
          "; errorGroupingKey: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ interval: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ groupBy: ",
          "ArrayC",
          "<",
          "StringC",
          ">; searchConfiguration: ",
          "Type",
          "<{ query: { query: string | { [x: string]: any; }; language: string; }; }, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { aggregationType?: ",
          "AggregationType",
          " | undefined; serviceName?: string | undefined; errorGroupingKey?: string | undefined; transactionType?: string | undefined; transactionName?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { start: number; end: number; } & { interval: string; } & { groupBy?: string[] | undefined; searchConfiguration?: { query: { query: string | { [x: string]: any; }; language: string; }; } | undefined; }; }; }) => Promise<{ errorRateChartPreview: ",
          "PreviewChartResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/transactions/charts/coldstart_rate_by_transaction_name\": { endpoint: \"GET /internal/apm/services/{serviceName}/transactions/charts/coldstart_rate_by_transaction_name\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; }>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>]>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { transactionType: string; transactionName: string; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { offset?: string | undefined; }; }; }) => Promise<",
          "ColdstartRateResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/transactions/charts/coldstart_rate\": { endpoint: \"GET /internal/apm/services/{serviceName}/transactions/charts/coldstart_rate\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; }>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>]>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { transactionType: string; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { offset?: string | undefined; }; }; }) => Promise<",
          "ColdstartRateResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/transactions/charts/error_rate\": { endpoint: \"GET /internal/apm/services/{serviceName}/transactions/charts/error_rate\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; bucketSizeInSeconds: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "PartialC",
          "<{ transactionName: ",
          "StringC",
          "; }>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ documentType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".ServiceTransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionEvent>]>; rollupInterval: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "RollupInterval",
          ".OneMinute>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".TenMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".SixtyMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".None>]>; }>]>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { transactionType: string; bucketSizeInSeconds: number; } & { transactionName?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { offset?: string | undefined; } & { documentType: ",
          "ApmDocumentType",
          ".TransactionMetric | ",
          "ApmDocumentType",
          ".ServiceTransactionMetric | ",
          "ApmDocumentType",
          ".TransactionEvent; rollupInterval: ",
          "RollupInterval",
          "; }; }; }) => Promise<",
          "FailedTransactionRateResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/transaction/charts/breakdown\": { endpoint: \"GET /internal/apm/services/{serviceName}/transaction/charts/breakdown\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ transactionName: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { transactionType: string; } & { transactionName?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<",
          "TransactionBreakdownResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/transactions/traces/samples\": { endpoint: \"GET /internal/apm/services/{serviceName}/transactions/traces/samples\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ transactionId: ",
          "StringC",
          "; traceId: ",
          "StringC",
          "; sampleRangeFrom: ",
          "Type",
          "<number, number, unknown>; sampleRangeTo: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { transactionType: string; transactionName: string; } & { transactionId?: string | undefined; traceId?: string | undefined; sampleRangeFrom?: number | undefined; sampleRangeTo?: number | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<",
          "TransactionTraceSamplesResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/transactions/charts/latency\": { endpoint: \"GET /internal/apm/services/{serviceName}/transactions/charts/latency\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; latencyAggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".avg>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p95>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p99>]>; bucketSizeInSeconds: ",
          "Type",
          "<number, number, unknown>; useDurationSummary: ",
          "Type",
          "<boolean, boolean, unknown>; }>, ",
          "PartialC",
          "<{ transactionName: ",
          "StringC",
          "; }>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>]>, ",
          "TypeC",
          "<{ documentType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".ServiceTransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionEvent>]>; rollupInterval: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "RollupInterval",
          ".OneMinute>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".TenMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".SixtyMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".None>]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { transactionType: string; latencyAggregationType: ",
          "LatencyAggregationType",
          "; bucketSizeInSeconds: number; useDurationSummary: boolean; } & { transactionName?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { offset?: string | undefined; } & { documentType: ",
          "ApmDocumentType",
          ".TransactionMetric | ",
          "ApmDocumentType",
          ".ServiceTransactionMetric | ",
          "ApmDocumentType",
          ".TransactionEvent; rollupInterval: ",
          "RollupInterval",
          "; }; }; }) => Promise<",
          "TransactionLatencyResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/transactions/groups/detailed_statistics\": { endpoint: \"GET /internal/apm/services/{serviceName}/transactions/groups/detailed_statistics\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ documentType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionEvent>]>; rollupInterval: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "RollupInterval",
          ".OneMinute>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".TenMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".SixtyMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".None>]>; }>, ",
          "TypeC",
          "<{ bucketSizeInSeconds: ",
          "Type",
          "<number, number, unknown>; useDurationSummary: ",
          "Type",
          "<boolean, boolean, unknown>; }>]>, ",
          "TypeC",
          "<{ transactionNames: ",
          "Type",
          "<string[], string, unknown>; transactionType: ",
          "StringC",
          "; latencyAggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".avg>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p95>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p99>]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { offset?: string | undefined; } & { documentType: ",
          "ApmDocumentType",
          ".TransactionMetric | ",
          "ApmDocumentType",
          ".TransactionEvent; rollupInterval: ",
          "RollupInterval",
          "; } & { bucketSizeInSeconds: number; useDurationSummary: boolean; } & { transactionNames: string[]; transactionType: string; latencyAggregationType: ",
          "LatencyAggregationType",
          "; }; }; }) => Promise<",
          "ServiceTransactionGroupDetailedStatisticsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/transactions/groups/main_statistics\": { endpoint: \"GET /internal/apm/services/{serviceName}/transactions/groups/main_statistics\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ useDurationSummary: ",
          "Type",
          "<boolean, boolean, unknown>; transactionType: ",
          "StringC",
          "; latencyAggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".avg>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p95>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p99>]>; }>, ",
          "TypeC",
          "<{ documentType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionEvent>]>; rollupInterval: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "RollupInterval",
          ".OneMinute>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".TenMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".SixtyMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".None>]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { useDurationSummary: boolean; transactionType: string; latencyAggregationType: ",
          "LatencyAggregationType",
          "; } & { documentType: ",
          "ApmDocumentType",
          ".TransactionMetric | ",
          "ApmDocumentType",
          ".TransactionEvent; rollupInterval: ",
          "RollupInterval",
          "; }; }; }) => Promise<",
          "MergedServiceTransactionGroupsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/traces/{traceId}/spans/{spanId}\": { endpoint: \"GET /internal/apm/traces/{traceId}/spans/{spanId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ traceId: ",
          "StringC",
          "; spanId: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "UnionC",
          "<[",
          "PartialC",
          "<{ parentTransactionId: ",
          "StringC",
          "; }>, ",
          "UndefinedC",
          "]>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { traceId: string; spanId: string; }; query: { start: number; end: number; } & { parentTransactionId?: string | undefined; }; }; }) => Promise<{ span?: ",
          "Span",
          " | undefined; parentTransaction?: ",
          "Transaction",
          " | undefined; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/traces/{traceId}/transactions/{transactionId}\": { endpoint: \"GET /internal/apm/traces/{traceId}/transactions/{transactionId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ traceId: ",
          "StringC",
          "; transactionId: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { traceId: string; transactionId: string; }; query: { start: number; end: number; }; }; }) => Promise<",
          "Transaction",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/traces/aggregated_critical_path\": { endpoint: \"POST /internal/apm/traces/aggregated_critical_path\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ traceIds: ",
          "ArrayC",
          "<",
          "StringC",
          ">; serviceName: ",
          "UnionC",
          "<[",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">, ",
          "NullC",
          "]>; transactionName: ",
          "UnionC",
          "<[",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">, ",
          "NullC",
          "]>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { traceIds: string[]; serviceName: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          "> | null; transactionName: ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          "> | null; } & { start: number; end: number; }; }; }) => Promise<{ criticalPath: ",
          "CriticalPathResponse",
          " | null; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/traces/find\": { endpoint: \"GET /internal/apm/traces/find\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ query: ",
          "StringC",
          "; type: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "TraceSearchType",
          ".kql>, ",
          "LiteralC",
          "<",
          "TraceSearchType",
          ".eql>]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { query: string; type: ",
          "TraceSearchType",
          "; }; }; }) => Promise<{ traceSamples: ",
          "TraceSamplesResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/transactions/{transactionId}\": { endpoint: \"GET /internal/apm/transactions/{transactionId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ transactionId: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { transactionId: string; }; query: { start: number; end: number; }; }; }) => Promise<{ transaction: ",
          "Transaction",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/traces/{traceId}/root_transaction\": { endpoint: \"GET /internal/apm/traces/{traceId}/root_transaction\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ traceId: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { traceId: string; }; query: { start: number; end: number; }; }; }) => Promise<{ transaction: ",
          "Transaction",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/traces\": { endpoint: \"GET /internal/apm/traces\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ probability: ",
          "Type",
          "<number, number, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { probability: number; }; }; }) => Promise<",
          "TopTracesPrimaryStatsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/traces/{traceId}\": { endpoint: \"GET /internal/apm/traces/{traceId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ traceId: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ entryTransactionId: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ maxTraceItems: ",
          "Type",
          "<number, number, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { traceId: string; }; query: { start: number; end: number; } & { entryTransactionId: string; } & { maxTraceItems?: number | undefined; }; }; }) => Promise<{ traceItems: ",
          "TraceItems",
          "; entryTransaction?: ",
          "Transaction",
          " | undefined; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/suggestions\": { endpoint: \"GET /internal/apm/suggestions\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ fieldName: ",
          "StringC",
          "; fieldValue: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { fieldName: string; fieldValue: string; } & { start: number; end: number; } & { serviceName?: string | undefined; }; }; }) => Promise<{ terms: string[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/service-group/counts\": { endpoint: \"GET /internal/apm/service-group/counts\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<ServiceGroupCounts>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/service-group/services\": { endpoint: \"GET /internal/apm/service-group/services\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { start: number; end: number; } & { kuery?: string | undefined; }; }; }) => Promise<{ items: ",
          "LookupServicesResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"DELETE /internal/apm/service-group\": { endpoint: \"DELETE /internal/apm/service-group\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ serviceGroupId: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { serviceGroupId: string; }; }; }) => Promise<void>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/service-group\": { endpoint: \"POST /internal/apm/service-group\"; params?: ",
          "TypeC",
          "<{ query: ",
          "UnionC",
          "<[",
          "PartialC",
          "<{ serviceGroupId: ",
          "StringC",
          "; }>, ",
          "UndefinedC",
          "]>; body: ",
          "TypeC",
          "<{ groupName: ",
          "StringC",
          "; kuery: ",
          "StringC",
          "; description: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "UndefinedC",
          "]>; color: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "UndefinedC",
          "]>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { serviceGroupId?: string | undefined; } | undefined; body: { groupName: string; kuery: string; description: string | undefined; color: string | undefined; }; }; }) => Promise<",
          "SavedServiceGroup",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/service-group\": { endpoint: \"GET /internal/apm/service-group\"; params?: ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ serviceGroup: ",
          "StringC",
          "; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { serviceGroup: string; }; }; }) => Promise<{ serviceGroup: ",
          "SavedServiceGroup",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/service-groups\": { endpoint: \"GET /internal/apm/service-groups\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ serviceGroups: ",
          "SavedServiceGroup",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/alerts_count\": { endpoint: \"GET /internal/apm/services/{serviceName}/alerts_count\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }; }; }) => Promise<{ serviceName: string; alertsCount: number; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/anomaly_charts\": { endpoint: \"GET /internal/apm/services/{serviceName}/anomaly_charts\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { transactionType: string; }; }; }) => Promise<{ allAnomalyTimeseries: ",
          "ServiceAnomalyTimeseries",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/dependencies/breakdown\": { endpoint: \"GET /internal/apm/services/{serviceName}/dependencies/breakdown\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { start: number; end: number; } & { kuery: string; }; }; }) => Promise<{ breakdown: ",
          "ServiceDependenciesBreakdownResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/dependencies\": { endpoint: \"GET /internal/apm/services/{serviceName}/dependencies\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ numBuckets: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { numBuckets: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { start: number; end: number; } & { offset?: string | undefined; }; }; }) => Promise<{ serviceDependencies: ",
          "ServiceDependenciesResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/service_overview_instances/detailed_statistics\": { endpoint: \"GET /internal/apm/services/{serviceName}/service_overview_instances/detailed_statistics\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ latencyAggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".avg>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p95>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p99>]>; transactionType: ",
          "StringC",
          "; serviceNodeIds: ",
          "Type",
          "<string[], string, unknown>; numBuckets: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { latencyAggregationType: ",
          "LatencyAggregationType",
          "; transactionType: string; serviceNodeIds: string[]; numBuckets: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { offset?: string | undefined; }; }; }) => Promise<",
          "ServiceInstancesDetailedStatisticsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/service_overview_instances/main_statistics\": { endpoint: \"GET /internal/apm/services/{serviceName}/service_overview_instances/main_statistics\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ latencyAggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".avg>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p95>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p99>]>; transactionType: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { latencyAggregationType: ",
          "LatencyAggregationType",
          "; transactionType: string; } & { offset?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<{ currentPeriod: ",
          "ServiceInstanceMainStatisticsResponse",
          "; previousPeriod: ",
          "ServiceInstanceMainStatisticsResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/throughput\": { endpoint: \"GET /internal/apm/services/{serviceName}/throughput\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; bucketSizeInSeconds: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "PartialC",
          "<{ transactionName: ",
          "StringC",
          "; }>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ documentType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".ServiceTransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionEvent>]>; rollupInterval: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "RollupInterval",
          ".OneMinute>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".TenMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".SixtyMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".None>]>; }>]>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { transactionType: string; bucketSizeInSeconds: number; } & { transactionName?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { offset?: string | undefined; } & { documentType: ",
          "ApmDocumentType",
          ".TransactionMetric | ",
          "ApmDocumentType",
          ".ServiceTransactionMetric | ",
          "ApmDocumentType",
          ".TransactionEvent; rollupInterval: ",
          "RollupInterval",
          "; }; }; }) => Promise<{ currentPeriod: ",
          "ServiceThroughputResponse",
          "; previousPeriod: ",
          "ServiceThroughputResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/service_overview_instances/details/{serviceNodeName}\": { endpoint: \"GET /internal/apm/services/{serviceName}/service_overview_instances/details/{serviceNodeName}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; serviceNodeName: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; serviceNodeName: string; }; query: { start: number; end: number; }; }; }) => Promise<",
          "ServiceInstanceMetadataDetailsResponse",
          " & ({} | ",
          "ServiceInstanceContainerMetadataDetails",
          ")>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /api/apm/services/{serviceName}/annotation 2023-10-31\": { endpoint: \"POST /api/apm/services/{serviceName}/annotation 2023-10-31\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ '@timestamp': ",
          "Type",
          "<number, string, unknown>; service: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ version: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>]>; }>, ",
          "PartialC",
          "<{ message: ",
          "StringC",
          "; tags: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; body: { '@timestamp': number; service: { version: string; } & { environment?: string | undefined; }; } & { message?: string | undefined; tags?: string[] | undefined; }; }; }) => Promise<{ _id: string; _index: string; _source: ",
          "Annotation",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /api/apm/services/{serviceName}/annotation/search 2023-10-31\": { endpoint: \"GET /api/apm/services/{serviceName}/annotation/search 2023-10-31\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { start: number; end: number; }; }; }) => Promise<",
          "ServiceAnnotationResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/node/{serviceNodeName}/metadata\": { endpoint: \"GET /internal/apm/services/{serviceName}/node/{serviceNodeName}/metadata\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; serviceNodeName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; serviceNodeName: string; }; query: { kuery: string; } & { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }; }; }) => Promise<",
          "ServiceNodeMetadataResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/transaction_types\": { endpoint: \"GET /internal/apm/services/{serviceName}/transaction_types\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ documentType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".ServiceTransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionEvent>]>; rollupInterval: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "RollupInterval",
          ".OneMinute>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".TenMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".SixtyMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".None>]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { start: number; end: number; } & { documentType: ",
          "ApmDocumentType",
          ".TransactionMetric | ",
          "ApmDocumentType",
          ".ServiceTransactionMetric | ",
          "ApmDocumentType",
          ".TransactionEvent; rollupInterval: ",
          "RollupInterval",
          "; }; }; }) => Promise<",
          "ServiceTransactionTypesResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/agent\": { endpoint: \"GET /internal/apm/services/{serviceName}/agent\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { start: number; end: number; }; }; }) => Promise<",
          "ServiceAgentResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/metadata/icons\": { endpoint: \"GET /internal/apm/services/{serviceName}/metadata/icons\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { start: number; end: number; }; }; }) => Promise<",
          "ServiceMetadataIcons",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/metadata/details\": { endpoint: \"GET /internal/apm/services/{serviceName}/metadata/details\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }; }; }) => Promise<",
          "ServiceMetadataDetails",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/services/detailed_statistics\": { endpoint: \"POST /internal/apm/services/detailed_statistics\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ probability: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ documentType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".ServiceTransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionEvent>]>; rollupInterval: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "RollupInterval",
          ".OneMinute>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".TenMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".SixtyMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".None>]>; }>]>, ",
          "TypeC",
          "<{ bucketSizeInSeconds: ",
          "Type",
          "<number, number, unknown>; }>]>; body: ",
          "TypeC",
          "<{ serviceNames: ",
          "Type",
          "<string[], string, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { offset?: string | undefined; } & { probability: number; } & { documentType: ",
          "ApmDocumentType",
          ".TransactionMetric | ",
          "ApmDocumentType",
          ".ServiceTransactionMetric | ",
          "ApmDocumentType",
          ".TransactionEvent; rollupInterval: ",
          "RollupInterval",
          "; } & { bucketSizeInSeconds: number; }; body: { serviceNames: string[]; }; }; }) => Promise<",
          "ServiceTransactionDetailedStatPeriodsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services\": { endpoint: \"GET /internal/apm/services\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceGroup: ",
          "StringC",
          "; }>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ probability: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ documentType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".ServiceTransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionEvent>]>; rollupInterval: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "RollupInterval",
          ".OneMinute>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".TenMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".SixtyMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".None>]>; }>, ",
          "TypeC",
          "<{ useDurationSummary: ",
          "Type",
          "<boolean, boolean, unknown>; }>]>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { serviceGroup?: string | undefined; } & { probability: number; } & { documentType: ",
          "ApmDocumentType",
          ".TransactionMetric | ",
          "ApmDocumentType",
          ".ServiceTransactionMetric | ",
          "ApmDocumentType",
          ".TransactionEvent; rollupInterval: ",
          "RollupInterval",
          "; } & { useDurationSummary: boolean; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<",
          "ServicesItemsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/service-map/dependency\": { endpoint: \"GET /internal/apm/service-map/dependency\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ dependencyName: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { dependencyName: string; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { start: number; end: number; } & { offset?: string | undefined; }; }; }) => Promise<",
          "ServiceMapServiceDependencyInfoResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/service-map/service/{serviceName}\": { endpoint: \"GET /internal/apm/service-map/service/{serviceName}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { start: number; end: number; } & { offset?: string | undefined; }; }; }) => Promise<",
          "ServiceMapServiceNodeInfoResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/service-map\": { endpoint: \"GET /internal/apm/service-map\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; serviceGroup: ",
          "StringC",
          "; kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { serviceName?: string | undefined; serviceGroup?: string | undefined; kuery?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { start: number; end: number; }; }; }) => Promise<",
          "GroupResourceNodesResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/observability_overview/has_data\": { endpoint: \"GET /internal/apm/observability_overview/has_data\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<",
          "HasDataResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/observability_overview\": { endpoint: \"GET /internal/apm/observability_overview\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ bucketSize: ",
          "Type",
          "<number, number, unknown>; intervalString: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { start: number; end: number; } & { bucketSize: number; intervalString: string; }; }; }) => Promise<",
          "ObservabilityOverviewResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/metrics/serverless/active_instances\": { endpoint: \"GET /internal/apm/services/{serviceName}/metrics/serverless/active_instances\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ serverlessId: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { serverlessId?: string | undefined; }; }; }) => Promise<{ activeInstances: ",
          "ActiveInstanceOverview",
          "[]; timeseries: ",
          "Coordinate",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/metrics/serverless/functions_overview\": { endpoint: \"GET /internal/apm/services/{serviceName}/metrics/serverless/functions_overview\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<{ serverlessFunctionsOverview: ",
          "ServerlessFunctionsOverviewResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/metrics/serverless/summary\": { endpoint: \"GET /internal/apm/services/{serviceName}/metrics/serverless/summary\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ serverlessId: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { serverlessId?: string | undefined; }; }; }) => Promise<",
          "ServerlessSummaryResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/metrics/serverless/charts\": { endpoint: \"GET /internal/apm/services/{serviceName}/metrics/serverless/charts\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ serverlessId: ",
          "StringC",
          "; }>, ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ documentType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionMetric>, ",
          "LiteralC",
          "<",
          "ApmDocumentType",
          ".TransactionEvent>]>; rollupInterval: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "RollupInterval",
          ".OneMinute>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".TenMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".SixtyMinutes>, ",
          "LiteralC",
          "<",
          "RollupInterval",
          ".None>]>; }>, ",
          "TypeC",
          "<{ bucketSizeInSeconds: ",
          "Type",
          "<number, number, unknown>; }>]>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { serverlessId?: string | undefined; } & { documentType: ",
          "ApmDocumentType",
          ".TransactionMetric | ",
          "ApmDocumentType",
          ".TransactionEvent; rollupInterval: ",
          "RollupInterval",
          "; } & { bucketSizeInSeconds: number; }; }; }) => Promise<{ charts: ",
          "FetchAndTransformMetrics",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/metrics/nodes\": { endpoint: \"GET /internal/apm/services/{serviceName}/metrics/nodes\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { kuery: string; } & { start: number; end: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; }; }; }) => Promise<{ serviceNodes: ",
          "ServiceNodesResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/metrics/charts\": { endpoint: \"GET /internal/apm/services/{serviceName}/metrics/charts\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ agentName: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ serviceNodeName: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { agentName: string; } & { serviceNodeName?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<{ charts: ",
          "FetchAndTransformMetrics",
          "[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/latency/overall_distribution/transactions\": { endpoint: \"POST /internal/apm/latency/overall_distribution/transactions\"; params?: ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; termFilters: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ fieldName: ",
          "StringC",
          "; fieldValue: ",
          "UnionC",
          "<[",
          "StringC",
          ", ",
          "Type",
          "<number, number, unknown>]>; }>>; durationMin: ",
          "Type",
          "<number, number, unknown>; durationMax: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ percentileThreshold: ",
          "Type",
          "<number, number, unknown>; chartType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "LatencyDistributionChartType",
          ".transactionLatency>, ",
          "LiteralC",
          "<",
          "LatencyDistributionChartType",
          ".latencyCorrelations>, ",
          "LiteralC",
          "<",
          "LatencyDistributionChartType",
          ".failedTransactionsCorrelations>, ",
          "LiteralC",
          "<",
          "LatencyDistributionChartType",
          ".dependencyLatency>]>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { body: { serviceName?: string | undefined; transactionName?: string | undefined; transactionType?: string | undefined; termFilters?: { fieldName: string; fieldValue: string | number; }[] | undefined; durationMin?: number | undefined; durationMax?: number | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { percentileThreshold: number; chartType: ",
          "LatencyDistributionChartType",
          "; }; }; }) => Promise<",
          "OverallLatencyDistributionResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/errors/{groupId}/top_erroneous_transactions\": { endpoint: \"GET /internal/apm/services/{serviceName}/errors/{groupId}/top_erroneous_transactions\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; groupId: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ numBuckets: ",
          "Type",
          "<number, number, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; groupId: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { offset?: string | undefined; } & { numBuckets: number; }; }; }) => Promise<",
          "TopErroneousTransactionsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/errors/distribution\": { endpoint: \"GET /internal/apm/services/{serviceName}/errors/distribution\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ groupId: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { groupId?: string | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { offset?: string | undefined; }; }; }) => Promise<",
          "ErrorDistributionResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/errors/{groupId}/error/{errorId}\": { endpoint: \"GET /internal/apm/services/{serviceName}/errors/{groupId}/error/{errorId}\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; groupId: ",
          "StringC",
          "; errorId: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; groupId: string; errorId: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<",
          "ErrorSampleDetailsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/errors/{groupId}/samples\": { endpoint: \"GET /internal/apm/services/{serviceName}/errors/{groupId}/samples\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; groupId: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; groupId: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<",
          "ErrorGroupSampleIdsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/services/{serviceName}/errors/groups/detailed_statistics\": { endpoint: \"POST /internal/apm/services/{serviceName}/errors/groups/detailed_statistics\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ offset: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ numBuckets: ",
          "Type",
          "<number, number, unknown>; }>]>; body: ",
          "TypeC",
          "<{ groupIds: ",
          "Type",
          "<string[], string, unknown>; }>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; } & { offset?: string | undefined; } & { numBuckets: number; }; body: { groupIds: string[]; }; }; }) => Promise<",
          "ErrorGroupPeriodsResponse",
          ">; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/errors/groups/main_statistics_by_transaction_name\": { endpoint: \"GET /internal/apm/services/{serviceName}/errors/groups/main_statistics_by_transaction_name\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; maxNumberOfErrorGroups: ",
          "Type",
          "<number, number, unknown>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { transactionType: string; transactionName: string; maxNumberOfErrorGroups: number; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<{ errorGroups: ",
          "ErrorGroupMainStatisticsResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/services/{serviceName}/errors/groups/main_statistics\": { endpoint: \"GET /internal/apm/services/{serviceName}/errors/groups/main_statistics\"; params?: ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ sortField: ",
          "StringC",
          "; sortDirection: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"asc\">, ",
          "LiteralC",
          "<\"desc\">]>; }>, ",
          "TypeC",
          "<{ environment: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"ENVIRONMENT_NOT_DEFINED\">, ",
          "LiteralC",
          "<\"ENVIRONMENT_ALL\">, ",
          "BrandC",
          "<",
          "StringC",
          ", ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">]>; }>, ",
          "TypeC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { path: { serviceName: string; }; query: { sortField?: string | undefined; sortDirection?: \"asc\" | \"desc\" | undefined; } & { environment: \"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">; } & { kuery: string; } & { start: number; end: number; }; }; }) => Promise<{ errorGroups: ",
          "ErrorGroupMainStatisticsResponse",
          "; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/environments\": { endpoint: \"GET /internal/apm/environments\"; params?: ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }> | undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          " & { params: { query: { serviceName?: string | undefined; } & { start: number; end: number; }; }; }) => Promise<{ environments: (\"ENVIRONMENT_NOT_DEFINED\" | \"ENVIRONMENT_ALL\" | ",
          "Branded",
          "<string, ",
          {
            "pluginId": "@kbn/io-ts-utils",
            "scope": "common",
            "docId": "kibKbnIoTsUtilsPluginApi",
            "section": "def-common.NonEmptyStringBrand",
            "text": "NonEmptyStringBrand"
          },
          ">)[]; }>; } & ",
          "APMRouteCreateOptions",
          "; \"GET /internal/apm/data_view/title\": { endpoint: \"GET /internal/apm/data_view/title\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ apmDataViewTitle: string; }>; } & ",
          "APMRouteCreateOptions",
          "; \"POST /internal/apm/data_view/static\": { endpoint: \"POST /internal/apm/data_view/static\"; params?: undefined; handler: ({}: ",
          "APMRouteHandlerResources",
          ") => Promise<{ created: boolean; dataView: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          "; } | { created: boolean; reason?: string | undefined; }>; } & ",
          "APMRouteCreateOptions",
          "; }"
        ],
        "path": "x-pack/plugins/apm/server/routes/apm_routes/get_global_apm_server_route_repository.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "apm",
      "id": "def-server.APMPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "APMPluginSetup",
      "description": [],
      "path": "x-pack/plugins/apm/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "apm",
          "id": "def-server.APMPluginSetup.config$",
          "type": "Object",
          "tags": [],
          "label": "config$",
          "description": [],
          "signature": [
            "Observable",
            "<Readonly<{} & { enabled: boolean; autoCreateApmDataView: boolean; serviceMapEnabled: boolean; serviceMapFingerprintBucketSize: number; serviceMapFingerprintGlobalBucketSize: number; serviceMapTraceIdBucketSize: number; serviceMapTraceIdGlobalBucketSize: number; serviceMapMaxTracesPerRequest: number; serviceMapTerminateAfter: number; serviceMapMaxTraces: number; ui: Readonly<{} & { enabled: boolean; maxTraceItems: number; }>; searchAggregatedTransactions: ",
            "SearchAggregatedTransactionSetting",
            "; telemetryCollectionEnabled: boolean; metricsInterval: number; agent: Readonly<{} & { migrations: Readonly<{} & { enabled: boolean; }>; }>; forceSyntheticSource: boolean; latestAgentVersionsUrl: string; serverless: Readonly<{} & { enabled: true; }>; serverlessOnboarding: boolean; managedServiceUrl: string; featureFlags: Readonly<{} & { agentConfigurationAvailable: boolean; configurableIndicesAvailable: boolean; infrastructureTabAvailable: boolean; infraUiAvailable: boolean; migrationToFleetAvailable: boolean; sourcemapApiAvailable: boolean; storageExplorerAvailable: boolean; }>; }>>"
          ],
          "path": "x-pack/plugins/apm/server/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "apm",
        "id": "def-common.getAggregatedCriticalPathRootNodes",
        "type": "Function",
        "tags": [],
        "label": "getAggregatedCriticalPathRootNodes",
        "description": [],
        "signature": [
          "(params: { criticalPath: ",
          "CriticalPathResponse",
          "; }) => { rootNodes: ",
          "CriticalPathTreeNode",
          "[]; maxDepth: number; numNodes: number; }"
        ],
        "path": "x-pack/plugins/apm/common/critical_path/get_aggregated_critical_path_root_nodes.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "apm",
            "id": "def-common.getAggregatedCriticalPathRootNodes.$1",
            "type": "Object",
            "tags": [],
            "label": "params",
            "description": [],
            "path": "x-pack/plugins/apm/common/critical_path/get_aggregated_critical_path_root_nodes.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "apm",
                "id": "def-common.getAggregatedCriticalPathRootNodes.$1.criticalPath",
                "type": "Object",
                "tags": [],
                "label": "criticalPath",
                "description": [],
                "signature": [
                  "CriticalPathResponse"
                ],
                "path": "x-pack/plugins/apm/common/critical_path/get_aggregated_critical_path_root_nodes.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}