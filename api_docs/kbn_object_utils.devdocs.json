{
  "id": "@kbn/object-utils",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "@kbn/object-utils",
        "id": "def-common.calculateObjectDiff",
        "type": "Function",
        "tags": [],
        "label": "calculateObjectDiff",
        "description": [
          "\nCompares two JSON objects and calculates the added and removed properties, including nested properties."
        ],
        "signature": [
          "(oldObj: TBase, newObj: TCompare | undefined) => ObjectDiffResult<TBase, TCompare>"
        ],
        "path": "src/platform/packages/shared/kbn-object-utils/src/calculate_object_diff.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/object-utils",
            "id": "def-common.calculateObjectDiff.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "oldObj",
            "description": [
              "- The base object."
            ],
            "signature": [
              "TBase"
            ],
            "path": "src/platform/packages/shared/kbn-object-utils/src/calculate_object_diff.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/object-utils",
            "id": "def-common.calculateObjectDiff.$2",
            "type": "Uncategorized",
            "tags": [],
            "label": "newObj",
            "description": [
              "- The comparison object."
            ],
            "signature": [
              "TCompare | undefined"
            ],
            "path": "src/platform/packages/shared/kbn-object-utils/src/calculate_object_diff.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "An object containing added and removed properties."
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/object-utils",
        "id": "def-common.flattenObject",
        "type": "Function",
        "tags": [],
        "label": "flattenObject",
        "description": [
          "\nReturns a flattened version of the input object also accounting for nested properties."
        ],
        "signature": [
          "(obj: Record<PropertyKey, unknown>, parentKey: string) => Record<PropertyKey, unknown>"
        ],
        "path": "src/platform/packages/shared/kbn-object-utils/src/flatten_object.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/object-utils",
            "id": "def-common.flattenObject.$1",
            "type": "Object",
            "tags": [],
            "label": "obj",
            "description": [
              "- The input object."
            ],
            "signature": [
              "Record<PropertyKey, unknown>"
            ],
            "path": "src/platform/packages/shared/kbn-object-utils/src/flatten_object.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/object-utils",
            "id": "def-common.flattenObject.$2",
            "type": "string",
            "tags": [],
            "label": "parentKey",
            "description": [
              "- The initial key used for recursive flattening."
            ],
            "signature": [
              "string"
            ],
            "path": "src/platform/packages/shared/kbn-object-utils/src/flatten_object.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "An object containing all the flattened properties."
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}