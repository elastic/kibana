{
  "id": "spacesOss",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "id": "def-public.LegacyUrlConflictProps",
        "type": "Interface",
        "label": "LegacyUrlConflictProps",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.LegacyUrlConflictProps.objectNoun",
            "type": "string",
            "label": "objectNoun",
            "description": [
              "\nThe string that is used to describe the object in the callout, e.g., _There is a legacy URL for this page that points to a different\n**object**_.\n\nDefault value is 'object'."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 252
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.LegacyUrlConflictProps.currentObjectId",
            "type": "string",
            "label": "currentObjectId",
            "description": [
              "\nThe ID of the object that is currently shown on the page."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 256
            }
          },
          {
            "tags": [],
            "id": "def-public.LegacyUrlConflictProps.otherObjectId",
            "type": "string",
            "label": "otherObjectId",
            "description": [
              "\nThe ID of the other object that the legacy URL alias points to."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 260
            }
          },
          {
            "tags": [],
            "id": "def-public.LegacyUrlConflictProps.otherObjectPath",
            "type": "string",
            "label": "otherObjectPath",
            "description": [
              "\nThe path to use for the new URL, optionally including `search` and/or `hash` URL components."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 264
            }
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 245
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ShareToSpaceFlyoutProps",
        "type": "Interface",
        "label": "ShareToSpaceFlyoutProps",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.ShareToSpaceFlyoutProps.savedObjectTarget",
            "type": "Object",
            "label": "savedObjectTarget",
            "description": [
              "\nThe object to render the flyout for."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 130
            },
            "signature": [
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.ShareToSpaceSavedObjectTarget",
                "text": "ShareToSpaceSavedObjectTarget"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceFlyoutProps.flyoutIcon",
            "type": "string",
            "label": "flyoutIcon",
            "description": [
              "\nThe EUI icon that is rendered in the flyout's title.\n\nDefault is 'share'."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 136
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceFlyoutProps.flyoutTitle",
            "type": "string",
            "label": "flyoutTitle",
            "description": [
              "\nThe string that is rendered in the flyout's title.\n\nDefault is 'Edit spaces for object'."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 142
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceFlyoutProps.enableCreateCopyCallout",
            "type": "CompoundType",
            "label": "enableCreateCopyCallout",
            "description": [
              "\nWhen enabled, if the object is not yet shared to multiple spaces, a callout will be displayed that suggests the user might want to\ncreate a copy instead.\n\nDefault value is false."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 149
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceFlyoutProps.enableCreateNewSpaceLink",
            "type": "CompoundType",
            "label": "enableCreateNewSpaceLink",
            "description": [
              "\nWhen enabled, if no other spaces exist _and_ the user has the appropriate privileges, a sentence will be displayed that suggests the\nuser might want to create a space.\n\nDefault value is false."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 156
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceFlyoutProps.behaviorContext",
            "type": "CompoundType",
            "label": "behaviorContext",
            "description": [
              "\nWhen set to 'within-space' (default), the flyout behaves like it is running on a page within the active space, and it will prevent the\nuser from removing the object from the active space.\n\nConversely, when set to 'outside-space', the flyout behaves like it is running on a page outside of any space, so it will allow the\nuser to remove the object from the active space."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 164
            },
            "signature": [
              "\"within-space\" | \"outside-space\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceFlyoutProps.changeSpacesHandler",
            "type": "Function",
            "label": "changeSpacesHandler",
            "description": [
              "\nOptional handler that is called when the user has saved changes and there are spaces to be added to and/or removed from the object. If\nthis is not defined, a default handler will be used that calls `/api/spaces/_share_saved_object_add` and/or\n`/api/spaces/_share_saved_object_remove` and displays toast(s) indicating what occurred."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 170
            },
            "signature": [
              "((spacesToAdd: string[], spacesToRemove: string[]) => Promise<void>) | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceFlyoutProps.onUpdate",
            "type": "Function",
            "label": "onUpdate",
            "description": [
              "\nOptional callback when the target object is updated."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 174
            },
            "signature": [
              "(() => void) | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceFlyoutProps.onClose",
            "type": "Function",
            "label": "onClose",
            "description": [
              "\nOptional callback when the flyout is closed."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 178
            },
            "signature": [
              "(() => void) | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 126
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ShareToSpaceSavedObjectTarget",
        "type": "Interface",
        "label": "ShareToSpaceSavedObjectTarget",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.ShareToSpaceSavedObjectTarget.type",
            "type": "string",
            "label": "type",
            "description": [
              "\nThe object's type."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 188
            }
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceSavedObjectTarget.id",
            "type": "string",
            "label": "id",
            "description": [
              "\nThe object's ID."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 192
            }
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceSavedObjectTarget.namespaces",
            "type": "Array",
            "label": "namespaces",
            "description": [
              "\nThe namespaces that the object currently exists in."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 196
            },
            "signature": [
              "string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceSavedObjectTarget.icon",
            "type": "string",
            "label": "icon",
            "description": [
              "\nThe EUI icon that is rendered in the flyout's subtitle.\n\nDefault is 'empty'."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 202
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceSavedObjectTarget.title",
            "type": "string",
            "label": "title",
            "description": [
              "\nThe string that is rendered in the flyout's subtitle.\n\nDefault is `${type} [id=${id}]`."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 208
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ShareToSpaceSavedObjectTarget.noun",
            "type": "string",
            "label": "noun",
            "description": [
              "\nThe string that is used to describe the object in several places, e.g., _Make **object** available in selected spaces only_.\n\nDefault value is 'object'."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 214
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 184
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SpaceAvatarProps",
        "type": "Interface",
        "label": "SpaceAvatarProps",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SpaceAvatarProps.space",
            "type": "Object",
            "label": "space",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 271
            },
            "signature": [
              "Partial<",
              {
                "pluginId": "spacesOss",
                "scope": "common",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SpaceAvatarProps.size",
            "type": "CompoundType",
            "label": "size",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 272
            },
            "signature": [
              "\"m\" | \"s\" | \"l\" | \"xl\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SpaceAvatarProps.className",
            "type": "string",
            "label": "className",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 273
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SpaceAvatarProps.announceSpaceName",
            "type": "CompoundType",
            "label": "announceSpaceName",
            "description": [
              "\nWhen enabled, allows EUI to provide an aria-label for this component, which is announced on screen readers.\n\nDefault value is true."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 279
            },
            "signature": [
              "boolean | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 270
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SpaceListProps",
        "type": "Interface",
        "label": "SpaceListProps",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SpaceListProps.namespaces",
            "type": "Array",
            "label": "namespaces",
            "description": [
              "\nThe namespaces of a saved object to render into a corresponding list of spaces."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 224
            },
            "signature": [
              "string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SpaceListProps.displayLimit",
            "type": "number",
            "label": "displayLimit",
            "description": [
              "\nOptional limit to the number of spaces that can be displayed in the list. If the number of spaces exceeds this limit, they will be\nhidden behind a \"show more\" button. Set to 0 to disable.\n\nDefault value is 5."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 231
            },
            "signature": [
              "number | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SpaceListProps.behaviorContext",
            "type": "CompoundType",
            "label": "behaviorContext",
            "description": [
              "\nWhen set to 'within-space' (default), the space list behaves like it is running on a page within the active space, and it will omit the\nactive space (e.g., it displays a list of all the _other_ spaces that an object is shared to).\n\nConversely, when set to 'outside-space', the space list behaves like it is running on a page outside of any space, so it will not omit\nthe active space."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 239
            },
            "signature": [
              "\"within-space\" | \"outside-space\" | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 220
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SpacesApi",
        "type": "Interface",
        "label": "SpacesApi",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SpacesApi.activeSpace$",
            "type": "Object",
            "label": "activeSpace$",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 18
            },
            "signature": [
              "Observable",
              "<",
              {
                "pluginId": "spacesOss",
                "scope": "common",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ]
          },
          {
            "id": "def-public.SpacesApi.getActiveSpace",
            "type": "Function",
            "label": "getActiveSpace",
            "signature": [
              "() => Promise<",
              {
                "pluginId": "spacesOss",
                "scope": "common",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "description": [],
            "children": [],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 19
            }
          },
          {
            "tags": [],
            "id": "def-public.SpacesApi.ui",
            "type": "Object",
            "label": "ui",
            "description": [
              "\nUI API to use to add spaces capabilities to an application"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 23
            },
            "signature": [
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.SpacesApiUi",
                "text": "SpacesApiUi"
              }
            ]
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 17
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SpacesApiUi",
        "type": "Interface",
        "label": "SpacesApiUi",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SpacesApiUi.components",
            "type": "Object",
            "label": "components",
            "description": [
              "\nLazy-loadable {@link SpacesApiUiComponent | React components} to support the spaces feature."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 40
            },
            "signature": [
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.SpacesApiUiComponent",
                "text": "SpacesApiUiComponent"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.SpacesApiUi.redirectLegacyUrl",
            "type": "Function",
            "label": "redirectLegacyUrl",
            "description": [
              "\nRedirect the user from a legacy URL to a new URL. This needs to be used if a call to `SavedObjectsClient.resolve()` results in an\n`\"aliasMatch\"` outcome, which indicates that the user has loaded the page using a legacy URL. Calling this function will trigger a\nclient-side redirect to the new URL, and it will display a toast to the user.\n\nConsumers need to determine the local path for the new URL on their own, based on the object ID that was used to call\n`SavedObjectsClient.resolve()` (old ID) and the object ID in the result (new ID). For example...\n\nThe old object ID is `workpad-123` and the new object ID is `workpad-e08b9bdb-ec14-4339-94c4-063bddfd610e`.\n\nFull legacy URL: `https://localhost:5601/app/canvas#/workpad/workpad-123/page/1`\n\nNew URL path: `#/workpad/workpad-e08b9bdb-ec14-4339-94c4-063bddfd610e/page/1`\n\nThe protocol, hostname, port, base path, and app path are automatically included.\n"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 61
            },
            "signature": [
              "(path: string, objectNoun?: string | undefined) => Promise<void>"
            ]
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 36
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SpacesApiUiComponent",
        "type": "Interface",
        "label": "SpacesApiUiComponent",
        "description": [
          "\nReact UI components to be used to display the spaces feature in any application.\n"
        ],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SpacesApiUiComponent.getSpacesContextProvider",
            "type": "Function",
            "label": "getSpacesContextProvider",
            "description": [
              "\nProvides a context that is required to render some Spaces components."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 73
            },
            "signature": [
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.LazyComponentFn",
                "text": "LazyComponentFn"
              },
              "<",
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.SpacesContextProps",
                "text": "SpacesContextProps"
              },
              ">"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SpacesApiUiComponent.getShareToSpaceFlyout",
            "type": "Function",
            "label": "getShareToSpaceFlyout",
            "description": [
              "\nDisplays a flyout to edit the spaces that an object is shared to.\n\nNote: must be rendered inside of a SpacesContext."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 79
            },
            "signature": [
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.LazyComponentFn",
                "text": "LazyComponentFn"
              },
              "<",
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.ShareToSpaceFlyoutProps",
                "text": "ShareToSpaceFlyoutProps"
              },
              ">"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SpacesApiUiComponent.getSpaceList",
            "type": "Function",
            "label": "getSpaceList",
            "description": [
              "\nDisplays a corresponding list of spaces for a given list of saved object namespaces. It shows up to five spaces (and an indicator for\nany number of spaces that the user is not authorized to see) by default. If more than five named spaces would be displayed, the extras\n(along with the unauthorized spaces indicator, if present) are hidden behind a button. If '*' (aka \"All spaces\") is present, it\nsupersedes all of the above and just displays a single badge without a button.\n\nNote: must be rendered inside of a SpacesContext."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 88
            },
            "signature": [
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.LazyComponentFn",
                "text": "LazyComponentFn"
              },
              "<",
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.SpaceListProps",
                "text": "SpaceListProps"
              },
              ">"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SpacesApiUiComponent.getLegacyUrlConflict",
            "type": "Function",
            "label": "getLegacyUrlConflict",
            "description": [
              "\nDisplays a callout that needs to be used if a call to `SavedObjectsClient.resolve()` results in an `\"conflict\"` outcome, which\nindicates that the user has loaded the page which is associated directly with one object (A), *and* with a legacy URL that points to a\ndifferent object (B).\n\nIn this case, `SavedObjectsClient.resolve()` has returned object A. This component displays a warning callout to the user explaining\nthat there is a conflict, and it includes a button that will redirect the user to object B when clicked.\n\nConsumers need to determine the local path for the new URL on their own, based on the object ID that was used to call\n`SavedObjectsClient.resolve()` (A) and the `aliasTargetId` value in the response (B). For example...\n\nA is `workpad-123` and B is `workpad-e08b9bdb-ec14-4339-94c4-063bddfd610e`.\n\nFull legacy URL: `https://localhost:5601/app/canvas#/workpad/workpad-123/page/1`\n\nNew URL path: `#/workpad/workpad-e08b9bdb-ec14-4339-94c4-063bddfd610e/page/1`"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 106
            },
            "signature": [
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.LazyComponentFn",
                "text": "LazyComponentFn"
              },
              "<",
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.LegacyUrlConflictProps",
                "text": "LegacyUrlConflictProps"
              },
              ">"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SpacesApiUiComponent.getSpaceAvatar",
            "type": "Function",
            "label": "getSpaceAvatar",
            "description": [
              "\nDisplays an avatar for the given space."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 110
            },
            "signature": [
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.LazyComponentFn",
                "text": "LazyComponentFn"
              },
              "<",
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.SpaceAvatarProps",
                "text": "SpaceAvatarProps"
              },
              ">"
            ]
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 69
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SpacesAvailableStartContract",
        "type": "Interface",
        "label": "SpacesAvailableStartContract",
        "signature": [
          {
            "pluginId": "spacesOss",
            "scope": "public",
            "docId": "kibSpacesOssPluginApi",
            "section": "def-public.SpacesAvailableStartContract",
            "text": "SpacesAvailableStartContract"
          },
          " extends ",
          {
            "pluginId": "spacesOss",
            "scope": "public",
            "docId": "kibSpacesOssPluginApi",
            "section": "def-public.SpacesApi",
            "text": "SpacesApi"
          }
        ],
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.SpacesAvailableStartContract.isSpacesAvailable",
            "type": "boolean",
            "label": "isSpacesAvailable",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/public/types.ts",
              "lineNumber": 12
            },
            "signature": [
              "true"
            ]
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/types.ts",
          "lineNumber": 11
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SpacesContextProps",
        "type": "Interface",
        "label": "SpacesContextProps",
        "description": [],
        "tags": [
          "public"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-public.SpacesContextProps.feature",
            "type": "string",
            "label": "feature",
            "description": [
              "\nIf a feature is specified, all Spaces components will treat it appropriately if the feature is disabled in a given Space."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 120
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 116
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SpacesUnavailableStartContract",
        "type": "Interface",
        "label": "SpacesUnavailableStartContract",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.SpacesUnavailableStartContract.isSpacesAvailable",
            "type": "boolean",
            "label": "isSpacesAvailable",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/public/types.ts",
              "lineNumber": 16
            },
            "signature": [
              "false"
            ]
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/types.ts",
          "lineNumber": 15
        },
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "id": "def-public.LazyComponentFn",
        "type": "Type",
        "label": "LazyComponentFn",
        "tags": [
          "public"
        ],
        "description": [
          "\nFunction that returns a promise for a lazy-loadable component.\n"
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 31
        },
        "signature": [
          "(props: T) => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>"
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "id": "def-public.SpacesOssPluginSetup",
      "type": "Interface",
      "label": "SpacesOssPluginSetup",
      "description": [],
      "tags": [],
      "children": [
        {
          "id": "def-public.SpacesOssPluginSetup.registerSpacesApi",
          "type": "Function",
          "label": "registerSpacesApi",
          "signature": [
            "(provider: ",
            {
              "pluginId": "spacesOss",
              "scope": "public",
              "docId": "kibSpacesOssPluginApi",
              "section": "def-public.SpacesApi",
              "text": "SpacesApi"
            },
            ") => void"
          ],
          "description": [
            "\nRegister a provider for the Spaces API.\n\nOnly one provider can be registered, subsequent calls to this method will fail."
          ],
          "children": [
            {
              "type": "Object",
              "label": "provider",
              "isRequired": true,
              "signature": [
                {
                  "pluginId": "spacesOss",
                  "scope": "public",
                  "docId": "kibSpacesOssPluginApi",
                  "section": "def-public.SpacesApi",
                  "text": "SpacesApi"
                }
              ],
              "description": [],
              "source": {
                "path": "src/plugins/spaces_oss/public/types.ts",
                "lineNumber": 25
              }
            }
          ],
          "tags": [],
          "returnComment": [],
          "source": {
            "path": "src/plugins/spaces_oss/public/types.ts",
            "lineNumber": 25
          }
        }
      ],
      "source": {
        "path": "src/plugins/spaces_oss/public/types.ts",
        "lineNumber": 19
      },
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "id": "def-public.SpacesOssPluginStart",
      "type": "Type",
      "label": "SpacesOssPluginStart",
      "tags": [],
      "description": [],
      "source": {
        "path": "src/plugins/spaces_oss/public/types.ts",
        "lineNumber": 28
      },
      "signature": [
        {
          "pluginId": "spacesOss",
          "scope": "public",
          "docId": "kibSpacesOssPluginApi",
          "section": "def-public.SpacesAvailableStartContract",
          "text": "SpacesAvailableStartContract"
        },
        " | ",
        {
          "pluginId": "spacesOss",
          "scope": "public",
          "docId": "kibSpacesOssPluginApi",
          "section": "def-public.SpacesUnavailableStartContract",
          "text": "SpacesUnavailableStartContract"
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "id": "def-common.Space",
        "type": "Interface",
        "label": "Space",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-common.Space.id",
            "type": "string",
            "label": "id",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 10
            }
          },
          {
            "tags": [],
            "id": "def-common.Space.name",
            "type": "string",
            "label": "name",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 11
            }
          },
          {
            "tags": [],
            "id": "def-common.Space.description",
            "type": "string",
            "label": "description",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 12
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-common.Space.color",
            "type": "string",
            "label": "color",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 13
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-common.Space.initials",
            "type": "string",
            "label": "initials",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 14
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-common.Space.disabledFeatures",
            "type": "Array",
            "label": "disabledFeatures",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 15
            },
            "signature": [
              "string[]"
            ]
          },
          {
            "tags": [],
            "id": "def-common.Space._reserved",
            "type": "CompoundType",
            "label": "_reserved",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 16
            },
            "signature": [
              "boolean | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-common.Space.imageUrl",
            "type": "string",
            "label": "imageUrl",
            "description": [],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 17
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/common/types.ts",
          "lineNumber": 9
        },
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": []
  }
}