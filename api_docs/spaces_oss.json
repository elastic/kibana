{
  "id": "spacesOss",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "spacesOss",
        "id": "def-public.LegacyUrlConflictProps",
        "type": "Interface",
        "tags": [],
        "label": "LegacyUrlConflictProps",
        "description": [
          "\nProperties for the LegacyUrlConflict component."
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 254
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.LegacyUrlConflictProps.objectNoun",
            "type": "string",
            "tags": [],
            "label": "objectNoun",
            "description": [
              "\nThe string that is used to describe the object in the callout, e.g., _There is a legacy URL for this page that points to a different\n**object**_.\n\nDefault value is 'object'."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 261
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.LegacyUrlConflictProps.currentObjectId",
            "type": "string",
            "tags": [],
            "label": "currentObjectId",
            "description": [
              "\nThe ID of the object that is currently shown on the page."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 265
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.LegacyUrlConflictProps.otherObjectId",
            "type": "string",
            "tags": [],
            "label": "otherObjectId",
            "description": [
              "\nThe ID of the other object that the legacy URL alias points to."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 269
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.LegacyUrlConflictProps.otherObjectPath",
            "type": "string",
            "tags": [],
            "label": "otherObjectPath",
            "description": [
              "\nThe path to use for the new URL, optionally including `search` and/or `hash` URL components."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 273
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spacesOss",
        "id": "def-public.ShareToSpaceFlyoutProps",
        "type": "Interface",
        "tags": [],
        "label": "ShareToSpaceFlyoutProps",
        "description": [
          "\nProperties for the ShareToSpaceFlyout."
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 131
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceFlyoutProps.savedObjectTarget",
            "type": "Object",
            "tags": [],
            "label": "savedObjectTarget",
            "description": [
              "\nThe object to render the flyout for."
            ],
            "signature": [
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.ShareToSpaceSavedObjectTarget",
                "text": "ShareToSpaceSavedObjectTarget"
              }
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 135
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceFlyoutProps.flyoutIcon",
            "type": "string",
            "tags": [],
            "label": "flyoutIcon",
            "description": [
              "\nThe EUI icon that is rendered in the flyout's title.\n\nDefault is 'share'."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 141
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceFlyoutProps.flyoutTitle",
            "type": "string",
            "tags": [],
            "label": "flyoutTitle",
            "description": [
              "\nThe string that is rendered in the flyout's title.\n\nDefault is 'Edit spaces for object'."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 147
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceFlyoutProps.enableCreateCopyCallout",
            "type": "CompoundType",
            "tags": [],
            "label": "enableCreateCopyCallout",
            "description": [
              "\nWhen enabled, if the object is not yet shared to multiple spaces, a callout will be displayed that suggests the user might want to\ncreate a copy instead.\n\nDefault value is false."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 154
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceFlyoutProps.enableCreateNewSpaceLink",
            "type": "CompoundType",
            "tags": [],
            "label": "enableCreateNewSpaceLink",
            "description": [
              "\nWhen enabled, if no other spaces exist _and_ the user has the appropriate privileges, a sentence will be displayed that suggests the\nuser might want to create a space.\n\nDefault value is false."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 161
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceFlyoutProps.behaviorContext",
            "type": "CompoundType",
            "tags": [],
            "label": "behaviorContext",
            "description": [
              "\nWhen set to 'within-space' (default), the flyout behaves like it is running on a page within the active space, and it will prevent the\nuser from removing the object from the active space.\n\nConversely, when set to 'outside-space', the flyout behaves like it is running on a page outside of any space, so it will allow the\nuser to remove the object from the active space."
            ],
            "signature": [
              "\"within-space\" | \"outside-space\" | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 169
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceFlyoutProps.changeSpacesHandler",
            "type": "Function",
            "tags": [],
            "label": "changeSpacesHandler",
            "description": [
              "\nOptional handler that is called when the user has saved changes and there are spaces to be added to and/or removed from the object and\nits relatives. If this is not defined, a default handler will be used that calls `/api/spaces/_update_objects_spaces` and displays a\ntoast indicating what occurred."
            ],
            "signature": [
              "((objects: { type: string; id: string; }[], spacesToAdd: string[], spacesToRemove: string[]) => Promise<void>) | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 175
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceFlyoutProps.onUpdate",
            "type": "Function",
            "tags": [],
            "label": "onUpdate",
            "description": [
              "\nOptional callback when the target object and its relatives are updated."
            ],
            "signature": [
              "((updatedObjects: { type: string; id: string; }[]) => void) | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 183
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceFlyoutProps.onClose",
            "type": "Function",
            "tags": [],
            "label": "onClose",
            "description": [
              "\nOptional callback when the flyout is closed."
            ],
            "signature": [
              "(() => void) | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 187
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spacesOss",
        "id": "def-public.ShareToSpaceSavedObjectTarget",
        "type": "Interface",
        "tags": [],
        "label": "ShareToSpaceSavedObjectTarget",
        "description": [
          "\nDescribes the target saved object during a share operation."
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 193
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceSavedObjectTarget.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nThe object's type."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 197
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceSavedObjectTarget.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nThe object's ID."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 201
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceSavedObjectTarget.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nThe namespaces that the object currently exists in."
            ],
            "signature": [
              "string[]"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 205
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceSavedObjectTarget.icon",
            "type": "string",
            "tags": [],
            "label": "icon",
            "description": [
              "\nThe EUI icon that is rendered in the flyout's subtitle.\n\nDefault is 'empty'."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 211
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceSavedObjectTarget.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "\nThe string that is rendered in the flyout's subtitle.\n\nDefault is `${type} [id=${id}]`."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 217
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.ShareToSpaceSavedObjectTarget.noun",
            "type": "string",
            "tags": [],
            "label": "noun",
            "description": [
              "\nThe string that is used to describe the object in several places, e.g., _Make **object** available in selected spaces only_.\n\nDefault value is 'object'."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 223
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spacesOss",
        "id": "def-public.SpaceAvatarProps",
        "type": "Interface",
        "tags": [],
        "label": "SpaceAvatarProps",
        "description": [
          "\nProperties for the SpaceAvatar component."
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 279
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpaceAvatarProps.space",
            "type": "Object",
            "tags": [],
            "label": "space",
            "description": [
              "The space to represent with an avatar."
            ],
            "signature": [
              "{ id?: string | undefined; name?: string | undefined; description?: string | undefined; color?: string | undefined; initials?: string | undefined; imageUrl?: string | undefined; disabledFeatures?: string[] | undefined; _reserved?: boolean | undefined; }"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 281
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpaceAvatarProps.size",
            "type": "CompoundType",
            "tags": [],
            "label": "size",
            "description": [
              "The size of the avatar."
            ],
            "signature": [
              "\"m\" | \"s\" | \"l\" | \"xl\" | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 284
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpaceAvatarProps.className",
            "type": "string",
            "tags": [],
            "label": "className",
            "description": [
              "Optional CSS class(es) to apply."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 287
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpaceAvatarProps.announceSpaceName",
            "type": "CompoundType",
            "tags": [],
            "label": "announceSpaceName",
            "description": [
              "\nWhen enabled, allows EUI to provide an aria-label for this component, which is announced on screen readers.\n\nDefault value is true."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 294
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpaceAvatarProps.isDisabled",
            "type": "CompoundType",
            "tags": [],
            "label": "isDisabled",
            "description": [
              "\nWhether or not to render the avatar in a disabled state.\n\nDefault value is false."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 301
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spacesOss",
        "id": "def-public.SpaceListProps",
        "type": "Interface",
        "tags": [],
        "label": "SpaceListProps",
        "description": [
          "\nProperties for the SpaceList component."
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 229
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpaceListProps.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nThe namespaces of a saved object to render into a corresponding list of spaces."
            ],
            "signature": [
              "string[]"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 233
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpaceListProps.displayLimit",
            "type": "number",
            "tags": [],
            "label": "displayLimit",
            "description": [
              "\nOptional limit to the number of spaces that can be displayed in the list. If the number of spaces exceeds this limit, they will be\nhidden behind a \"show more\" button. Set to 0 to disable.\n\nDefault value is 5."
            ],
            "signature": [
              "number | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 240
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpaceListProps.behaviorContext",
            "type": "CompoundType",
            "tags": [],
            "label": "behaviorContext",
            "description": [
              "\nWhen set to 'within-space' (default), the space list behaves like it is running on a page within the active space, and it will omit the\nactive space (e.g., it displays a list of all the _other_ spaces that an object is shared to).\n\nConversely, when set to 'outside-space', the space list behaves like it is running on a page outside of any space, so it will not omit\nthe active space."
            ],
            "signature": [
              "\"within-space\" | \"outside-space\" | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 248
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spacesOss",
        "id": "def-public.SpacesApi",
        "type": "Interface",
        "tags": [],
        "label": "SpacesApi",
        "description": [
          "\nClient-side Spaces API."
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 17
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesApi.getActiveSpace$",
            "type": "Function",
            "tags": [],
            "label": "getActiveSpace$",
            "description": [
              "\nObservable representing the currently active space.\nThe details of the space can change without a full page reload (such as display name, color, etc.)"
            ],
            "signature": [
              "() => ",
              "Observable",
              "<",
              {
                "pluginId": "spacesOss",
                "scope": "common",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 22
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesApi.getActiveSpace",
            "type": "Function",
            "tags": [],
            "label": "getActiveSpace",
            "description": [
              "\nRetrieve the currently active space."
            ],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "spacesOss",
                "scope": "common",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-common.Space",
                "text": "Space"
              },
              ">"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 27
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesApi.ui",
            "type": "Object",
            "tags": [],
            "label": "ui",
            "description": [
              "\nUI components and services to add spaces capabilities to an application."
            ],
            "signature": [
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.SpacesApiUi",
                "text": "SpacesApiUi"
              }
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 32
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spacesOss",
        "id": "def-public.SpacesApiUi",
        "type": "Interface",
        "tags": [],
        "label": "SpacesApiUi",
        "description": [
          "\nUI components and services to add spaces capabilities to an application."
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 43
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesApiUi.components",
            "type": "Object",
            "tags": [],
            "label": "components",
            "description": [
              "\nLazy-loadable {@link SpacesApiUiComponent | React components} to support the Spaces feature."
            ],
            "signature": [
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.SpacesApiUiComponent",
                "text": "SpacesApiUiComponent"
              }
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 47
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesApiUi.redirectLegacyUrl",
            "type": "Function",
            "tags": [],
            "label": "redirectLegacyUrl",
            "description": [
              "\nRedirect the user from a legacy URL to a new URL. This needs to be used if a call to `SavedObjectsClient.resolve()` results in an\n`\"aliasMatch\"` outcome, which indicates that the user has loaded the page using a legacy URL. Calling this function will trigger a\nclient-side redirect to the new URL, and it will display a toast to the user.\n\nConsumers need to determine the local path for the new URL on their own, based on the object ID that was used to call\n`SavedObjectsClient.resolve()` (old ID) and the object ID in the result (new ID). For example...\n\nThe old object ID is `workpad-123` and the new object ID is `workpad-e08b9bdb-ec14-4339-94c4-063bddfd610e`.\n\nFull legacy URL: `https://localhost:5601/app/canvas#/workpad/workpad-123/page/1`\n\nNew URL path: `#/workpad/workpad-e08b9bdb-ec14-4339-94c4-063bddfd610e/page/1`\n\nThe protocol, hostname, port, base path, and app path are automatically included.\n"
            ],
            "signature": [
              "(path: string, objectNoun?: string | undefined) => Promise<void>"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 68
            },
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spacesOss",
                "id": "def-public.path",
                "type": "string",
                "tags": [],
                "label": "path",
                "description": [
                  "The path to use for the new URL, optionally including `search` and/or `hash` URL components."
                ],
                "source": {
                  "path": "src/plugins/spaces_oss/public/api.ts",
                  "lineNumber": 68
                },
                "deprecated": false
              },
              {
                "parentPluginId": "spacesOss",
                "id": "def-public.objectNoun",
                "type": "string",
                "tags": [],
                "label": "objectNoun",
                "description": [
                  "The string that is used to describe the object in the toast, e.g., _The **object** you're looking for has a new\nlocation_. Default value is 'object'."
                ],
                "signature": [
                  "string | undefined"
                ],
                "source": {
                  "path": "src/plugins/spaces_oss/public/api.ts",
                  "lineNumber": 68
                },
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spacesOss",
        "id": "def-public.SpacesApiUiComponent",
        "type": "Interface",
        "tags": [],
        "label": "SpacesApiUiComponent",
        "description": [
          "\nReact UI components to be used to display the Spaces feature in any application."
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 74
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesApiUiComponent.getSpacesContextProvider",
            "type": "Function",
            "tags": [],
            "label": "getSpacesContextProvider",
            "description": [
              "\nProvides a context that is required to render some Spaces components."
            ],
            "signature": [
              "(props: ",
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.SpacesContextProps",
                "text": "SpacesContextProps"
              },
              ") => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 78
            },
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spacesOss",
                "id": "def-public.props",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "T"
                ],
                "source": {
                  "path": "src/plugins/spaces_oss/public/api.ts",
                  "lineNumber": 38
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesApiUiComponent.getShareToSpaceFlyout",
            "type": "Function",
            "tags": [],
            "label": "getShareToSpaceFlyout",
            "description": [
              "\nDisplays a flyout to edit the spaces that an object is shared to.\n\nNote: must be rendered inside of a SpacesContext."
            ],
            "signature": [
              "(props: ",
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.ShareToSpaceFlyoutProps",
                "text": "ShareToSpaceFlyoutProps"
              },
              ") => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 84
            },
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spacesOss",
                "id": "def-public.props",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "T"
                ],
                "source": {
                  "path": "src/plugins/spaces_oss/public/api.ts",
                  "lineNumber": 38
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesApiUiComponent.getSpaceList",
            "type": "Function",
            "tags": [],
            "label": "getSpaceList",
            "description": [
              "\nDisplays a corresponding list of spaces for a given list of saved object namespaces. It shows up to five spaces (and an indicator for\nany number of spaces that the user is not authorized to see) by default. If more than five named spaces would be displayed, the extras\n(along with the unauthorized spaces indicator, if present) are hidden behind a button. If '*' (aka \"All spaces\") is present, it\nsupersedes all of the above and just displays a single badge without a button.\n\nNote: must be rendered inside of a SpacesContext."
            ],
            "signature": [
              "(props: ",
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.SpaceListProps",
                "text": "SpaceListProps"
              },
              ") => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 93
            },
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spacesOss",
                "id": "def-public.props",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "T"
                ],
                "source": {
                  "path": "src/plugins/spaces_oss/public/api.ts",
                  "lineNumber": 38
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesApiUiComponent.getLegacyUrlConflict",
            "type": "Function",
            "tags": [],
            "label": "getLegacyUrlConflict",
            "description": [
              "\nDisplays a callout that needs to be used if a call to `SavedObjectsClient.resolve()` results in an `\"conflict\"` outcome, which\nindicates that the user has loaded the page which is associated directly with one object (A), *and* with a legacy URL that points to a\ndifferent object (B).\n\nIn this case, `SavedObjectsClient.resolve()` has returned object A. This component displays a warning callout to the user explaining\nthat there is a conflict, and it includes a button that will redirect the user to object B when clicked.\n\nConsumers need to determine the local path for the new URL on their own, based on the object ID that was used to call\n`SavedObjectsClient.resolve()` (A) and the `aliasTargetId` value in the response (B). For example...\n\nA is `workpad-123` and B is `workpad-e08b9bdb-ec14-4339-94c4-063bddfd610e`.\n\nFull legacy URL: `https://localhost:5601/app/canvas#/workpad/workpad-123/page/1`\n\nNew URL path: `#/workpad/workpad-e08b9bdb-ec14-4339-94c4-063bddfd610e/page/1`"
            ],
            "signature": [
              "(props: ",
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.LegacyUrlConflictProps",
                "text": "LegacyUrlConflictProps"
              },
              ") => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 111
            },
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spacesOss",
                "id": "def-public.props",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "T"
                ],
                "source": {
                  "path": "src/plugins/spaces_oss/public/api.ts",
                  "lineNumber": 38
                },
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesApiUiComponent.getSpaceAvatar",
            "type": "Function",
            "tags": [],
            "label": "getSpaceAvatar",
            "description": [
              "\nDisplays an avatar for the given space."
            ],
            "signature": [
              "(props: ",
              {
                "pluginId": "spacesOss",
                "scope": "public",
                "docId": "kibSpacesOssPluginApi",
                "section": "def-public.SpaceAvatarProps",
                "text": "SpaceAvatarProps"
              },
              ") => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 115
            },
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "spacesOss",
                "id": "def-public.props",
                "type": "Uncategorized",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "T"
                ],
                "source": {
                  "path": "src/plugins/spaces_oss/public/api.ts",
                  "lineNumber": 38
                },
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spacesOss",
        "id": "def-public.SpacesAvailableStartContract",
        "type": "Interface",
        "tags": [],
        "label": "SpacesAvailableStartContract",
        "description": [
          "\nOSS Spaces plugin start contract when the Spaces feature is enabled."
        ],
        "signature": [
          {
            "pluginId": "spacesOss",
            "scope": "public",
            "docId": "kibSpacesOssPluginApi",
            "section": "def-public.SpacesAvailableStartContract",
            "text": "SpacesAvailableStartContract"
          },
          " extends ",
          {
            "pluginId": "spacesOss",
            "scope": "public",
            "docId": "kibSpacesOssPluginApi",
            "section": "def-public.SpacesApi",
            "text": "SpacesApi"
          }
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/types.ts",
          "lineNumber": 14
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesAvailableStartContract.isSpacesAvailable",
            "type": "boolean",
            "tags": [],
            "label": "isSpacesAvailable",
            "description": [
              "Indicates if the Spaces feature is enabled."
            ],
            "signature": [
              "true"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/types.ts",
              "lineNumber": 16
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spacesOss",
        "id": "def-public.SpacesContextProps",
        "type": "Interface",
        "tags": [],
        "label": "SpacesContextProps",
        "description": [
          "\nProperties for the SpacesContext."
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 121
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesContextProps.feature",
            "type": "string",
            "tags": [],
            "label": "feature",
            "description": [
              "\nIf a feature is specified, all Spaces components will treat it appropriately if the feature is disabled in a given Space."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/api.ts",
              "lineNumber": 125
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "spacesOss",
        "id": "def-public.SpacesUnavailableStartContract",
        "type": "Interface",
        "tags": [
          "deprecated"
        ],
        "label": "SpacesUnavailableStartContract",
        "description": [
          "\nOSS Spaces plugin start contract when the Spaces feature is disabled."
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/types.ts",
          "lineNumber": 24
        },
        "deprecated": true,
        "removeBy": "8.0",
        "references": [],
        "children": [
          {
            "parentPluginId": "spacesOss",
            "id": "def-public.SpacesUnavailableStartContract.isSpacesAvailable",
            "type": "boolean",
            "tags": [],
            "label": "isSpacesAvailable",
            "description": [
              "Indicates if the Spaces feature is enabled."
            ],
            "signature": [
              "false"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/public/types.ts",
              "lineNumber": 26
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "spacesOss",
        "id": "def-public.LazyComponentFn",
        "type": "Type",
        "tags": [],
        "label": "LazyComponentFn",
        "description": [
          "\nFunction that returns a promise for a lazy-loadable component."
        ],
        "signature": [
          "(props: T) => React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)>"
        ],
        "source": {
          "path": "src/plugins/spaces_oss/public/api.ts",
          "lineNumber": 38
        },
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "spacesOss",
      "id": "def-public.SpacesOssPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "SpacesOssPluginSetup",
      "description": [
        "\nOSS Spaces plugin setup contract."
      ],
      "source": {
        "path": "src/plugins/spaces_oss/public/types.ts",
        "lineNumber": 32
      },
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "spacesOss",
          "id": "def-public.SpacesOssPluginSetup.registerSpacesApi",
          "type": "Function",
          "tags": [
            "private"
          ],
          "label": "registerSpacesApi",
          "description": [
            "\nRegister a provider for the Spaces API.\n\nOnly one provider can be registered, subsequent calls to this method will fail.\n"
          ],
          "signature": [
            "(provider: ",
            {
              "pluginId": "spacesOss",
              "scope": "public",
              "docId": "kibSpacesOssPluginApi",
              "section": "def-public.SpacesApi",
              "text": "SpacesApi"
            },
            ") => void"
          ],
          "source": {
            "path": "src/plugins/spaces_oss/public/types.ts",
            "lineNumber": 42
          },
          "deprecated": false,
          "children": [
            {
              "parentPluginId": "spacesOss",
              "id": "def-public.SpacesOssPluginSetup.registerSpacesApi.$1",
              "type": "Object",
              "tags": [],
              "label": "provider",
              "description": [
                "the API provider."
              ],
              "signature": [
                {
                  "pluginId": "spacesOss",
                  "scope": "public",
                  "docId": "kibSpacesOssPluginApi",
                  "section": "def-public.SpacesApi",
                  "text": "SpacesApi"
                }
              ],
              "source": {
                "path": "src/plugins/spaces_oss/public/types.ts",
                "lineNumber": 42
              },
              "deprecated": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "spacesOss",
      "id": "def-public.SpacesOssPluginStart",
      "type": "Type",
      "tags": [],
      "label": "SpacesOssPluginStart",
      "description": [
        "\nOSS Spaces plugin start contract."
      ],
      "signature": [
        {
          "pluginId": "spacesOss",
          "scope": "public",
          "docId": "kibSpacesOssPluginApi",
          "section": "def-public.SpacesAvailableStartContract",
          "text": "SpacesAvailableStartContract"
        },
        " | ",
        {
          "pluginId": "spacesOss",
          "scope": "public",
          "docId": "kibSpacesOssPluginApi",
          "section": "def-public.SpacesUnavailableStartContract",
          "text": "SpacesUnavailableStartContract"
        }
      ],
      "source": {
        "path": "src/plugins/spaces_oss/public/types.ts",
        "lineNumber": 48
      },
      "deprecated": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "spacesOss",
        "id": "def-common.Space",
        "type": "Interface",
        "tags": [],
        "label": "Space",
        "description": [
          "\nA Space."
        ],
        "source": {
          "path": "src/plugins/spaces_oss/common/types.ts",
          "lineNumber": 12
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "spacesOss",
            "id": "def-common.Space.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nThe unique identifier for this space.\nThe id becomes part of the \"URL Identifier\" of the space.\n\nExample: an id of `marketing` would result in the URL identifier of `/s/marketing`."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 19
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-common.Space.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nDisplay name for this space."
            ],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 24
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-common.Space.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [
              "\nOptional description for this space."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 29
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-common.Space.color",
            "type": "string",
            "tags": [],
            "label": "color",
            "description": [
              "\nOptional color (hex code) for this space.\nIf neither `color` nor `imageUrl` is specified, then a color will be automatically generated."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 35
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-common.Space.initials",
            "type": "string",
            "tags": [],
            "label": "initials",
            "description": [
              "\nOptional display initials for this space's avatar. Supports a maximum of 2 characters.\nIf initials are not provided, then they will be derived from the space name automatically.\n\nInitials are not displayed if an `imageUrl` has been specified."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 43
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-common.Space.imageUrl",
            "type": "string",
            "tags": [],
            "label": "imageUrl",
            "description": [
              "\nOptional base-64 encoded data image url to show as this space's avatar.\nThis setting takes precedence over any configured `color` or `initials`."
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 49
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-common.Space.disabledFeatures",
            "type": "Array",
            "tags": [],
            "label": "disabledFeatures",
            "description": [
              "\nThe set of feature ids that should be hidden within this space."
            ],
            "signature": [
              "string[]"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 54
            },
            "deprecated": false
          },
          {
            "parentPluginId": "spacesOss",
            "id": "def-common.Space._reserved",
            "type": "CompoundType",
            "tags": [
              "private"
            ],
            "label": "_reserved",
            "description": [
              "\nIndicates that this space is reserved (system controlled).\nReserved spaces cannot be created or deleted by end-users."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "source": {
              "path": "src/plugins/spaces_oss/common/types.ts",
              "lineNumber": 61
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": []
  }
}