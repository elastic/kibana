{
  "id": "@kbn/react-field",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "@kbn/react-field",
        "id": "def-common.FieldButton",
        "type": "Function",
        "tags": [],
        "label": "FieldButton",
        "description": [],
        "signature": [
          "({\n  size = 'm',\n  isActive = false,\n  fieldIcon,\n  fieldName,\n  fieldInfoIcon,\n  fieldAction,\n  className,\n  isDraggable = false,\n  onClick,\n  dataTestSubj,\n  buttonProps,\n  ...rest\n}: ",
          {
            "pluginId": "@kbn/react-field",
            "scope": "common",
            "docId": "kibKbnReactFieldPluginApi",
            "section": "def-common.FieldButtonProps",
            "text": "FieldButtonProps"
          },
          ") => JSX.Element"
        ],
        "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldButton.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  size = 'm',\n  isActive = false,\n  fieldIcon,\n  fieldName,\n  fieldInfoIcon,\n  fieldAction,\n  className,\n  isDraggable = false,\n  onClick,\n  dataTestSubj,\n  buttonProps,\n  ...rest\n}",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/react-field",
                "scope": "common",
                "docId": "kibKbnReactFieldPluginApi",
                "section": "def-common.FieldButtonProps",
                "text": "FieldButtonProps"
              }
            ],
            "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/react-field",
        "id": "def-common.FieldIcon",
        "type": "Function",
        "tags": [],
        "label": "FieldIcon",
        "description": [
          "\nField token icon used across the app"
        ],
        "signature": [
          "({\n  type,\n  label,\n  size = 's',\n  scripted,\n  className,\n  ...rest\n}: ",
          {
            "pluginId": "@kbn/react-field",
            "scope": "common",
            "docId": "kibKbnReactFieldPluginApi",
            "section": "def-common.FieldIconProps",
            "text": "FieldIconProps"
          },
          ") => JSX.Element"
        ],
        "path": "packages/kbn-react-field/src/field_icon/field_icon.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldIcon.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  type,\n  label,\n  size = 's',\n  scripted,\n  className,\n  ...rest\n}",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/react-field",
                "scope": "common",
                "docId": "kibKbnReactFieldPluginApi",
                "section": "def-common.FieldIconProps",
                "text": "FieldIconProps"
              }
            ],
            "path": "packages/kbn-react-field/src/field_icon/field_icon.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "@kbn/react-field",
        "id": "def-common.FieldButtonProps",
        "type": "Interface",
        "tags": [],
        "label": "FieldButtonProps",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/react-field",
            "scope": "common",
            "docId": "kibKbnReactFieldPluginApi",
            "section": "def-common.FieldButtonProps",
            "text": "FieldButtonProps"
          },
          " extends React.HTMLAttributes<HTMLDivElement>"
        ],
        "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldButtonProps.fieldName",
            "type": "CompoundType",
            "tags": [],
            "label": "fieldName",
            "description": [
              "\nLabel for the button"
            ],
            "signature": [
              "string | number | boolean | {} | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | React.ReactNodeArray | React.ReactPortal | null | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldButtonProps.fieldIcon",
            "type": "CompoundType",
            "tags": [],
            "label": "fieldIcon",
            "description": [
              "\nIcon representing the field type.\nRecommend using FieldIcon"
            ],
            "signature": [
              "string | number | boolean | {} | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | React.ReactNodeArray | React.ReactPortal | null | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldButtonProps.fieldInfoIcon",
            "type": "CompoundType",
            "tags": [],
            "label": "fieldInfoIcon",
            "description": [
              "\nAn optional node to place inside and at the end of the <button>"
            ],
            "signature": [
              "string | number | boolean | {} | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | React.ReactNodeArray | React.ReactPortal | null | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldButtonProps.fieldAction",
            "type": "CompoundType",
            "tags": [],
            "label": "fieldAction",
            "description": [
              "\nAn optional node to place outside of and to the right of the <button>"
            ],
            "signature": [
              "string | number | boolean | {} | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | React.ReactNodeArray | React.ReactPortal | null | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldButtonProps.isActive",
            "type": "CompoundType",
            "tags": [],
            "label": "isActive",
            "description": [
              "\nAdds a forced focus ring to the whole component"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldButtonProps.isDraggable",
            "type": "CompoundType",
            "tags": [],
            "label": "isDraggable",
            "description": [
              "\nStyles the component differently to indicate it is draggable"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldButtonProps.size",
            "type": "CompoundType",
            "tags": [],
            "label": "size",
            "description": [
              "\nUse the small size in condensed areas"
            ],
            "signature": [
              "\"s\" | \"m\" | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldButtonProps.className",
            "type": "string",
            "tags": [],
            "label": "className",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldButtonProps.onClick",
            "type": "Function",
            "tags": [],
            "label": "onClick",
            "description": [
              "\nThe component will render a `<button>` when provided an `onClick`"
            ],
            "signature": [
              "(() => void) | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldButtonProps.dataTestSubj",
            "type": "string",
            "tags": [],
            "label": "dataTestSubj",
            "description": [
              "\nApplies to the inner `<button>`  or `<div>`"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldButtonProps.buttonProps",
            "type": "CompoundType",
            "tags": [],
            "label": "buttonProps",
            "description": [
              "\nPass more button props to the `<button>` element"
            ],
            "signature": [
              "(React.ButtonHTMLAttributes<HTMLButtonElement> & ",
              "CommonProps",
              ") | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/react-field",
        "id": "def-common.FieldIconProps",
        "type": "Interface",
        "tags": [],
        "label": "FieldIconProps",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/react-field",
            "scope": "common",
            "docId": "kibKbnReactFieldPluginApi",
            "section": "def-common.FieldIconProps",
            "text": "FieldIconProps"
          },
          " extends Pick<",
          "EuiTokenProps",
          ", \"title\" | \"size\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"data-test-subj\" | \"fill\" | \"shape\">"
        ],
        "path": "packages/kbn-react-field/src/field_icon/field_icon.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldIconProps.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "path": "packages/kbn-react-field/src/field_icon/field_icon.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldIconProps.label",
            "type": "string",
            "tags": [],
            "label": "label",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_icon/field_icon.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "@kbn/react-field",
            "id": "def-common.FieldIconProps.scripted",
            "type": "CompoundType",
            "tags": [],
            "label": "scripted",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "packages/kbn-react-field/src/field_icon/field_icon.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/react-field",
        "id": "def-common.ButtonSize",
        "type": "Type",
        "tags": [],
        "label": "ButtonSize",
        "description": [],
        "signature": [
          "\"s\" | \"m\""
        ],
        "path": "packages/kbn-react-field/src/field_button/field_button.tsx",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}