{
  "id": "securitySolution",
  "client": {
    "classes": [
      {
        "parentPluginId": "securitySolution",
        "id": "def-public.Plugin",
        "type": "Class",
        "tags": [],
        "label": "Plugin",
        "description": [],
        "signature": [
          {
            "pluginId": "securitySolution",
            "scope": "public",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-public.Plugin",
            "text": "Plugin"
          },
          " implements ",
          {
            "pluginId": "@kbn/core-plugins-browser",
            "scope": "common",
            "docId": "kibKbnCorePluginsBrowserPluginApi",
            "section": "def-common.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "securitySolution",
            "scope": "public",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-public.PluginSetup",
            "text": "PluginSetup"
          },
          ", ",
          {
            "pluginId": "securitySolution",
            "scope": "public",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-public.PluginStart",
            "text": "PluginStart"
          },
          ", ",
          "SetupPlugins",
          ", ",
          "StartPlugins",
          ">"
        ],
        "path": "x-pack/plugins/security_solution/public/plugin.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.Plugin.kibanaBranch",
            "type": "string",
            "tags": [],
            "label": "kibanaBranch",
            "description": [
              "\nThe current Kibana branch. e.g. 'main'"
            ],
            "path": "x-pack/plugins/security_solution/public/plugin.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.Plugin.kibanaVersion",
            "type": "string",
            "tags": [],
            "label": "kibanaVersion",
            "description": [
              "\nThe current Kibana version. e.g. '8.0.0' or '8.0.0-SNAPSHOT'"
            ],
            "path": "x-pack/plugins/security_solution/public/plugin.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.Plugin.buildFlavor",
            "type": "string",
            "tags": [],
            "label": "buildFlavor",
            "description": [
              "\nWhether the environment is 'serverless' or 'traditional'"
            ],
            "path": "x-pack/plugins/security_solution/public/plugin.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.Plugin.prebuiltRulesPackageVersion",
            "type": "string",
            "tags": [],
            "label": "prebuiltRulesPackageVersion",
            "description": [
              "\nFor internal use. Specify which version of the Detection Rules fleet package to install\nwhen upgrading rules. If not provided, the latest compatible package will be installed,\nor if running from a dev environment or -SNAPSHOT build, the latest pre-release package\nwill be used (if fleet is available or not within an airgapped environment).\n\nNote: This is for `upgrade only`, which occurs by means of the `useUpgradeSecurityPackages`\nhook when navigating to a Security Solution page. The package version specified in\n`fleet_packages.json` in project root will always be installed first on Kibana start if\nthe package is not already installed."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/plugin.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.Plugin.experimentalFeatures",
            "type": "Object",
            "tags": [],
            "label": "experimentalFeatures",
            "description": [],
            "signature": [
              "{ readonly tGridEnabled: boolean; readonly tGridEventRenderedViewEnabled: boolean; readonly excludePoliciesInFilterEnabled: boolean; readonly kubernetesEnabled: boolean; readonly chartEmbeddablesEnabled: boolean; readonly donutChartEmbeddablesEnabled: boolean; readonly previewTelemetryUrlEnabled: boolean; readonly insightsRelatedAlertsByProcessAncestry: boolean; readonly extendedRuleExecutionLoggingEnabled: boolean; readonly socTrendsEnabled: boolean; readonly responseActionsEnabled: boolean; readonly endpointResponseActionsEnabled: boolean; readonly responseActionUploadEnabled: boolean; readonly automatedProcessActionsEnabled: boolean; readonly responseActionsSentinelOneV1Enabled: boolean; readonly responseActionsSentinelOneV2Enabled: boolean; readonly alertsPageChartsEnabled: boolean; readonly alertTypeEnabled: boolean; readonly expandableFlyoutInCreateRuleEnabled: boolean; readonly expandableEventFlyoutEnabled: boolean; readonly expandableTimelineFlyoutEnabled: boolean; readonly alertsPageFiltersEnabled: boolean; readonly assistantModelEvaluation: boolean; readonly newUserDetailsFlyout: boolean; readonly newUserDetailsFlyoutManagedUser: boolean; readonly newHostDetailsFlyout: boolean; readonly riskScoringPersistence: boolean; readonly riskScoringRoutesEnabled: boolean; readonly esqlRulesDisabled: boolean; readonly protectionUpdatesEnabled: boolean; readonly disableTimelineSaveTour: boolean; readonly riskEnginePrivilegesRouteEnabled: boolean; readonly sentinelOneDataInAnalyzerEnabled: boolean; readonly sentinelOneManualHostActionsEnabled: boolean; readonly crowdstrikeDataInAnalyzerEnabled: boolean; readonly jsonPrebuiltRulesDiffingEnabled: boolean; readonly timelineEsqlTabDisabled: boolean; readonly unifiedComponentsInTimelineEnabled: boolean; readonly analyzerDatePickersAndSourcererDisabled: boolean; readonly perFieldPrebuiltRulesDiffingEnabled: boolean; readonly malwareOnWriteScanOptionAvailable: boolean; }"
            ],
            "path": "x-pack/plugins/security_solution/public/plugin.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.Plugin.configSettings",
            "type": "Object",
            "tags": [],
            "label": "configSettings",
            "description": [],
            "signature": [
              "ConfigSettings"
            ],
            "path": "x-pack/plugins/security_solution/public/plugin.tsx",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.Plugin.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/security_solution/public/plugin.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "securitySolution",
                "id": "def-public.Plugin.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "initializerContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-plugins-browser",
                    "scope": "common",
                    "docId": "kibKbnCorePluginsBrowserPluginApi",
                    "section": "def-common.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<object>"
                ],
                "path": "x-pack/plugins/security_solution/public/plugin.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.Plugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-browser",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                "section": "def-common.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              "StartPluginsDependencies",
              ", ",
              {
                "pluginId": "securitySolution",
                "scope": "public",
                "docId": "kibSecuritySolutionPluginApi",
                "section": "def-public.PluginStart",
                "text": "PluginStart"
              },
              ">, plugins: ",
              "SetupPlugins",
              ") => ",
              {
                "pluginId": "securitySolution",
                "scope": "public",
                "docId": "kibSecuritySolutionPluginApi",
                "section": "def-public.PluginSetup",
                "text": "PluginSetup"
              }
            ],
            "path": "x-pack/plugins/security_solution/public/plugin.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "securitySolution",
                "id": "def-public.Plugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                    "section": "def-common.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  "StartPluginsDependencies",
                  ", ",
                  {
                    "pluginId": "securitySolution",
                    "scope": "public",
                    "docId": "kibSecuritySolutionPluginApi",
                    "section": "def-public.PluginStart",
                    "text": "PluginStart"
                  },
                  ">"
                ],
                "path": "x-pack/plugins/security_solution/public/plugin.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "securitySolution",
                "id": "def-public.Plugin.setup.$2",
                "type": "Object",
                "tags": [],
                "label": "plugins",
                "description": [],
                "signature": [
                  "SetupPlugins"
                ],
                "path": "x-pack/plugins/security_solution/public/plugin.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.Plugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-browser",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                "section": "def-common.CoreStart",
                "text": "CoreStart"
              },
              ", plugins: ",
              "StartPlugins",
              ") => ",
              {
                "pluginId": "securitySolution",
                "scope": "public",
                "docId": "kibSecuritySolutionPluginApi",
                "section": "def-public.PluginStart",
                "text": "PluginStart"
              }
            ],
            "path": "x-pack/plugins/security_solution/public/plugin.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "securitySolution",
                "id": "def-public.Plugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                    "section": "def-common.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "x-pack/plugins/security_solution/public/plugin.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "securitySolution",
                "id": "def-public.Plugin.start.$2",
                "type": "Object",
                "tags": [],
                "label": "plugins",
                "description": [],
                "signature": [
                  "StartPlugins"
                ],
                "path": "x-pack/plugins/security_solution/public/plugin.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.Plugin.stop",
            "type": "Function",
            "tags": [],
            "label": "stop",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "x-pack/plugins/security_solution/public/plugin.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.Plugin.registerAppLinks",
            "type": "Function",
            "tags": [],
            "label": "registerAppLinks",
            "description": [
              "\nRegister deepLinks and appUpdater for all app links, to change deepLinks as needed when licensing changes."
            ],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-browser",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                "section": "def-common.CoreStart",
                "text": "CoreStart"
              },
              ", plugins: ",
              "StartPlugins",
              ") => Promise<void>"
            ],
            "path": "x-pack/plugins/security_solution/public/plugin.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "securitySolution",
                "id": "def-public.Plugin.registerAppLinks.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                    "section": "def-common.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "x-pack/plugins/security_solution/public/plugin.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "securitySolution",
                "id": "def-public.Plugin.registerAppLinks.$2",
                "type": "Object",
                "tags": [],
                "label": "plugins",
                "description": [],
                "signature": [
                  "StartPlugins"
                ],
                "path": "x-pack/plugins/security_solution/public/plugin.tsx",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "securitySolution",
        "id": "def-public.FetchRulesResponse",
        "type": "Interface",
        "tags": [],
        "label": "FetchRulesResponse",
        "description": [],
        "path": "x-pack/plugins/security_solution/public/detection_engine/rule_management/logic/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.FetchRulesResponse.page",
            "type": "number",
            "tags": [],
            "label": "page",
            "description": [],
            "path": "x-pack/plugins/security_solution/public/detection_engine/rule_management/logic/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.FetchRulesResponse.perPage",
            "type": "number",
            "tags": [],
            "label": "perPage",
            "description": [],
            "path": "x-pack/plugins/security_solution/public/detection_engine/rule_management/logic/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.FetchRulesResponse.total",
            "type": "number",
            "tags": [],
            "label": "total",
            "description": [],
            "path": "x-pack/plugins/security_solution/public/detection_engine/rule_management/logic/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.FetchRulesResponse.data",
            "type": "Array",
            "tags": [],
            "label": "data",
            "description": [],
            "signature": [
              "({ id: string; type: \"eql\"; name: string; actions: { params: {} & { [k: string]: unknown; }; id: string; group: string; action_type_id: string; uuid?: string | undefined; alerts_filter?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; frequency?: { throttle: string | null; notifyWhen: \"onActionGroupChange\" | \"onActiveAlert\" | \"onThrottleInterval\"; summary: boolean; } | undefined; }[]; tags: string[]; setup: string; enabled: boolean; revision: number; query: string; version: number; references: string[]; interval: string; description: string; risk_score: number; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; from: string; to: string; language: \"eql\"; created_at: string; created_by: string; updated_at: string; updated_by: string; author: string[]; immutable: boolean; rule_id: string; threat: { framework: string; tactic: { id: string; name: string; reference: string; }; technique?: { id: string; name: string; reference: string; subtechnique?: { id: string; name: string; reference: string; }[] | undefined; }[] | undefined; }[]; risk_score_mapping: { value: string; field: string; operator: \"equals\"; risk_score?: number | undefined; }[]; severity_mapping: { value: string; field: string; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; operator: \"equals\"; }[]; exceptions_list: { id: string; type: \"endpoint\" | \"detection\" | \"rule_default\" | \"endpoint_trusted_apps\" | \"endpoint_events\" | \"endpoint_host_isolation_exceptions\" | \"endpoint_blocklists\"; list_id: string; namespace_type: \"single\" | \"agnostic\"; }[]; false_positives: string[]; max_signals: number; related_integrations: { version: string; package: string; integration?: string | undefined; }[]; required_fields: { type: string; name: string; ecs: boolean; }[]; namespace?: string | undefined; license?: string | undefined; throttle?: string | undefined; outcome?: \"exactMatch\" | \"aliasMatch\" | \"conflict\" | undefined; alias_target_id?: string | undefined; alias_purpose?: \"savedObjectConversion\" | \"savedObjectImport\" | undefined; meta?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; note?: string | undefined; rule_name_override?: string | undefined; timestamp_override?: string | undefined; timestamp_override_fallback_disabled?: boolean | undefined; timeline_id?: string | undefined; timeline_title?: string | undefined; building_block_type?: string | undefined; output_index?: string | undefined; investigation_fields?: { field_names: string[]; } | undefined; execution_summary?: { last_execution: { message: string; date: string; status: \"running\" | \"succeeded\" | \"failed\" | \"going to run\" | \"partial failure\"; metrics: { total_search_duration_ms?: number | undefined; total_indexing_duration_ms?: number | undefined; total_enrichment_duration_ms?: number | undefined; execution_gap_duration_s?: number | undefined; }; status_order: number; }; } | undefined; index?: string[] | undefined; data_view_id?: string | undefined; filters?: unknown[] | undefined; event_category_override?: string | undefined; tiebreaker_field?: string | undefined; timestamp_field?: string | undefined; } | { id: string; type: \"query\"; name: string; actions: { params: {} & { [k: string]: unknown; }; id: string; group: string; action_type_id: string; uuid?: string | undefined; alerts_filter?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; frequency?: { throttle: string | null; notifyWhen: \"onActionGroupChange\" | \"onActiveAlert\" | \"onThrottleInterval\"; summary: boolean; } | undefined; }[]; tags: string[]; setup: string; enabled: boolean; revision: number; query: string; version: number; references: string[]; interval: string; description: string; risk_score: number; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; from: string; to: string; language: \"kuery\" | \"lucene\"; created_at: string; created_by: string; updated_at: string; updated_by: string; author: string[]; immutable: boolean; rule_id: string; threat: { framework: string; tactic: { id: string; name: string; reference: string; }; technique?: { id: string; name: string; reference: string; subtechnique?: { id: string; name: string; reference: string; }[] | undefined; }[] | undefined; }[]; risk_score_mapping: { value: string; field: string; operator: \"equals\"; risk_score?: number | undefined; }[]; severity_mapping: { value: string; field: string; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; operator: \"equals\"; }[]; exceptions_list: { id: string; type: \"endpoint\" | \"detection\" | \"rule_default\" | \"endpoint_trusted_apps\" | \"endpoint_events\" | \"endpoint_host_isolation_exceptions\" | \"endpoint_blocklists\"; list_id: string; namespace_type: \"single\" | \"agnostic\"; }[]; false_positives: string[]; max_signals: number; related_integrations: { version: string; package: string; integration?: string | undefined; }[]; required_fields: { type: string; name: string; ecs: boolean; }[]; namespace?: string | undefined; license?: string | undefined; throttle?: string | undefined; outcome?: \"exactMatch\" | \"aliasMatch\" | \"conflict\" | undefined; alias_target_id?: string | undefined; alias_purpose?: \"savedObjectConversion\" | \"savedObjectImport\" | undefined; meta?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; note?: string | undefined; rule_name_override?: string | undefined; timestamp_override?: string | undefined; timestamp_override_fallback_disabled?: boolean | undefined; timeline_id?: string | undefined; timeline_title?: string | undefined; building_block_type?: string | undefined; output_index?: string | undefined; investigation_fields?: { field_names: string[]; } | undefined; execution_summary?: { last_execution: { message: string; date: string; status: \"running\" | \"succeeded\" | \"failed\" | \"going to run\" | \"partial failure\"; metrics: { total_search_duration_ms?: number | undefined; total_indexing_duration_ms?: number | undefined; total_enrichment_duration_ms?: number | undefined; execution_gap_duration_s?: number | undefined; }; status_order: number; }; } | undefined; index?: string[] | undefined; filters?: unknown[] | undefined; data_view_id?: string | undefined; saved_id?: string | undefined; response_actions?: ({ params: { query?: string | undefined; ecs_mapping?: Zod.objectOutputType<{}, Zod.ZodObject<{ field: Zod.ZodOptional<Zod.ZodString>; value: Zod.ZodOptional<Zod.ZodUnion<[Zod.ZodString, Zod.ZodArray<Zod.ZodString, \"many\">]>>; }, \"strip\", Zod.ZodTypeAny, { field?: string | undefined; value?: string | string[] | undefined; }, { field?: string | undefined; value?: string | string[] | undefined; }>, \"strip\"> | undefined; queries?: { id: string; query: string; ecs_mapping?: Zod.objectOutputType<{}, Zod.ZodObject<{ field: Zod.ZodOptional<Zod.ZodString>; value: Zod.ZodOptional<Zod.ZodUnion<[Zod.ZodString, Zod.ZodArray<Zod.ZodString, \"many\">]>>; }, \"strip\", Zod.ZodTypeAny, { field?: string | undefined; value?: string | string[] | undefined; }, { field?: string | undefined; value?: string | string[] | undefined; }>, \"strip\"> | undefined; version?: string | undefined; platform?: string | undefined; removed?: boolean | undefined; snapshot?: boolean | undefined; }[] | undefined; pack_id?: string | undefined; saved_query_id?: string | undefined; timeout?: number | undefined; }; action_type_id: \".osquery\"; } | { params: { command: \"isolate\"; comment?: string | undefined; } | { config: { field: string; overwrite: boolean; }; command: \"kill-process\" | \"suspend-process\"; comment?: string | undefined; }; action_type_id: \".endpoint\"; })[] | undefined; alert_suppression?: { group_by: string[]; duration?: { value: number; unit: \"m\" | \"h\" | \"s\"; } | undefined; missing_fields_strategy?: \"doNotSuppress\" | \"suppress\" | undefined; } | undefined; } | { id: string; type: \"saved_query\"; name: string; actions: { params: {} & { [k: string]: unknown; }; id: string; group: string; action_type_id: string; uuid?: string | undefined; alerts_filter?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; frequency?: { throttle: string | null; notifyWhen: \"onActionGroupChange\" | \"onActiveAlert\" | \"onThrottleInterval\"; summary: boolean; } | undefined; }[]; tags: string[]; setup: string; enabled: boolean; revision: number; version: number; references: string[]; interval: string; description: string; risk_score: number; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; from: string; to: string; language: \"kuery\" | \"lucene\"; created_at: string; created_by: string; updated_at: string; updated_by: string; author: string[]; immutable: boolean; rule_id: string; threat: { framework: string; tactic: { id: string; name: string; reference: string; }; technique?: { id: string; name: string; reference: string; subtechnique?: { id: string; name: string; reference: string; }[] | undefined; }[] | undefined; }[]; risk_score_mapping: { value: string; field: string; operator: \"equals\"; risk_score?: number | undefined; }[]; severity_mapping: { value: string; field: string; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; operator: \"equals\"; }[]; exceptions_list: { id: string; type: \"endpoint\" | \"detection\" | \"rule_default\" | \"endpoint_trusted_apps\" | \"endpoint_events\" | \"endpoint_host_isolation_exceptions\" | \"endpoint_blocklists\"; list_id: string; namespace_type: \"single\" | \"agnostic\"; }[]; false_positives: string[]; max_signals: number; related_integrations: { version: string; package: string; integration?: string | undefined; }[]; required_fields: { type: string; name: string; ecs: boolean; }[]; saved_id: string; namespace?: string | undefined; license?: string | undefined; throttle?: string | undefined; outcome?: \"exactMatch\" | \"aliasMatch\" | \"conflict\" | undefined; alias_target_id?: string | undefined; alias_purpose?: \"savedObjectConversion\" | \"savedObjectImport\" | undefined; meta?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; note?: string | undefined; rule_name_override?: string | undefined; timestamp_override?: string | undefined; timestamp_override_fallback_disabled?: boolean | undefined; timeline_id?: string | undefined; timeline_title?: string | undefined; building_block_type?: string | undefined; output_index?: string | undefined; investigation_fields?: { field_names: string[]; } | undefined; execution_summary?: { last_execution: { message: string; date: string; status: \"running\" | \"succeeded\" | \"failed\" | \"going to run\" | \"partial failure\"; metrics: { total_search_duration_ms?: number | undefined; total_indexing_duration_ms?: number | undefined; total_enrichment_duration_ms?: number | undefined; execution_gap_duration_s?: number | undefined; }; status_order: number; }; } | undefined; index?: string[] | undefined; query?: string | undefined; filters?: unknown[] | undefined; data_view_id?: string | undefined; response_actions?: ({ params: { query?: string | undefined; ecs_mapping?: Zod.objectOutputType<{}, Zod.ZodObject<{ field: Zod.ZodOptional<Zod.ZodString>; value: Zod.ZodOptional<Zod.ZodUnion<[Zod.ZodString, Zod.ZodArray<Zod.ZodString, \"many\">]>>; }, \"strip\", Zod.ZodTypeAny, { field?: string | undefined; value?: string | string[] | undefined; }, { field?: string | undefined; value?: string | string[] | undefined; }>, \"strip\"> | undefined; queries?: { id: string; query: string; ecs_mapping?: Zod.objectOutputType<{}, Zod.ZodObject<{ field: Zod.ZodOptional<Zod.ZodString>; value: Zod.ZodOptional<Zod.ZodUnion<[Zod.ZodString, Zod.ZodArray<Zod.ZodString, \"many\">]>>; }, \"strip\", Zod.ZodTypeAny, { field?: string | undefined; value?: string | string[] | undefined; }, { field?: string | undefined; value?: string | string[] | undefined; }>, \"strip\"> | undefined; version?: string | undefined; platform?: string | undefined; removed?: boolean | undefined; snapshot?: boolean | undefined; }[] | undefined; pack_id?: string | undefined; saved_query_id?: string | undefined; timeout?: number | undefined; }; action_type_id: \".osquery\"; } | { params: { command: \"isolate\"; comment?: string | undefined; } | { config: { field: string; overwrite: boolean; }; command: \"kill-process\" | \"suspend-process\"; comment?: string | undefined; }; action_type_id: \".endpoint\"; })[] | undefined; alert_suppression?: { group_by: string[]; duration?: { value: number; unit: \"m\" | \"h\" | \"s\"; } | undefined; missing_fields_strategy?: \"doNotSuppress\" | \"suppress\" | undefined; } | undefined; } | { id: string; type: \"threshold\"; name: string; actions: { params: {} & { [k: string]: unknown; }; id: string; group: string; action_type_id: string; uuid?: string | undefined; alerts_filter?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; frequency?: { throttle: string | null; notifyWhen: \"onActionGroupChange\" | \"onActiveAlert\" | \"onThrottleInterval\"; summary: boolean; } | undefined; }[]; tags: string[]; setup: string; enabled: boolean; revision: number; query: string; version: number; references: string[]; interval: string; description: string; risk_score: number; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; from: string; to: string; language: \"kuery\" | \"lucene\"; created_at: string; created_by: string; updated_at: string; updated_by: string; author: string[]; immutable: boolean; rule_id: string; threat: { framework: string; tactic: { id: string; name: string; reference: string; }; technique?: { id: string; name: string; reference: string; subtechnique?: { id: string; name: string; reference: string; }[] | undefined; }[] | undefined; }[]; risk_score_mapping: { value: string; field: string; operator: \"equals\"; risk_score?: number | undefined; }[]; severity_mapping: { value: string; field: string; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; operator: \"equals\"; }[]; exceptions_list: { id: string; type: \"endpoint\" | \"detection\" | \"rule_default\" | \"endpoint_trusted_apps\" | \"endpoint_events\" | \"endpoint_host_isolation_exceptions\" | \"endpoint_blocklists\"; list_id: string; namespace_type: \"single\" | \"agnostic\"; }[]; false_positives: string[]; max_signals: number; related_integrations: { version: string; package: string; integration?: string | undefined; }[]; required_fields: { type: string; name: string; ecs: boolean; }[]; threshold: { value: number; field: (string | string[]) & (string | string[] | undefined); cardinality?: { value: number; field: string; }[] | undefined; }; namespace?: string | undefined; license?: string | undefined; throttle?: string | undefined; outcome?: \"exactMatch\" | \"aliasMatch\" | \"conflict\" | undefined; alias_target_id?: string | undefined; alias_purpose?: \"savedObjectConversion\" | \"savedObjectImport\" | undefined; meta?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; note?: string | undefined; rule_name_override?: string | undefined; timestamp_override?: string | undefined; timestamp_override_fallback_disabled?: boolean | undefined; timeline_id?: string | undefined; timeline_title?: string | undefined; building_block_type?: string | undefined; output_index?: string | undefined; investigation_fields?: { field_names: string[]; } | undefined; execution_summary?: { last_execution: { message: string; date: string; status: \"running\" | \"succeeded\" | \"failed\" | \"going to run\" | \"partial failure\"; metrics: { total_search_duration_ms?: number | undefined; total_indexing_duration_ms?: number | undefined; total_enrichment_duration_ms?: number | undefined; execution_gap_duration_s?: number | undefined; }; status_order: number; }; } | undefined; index?: string[] | undefined; filters?: unknown[] | undefined; data_view_id?: string | undefined; saved_id?: string | undefined; alert_suppression?: { duration: { value: number; unit: \"m\" | \"h\" | \"s\"; }; } | undefined; } | { id: string; type: \"threat_match\"; name: string; actions: { params: {} & { [k: string]: unknown; }; id: string; group: string; action_type_id: string; uuid?: string | undefined; alerts_filter?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; frequency?: { throttle: string | null; notifyWhen: \"onActionGroupChange\" | \"onActiveAlert\" | \"onThrottleInterval\"; summary: boolean; } | undefined; }[]; tags: string[]; setup: string; enabled: boolean; revision: number; query: string; version: number; references: string[]; interval: string; description: string; risk_score: number; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; from: string; to: string; language: \"kuery\" | \"lucene\"; created_at: string; created_by: string; updated_at: string; updated_by: string; author: string[]; immutable: boolean; rule_id: string; threat: { framework: string; tactic: { id: string; name: string; reference: string; }; technique?: { id: string; name: string; reference: string; subtechnique?: { id: string; name: string; reference: string; }[] | undefined; }[] | undefined; }[]; risk_score_mapping: { value: string; field: string; operator: \"equals\"; risk_score?: number | undefined; }[]; severity_mapping: { value: string; field: string; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; operator: \"equals\"; }[]; exceptions_list: { id: string; type: \"endpoint\" | \"detection\" | \"rule_default\" | \"endpoint_trusted_apps\" | \"endpoint_events\" | \"endpoint_host_isolation_exceptions\" | \"endpoint_blocklists\"; list_id: string; namespace_type: \"single\" | \"agnostic\"; }[]; false_positives: string[]; max_signals: number; related_integrations: { version: string; package: string; integration?: string | undefined; }[]; required_fields: { type: string; name: string; ecs: boolean; }[]; threat_query: string; threat_mapping: { entries: { type: \"mapping\"; value: string; field: string; }[]; }[]; threat_index: string[]; namespace?: string | undefined; license?: string | undefined; throttle?: string | undefined; outcome?: \"exactMatch\" | \"aliasMatch\" | \"conflict\" | undefined; alias_target_id?: string | undefined; alias_purpose?: \"savedObjectConversion\" | \"savedObjectImport\" | undefined; meta?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; note?: string | undefined; rule_name_override?: string | undefined; timestamp_override?: string | undefined; timestamp_override_fallback_disabled?: boolean | undefined; timeline_id?: string | undefined; timeline_title?: string | undefined; building_block_type?: string | undefined; output_index?: string | undefined; investigation_fields?: { field_names: string[]; } | undefined; execution_summary?: { last_execution: { message: string; date: string; status: \"running\" | \"succeeded\" | \"failed\" | \"going to run\" | \"partial failure\"; metrics: { total_search_duration_ms?: number | undefined; total_indexing_duration_ms?: number | undefined; total_enrichment_duration_ms?: number | undefined; execution_gap_duration_s?: number | undefined; }; status_order: number; }; } | undefined; index?: string[] | undefined; filters?: unknown[] | undefined; data_view_id?: string | undefined; saved_id?: string | undefined; alert_suppression?: { group_by: string[]; duration?: { value: number; unit: \"m\" | \"h\" | \"s\"; } | undefined; missing_fields_strategy?: \"doNotSuppress\" | \"suppress\" | undefined; } | undefined; threat_filters?: unknown[] | undefined; threat_indicator_path?: string | undefined; threat_language?: \"lucene\" | \"kuery\" | undefined; concurrent_searches?: number | undefined; items_per_search?: number | undefined; } | { id: string; type: \"machine_learning\"; name: string; actions: { params: {} & { [k: string]: unknown; }; id: string; group: string; action_type_id: string; uuid?: string | undefined; alerts_filter?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; frequency?: { throttle: string | null; notifyWhen: \"onActionGroupChange\" | \"onActiveAlert\" | \"onThrottleInterval\"; summary: boolean; } | undefined; }[]; tags: string[]; setup: string; enabled: boolean; revision: number; version: number; references: string[]; interval: string; description: string; risk_score: number; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; from: string; to: string; created_at: string; created_by: string; updated_at: string; updated_by: string; author: string[]; immutable: boolean; rule_id: string; threat: { framework: string; tactic: { id: string; name: string; reference: string; }; technique?: { id: string; name: string; reference: string; subtechnique?: { id: string; name: string; reference: string; }[] | undefined; }[] | undefined; }[]; risk_score_mapping: { value: string; field: string; operator: \"equals\"; risk_score?: number | undefined; }[]; severity_mapping: { value: string; field: string; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; operator: \"equals\"; }[]; exceptions_list: { id: string; type: \"endpoint\" | \"detection\" | \"rule_default\" | \"endpoint_trusted_apps\" | \"endpoint_events\" | \"endpoint_host_isolation_exceptions\" | \"endpoint_blocklists\"; list_id: string; namespace_type: \"single\" | \"agnostic\"; }[]; false_positives: string[]; max_signals: number; related_integrations: { version: string; package: string; integration?: string | undefined; }[]; required_fields: { type: string; name: string; ecs: boolean; }[]; anomaly_threshold: number; machine_learning_job_id: (string | string[]) & (string | string[] | undefined); namespace?: string | undefined; license?: string | undefined; throttle?: string | undefined; outcome?: \"exactMatch\" | \"aliasMatch\" | \"conflict\" | undefined; alias_target_id?: string | undefined; alias_purpose?: \"savedObjectConversion\" | \"savedObjectImport\" | undefined; meta?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; note?: string | undefined; rule_name_override?: string | undefined; timestamp_override?: string | undefined; timestamp_override_fallback_disabled?: boolean | undefined; timeline_id?: string | undefined; timeline_title?: string | undefined; building_block_type?: string | undefined; output_index?: string | undefined; investigation_fields?: { field_names: string[]; } | undefined; execution_summary?: { last_execution: { message: string; date: string; status: \"running\" | \"succeeded\" | \"failed\" | \"going to run\" | \"partial failure\"; metrics: { total_search_duration_ms?: number | undefined; total_indexing_duration_ms?: number | undefined; total_enrichment_duration_ms?: number | undefined; execution_gap_duration_s?: number | undefined; }; status_order: number; }; } | undefined; } | { id: string; type: \"new_terms\"; name: string; actions: { params: {} & { [k: string]: unknown; }; id: string; group: string; action_type_id: string; uuid?: string | undefined; alerts_filter?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; frequency?: { throttle: string | null; notifyWhen: \"onActionGroupChange\" | \"onActiveAlert\" | \"onThrottleInterval\"; summary: boolean; } | undefined; }[]; tags: string[]; setup: string; enabled: boolean; revision: number; query: string; version: number; references: string[]; interval: string; description: string; risk_score: number; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; from: string; to: string; language: \"kuery\" | \"lucene\"; created_at: string; created_by: string; updated_at: string; updated_by: string; author: string[]; immutable: boolean; rule_id: string; threat: { framework: string; tactic: { id: string; name: string; reference: string; }; technique?: { id: string; name: string; reference: string; subtechnique?: { id: string; name: string; reference: string; }[] | undefined; }[] | undefined; }[]; risk_score_mapping: { value: string; field: string; operator: \"equals\"; risk_score?: number | undefined; }[]; severity_mapping: { value: string; field: string; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; operator: \"equals\"; }[]; exceptions_list: { id: string; type: \"endpoint\" | \"detection\" | \"rule_default\" | \"endpoint_trusted_apps\" | \"endpoint_events\" | \"endpoint_host_isolation_exceptions\" | \"endpoint_blocklists\"; list_id: string; namespace_type: \"single\" | \"agnostic\"; }[]; false_positives: string[]; max_signals: number; related_integrations: { version: string; package: string; integration?: string | undefined; }[]; required_fields: { type: string; name: string; ecs: boolean; }[]; new_terms_fields: string[]; history_window_start: string; namespace?: string | undefined; license?: string | undefined; throttle?: string | undefined; outcome?: \"exactMatch\" | \"aliasMatch\" | \"conflict\" | undefined; alias_target_id?: string | undefined; alias_purpose?: \"savedObjectConversion\" | \"savedObjectImport\" | undefined; meta?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; note?: string | undefined; rule_name_override?: string | undefined; timestamp_override?: string | undefined; timestamp_override_fallback_disabled?: boolean | undefined; timeline_id?: string | undefined; timeline_title?: string | undefined; building_block_type?: string | undefined; output_index?: string | undefined; investigation_fields?: { field_names: string[]; } | undefined; execution_summary?: { last_execution: { message: string; date: string; status: \"running\" | \"succeeded\" | \"failed\" | \"going to run\" | \"partial failure\"; metrics: { total_search_duration_ms?: number | undefined; total_indexing_duration_ms?: number | undefined; total_enrichment_duration_ms?: number | undefined; execution_gap_duration_s?: number | undefined; }; status_order: number; }; } | undefined; index?: string[] | undefined; filters?: unknown[] | undefined; data_view_id?: string | undefined; } | { id: string; type: \"esql\"; name: string; actions: { params: {} & { [k: string]: unknown; }; id: string; group: string; action_type_id: string; uuid?: string | undefined; alerts_filter?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; frequency?: { throttle: string | null; notifyWhen: \"onActionGroupChange\" | \"onActiveAlert\" | \"onThrottleInterval\"; summary: boolean; } | undefined; }[]; tags: string[]; setup: string; enabled: boolean; revision: number; query: string; version: number; references: string[]; interval: string; description: string; risk_score: number; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; from: string; to: string; language: \"esql\"; created_at: string; created_by: string; updated_at: string; updated_by: string; author: string[]; immutable: boolean; rule_id: string; threat: { framework: string; tactic: { id: string; name: string; reference: string; }; technique?: { id: string; name: string; reference: string; subtechnique?: { id: string; name: string; reference: string; }[] | undefined; }[] | undefined; }[]; risk_score_mapping: { value: string; field: string; operator: \"equals\"; risk_score?: number | undefined; }[]; severity_mapping: { value: string; field: string; severity: \"medium\" | \"high\" | \"low\" | \"critical\"; operator: \"equals\"; }[]; exceptions_list: { id: string; type: \"endpoint\" | \"detection\" | \"rule_default\" | \"endpoint_trusted_apps\" | \"endpoint_events\" | \"endpoint_host_isolation_exceptions\" | \"endpoint_blocklists\"; list_id: string; namespace_type: \"single\" | \"agnostic\"; }[]; false_positives: string[]; max_signals: number; related_integrations: { version: string; package: string; integration?: string | undefined; }[]; required_fields: { type: string; name: string; ecs: boolean; }[]; namespace?: string | undefined; license?: string | undefined; throttle?: string | undefined; outcome?: \"exactMatch\" | \"aliasMatch\" | \"conflict\" | undefined; alias_target_id?: string | undefined; alias_purpose?: \"savedObjectConversion\" | \"savedObjectImport\" | undefined; meta?: Zod.objectOutputType<{}, Zod.ZodUnknown, \"strip\"> | undefined; note?: string | undefined; rule_name_override?: string | undefined; timestamp_override?: string | undefined; timestamp_override_fallback_disabled?: boolean | undefined; timeline_id?: string | undefined; timeline_title?: string | undefined; building_block_type?: string | undefined; output_index?: string | undefined; investigation_fields?: { field_names: string[]; } | undefined; execution_summary?: { last_execution: { message: string; date: string; status: \"running\" | \"succeeded\" | \"failed\" | \"going to run\" | \"partial failure\"; metrics: { total_search_duration_ms?: number | undefined; total_indexing_duration_ms?: number | undefined; total_enrichment_duration_ms?: number | undefined; execution_gap_duration_s?: number | undefined; }; status_order: number; }; } | undefined; })[]"
            ],
            "path": "x-pack/plugins/security_solution/public/detection_engine/rule_management/logic/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-public.LinkItem",
        "type": "Interface",
        "tags": [],
        "label": "LinkItem",
        "description": [],
        "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.capabilities",
            "type": "CompoundType",
            "tags": [],
            "label": "capabilities",
            "description": [
              "\nCapabilities strings (using object dot notation) to enable the link.\n\nThe format of defining features supports OR and AND mechanism. To specify features in an OR fashion\nthey can be defined in a single level array like: [requiredFeature1, requiredFeature2]. If either of these features\nis satisfied the link would be included. To require that the features be AND'd together a second level array\ncan be specified: [feature1, [feature2, feature3]] this would result in feature1 || (feature2 && feature3). To specify\nfeatures that all must be and'd together an example would be: [[feature1, feature2]], this would result in the boolean\noperation feature1 && feature2.\n\nThe final format is to specify a single feature, this would be like: features: feature1, which is the same as\nfeatures: [feature1]"
            ],
            "signature": [
              "RequiredCapabilities",
              " | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.categories",
            "type": "Object",
            "tags": [],
            "label": "categories",
            "description": [
              "\nCategories to display in the navigation"
            ],
            "signature": [
              "readonly ",
              {
                "pluginId": "@kbn/security-solution-navigation",
                "scope": "common",
                "docId": "kibKbnSecuritySolutionNavigationPluginApi",
                "section": "def-common.LinkCategory",
                "text": "LinkCategory"
              },
              "<",
              {
                "pluginId": "@kbn/deeplinks-security",
                "scope": "common",
                "docId": "kibKbnDeeplinksSecurityPluginApi",
                "section": "def-common.SecurityPageName",
                "text": "SecurityPageName"
              },
              ">[] | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [
              "\nThe description of the link content"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.experimentalKey",
            "type": "CompoundType",
            "tags": [],
            "label": "experimentalKey",
            "description": [
              "\nExperimental flag needed to enable the link"
            ],
            "signature": [
              "\"assistantModelEvaluation\" | \"tGridEnabled\" | \"tGridEventRenderedViewEnabled\" | \"excludePoliciesInFilterEnabled\" | \"kubernetesEnabled\" | \"chartEmbeddablesEnabled\" | \"donutChartEmbeddablesEnabled\" | \"previewTelemetryUrlEnabled\" | \"insightsRelatedAlertsByProcessAncestry\" | \"extendedRuleExecutionLoggingEnabled\" | \"socTrendsEnabled\" | \"responseActionsEnabled\" | \"endpointResponseActionsEnabled\" | \"responseActionUploadEnabled\" | \"automatedProcessActionsEnabled\" | \"responseActionsSentinelOneV1Enabled\" | \"responseActionsSentinelOneV2Enabled\" | \"alertsPageChartsEnabled\" | \"alertTypeEnabled\" | \"expandableFlyoutInCreateRuleEnabled\" | \"expandableEventFlyoutEnabled\" | \"expandableTimelineFlyoutEnabled\" | \"alertsPageFiltersEnabled\" | \"newUserDetailsFlyout\" | \"newUserDetailsFlyoutManagedUser\" | \"newHostDetailsFlyout\" | \"riskScoringPersistence\" | \"riskScoringRoutesEnabled\" | \"esqlRulesDisabled\" | \"protectionUpdatesEnabled\" | \"disableTimelineSaveTour\" | \"riskEnginePrivilegesRouteEnabled\" | \"sentinelOneDataInAnalyzerEnabled\" | \"sentinelOneManualHostActionsEnabled\" | \"crowdstrikeDataInAnalyzerEnabled\" | \"jsonPrebuiltRulesDiffingEnabled\" | \"timelineEsqlTabDisabled\" | \"unifiedComponentsInTimelineEnabled\" | \"analyzerDatePickersAndSourcererDisabled\" | \"perFieldPrebuiltRulesDiffingEnabled\" | \"malwareOnWriteScanOptionAvailable\" | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.globalNavPosition",
            "type": "number",
            "tags": [],
            "label": "globalNavPosition",
            "description": [
              "\nGlobal navigation position number.\nDefine this property only if the link needs to be visible within\nthe Security section of the Kibana collapsible global navigation"
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.globalSearchDisabled",
            "type": "CompoundType",
            "tags": [],
            "label": "globalSearchDisabled",
            "description": [
              "\nDisables link in the global search. Defaults to false."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.globalSearchKeywords",
            "type": "Array",
            "tags": [],
            "label": "globalSearchKeywords",
            "description": [
              "\nKeywords for the global search to search."
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.hideTimeline",
            "type": "CompoundType",
            "tags": [],
            "label": "hideTimeline",
            "description": [
              "\nDisables the timeline call to action on the bottom of the page. Defaults to false."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.hideWhenExperimentalKey",
            "type": "CompoundType",
            "tags": [],
            "label": "hideWhenExperimentalKey",
            "description": [
              "\nExperimental flag needed to disable the link. Opposite of experimentalKey"
            ],
            "signature": [
              "\"assistantModelEvaluation\" | \"tGridEnabled\" | \"tGridEventRenderedViewEnabled\" | \"excludePoliciesInFilterEnabled\" | \"kubernetesEnabled\" | \"chartEmbeddablesEnabled\" | \"donutChartEmbeddablesEnabled\" | \"previewTelemetryUrlEnabled\" | \"insightsRelatedAlertsByProcessAncestry\" | \"extendedRuleExecutionLoggingEnabled\" | \"socTrendsEnabled\" | \"responseActionsEnabled\" | \"endpointResponseActionsEnabled\" | \"responseActionUploadEnabled\" | \"automatedProcessActionsEnabled\" | \"responseActionsSentinelOneV1Enabled\" | \"responseActionsSentinelOneV2Enabled\" | \"alertsPageChartsEnabled\" | \"alertTypeEnabled\" | \"expandableFlyoutInCreateRuleEnabled\" | \"expandableEventFlyoutEnabled\" | \"expandableTimelineFlyoutEnabled\" | \"alertsPageFiltersEnabled\" | \"newUserDetailsFlyout\" | \"newUserDetailsFlyoutManagedUser\" | \"newHostDetailsFlyout\" | \"riskScoringPersistence\" | \"riskScoringRoutesEnabled\" | \"esqlRulesDisabled\" | \"protectionUpdatesEnabled\" | \"disableTimelineSaveTour\" | \"riskEnginePrivilegesRouteEnabled\" | \"sentinelOneDataInAnalyzerEnabled\" | \"sentinelOneManualHostActionsEnabled\" | \"crowdstrikeDataInAnalyzerEnabled\" | \"jsonPrebuiltRulesDiffingEnabled\" | \"timelineEsqlTabDisabled\" | \"unifiedComponentsInTimelineEnabled\" | \"analyzerDatePickersAndSourcererDisabled\" | \"perFieldPrebuiltRulesDiffingEnabled\" | \"malwareOnWriteScanOptionAvailable\" | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.id",
            "type": "Enum",
            "tags": [],
            "label": "id",
            "description": [
              "\nLink id. Refers to a SecurityPageName"
            ],
            "signature": [
              {
                "pluginId": "@kbn/deeplinks-security",
                "scope": "common",
                "docId": "kibKbnDeeplinksSecurityPluginApi",
                "section": "def-common.SecurityPageName",
                "text": "SecurityPageName"
              }
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.isBeta",
            "type": "CompoundType",
            "tags": [],
            "label": "isBeta",
            "description": [
              "\nDisplays the \"Beta\" badge. Defaults to false."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.betaOptions",
            "type": "Object",
            "tags": [],
            "label": "betaOptions",
            "description": [
              "\nCustomize the \"Beta\" badge content."
            ],
            "signature": [
              "{ text: string; } | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.landingIcon",
            "type": "CompoundType",
            "tags": [],
            "label": "landingIcon",
            "description": [
              "\nIcon that is displayed on menu navigation landing page.\nOnly required for pages that are displayed inside a landing page."
            ],
            "signature": [
              "IconType",
              " | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.landingImage",
            "type": "string",
            "tags": [],
            "label": "landingImage",
            "description": [
              "\nImage that is displayed on menu navigation landing page.\nOnly required for pages that are displayed inside a landing page."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.licenseType",
            "type": "CompoundType",
            "tags": [],
            "label": "licenseType",
            "description": [
              "\nMinimum license required to enable the link"
            ],
            "signature": [
              "\"basic\" | \"standard\" | \"gold\" | \"platinum\" | \"enterprise\" | \"trial\" | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.links",
            "type": "Array",
            "tags": [],
            "label": "links",
            "description": [
              "\nNested links"
            ],
            "signature": [
              {
                "pluginId": "securitySolution",
                "scope": "public",
                "docId": "kibSecuritySolutionPluginApi",
                "section": "def-public.LinkItem",
                "text": "LinkItem"
              },
              "[] | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.path",
            "type": "string",
            "tags": [],
            "label": "path",
            "description": [
              "\nLink path relative to security root"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.sideNavDisabled",
            "type": "CompoundType",
            "tags": [],
            "label": "sideNavDisabled",
            "description": [
              "\nDisables link in the side navigation. Defaults to false."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.sideNavIcon",
            "type": "CompoundType",
            "tags": [],
            "label": "sideNavIcon",
            "description": [
              "\nIcon that is displayed on the side navigation menu."
            ],
            "signature": [
              "IconType",
              " | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.skipUrlState",
            "type": "CompoundType",
            "tags": [],
            "label": "skipUrlState",
            "description": [
              "\nDisables the state query string in the URL. Defaults to false."
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "\nTitle of the link"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.unauthorized",
            "type": "CompoundType",
            "tags": [],
            "label": "unauthorized",
            "description": [
              "\nReserved for links management, this property is set automatically"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.LinkItem.visibleIn",
            "type": "Array",
            "tags": [],
            "label": "visibleIn",
            "description": [
              "\nLocations where the link is visible in the UI"
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-application-browser",
                "scope": "common",
                "docId": "kibKbnCoreApplicationBrowserPluginApi",
                "section": "def-common.AppDeepLinkLocations",
                "text": "AppDeepLinkLocations"
              },
              "[] | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/common/links/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-public.TimelineModel",
        "type": "Interface",
        "tags": [],
        "label": "TimelineModel",
        "description": [],
        "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.activeTab",
            "type": "Enum",
            "tags": [],
            "label": "activeTab",
            "description": [
              "The selected tab to displayed in the timeline"
            ],
            "signature": [
              "TimelineTabs"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.prevActiveTab",
            "type": "Enum",
            "tags": [],
            "label": "prevActiveTab",
            "description": [],
            "signature": [
              "TimelineTabs"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.scrollToTop",
            "type": "Object",
            "tags": [],
            "label": "scrollToTop",
            "description": [
              "Used for scrolling to top when swiching tabs. It includes the timestamp of when the event happened"
            ],
            "signature": [
              "ScrollToTopEvent",
              " | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.createdBy",
            "type": "string",
            "tags": [],
            "label": "createdBy",
            "description": [
              "Timeline saved object owner"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.description",
            "type": "string",
            "tags": [],
            "label": "description",
            "description": [
              "A summary of the events and notes in this timeline"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.eqlOptions",
            "type": "Object",
            "tags": [],
            "label": "eqlOptions",
            "description": [],
            "signature": [
              {
                "pluginId": "timelines",
                "scope": "common",
                "docId": "kibTimelinesPluginApi",
                "section": "def-common.EqlOptionsSelected",
                "text": "EqlOptionsSelected"
              }
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.eventType",
            "type": "CompoundType",
            "tags": [],
            "label": "eventType",
            "description": [
              "Type of event you want to see in this timeline"
            ],
            "signature": [
              "TimelineEventsType",
              " | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.eventIdToNoteIds",
            "type": "Object",
            "tags": [],
            "label": "eventIdToNoteIds",
            "description": [
              "A map of events in this timeline to the chronologically ordered notes (in this timeline) associated with the event"
            ],
            "signature": [
              "{ [x: string]: string[]; }"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.historyIds",
            "type": "Array",
            "tags": [],
            "label": "historyIds",
            "description": [
              "The chronological history of actions related to this timeline"
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.highlightedDropAndProviderId",
            "type": "string",
            "tags": [],
            "label": "highlightedDropAndProviderId",
            "description": [
              "The chronological history of actions related to this timeline"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.isFavorite",
            "type": "boolean",
            "tags": [],
            "label": "isFavorite",
            "description": [
              "When true, this timeline was marked as \"favorite\" by the user"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.isLive",
            "type": "boolean",
            "tags": [],
            "label": "isLive",
            "description": [
              "When true, the timeline will update as new data arrives"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.kqlMode",
            "type": "CompoundType",
            "tags": [],
            "label": "kqlMode",
            "description": [
              "determines the behavior of the KQL bar"
            ],
            "signature": [
              "\"search\" | \"filter\""
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "Title"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.timelineType",
            "type": "Enum",
            "tags": [],
            "label": "timelineType",
            "description": [
              "timelineType: default | template"
            ],
            "signature": [
              "TimelineType"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.templateTimelineId",
            "type": "CompoundType",
            "tags": [],
            "label": "templateTimelineId",
            "description": [
              "an unique id for timeline template"
            ],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.templateTimelineVersion",
            "type": "CompoundType",
            "tags": [],
            "label": "templateTimelineVersion",
            "description": [
              "null for default timeline, number for timeline template"
            ],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.noteIds",
            "type": "Array",
            "tags": [],
            "label": "noteIds",
            "description": [
              "Notes added to the timeline itself. Notes added to events are stored (separately) in `eventIdToNote`"
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.pinnedEventIds",
            "type": "Object",
            "tags": [],
            "label": "pinnedEventIds",
            "description": [
              "Events pinned to this timeline"
            ],
            "signature": [
              "{ [x: string]: boolean; }"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.pinnedEventsSaveObject",
            "type": "Object",
            "tags": [],
            "label": "pinnedEventsSaveObject",
            "description": [],
            "signature": [
              "{ [x: string]: ",
              "PinnedEvent",
              "; }"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.resolveTimelineConfig",
            "type": "Object",
            "tags": [],
            "label": "resolveTimelineConfig",
            "description": [],
            "signature": [
              "ResolveTimelineConfig",
              " | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.showSaveModal",
            "type": "CompoundType",
            "tags": [],
            "label": "showSaveModal",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.savedQueryId",
            "type": "CompoundType",
            "tags": [],
            "label": "savedQueryId",
            "description": [],
            "signature": [
              "string | null | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.sessionViewConfig",
            "type": "CompoundType",
            "tags": [],
            "label": "sessionViewConfig",
            "description": [],
            "signature": [
              "SessionViewConfig",
              " | null"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.show",
            "type": "boolean",
            "tags": [],
            "label": "show",
            "description": [
              "When true, show the timeline flyover"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.status",
            "type": "Enum",
            "tags": [],
            "label": "status",
            "description": [
              "status: active | draft"
            ],
            "signature": [
              "TimelineStatus"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.updated",
            "type": "number",
            "tags": [],
            "label": "updated",
            "description": [
              "updated saved object timestamp"
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.updatedBy",
            "type": "CompoundType",
            "tags": [],
            "label": "updatedBy",
            "description": [
              "updated saved object user"
            ],
            "signature": [
              "string | null | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.isSaving",
            "type": "boolean",
            "tags": [],
            "label": "isSaving",
            "description": [
              "timeline is saving"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.version",
            "type": "CompoundType",
            "tags": [],
            "label": "version",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.initialized",
            "type": "CompoundType",
            "tags": [],
            "label": "initialized",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.savedObjectId",
            "type": "CompoundType",
            "tags": [],
            "label": "savedObjectId",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.sort",
            "type": "Array",
            "tags": [],
            "label": "sort",
            "description": [
              " Specifies which column the timeline is sorted on, and the direction (ascending / descending)"
            ],
            "signature": [
              "SortColumnTimeline",
              "[]"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.columns",
            "type": "Array",
            "tags": [],
            "label": "columns",
            "description": [
              "The columns displayed in the data table"
            ],
            "signature": [
              "ColumnHeaderOptions",
              "[]"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.defaultColumns",
            "type": "Array",
            "tags": [],
            "label": "defaultColumns",
            "description": [],
            "signature": [
              "ColumnHeaderOptions",
              "[]"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.dataProviders",
            "type": "Array",
            "tags": [],
            "label": "dataProviders",
            "description": [
              "The sources of the event data shown in the data table"
            ],
            "signature": [
              {
                "pluginId": "timelines",
                "scope": "common",
                "docId": "kibTimelinesPluginApi",
                "section": "def-common.DataProvider",
                "text": "DataProvider"
              },
              "[]"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.dataViewId",
            "type": "CompoundType",
            "tags": [],
            "label": "dataViewId",
            "description": [
              "Kibana data view id"
            ],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.deletedEventIds",
            "type": "Array",
            "tags": [],
            "label": "deletedEventIds",
            "description": [
              "Events to not be rendered"
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.documentType",
            "type": "string",
            "tags": [],
            "label": "documentType",
            "description": [],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.excludedRowRendererIds",
            "type": "Array",
            "tags": [],
            "label": "excludedRowRendererIds",
            "description": [],
            "signature": [
              "RowRendererId",
              "[]"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.filters",
            "type": "Array",
            "tags": [],
            "label": "filters",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.Filter",
                "text": "Filter"
              },
              "[] | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.footerText",
            "type": "CompoundType",
            "tags": [],
            "label": "footerText",
            "description": [],
            "signature": [
              "boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.loadingText",
            "type": "CompoundType",
            "tags": [],
            "label": "loadingText",
            "description": [],
            "signature": [
              "boolean | React.ReactChild | React.ReactFragment | React.ReactPortal | null | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.queryFields",
            "type": "Array",
            "tags": [],
            "label": "queryFields",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.expandedDetail",
            "type": "Object",
            "tags": [],
            "label": "expandedDetail",
            "description": [
              "This holds the view information for the flyout when viewing timeline in a consuming view (i.e. hosts page) or the side panel in the primary timeline view"
            ],
            "signature": [
              "{ query?: ",
              "ExpandedDetailType",
              " | undefined; graph?: ",
              "ExpandedDetailType",
              " | undefined; notes?: ",
              "ExpandedDetailType",
              " | undefined; pinned?: ",
              "ExpandedDetailType",
              " | undefined; eql?: ",
              "ExpandedDetailType",
              " | undefined; session?: ",
              "ExpandedDetailType",
              " | undefined; securityAssistant?: ",
              "ExpandedDetailType",
              " | undefined; esql?: ",
              "ExpandedDetailType",
              " | undefined; }"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.graphEventId",
            "type": "string",
            "tags": [],
            "label": "graphEventId",
            "description": [
              "When non-empty, display a graph view for this event"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.indexNames",
            "type": "Array",
            "tags": [],
            "label": "indexNames",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.itemsPerPage",
            "type": "number",
            "tags": [],
            "label": "itemsPerPage",
            "description": [
              "The number of items to show in a single page of results"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.itemsPerPageOptions",
            "type": "Array",
            "tags": [],
            "label": "itemsPerPageOptions",
            "description": [
              "Displays a series of choices that when selected, become the value of `itemsPerPage`"
            ],
            "signature": [
              "number[]"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.kqlQuery",
            "type": "Object",
            "tags": [],
            "label": "kqlQuery",
            "description": [
              "the KQL query in the KQL bar"
            ],
            "signature": [
              "{ filterQuery: ",
              "SerializedFilterQuery",
              " | null; }"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.loadingEventIds",
            "type": "Array",
            "tags": [],
            "label": "loadingEventIds",
            "description": [
              "Events to be rendered as loading"
            ],
            "signature": [
              "string[]"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.dateRange",
            "type": "Object",
            "tags": [],
            "label": "dateRange",
            "description": [
              "Specifies the granularity of the date range (e.g. 1 Day / Week / Month) applicable to the mini-map"
            ],
            "signature": [
              "{ start: string; end: string; }"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "Uniquely identifies the timeline"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.selectedEventIds",
            "type": "Object",
            "tags": [],
            "label": "selectedEventIds",
            "description": [],
            "signature": [
              "{ [x: string]: ",
              {
                "pluginId": "timelines",
                "scope": "common",
                "docId": "kibTimelinesPluginApi",
                "section": "def-common.TimelineNonEcsData",
                "text": "TimelineNonEcsData"
              },
              "[]; }"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.isSelectAllChecked",
            "type": "boolean",
            "tags": [],
            "label": "isSelectAllChecked",
            "description": [
              "If selectAll checkbox in header is checked"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.isLoading",
            "type": "boolean",
            "tags": [],
            "label": "isLoading",
            "description": [],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.selectAll",
            "type": "boolean",
            "tags": [],
            "label": "selectAll",
            "description": [],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.savedSearchId",
            "type": "CompoundType",
            "tags": [],
            "label": "savedSearchId",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.savedSearch",
            "type": "CompoundType",
            "tags": [],
            "label": "savedSearch",
            "description": [],
            "signature": [
              {
                "pluginId": "savedSearch",
                "scope": "common",
                "docId": "kibSavedSearchPluginApi",
                "section": "def-common.SavedSearch",
                "text": "SavedSearch"
              },
              " | null"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.isDataProviderVisible",
            "type": "boolean",
            "tags": [],
            "label": "isDataProviderVisible",
            "description": [],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.changed",
            "type": "CompoundType",
            "tags": [],
            "label": "changed",
            "description": [
              "used to mark the timeline as unsaved in the UI"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.rowHeight",
            "type": "number",
            "tags": [],
            "label": "rowHeight",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.sampleSize",
            "type": "number",
            "tags": [],
            "label": "sampleSize",
            "description": [],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-public.TimelineModel.confirmingNoteId",
            "type": "CompoundType",
            "tags": [],
            "label": "confirmingNoteId",
            "description": [
              "the note id pending deletion"
            ],
            "signature": [
              "string | null | undefined"
            ],
            "path": "x-pack/plugins/security_solution/public/timelines/store/model.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "securitySolution",
        "id": "def-public.AddIntegrationsSteps",
        "type": "string",
        "tags": [],
        "label": "AddIntegrationsSteps",
        "description": [],
        "path": "x-pack/plugins/security_solution/public/common/components/landing_page/onboarding/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-public.CreateProjectSteps",
        "type": "string",
        "tags": [],
        "label": "CreateProjectSteps",
        "description": [],
        "path": "x-pack/plugins/security_solution/public/common/components/landing_page/onboarding/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-public.EnablePrebuiltRulesSteps",
        "type": "string",
        "tags": [],
        "label": "EnablePrebuiltRulesSteps",
        "description": [],
        "path": "x-pack/plugins/security_solution/public/common/components/landing_page/onboarding/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-public.OverviewSteps",
        "type": "string",
        "tags": [],
        "label": "OverviewSteps",
        "description": [],
        "path": "x-pack/plugins/security_solution/public/common/components/landing_page/onboarding/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-public.ViewAlertsSteps",
        "type": "string",
        "tags": [],
        "label": "ViewAlertsSteps",
        "description": [],
        "path": "x-pack/plugins/security_solution/public/common/components/landing_page/onboarding/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-public.ViewDashboardSteps",
        "type": "string",
        "tags": [],
        "label": "ViewDashboardSteps",
        "description": [],
        "path": "x-pack/plugins/security_solution/public/common/components/landing_page/onboarding/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "securitySolution",
      "id": "def-public.PluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "PluginSetup",
      "description": [],
      "path": "x-pack/plugins/security_solution/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "securitySolution",
          "id": "def-public.PluginSetup.resolver",
          "type": "Function",
          "tags": [],
          "label": "resolver",
          "description": [],
          "signature": [
            "() => Promise<",
            "ResolverPluginSetup",
            ">"
          ],
          "path": "x-pack/plugins/security_solution/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "securitySolution",
          "id": "def-public.PluginSetup.experimentalFeatures",
          "type": "Object",
          "tags": [],
          "label": "experimentalFeatures",
          "description": [],
          "signature": [
            "{ readonly tGridEnabled: boolean; readonly tGridEventRenderedViewEnabled: boolean; readonly excludePoliciesInFilterEnabled: boolean; readonly kubernetesEnabled: boolean; readonly chartEmbeddablesEnabled: boolean; readonly donutChartEmbeddablesEnabled: boolean; readonly previewTelemetryUrlEnabled: boolean; readonly insightsRelatedAlertsByProcessAncestry: boolean; readonly extendedRuleExecutionLoggingEnabled: boolean; readonly socTrendsEnabled: boolean; readonly responseActionsEnabled: boolean; readonly endpointResponseActionsEnabled: boolean; readonly responseActionUploadEnabled: boolean; readonly automatedProcessActionsEnabled: boolean; readonly responseActionsSentinelOneV1Enabled: boolean; readonly responseActionsSentinelOneV2Enabled: boolean; readonly alertsPageChartsEnabled: boolean; readonly alertTypeEnabled: boolean; readonly expandableFlyoutInCreateRuleEnabled: boolean; readonly expandableEventFlyoutEnabled: boolean; readonly expandableTimelineFlyoutEnabled: boolean; readonly alertsPageFiltersEnabled: boolean; readonly assistantModelEvaluation: boolean; readonly newUserDetailsFlyout: boolean; readonly newUserDetailsFlyoutManagedUser: boolean; readonly newHostDetailsFlyout: boolean; readonly riskScoringPersistence: boolean; readonly riskScoringRoutesEnabled: boolean; readonly esqlRulesDisabled: boolean; readonly protectionUpdatesEnabled: boolean; readonly disableTimelineSaveTour: boolean; readonly riskEnginePrivilegesRouteEnabled: boolean; readonly sentinelOneDataInAnalyzerEnabled: boolean; readonly sentinelOneManualHostActionsEnabled: boolean; readonly crowdstrikeDataInAnalyzerEnabled: boolean; readonly jsonPrebuiltRulesDiffingEnabled: boolean; readonly timelineEsqlTabDisabled: boolean; readonly unifiedComponentsInTimelineEnabled: boolean; readonly analyzerDatePickersAndSourcererDisabled: boolean; readonly perFieldPrebuiltRulesDiffingEnabled: boolean; readonly malwareOnWriteScanOptionAvailable: boolean; }"
          ],
          "path": "x-pack/plugins/security_solution/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        },
        {
          "parentPluginId": "securitySolution",
          "id": "def-public.PluginSetup.setAppLinksSwitcher",
          "type": "Function",
          "tags": [],
          "label": "setAppLinksSwitcher",
          "description": [],
          "signature": [
            "(appLinksSwitcher: ",
            "AppLinksSwitcher",
            ") => void"
          ],
          "path": "x-pack/plugins/security_solution/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "securitySolution",
              "id": "def-public.PluginSetup.setAppLinksSwitcher.$1",
              "type": "Function",
              "tags": [],
              "label": "appLinksSwitcher",
              "description": [],
              "signature": [
                "AppLinksSwitcher"
              ],
              "path": "x-pack/plugins/security_solution/public/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        },
        {
          "parentPluginId": "securitySolution",
          "id": "def-public.PluginSetup.setDeepLinksFormatter",
          "type": "Function",
          "tags": [],
          "label": "setDeepLinksFormatter",
          "description": [],
          "signature": [
            "(deepLinksFormatter: ",
            "DeepLinksFormatter",
            ") => void"
          ],
          "path": "x-pack/plugins/security_solution/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "securitySolution",
              "id": "def-public.PluginSetup.setDeepLinksFormatter.$1",
              "type": "Function",
              "tags": [],
              "label": "deepLinksFormatter",
              "description": [],
              "signature": [
                "DeepLinksFormatter"
              ],
              "path": "x-pack/plugins/security_solution/public/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "securitySolution",
      "id": "def-public.PluginStart",
      "type": "Interface",
      "tags": [],
      "label": "PluginStart",
      "description": [],
      "path": "x-pack/plugins/security_solution/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "securitySolution",
          "id": "def-public.PluginStart.getNavLinks$",
          "type": "Function",
          "tags": [],
          "label": "getNavLinks$",
          "description": [],
          "signature": [
            "() => ",
            "Observable",
            "<",
            "NavigationLink",
            "[]>"
          ],
          "path": "x-pack/plugins/security_solution/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "securitySolution",
          "id": "def-public.PluginStart.setExtraRoutes",
          "type": "Function",
          "tags": [],
          "label": "setExtraRoutes",
          "description": [],
          "signature": [
            "(extraRoutes: ",
            "RouteProps",
            "<string, { [x: string]: string | undefined; }>[]) => void"
          ],
          "path": "x-pack/plugins/security_solution/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [
            {
              "parentPluginId": "securitySolution",
              "id": "def-public.PluginStart.setExtraRoutes.$1",
              "type": "Array",
              "tags": [],
              "label": "extraRoutes",
              "description": [],
              "signature": [
                "RouteProps",
                "<string, { [x: string]: string | undefined; }>[]"
              ],
              "path": "x-pack/plugins/security_solution/public/types.ts",
              "deprecated": false,
              "trackAdoption": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        },
        {
          "parentPluginId": "securitySolution",
          "id": "def-public.PluginStart.setComponents",
          "type": "Function",
          "tags": [],
          "label": "setComponents",
          "description": [],
          "signature": [
            "(components: Partial<{ GetStarted: React.ComponentType<{ indicesExist?: boolean | undefined; }>; DashboardsLandingCallout: React.ComponentType<{}>; }>) => void"
          ],
          "path": "x-pack/plugins/security_solution/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "returnComment": [],
          "children": [
            {
              "parentPluginId": "securitySolution",
              "id": "def-public.PluginStart.setComponents.$1",
              "type": "Object",
              "tags": [],
              "label": "components",
              "description": [],
              "signature": [
                "{ GetStarted?: React.ComponentType<{ indicesExist?: boolean | undefined; }> | undefined; DashboardsLandingCallout?: React.ComponentType<{}> | undefined; }"
              ],
              "path": "x-pack/plugins/security_solution/public/contract_components.ts",
              "deprecated": false,
              "trackAdoption": false
            }
          ]
        },
        {
          "parentPluginId": "securitySolution",
          "id": "def-public.PluginStart.getBreadcrumbsNav$",
          "type": "Function",
          "tags": [],
          "label": "getBreadcrumbsNav$",
          "description": [],
          "signature": [
            "() => ",
            "Observable",
            "<",
            "BreadcrumbsNav",
            ">"
          ],
          "path": "x-pack/plugins/security_solution/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "securitySolution",
          "id": "def-public.PluginStart.getUpselling",
          "type": "Function",
          "tags": [],
          "label": "getUpselling",
          "description": [],
          "signature": [
            "() => ",
            "UpsellingService"
          ],
          "path": "x-pack/plugins/security_solution/public/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "securitySolution",
          "id": "def-public.PluginStart.setOnboardingPageSettings",
          "type": "Object",
          "tags": [],
          "label": "setOnboardingPageSettings",
          "description": [],
          "signature": [
            "OnboardingPageService"
          ],
          "path": "x-pack/plugins/security_solution/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "securitySolution",
        "id": "def-server.AppClient",
        "type": "Class",
        "tags": [],
        "label": "AppClient",
        "description": [],
        "path": "x-pack/plugins/security_solution/server/client/client.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.AppClient.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/security_solution/server/client/client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "securitySolution",
                "id": "def-server.AppClient.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "spaceId",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/security_solution/server/client/client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "securitySolution",
                "id": "def-server.AppClient.Unnamed.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "config",
                "description": [],
                "signature": [
                  {
                    "pluginId": "securitySolution",
                    "scope": "server",
                    "docId": "kibSecuritySolutionPluginApi",
                    "section": "def-server.ConfigType",
                    "text": "ConfigType"
                  }
                ],
                "path": "x-pack/plugins/security_solution/server/client/client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "securitySolution",
                "id": "def-server.AppClient.Unnamed.$3",
                "type": "string",
                "tags": [],
                "label": "kibanaVersion",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/security_solution/server/client/client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "securitySolution",
                "id": "def-server.AppClient.Unnamed.$4",
                "type": "string",
                "tags": [],
                "label": "kibanaBranch",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/security_solution/server/client/client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.AppClient.getAlertsIndex",
            "type": "Function",
            "tags": [],
            "label": "getAlertsIndex",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "x-pack/plugins/security_solution/server/client/client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.AppClient.getSignalsIndex",
            "type": "Function",
            "tags": [],
            "label": "getSignalsIndex",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "x-pack/plugins/security_solution/server/client/client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.AppClient.getPreviewIndex",
            "type": "Function",
            "tags": [],
            "label": "getPreviewIndex",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "x-pack/plugins/security_solution/server/client/client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.AppClient.getSourcererDataViewId",
            "type": "Function",
            "tags": [],
            "label": "getSourcererDataViewId",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "x-pack/plugins/security_solution/server/client/client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.AppClient.getSpaceId",
            "type": "Function",
            "tags": [],
            "label": "getSpaceId",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "x-pack/plugins/security_solution/server/client/client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.AppClient.getKibanaVersion",
            "type": "Function",
            "tags": [],
            "label": "getKibanaVersion",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "x-pack/plugins/security_solution/server/client/client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.AppClient.getKibanaBranch",
            "type": "Function",
            "tags": [],
            "label": "getKibanaBranch",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "x-pack/plugins/security_solution/server/client/client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-server.Plugin",
        "type": "Class",
        "tags": [],
        "label": "Plugin",
        "description": [],
        "signature": [
          {
            "pluginId": "securitySolution",
            "scope": "server",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-server.Plugin",
            "text": "Plugin"
          },
          " implements ",
          {
            "pluginId": "@kbn/core-plugins-server",
            "scope": "common",
            "docId": "kibKbnCorePluginsServerPluginApi",
            "section": "def-common.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "securitySolution",
            "scope": "server",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-server.SecuritySolutionPluginSetup",
            "text": "SecuritySolutionPluginSetup"
          },
          ", ",
          {
            "pluginId": "securitySolution",
            "scope": "server",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-server.SecuritySolutionPluginStart",
            "text": "SecuritySolutionPluginStart"
          },
          ", ",
          "SecuritySolutionPluginSetupDependencies",
          ", ",
          "SecuritySolutionPluginStartDependencies",
          ">"
        ],
        "path": "x-pack/plugins/security_solution/server/plugin.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.Plugin.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/security_solution/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "securitySolution",
                "id": "def-server.Plugin.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "context",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-plugins-server",
                    "scope": "common",
                    "docId": "kibKbnCorePluginsServerPluginApi",
                    "section": "def-common.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<unknown>"
                ],
                "path": "x-pack/plugins/security_solution/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.Plugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              "SecuritySolutionPluginCoreSetupDependencies",
              ", plugins: ",
              "SecuritySolutionPluginSetupDependencies",
              ") => ",
              {
                "pluginId": "securitySolution",
                "scope": "server",
                "docId": "kibSecuritySolutionPluginApi",
                "section": "def-server.SecuritySolutionPluginSetup",
                "text": "SecuritySolutionPluginSetup"
              }
            ],
            "path": "x-pack/plugins/security_solution/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "securitySolution",
                "id": "def-server.Plugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  "SecuritySolutionPluginCoreSetupDependencies"
                ],
                "path": "x-pack/plugins/security_solution/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "securitySolution",
                "id": "def-server.Plugin.setup.$2",
                "type": "Object",
                "tags": [],
                "label": "plugins",
                "description": [],
                "signature": [
                  "SecuritySolutionPluginSetupDependencies"
                ],
                "path": "x-pack/plugins/security_solution/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.Plugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-server",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleServerPluginApi",
                "section": "def-common.CoreStart",
                "text": "CoreStart"
              },
              ", plugins: ",
              "SecuritySolutionPluginStartDependencies",
              ") => ",
              {
                "pluginId": "securitySolution",
                "scope": "server",
                "docId": "kibSecuritySolutionPluginApi",
                "section": "def-server.SecuritySolutionPluginStart",
                "text": "SecuritySolutionPluginStart"
              }
            ],
            "path": "x-pack/plugins/security_solution/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "securitySolution",
                "id": "def-server.Plugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-server",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleServerPluginApi",
                    "section": "def-common.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "x-pack/plugins/security_solution/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "securitySolution",
                "id": "def-server.Plugin.start.$2",
                "type": "Object",
                "tags": [],
                "label": "plugins",
                "description": [],
                "signature": [
                  "SecuritySolutionPluginStartDependencies"
                ],
                "path": "x-pack/plugins/security_solution/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.Plugin.stop",
            "type": "Function",
            "tags": [],
            "label": "stop",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "x-pack/plugins/security_solution/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "securitySolution",
        "id": "def-server.SecuritySolutionApiRequestHandlerContext",
        "type": "Interface",
        "tags": [],
        "label": "SecuritySolutionApiRequestHandlerContext",
        "description": [],
        "path": "x-pack/plugins/security_solution/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.core",
            "type": "Object",
            "tags": [],
            "label": "core",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-http-request-handler-context-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpRequestHandlerContextServerPluginApi",
                "section": "def-common.CoreRequestHandlerContext",
                "text": "CoreRequestHandlerContext"
              }
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getServerBasePath",
            "type": "Function",
            "tags": [],
            "label": "getServerBasePath",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getEndpointAuthz",
            "type": "Function",
            "tags": [],
            "label": "getEndpointAuthz",
            "description": [],
            "signature": [
              "() => Promise<",
              "ImmutableObject",
              "<",
              "EndpointAuthz",
              ">>"
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getConfig",
            "type": "Function",
            "tags": [],
            "label": "getConfig",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "securitySolution",
                "scope": "server",
                "docId": "kibSecuritySolutionPluginApi",
                "section": "def-server.ConfigType",
                "text": "ConfigType"
              }
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getFrameworkRequest",
            "type": "Function",
            "tags": [],
            "label": "getFrameworkRequest",
            "description": [],
            "signature": [
              "() => ",
              "FrameworkRequest"
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getAppClient",
            "type": "Function",
            "tags": [],
            "label": "getAppClient",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "securitySolution",
                "scope": "server",
                "docId": "kibSecuritySolutionPluginApi",
                "section": "def-server.AppClient",
                "text": "AppClient"
              }
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getSpaceId",
            "type": "Function",
            "tags": [],
            "label": "getSpaceId",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getRuleDataService",
            "type": "Function",
            "tags": [],
            "label": "getRuleDataService",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "ruleRegistry",
                "scope": "server",
                "docId": "kibRuleRegistryPluginApi",
                "section": "def-server.IRuleDataService",
                "text": "IRuleDataService"
              }
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getDetectionEngineHealthClient",
            "type": "Function",
            "tags": [],
            "label": "getDetectionEngineHealthClient",
            "description": [],
            "signature": [
              "() => ",
              "IDetectionEngineHealthClient"
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getRuleExecutionLog",
            "type": "Function",
            "tags": [],
            "label": "getRuleExecutionLog",
            "description": [],
            "signature": [
              "() => ",
              "IRuleExecutionLogForRoutes"
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getRacClient",
            "type": "Function",
            "tags": [],
            "label": "getRacClient",
            "description": [],
            "signature": [
              "(req: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => Promise<",
              {
                "pluginId": "ruleRegistry",
                "scope": "server",
                "docId": "kibRuleRegistryPluginApi",
                "section": "def-server.AlertsClient",
                "text": "AlertsClient"
              },
              ">"
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "securitySolution",
                "id": "def-server.SecuritySolutionApiRequestHandlerContext.getRacClient.$1",
                "type": "Object",
                "tags": [],
                "label": "req",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-server",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpServerPluginApi",
                    "section": "def-common.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "x-pack/plugins/security_solution/server/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getExceptionListClient",
            "type": "Function",
            "tags": [],
            "label": "getExceptionListClient",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "lists",
                "scope": "server",
                "docId": "kibListsPluginApi",
                "section": "def-server.ExceptionListClient",
                "text": "ExceptionListClient"
              },
              " | null"
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getInternalFleetServices",
            "type": "Function",
            "tags": [],
            "label": "getInternalFleetServices",
            "description": [],
            "signature": [
              "() => ",
              "EndpointInternalFleetServicesInterface"
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getRiskEngineDataClient",
            "type": "Function",
            "tags": [],
            "label": "getRiskEngineDataClient",
            "description": [],
            "signature": [
              "() => ",
              "RiskEngineDataClient"
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getRiskScoreDataClient",
            "type": "Function",
            "tags": [],
            "label": "getRiskScoreDataClient",
            "description": [],
            "signature": [
              "() => ",
              "RiskScoreDataClient"
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "securitySolution",
            "id": "def-server.SecuritySolutionApiRequestHandlerContext.getAssetCriticalityDataClient",
            "type": "Function",
            "tags": [],
            "label": "getAssetCriticalityDataClient",
            "description": [],
            "signature": [
              "() => ",
              "AssetCriticalityDataClient"
            ],
            "path": "x-pack/plugins/security_solution/server/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "securitySolution",
        "id": "def-server.ConfigType",
        "type": "Type",
        "tags": [],
        "label": "ConfigType",
        "description": [],
        "signature": [
          "Omit<Readonly<{ prebuiltRulesPackageVersion?: string | undefined; } & { enabled: boolean; enableUiSettingsValidations: boolean; signalsIndex: string; maxRuleImportExportSize: number; maxRuleImportPayloadBytes: number; maxTimelineImportExportSize: number; maxTimelineImportPayloadBytes: number; alertMergeStrategy: \"allFields\" | \"missingFields\" | \"noFields\"; alertIgnoreFields: string[]; enableExperimental: string[]; packagerTaskInterval: string; packagerTaskTimeout: string; packagerTaskPackagePolicyUpdateBatchSize: number; completeExternalResponseActionsTaskInterval: string; completeExternalResponseActionsTaskTimeout: string; maxUploadResponseActionFileBytes: number; offeringSettings: Record<string, boolean>; entityAnalytics: Readonly<{} & { riskEngine: Readonly<{} & { alertSampleSizePerShard: number; }>; }>; }>, \"offeringSettings\"> & { experimentalFeatures: ",
          {
            "pluginId": "securitySolution",
            "scope": "common",
            "docId": "kibSecuritySolutionPluginApi",
            "section": "def-common.ExperimentalFeatures",
            "text": "ExperimentalFeatures"
          },
          "; settings: ",
          "ConfigSettings",
          "; enableUiSettingsValidations: boolean; }"
        ],
        "path": "x-pack/plugins/security_solution/server/config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "securitySolution",
      "id": "def-server.SecuritySolutionPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "SecuritySolutionPluginSetup",
      "description": [],
      "path": "x-pack/plugins/security_solution/server/plugin_contract.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "securitySolution",
          "id": "def-server.SecuritySolutionPluginSetup.setProductFeaturesConfigurator",
          "type": "Function",
          "tags": [],
          "label": "setProductFeaturesConfigurator",
          "description": [
            "\nSets the configurations for app features that are available to the Security Solution"
          ],
          "signature": [
            "(configurator: ",
            "ProductFeaturesConfigurator",
            ") => void"
          ],
          "path": "x-pack/plugins/security_solution/server/plugin_contract.ts",
          "deprecated": false,
          "trackAdoption": false,
          "returnComment": [],
          "children": [
            {
              "parentPluginId": "securitySolution",
              "id": "def-server.SecuritySolutionPluginSetup.setProductFeaturesConfigurator.$1",
              "type": "Object",
              "tags": [],
              "label": "configurator",
              "description": [],
              "signature": [
                "ProductFeaturesConfigurator"
              ],
              "path": "x-pack/plugins/security_solution/server/lib/product_features_service/product_features_service.ts",
              "deprecated": false,
              "trackAdoption": false
            }
          ]
        },
        {
          "parentPluginId": "securitySolution",
          "id": "def-server.SecuritySolutionPluginSetup.experimentalFeatures",
          "type": "Object",
          "tags": [],
          "label": "experimentalFeatures",
          "description": [
            "\nThe security solution generic experimental features"
          ],
          "signature": [
            "{ readonly tGridEnabled: boolean; readonly tGridEventRenderedViewEnabled: boolean; readonly excludePoliciesInFilterEnabled: boolean; readonly kubernetesEnabled: boolean; readonly chartEmbeddablesEnabled: boolean; readonly donutChartEmbeddablesEnabled: boolean; readonly previewTelemetryUrlEnabled: boolean; readonly insightsRelatedAlertsByProcessAncestry: boolean; readonly extendedRuleExecutionLoggingEnabled: boolean; readonly socTrendsEnabled: boolean; readonly responseActionsEnabled: boolean; readonly endpointResponseActionsEnabled: boolean; readonly responseActionUploadEnabled: boolean; readonly automatedProcessActionsEnabled: boolean; readonly responseActionsSentinelOneV1Enabled: boolean; readonly responseActionsSentinelOneV2Enabled: boolean; readonly alertsPageChartsEnabled: boolean; readonly alertTypeEnabled: boolean; readonly expandableFlyoutInCreateRuleEnabled: boolean; readonly expandableEventFlyoutEnabled: boolean; readonly expandableTimelineFlyoutEnabled: boolean; readonly alertsPageFiltersEnabled: boolean; readonly assistantModelEvaluation: boolean; readonly newUserDetailsFlyout: boolean; readonly newUserDetailsFlyoutManagedUser: boolean; readonly newHostDetailsFlyout: boolean; readonly riskScoringPersistence: boolean; readonly riskScoringRoutesEnabled: boolean; readonly esqlRulesDisabled: boolean; readonly protectionUpdatesEnabled: boolean; readonly disableTimelineSaveTour: boolean; readonly riskEnginePrivilegesRouteEnabled: boolean; readonly sentinelOneDataInAnalyzerEnabled: boolean; readonly sentinelOneManualHostActionsEnabled: boolean; readonly crowdstrikeDataInAnalyzerEnabled: boolean; readonly jsonPrebuiltRulesDiffingEnabled: boolean; readonly timelineEsqlTabDisabled: boolean; readonly unifiedComponentsInTimelineEnabled: boolean; readonly analyzerDatePickersAndSourcererDisabled: boolean; readonly perFieldPrebuiltRulesDiffingEnabled: boolean; readonly malwareOnWriteScanOptionAvailable: boolean; }"
          ],
          "path": "x-pack/plugins/security_solution/server/plugin_contract.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "securitySolution",
      "id": "def-server.SecuritySolutionPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "SecuritySolutionPluginStart",
      "description": [],
      "path": "x-pack/plugins/security_solution/server/plugin_contract.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.SecurityPageName",
        "type": "Enum",
        "tags": [],
        "label": "SecurityPageName",
        "description": [],
        "path": "packages/deeplinks/security/deep_links.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.ADD_DATA_PATH",
        "type": "string",
        "tags": [],
        "label": "ADD_DATA_PATH",
        "description": [],
        "signature": [
          "\"/app/integrations/browse/security\""
        ],
        "path": "x-pack/plugins/security_solution/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.APP_ID",
        "type": "string",
        "tags": [],
        "label": "APP_ID",
        "description": [
          "\nas const\n\nThe const assertion ensures that type widening does not occur\nhttps://mariusschulz.com/blog/literal-type-widening-in-typescript\nPlease follow this convention when adding to this file"
        ],
        "signature": [
          "\"securitySolution\""
        ],
        "path": "x-pack/plugins/security_solution/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.APP_PATH",
        "type": "string",
        "tags": [],
        "label": "APP_PATH",
        "description": [],
        "signature": [
          "\"/app/security\""
        ],
        "path": "x-pack/plugins/security_solution/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.APP_UI_ID",
        "type": "string",
        "tags": [],
        "label": "APP_UI_ID",
        "description": [],
        "signature": [
          "\"securitySolutionUI\""
        ],
        "path": "x-pack/plugins/security_solution/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.CASES_FEATURE_ID",
        "type": "string",
        "tags": [],
        "label": "CASES_FEATURE_ID",
        "description": [],
        "signature": [
          "\"securitySolutionCases\""
        ],
        "path": "x-pack/plugins/security_solution/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.DETECTION_ENGINE_RULES_URL_FIND",
        "type": "string",
        "tags": [],
        "label": "DETECTION_ENGINE_RULES_URL_FIND",
        "description": [],
        "signature": [
          "\"/api/detection_engine/rules/_find\""
        ],
        "path": "x-pack/plugins/security_solution/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.ELASTIC_SECURITY_RULE_ID",
        "type": "string",
        "tags": [],
        "label": "ELASTIC_SECURITY_RULE_ID",
        "description": [
          "\nRule signature id (`rule.rule_id`) of the prebuilt \"Endpoint Security\" rule."
        ],
        "signature": [
          "\"9a1a2dae-0b5f-4c3d-8305-a268d404c306\""
        ],
        "path": "x-pack/plugins/security_solution/common/detection_engine/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.ENABLED_FIELD",
        "type": "string",
        "tags": [],
        "label": "ENABLED_FIELD",
        "description": [],
        "signature": [
          "\"alert.attributes.enabled\""
        ],
        "path": "x-pack/plugins/security_solution/common/detection_engine/rule_management/rule_fields.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.ExperimentalFeatures",
        "type": "Type",
        "tags": [],
        "label": "ExperimentalFeatures",
        "description": [],
        "signature": [
          "{ readonly tGridEnabled: boolean; readonly tGridEventRenderedViewEnabled: boolean; readonly excludePoliciesInFilterEnabled: boolean; readonly kubernetesEnabled: boolean; readonly chartEmbeddablesEnabled: boolean; readonly donutChartEmbeddablesEnabled: boolean; readonly previewTelemetryUrlEnabled: boolean; readonly insightsRelatedAlertsByProcessAncestry: boolean; readonly extendedRuleExecutionLoggingEnabled: boolean; readonly socTrendsEnabled: boolean; readonly responseActionsEnabled: boolean; readonly endpointResponseActionsEnabled: boolean; readonly responseActionUploadEnabled: boolean; readonly automatedProcessActionsEnabled: boolean; readonly responseActionsSentinelOneV1Enabled: boolean; readonly responseActionsSentinelOneV2Enabled: boolean; readonly alertsPageChartsEnabled: boolean; readonly alertTypeEnabled: boolean; readonly expandableFlyoutInCreateRuleEnabled: boolean; readonly expandableEventFlyoutEnabled: boolean; readonly expandableTimelineFlyoutEnabled: boolean; readonly alertsPageFiltersEnabled: boolean; readonly assistantModelEvaluation: boolean; readonly newUserDetailsFlyout: boolean; readonly newUserDetailsFlyoutManagedUser: boolean; readonly newHostDetailsFlyout: boolean; readonly riskScoringPersistence: boolean; readonly riskScoringRoutesEnabled: boolean; readonly esqlRulesDisabled: boolean; readonly protectionUpdatesEnabled: boolean; readonly disableTimelineSaveTour: boolean; readonly riskEnginePrivilegesRouteEnabled: boolean; readonly sentinelOneDataInAnalyzerEnabled: boolean; readonly sentinelOneManualHostActionsEnabled: boolean; readonly crowdstrikeDataInAnalyzerEnabled: boolean; readonly jsonPrebuiltRulesDiffingEnabled: boolean; readonly timelineEsqlTabDisabled: boolean; readonly unifiedComponentsInTimelineEnabled: boolean; readonly analyzerDatePickersAndSourcererDisabled: boolean; readonly perFieldPrebuiltRulesDiffingEnabled: boolean; readonly malwareOnWriteScanOptionAvailable: boolean; }"
        ],
        "path": "x-pack/plugins/security_solution/common/experimental_features.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.MANAGE_PATH",
        "type": "string",
        "tags": [],
        "label": "MANAGE_PATH",
        "description": [],
        "signature": [
          "\"/manage\""
        ],
        "path": "x-pack/plugins/security_solution/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.SERVER_APP_ID",
        "type": "string",
        "tags": [],
        "label": "SERVER_APP_ID",
        "description": [],
        "signature": [
          "\"siem\""
        ],
        "path": "x-pack/plugins/security_solution/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "securitySolution",
        "id": "def-common.allowedExperimentalValues",
        "type": "Object",
        "tags": [],
        "label": "allowedExperimentalValues",
        "description": [
          "\nA list of allowed values that can be used in `xpack.securitySolution.enableExperimental`.\nThis object is then used to validate and parse the value entered."
        ],
        "signature": [
          "{ readonly tGridEnabled: true; readonly tGridEventRenderedViewEnabled: true; readonly excludePoliciesInFilterEnabled: false; readonly kubernetesEnabled: true; readonly chartEmbeddablesEnabled: true; readonly donutChartEmbeddablesEnabled: false; readonly previewTelemetryUrlEnabled: false; readonly insightsRelatedAlertsByProcessAncestry: true; readonly extendedRuleExecutionLoggingEnabled: false; readonly socTrendsEnabled: false; readonly responseActionsEnabled: true; readonly endpointResponseActionsEnabled: true; readonly responseActionUploadEnabled: true; readonly automatedProcessActionsEnabled: true; readonly responseActionsSentinelOneV1Enabled: true; readonly responseActionsSentinelOneV2Enabled: false; readonly alertsPageChartsEnabled: true; readonly alertTypeEnabled: false; readonly expandableFlyoutInCreateRuleEnabled: true; readonly expandableEventFlyoutEnabled: false; readonly expandableTimelineFlyoutEnabled: false; readonly alertsPageFiltersEnabled: true; readonly assistantModelEvaluation: false; readonly newUserDetailsFlyout: true; readonly newUserDetailsFlyoutManagedUser: false; readonly newHostDetailsFlyout: true; readonly riskScoringPersistence: true; readonly riskScoringRoutesEnabled: true; readonly esqlRulesDisabled: false; readonly protectionUpdatesEnabled: true; readonly disableTimelineSaveTour: false; readonly riskEnginePrivilegesRouteEnabled: true; readonly sentinelOneDataInAnalyzerEnabled: true; readonly sentinelOneManualHostActionsEnabled: true; readonly crowdstrikeDataInAnalyzerEnabled: false; readonly jsonPrebuiltRulesDiffingEnabled: true; readonly timelineEsqlTabDisabled: false; readonly unifiedComponentsInTimelineEnabled: false; readonly analyzerDatePickersAndSourcererDisabled: false; readonly perFieldPrebuiltRulesDiffingEnabled: true; readonly malwareOnWriteScanOptionAvailable: false; }"
        ],
        "path": "x-pack/plugins/security_solution/common/experimental_features.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  }
}