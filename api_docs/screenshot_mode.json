{
  "id": "screenshotMode",
  "client": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "screenshotMode",
        "id": "def-public.setScreenshotModeEnabled",
        "type": "Function",
        "tags": [],
        "label": "setScreenshotModeEnabled",
        "description": [
          "\nUse this function to set the current browser to screenshot mode.\n\nThis function should be called as early as possible to ensure that screenshot mode is\ncorrectly detected for the first page load. It is not suitable for use inside any plugin\ncode unless the plugin code is guaranteed to, somehow, load before any other code.\n\nAdditionally, we don't know what environment this code will run in so we remove as many external\nreferences as possible to make it portable. For instance, running inside puppeteer."
        ],
        "signature": [
          "() => void"
        ],
        "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "screenshotMode",
        "id": "def-public.KBN_SCREENSHOT_MODE_ENABLED_KEY",
        "type": "string",
        "tags": [],
        "label": "KBN_SCREENSHOT_MODE_ENABLED_KEY",
        "description": [],
        "signature": [
          "\"__KBN_SCREENSHOT_MODE_ENABLED_KEY__\""
        ],
        "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "screenshotMode",
        "id": "def-public.KBN_SCREENSHOT_MODE_HEADER",
        "type": "string",
        "tags": [],
        "label": "KBN_SCREENSHOT_MODE_HEADER",
        "description": [],
        "path": "src/plugins/screenshot_mode/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "screenshotMode",
      "id": "def-public.ScreenshotModePluginStart",
      "type": "Type",
      "tags": [],
      "label": "ScreenshotModePluginStart",
      "description": [],
      "signature": [
        "IScreenshotModeService"
      ],
      "path": "src/plugins/screenshot_mode/public/types.ts",
      "deprecated": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "screenshotMode",
        "id": "def-server.setScreenshotModeEnabled",
        "type": "Function",
        "tags": [],
        "label": "setScreenshotModeEnabled",
        "description": [
          "\nUse this function to set the current browser to screenshot mode.\n\nThis function should be called as early as possible to ensure that screenshot mode is\ncorrectly detected for the first page load. It is not suitable for use inside any plugin\ncode unless the plugin code is guaranteed to, somehow, load before any other code.\n\nAdditionally, we don't know what environment this code will run in so we remove as many external\nreferences as possible to make it portable. For instance, running inside puppeteer."
        ],
        "signature": [
          "() => void"
        ],
        "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "screenshotMode",
        "id": "def-server.ScreenshotModeRequestHandlerContext",
        "type": "Interface",
        "tags": [],
        "label": "ScreenshotModeRequestHandlerContext",
        "description": [],
        "signature": [
          {
            "pluginId": "screenshotMode",
            "scope": "server",
            "docId": "kibScreenshotModePluginApi",
            "section": "def-server.ScreenshotModeRequestHandlerContext",
            "text": "ScreenshotModeRequestHandlerContext"
          },
          " extends ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.RequestHandlerContext",
            "text": "RequestHandlerContext"
          }
        ],
        "path": "src/plugins/screenshot_mode/server/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "screenshotMode",
            "id": "def-server.ScreenshotModeRequestHandlerContext.screenshotMode",
            "type": "Object",
            "tags": [],
            "label": "screenshotMode",
            "description": [],
            "signature": [
              "{ isScreenshot: boolean; }"
            ],
            "path": "src/plugins/screenshot_mode/server/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "screenshotMode",
        "id": "def-server.KBN_SCREENSHOT_MODE_ENABLED_KEY",
        "type": "string",
        "tags": [],
        "label": "KBN_SCREENSHOT_MODE_ENABLED_KEY",
        "description": [],
        "signature": [
          "\"__KBN_SCREENSHOT_MODE_ENABLED_KEY__\""
        ],
        "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "screenshotMode",
        "id": "def-server.KBN_SCREENSHOT_MODE_HEADER",
        "type": "string",
        "tags": [],
        "label": "KBN_SCREENSHOT_MODE_HEADER",
        "description": [],
        "path": "src/plugins/screenshot_mode/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "screenshotMode",
      "id": "def-server.ScreenshotModePluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "ScreenshotModePluginSetup",
      "description": [],
      "path": "src/plugins/screenshot_mode/server/types.ts",
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "screenshotMode",
          "id": "def-server.ScreenshotModePluginSetup.isScreenshotMode",
          "type": "Function",
          "tags": [],
          "label": "isScreenshotMode",
          "description": [],
          "signature": [
            "(request: ",
            {
              "pluginId": "core",
              "scope": "server",
              "docId": "kibCoreHttpPluginApi",
              "section": "def-server.KibanaRequest",
              "text": "KibanaRequest"
            },
            "<unknown, unknown, unknown, any>) => boolean"
          ],
          "path": "src/plugins/screenshot_mode/server/types.ts",
          "deprecated": false,
          "returnComment": [],
          "children": [
            {
              "parentPluginId": "screenshotMode",
              "id": "def-server.ScreenshotModePluginSetup.isScreenshotMode.$1",
              "type": "Object",
              "tags": [],
              "label": "request",
              "description": [],
              "signature": [
                {
                  "pluginId": "core",
                  "scope": "server",
                  "docId": "kibCoreHttpPluginApi",
                  "section": "def-server.KibanaRequest",
                  "text": "KibanaRequest"
                },
                "<unknown, unknown, unknown, any>"
              ],
              "path": "src/plugins/screenshot_mode/server/types.ts",
              "deprecated": false
            }
          ]
        },
        {
          "parentPluginId": "screenshotMode",
          "id": "def-server.ScreenshotModePluginSetup.setScreenshotModeEnabled",
          "type": "Function",
          "tags": [],
          "label": "setScreenshotModeEnabled",
          "description": [
            "\nSet the current environment to screenshot mode. Intended to run in a browser-environment, before any other scripts\non the page have run to ensure that screenshot mode is detected as early as possible."
          ],
          "signature": [
            "() => void"
          ],
          "path": "src/plugins/screenshot_mode/server/types.ts",
          "deprecated": false,
          "children": [],
          "returnComment": []
        },
        {
          "parentPluginId": "screenshotMode",
          "id": "def-server.ScreenshotModePluginSetup.setScreenshotLayout",
          "type": "Function",
          "tags": [
            "deprecated"
          ],
          "label": "setScreenshotLayout",
          "description": [],
          "signature": [
            "(value: ",
            {
              "pluginId": "screenshotMode",
              "scope": "common",
              "docId": "kibScreenshotModePluginApi",
              "section": "def-common.Layout",
              "text": "Layout"
            },
            ") => void"
          ],
          "path": "src/plugins/screenshot_mode/server/types.ts",
          "deprecated": true,
          "references": [
            {
              "plugin": "screenshotting",
              "path": "x-pack/plugins/screenshotting/server/browsers/chromium/driver.ts"
            }
          ],
          "children": [
            {
              "parentPluginId": "screenshotMode",
              "id": "def-server.ScreenshotModePluginSetup.setScreenshotLayout.$1",
              "type": "CompoundType",
              "tags": [],
              "label": "value",
              "description": [],
              "signature": [
                {
                  "pluginId": "screenshotMode",
                  "scope": "common",
                  "docId": "kibScreenshotModePluginApi",
                  "section": "def-common.Layout",
                  "text": "Layout"
                }
              ],
              "path": "src/plugins/screenshot_mode/server/types.ts",
              "deprecated": false,
              "isRequired": true
            }
          ],
          "returnComment": []
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "screenshotMode",
      "id": "def-server.ScreenshotModePluginStart",
      "type": "Interface",
      "tags": [],
      "label": "ScreenshotModePluginStart",
      "description": [],
      "path": "src/plugins/screenshot_mode/server/types.ts",
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "screenshotMode",
          "id": "def-server.ScreenshotModePluginStart.isScreenshotMode",
          "type": "Function",
          "tags": [],
          "label": "isScreenshotMode",
          "description": [],
          "signature": [
            "(request: ",
            {
              "pluginId": "core",
              "scope": "server",
              "docId": "kibCoreHttpPluginApi",
              "section": "def-server.KibanaRequest",
              "text": "KibanaRequest"
            },
            "<unknown, unknown, unknown, any>) => boolean"
          ],
          "path": "src/plugins/screenshot_mode/server/types.ts",
          "deprecated": false,
          "returnComment": [],
          "children": [
            {
              "parentPluginId": "screenshotMode",
              "id": "def-server.ScreenshotModePluginStart.isScreenshotMode.$1",
              "type": "Object",
              "tags": [],
              "label": "request",
              "description": [],
              "signature": [
                {
                  "pluginId": "core",
                  "scope": "server",
                  "docId": "kibCoreHttpPluginApi",
                  "section": "def-server.KibanaRequest",
                  "text": "KibanaRequest"
                },
                "<unknown, unknown, unknown, any>"
              ],
              "path": "src/plugins/screenshot_mode/server/types.ts",
              "deprecated": false
            }
          ]
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "screenshotMode",
        "id": "def-common.getScreenshotLayout",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "getScreenshotLayout",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "screenshotMode",
            "scope": "common",
            "docId": "kibScreenshotModePluginApi",
            "section": "def-common.Layout",
            "text": "Layout"
          },
          " | undefined"
        ],
        "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
        "deprecated": true,
        "references": [],
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "screenshotMode",
        "id": "def-common.getScreenshotMode",
        "type": "Function",
        "tags": [],
        "label": "getScreenshotMode",
        "description": [
          "\nThis function is responsible for detecting whether we are currently in screenshot mode.\n\nWe check in the current window context whether screenshot mode is enabled, otherwise we check\nlocalStorage. The ability to set a value in localStorage enables more convenient development and testing\nin functionality that needs to detect screenshot mode."
        ],
        "signature": [
          "() => boolean"
        ],
        "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "screenshotMode",
        "id": "def-common.setScreenshotLayout",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "setScreenshotLayout",
        "description": [],
        "signature": [
          "(value: ",
          {
            "pluginId": "screenshotMode",
            "scope": "common",
            "docId": "kibScreenshotModePluginApi",
            "section": "def-common.Layout",
            "text": "Layout"
          },
          ") => void"
        ],
        "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
        "deprecated": true,
        "references": [],
        "children": [
          {
            "parentPluginId": "screenshotMode",
            "id": "def-common.setScreenshotLayout.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              {
                "pluginId": "screenshotMode",
                "scope": "common",
                "docId": "kibScreenshotModePluginApi",
                "section": "def-common.Layout",
                "text": "Layout"
              }
            ],
            "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "screenshotMode",
        "id": "def-common.setScreenshotModeDisabled",
        "type": "Function",
        "tags": [],
        "label": "setScreenshotModeDisabled",
        "description": [],
        "signature": [
          "() => void"
        ],
        "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "screenshotMode",
        "id": "def-common.setScreenshotModeEnabled",
        "type": "Function",
        "tags": [],
        "label": "setScreenshotModeEnabled",
        "description": [
          "\nUse this function to set the current browser to screenshot mode.\n\nThis function should be called as early as possible to ensure that screenshot mode is\ncorrectly detected for the first page load. It is not suitable for use inside any plugin\ncode unless the plugin code is guaranteed to, somehow, load before any other code.\n\nAdditionally, we don't know what environment this code will run in so we remove as many external\nreferences as possible to make it portable. For instance, running inside puppeteer."
        ],
        "signature": [
          "() => void"
        ],
        "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "screenshotMode",
        "id": "def-common.KBN_SCREENSHOT_MODE_ENABLED_KEY",
        "type": "string",
        "tags": [],
        "label": "KBN_SCREENSHOT_MODE_ENABLED_KEY",
        "description": [],
        "signature": [
          "\"__KBN_SCREENSHOT_MODE_ENABLED_KEY__\""
        ],
        "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "screenshotMode",
        "id": "def-common.KBN_SCREENSHOT_MODE_HEADER",
        "type": "string",
        "tags": [],
        "label": "KBN_SCREENSHOT_MODE_HEADER",
        "description": [],
        "path": "src/plugins/screenshot_mode/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "screenshotMode",
        "id": "def-common.KBN_SCREENSHOT_MODE_LAYOUT_KEY",
        "type": "string",
        "tags": [
          "deprecated"
        ],
        "label": "KBN_SCREENSHOT_MODE_LAYOUT_KEY",
        "description": [],
        "signature": [
          "\"__KBN_SCREENSHOT_MODE_LAYOUT_KEY__\""
        ],
        "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
        "deprecated": true,
        "references": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "screenshotMode",
        "id": "def-common.Layout",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "Layout",
        "description": [],
        "signature": [
          "\"canvas\" | \"preserve_layout\" | \"print\""
        ],
        "path": "src/plugins/screenshot_mode/common/get_set_browser_screenshot_mode.ts",
        "deprecated": true,
        "references": [
          {
            "plugin": "screenshotting",
            "path": "x-pack/plugins/screenshotting/server/screenshots/observable.ts"
          },
          {
            "plugin": "screenshotting",
            "path": "x-pack/plugins/screenshotting/server/browsers/chromium/driver.ts"
          },
          {
            "plugin": "screenshotting",
            "path": "x-pack/plugins/screenshotting/server/browsers/chromium/driver.ts"
          },
          {
            "plugin": "dashboard",
            "path": "src/plugins/dashboard/public/services/screenshot_mode.ts"
          },
          {
            "plugin": "screenshotting",
            "path": "x-pack/plugins/screenshotting/server/screenshots/open_url.ts"
          },
          {
            "plugin": "screenshotting",
            "path": "x-pack/plugins/screenshotting/server/screenshots/open_url.ts"
          },
          {
            "plugin": "screenshotting",
            "path": "x-pack/plugins/screenshotting/server/screenshots/observable.ts"
          },
          {
            "plugin": "screenshotting",
            "path": "x-pack/plugins/screenshotting/server/screenshots/observable.ts"
          },
          {
            "plugin": "screenshotting",
            "path": "x-pack/plugins/screenshotting/target/types/server/browsers/chromium/driver.d.ts"
          },
          {
            "plugin": "screenshotting",
            "path": "x-pack/plugins/screenshotting/target/types/server/browsers/chromium/driver.d.ts"
          },
          {
            "plugin": "screenshotting",
            "path": "x-pack/plugins/screenshotting/target/types/server/screenshots/open_url.d.ts"
          },
          {
            "plugin": "screenshotting",
            "path": "x-pack/plugins/screenshotting/target/types/server/screenshots/open_url.d.ts"
          }
        ],
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}