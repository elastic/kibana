{
  "id": "apm",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "apm",
        "id": "def-public.ConfigSchema",
        "type": "Interface",
        "tags": [],
        "label": "ConfigSchema",
        "description": [],
        "source": {
          "path": "x-pack/plugins/apm/public/index.ts",
          "lineNumber": 14
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "apm",
            "id": "def-public.ConfigSchema.serviceMapEnabled",
            "type": "boolean",
            "tags": [],
            "label": "serviceMapEnabled",
            "description": [],
            "source": {
              "path": "x-pack/plugins/apm/public/index.ts",
              "lineNumber": 15
            },
            "deprecated": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-public.ConfigSchema.profilingEnabled",
            "type": "boolean",
            "tags": [],
            "label": "profilingEnabled",
            "description": [],
            "source": {
              "path": "x-pack/plugins/apm/public/index.ts",
              "lineNumber": 16
            },
            "deprecated": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-public.ConfigSchema.ui",
            "type": "Object",
            "tags": [],
            "label": "ui",
            "description": [],
            "signature": [
              "{ enabled: boolean; }"
            ],
            "source": {
              "path": "x-pack/plugins/apm/public/index.ts",
              "lineNumber": 17
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": [],
    "setup": {
      "parentPluginId": "apm",
      "id": "def-public.ApmPluginSetup",
      "type": "Type",
      "tags": [],
      "label": "ApmPluginSetup",
      "description": [],
      "signature": [
        "{}"
      ],
      "source": {
        "path": "x-pack/plugins/apm/public/plugin.ts",
        "lineNumber": 45
      },
      "deprecated": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "apm",
      "id": "def-public.ApmPluginStart",
      "type": "Type",
      "tags": [],
      "label": "ApmPluginStart",
      "description": [],
      "signature": [
        "void"
      ],
      "source": {
        "path": "x-pack/plugins/apm/public/plugin.ts",
        "lineNumber": 47
      },
      "deprecated": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "apm",
        "id": "def-server.APMPlugin",
        "type": "Class",
        "tags": [],
        "label": "APMPlugin",
        "description": [],
        "signature": [
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMPlugin",
            "text": "APMPlugin"
          },
          " implements ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMPluginSetup",
            "text": "APMPluginSetup"
          },
          ", void, ",
          "APMPluginSetupDependencies",
          ", ",
          "APMPluginStartDependencies",
          ">"
        ],
        "source": {
          "path": "x-pack/plugins/apm/server/plugin.ts",
          "lineNumber": 55
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "apm",
            "id": "def-server.APMPlugin.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/plugin.ts",
              "lineNumber": 65
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "apm",
                "id": "def-server.APMPlugin.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "initContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<unknown>"
                ],
                "source": {
                  "path": "x-pack/plugins/apm/server/plugin.ts",
                  "lineNumber": 65
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMPlugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              "APMPluginStartDependencies",
              ", unknown>, plugins: Pick<",
              "APMPluginSetupDependencies",
              ", \"data\" | \"security\" | \"home\" | \"features\" | \"ml\" | \"actions\" | \"usageCollection\" | \"apmOss\" | \"licensing\" | \"observability\" | \"ruleRegistry\" | \"spaces\" | \"cloud\" | \"taskManager\" | \"alerting\">) => { config$: ",
              "Observable",
              "<{ 'apm_oss.transactionIndices': string; 'apm_oss.spanIndices': string; 'apm_oss.errorIndices': string; 'apm_oss.metricsIndices': string; 'apm_oss.sourcemapIndices': string; 'apm_oss.onboardingIndices': string; 'apm_oss.indexPattern': string; 'xpack.apm.serviceMapEnabled': boolean; 'xpack.apm.serviceMapFingerprintBucketSize': number; 'xpack.apm.serviceMapTraceIdBucketSize': number; 'xpack.apm.serviceMapFingerprintGlobalBucketSize': number; 'xpack.apm.serviceMapTraceIdGlobalBucketSize': number; 'xpack.apm.serviceMapMaxTracesPerRequest': number; 'xpack.apm.ui.enabled': boolean; 'xpack.apm.maxServiceEnvironments': number; 'xpack.apm.maxServiceSelection': number; 'xpack.apm.ui.maxTraceItems': number; 'xpack.apm.ui.transactionGroupBucketSize': number; 'xpack.apm.autocreateApmIndexPattern': boolean; 'xpack.apm.telemetryCollectionEnabled': boolean; 'xpack.apm.searchAggregatedTransactions': ",
              "SearchAggregatedTransactionSetting",
              "; 'xpack.apm.metricsInterval': number; }>; getApmIndices: () => Promise<",
              "ApmIndicesConfig",
              ">; createApmEventClient: ({ request, context, debug, }: { debug?: boolean | undefined; request: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>; context: ",
              "ApmPluginRequestHandlerContext",
              "; }) => Promise<{ search<TParams extends ",
              "APMEventESSearchRequest",
              ">(params: TParams, { includeLegacyData }?: { includeLegacyData?: boolean | undefined; }): Promise<",
              "InferSearchResponseOf",
              "<TypeOfProcessorEvent<",
              "ValuesType",
              "<TParams[\"apm\"][\"events\"]>>, ESSearchRequestOf<TParams>, {}>>; }>; }"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/plugin.ts",
              "lineNumber": 69
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "apm",
                "id": "def-server.APMPlugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  "APMPluginStartDependencies",
                  ", unknown>"
                ],
                "source": {
                  "path": "x-pack/plugins/apm/server/plugin.ts",
                  "lineNumber": 70
                },
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "apm",
                "id": "def-server.APMPlugin.setup.$2",
                "type": "Object",
                "tags": [],
                "label": "plugins",
                "description": [],
                "signature": [
                  "Pick<",
                  "APMPluginSetupDependencies",
                  ", \"data\" | \"security\" | \"home\" | \"features\" | \"ml\" | \"actions\" | \"usageCollection\" | \"apmOss\" | \"licensing\" | \"observability\" | \"ruleRegistry\" | \"spaces\" | \"cloud\" | \"taskManager\" | \"alerting\">"
                ],
                "source": {
                  "path": "x-pack/plugins/apm/server/plugin.ts",
                  "lineNumber": 71
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMPlugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreStart",
                "text": "CoreStart"
              },
              ") => void"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/plugin.ts",
              "lineNumber": 269
            },
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "apm",
                "id": "def-server.APMPlugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "source": {
                  "path": "x-pack/plugins/apm/server/plugin.ts",
                  "lineNumber": 269
                },
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMPlugin.stop",
            "type": "Function",
            "tags": [],
            "label": "stop",
            "description": [],
            "signature": [
              "() => void"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/plugin.ts",
              "lineNumber": 288
            },
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "apm",
        "id": "def-server.mergeConfigs",
        "type": "Function",
        "tags": [],
        "label": "mergeConfigs",
        "description": [],
        "signature": [
          "(apmOssConfig: Readonly<{} & { enabled: boolean; transactionIndices: string; spanIndices: string; errorIndices: string; metricsIndices: string; sourcemapIndices: string; onboardingIndices: string; indexPattern: string; fleetMode: boolean; }>, apmConfig: Readonly<{} & { enabled: boolean; serviceMapEnabled: boolean; serviceMapFingerprintBucketSize: number; serviceMapTraceIdBucketSize: number; serviceMapFingerprintGlobalBucketSize: number; serviceMapTraceIdGlobalBucketSize: number; serviceMapMaxTracesPerRequest: number; autocreateApmIndexPattern: boolean; ui: Readonly<{} & { enabled: boolean; transactionGroupBucketSize: number; maxTraceItems: number; }>; searchAggregatedTransactions: ",
          "SearchAggregatedTransactionSetting",
          "; telemetryCollectionEnabled: boolean; metricsInterval: number; maxServiceEnvironments: number; maxServiceSelection: number; profilingEnabled: boolean; }>) => { 'apm_oss.transactionIndices': string; 'apm_oss.spanIndices': string; 'apm_oss.errorIndices': string; 'apm_oss.metricsIndices': string; 'apm_oss.sourcemapIndices': string; 'apm_oss.onboardingIndices': string; 'apm_oss.indexPattern': string; 'xpack.apm.serviceMapEnabled': boolean; 'xpack.apm.serviceMapFingerprintBucketSize': number; 'xpack.apm.serviceMapTraceIdBucketSize': number; 'xpack.apm.serviceMapFingerprintGlobalBucketSize': number; 'xpack.apm.serviceMapTraceIdGlobalBucketSize': number; 'xpack.apm.serviceMapMaxTracesPerRequest': number; 'xpack.apm.ui.enabled': boolean; 'xpack.apm.maxServiceEnvironments': number; 'xpack.apm.maxServiceSelection': number; 'xpack.apm.ui.maxTraceItems': number; 'xpack.apm.ui.transactionGroupBucketSize': number; 'xpack.apm.autocreateApmIndexPattern': boolean; 'xpack.apm.telemetryCollectionEnabled': boolean; 'xpack.apm.searchAggregatedTransactions': ",
          "SearchAggregatedTransactionSetting",
          "; 'xpack.apm.metricsInterval': number; }"
        ],
        "source": {
          "path": "x-pack/plugins/apm/server/index.ts",
          "lineNumber": 59
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "apm",
            "id": "def-server.mergeConfigs.$1",
            "type": "Object",
            "tags": [],
            "label": "apmOssConfig",
            "description": [],
            "signature": [
              "Readonly<{} & { enabled: boolean; transactionIndices: string; spanIndices: string; errorIndices: string; metricsIndices: string; sourcemapIndices: string; onboardingIndices: string; indexPattern: string; fleetMode: boolean; }>"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/index.ts",
              "lineNumber": 60
            },
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.mergeConfigs.$2",
            "type": "Object",
            "tags": [],
            "label": "apmConfig",
            "description": [],
            "signature": [
              "Readonly<{} & { enabled: boolean; serviceMapEnabled: boolean; serviceMapFingerprintBucketSize: number; serviceMapTraceIdBucketSize: number; serviceMapFingerprintGlobalBucketSize: number; serviceMapTraceIdGlobalBucketSize: number; serviceMapMaxTracesPerRequest: number; autocreateApmIndexPattern: boolean; ui: Readonly<{} & { enabled: boolean; transactionGroupBucketSize: number; maxTraceItems: number; }>; searchAggregatedTransactions: ",
              "SearchAggregatedTransactionSetting",
              "; telemetryCollectionEnabled: boolean; metricsInterval: number; maxServiceEnvironments: number; maxServiceSelection: number; profilingEnabled: boolean; }>"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/index.ts",
              "lineNumber": 61
            },
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "apm",
        "id": "def-server.APMRouteHandlerResources",
        "type": "Interface",
        "tags": [],
        "label": "APMRouteHandlerResources",
        "description": [],
        "source": {
          "path": "x-pack/plugins/apm/server/routes/typings.ts",
          "lineNumber": 45
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "apm",
            "id": "def-server.APMRouteHandlerResources.request",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/routes/typings.ts",
              "lineNumber": 46
            },
            "deprecated": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMRouteHandlerResources.context",
            "type": "Object",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "ApmPluginRequestHandlerContext"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/routes/typings.ts",
              "lineNumber": 47
            },
            "deprecated": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMRouteHandlerResources.params",
            "type": "Object",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "{ query: { _inspect: boolean; }; }"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/routes/typings.ts",
              "lineNumber": 48
            },
            "deprecated": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMRouteHandlerResources.config",
            "type": "Object",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "{ 'apm_oss.transactionIndices': string; 'apm_oss.spanIndices': string; 'apm_oss.errorIndices': string; 'apm_oss.metricsIndices': string; 'apm_oss.sourcemapIndices': string; 'apm_oss.onboardingIndices': string; 'apm_oss.indexPattern': string; 'xpack.apm.serviceMapEnabled': boolean; 'xpack.apm.serviceMapFingerprintBucketSize': number; 'xpack.apm.serviceMapTraceIdBucketSize': number; 'xpack.apm.serviceMapFingerprintGlobalBucketSize': number; 'xpack.apm.serviceMapTraceIdGlobalBucketSize': number; 'xpack.apm.serviceMapMaxTracesPerRequest': number; 'xpack.apm.ui.enabled': boolean; 'xpack.apm.maxServiceEnvironments': number; 'xpack.apm.maxServiceSelection': number; 'xpack.apm.ui.maxTraceItems': number; 'xpack.apm.ui.transactionGroupBucketSize': number; 'xpack.apm.autocreateApmIndexPattern': boolean; 'xpack.apm.telemetryCollectionEnabled': boolean; 'xpack.apm.searchAggregatedTransactions': ",
              "SearchAggregatedTransactionSetting",
              "; 'xpack.apm.metricsInterval': number; }"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/routes/typings.ts",
              "lineNumber": 53
            },
            "deprecated": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMRouteHandlerResources.logger",
            "type": "Object",
            "tags": [],
            "label": "logger",
            "description": [],
            "signature": [
              "Logger"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/routes/typings.ts",
              "lineNumber": 54
            },
            "deprecated": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMRouteHandlerResources.core",
            "type": "Object",
            "tags": [],
            "label": "core",
            "description": [],
            "signature": [
              "{ setup: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreSetup",
                "text": "CoreSetup"
              },
              "<object, unknown>; start: () => Promise<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreStart",
                "text": "CoreStart"
              },
              ">; }"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/routes/typings.ts",
              "lineNumber": 55
            },
            "deprecated": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMRouteHandlerResources.plugins",
            "type": "Object",
            "tags": [],
            "label": "plugins",
            "description": [],
            "signature": [
              "{ data: { setup: ",
              {
                "pluginId": "data",
                "scope": "server",
                "docId": "kibDataPluginApi",
                "section": "def-server.DataPluginSetup",
                "text": "DataPluginSetup"
              },
              "; start: () => Promise<",
              {
                "pluginId": "data",
                "scope": "server",
                "docId": "kibDataPluginApi",
                "section": "def-server.DataPluginStart",
                "text": "DataPluginStart"
              },
              ">; }; features: { setup: ",
              {
                "pluginId": "features",
                "scope": "server",
                "docId": "kibFeaturesPluginApi",
                "section": "def-server.PluginSetupContract",
                "text": "PluginSetupContract"
              },
              "; start: () => Promise<",
              {
                "pluginId": "features",
                "scope": "server",
                "docId": "kibFeaturesPluginApi",
                "section": "def-server.PluginStartContract",
                "text": "PluginStartContract"
              },
              ">; }; apmOss: { setup: ",
              {
                "pluginId": "apmOss",
                "scope": "server",
                "docId": "kibApmOssPluginApi",
                "section": "def-server.APMOSSPluginSetup",
                "text": "APMOSSPluginSetup"
              },
              "; start: () => Promise<undefined>; }; licensing: { setup: ",
              {
                "pluginId": "licensing",
                "scope": "server",
                "docId": "kibLicensingPluginApi",
                "section": "def-server.LicensingPluginSetup",
                "text": "LicensingPluginSetup"
              },
              "; start: () => Promise<",
              {
                "pluginId": "licensing",
                "scope": "server",
                "docId": "kibLicensingPluginApi",
                "section": "def-server.LicensingPluginStart",
                "text": "LicensingPluginStart"
              },
              ">; }; observability: { setup: { getScopedAnnotationsClient: (requestContext: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.RequestHandlerContext",
                "text": "RequestHandlerContext"
              },
              " & { licensing: ",
              {
                "pluginId": "licensing",
                "scope": "server",
                "docId": "kibLicensingPluginApi",
                "section": "def-server.LicensingApiRequestHandlerContext",
                "text": "LicensingApiRequestHandlerContext"
              },
              "; }, request: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>) => Promise<{ readonly index: string; create: (createParams: { annotation: { type: string; }; '@timestamp': string; message: string; } & { tags?: string[] | undefined; service?: { name?: string | undefined; environment?: string | undefined; version?: string | undefined; } | undefined; }) => Promise<{ _id: string; _index: string; _source: ",
              "Annotation",
              "; }>; getById: (getByIdParams: { id: string; }) => Promise<",
              "GetResponse",
              "<unknown>>; delete: (deleteParams: { id: string; }) => Promise<",
              "DeleteResponse",
              ">; } | undefined>; }; start: () => Promise<undefined>; }; ruleRegistry: { setup: ",
              {
                "pluginId": "ruleRegistry",
                "scope": "server",
                "docId": "kibRuleRegistryPluginApi",
                "section": "def-server.RuleRegistryPluginSetupContract",
                "text": "RuleRegistryPluginSetupContract"
              },
              "; start: () => Promise<void>; }; security?: { setup: ",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.SecurityPluginSetup",
                "text": "SecurityPluginSetup"
              },
              "; start: () => Promise<",
              {
                "pluginId": "security",
                "scope": "server",
                "docId": "kibSecurityPluginApi",
                "section": "def-server.SecurityPluginStart",
                "text": "SecurityPluginStart"
              },
              ">; } | undefined; home?: { setup: ",
              {
                "pluginId": "home",
                "scope": "server",
                "docId": "kibHomePluginApi",
                "section": "def-server.HomeServerPluginSetup",
                "text": "HomeServerPluginSetup"
              },
              "; start: () => Promise<",
              {
                "pluginId": "home",
                "scope": "server",
                "docId": "kibHomePluginApi",
                "section": "def-server.HomeServerPluginStart",
                "text": "HomeServerPluginStart"
              },
              ">; } | undefined; ml?: { setup: ",
              "SharedServices",
              "; start: () => Promise<void>; } | undefined; actions?: { setup: ",
              {
                "pluginId": "actions",
                "scope": "server",
                "docId": "kibActionsPluginApi",
                "section": "def-server.PluginSetupContract",
                "text": "PluginSetupContract"
              },
              "; start: () => Promise<",
              {
                "pluginId": "actions",
                "scope": "server",
                "docId": "kibActionsPluginApi",
                "section": "def-server.PluginStartContract",
                "text": "PluginStartContract"
              },
              ">; } | undefined; usageCollection?: { setup: ",
              {
                "pluginId": "usageCollection",
                "scope": "server",
                "docId": "kibUsageCollectionPluginApi",
                "section": "def-server.UsageCollectionSetup",
                "text": "UsageCollectionSetup"
              },
              "; start: () => Promise<undefined>; } | undefined; spaces?: { setup: ",
              {
                "pluginId": "spaces",
                "scope": "server",
                "docId": "kibSpacesPluginApi",
                "section": "def-server.SpacesPluginSetup",
                "text": "SpacesPluginSetup"
              },
              "; start: () => Promise<",
              {
                "pluginId": "spaces",
                "scope": "server",
                "docId": "kibSpacesPluginApi",
                "section": "def-server.SpacesPluginStart",
                "text": "SpacesPluginStart"
              },
              ">; } | undefined; cloud?: { setup: ",
              {
                "pluginId": "cloud",
                "scope": "server",
                "docId": "kibCloudPluginApi",
                "section": "def-server.CloudSetup",
                "text": "CloudSetup"
              },
              "; start: () => Promise<undefined>; } | undefined; taskManager?: { setup: ",
              {
                "pluginId": "taskManager",
                "scope": "server",
                "docId": "kibTaskManagerPluginApi",
                "section": "def-server.TaskManagerSetupContract",
                "text": "TaskManagerSetupContract"
              },
              "; start: () => Promise<",
              {
                "pluginId": "taskManager",
                "scope": "server",
                "docId": "kibTaskManagerPluginApi",
                "section": "def-server.TaskManagerStartContract",
                "text": "TaskManagerStartContract"
              },
              ">; } | undefined; alerting?: { setup: ",
              {
                "pluginId": "alerting",
                "scope": "server",
                "docId": "kibAlertingPluginApi",
                "section": "def-server.PluginSetupContract",
                "text": "PluginSetupContract"
              },
              "; start: () => Promise<",
              {
                "pluginId": "alerting",
                "scope": "server",
                "docId": "kibAlertingPluginApi",
                "section": "def-server.PluginStartContract",
                "text": "PluginStartContract"
              },
              ">; } | undefined; }"
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/routes/typings.ts",
              "lineNumber": 59
            },
            "deprecated": false
          },
          {
            "parentPluginId": "apm",
            "id": "def-server.APMRouteHandlerResources.ruleDataClient",
            "type": "Object",
            "tags": [],
            "label": "ruleDataClient",
            "description": [],
            "signature": [
              {
                "pluginId": "ruleRegistry",
                "scope": "server",
                "docId": "kibRuleRegistryPluginApi",
                "section": "def-server.RuleDataClient",
                "text": "RuleDataClient"
              }
            ],
            "source": {
              "path": "x-pack/plugins/apm/server/routes/typings.ts",
              "lineNumber": 65
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "apm",
        "id": "def-server.ProcessorEvent",
        "type": "Enum",
        "tags": [],
        "label": "ProcessorEvent",
        "description": [],
        "source": {
          "path": "x-pack/plugins/apm/common/processor_event.ts",
          "lineNumber": 8
        },
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "apm",
        "id": "def-server.APMConfig",
        "type": "Type",
        "tags": [],
        "label": "APMConfig",
        "description": [],
        "signature": [
          "{ 'apm_oss.transactionIndices': string; 'apm_oss.spanIndices': string; 'apm_oss.errorIndices': string; 'apm_oss.metricsIndices': string; 'apm_oss.sourcemapIndices': string; 'apm_oss.onboardingIndices': string; 'apm_oss.indexPattern': string; 'xpack.apm.serviceMapEnabled': boolean; 'xpack.apm.serviceMapFingerprintBucketSize': number; 'xpack.apm.serviceMapTraceIdBucketSize': number; 'xpack.apm.serviceMapFingerprintGlobalBucketSize': number; 'xpack.apm.serviceMapTraceIdGlobalBucketSize': number; 'xpack.apm.serviceMapMaxTracesPerRequest': number; 'xpack.apm.ui.enabled': boolean; 'xpack.apm.maxServiceEnvironments': number; 'xpack.apm.maxServiceSelection': number; 'xpack.apm.ui.maxTraceItems': number; 'xpack.apm.ui.transactionGroupBucketSize': number; 'xpack.apm.autocreateApmIndexPattern': boolean; 'xpack.apm.telemetryCollectionEnabled': boolean; 'xpack.apm.searchAggregatedTransactions': ",
          "SearchAggregatedTransactionSetting",
          "; 'xpack.apm.metricsInterval': number; }"
        ],
        "source": {
          "path": "x-pack/plugins/apm/server/index.ts",
          "lineNumber": 56
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "apm",
        "id": "def-server.APMServerRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "APMServerRouteRepository",
        "description": [],
        "signature": [
          "ServerRouteRepository",
          "<",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", ",
          "APMRouteCreateOptions",
          ", { \"POST /api/apm/index_pattern/static\": ",
          "ServerRoute",
          "<\"POST /api/apm/index_pattern/static\", undefined, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { created: boolean; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/index_pattern/dynamic\": ",
          "ServerRoute",
          "<\"GET /api/apm/index_pattern/dynamic\", undefined, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { dynamicIndexPattern: ",
          "IndexPatternTitleAndFields",
          " | undefined; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/index_pattern/title\": ",
          "ServerRoute",
          "<\"GET /api/apm/index_pattern/title\", undefined, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { indexPatternTitle: string; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/environments\": ",
          "ServerRoute",
          "<\"GET /api/apm/environments\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { environments: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/errors\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/errors\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ sortField: ",
          "StringC",
          "; sortDirection: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"asc\">, ",
          "LiteralC",
          "<\"desc\">]>; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { errorGroups: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/errors/{groupId}\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/errors/{groupId}\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; groupId: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { transaction: ",
          "APMError",
          " | ",
          "Transaction",
          " | ",
          "Span",
          " | BaseMetric | ",
          "Profile",
          " | undefined; error: ",
          "APMError",
          "; occurrencesCount: number; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/errors/distribution\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/errors/distribution\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ groupId: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { noHits: boolean; buckets: any; bucketSize: number; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/metrics/charts\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/metrics/charts\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ agentName: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ serviceNodeName: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", ",
          "MetricsChartsByAgentAPIResponse",
          ", ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/observability_overview\": ",
          "ServerRoute",
          "<\"GET /api/apm/observability_overview\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ bucketSize: ",
          "StringC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { serviceCount: any; transactionPerMinute: { value: undefined; timeseries: never[]; } | { value: number; timeseries: any; }; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/observability_overview/has_data\": ",
          "ServerRoute",
          "<\"GET /api/apm/observability_overview/has_data\", undefined, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { hasData: boolean; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/rum/client-metrics\": ",
          "ServerRoute",
          "<\"GET /api/apm/rum/client-metrics\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ uiFilters: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ urlQuery: ",
          "StringC",
          "; percentile: ",
          "StringC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { pageViews: { value: number; }; totalPageLoadDuration: { value: number; }; backEnd: { value: number; }; frontEnd: { value: number; }; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/rum-client/page-load-distribution\": ",
          "ServerRoute",
          "<\"GET /api/apm/rum-client/page-load-distribution\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ uiFilters: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ urlQuery: ",
          "StringC",
          "; percentile: ",
          "StringC",
          "; }>]>, ",
          "PartialC",
          "<{ minPercentile: ",
          "StringC",
          "; maxPercentile: ",
          "StringC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { pageLoadDistribution: { pageLoadDistribution: { x: number; y: number; }[]; percentiles: Record<string, number | null> | undefined; minDuration: number; maxDuration: number; } | null; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/rum-client/page-load-distribution/breakdown\": ",
          "ServerRoute",
          "<\"GET /api/apm/rum-client/page-load-distribution/breakdown\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ uiFilters: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ urlQuery: ",
          "StringC",
          "; percentile: ",
          "StringC",
          "; }>]>, ",
          "PartialC",
          "<{ minPercentile: ",
          "StringC",
          "; maxPercentile: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ breakdown: ",
          "StringC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { pageLoadDistBreakdown: { name: string; data: { x: number; y: number; }[]; }[] | undefined; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/rum-client/page-view-trends\": ",
          "ServerRoute",
          "<\"GET /api/apm/rum-client/page-view-trends\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ uiFilters: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ urlQuery: ",
          "StringC",
          "; percentile: ",
          "StringC",
          "; }>]>, ",
          "PartialC",
          "<{ breakdowns: ",
          "StringC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { topItems: string[]; items: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/rum-client/services\": ",
          "ServerRoute",
          "<\"GET /api/apm/rum-client/services\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ uiFilters: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { rumServices: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/rum-client/visitor-breakdown\": ",
          "ServerRoute",
          "<\"GET /api/apm/rum-client/visitor-breakdown\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ uiFilters: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ urlQuery: ",
          "StringC",
          "; percentile: ",
          "StringC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { os: any; browsers: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/rum-client/web-core-vitals\": ",
          "ServerRoute",
          "<\"GET /api/apm/rum-client/web-core-vitals\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ uiFilters: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ urlQuery: ",
          "StringC",
          "; percentile: ",
          "StringC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { coreVitalPages: any; cls: any; fid: any; lcp: any; tbt: any; fcp: any; lcpRanks: number[]; fidRanks: number[]; clsRanks: number[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/rum-client/long-task-metrics\": ",
          "ServerRoute",
          "<\"GET /api/apm/rum-client/long-task-metrics\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ uiFilters: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ urlQuery: ",
          "StringC",
          "; percentile: ",
          "StringC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { noOfLongTasks: number; sumOfLongTasks: number; longestLongTask: number; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/rum-client/url-search\": ",
          "ServerRoute",
          "<\"GET /api/apm/rum-client/url-search\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ uiFilters: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ urlQuery: ",
          "StringC",
          "; percentile: ",
          "StringC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { total: number; items: { url: string; count: number; pld: number; }[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/rum-client/js-errors\": ",
          "ServerRoute",
          "<\"GET /api/apm/rum-client/js-errors\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ uiFilters: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ pageSize: ",
          "StringC",
          "; pageIndex: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ urlQuery: ",
          "StringC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { totalErrorPages: number; totalErrors: number; totalErrorGroups: number; items: { count: number; errorGroupId: React.ReactText; errorMessage: string; }[] | undefined; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/observability_overview/has_rum_data\": ",
          "ServerRoute",
          "<\"GET /api/apm/observability_overview/has_rum_data\", ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ uiFilters: ",
          "StringC",
          "; start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { indices: string; hasData: boolean; serviceName: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/rum/local_filters\": ",
          "ServerRoute",
          "<\"GET /api/apm/rum/local_filters\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ filterNames: ",
          "Type",
          "<(\"host\" | \"location\" | \"browser\" | \"serviceName\" | \"agentName\" | \"containerId\" | \"podName\" | \"transactionResult\" | \"serviceVersion\" | \"transactionUrl\" | \"device\" | \"os\")[], string, unknown>; }>, ",
          "TypeC",
          "<{ uiFilters: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>, ",
          "TypeC",
          "<{}>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { localUiFilters: { options: any[]; name: \"host\" | \"location\" | \"browser\" | \"serviceName\" | \"agentName\" | \"containerId\" | \"podName\" | \"transactionResult\" | \"serviceVersion\" | \"transactionUrl\" | \"device\" | \"os\"; title: string; fieldName: string; }[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/service-map\": ",
          "ServerRoute",
          "<\"GET /api/apm/service-map\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { elements: (",
          "ConnectionElement",
          " | { data: { id: string; 'span.type': string; label: string; groupedConnections: ({ 'service.name': string; 'service.environment': string | null; 'agent.name': string; serviceAnomalyStats?: ",
          "ServiceAnomalyStats",
          " | undefined; label: string | undefined; id?: string | undefined; parent?: string | undefined; position?: cytoscape.Position | undefined; } | { 'span.destination.service.resource': string; 'span.type': string; 'span.subtype': string; label: string | undefined; id?: string | undefined; parent?: string | undefined; position?: cytoscape.Position | undefined; } | { id: string; source: string | undefined; target: string | undefined; label: string | undefined; bidirectional?: boolean | undefined; isInverseEdge?: boolean | undefined; } | undefined)[]; }; } | { data: { id: string; source: string; target: string; }; })[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/service-map/service/{serviceName}\": ",
          "ServerRoute",
          "<\"GET /api/apm/service-map/service/{serviceName}\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { avgMemoryUsage: number | null; avgCpuUsage: number | null; transactionStats: { avgTransactionDuration: number | null; avgRequestsPerMinute: number | null; }; avgErrorRate: number | null; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/serviceNodes\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/serviceNodes\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { serviceNodes: { name: string; cpu: number | null; heapMemory: number | null; nonHeapMemory: number | null; threadCount: number | null; }[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services\": ",
          "ServerRoute",
          "<\"GET /api/apm/services\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { items: JoinedReturnType<any, any>; hasHistoricalData: boolean; hasLegacyData: boolean; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/metadata/details\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/metadata/details\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", ",
          "ServiceMetadataDetails",
          ", ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/metadata/icons\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/metadata/icons\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", ",
          "ServiceMetadataIcons",
          ", ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/agent_name\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/agent_name\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { agentName: string | undefined; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/transaction_types\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/transaction_types\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { transactionTypes: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/node/{serviceNodeName}/metadata\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/node/{serviceNodeName}/metadata\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; serviceNodeName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { host: React.ReactText; containerId: React.ReactText; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/annotation/search\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/annotation/search\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { annotations: ",
          "Annotation",
          "[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"POST /api/apm/services/{serviceName}/annotation\": ",
          "ServerRoute",
          "<\"POST /api/apm/services/{serviceName}/annotation\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ '@timestamp': ",
          "Type",
          "<number, string, unknown>; service: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ version: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>]>; }>, ",
          "PartialC",
          "<{ message: ",
          "StringC",
          "; tags: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { _id: string; _index: string; _source: ",
          "Annotation",
          "; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/error_groups/main_statistics\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/error_groups/main_statistics\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { is_aggregation_accurate: boolean; error_groups: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/error_groups/detailed_statistics\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/error_groups/detailed_statistics\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ comparisonStart: ",
          "Type",
          "<number, string, unknown>; comparisonEnd: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ numBuckets: ",
          "Type",
          "<number, unknown, unknown>; transactionType: ",
          "StringC",
          "; groupIds: ",
          "Type",
          "<string[], string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { currentPeriod: _.Dictionary<{ groupId: string; timeseries: ",
          "Coordinate",
          "[]; }>; previousPeriod: _.Dictionary<{ timeseries: { x: number; y: number | null | undefined; }[]; groupId: string; }>; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/service_overview_instances/details/{serviceNodeName}\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/service_overview_instances/details/{serviceNodeName}\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; serviceNodeName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { '@timestamp'?: undefined; agent?: undefined; service?: undefined; container?: undefined; kubernetes?: undefined; host?: undefined; cloud?: undefined; } | { '@timestamp': string; agent: ",
          "Agent",
          " | { name: string; version: string; }; service: any; container: any; kubernetes: any; host: any; cloud: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/throughput\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/throughput\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ comparisonStart: ",
          "Type",
          "<number, string, unknown>; comparisonEnd: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { currentPeriod: any; previousPeriod: { x: number; y: number | null | undefined; }[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/service_overview_instances/main_statistics\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/service_overview_instances/main_statistics\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ latencyAggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".avg>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p95>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p99>]>; transactionType: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ comparisonStart: ",
          "Type",
          "<number, string, unknown>; comparisonEnd: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { currentPeriod: { serviceNodeName: string; errorRate?: number | undefined; latency?: number | undefined; throughput?: number | undefined; cpuUsage?: number | null | undefined; memoryUsage?: number | null | undefined; }[]; previousPeriod: { serviceNodeName: string; errorRate?: number | undefined; latency?: number | undefined; throughput?: number | undefined; cpuUsage?: number | null | undefined; memoryUsage?: number | null | undefined; }[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/service_overview_instances/detailed_statistics\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/service_overview_instances/detailed_statistics\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ latencyAggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".avg>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p95>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p99>]>; transactionType: ",
          "StringC",
          "; serviceNodeIds: ",
          "Type",
          "<string[], string, unknown>; numBuckets: ",
          "Type",
          "<number, unknown, unknown>; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ comparisonStart: ",
          "Type",
          "<number, string, unknown>; comparisonEnd: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { currentPeriod: _.Dictionary<{ serviceNodeName: string; errorRate?: ",
          "Coordinate",
          "[] | undefined; latency?: ",
          "Coordinate",
          "[] | undefined; throughput?: ",
          "Coordinate",
          "[] | undefined; cpuUsage?: ",
          "Coordinate",
          "[] | undefined; memoryUsage?: ",
          "Coordinate",
          "[] | undefined; }>; previousPeriod: _.Dictionary<{ cpuUsage: { x: number; y: number | null | undefined; }[]; errorRate: { x: number; y: number | null | undefined; }[]; latency: { x: number; y: number | null | undefined; }[]; memoryUsage: { x: number; y: number | null | undefined; }[]; throughput: { x: number; y: number | null | undefined; }[]; serviceNodeName: string; }>; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/dependencies\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/dependencies\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ numBuckets: ",
          "Type",
          "<number, unknown, unknown>; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { serviceDependencies: ",
          "ServiceDependencyItem",
          "[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/profiling/timeline\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/profiling/timeline\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { profilingTimeline: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/profiling/statistics\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/profiling/statistics\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ valueType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "ProfilingValueType",
          ".wallTime>, ",
          "LiteralC",
          "<",
          "ProfilingValueType",
          ".cpuTime>, ",
          "LiteralC",
          "<",
          "ProfilingValueType",
          ".samples>, ",
          "LiteralC",
          "<",
          "ProfilingValueType",
          ".allocObjects>, ",
          "LiteralC",
          "<",
          "ProfilingValueType",
          ".allocSpace>, ",
          "LiteralC",
          "<",
          "ProfilingValueType",
          ".inuseObjects>, ",
          "LiteralC",
          "<",
          "ProfilingValueType",
          ".inuseSpace>]>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { nodes: Record<string, ",
          "ProfileNode",
          ">; rootNodes: string[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/alerts\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/alerts\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { alerts: any[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/traces/{traceId}\": ",
          "ServerRoute",
          "<\"GET /api/apm/traces/{traceId}\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ traceId: ",
          "StringC",
          "; }>; query: ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { trace: { errorDocs: ",
          "APMError",
          "[]; items: TypeOfProcessorEvent<",
          "ProcessorEvent",
          ".transaction | ",
          "ProcessorEvent",
          ".span>[]; exceedsMax: boolean; }; errorsPerTransaction: ",
          "ErrorsPerTransaction",
          "; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/traces\": ",
          "ServerRoute",
          "<\"GET /api/apm/traces\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { items: ",
          "TransactionGroup",
          "[]; isAggregationAccurate: boolean; bucketSize: number; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/traces/{traceId}/root_transaction\": ",
          "ServerRoute",
          "<\"GET /api/apm/traces/{traceId}/root_transaction\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ traceId: ",
          "StringC",
          "; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { transaction: TypeOfProcessorEvent<",
          "ProcessorEvent",
          ">; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/transactions/groups\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/transactions/groups\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { items: ",
          "TransactionGroup",
          "[]; isAggregationAccurate: boolean; bucketSize: number; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/transactions/groups/main_statistics\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/transactions/groups/main_statistics\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; latencyAggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".avg>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p95>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p99>]>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { transactionGroups: any; isAggregationAccurate: boolean; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/transactions/groups/detailed_statistics\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/transactions/groups/detailed_statistics\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ comparisonStart: ",
          "Type",
          "<number, string, unknown>; comparisonEnd: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "TypeC",
          "<{ transactionNames: ",
          "Type",
          "<string[], string, unknown>; numBuckets: ",
          "Type",
          "<number, unknown, unknown>; transactionType: ",
          "StringC",
          "; latencyAggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".avg>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p95>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p99>]>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { currentPeriod: _.Dictionary<{ transactionName: string; latency: ",
          "Coordinate",
          "[]; throughput: ",
          "Coordinate",
          "[]; errorRate: ",
          "Coordinate",
          "[]; impact: number; }>; previousPeriod: _.Dictionary<{ errorRate: { x: number; y: number | null | undefined; }[]; throughput: { x: number; y: number | null | undefined; }[]; latency: { x: number; y: number | null | undefined; }[]; transactionName: string; impact: number; }>; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/transactions/charts/latency\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/transactions/charts/latency\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; latencyAggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".avg>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p95>, ",
          "LiteralC",
          "<",
          "LatencyAggregationType",
          ".p99>]>; }>, ",
          "PartialC",
          "<{ transactionName: ",
          "StringC",
          "; }>, ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ comparisonStart: ",
          "Type",
          "<number, string, unknown>; comparisonEnd: ",
          "Type",
          "<number, string, unknown>; }>]>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { currentPeriod: { overallAvgDuration: any; latencyTimeseries: any; }; previousPeriod: { latencyTimeseries: { x: number; y: number | null | undefined; }[]; overallAvgDuration: any; }; anomalyTimeseries: { jobId: string; anomalyScore: { x0: number; x: number; y: number; }[]; anomalyBoundaries: { x: number; y0: number; y: number; }[]; } | undefined; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/transactions/charts/throughput\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/transactions/charts/throughput\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ transactionName: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { throughputTimeseries: any[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/transactions/charts/distribution\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/transactions/charts/distribution\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ transactionId: ",
          "StringC",
          "; traceId: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { noHits: boolean; buckets: { samples: any; count: any; }[]; bucketSize: number; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/transaction/charts/breakdown\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/transaction/charts/breakdown\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ transactionName: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { timeseries: { title: any; color: any; type: string; data: any; hideLegend: boolean; legendValue: string; }[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/services/{serviceName}/transactions/charts/error_rate\": ",
          "ServerRoute",
          "<\"GET /api/apm/services/{serviceName}/transactions/charts/error_rate\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; query: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ transactionType: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ transactionName: ",
          "StringC",
          "; }>, ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>, ",
          "PartialC",
          "<{ comparisonStart: ",
          "Type",
          "<number, string, unknown>; comparisonEnd: ",
          "Type",
          "<number, string, unknown>; }>]>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { currentPeriod: { noHits: boolean; transactionErrorRate: ",
          "Coordinate",
          "[]; average: number | null; }; previousPeriod: { transactionErrorRate: { x: number; y: number | null | undefined; }[]; noHits: boolean; average: number | null; }; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/alerts/chart_preview/transaction_error_rate\": ",
          "ServerRoute",
          "<\"GET /api/apm/alerts/chart_preview/transaction_error_rate\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ aggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"avg\">, ",
          "LiteralC",
          "<\"95th\">, ",
          "LiteralC",
          "<\"99th\">]>; serviceName: ",
          "StringC",
          "; environment: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { errorRateChartPreview: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/alerts/chart_preview/transaction_duration\": ",
          "ServerRoute",
          "<\"GET /api/apm/alerts/chart_preview/transaction_duration\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ aggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"avg\">, ",
          "LiteralC",
          "<\"95th\">, ",
          "LiteralC",
          "<\"99th\">]>; serviceName: ",
          "StringC",
          "; environment: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { latencyChartPreview: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/alerts/chart_preview/transaction_error_count\": ",
          "ServerRoute",
          "<\"GET /api/apm/alerts/chart_preview/transaction_error_count\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ aggregationType: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"avg\">, ",
          "LiteralC",
          "<\"95th\">, ",
          "LiteralC",
          "<\"99th\">]>; serviceName: ",
          "StringC",
          "; environment: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { errorCountChartPreview: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/correlations/latency/overall_distribution\": ",
          "ServerRoute",
          "<\"GET /api/apm/correlations/latency/overall_distribution\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { maxLatency: null; distributionInterval: null; overallDistribution: null; } | { maxLatency: number; distributionInterval: number; overallDistribution: null; } | { maxLatency: number; distributionInterval: number; overallDistribution: { x: any; y: number; }[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/correlations/latency/slow_transactions\": ",
          "ServerRoute",
          "<\"GET /api/apm/correlations/latency/slow_transactions\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ durationPercentile: ",
          "StringC",
          "; fieldNames: ",
          "StringC",
          "; maxLatency: ",
          "StringC",
          "; distributionInterval: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { significantTerms: { distribution: { x: any; y: number; }[]; fieldName: string; fieldValue: React.ReactText; score: number; impact: number; fieldCount: number; valueCount: number; }[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/correlations/errors/overall_timeseries\": ",
          "ServerRoute",
          "<\"GET /api/apm/correlations/errors/overall_timeseries\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { overall: null; } | { overall: { timeseries: { x: number; y: number; }[]; }; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/correlations/errors/failed_transactions\": ",
          "ServerRoute",
          "<\"GET /api/apm/correlations/errors/failed_transactions\", ",
          "TypeC",
          "<{ query: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; transactionName: ",
          "StringC",
          "; transactionType: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ fieldNames: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ environment: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ kuery: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ start: ",
          "Type",
          "<number, string, unknown>; end: ",
          "Type",
          "<number, string, unknown>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { significantTerms: { timeseries: { x: number; y: number; }[]; fieldName: string; fieldValue: React.ReactText; score: number; impact: number; fieldCount: number; valueCount: number; }[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/settings/agent-configuration\": ",
          "ServerRoute",
          "<\"GET /api/apm/settings/agent-configuration\", undefined, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { configurations: ",
          "AgentConfiguration",
          "[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/settings/agent-configuration/view\": ",
          "ServerRoute",
          "<\"GET /api/apm/settings/agent-configuration/view\", ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ name: ",
          "StringC",
          "; environment: ",
          "StringC",
          "; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", ",
          "AgentConfiguration",
          ", ",
          "APMRouteCreateOptions",
          ">; } & { \"DELETE /api/apm/settings/agent-configuration\": ",
          "ServerRoute",
          "<\"DELETE /api/apm/settings/agent-configuration\", ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ service: ",
          "PartialC",
          "<{ name: ",
          "StringC",
          "; environment: ",
          "StringC",
          "; }>; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { result: string; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"PUT /api/apm/settings/agent-configuration\": ",
          "ServerRoute",
          "<\"PUT /api/apm/settings/agent-configuration\", ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ overwrite: ",
          "Type",
          "<boolean, unknown, unknown>; }>; }>, ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "PartialC",
          "<{ agent_name: ",
          "StringC",
          "; }>, ",
          "TypeC",
          "<{ service: ",
          "PartialC",
          "<{ name: ",
          "StringC",
          "; environment: ",
          "StringC",
          "; }>; settings: ",
          "IntersectionC",
          "<[",
          "RecordC",
          "<",
          "StringC",
          ", ",
          "StringC",
          ">, ",
          "PartialC",
          "<Record<string, ",
          "SettingValidation",
          ">>]>; }>]>; }>]>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", void, ",
          "APMRouteCreateOptions",
          ">; } & { \"POST /api/apm/settings/agent-configuration/search\": ",
          "ServerRoute",
          "<\"POST /api/apm/settings/agent-configuration/search\", ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ service: ",
          "PartialC",
          "<{ name: ",
          "StringC",
          "; environment: ",
          "StringC",
          "; }>; }>, ",
          "PartialC",
          "<{ etag: ",
          "StringC",
          "; mark_as_applied_by_agent: ",
          "BooleanC",
          "; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", ",
          "SearchHit",
          "<",
          "AgentConfiguration",
          ", undefined, undefined>, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/settings/agent-configuration/services\": ",
          "ServerRoute",
          "<\"GET /api/apm/settings/agent-configuration/services\", undefined, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { serviceNames: string[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/settings/agent-configuration/environments\": ",
          "ServerRoute",
          "<\"GET /api/apm/settings/agent-configuration/environments\", ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ serviceName: ",
          "StringC",
          "; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { environments: { name: any; alreadyConfigured: any; }[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/settings/agent-configuration/agent_name\": ",
          "ServerRoute",
          "<\"GET /api/apm/settings/agent-configuration/agent_name\", ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ serviceName: ",
          "StringC",
          "; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { agentName: string | undefined; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/settings/anomaly-detection/jobs\": ",
          "ServerRoute",
          "<\"GET /api/apm/settings/anomaly-detection/jobs\", undefined, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { jobs: { job_id: string; environment: string; }[]; hasLegacyJobs: boolean; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"POST /api/apm/settings/anomaly-detection/jobs\": ",
          "ServerRoute",
          "<\"POST /api/apm/settings/anomaly-detection/jobs\", ",
          "TypeC",
          "<{ body: ",
          "TypeC",
          "<{ environments: ",
          "ArrayC",
          "<",
          "StringC",
          ">; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { jobCreated: boolean; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/settings/anomaly-detection/environments\": ",
          "ServerRoute",
          "<\"GET /api/apm/settings/anomaly-detection/environments\", undefined, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { environments: any; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/settings/apm-index-settings\": ",
          "ServerRoute",
          "<\"GET /api/apm/settings/apm-index-settings\", undefined, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { apmIndexSettings: { configurationName: \"apm_oss.sourcemapIndices\" | \"apm_oss.errorIndices\" | \"apm_oss.onboardingIndices\" | \"apm_oss.spanIndices\" | \"apm_oss.transactionIndices\" | \"apm_oss.metricsIndices\" | \"apmAgentConfigurationIndex\" | \"apmCustomLinkIndex\"; defaultValue: string; savedValue: string | undefined; }[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/settings/apm-indices\": ",
          "ServerRoute",
          "<\"GET /api/apm/settings/apm-indices\", undefined, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", ",
          "ApmIndicesConfig",
          ", ",
          "APMRouteCreateOptions",
          ">; } & { \"POST /api/apm/settings/apm-indices/save\": ",
          "ServerRoute",
          "<\"POST /api/apm/settings/apm-indices/save\", ",
          "TypeC",
          "<{ body: ",
          "PartialC",
          "<{ 'apm_oss.sourcemapIndices': ",
          "StringC",
          "; 'apm_oss.errorIndices': ",
          "StringC",
          "; 'apm_oss.onboardingIndices': ",
          "StringC",
          "; 'apm_oss.spanIndices': ",
          "StringC",
          "; 'apm_oss.transactionIndices': ",
          "StringC",
          "; 'apm_oss.metricsIndices': ",
          "StringC",
          "; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", ",
          "SavedObject",
          "<{}>, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/settings/custom_links/transaction\": ",
          "ServerRoute",
          "<\"GET /api/apm/settings/custom_links/transaction\", ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ 'service.name': ",
          "StringC",
          "; 'service.environment': ",
          "StringC",
          "; 'transaction.name': ",
          "StringC",
          "; 'transaction.type': ",
          "StringC",
          "; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", TypeOfProcessorEvent<",
          "ProcessorEvent",
          ">, ",
          "APMRouteCreateOptions",
          ">; } & { \"GET /api/apm/settings/custom_links\": ",
          "ServerRoute",
          "<\"GET /api/apm/settings/custom_links\", ",
          "PartialC",
          "<{ query: ",
          "PartialC",
          "<{ 'service.name': ",
          "StringC",
          "; 'service.environment': ",
          "StringC",
          "; 'transaction.name': ",
          "StringC",
          "; 'transaction.type': ",
          "StringC",
          "; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { customLinks: ",
          "CustomLink",
          "[]; }, ",
          "APMRouteCreateOptions",
          ">; } & { \"POST /api/apm/settings/custom_links\": ",
          "ServerRoute",
          "<\"POST /api/apm/settings/custom_links\", ",
          "TypeC",
          "<{ body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ label: ",
          "StringC",
          "; url: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ id: ",
          "StringC",
          "; filters: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ key: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"\">, ",
          "KeyofC",
          "<{ 'service.name': ",
          "StringC",
          "; 'service.environment': ",
          "StringC",
          "; 'transaction.name': ",
          "StringC",
          "; 'transaction.type': ",
          "StringC",
          "; }>]>; value: ",
          "StringC",
          "; }>>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", void, ",
          "APMRouteCreateOptions",
          ">; } & { \"PUT /api/apm/settings/custom_links/{id}\": ",
          "ServerRoute",
          "<\"PUT /api/apm/settings/custom_links/{id}\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; body: ",
          "IntersectionC",
          "<[",
          "TypeC",
          "<{ label: ",
          "StringC",
          "; url: ",
          "StringC",
          "; }>, ",
          "PartialC",
          "<{ id: ",
          "StringC",
          "; filters: ",
          "ArrayC",
          "<",
          "TypeC",
          "<{ key: ",
          "UnionC",
          "<[",
          "LiteralC",
          "<\"\">, ",
          "KeyofC",
          "<{ 'service.name': ",
          "StringC",
          "; 'service.environment': ",
          "StringC",
          "; 'transaction.name': ",
          "StringC",
          "; 'transaction.type': ",
          "StringC",
          "; }>]>; value: ",
          "StringC",
          "; }>>; }>]>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", void, ",
          "APMRouteCreateOptions",
          ">; } & { \"DELETE /api/apm/settings/custom_links/{id}\": ",
          "ServerRoute",
          "<\"DELETE /api/apm/settings/custom_links/{id}\", ",
          "TypeC",
          "<{ path: ",
          "TypeC",
          "<{ id: ",
          "StringC",
          "; }>; }>, ",
          {
            "pluginId": "apm",
            "scope": "server",
            "docId": "kibApmPluginApi",
            "section": "def-server.APMRouteHandlerResources",
            "text": "APMRouteHandlerResources"
          },
          ", { result: string; }, ",
          "APMRouteCreateOptions",
          ">; }>"
        ],
        "source": {
          "path": "x-pack/plugins/apm/server/routes/get_global_apm_server_route_repository.ts",
          "lineNumber": 60
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "apm",
        "id": "def-server.APMXPackConfig",
        "type": "Type",
        "tags": [],
        "label": "APMXPackConfig",
        "description": [],
        "signature": [
          "{ readonly enabled: boolean; readonly serviceMapEnabled: boolean; readonly serviceMapFingerprintBucketSize: number; readonly serviceMapTraceIdBucketSize: number; readonly serviceMapFingerprintGlobalBucketSize: number; readonly serviceMapTraceIdGlobalBucketSize: number; readonly serviceMapMaxTracesPerRequest: number; readonly autocreateApmIndexPattern: boolean; readonly ui: Readonly<{} & { enabled: boolean; transactionGroupBucketSize: number; maxTraceItems: number; }>; readonly searchAggregatedTransactions: ",
          "SearchAggregatedTransactionSetting",
          "; readonly telemetryCollectionEnabled: boolean; readonly metricsInterval: number; readonly maxServiceEnvironments: number; readonly maxServiceSelection: number; readonly profilingEnabled: boolean; }"
        ],
        "source": {
          "path": "x-pack/plugins/apm/server/index.ts",
          "lineNumber": 55
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "apm",
        "id": "def-server.InspectResponse",
        "type": "Type",
        "tags": [],
        "label": "InspectResponse",
        "description": [],
        "signature": [
          "{ response: any; duration: number; requestType: string; requestParams: Record<string, unknown>; esError: Error; }[]"
        ],
        "source": {
          "path": "x-pack/plugins/apm/server/routes/typings.ts",
          "lineNumber": 26
        },
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "apm",
      "id": "def-server.APMPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "APMPluginSetup",
      "description": [],
      "source": {
        "path": "x-pack/plugins/apm/server/types.ts",
        "lineNumber": 51
      },
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "apm",
          "id": "def-server.APMPluginSetup.config$",
          "type": "Object",
          "tags": [],
          "label": "config$",
          "description": [],
          "signature": [
            "Observable",
            "<{ 'apm_oss.transactionIndices': string; 'apm_oss.spanIndices': string; 'apm_oss.errorIndices': string; 'apm_oss.metricsIndices': string; 'apm_oss.sourcemapIndices': string; 'apm_oss.onboardingIndices': string; 'apm_oss.indexPattern': string; 'xpack.apm.serviceMapEnabled': boolean; 'xpack.apm.serviceMapFingerprintBucketSize': number; 'xpack.apm.serviceMapTraceIdBucketSize': number; 'xpack.apm.serviceMapFingerprintGlobalBucketSize': number; 'xpack.apm.serviceMapTraceIdGlobalBucketSize': number; 'xpack.apm.serviceMapMaxTracesPerRequest': number; 'xpack.apm.ui.enabled': boolean; 'xpack.apm.maxServiceEnvironments': number; 'xpack.apm.maxServiceSelection': number; 'xpack.apm.ui.maxTraceItems': number; 'xpack.apm.ui.transactionGroupBucketSize': number; 'xpack.apm.autocreateApmIndexPattern': boolean; 'xpack.apm.telemetryCollectionEnabled': boolean; 'xpack.apm.searchAggregatedTransactions': ",
            "SearchAggregatedTransactionSetting",
            "; 'xpack.apm.metricsInterval': number; }>"
          ],
          "source": {
            "path": "x-pack/plugins/apm/server/types.ts",
            "lineNumber": 52
          },
          "deprecated": false
        },
        {
          "parentPluginId": "apm",
          "id": "def-server.APMPluginSetup.getApmIndices",
          "type": "Function",
          "tags": [],
          "label": "getApmIndices",
          "description": [],
          "signature": [
            "() => Promise<",
            "ApmIndicesConfig",
            ">"
          ],
          "source": {
            "path": "x-pack/plugins/apm/server/types.ts",
            "lineNumber": 53
          },
          "deprecated": false,
          "returnComment": [],
          "children": []
        },
        {
          "parentPluginId": "apm",
          "id": "def-server.APMPluginSetup.createApmEventClient",
          "type": "Function",
          "tags": [],
          "label": "createApmEventClient",
          "description": [],
          "signature": [
            "(params: { debug?: boolean | undefined; request: ",
            {
              "pluginId": "core",
              "scope": "server",
              "docId": "kibCoreHttpPluginApi",
              "section": "def-server.KibanaRequest",
              "text": "KibanaRequest"
            },
            "<unknown, unknown, unknown, any>; context: ",
            "ApmPluginRequestHandlerContext",
            "; }) => Promise<{ search<TParams extends ",
            "APMEventESSearchRequest",
            ">(params: TParams, { includeLegacyData }?: { includeLegacyData?: boolean | undefined; }): Promise<",
            "InferSearchResponseOf",
            "<TypeOfProcessorEvent<",
            "ValuesType",
            "<TParams[\"apm\"][\"events\"]>>, ESSearchRequestOf<TParams>, {}>>; }>"
          ],
          "source": {
            "path": "x-pack/plugins/apm/server/types.ts",
            "lineNumber": 54
          },
          "deprecated": false,
          "returnComment": [],
          "children": [
            {
              "parentPluginId": "apm",
              "id": "def-server.params",
              "type": "Object",
              "tags": [],
              "label": "params",
              "description": [],
              "signature": [
                "{ debug?: boolean | undefined; request: ",
                {
                  "pluginId": "core",
                  "scope": "server",
                  "docId": "kibCoreHttpPluginApi",
                  "section": "def-server.KibanaRequest",
                  "text": "KibanaRequest"
                },
                "<unknown, unknown, unknown, any>; context: ",
                "ApmPluginRequestHandlerContext",
                "; }"
              ],
              "source": {
                "path": "x-pack/plugins/apm/server/types.ts",
                "lineNumber": 54
              },
              "deprecated": false
            }
          ]
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}