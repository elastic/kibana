{
  "id": "@kbn/core-application-browser-mocks",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/core-application-browser-mocks",
        "id": "def-public.ScopedHistoryMock",
        "type": "Type",
        "tags": [],
        "label": "ScopedHistoryMock",
        "description": [],
        "signature": [
          "{ createSubHistory: jest.MockInstance<",
          "ScopedHistory",
          "<unknown>, [basePath: string], unknown>; createHref: jest.MockInstance<string, [location: ",
          "LocationDescriptorObject",
          "<unknown>, options?: { prependBasePath?: boolean | undefined; } | undefined], unknown>; length: number; action: ",
          "Action",
          "; location: ",
          "Location",
          "<unknown>; push: jest.MockInstance<void, [location: ",
          "LocationDescriptor",
          "<unknown>, state?: unknown], unknown>; replace: jest.MockInstance<void, [location: ",
          "LocationDescriptor",
          "<unknown>, state?: unknown], unknown>; go: jest.MockInstance<void, [n: number], unknown>; goBack: jest.MockInstance<void, [], unknown>; goForward: jest.MockInstance<void, [], unknown>; block: jest.MockInstance<",
          "UnregisterCallback",
          ", [prompt?: string | boolean | ",
          "TransitionPromptHook",
          "<unknown> | undefined], unknown>; listen: jest.MockInstance<",
          "UnregisterCallback",
          ", [listener: ",
          "LocationListener",
          "<unknown>], unknown>; } & ",
          "ScopedHistory",
          "<unknown>"
        ],
        "path": "src/core/packages/application/browser-mocks/src/scoped_history.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "@kbn/core-application-browser-mocks",
        "id": "def-public.applicationServiceMock",
        "type": "Object",
        "tags": [],
        "label": "applicationServiceMock",
        "description": [],
        "path": "src/core/packages/application/browser-mocks/src/application_service.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-application-browser-mocks",
            "id": "def-public.applicationServiceMock.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [],
            "signature": [
              "() => jest.Mocked<ApplicationServiceContract>"
            ],
            "path": "src/core/packages/application/browser-mocks/src/application_service.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-application-browser-mocks",
            "id": "def-public.applicationServiceMock.createSetupContract",
            "type": "Function",
            "tags": [],
            "label": "createSetupContract",
            "description": [],
            "signature": [
              "() => jest.Mocked<",
              "ApplicationSetup",
              ">"
            ],
            "path": "src/core/packages/application/browser-mocks/src/application_service.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-application-browser-mocks",
            "id": "def-public.applicationServiceMock.createStartContract",
            "type": "Function",
            "tags": [],
            "label": "createStartContract",
            "description": [],
            "signature": [
              "() => jest.Mocked<",
              "ApplicationStart",
              ">"
            ],
            "path": "src/core/packages/application/browser-mocks/src/application_service.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-application-browser-mocks",
            "id": "def-public.applicationServiceMock.createInternalSetupContract",
            "type": "Function",
            "tags": [],
            "label": "createInternalSetupContract",
            "description": [],
            "signature": [
              "() => jest.Mocked<",
              "InternalApplicationSetup",
              ">"
            ],
            "path": "src/core/packages/application/browser-mocks/src/application_service.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-application-browser-mocks",
            "id": "def-public.applicationServiceMock.createInternalStartContract",
            "type": "Function",
            "tags": [],
            "label": "createInternalStartContract",
            "description": [],
            "signature": [
              "(currentAppId?: string | undefined) => jest.Mocked<",
              "InternalApplicationStart",
              ">"
            ],
            "path": "src/core/packages/application/browser-mocks/src/application_service.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-application-browser-mocks",
                "id": "def-public.applicationServiceMock.createInternalStartContract.$1",
                "type": "string",
                "tags": [],
                "label": "currentAppId",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/core/packages/application/browser-mocks/src/application_service.mock.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-application-browser-mocks",
            "id": "def-public.applicationServiceMock.createAppMountParameters",
            "type": "Function",
            "tags": [],
            "label": "createAppMountParameters",
            "description": [],
            "signature": [
              "(parts?: Partial<",
              "AppMountParameters",
              "<unknown>>) => ",
              "AppMountParameters",
              "<unknown>"
            ],
            "path": "src/core/packages/application/browser-mocks/src/application_service.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-application-browser-mocks",
                "id": "def-public.applicationServiceMock.createAppMountParameters.$1",
                "type": "Object",
                "tags": [],
                "label": "parts",
                "description": [],
                "signature": [
                  "{ element?: HTMLElement | undefined; history?: ",
                  "ScopedHistory",
                  "<unknown> | undefined; appBasePath?: string | undefined; onAppLeave?: ((handler: ",
                  "AppLeaveHandler",
                  ") => void) | undefined; setHeaderActionMenu?: ((menuMount: ",
                  "MountPoint",
                  "<HTMLElement> | undefined) => void) | undefined; theme$?: ",
                  "Observable",
                  "<",
                  "CoreTheme",
                  "> | undefined; }"
                ],
                "path": "src/core/packages/application/browser-mocks/src/application_service.mock.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-application-browser-mocks",
        "id": "def-public.scopedHistoryMock",
        "type": "Object",
        "tags": [],
        "label": "scopedHistoryMock",
        "description": [],
        "path": "src/core/packages/application/browser-mocks/src/scoped_history.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-application-browser-mocks",
            "id": "def-public.scopedHistoryMock.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [],
            "signature": [
              "({ pathname, search, hash, key, state, }?: Partial<",
              "Location",
              "<unknown>>) => ",
              "ScopedHistoryMock"
            ],
            "path": "src/core/packages/application/browser-mocks/src/scoped_history.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-application-browser-mocks",
                "id": "def-public.scopedHistoryMock.create.$1",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  "{ pathname?: string | undefined; search?: string | undefined; state?: unknown; hash?: string | undefined; key?: string | undefined; }"
                ],
                "path": "src/core/packages/application/browser-mocks/src/scoped_history.mock.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      }
    ]
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}