{
  "id": "@kbn/core-http-router-server-mocks",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "@kbn/core-http-router-server-mocks",
        "id": "def-server.createVersionedRouterMock",
        "type": "Function",
        "tags": [],
        "label": "createVersionedRouterMock",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "@kbn/core-http-router-server-mocks",
            "scope": "server",
            "docId": "kibKbnCoreHttpRouterServerMocksPluginApi",
            "section": "def-server.MockedVersionedRouter",
            "text": "MockedVersionedRouter"
          }
        ],
        "path": "packages/core/http/core-http-router-server-mocks/src/versioned_router.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "@kbn/core-http-router-server-mocks",
        "id": "def-server.RegisteredVersionedRoute",
        "type": "Interface",
        "tags": [],
        "label": "RegisteredVersionedRoute",
        "description": [],
        "path": "packages/core/http/core-http-router-server-mocks/src/versioned_router.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-router-server-mocks",
            "id": "def-server.RegisteredVersionedRoute.config",
            "type": "CompoundType",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "Omit<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.RouteConfig",
                "text": "RouteConfig"
              },
              "<unknown, unknown, unknown, any>, \"validate\" | \"options\"> & { options?: Omit<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.RouteConfigOptions",
                "text": "RouteConfigOptions"
              },
              "<any>, \"security\" | \"description\" | \"summary\" | \"deprecated\" | \"access\" | \"discontinued\"> | undefined; access: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.RouteAccess",
                "text": "RouteAccess"
              },
              "; security?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.RouteSecurity",
                "text": "RouteSecurity"
              },
              " | undefined; enableQueryVersion?: boolean | undefined; summary?: string | undefined; description?: string | undefined; deprecated?: boolean | undefined; discontinued?: string | undefined; }"
            ],
            "path": "packages/core/http/core-http-router-server-mocks/src/versioned_router.mock.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/core-http-router-server-mocks",
            "id": "def-server.RegisteredVersionedRoute.versions",
            "type": "Object",
            "tags": [],
            "label": "versions",
            "description": [],
            "signature": [
              "{ [version: string]: { config: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.AddVersionOpts",
                "text": "AddVersionOpts"
              },
              "<any, any, any>; handler: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.RequestHandler",
                "text": "RequestHandler"
              },
              "<any, any, any, any, any, ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ">; }; }"
            ],
            "path": "packages/core/http/core-http-router-server-mocks/src/versioned_router.mock.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/core-http-router-server-mocks",
        "id": "def-server.MockedVersionedRoute",
        "type": "Type",
        "tags": [],
        "label": "MockedVersionedRoute",
        "description": [],
        "signature": [
          "{ addVersion: jest.MockInstance<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRoute",
            "text": "VersionedRoute"
          },
          "<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RouteMethod",
            "text": "RouteMethod"
          },
          ", ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandlerContextBase",
            "text": "RequestHandlerContextBase"
          },
          ">, [options: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.AddVersionOpts",
            "text": "AddVersionOpts"
          },
          "<unknown, unknown, unknown>, handler: (context: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandlerContextBase",
            "text": "RequestHandlerContextBase"
          },
          ", request: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>, response: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.KibanaResponseFactory",
            "text": "KibanaResponseFactory"
          },
          ") => ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.MaybePromise",
            "text": "MaybePromise"
          },
          "<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.IKibanaResponse",
            "text": "IKibanaResponse"
          },
          "<any>>], unknown>; } & ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRoute",
            "text": "VersionedRoute"
          },
          "<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RouteMethod",
            "text": "RouteMethod"
          },
          ", ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandlerContextBase",
            "text": "RequestHandlerContextBase"
          },
          ">"
        ],
        "path": "packages/core/http/core-http-router-server-mocks/src/versioned_router.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-router-server-mocks",
        "id": "def-server.MockedVersionedRouter",
        "type": "Type",
        "tags": [],
        "label": "MockedVersionedRouter",
        "description": [],
        "signature": [
          "{ get: jest.MockInstance<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRoute",
            "text": "VersionedRoute"
          },
          "<\"get\", any>, [config: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRouteConfig",
            "text": "VersionedRouteConfig"
          },
          "<\"get\">], unknown>; put: jest.MockInstance<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRoute",
            "text": "VersionedRoute"
          },
          "<\"put\", any>, [config: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRouteConfig",
            "text": "VersionedRouteConfig"
          },
          "<\"put\">], unknown>; post: jest.MockInstance<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRoute",
            "text": "VersionedRoute"
          },
          "<\"post\", any>, [config: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRouteConfig",
            "text": "VersionedRouteConfig"
          },
          "<\"post\">], unknown>; patch: jest.MockInstance<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRoute",
            "text": "VersionedRoute"
          },
          "<\"patch\", any>, [config: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRouteConfig",
            "text": "VersionedRouteConfig"
          },
          "<\"patch\">], unknown>; delete: jest.MockInstance<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRoute",
            "text": "VersionedRoute"
          },
          "<\"delete\", any>, [config: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRouteConfig",
            "text": "VersionedRouteConfig"
          },
          "<\"delete\">], unknown>; } & ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRouter",
            "text": "VersionedRouter"
          },
          "<any> & { getRoute: (method: keyof ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRouter",
            "text": "VersionedRouter"
          },
          "<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandlerContextBase",
            "text": "RequestHandlerContextBase"
          },
          ">, path: string) => ",
          {
            "pluginId": "@kbn/core-http-router-server-mocks",
            "scope": "server",
            "docId": "kibKbnCoreHttpRouterServerMocksPluginApi",
            "section": "def-server.RegisteredVersionedRoute",
            "text": "RegisteredVersionedRoute"
          },
          "; }"
        ],
        "path": "packages/core/http/core-http-router-server-mocks/src/versioned_router.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-http-router-server-mocks",
        "id": "def-server.RouterMock",
        "type": "Type",
        "tags": [],
        "label": "RouterMock",
        "description": [],
        "signature": [
          "{ routerPath: string; get: jest.MockInstance<void, [route: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RouteConfig",
            "text": "RouteConfig"
          },
          "<unknown, unknown, unknown, \"get\">, handler: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandler",
            "text": "RequestHandler"
          },
          "<unknown, unknown, unknown, any, \"get\", ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.KibanaResponseFactory",
            "text": "KibanaResponseFactory"
          },
          ">], unknown>; post: jest.MockInstance<void, [route: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RouteConfig",
            "text": "RouteConfig"
          },
          "<unknown, unknown, unknown, \"post\">, handler: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandler",
            "text": "RequestHandler"
          },
          "<unknown, unknown, unknown, any, \"post\", ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.KibanaResponseFactory",
            "text": "KibanaResponseFactory"
          },
          ">], unknown>; put: jest.MockInstance<void, [route: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RouteConfig",
            "text": "RouteConfig"
          },
          "<unknown, unknown, unknown, \"put\">, handler: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandler",
            "text": "RequestHandler"
          },
          "<unknown, unknown, unknown, any, \"put\", ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.KibanaResponseFactory",
            "text": "KibanaResponseFactory"
          },
          ">], unknown>; patch: jest.MockInstance<void, [route: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RouteConfig",
            "text": "RouteConfig"
          },
          "<unknown, unknown, unknown, \"patch\">, handler: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandler",
            "text": "RequestHandler"
          },
          "<unknown, unknown, unknown, any, \"patch\", ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.KibanaResponseFactory",
            "text": "KibanaResponseFactory"
          },
          ">], unknown>; delete: jest.MockInstance<void, [route: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RouteConfig",
            "text": "RouteConfig"
          },
          "<unknown, unknown, unknown, \"delete\">, handler: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandler",
            "text": "RequestHandler"
          },
          "<unknown, unknown, unknown, any, \"delete\", ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.KibanaResponseFactory",
            "text": "KibanaResponseFactory"
          },
          ">], unknown>; handleLegacyErrors: jest.MockInstance<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandler",
            "text": "RequestHandler"
          },
          "<unknown, unknown, unknown, ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandlerContextBase",
            "text": "RequestHandlerContextBase"
          },
          ", ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RouteMethod",
            "text": "RouteMethod"
          },
          ", ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.KibanaResponseFactory",
            "text": "KibanaResponseFactory"
          },
          ">, [handler: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandler",
            "text": "RequestHandler"
          },
          "<unknown, unknown, unknown, ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RequestHandlerContextBase",
            "text": "RequestHandlerContextBase"
          },
          ", ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RouteMethod",
            "text": "RouteMethod"
          },
          ", ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.KibanaResponseFactory",
            "text": "KibanaResponseFactory"
          },
          ">], unknown>; getRoutes: jest.MockInstance<",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.RouterRoute",
            "text": "RouterRoute"
          },
          "[], [], unknown>; versioned: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.VersionedRouter",
            "text": "VersionedRouter"
          },
          "<any>; } & ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "server",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-server.IRouter",
            "text": "IRouter"
          },
          "<any> & { versioned: ",
          {
            "pluginId": "@kbn/core-http-router-server-mocks",
            "scope": "server",
            "docId": "kibKbnCoreHttpRouterServerMocksPluginApi",
            "section": "def-server.MockedVersionedRouter",
            "text": "MockedVersionedRouter"
          },
          "; }"
        ],
        "path": "packages/core/http/core-http-router-server-mocks/src/router.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "@kbn/core-http-router-server-mocks",
        "id": "def-server.mockRouter",
        "type": "Object",
        "tags": [],
        "label": "mockRouter",
        "description": [],
        "path": "packages/core/http/core-http-router-server-mocks/src/router.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-http-router-server-mocks",
            "id": "def-server.mockRouter.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [],
            "signature": [
              "({ routerPath }?: { routerPath?: string | undefined; }) => ",
              {
                "pluginId": "@kbn/core-http-router-server-mocks",
                "scope": "server",
                "docId": "kibKbnCoreHttpRouterServerMocksPluginApi",
                "section": "def-server.RouterMock",
                "text": "RouterMock"
              }
            ],
            "path": "packages/core/http/core-http-router-server-mocks/src/router.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-router-server-mocks",
                "id": "def-server.mockRouter.create.$1",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  "{ routerPath?: string | undefined; }"
                ],
                "path": "packages/core/http/core-http-router-server-mocks/src/router.mock.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-router-server-mocks",
            "id": "def-server.mockRouter.createKibanaRequest",
            "type": "Function",
            "tags": [],
            "label": "createKibanaRequest",
            "description": [],
            "signature": [
              "<P = any, Q = any, B = any>({ path, headers, params, body, query, method, socket, routeTags, routeAuthRequired, validation, kibanaRouteOptions, kibanaRequestState, auth, }?: ",
              "RequestFixtureOptions",
              "<P, Q, B>) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<P, Q, B, any>"
            ],
            "path": "packages/core/http/core-http-router-server-mocks/src/router.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-router-server-mocks",
                "id": "def-server.mockRouter.createKibanaRequest.$1",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  "RequestFixtureOptions",
                  "<P, Q, B>"
                ],
                "path": "packages/core/http/core-http-router-server-mocks/src/router.mock.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-router-server-mocks",
            "id": "def-server.mockRouter.createFakeKibanaRequest",
            "type": "Function",
            "tags": [],
            "label": "createFakeKibanaRequest",
            "description": [],
            "signature": [
              "({ headers, }: { headers?: Record<string, string> | undefined; }) => ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "packages/core/http/core-http-router-server-mocks/src/router.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-http-router-server-mocks",
                "id": "def-server.mockRouter.createFakeKibanaRequest.$1",
                "type": "Object",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  "{ headers?: Record<string, string> | undefined; }"
                ],
                "path": "packages/core/http/core-http-router-server-mocks/src/router.mock.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-http-router-server-mocks",
            "id": "def-server.mockRouter.createResponseFactory",
            "type": "Function",
            "tags": [],
            "label": "createResponseFactory",
            "description": [],
            "signature": [
              "() => jest.Mocked<",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "server",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-server.KibanaResponseFactory",
                "text": "KibanaResponseFactory"
              },
              ">"
            ],
            "path": "packages/core/http/core-http-router-server-mocks/src/router.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          }
        ],
        "initialIsOpen": false
      }
    ]
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}