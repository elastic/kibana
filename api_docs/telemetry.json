{
  "id": "telemetry",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "telemetry",
        "id": "def-public.TelemetryPluginConfig",
        "type": "Interface",
        "tags": [],
        "label": "TelemetryPluginConfig",
        "description": [
          "\nPublic-exposed configuration"
        ],
        "source": {
          "path": "src/plugins/telemetry/public/plugin.ts",
          "lineNumber": 82
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryPluginConfig.enabled",
            "type": "boolean",
            "tags": [],
            "label": "enabled",
            "description": [
              "Is the plugin enabled?"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 84
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryPluginConfig.url",
            "type": "string",
            "tags": [],
            "label": "url",
            "description": [
              "Remote telemetry service's URL"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 86
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryPluginConfig.banner",
            "type": "boolean",
            "tags": [],
            "label": "banner",
            "description": [
              "The banner is expected to be shown when needed"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 88
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryPluginConfig.allowChangingOptInStatus",
            "type": "boolean",
            "tags": [],
            "label": "allowChangingOptInStatus",
            "description": [
              "Does the cluster allow changing the opt-in/out status via the UI?"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 90
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryPluginConfig.optIn",
            "type": "CompoundType",
            "tags": [],
            "label": "optIn",
            "description": [
              "Is the cluster opted-in?"
            ],
            "signature": [
              "boolean | null"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 92
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryPluginConfig.optInStatusUrl",
            "type": "string",
            "tags": [],
            "label": "optInStatusUrl",
            "description": [
              "Opt-in/out notification URL"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 94
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryPluginConfig.sendUsageFrom",
            "type": "CompoundType",
            "tags": [],
            "label": "sendUsageFrom",
            "description": [
              "Should the telemetry payloads be sent from the server or the browser?"
            ],
            "signature": [
              "\"browser\" | \"server\""
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 96
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryPluginConfig.telemetryNotifyUserAboutOptInDefault",
            "type": "CompoundType",
            "tags": [],
            "label": "telemetryNotifyUserAboutOptInDefault",
            "description": [
              "Should notify the user about the opt-in status?"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 98
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryPluginConfig.userCanChangeSettings",
            "type": "CompoundType",
            "tags": [],
            "label": "userCanChangeSettings",
            "description": [
              "Does the user have enough privileges to change the settings?"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 100
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "telemetry",
        "id": "def-public.TelemetryServicePublicApis",
        "type": "Interface",
        "tags": [],
        "label": "TelemetryServicePublicApis",
        "description": [
          "\nPublicly exposed APIs from the Telemetry Service"
        ],
        "source": {
          "path": "src/plugins/telemetry/public/plugin.ts",
          "lineNumber": 36
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryServicePublicApis.getIsOptedIn",
            "type": "Function",
            "tags": [],
            "label": "getIsOptedIn",
            "description": [
              "Is the cluster opted-in to telemetry?"
            ],
            "signature": [
              "() => boolean | null"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 38
            },
            "deprecated": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryServicePublicApis.userCanChangeSettings",
            "type": "boolean",
            "tags": [],
            "label": "userCanChangeSettings",
            "description": [
              "Is the user allowed to change the opt-in/out status?"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 40
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryServicePublicApis.getCanChangeOptInStatus",
            "type": "Function",
            "tags": [],
            "label": "getCanChangeOptInStatus",
            "description": [
              "Is the cluster allowed to change the opt-in/out status?"
            ],
            "signature": [
              "() => boolean"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 42
            },
            "deprecated": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryServicePublicApis.fetchExample",
            "type": "Function",
            "tags": [],
            "label": "fetchExample",
            "description": [
              "Fetches an unencrypted telemetry payload so we can show it to the user"
            ],
            "signature": [
              "() => Promise<unknown[]>"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 44
            },
            "deprecated": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-public.TelemetryServicePublicApis.setOptIn",
            "type": "Function",
            "tags": [],
            "label": "setOptIn",
            "description": [
              "\nOverwrite the opt-in status.\nIt will send a final request to the remote telemetry cluster to report about the opt-in/out change."
            ],
            "signature": [
              "(optedIn: boolean) => Promise<boolean>"
            ],
            "source": {
              "path": "src/plugins/telemetry/public/plugin.ts",
              "lineNumber": 50
            },
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "telemetry",
                "id": "def-public.optedIn",
                "type": "boolean",
                "tags": [],
                "label": "optedIn",
                "description": [
                  "Whether the user is opting-in (`true`) or out (`false`)."
                ],
                "source": {
                  "path": "src/plugins/telemetry/public/plugin.ts",
                  "lineNumber": 50
                },
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": [],
    "start": {
      "parentPluginId": "telemetry",
      "id": "def-public.TelemetryPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "TelemetryPluginStart",
      "description": [
        "\nPublic's start exposed APIs by the telemetry plugin"
      ],
      "source": {
        "path": "src/plugins/telemetry/public/plugin.ts",
        "lineNumber": 64
      },
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "telemetry",
          "id": "def-public.TelemetryPluginStart.telemetryService",
          "type": "Object",
          "tags": [],
          "label": "telemetryService",
          "description": [
            "{@link TelemetryServicePublicApis}"
          ],
          "signature": [
            {
              "pluginId": "telemetry",
              "scope": "public",
              "docId": "kibTelemetryPluginApi",
              "section": "def-public.TelemetryServicePublicApis",
              "text": "TelemetryServicePublicApis"
            }
          ],
          "source": {
            "path": "src/plugins/telemetry/public/plugin.ts",
            "lineNumber": 66
          },
          "deprecated": false
        },
        {
          "parentPluginId": "telemetry",
          "id": "def-public.TelemetryPluginStart.telemetryNotifications",
          "type": "Object",
          "tags": [],
          "label": "telemetryNotifications",
          "description": [
            "Notification helpers"
          ],
          "signature": [
            "{ setOptedInNoticeSeen: () => Promise<void>; }"
          ],
          "source": {
            "path": "src/plugins/telemetry/public/plugin.ts",
            "lineNumber": 68
          },
          "deprecated": false
        },
        {
          "parentPluginId": "telemetry",
          "id": "def-public.TelemetryPluginStart.telemetryConstants",
          "type": "Object",
          "tags": [],
          "label": "telemetryConstants",
          "description": [
            "Set of publicly exposed telemetry constants"
          ],
          "signature": [
            "{ getPrivacyStatementUrl: () => string; }"
          ],
          "source": {
            "path": "src/plugins/telemetry/public/plugin.ts",
            "lineNumber": 73
          },
          "deprecated": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    },
    "setup": {
      "parentPluginId": "telemetry",
      "id": "def-public.TelemetryPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "TelemetryPluginSetup",
      "description": [
        "\nPublic's setup exposed APIs by the telemetry plugin"
      ],
      "source": {
        "path": "src/plugins/telemetry/public/plugin.ts",
        "lineNumber": 56
      },
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "telemetry",
          "id": "def-public.TelemetryPluginSetup.telemetryService",
          "type": "Object",
          "tags": [],
          "label": "telemetryService",
          "description": [
            "{@link TelemetryService}"
          ],
          "signature": [
            {
              "pluginId": "telemetry",
              "scope": "public",
              "docId": "kibTelemetryPluginApi",
              "section": "def-public.TelemetryServicePublicApis",
              "text": "TelemetryServicePublicApis"
            }
          ],
          "source": {
            "path": "src/plugins/telemetry/public/plugin.ts",
            "lineNumber": 58
          },
          "deprecated": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [
      {
        "parentPluginId": "telemetry",
        "id": "def-server.DataTelemetryBasePayload",
        "type": "Interface",
        "tags": [],
        "label": "DataTelemetryBasePayload",
        "description": [
          "\nCommon counters for the {@link DataTelemetryDocument}s"
        ],
        "source": {
          "path": "src/plugins/telemetry/server/telemetry_collection/get_data_telemetry/get_data_telemetry.ts",
          "lineNumber": 20
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "telemetry",
            "id": "def-server.DataTelemetryBasePayload.index_count",
            "type": "number",
            "tags": [],
            "label": "index_count",
            "description": [
              "How many indices match the declared pattern"
            ],
            "source": {
              "path": "src/plugins/telemetry/server/telemetry_collection/get_data_telemetry/get_data_telemetry.ts",
              "lineNumber": 22
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-server.DataTelemetryBasePayload.ecs_index_count",
            "type": "number",
            "tags": [],
            "label": "ecs_index_count",
            "description": [
              "How many indices match the declared pattern follow ECS conventions"
            ],
            "signature": [
              "number | undefined"
            ],
            "source": {
              "path": "src/plugins/telemetry/server/telemetry_collection/get_data_telemetry/get_data_telemetry.ts",
              "lineNumber": 24
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-server.DataTelemetryBasePayload.doc_count",
            "type": "number",
            "tags": [],
            "label": "doc_count",
            "description": [
              "How many documents are among all the identified indices"
            ],
            "signature": [
              "number | undefined"
            ],
            "source": {
              "path": "src/plugins/telemetry/server/telemetry_collection/get_data_telemetry/get_data_telemetry.ts",
              "lineNumber": 26
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-server.DataTelemetryBasePayload.size_in_bytes",
            "type": "number",
            "tags": [],
            "label": "size_in_bytes",
            "description": [
              "Total size in bytes among all the identified indices"
            ],
            "signature": [
              "number | undefined"
            ],
            "source": {
              "path": "src/plugins/telemetry/server/telemetry_collection/get_data_telemetry/get_data_telemetry.ts",
              "lineNumber": 28
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "telemetry",
        "id": "def-server.DataTelemetryDocument",
        "type": "Interface",
        "tags": [],
        "label": "DataTelemetryDocument",
        "description": [
          "\nDepending on the type of index, we'll populate different keys as we identify them."
        ],
        "signature": [
          {
            "pluginId": "telemetry",
            "scope": "server",
            "docId": "kibTelemetryPluginApi",
            "section": "def-server.DataTelemetryDocument",
            "text": "DataTelemetryDocument"
          },
          " extends ",
          {
            "pluginId": "telemetry",
            "scope": "server",
            "docId": "kibTelemetryPluginApi",
            "section": "def-server.DataTelemetryBasePayload",
            "text": "DataTelemetryBasePayload"
          }
        ],
        "source": {
          "path": "src/plugins/telemetry/server/telemetry_collection/get_data_telemetry/get_data_telemetry.ts",
          "lineNumber": 34
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "telemetry",
            "id": "def-server.DataTelemetryDocument.data_stream",
            "type": "Object",
            "tags": [],
            "label": "data_stream",
            "description": [
              "For data-stream indices. Reporting their details"
            ],
            "signature": [
              "{ dataset?: string | undefined; type?: string | undefined; } | undefined"
            ],
            "source": {
              "path": "src/plugins/telemetry/server/telemetry_collection/get_data_telemetry/get_data_telemetry.ts",
              "lineNumber": 36
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-server.DataTelemetryDocument.package",
            "type": "Object",
            "tags": [],
            "label": "package",
            "description": [
              "When available, reporting the package details"
            ],
            "signature": [
              "{ name: string; } | undefined"
            ],
            "source": {
              "path": "src/plugins/telemetry/server/telemetry_collection/get_data_telemetry/get_data_telemetry.ts",
              "lineNumber": 43
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-server.DataTelemetryDocument.shipper",
            "type": "string",
            "tags": [],
            "label": "shipper",
            "description": [
              "What's the process indexing the data? (i.e.: \"beats\", \"logstash\")"
            ],
            "signature": [
              "string | undefined"
            ],
            "source": {
              "path": "src/plugins/telemetry/server/telemetry_collection/get_data_telemetry/get_data_telemetry.ts",
              "lineNumber": 48
            },
            "deprecated": false
          },
          {
            "parentPluginId": "telemetry",
            "id": "def-server.DataTelemetryDocument.pattern_name",
            "type": "CompoundType",
            "tags": [],
            "label": "pattern_name",
            "description": [
              "When the data comes from a matching index-pattern, the name of the pattern"
            ],
            "signature": [
              "\"search\" | \"logstash\" | \"enterprise-search\" | \"app-search\" | \"magento2\" | \"magento\" | \"shopify\" | \"wordpress\" | \"drupal\" | \"joomla\" | \"sharepoint\" | \"squarespace\" | \"sitecore\" | \"weebly\" | \"acquia\" | \"filebeat\" | \"metricbeat\" | \"apm\" | \"functionbeat\" | \"heartbeat\" | \"fluentd\" | \"telegraf\" | \"prometheusbeat\" | \"fluentbit\" | \"nginx\" | \"apache\" | \"endgame\" | \"logs-endpoint\" | \"metrics-endpoint\" | \"siem-signals\" | \"auditbeat\" | \"winlogbeat\" | \"packetbeat\" | \"tomcat\" | \"artifactory\" | \"aruba\" | \"barracuda\" | \"bluecoat\" | \"arcsight\" | \"checkpoint\" | \"cisco\" | \"citrix\" | \"cyberark\" | \"cylance\" | \"fireeye\" | \"fortinet\" | \"infoblox\" | \"kaspersky\" | \"mcafee\" | \"paloaltonetworks\" | \"rsa\" | \"snort\" | \"sonicwall\" | \"sophos\" | \"squid\" | \"symantec\" | \"tippingpoint\" | \"trendmicro\" | \"tripwire\" | \"zscaler\" | \"zeek\" | \"sigma_doc\" | \"ecs-corelight\" | \"suricata\" | \"wazuh\" | \"meow\" | undefined"
            ],
            "source": {
              "path": "src/plugins/telemetry/server/telemetry_collection/get_data_telemetry/get_data_telemetry.ts",
              "lineNumber": 50
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "telemetry",
        "id": "def-server.NodeUsage",
        "type": "Interface",
        "tags": [],
        "label": "NodeUsage",
        "description": [
          "\nData returned by GET /_nodes/usage, but flattened as an array of {@link estypes.NodeUsageInformation}\nwith the node ID set in the field `node_id`."
        ],
        "signature": [
          {
            "pluginId": "telemetry",
            "scope": "server",
            "docId": "kibTelemetryPluginApi",
            "section": "def-server.NodeUsage",
            "text": "NodeUsage"
          },
          " extends ",
          "NodeUsageInformation"
        ],
        "source": {
          "path": "src/plugins/telemetry/server/telemetry_collection/get_nodes_usage.ts",
          "lineNumber": 17
        },
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "telemetry",
            "id": "def-server.NodeUsage.node_id",
            "type": "string",
            "tags": [],
            "label": "node_id",
            "description": [
              "\nThe Node ID as reported by ES"
            ],
            "source": {
              "path": "src/plugins/telemetry/server/telemetry_collection/get_nodes_usage.ts",
              "lineNumber": 21
            },
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "telemetry",
        "id": "def-server.DataTelemetryPayload",
        "type": "Type",
        "tags": [],
        "label": "DataTelemetryPayload",
        "description": [
          "\nThe Data Telemetry is reported as an array of {@link DataTelemetryDocument}"
        ],
        "signature": [
          {
            "pluginId": "telemetry",
            "scope": "server",
            "docId": "kibTelemetryPluginApi",
            "section": "def-server.DataTelemetryDocument",
            "text": "DataTelemetryDocument"
          },
          "[]"
        ],
        "source": {
          "path": "src/plugins/telemetry/server/telemetry_collection/get_data_telemetry/get_data_telemetry.ts",
          "lineNumber": 56
        },
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "telemetry",
        "id": "def-server.TelemetryLocalStats",
        "type": "Type",
        "tags": [],
        "label": "TelemetryLocalStats",
        "description": [
          "\nThe payload structure as composed by the OSS telemetry collection mechanism."
        ],
        "signature": [
          "{ timestamp: string; cluster_uuid: string; cluster_name: string; version: string; cluster_stats: Pick<",
          "ClusterStatsResponse",
          ", \"status\" | \"indices\" | \"nodes\" | \"cluster_uuid\" | \"timestamp\">; collection: string; stack_stats: { data: ",
          {
            "pluginId": "telemetry",
            "scope": "server",
            "docId": "kibTelemetryPluginApi",
            "section": "def-server.DataTelemetryPayload",
            "text": "DataTelemetryPayload"
          },
          " | undefined; kibana: { count: number; indices: number; os: {}; versions: { version: string; count: number; }[]; plugins: { [plugin: string]: Record<string, unknown>; }; } | undefined; }; }"
        ],
        "source": {
          "path": "src/plugins/telemetry/server/telemetry_collection/get_local_stats.ts",
          "lineNumber": 54
        },
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "telemetry",
      "id": "def-server.TelemetryPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "TelemetryPluginSetup",
      "description": [
        "\nServer's setup exposed APIs by the telemetry plugin"
      ],
      "source": {
        "path": "src/plugins/telemetry/server/plugin.ts",
        "lineNumber": 51
      },
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "telemetry",
          "id": "def-server.TelemetryPluginSetup.getTelemetryUrl",
          "type": "Function",
          "tags": [],
          "label": "getTelemetryUrl",
          "description": [
            "\nResolves into the telemetry Url used to send telemetry.\nThe url is wrapped with node's [URL constructor](https://nodejs.org/api/url.html)."
          ],
          "signature": [
            "() => Promise<",
            "URL",
            ">"
          ],
          "source": {
            "path": "src/plugins/telemetry/server/plugin.ts",
            "lineNumber": 56
          },
          "deprecated": false,
          "returnComment": [],
          "children": []
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "telemetry",
      "id": "def-server.TelemetryPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "TelemetryPluginStart",
      "description": [
        "\nServer's start exposed APIs by the telemetry plugin"
      ],
      "source": {
        "path": "src/plugins/telemetry/server/plugin.ts",
        "lineNumber": 62
      },
      "deprecated": false,
      "children": [
        {
          "parentPluginId": "telemetry",
          "id": "def-server.TelemetryPluginStart.getIsOptedIn",
          "type": "Function",
          "tags": [],
          "label": "getIsOptedIn",
          "description": [
            "\nResolves `true` if the user has opted into send Elastic usage data.\nResolves `false` if the user explicitly opted out of sending usage data to Elastic\nor did not choose to opt-in or out -yet- after a minor or major upgrade (only when previously opted-out)."
          ],
          "signature": [
            "() => Promise<boolean>"
          ],
          "source": {
            "path": "src/plugins/telemetry/server/plugin.ts",
            "lineNumber": 68
          },
          "deprecated": false,
          "returnComment": [],
          "children": []
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}