{
  "id": "metricsExperience",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "metricsExperience",
        "id": "def-public.MetricsExperienceClient",
        "type": "Type",
        "tags": [],
        "label": "MetricsExperienceClient",
        "description": [],
        "signature": [
          "{ getDimensions: (params: { dimensions: string; indices?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }, signal?: AbortSignal | null | undefined) => Promise<{ values: { value: string; field: string; }[]; }>; getFields: (params: { page?: number | undefined; index?: string | undefined; size?: number | undefined; fields?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }, signal?: AbortSignal | null | undefined) => Promise<{ fields: ",
          "MetricField",
          "[]; total: number; page: number; }>; getIndexPatternMetadata({ indexPattern, from, to, }: { indexPattern: string; } & { from: string; to: string; }, signal?: AbortSignal | null | undefined): Promise<{ indexPatternMetadata: { [k: string]: { hasTimeSeriesFields: boolean; }; }; }>; }"
        ],
        "path": "src/platform/plugins/shared/metrics_experience/public/api/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "start": {
      "parentPluginId": "metricsExperience",
      "id": "def-public.MetricsExperiencePluginStart",
      "type": "Interface",
      "tags": [],
      "label": "MetricsExperiencePluginStart",
      "description": [],
      "path": "src/platform/plugins/shared/metrics_experience/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "metricsExperience",
          "id": "def-public.MetricsExperiencePluginStart.metricsExperienceClient",
          "type": "Object",
          "tags": [],
          "label": "metricsExperienceClient",
          "description": [],
          "signature": [
            "{ getDimensions: (params: { dimensions: string; indices?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }, signal?: AbortSignal | null | undefined) => Promise<{ values: { value: string; field: string; }[]; }>; getFields: (params: { page?: number | undefined; index?: string | undefined; size?: number | undefined; fields?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }, signal?: AbortSignal | null | undefined) => Promise<{ fields: ",
            "MetricField",
            "[]; total: number; page: number; }>; getIndexPatternMetadata({ indexPattern, from, to, }: { indexPattern: string; } & { from: string; to: string; }, signal?: AbortSignal | null | undefined): Promise<{ indexPatternMetadata: { [k: string]: { hasTimeSeriesFields: boolean; }; }; }>; } | undefined"
          ],
          "path": "src/platform/plugins/shared/metrics_experience/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "metricsExperience",
        "id": "def-server.MetricsExperienceRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "MetricsExperienceRouteRepository",
        "description": [],
        "signature": [
          "{ \"GET /internal/metrics_experience/index_pattern_metadata/{indexPattern}\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /internal/metrics_experience/index_pattern_metadata/{indexPattern}\", ",
          "ZodObject",
          "<{ path: ",
          "ZodObject",
          "<{ indexPattern: ",
          "ZodString",
          "; }, \"strip\", ",
          "ZodTypeAny",
          ", { indexPattern: string; }, { indexPattern: string; }>; query: ",
          "ZodObject",
          "<{ to: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", number, string>; from: ",
          "ZodEffects",
          "<",
          "ZodString",
          ", number, string>; }, \"strip\", ",
          "ZodTypeAny",
          ", { from: number; to: number; }, { from: string; to: string; }>; }, \"strip\", ",
          "ZodTypeAny",
          ", { path: { indexPattern: string; }; query: { from: number; to: number; }; }, { path: { indexPattern: string; }; query: { from: string; to: string; }; }>, ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.DefaultRouteHandlerResources",
            "text": "DefaultRouteHandlerResources"
          },
          ", { indexPatternMetadata: { [k: string]: { hasTimeSeriesFields: boolean; }; }; }, undefined>; \"GET /internal/metrics_experience/fields\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /internal/metrics_experience/fields\", ",
          "ZodObject",
          "<{ query: ",
          "ZodObject",
          "<{ index: ",
          "ZodDefault",
          "<",
          "ZodString",
          ">; to: ",
          "ZodEffects",
          "<",
          "ZodDefault",
          "<",
          "ZodString",
          ">, number, string | undefined>; from: ",
          "ZodEffects",
          "<",
          "ZodDefault",
          "<",
          "ZodString",
          ">, number, string | undefined>; fields: ",
          "ZodDefault",
          "<",
          "ZodUnion",
          "<[",
          "ZodString",
          ", ",
          "ZodArray",
          "<",
          "ZodString",
          ", \"many\">]>>; page: ",
          "ZodDefault",
          "<",
          "ZodNumber",
          ">; size: ",
          "ZodDefault",
          "<",
          "ZodNumber",
          ">; }, \"strip\", ",
          "ZodTypeAny",
          ", { page: number; index: string; size: number; fields: string | string[]; from: number; to: number; }, { page?: number | undefined; index?: string | undefined; size?: number | undefined; fields?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }>; }, \"strip\", ",
          "ZodTypeAny",
          ", { query: { page: number; index: string; size: number; fields: string | string[]; from: number; to: number; }; }, { query: { page?: number | undefined; index?: string | undefined; size?: number | undefined; fields?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }; }>, ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.DefaultRouteHandlerResources",
            "text": "DefaultRouteHandlerResources"
          },
          ", { fields: ",
          "MetricField",
          "[]; total: number; page: number; }, undefined>; \"GET /internal/metrics_experience/dimensions\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /internal/metrics_experience/dimensions\", ",
          "ZodObject",
          "<{ query: ",
          "ZodObject",
          "<{ dimensions: ",
          "ZodPipeline",
          "<",
          "ZodEffects",
          "<",
          "ZodString",
          ", any, string>, ",
          "ZodArray",
          "<",
          "ZodString",
          ", \"many\">>; indices: ",
          "ZodDefault",
          "<",
          "ZodEffects",
          "<",
          "ZodUnion",
          "<[",
          "ZodString",
          ", ",
          "ZodArray",
          "<",
          "ZodString",
          ", \"many\">]>, string[], string | string[]>>; to: ",
          "ZodEffects",
          "<",
          "ZodDefault",
          "<",
          "ZodString",
          ">, number, string | undefined>; from: ",
          "ZodEffects",
          "<",
          "ZodDefault",
          "<",
          "ZodString",
          ">, number, string | undefined>; }, \"strip\", ",
          "ZodTypeAny",
          ", { indices: string[]; from: number; to: number; dimensions: string[]; }, { dimensions: string; indices?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }>; }, \"strip\", ",
          "ZodTypeAny",
          ", { query: { indices: string[]; from: number; to: number; dimensions: string[]; }; }, { query: { dimensions: string; indices?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }; }>, ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.DefaultRouteHandlerResources",
            "text": "DefaultRouteHandlerResources"
          },
          ", { values: { value: string; field: string; }[]; }, undefined>; }"
        ],
        "path": "src/platform/plugins/shared/metrics_experience/server/routes/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}