{
  "id": "metricsExperience",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "metricsExperience",
        "id": "def-public.MetricsExperienceClient",
        "type": "Type",
        "tags": [],
        "label": "MetricsExperienceClient",
        "description": [],
        "signature": [
          "{ getDimensions: (params: { dimensions: string; indices?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }, signal?: AbortSignal | null | undefined) => Promise<{ values: { value: string; field: string; }[]; }>; getFields: (params: { page?: number | undefined; index?: string | undefined; size?: number | undefined; fields?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }, signal?: AbortSignal | null | undefined) => Promise<{ fields: ",
          "MetricField",
          "[]; total: number; page: number; }>; postData: (params: { esql: string; filters: { value: string; field: string; }[]; from: string; to: string; }, signal?: AbortSignal | null | undefined) => Promise<{ data: { key: Record<string, string>; data: { x: number; y: number; }[]; }[] | { x: number; y: ",
          "FieldValue",
          "; }[]; esql: string; hasDimensions: boolean; }>; }"
        ],
        "path": "src/platform/plugins/shared/metrics_experience/public/api/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "metricsExperience",
      "id": "def-public.MetricsExperiencePluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "MetricsExperiencePluginSetup",
      "description": [],
      "path": "src/platform/plugins/shared/metrics_experience/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "metricsExperience",
      "id": "def-public.MetricsExperiencePluginStart",
      "type": "Interface",
      "tags": [],
      "label": "MetricsExperiencePluginStart",
      "description": [],
      "path": "src/platform/plugins/shared/metrics_experience/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "metricsExperience",
          "id": "def-public.MetricsExperiencePluginStart.metricsExperienceClient",
          "type": "Object",
          "tags": [],
          "label": "metricsExperienceClient",
          "description": [],
          "signature": [
            "{ getDimensions: (params: { dimensions: string; indices?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }, signal?: AbortSignal | null | undefined) => Promise<{ values: { value: string; field: string; }[]; }>; getFields: (params: { page?: number | undefined; index?: string | undefined; size?: number | undefined; fields?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }, signal?: AbortSignal | null | undefined) => Promise<{ fields: ",
            "MetricField",
            "[]; total: number; page: number; }>; postData: (params: { esql: string; filters: { value: string; field: string; }[]; from: string; to: string; }, signal?: AbortSignal | null | undefined) => Promise<{ data: { key: Record<string, string>; data: { x: number; y: number; }[]; }[] | { x: number; y: ",
            "FieldValue",
            "; }[]; esql: string; hasDimensions: boolean; }>; }"
          ],
          "path": "src/platform/plugins/shared/metrics_experience/public/types.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "metricsExperience",
        "id": "def-server.MetricsExperienceRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "MetricsExperienceRouteRepository",
        "description": [],
        "signature": [
          "{ \"POST /internal/metrics_experience/data\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"POST /internal/metrics_experience/data\", Zod.ZodObject<{ body: Zod.ZodObject<{ esql: Zod.ZodString; from: Zod.ZodString; to: Zod.ZodString; filters: Zod.ZodArray<Zod.ZodObject<{ field: Zod.ZodString; value: Zod.ZodString; }, \"strip\", Zod.ZodTypeAny, { value: string; field: string; }, { value: string; field: string; }>, \"many\">; }, \"strip\", Zod.ZodTypeAny, { esql: string; filters: { value: string; field: string; }[]; from: string; to: string; }, { esql: string; filters: { value: string; field: string; }[]; from: string; to: string; }>; }, \"strip\", Zod.ZodTypeAny, { body: { esql: string; filters: { value: string; field: string; }[]; from: string; to: string; }; }, { body: { esql: string; filters: { value: string; field: string; }[]; from: string; to: string; }; }>, ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.DefaultRouteHandlerResources",
            "text": "DefaultRouteHandlerResources"
          },
          ", { data: { key: Record<string, string>; data: { x: number; y: number; }[]; }[] | { x: number; y: ",
          "FieldValue",
          "; }[]; esql: string; hasDimensions: boolean; }, undefined>; \"GET /internal/metrics_experience/fields\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /internal/metrics_experience/fields\", Zod.ZodObject<{ query: Zod.ZodObject<{ index: Zod.ZodDefault<Zod.ZodString>; to: Zod.ZodDefault<Zod.ZodString>; from: Zod.ZodDefault<Zod.ZodString>; fields: Zod.ZodDefault<Zod.ZodUnion<[Zod.ZodString, Zod.ZodArray<Zod.ZodString, \"many\">]>>; page: Zod.ZodDefault<Zod.ZodNumber>; size: Zod.ZodDefault<Zod.ZodNumber>; }, \"strip\", Zod.ZodTypeAny, { page: number; index: string; size: number; fields: string | string[]; from: string; to: string; }, { page?: number | undefined; index?: string | undefined; size?: number | undefined; fields?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }>; }, \"strip\", Zod.ZodTypeAny, { query: { page: number; index: string; size: number; fields: string | string[]; from: string; to: string; }; }, { query: { page?: number | undefined; index?: string | undefined; size?: number | undefined; fields?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }; }>, ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.DefaultRouteHandlerResources",
            "text": "DefaultRouteHandlerResources"
          },
          ", { fields: ",
          "MetricField",
          "[]; total: number; page: number; }, undefined>; \"GET /internal/metrics_experience/dimensions\": ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /internal/metrics_experience/dimensions\", Zod.ZodObject<{ query: Zod.ZodObject<{ dimensions: Zod.ZodPipeline<Zod.ZodEffects<Zod.ZodString, any, string>, Zod.ZodArray<Zod.ZodString, \"many\">>; indices: Zod.ZodDefault<Zod.ZodEffects<Zod.ZodUnion<[Zod.ZodString, Zod.ZodArray<Zod.ZodString, \"many\">]>, string[], string | string[]>>; to: Zod.ZodDefault<Zod.ZodEffects<Zod.ZodString, string, string>>; from: Zod.ZodDefault<Zod.ZodEffects<Zod.ZodString, string, string>>; }, \"strip\", Zod.ZodTypeAny, { indices: string[]; from: string; to: string; dimensions: string[]; }, { dimensions: string; indices?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }>; }, \"strip\", Zod.ZodTypeAny, { query: { indices: string[]; from: string; to: string; dimensions: string[]; }; }, { query: { dimensions: string; indices?: string | string[] | undefined; from?: string | undefined; to?: string | undefined; }; }>, ",
          {
            "pluginId": "@kbn/server-route-repository-utils",
            "scope": "common",
            "docId": "kibKbnServerRouteRepositoryUtilsPluginApi",
            "section": "def-common.DefaultRouteHandlerResources",
            "text": "DefaultRouteHandlerResources"
          },
          ", { values: { value: string; field: string; }[]; }, undefined>; }"
        ],
        "path": "src/platform/plugins/shared/metrics_experience/server/routes/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "metricsExperience",
        "id": "def-server.configSchema",
        "type": "Object",
        "tags": [],
        "label": "configSchema",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/config-schema",
            "scope": "common",
            "docId": "kibKbnConfigSchemaPluginApi",
            "section": "def-common.ObjectType",
            "text": "ObjectType"
          },
          "<{ enabled: ",
          {
            "pluginId": "@kbn/config-schema",
            "scope": "common",
            "docId": "kibKbnConfigSchemaPluginApi",
            "section": "def-common.Type",
            "text": "Type"
          },
          "<boolean>; }>"
        ],
        "path": "src/platform/plugins/shared/metrics_experience/server/config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}