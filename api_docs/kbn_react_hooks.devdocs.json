{
  "id": "@kbn/react-hooks",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "@kbn/react-hooks",
        "id": "def-common.useAbortableAsync",
        "type": "Function",
        "tags": [],
        "label": "useAbortableAsync",
        "description": [],
        "signature": [
          "(fn: ({}: { signal: AbortSignal; }) => T | Promise<T>, deps: any[], options: UseAbortableAsyncOptions<T> | undefined) => ",
          {
            "pluginId": "@kbn/react-hooks",
            "scope": "common",
            "docId": "kibKbnReactHooksPluginApi",
            "section": "def-common.AbortableAsyncState",
            "text": "AbortableAsyncState"
          },
          "<T>"
        ],
        "path": "src/platform/packages/shared/kbn-react-hooks/src/use_abortable_async/use_abortable_async.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.useAbortableAsync.$1",
            "type": "Function",
            "tags": [],
            "label": "fn",
            "description": [],
            "signature": [
              "({}: { signal: AbortSignal; }) => T | Promise<T>"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_abortable_async/use_abortable_async.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.useAbortableAsync.$2",
            "type": "Array",
            "tags": [],
            "label": "deps",
            "description": [],
            "signature": [
              "any[]"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_abortable_async/use_abortable_async.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.useAbortableAsync.$3",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "UseAbortableAsyncOptions<T> | undefined"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_abortable_async/use_abortable_async.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/react-hooks",
        "id": "def-common.useAbortController",
        "type": "Function",
        "tags": [],
        "label": "useAbortController",
        "description": [],
        "signature": [
          "() => { signal: AbortSignal; abort: () => void; refresh: () => void; }"
        ],
        "path": "src/platform/packages/shared/kbn-react-hooks/src/use_abort_controller/use_abort_controller.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/react-hooks",
        "id": "def-common.useBoolean",
        "type": "Function",
        "tags": [],
        "label": "useBoolean",
        "description": [],
        "signature": [
          "(initialValue?: boolean) => ",
          {
            "pluginId": "@kbn/react-hooks",
            "scope": "common",
            "docId": "kibKbnReactHooksPluginApi",
            "section": "def-common.UseBooleanResult",
            "text": "UseBooleanResult"
          }
        ],
        "path": "src/platform/packages/shared/kbn-react-hooks/src/use_boolean/use_boolean.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.useBoolean.$1",
            "type": "boolean",
            "tags": [],
            "label": "initialValue",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_boolean/use_boolean.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/react-hooks",
        "id": "def-common.useDebounceFn",
        "type": "Function",
        "tags": [
          "throws",
          "caveat"
        ],
        "label": "useDebounceFn",
        "description": [
          "\nCustom hook that returns a React safe debounced version of the provided function.\n"
        ],
        "signature": [
          "(fn: T, options: ",
          "DebounceOptions",
          " | undefined) => { run: _.DebouncedFunc<(...args: Parameters<T>) => ReturnType<T>>; cancel: () => void; flush: () => ReturnType<T> | undefined; }"
        ],
        "path": "src/platform/packages/shared/kbn-react-hooks/src/use_debounce_fn/use_debounce_fn.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.useDebounceFn.$1",
            "type": "Function",
            "tags": [],
            "label": "fn",
            "description": [
              "- The function to debounce."
            ],
            "signature": [
              "T"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_debounce_fn/use_debounce_fn.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.useDebounceFn.$2",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [
              "- Optional configuration options for debounce."
            ],
            "signature": [
              "DebounceOptions",
              " | undefined"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_debounce_fn/use_debounce_fn.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "- An object containing the debounced function (`run`), and methods to cancel (`cancel`) or flush (`flush`) the debounce."
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/react-hooks",
        "id": "def-common.useErrorTextStyle",
        "type": "Function",
        "tags": [],
        "label": "useErrorTextStyle",
        "description": [],
        "signature": [
          "() => ",
          "SerializedStyles"
        ],
        "path": "src/platform/packages/shared/kbn-react-hooks/src/use_error_text_style/use_error_text_style.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/react-hooks",
        "id": "def-common.useThrottleFn",
        "type": "Function",
        "tags": [
          "throws",
          "caveat"
        ],
        "label": "useThrottleFn",
        "description": [
          "\nCustom hook that returns a React safe  throttled version of the provided function.\n"
        ],
        "signature": [
          "(fn: T, options: ",
          "ThrottleOptions",
          " | undefined) => { run: _.DebouncedFuncLeading<(...args: Parameters<T>) => ReturnType<T>>; cancel: () => void; flush: () => ReturnType<T>; }"
        ],
        "path": "src/platform/packages/shared/kbn-react-hooks/src/use_throttle_fn/use_throttle_fn.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.useThrottleFn.$1",
            "type": "Function",
            "tags": [],
            "label": "fn",
            "description": [
              "- The function to throttle."
            ],
            "signature": [
              "T"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_throttle_fn/use_throttle_fn.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.useThrottleFn.$2",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [
              "- Optional configuration options for throttle."
            ],
            "signature": [
              "ThrottleOptions",
              " | undefined"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_throttle_fn/use_throttle_fn.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          }
        ],
        "returnComment": [
          "- An object containing the throttled function (`run`), and methods to cancel (`cancel`) or flush (`flush`) the throttle."
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "@kbn/react-hooks",
        "id": "def-common.UseBooleanHandlers",
        "type": "Interface",
        "tags": [],
        "label": "UseBooleanHandlers",
        "description": [],
        "path": "src/platform/packages/shared/kbn-react-hooks/src/use_boolean/use_boolean.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.UseBooleanHandlers.on",
            "type": "Function",
            "tags": [],
            "label": "on",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_boolean/use_boolean.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.UseBooleanHandlers.off",
            "type": "Function",
            "tags": [],
            "label": "off",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_boolean/use_boolean.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.UseBooleanHandlers.toggle",
            "type": "Function",
            "tags": [],
            "label": "toggle",
            "description": [],
            "signature": [
              "(nextValue?: any) => void"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_boolean/use_boolean.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/react-hooks",
                "id": "def-common.UseBooleanHandlers.toggle.$1",
                "type": "Any",
                "tags": [],
                "label": "nextValue",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "node_modules/react-use/lib/useToggle.d.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/react-hooks",
        "id": "def-common.AbortableAsyncState",
        "type": "Type",
        "tags": [],
        "label": "AbortableAsyncState",
        "description": [],
        "signature": [
          "(T extends Promise<infer TReturn> ? State<TReturn> : State<T>) & { refresh: () => void; }"
        ],
        "path": "src/platform/packages/shared/kbn-react-hooks/src/use_abortable_async/use_abortable_async.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/react-hooks",
        "id": "def-common.UseAbortableAsync",
        "type": "Type",
        "tags": [],
        "label": "UseAbortableAsync",
        "description": [],
        "signature": [
          "<T>(fn: ({}: { signal: AbortSignal; } & TAdditionalParameters) => T | Promise<T>, deps: any[], options?: (UseAbortableAsyncOptions<T> & TAdditionalOptions) | undefined) => ",
          {
            "pluginId": "@kbn/react-hooks",
            "scope": "common",
            "docId": "kibKbnReactHooksPluginApi",
            "section": "def-common.AbortableAsyncState",
            "text": "AbortableAsyncState"
          },
          "<T>"
        ],
        "path": "src/platform/packages/shared/kbn-react-hooks/src/use_abortable_async/use_abortable_async.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.UseAbortableAsync.$1",
            "type": "Function",
            "tags": [],
            "label": "fn",
            "description": [],
            "signature": [
              "({}: { signal: AbortSignal; } & TAdditionalParameters) => T | Promise<T>"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_abortable_async/use_abortable_async.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/react-hooks",
                "id": "def-common.UseAbortableAsync.$1.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "__0",
                "description": [],
                "signature": [
                  "{ signal: AbortSignal; } & TAdditionalParameters"
                ],
                "path": "src/platform/packages/shared/kbn-react-hooks/src/use_abortable_async/use_abortable_async.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.UseAbortableAsync.$2",
            "type": "Array",
            "tags": [],
            "label": "deps",
            "description": [],
            "signature": [
              "any[]"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_abortable_async/use_abortable_async.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/react-hooks",
            "id": "def-common.UseAbortableAsync.$3",
            "type": "CompoundType",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "(UseAbortableAsyncOptions<T> & TAdditionalOptions) | undefined"
            ],
            "path": "src/platform/packages/shared/kbn-react-hooks/src/use_abortable_async/use_abortable_async.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/react-hooks",
        "id": "def-common.UseBooleanResult",
        "type": "Type",
        "tags": [],
        "label": "UseBooleanResult",
        "description": [],
        "signature": [
          "[boolean, ",
          {
            "pluginId": "@kbn/react-hooks",
            "scope": "common",
            "docId": "kibKbnReactHooksPluginApi",
            "section": "def-common.UseBooleanHandlers",
            "text": "UseBooleanHandlers"
          },
          "]"
        ],
        "path": "src/platform/packages/shared/kbn-react-hooks/src/use_boolean/use_boolean.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}