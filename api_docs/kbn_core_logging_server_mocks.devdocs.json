{
  "id": "@kbn/core-logging-server-mocks",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": [
      {
        "parentPluginId": "@kbn/core-logging-server-mocks",
        "id": "def-server.loggingServiceMock",
        "type": "Object",
        "tags": [],
        "label": "loggingServiceMock",
        "description": [],
        "path": "packages/core/logging/core-logging-server-mocks/src/logging_service.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-logging-server-mocks",
            "id": "def-server.loggingServiceMock.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [],
            "signature": [
              "() => jest.Mocked<LoggingServiceContract>"
            ],
            "path": "packages/core/logging/core-logging-server-mocks/src/logging_service.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-logging-server-mocks",
            "id": "def-server.loggingServiceMock.createSetupContract",
            "type": "Function",
            "tags": [],
            "label": "createSetupContract",
            "description": [],
            "signature": [
              "() => jest.Mocked<",
              "LoggingServiceSetup",
              ">"
            ],
            "path": "packages/core/logging/core-logging-server-mocks/src/logging_service.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-logging-server-mocks",
            "id": "def-server.loggingServiceMock.createInternalPrebootContract",
            "type": "Function",
            "tags": [],
            "label": "createInternalPrebootContract",
            "description": [],
            "signature": [
              "() => jest.Mocked<",
              "InternalLoggingServicePreboot",
              ">"
            ],
            "path": "packages/core/logging/core-logging-server-mocks/src/logging_service.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-logging-server-mocks",
            "id": "def-server.loggingServiceMock.createInternalSetupContract",
            "type": "Function",
            "tags": [],
            "label": "createInternalSetupContract",
            "description": [],
            "signature": [
              "() => jest.Mocked<",
              "InternalLoggingServicePreboot",
              ">"
            ],
            "path": "packages/core/logging/core-logging-server-mocks/src/logging_service.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/core-logging-server-mocks",
        "id": "def-server.loggingSystemMock",
        "type": "Object",
        "tags": [],
        "label": "loggingSystemMock",
        "description": [],
        "path": "packages/core/logging/core-logging-server-mocks/src/logging_system.mock.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/core-logging-server-mocks",
            "id": "def-server.loggingSystemMock.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [],
            "signature": [
              "() => jest.Mocked<",
              "ILoggingSystem",
              ">"
            ],
            "path": "packages/core/logging/core-logging-server-mocks/src/logging_system.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "@kbn/core-logging-server-mocks",
            "id": "def-server.loggingSystemMock.collect",
            "type": "Function",
            "tags": [],
            "label": "collect",
            "description": [],
            "signature": [
              "(loggerFactory: ",
              "LoggerFactory",
              ") => { debug: [message: string, meta?: ",
              "LogMeta",
              " | undefined][]; error: [errorOrMessage: string | Error, meta?: ",
              "LogMeta",
              " | undefined][]; fatal: [errorOrMessage: string | Error, meta?: ",
              "LogMeta",
              " | undefined][]; info: [message: string, meta?: ",
              "LogMeta",
              " | undefined][]; log: [record: ",
              "LogRecord",
              "][]; trace: [message: string, meta?: ",
              "LogMeta",
              " | undefined][]; warn: [errorOrMessage: string | Error, meta?: ",
              "LogMeta",
              " | undefined][]; }"
            ],
            "path": "packages/core/logging/core-logging-server-mocks/src/logging_system.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-logging-server-mocks",
                "id": "def-server.loggingSystemMock.collect.$1",
                "type": "Object",
                "tags": [],
                "label": "loggerFactory",
                "description": [],
                "signature": [
                  "LoggerFactory"
                ],
                "path": "packages/core/logging/core-logging-server-mocks/src/logging_system.mock.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-logging-server-mocks",
            "id": "def-server.loggingSystemMock.clear",
            "type": "Function",
            "tags": [],
            "label": "clear",
            "description": [],
            "signature": [
              "(loggerFactory: ",
              "LoggerFactory",
              ") => void"
            ],
            "path": "packages/core/logging/core-logging-server-mocks/src/logging_system.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-logging-server-mocks",
                "id": "def-server.loggingSystemMock.clear.$1",
                "type": "Object",
                "tags": [],
                "label": "loggerFactory",
                "description": [],
                "signature": [
                  "LoggerFactory"
                ],
                "path": "packages/core/logging/core-logging-server-mocks/src/logging_system.mock.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "@kbn/core-logging-server-mocks",
            "id": "def-server.loggingSystemMock.createLogger",
            "type": "Function",
            "tags": [],
            "label": "createLogger",
            "description": [],
            "signature": [
              "(context?: string[] | undefined) => ",
              "MockedLogger"
            ],
            "path": "packages/core/logging/core-logging-server-mocks/src/logging_system.mock.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "@kbn/core-logging-server-mocks",
                "id": "def-server.loggingSystemMock.createLogger.$1",
                "type": "Array",
                "tags": [],
                "label": "context",
                "description": [],
                "signature": [
                  "string[] | undefined"
                ],
                "path": "node_modules/@types/kbn__logging-mocks/index.d.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      }
    ]
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}