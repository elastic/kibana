{
  "id": "expressionShape",
  "client": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.getDefaultShapeData",
        "type": "Function",
        "tags": [],
        "label": "getDefaultShapeData",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.SvgConfig",
            "text": "SvgConfig"
          }
        ],
        "path": "src/plugins/expression_shape/public/components/reusable/utils.ts",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.LazyProgressDrawer",
        "type": "Function",
        "tags": [],
        "label": "LazyProgressDrawer",
        "description": [],
        "signature": [
          "React.ExoticComponent<Pick<Pick<",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeDrawerProps",
            "text": "ShapeDrawerProps"
          },
          ", \"children\" | \"ref\" | \"shapeType\" | \"shapeAttributes\" | \"shapeContentAttributes\" | \"textAttributes\">, \"children\" | \"shapeType\" | \"shapeAttributes\" | \"shapeContentAttributes\" | \"textAttributes\"> & React.RefAttributes<",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeRef",
            "text": "ShapeRef"
          },
          ">> & { readonly _result: React.ForwardRefExoticComponent<Pick<Pick<",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeDrawerProps",
            "text": "ShapeDrawerProps"
          },
          ", \"children\" | \"ref\" | \"shapeType\" | \"shapeAttributes\" | \"shapeContentAttributes\" | \"textAttributes\">, \"children\" | \"shapeType\" | \"shapeAttributes\" | \"shapeContentAttributes\" | \"textAttributes\"> & React.RefAttributes<",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeRef",
            "text": "ShapeRef"
          },
          ">>; }"
        ],
        "path": "src/plugins/expression_shape/public/components/progress/index.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.LazyProgressDrawer.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.LazyShapeDrawer",
        "type": "Function",
        "tags": [],
        "label": "LazyShapeDrawer",
        "description": [],
        "signature": [
          "React.ExoticComponent<Pick<Pick<",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeDrawerProps",
            "text": "ShapeDrawerProps"
          },
          ", \"children\" | \"ref\" | \"shapeType\" | \"shapeAttributes\" | \"shapeContentAttributes\" | \"textAttributes\">, \"children\" | \"shapeType\" | \"shapeAttributes\" | \"shapeContentAttributes\" | \"textAttributes\"> & React.RefAttributes<",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeRef",
            "text": "ShapeRef"
          },
          ">> & { readonly _result: React.ForwardRefExoticComponent<Pick<Pick<",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeDrawerProps",
            "text": "ShapeDrawerProps"
          },
          ", \"children\" | \"ref\" | \"shapeType\" | \"shapeAttributes\" | \"shapeContentAttributes\" | \"textAttributes\">, \"children\" | \"shapeType\" | \"shapeAttributes\" | \"shapeContentAttributes\" | \"textAttributes\"> & React.RefAttributes<",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeRef",
            "text": "ShapeRef"
          },
          ">>; }"
        ],
        "path": "src/plugins/expression_shape/public/components/shape/index.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.LazyShapeDrawer.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.progressRenderer",
        "type": "Function",
        "tags": [],
        "label": "progressRenderer",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionRenderDefinition",
            "text": "ExpressionRenderDefinition"
          },
          "<",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ProgressOutput",
            "text": "ProgressOutput"
          },
          ">"
        ],
        "path": "src/plugins/expression_shape/public/expression_renderers/progress_renderer.tsx",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.shapeRenderer",
        "type": "Function",
        "tags": [],
        "label": "shapeRenderer",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionRenderDefinition",
            "text": "ExpressionRenderDefinition"
          },
          "<",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ShapeRendererConfig",
            "text": "ShapeRendererConfig"
          },
          ">"
        ],
        "path": "src/plugins/expression_shape/public/expression_renderers/shape_renderer.tsx",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.CircleParams",
        "type": "Interface",
        "tags": [],
        "label": "CircleParams",
        "description": [],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.CircleParams.r",
            "type": "CompoundType",
            "tags": [],
            "label": "r",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.CircleParams.cx",
            "type": "CompoundType",
            "tags": [],
            "label": "cx",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.CircleParams.cy",
            "type": "CompoundType",
            "tags": [],
            "label": "cy",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.Dimensions",
        "type": "Interface",
        "tags": [],
        "label": "Dimensions",
        "description": [],
        "path": "src/plugins/expression_shape/public/components/shape/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.Dimensions.width",
            "type": "number",
            "tags": [],
            "label": "width",
            "description": [],
            "path": "src/plugins/expression_shape/public/components/shape/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.Dimensions.height",
            "type": "number",
            "tags": [],
            "label": "height",
            "description": [],
            "path": "src/plugins/expression_shape/public/components/shape/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.NodeDimensions",
        "type": "Interface",
        "tags": [],
        "label": "NodeDimensions",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.NodeDimensions.width",
            "type": "number",
            "tags": [],
            "label": "width",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.NodeDimensions.height",
            "type": "number",
            "tags": [],
            "label": "height",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.Output",
        "type": "Interface",
        "tags": [],
        "label": "Output",
        "description": [],
        "signature": [
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.Output",
            "text": "Output"
          },
          " extends Arguments"
        ],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.Output.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "\"shape\""
            ],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ParentNodeParams",
        "type": "Interface",
        "tags": [],
        "label": "ParentNodeParams",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ParentNodeParams.borderOffset",
            "type": "number",
            "tags": [],
            "label": "borderOffset",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ParentNodeParams.width",
            "type": "number",
            "tags": [],
            "label": "width",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ParentNodeParams.height",
            "type": "number",
            "tags": [],
            "label": "height",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.PathParams",
        "type": "Interface",
        "tags": [],
        "label": "PathParams",
        "description": [],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.PathParams.d",
            "type": "string",
            "tags": [],
            "label": "d",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.PathParams.strokeLinecap",
            "type": "CompoundType",
            "tags": [],
            "label": "strokeLinecap",
            "description": [],
            "signature": [
              "\"inherit\" | \"butt\" | \"round\" | \"square\" | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.PolygonParams",
        "type": "Interface",
        "tags": [],
        "label": "PolygonParams",
        "description": [],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.PolygonParams.points",
            "type": "string",
            "tags": [],
            "label": "points",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.PolygonParams.strokeLinejoin",
            "type": "CompoundType",
            "tags": [],
            "label": "strokeLinejoin",
            "description": [],
            "signature": [
              "\"inherit\" | \"round\" | \"miter\" | \"bevel\" | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ProgressArguments",
        "type": "Interface",
        "tags": [],
        "label": "ProgressArguments",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ProgressArguments.barColor",
            "type": "string",
            "tags": [],
            "label": "barColor",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ProgressArguments.barWeight",
            "type": "number",
            "tags": [],
            "label": "barWeight",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ProgressArguments.font",
            "type": "Object",
            "tags": [],
            "label": "font",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionTypeStyle",
                "text": "ExpressionTypeStyle"
              }
            ],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ProgressArguments.label",
            "type": "CompoundType",
            "tags": [],
            "label": "label",
            "description": [],
            "signature": [
              "string | boolean"
            ],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ProgressArguments.max",
            "type": "number",
            "tags": [],
            "label": "max",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ProgressArguments.shape",
            "type": "Enum",
            "tags": [],
            "label": "shape",
            "description": [],
            "signature": [
              {
                "pluginId": "expressionShape",
                "scope": "common",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-common.Progress",
                "text": "Progress"
              }
            ],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ProgressArguments.valueColor",
            "type": "string",
            "tags": [],
            "label": "valueColor",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ProgressArguments.valueWeight",
            "type": "number",
            "tags": [],
            "label": "valueWeight",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.RectParams",
        "type": "Interface",
        "tags": [],
        "label": "RectParams",
        "description": [],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.RectParams.x",
            "type": "CompoundType",
            "tags": [],
            "label": "x",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.RectParams.y",
            "type": "CompoundType",
            "tags": [],
            "label": "y",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.RectParams.width",
            "type": "CompoundType",
            "tags": [],
            "label": "width",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.RectParams.height",
            "type": "CompoundType",
            "tags": [],
            "label": "height",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ShapeAttributes",
        "type": "Interface",
        "tags": [],
        "label": "ShapeAttributes",
        "description": [],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeAttributes.fill",
            "type": "string",
            "tags": [],
            "label": "fill",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeAttributes.stroke",
            "type": "string",
            "tags": [],
            "label": "stroke",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeAttributes.width",
            "type": "CompoundType",
            "tags": [],
            "label": "width",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeAttributes.height",
            "type": "CompoundType",
            "tags": [],
            "label": "height",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeAttributes.viewBox",
            "type": "Object",
            "tags": [],
            "label": "viewBox",
            "description": [],
            "signature": [
              {
                "pluginId": "expressionShape",
                "scope": "common",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-common.ViewBoxParams",
                "text": "ViewBoxParams"
              },
              " | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeAttributes.overflow",
            "type": "CompoundType",
            "tags": [],
            "label": "overflow",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeAttributes.preserveAspectRatio",
            "type": "string",
            "tags": [],
            "label": "preserveAspectRatio",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ShapeComponentProps",
        "type": "Interface",
        "tags": [],
        "label": "ShapeComponentProps",
        "description": [],
        "signature": [
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeComponentProps",
            "text": "ShapeComponentProps"
          },
          " extends ",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ShapeRendererConfig",
            "text": "ShapeRendererConfig"
          }
        ],
        "path": "src/plugins/expression_shape/public/components/shape/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeComponentProps.onLoaded",
            "type": "Function",
            "tags": [],
            "label": "onLoaded",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/expression_shape/public/components/shape/types.ts",
            "deprecated": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeComponentProps.parentNode",
            "type": "Object",
            "tags": [],
            "label": "parentNode",
            "description": [],
            "signature": [
              "HTMLElement"
            ],
            "path": "src/plugins/expression_shape/public/components/shape/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ShapeContentAttributes",
        "type": "Interface",
        "tags": [],
        "label": "ShapeContentAttributes",
        "description": [],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeContentAttributes.strokeWidth",
            "type": "CompoundType",
            "tags": [],
            "label": "strokeWidth",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeContentAttributes.stroke",
            "type": "string",
            "tags": [],
            "label": "stroke",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeContentAttributes.fill",
            "type": "string",
            "tags": [],
            "label": "fill",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeContentAttributes.vectorEffect",
            "type": "CompoundType",
            "tags": [],
            "label": "vectorEffect",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeContentAttributes.strokeMiterlimit",
            "type": "CompoundType",
            "tags": [],
            "label": "strokeMiterlimit",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ShapeRef",
        "type": "Interface",
        "tags": [],
        "label": "ShapeRef",
        "description": [],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeRef.getData",
            "type": "Function",
            "tags": [],
            "label": "getData",
            "description": [],
            "signature": [
              "() => ",
              {
                "pluginId": "expressionShape",
                "scope": "public",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-public.SvgConfig",
                "text": "SvgConfig"
              }
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ShapeRendererConfig",
        "type": "Interface",
        "tags": [],
        "label": "ShapeRendererConfig",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeRendererConfig.border",
            "type": "string",
            "tags": [],
            "label": "border",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeRendererConfig.borderWidth",
            "type": "number",
            "tags": [],
            "label": "borderWidth",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeRendererConfig.shape",
            "type": "Enum",
            "tags": [],
            "label": "shape",
            "description": [],
            "signature": [
              {
                "pluginId": "expressionShape",
                "scope": "common",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-common.Shape",
                "text": "Shape"
              }
            ],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeRendererConfig.fill",
            "type": "string",
            "tags": [],
            "label": "fill",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ShapeRendererConfig.maintainAspect",
            "type": "boolean",
            "tags": [],
            "label": "maintainAspect",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.SvgConfig",
        "type": "Interface",
        "tags": [],
        "label": "SvgConfig",
        "description": [],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.SvgConfig.shapeType",
            "type": "CompoundType",
            "tags": [],
            "label": "shapeType",
            "description": [],
            "signature": [
              {
                "pluginId": "expressionShape",
                "scope": "public",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-public.SvgElementTypes",
                "text": "SvgElementTypes"
              },
              " | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.SvgConfig.viewBox",
            "type": "Object",
            "tags": [],
            "label": "viewBox",
            "description": [],
            "signature": [
              {
                "pluginId": "expressionShape",
                "scope": "common",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-common.ViewBoxParams",
                "text": "ViewBoxParams"
              }
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.SvgConfig.shapeProps",
            "type": "CompoundType",
            "tags": [],
            "label": "shapeProps",
            "description": [],
            "signature": [
              "(",
              {
                "pluginId": "expressionShape",
                "scope": "public",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-public.ShapeContentAttributes",
                "text": "ShapeContentAttributes"
              },
              " & ",
              {
                "pluginId": "expressionShape",
                "scope": "public",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-public.CircleParams",
                "text": "CircleParams"
              },
              " & Readonly<{}> & Readonly<{ children?: React.ReactNode; }> & { ref?: React.RefObject<any> | undefined; }) | (",
              {
                "pluginId": "expressionShape",
                "scope": "public",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-public.ShapeContentAttributes",
                "text": "ShapeContentAttributes"
              },
              " & ",
              {
                "pluginId": "expressionShape",
                "scope": "public",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-public.RectParams",
                "text": "RectParams"
              },
              " & Readonly<{}> & Readonly<{ children?: React.ReactNode; }> & { ref?: React.RefObject<any> | undefined; }) | (",
              {
                "pluginId": "expressionShape",
                "scope": "public",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-public.ShapeContentAttributes",
                "text": "ShapeContentAttributes"
              },
              " & ",
              {
                "pluginId": "expressionShape",
                "scope": "public",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-public.PathParams",
                "text": "PathParams"
              },
              " & Readonly<{}> & Readonly<{ children?: React.ReactNode; }> & { ref?: React.RefObject<any> | undefined; }) | (",
              {
                "pluginId": "expressionShape",
                "scope": "public",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-public.ShapeContentAttributes",
                "text": "ShapeContentAttributes"
              },
              " & ",
              {
                "pluginId": "expressionShape",
                "scope": "public",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-public.PolygonParams",
                "text": "PolygonParams"
              },
              " & Readonly<{}> & Readonly<{ children?: React.ReactNode; }> & { ref?: React.RefObject<any> | undefined; })"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.SvgConfig.textAttributes",
            "type": "CompoundType",
            "tags": [],
            "label": "textAttributes",
            "description": [],
            "signature": [
              {
                "pluginId": "expressionShape",
                "scope": "public",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-public.SvgTextAttributes",
                "text": "SvgTextAttributes"
              },
              " | undefined"
            ],
            "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ViewBoxParams",
        "type": "Interface",
        "tags": [],
        "label": "ViewBoxParams",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ViewBoxParams.minX",
            "type": "number",
            "tags": [],
            "label": "minX",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ViewBoxParams.minY",
            "type": "number",
            "tags": [],
            "label": "minY",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ViewBoxParams.width",
            "type": "number",
            "tags": [],
            "label": "width",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-public.ViewBoxParams.height",
            "type": "number",
            "tags": [],
            "label": "height",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.Progress",
        "type": "Enum",
        "tags": [],
        "label": "Progress",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.Shape",
        "type": "Enum",
        "tags": [],
        "label": "Shape",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.SvgElementTypes",
        "type": "Enum",
        "tags": [],
        "label": "SvgElementTypes",
        "description": [],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ExpressionProgressFunction",
        "type": "Type",
        "tags": [],
        "label": "ExpressionProgressFunction",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"progress\", number, ",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ProgressArguments",
            "text": "ProgressArguments"
          },
          ", ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionValueBoxed",
            "text": "ExpressionValueBoxed"
          },
          "<\"render\", { as: string; value: ",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ProgressArguments",
            "text": "ProgressArguments"
          },
          "; }>, ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "server",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-server.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">>"
        ],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ExpressionShapeFunction",
        "type": "Type",
        "tags": [],
        "label": "ExpressionShapeFunction",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"shape\", number | null, Arguments, ",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.Output",
            "text": "Output"
          },
          ", ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "server",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-server.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">>"
        ],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.OriginString",
        "type": "Type",
        "tags": [],
        "label": "OriginString",
        "description": [],
        "signature": [
          "\"top\" | \"left\" | \"bottom\" | \"right\""
        ],
        "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ProgressOutput",
        "type": "Type",
        "tags": [],
        "label": "ProgressOutput",
        "description": [],
        "signature": [
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ProgressArguments",
            "text": "ProgressArguments"
          },
          " & { value: number; }"
        ],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ProgressRendererConfig",
        "type": "Type",
        "tags": [],
        "label": "ProgressRendererConfig",
        "description": [],
        "signature": [
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ProgressArguments",
            "text": "ProgressArguments"
          },
          " & { value: number; }"
        ],
        "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.renderers",
        "type": "Array",
        "tags": [],
        "label": "renderers",
        "description": [],
        "signature": [
          "((() => ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionRenderDefinition",
            "text": "ExpressionRenderDefinition"
          },
          "<",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ShapeRendererConfig",
            "text": "ShapeRendererConfig"
          },
          ">) | (() => ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionRenderDefinition",
            "text": "ExpressionRenderDefinition"
          },
          "<",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ProgressOutput",
            "text": "ProgressOutput"
          },
          ">))[]"
        ],
        "path": "src/plugins/expression_shape/public/expression_renderers/index.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ShapeDrawerComponentProps",
        "type": "Type",
        "tags": [],
        "label": "ShapeDrawerComponentProps",
        "description": [],
        "signature": [
          "{ readonly children?: React.ReactNode; ref: (((instance: ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeRef",
            "text": "ShapeRef"
          },
          " | null) => void) & React.RefObject<any>) | (React.RefObject<",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeRef",
            "text": "ShapeRef"
          },
          "> & React.RefObject<any>); shapeType: string; shapeAttributes?: ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeAttributes",
            "text": "ShapeAttributes"
          },
          " | undefined; shapeContentAttributes?: (",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeContentAttributes",
            "text": "ShapeContentAttributes"
          },
          " & ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.CircleParams",
            "text": "CircleParams"
          },
          " & { ref?: React.RefObject<any> | undefined; }) | (",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeContentAttributes",
            "text": "ShapeContentAttributes"
          },
          " & ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.RectParams",
            "text": "RectParams"
          },
          " & { ref?: React.RefObject<any> | undefined; }) | (",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeContentAttributes",
            "text": "ShapeContentAttributes"
          },
          " & ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.PathParams",
            "text": "PathParams"
          },
          " & { ref?: React.RefObject<any> | undefined; }) | (",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeContentAttributes",
            "text": "ShapeContentAttributes"
          },
          " & ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.PolygonParams",
            "text": "PolygonParams"
          },
          " & { ref?: React.RefObject<any> | undefined; }) | undefined; textAttributes?: ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.SvgTextAttributes",
            "text": "SvgTextAttributes"
          },
          " | undefined; }"
        ],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ShapeDrawerProps",
        "type": "Type",
        "tags": [],
        "label": "ShapeDrawerProps",
        "description": [],
        "signature": [
          "{ shapeType: string; getShape: (shapeType: string) => { Component: ({ shapeAttributes, shapeContentAttributes, children, textAttributes, }: ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeProps",
            "text": "ShapeProps"
          },
          ") => JSX.Element; data: ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.SvgConfig",
            "text": "SvgConfig"
          },
          "; } | undefined; ref: React.Ref<",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeRef",
            "text": "ShapeRef"
          },
          ">; } & { shapeAttributes?: ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeAttributes",
            "text": "ShapeAttributes"
          },
          " | undefined; shapeContentAttributes?: (",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeContentAttributes",
            "text": "ShapeContentAttributes"
          },
          " & ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.CircleParams",
            "text": "CircleParams"
          },
          " & { ref?: React.RefObject<any> | undefined; }) | (",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeContentAttributes",
            "text": "ShapeContentAttributes"
          },
          " & ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.RectParams",
            "text": "RectParams"
          },
          " & { ref?: React.RefObject<any> | undefined; }) | (",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeContentAttributes",
            "text": "ShapeContentAttributes"
          },
          " & ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.PathParams",
            "text": "PathParams"
          },
          " & { ref?: React.RefObject<any> | undefined; }) | (",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeContentAttributes",
            "text": "ShapeContentAttributes"
          },
          " & ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.PolygonParams",
            "text": "PolygonParams"
          },
          " & { ref?: React.RefObject<any> | undefined; }) | undefined; textAttributes?: ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.SvgTextAttributes",
            "text": "SvgTextAttributes"
          },
          " | undefined; } & Readonly<{}> & Readonly<{ children?: React.ReactNode; }> & { ref?: React.RefObject<any> | undefined; }"
        ],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ShapeProps",
        "type": "Type",
        "tags": [],
        "label": "ShapeProps",
        "description": [],
        "signature": [
          "{ shapeAttributes?: ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeAttributes",
            "text": "ShapeAttributes"
          },
          " | undefined; shapeContentAttributes?: (",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeContentAttributes",
            "text": "ShapeContentAttributes"
          },
          " & ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.CircleParams",
            "text": "CircleParams"
          },
          " & { ref?: React.RefObject<any> | undefined; }) | (",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeContentAttributes",
            "text": "ShapeContentAttributes"
          },
          " & ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.RectParams",
            "text": "RectParams"
          },
          " & { ref?: React.RefObject<any> | undefined; }) | (",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeContentAttributes",
            "text": "ShapeContentAttributes"
          },
          " & ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.PathParams",
            "text": "PathParams"
          },
          " & { ref?: React.RefObject<any> | undefined; }) | (",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeContentAttributes",
            "text": "ShapeContentAttributes"
          },
          " & ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.PolygonParams",
            "text": "PolygonParams"
          },
          " & { ref?: React.RefObject<any> | undefined; }) | undefined; textAttributes?: ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.SvgTextAttributes",
            "text": "SvgTextAttributes"
          },
          " | undefined; } & Readonly<{}> & Readonly<{ children?: React.ReactNode; }> & { ref?: React.RefObject<any> | undefined; }"
        ],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.ShapeType",
        "type": "Type",
        "tags": [],
        "label": "ShapeType",
        "description": [],
        "signature": [
          "{ Component: ({ shapeAttributes, shapeContentAttributes, children, textAttributes, }: ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.ShapeProps",
            "text": "ShapeProps"
          },
          ") => JSX.Element; data: ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.SvgConfig",
            "text": "SvgConfig"
          },
          "; }"
        ],
        "path": "src/plugins/expression_shape/public/components/reusable/shape_factory.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.SpecificShapeContentAttributes",
        "type": "Type",
        "tags": [],
        "label": "SpecificShapeContentAttributes",
        "description": [],
        "signature": [
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.CircleParams",
            "text": "CircleParams"
          },
          " | ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.RectParams",
            "text": "RectParams"
          },
          " | ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.PathParams",
            "text": "PathParams"
          },
          " | ",
          {
            "pluginId": "expressionShape",
            "scope": "public",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-public.PolygonParams",
            "text": "PolygonParams"
          }
        ],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-public.SvgTextAttributes",
        "type": "Type",
        "tags": [],
        "label": "SvgTextAttributes",
        "description": [],
        "signature": [
          "Partial<Element> & { x?: string | number | undefined; y?: string | number | undefined; textAnchor?: string | undefined; dominantBaseline?: string | number | undefined; dx?: string | number | undefined; dy?: string | number | undefined; } & { style?: React.CSSProperties | undefined; } & { ref?: React.RefObject<SVGTextElement> | undefined; }"
        ],
        "path": "src/plugins/expression_shape/public/components/reusable/types.tsx",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "start": {
      "parentPluginId": "expressionShape",
      "id": "def-public.ExpressionShapePluginStart",
      "type": "Type",
      "tags": [],
      "label": "ExpressionShapePluginStart",
      "description": [],
      "signature": [
        "void"
      ],
      "path": "src/plugins/expression_shape/public/plugin.ts",
      "deprecated": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": [],
    "start": {
      "parentPluginId": "expressionShape",
      "id": "def-server.ExpressionShapePluginStart",
      "type": "Type",
      "tags": [],
      "label": "ExpressionShapePluginStart",
      "description": [],
      "signature": [
        "void"
      ],
      "path": "src/plugins/expression_shape/server/plugin.ts",
      "deprecated": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.getAvailableProgressShapes",
        "type": "Function",
        "tags": [],
        "label": "getAvailableProgressShapes",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.Progress",
            "text": "Progress"
          },
          "[]"
        ],
        "path": "src/plugins/expression_shape/common/lib/available_shapes.ts",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.getAvailableShapes",
        "type": "Function",
        "tags": [],
        "label": "getAvailableShapes",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.Shape",
            "text": "Shape"
          },
          "[]"
        ],
        "path": "src/plugins/expression_shape/common/lib/available_shapes.ts",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.NodeDimensions",
        "type": "Interface",
        "tags": [],
        "label": "NodeDimensions",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.NodeDimensions.width",
            "type": "number",
            "tags": [],
            "label": "width",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.NodeDimensions.height",
            "type": "number",
            "tags": [],
            "label": "height",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.Output",
        "type": "Interface",
        "tags": [],
        "label": "Output",
        "description": [],
        "signature": [
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.Output",
            "text": "Output"
          },
          " extends Arguments"
        ],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.Output.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "\"shape\""
            ],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.ParentNodeParams",
        "type": "Interface",
        "tags": [],
        "label": "ParentNodeParams",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ParentNodeParams.borderOffset",
            "type": "number",
            "tags": [],
            "label": "borderOffset",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ParentNodeParams.width",
            "type": "number",
            "tags": [],
            "label": "width",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ParentNodeParams.height",
            "type": "number",
            "tags": [],
            "label": "height",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.ProgressArguments",
        "type": "Interface",
        "tags": [],
        "label": "ProgressArguments",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ProgressArguments.barColor",
            "type": "string",
            "tags": [],
            "label": "barColor",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ProgressArguments.barWeight",
            "type": "number",
            "tags": [],
            "label": "barWeight",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ProgressArguments.font",
            "type": "Object",
            "tags": [],
            "label": "font",
            "description": [],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionTypeStyle",
                "text": "ExpressionTypeStyle"
              }
            ],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ProgressArguments.label",
            "type": "CompoundType",
            "tags": [],
            "label": "label",
            "description": [],
            "signature": [
              "string | boolean"
            ],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ProgressArguments.max",
            "type": "number",
            "tags": [],
            "label": "max",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ProgressArguments.shape",
            "type": "Enum",
            "tags": [],
            "label": "shape",
            "description": [],
            "signature": [
              {
                "pluginId": "expressionShape",
                "scope": "common",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-common.Progress",
                "text": "Progress"
              }
            ],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ProgressArguments.valueColor",
            "type": "string",
            "tags": [],
            "label": "valueColor",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ProgressArguments.valueWeight",
            "type": "number",
            "tags": [],
            "label": "valueWeight",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.ShapeRendererConfig",
        "type": "Interface",
        "tags": [],
        "label": "ShapeRendererConfig",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ShapeRendererConfig.border",
            "type": "string",
            "tags": [],
            "label": "border",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ShapeRendererConfig.borderWidth",
            "type": "number",
            "tags": [],
            "label": "borderWidth",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ShapeRendererConfig.shape",
            "type": "Enum",
            "tags": [],
            "label": "shape",
            "description": [],
            "signature": [
              {
                "pluginId": "expressionShape",
                "scope": "common",
                "docId": "kibExpressionShapePluginApi",
                "section": "def-common.Shape",
                "text": "Shape"
              }
            ],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ShapeRendererConfig.fill",
            "type": "string",
            "tags": [],
            "label": "fill",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ShapeRendererConfig.maintainAspect",
            "type": "boolean",
            "tags": [],
            "label": "maintainAspect",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.ViewBoxParams",
        "type": "Interface",
        "tags": [],
        "label": "ViewBoxParams",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ViewBoxParams.minX",
            "type": "number",
            "tags": [],
            "label": "minX",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ViewBoxParams.minY",
            "type": "number",
            "tags": [],
            "label": "minY",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ViewBoxParams.width",
            "type": "number",
            "tags": [],
            "label": "width",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "expressionShape",
            "id": "def-common.ViewBoxParams.height",
            "type": "number",
            "tags": [],
            "label": "height",
            "description": [],
            "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.Progress",
        "type": "Enum",
        "tags": [],
        "label": "Progress",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.Shape",
        "type": "Enum",
        "tags": [],
        "label": "Shape",
        "description": [],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.BOOLEAN_FALSE",
        "type": "string",
        "tags": [],
        "label": "BOOLEAN_FALSE",
        "description": [],
        "signature": [
          "\"`false`\""
        ],
        "path": "src/plugins/expression_shape/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.BOOLEAN_TRUE",
        "type": "string",
        "tags": [],
        "label": "BOOLEAN_TRUE",
        "description": [],
        "signature": [
          "\"`true`\""
        ],
        "path": "src/plugins/expression_shape/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.CSS",
        "type": "string",
        "tags": [],
        "label": "CSS",
        "description": [],
        "signature": [
          "\"CSS\""
        ],
        "path": "src/plugins/expression_shape/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.ExpressionProgressFunction",
        "type": "Type",
        "tags": [],
        "label": "ExpressionProgressFunction",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"progress\", number, ",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ProgressArguments",
            "text": "ProgressArguments"
          },
          ", ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionValueBoxed",
            "text": "ExpressionValueBoxed"
          },
          "<\"render\", { as: string; value: ",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ProgressArguments",
            "text": "ProgressArguments"
          },
          "; }>, ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "server",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-server.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">>"
        ],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.ExpressionShapeFunction",
        "type": "Type",
        "tags": [],
        "label": "ExpressionShapeFunction",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"shape\", number | null, Arguments, ",
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.Output",
            "text": "Output"
          },
          ", ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "server",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-server.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">>"
        ],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.FONT_FAMILY",
        "type": "string",
        "tags": [],
        "label": "FONT_FAMILY",
        "description": [],
        "signature": [
          "\"`font-family`\""
        ],
        "path": "src/plugins/expression_shape/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.FONT_WEIGHT",
        "type": "string",
        "tags": [],
        "label": "FONT_WEIGHT",
        "description": [],
        "signature": [
          "\"`font-weight`\""
        ],
        "path": "src/plugins/expression_shape/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.OriginString",
        "type": "Type",
        "tags": [],
        "label": "OriginString",
        "description": [],
        "signature": [
          "\"top\" | \"left\" | \"bottom\" | \"right\""
        ],
        "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.PLUGIN_ID",
        "type": "string",
        "tags": [],
        "label": "PLUGIN_ID",
        "description": [],
        "signature": [
          "\"expressionShape\""
        ],
        "path": "src/plugins/expression_shape/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.PLUGIN_NAME",
        "type": "string",
        "tags": [],
        "label": "PLUGIN_NAME",
        "description": [],
        "signature": [
          "\"expressionShape\""
        ],
        "path": "src/plugins/expression_shape/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.ProgressOutput",
        "type": "Type",
        "tags": [],
        "label": "ProgressOutput",
        "description": [],
        "signature": [
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ProgressArguments",
            "text": "ProgressArguments"
          },
          " & { value: number; }"
        ],
        "path": "src/plugins/expression_shape/common/types/expression_functions.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.ProgressRendererConfig",
        "type": "Type",
        "tags": [],
        "label": "ProgressRendererConfig",
        "description": [],
        "signature": [
          {
            "pluginId": "expressionShape",
            "scope": "common",
            "docId": "kibExpressionShapePluginApi",
            "section": "def-common.ProgressArguments",
            "text": "ProgressArguments"
          },
          " & { value: number; }"
        ],
        "path": "src/plugins/expression_shape/common/types/expression_renderers.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "expressionShape",
        "id": "def-common.SVG",
        "type": "string",
        "tags": [],
        "label": "SVG",
        "description": [],
        "signature": [
          "\"SVG\""
        ],
        "path": "src/plugins/expression_shape/common/constants.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}