{
  "id": "share",
  "client": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "share",
        "id": "def-public.downloadFileAs",
        "type": "Function",
        "tags": [],
        "label": "downloadFileAs",
        "description": [
          "\nConvenient method to use for a single file download\n**Note**: for multiple files use the downloadMultipleAs method, do not iterate with this method here"
        ],
        "signature": [
          "(filename: string, payload: ",
          {
            "pluginId": "share",
            "scope": "public",
            "docId": "kibSharePluginApi",
            "section": "def-public.DownloadableContent",
            "text": "DownloadableContent"
          },
          ") => Promise<void>"
        ],
        "path": "src/plugins/share/public/lib/download_as.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-public.downloadFileAs.$1",
            "type": "string",
            "tags": [],
            "label": "filename",
            "description": [
              "full name of the file"
            ],
            "signature": [
              "string"
            ],
            "path": "src/plugins/share/public/lib/download_as.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "share",
            "id": "def-public.downloadFileAs.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "payload",
            "description": [
              "either a Blob content, or a Record with a stringified content and type"
            ],
            "signature": [
              {
                "pluginId": "share",
                "scope": "public",
                "docId": "kibSharePluginApi",
                "section": "def-public.DownloadableContent",
                "text": "DownloadableContent"
              }
            ],
            "path": "src/plugins/share/public/lib/download_as.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "a Promise that resolves when the download has been correctly started"
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.downloadMultipleAs",
        "type": "Function",
        "tags": [],
        "label": "downloadMultipleAs",
        "description": [
          "\nMultiple files download method"
        ],
        "signature": [
          "(files: Record<string, ",
          {
            "pluginId": "share",
            "scope": "public",
            "docId": "kibSharePluginApi",
            "section": "def-public.DownloadableContent",
            "text": "DownloadableContent"
          },
          ">) => Promise<void>"
        ],
        "path": "src/plugins/share/public/lib/download_as.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-public.downloadMultipleAs.$1",
            "type": "Object",
            "tags": [],
            "label": "files",
            "description": [
              "a Record containing one entry per file: the key entry should be the filename\nand the value either a Blob content, or a Record with a stringified content and type"
            ],
            "signature": [
              "Record<string, ",
              {
                "pluginId": "share",
                "scope": "public",
                "docId": "kibSharePluginApi",
                "section": "def-public.DownloadableContent",
                "text": "DownloadableContent"
              },
              ">"
            ],
            "path": "src/plugins/share/public/lib/download_as.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "a Promise that resolves when all the downloads have been correctly started"
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.useLocatorUrl",
        "type": "Function",
        "tags": [],
        "label": "useLocatorUrl",
        "description": [],
        "signature": [
          "<P extends ",
          "SerializableRecord",
          ">(locator: ",
          {
            "pluginId": "share",
            "scope": "common",
            "docId": "kibSharePluginApi",
            "section": "def-common.LocatorPublic",
            "text": "LocatorPublic"
          },
          "<P> | null | undefined, params: P, getUrlParams?: ",
          "LocatorGetUrlParams",
          " | undefined, deps?: React.DependencyList) => string"
        ],
        "path": "src/plugins/share/common/url_service/locators/use_locator_url.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-public.useLocatorUrl.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "locator",
            "description": [],
            "signature": [
              {
                "pluginId": "share",
                "scope": "common",
                "docId": "kibSharePluginApi",
                "section": "def-common.LocatorPublic",
                "text": "LocatorPublic"
              },
              "<P> | null | undefined"
            ],
            "path": "src/plugins/share/common/url_service/locators/use_locator_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.useLocatorUrl.$2",
            "type": "Uncategorized",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "src/plugins/share/common/url_service/locators/use_locator_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "share",
            "id": "def-public.useLocatorUrl.$3",
            "type": "Object",
            "tags": [],
            "label": "getUrlParams",
            "description": [],
            "signature": [
              "LocatorGetUrlParams",
              " | undefined"
            ],
            "path": "src/plugins/share/common/url_service/locators/use_locator_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.useLocatorUrl.$4",
            "type": "Object",
            "tags": [],
            "label": "deps",
            "description": [],
            "signature": [
              "React.DependencyList"
            ],
            "path": "src/plugins/share/common/url_service/locators/use_locator_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "share",
        "id": "def-public.KibanaLocation",
        "type": "Interface",
        "tags": [],
        "label": "KibanaLocation",
        "description": [
          "\nThis interface represents a location in Kibana to which one can navigate\nusing the `core.application.navigateToApp()` method."
        ],
        "signature": [
          "KibanaLocation",
          "<S>"
        ],
        "path": "src/plugins/share/common/url_service/locators/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-public.KibanaLocation.app",
            "type": "string",
            "tags": [],
            "label": "app",
            "description": [
              "\nKibana application ID."
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.KibanaLocation.path",
            "type": "string",
            "tags": [],
            "label": "path",
            "description": [
              "\nA relative URL path within a Kibana application."
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.KibanaLocation.state",
            "type": "Uncategorized",
            "tags": [],
            "label": "state",
            "description": [
              "\nA serializable location state object, which the app can use to determine\nwhat should be displayed on the screen."
            ],
            "signature": [
              "S"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.LocatorDefinition",
        "type": "Interface",
        "tags": [],
        "label": "LocatorDefinition",
        "description": [
          "\nA convenience interface used to define and register a locator."
        ],
        "signature": [
          {
            "pluginId": "share",
            "scope": "common",
            "docId": "kibSharePluginApi",
            "section": "def-common.LocatorDefinition",
            "text": "LocatorDefinition"
          },
          "<P> extends Partial<",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.PersistableState",
            "text": "PersistableState"
          },
          "<P>>"
        ],
        "path": "src/plugins/share/common/url_service/locators/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-public.LocatorDefinition.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nUnique ID of the locator. Should be constant and unique across Kibana."
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.LocatorDefinition.getLocation",
            "type": "Function",
            "tags": [],
            "label": "getLocation",
            "description": [
              "\nReturns a deep link, including location state, which can be used for\nnavigation in Kibana.\n"
            ],
            "signature": [
              "(params: P) => Promise<",
              "KibanaLocation",
              "<object>>"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorDefinition.getLocation.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [
                  "Parameters from which to generate a Kibana location."
                ],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.LocatorPublic",
        "type": "Interface",
        "tags": [],
        "label": "LocatorPublic",
        "description": [
          "\nPublic interface of a registered locator."
        ],
        "signature": [
          {
            "pluginId": "share",
            "scope": "common",
            "docId": "kibSharePluginApi",
            "section": "def-common.LocatorPublic",
            "text": "LocatorPublic"
          },
          "<P> extends ",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.PersistableState",
            "text": "PersistableState"
          },
          "<P>"
        ],
        "path": "src/plugins/share/common/url_service/locators/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-public.LocatorPublic.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.LocatorPublic.getLocation",
            "type": "Function",
            "tags": [],
            "label": "getLocation",
            "description": [
              "\nReturns a reference to a Kibana client-side location.\n"
            ],
            "signature": [
              "(params: P) => Promise<",
              "KibanaLocation",
              "<object>>"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorPublic.getLocation.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [
                  "URL locator parameters."
                ],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "share",
            "id": "def-public.LocatorPublic.getUrl",
            "type": "Function",
            "tags": [],
            "label": "getUrl",
            "description": [
              "\nReturns a URL as a string.\n\nYou may want to use `getRedirectUrl` instead. `getRedirectUrl` will\npreserve the location state, whereas the `getUrl` just returns the URL\nwithout the location state. Use this method if you know you don't need\nremember the location state and version of the URL locator.\n"
            ],
            "signature": [
              "(params: P, getUrlParams?: ",
              "LocatorGetUrlParams",
              " | undefined) => Promise<string>"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorPublic.getUrl.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [
                  "URL locator parameters."
                ],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorPublic.getUrl.$2",
                "type": "Object",
                "tags": [],
                "label": "getUrlParams",
                "description": [
                  "URL construction parameters."
                ],
                "signature": [
                  "LocatorGetUrlParams",
                  " | undefined"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "share",
            "id": "def-public.LocatorPublic.getRedirectUrl",
            "type": "Function",
            "tags": [],
            "label": "getRedirectUrl",
            "description": [
              "\nReturns a URL to the redirect endpoint, which will redirect the user to\nthe final destination.\n"
            ],
            "signature": [
              "(params: P, options?: ",
              "FormatSearchParamsOptions",
              " | undefined) => string"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorPublic.getRedirectUrl.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [
                  "URL locator parameters."
                ],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorPublic.getRedirectUrl.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "URL serialization options."
                ],
                "signature": [
                  "FormatSearchParamsOptions",
                  " | undefined"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "share",
            "id": "def-public.LocatorPublic.navigate",
            "type": "Function",
            "tags": [],
            "label": "navigate",
            "description": [
              "\nNavigate using the `core.application.navigateToApp()` method to a Kibana\nlocation generated by this locator. This method is available only on the\nbrowser.\n"
            ],
            "signature": [
              "(params: P, navigationParams?: ",
              "LocatorNavigationParams",
              " | undefined) => Promise<void>"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorPublic.navigate.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [
                  "URL locator parameters."
                ],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorPublic.navigate.$2",
                "type": "Object",
                "tags": [],
                "label": "navigationParams",
                "description": [
                  "Navigation parameters."
                ],
                "signature": [
                  "LocatorNavigationParams",
                  " | undefined"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "share",
            "id": "def-public.LocatorPublic.navigateSync",
            "type": "Function",
            "tags": [],
            "label": "navigateSync",
            "description": [
              "\nSynchronous fire-and-forget navigation method. Use it when you want to\nnavigate without waiting for the navigation to complete and you don't\ncare to process any async promise errors.\n"
            ],
            "signature": [
              "(params: P, navigationParams?: ",
              "LocatorNavigationParams",
              " | undefined) => void"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorPublic.navigateSync.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [
                  "URL locator parameters."
                ],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorPublic.navigateSync.$2",
                "type": "Object",
                "tags": [],
                "label": "navigationParams",
                "description": [
                  "Navigation parameters."
                ],
                "signature": [
                  "LocatorNavigationParams",
                  " | undefined"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "share",
            "id": "def-public.LocatorPublic.useUrl",
            "type": "Function",
            "tags": [],
            "label": "useUrl",
            "description": [
              "\nReact hook which returns a URL string given locator parameters. Returns\nempty string if URL is being loaded or an error happened."
            ],
            "signature": [
              "(params: P, getUrlParams?: ",
              "LocatorGetUrlParams",
              " | undefined, deps?: React.DependencyList | undefined) => string"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorPublic.useUrl.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorPublic.useUrl.$2",
                "type": "Object",
                "tags": [],
                "label": "getUrlParams",
                "description": [],
                "signature": [
                  "LocatorGetUrlParams",
                  " | undefined"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "share",
                "id": "def-public.LocatorPublic.useUrl.$3",
                "type": "Object",
                "tags": [],
                "label": "deps",
                "description": [],
                "signature": [
                  "React.DependencyList | undefined"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.RedirectOptions",
        "type": "Interface",
        "tags": [],
        "label": "RedirectOptions",
        "description": [],
        "signature": [
          "RedirectOptions",
          "<P>"
        ],
        "path": "src/plugins/share/common/url_service/locators/redirect/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-public.RedirectOptions.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "Locator ID."
            ],
            "path": "src/plugins/share/common/url_service/locators/redirect/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.RedirectOptions.version",
            "type": "string",
            "tags": [],
            "label": "version",
            "description": [
              "Kibana version when locator params were generated."
            ],
            "path": "src/plugins/share/common/url_service/locators/redirect/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.RedirectOptions.params",
            "type": "Uncategorized",
            "tags": [],
            "label": "params",
            "description": [
              "Locator params."
            ],
            "signature": [
              "P"
            ],
            "path": "src/plugins/share/common/url_service/locators/redirect/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.ShareContext",
        "type": "Interface",
        "tags": [],
        "label": "ShareContext",
        "description": [],
        "path": "src/plugins/share/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-public.ShareContext.objectType",
            "type": "string",
            "tags": [],
            "label": "objectType",
            "description": [],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShareContext.objectId",
            "type": "string",
            "tags": [],
            "label": "objectId",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShareContext.shareableUrl",
            "type": "string",
            "tags": [],
            "label": "shareableUrl",
            "description": [
              "\nCurrent url for sharing. This can be set in cases where `window.location.href`\ndoes not contain a shareable URL (e.g. if using session storage to store the current\napp state is enabled). In these cases the property should contain the URL in a\nformat which makes it possible to use it without having access to any other state\nlike the current session.\n\nIf not set it will default to `window.location.href`"
            ],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShareContext.sharingData",
            "type": "Object",
            "tags": [],
            "label": "sharingData",
            "description": [],
            "signature": [
              "{ [key: string]: unknown; }"
            ],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShareContext.isDirty",
            "type": "boolean",
            "tags": [],
            "label": "isDirty",
            "description": [],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShareContext.onClose",
            "type": "Function",
            "tags": [],
            "label": "onClose",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShareContext.showPublicUrlSwitch",
            "type": "Function",
            "tags": [],
            "label": "showPublicUrlSwitch",
            "description": [],
            "signature": [
              "((anonymousUserCapabilities: ",
              "Capabilities",
              ") => boolean) | undefined"
            ],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-public.ShareContext.showPublicUrlSwitch.$1",
                "type": "Object",
                "tags": [],
                "label": "anonymousUserCapabilities",
                "description": [],
                "signature": [
                  "Capabilities"
                ],
                "path": "src/plugins/share/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.ShareContextMenuPanelItem",
        "type": "Interface",
        "tags": [],
        "label": "ShareContextMenuPanelItem",
        "description": [],
        "signature": [
          {
            "pluginId": "share",
            "scope": "public",
            "docId": "kibSharePluginApi",
            "section": "def-public.ShareContextMenuPanelItem",
            "text": "ShareContextMenuPanelItem"
          },
          " extends Omit<",
          "EuiContextMenuPanelItemDescriptorEntry",
          ", \"name\">"
        ],
        "path": "src/plugins/share/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-public.ShareContextMenuPanelItem.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShareContextMenuPanelItem.sortOrder",
            "type": "number",
            "tags": [],
            "label": "sortOrder",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.ShareMenuItem",
        "type": "Interface",
        "tags": [],
        "label": "ShareMenuItem",
        "description": [],
        "path": "src/plugins/share/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-public.ShareMenuItem.shareMenuItem",
            "type": "Object",
            "tags": [],
            "label": "shareMenuItem",
            "description": [],
            "signature": [
              {
                "pluginId": "share",
                "scope": "public",
                "docId": "kibSharePluginApi",
                "section": "def-public.ShareContextMenuPanelItem",
                "text": "ShareContextMenuPanelItem"
              }
            ],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShareMenuItem.panel",
            "type": "Object",
            "tags": [],
            "label": "panel",
            "description": [],
            "signature": [
              "EuiContextMenuPanelDescriptor"
            ],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.ShareMenuProvider",
        "type": "Interface",
        "tags": [],
        "label": "ShareMenuProvider",
        "description": [],
        "path": "src/plugins/share/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-public.ShareMenuProvider.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShareMenuProvider.getShareMenuItems",
            "type": "Function",
            "tags": [],
            "label": "getShareMenuItems",
            "description": [],
            "signature": [
              "(context: ",
              {
                "pluginId": "share",
                "scope": "public",
                "docId": "kibSharePluginApi",
                "section": "def-public.ShareContext",
                "text": "ShareContext"
              },
              ") => ",
              {
                "pluginId": "share",
                "scope": "public",
                "docId": "kibSharePluginApi",
                "section": "def-public.ShareMenuItem",
                "text": "ShareMenuItem"
              },
              "[]"
            ],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-public.ShareMenuProvider.getShareMenuItems.$1",
                "type": "Object",
                "tags": [],
                "label": "context",
                "description": [],
                "signature": [
                  {
                    "pluginId": "share",
                    "scope": "public",
                    "docId": "kibSharePluginApi",
                    "section": "def-public.ShareContext",
                    "text": "ShareContext"
                  }
                ],
                "path": "src/plugins/share/public/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.ShowShareMenuOptions",
        "type": "Interface",
        "tags": [],
        "label": "ShowShareMenuOptions",
        "description": [],
        "signature": [
          {
            "pluginId": "share",
            "scope": "public",
            "docId": "kibSharePluginApi",
            "section": "def-public.ShowShareMenuOptions",
            "text": "ShowShareMenuOptions"
          },
          " extends Omit<",
          {
            "pluginId": "share",
            "scope": "public",
            "docId": "kibSharePluginApi",
            "section": "def-public.ShareContext",
            "text": "ShareContext"
          },
          ", \"onClose\">"
        ],
        "path": "src/plugins/share/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-public.ShowShareMenuOptions.anchorElement",
            "type": "Object",
            "tags": [],
            "label": "anchorElement",
            "description": [],
            "signature": [
              "HTMLElement"
            ],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShowShareMenuOptions.allowEmbed",
            "type": "boolean",
            "tags": [],
            "label": "allowEmbed",
            "description": [],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShowShareMenuOptions.allowShortUrl",
            "type": "boolean",
            "tags": [],
            "label": "allowShortUrl",
            "description": [],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShowShareMenuOptions.embedUrlParamExtensions",
            "type": "Array",
            "tags": [],
            "label": "embedUrlParamExtensions",
            "description": [],
            "signature": [
              "UrlParamExtension",
              "[] | undefined"
            ],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-public.ShowShareMenuOptions.onClose",
            "type": "Function",
            "tags": [],
            "label": "onClose",
            "description": [],
            "signature": [
              "(() => void) | undefined"
            ],
            "path": "src/plugins/share/public/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "share",
        "id": "def-public.BrowserUrlService",
        "type": "Type",
        "tags": [],
        "label": "BrowserUrlService",
        "description": [],
        "signature": [
          "UrlService",
          "<null, ",
          "BrowserShortUrlClient",
          ">"
        ],
        "path": "src/plugins/share/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.CSV_QUOTE_VALUES_SETTING",
        "type": "string",
        "tags": [],
        "label": "CSV_QUOTE_VALUES_SETTING",
        "description": [],
        "signature": [
          "\"csv:quoteValues\""
        ],
        "path": "src/plugins/share/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.CSV_SEPARATOR_SETTING",
        "type": "string",
        "tags": [],
        "label": "CSV_SEPARATOR_SETTING",
        "description": [],
        "signature": [
          "\"csv:separator\""
        ],
        "path": "src/plugins/share/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-public.DownloadableContent",
        "type": "Type",
        "tags": [],
        "label": "DownloadableContent",
        "description": [],
        "signature": [
          "Blob | { content: string; type: string; }"
        ],
        "path": "src/plugins/share/public/lib/download_as.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "share",
      "id": "def-public.SharePluginSetup",
      "type": "Type",
      "tags": [],
      "label": "SharePluginSetup",
      "description": [],
      "signature": [
        "{ register: (shareMenuProvider: ",
        {
          "pluginId": "share",
          "scope": "public",
          "docId": "kibSharePluginApi",
          "section": "def-public.ShareMenuProvider",
          "text": "ShareMenuProvider"
        },
        ") => void; } & { url: ",
        {
          "pluginId": "share",
          "scope": "public",
          "docId": "kibSharePluginApi",
          "section": "def-public.BrowserUrlService",
          "text": "BrowserUrlService"
        },
        "; navigate(options: ",
        "RedirectOptions",
        "<",
        "SerializableRecord",
        ">): void; setAnonymousAccessServiceProvider: (provider: () => ",
        {
          "pluginId": "share",
          "scope": "common",
          "docId": "kibSharePluginApi",
          "section": "def-common.AnonymousAccessServiceContract",
          "text": "AnonymousAccessServiceContract"
        },
        ") => void; }"
      ],
      "path": "src/plugins/share/public/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "share",
      "id": "def-public.SharePluginStart",
      "type": "Type",
      "tags": [],
      "label": "SharePluginStart",
      "description": [],
      "signature": [
        "{ toggleShareContextMenu: (options: ",
        {
          "pluginId": "share",
          "scope": "public",
          "docId": "kibSharePluginApi",
          "section": "def-public.ShowShareMenuOptions",
          "text": "ShowShareMenuOptions"
        },
        ") => void; } & { url: ",
        {
          "pluginId": "share",
          "scope": "public",
          "docId": "kibSharePluginApi",
          "section": "def-public.BrowserUrlService",
          "text": "BrowserUrlService"
        },
        "; navigate(options: ",
        "RedirectOptions",
        "<",
        "SerializableRecord",
        ">): void; }"
      ],
      "path": "src/plugins/share/public/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "share",
        "id": "def-server.CSV_QUOTE_VALUES_SETTING",
        "type": "string",
        "tags": [],
        "label": "CSV_QUOTE_VALUES_SETTING",
        "description": [],
        "signature": [
          "\"csv:quoteValues\""
        ],
        "path": "src/plugins/share/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-server.CSV_SEPARATOR_SETTING",
        "type": "string",
        "tags": [],
        "label": "CSV_SEPARATOR_SETTING",
        "description": [],
        "signature": [
          "\"csv:separator\""
        ],
        "path": "src/plugins/share/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "share",
      "id": "def-server.SharePluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "SharePluginSetup",
      "description": [],
      "path": "src/plugins/share/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "share",
          "id": "def-server.SharePluginSetup.url",
          "type": "Object",
          "tags": [],
          "label": "url",
          "description": [],
          "signature": [
            "UrlService",
            "<",
            "ServerShortUrlClientFactoryCreateParams",
            ", ",
            "IShortUrlClient",
            ">"
          ],
          "path": "src/plugins/share/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "share",
      "id": "def-server.SharePluginStart",
      "type": "Interface",
      "tags": [],
      "label": "SharePluginStart",
      "description": [],
      "path": "src/plugins/share/server/plugin.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "share",
          "id": "def-server.SharePluginStart.url",
          "type": "Object",
          "tags": [],
          "label": "url",
          "description": [],
          "signature": [
            "UrlService",
            "<",
            "ServerShortUrlClientFactoryCreateParams",
            ", ",
            "IShortUrlClient",
            ">"
          ],
          "path": "src/plugins/share/server/plugin.ts",
          "deprecated": false,
          "trackAdoption": false
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "share",
        "id": "def-common.useLocatorUrl",
        "type": "Function",
        "tags": [],
        "label": "useLocatorUrl",
        "description": [],
        "signature": [
          "<P extends ",
          "SerializableRecord",
          ">(locator: ",
          {
            "pluginId": "share",
            "scope": "common",
            "docId": "kibSharePluginApi",
            "section": "def-common.LocatorPublic",
            "text": "LocatorPublic"
          },
          "<P> | null | undefined, params: P, getUrlParams?: ",
          "LocatorGetUrlParams",
          " | undefined, deps?: React.DependencyList) => string"
        ],
        "path": "src/plugins/share/common/url_service/locators/use_locator_url.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-common.useLocatorUrl.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "locator",
            "description": [],
            "signature": [
              {
                "pluginId": "share",
                "scope": "common",
                "docId": "kibSharePluginApi",
                "section": "def-common.LocatorPublic",
                "text": "LocatorPublic"
              },
              "<P> | null | undefined"
            ],
            "path": "src/plugins/share/common/url_service/locators/use_locator_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "share",
            "id": "def-common.useLocatorUrl.$2",
            "type": "Uncategorized",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "src/plugins/share/common/url_service/locators/use_locator_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "share",
            "id": "def-common.useLocatorUrl.$3",
            "type": "Object",
            "tags": [],
            "label": "getUrlParams",
            "description": [],
            "signature": [
              "LocatorGetUrlParams",
              " | undefined"
            ],
            "path": "src/plugins/share/common/url_service/locators/use_locator_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": false
          },
          {
            "parentPluginId": "share",
            "id": "def-common.useLocatorUrl.$4",
            "type": "Object",
            "tags": [],
            "label": "deps",
            "description": [],
            "signature": [
              "React.DependencyList"
            ],
            "path": "src/plugins/share/common/url_service/locators/use_locator_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "share",
        "id": "def-common.AnonymousAccessServiceContract",
        "type": "Interface",
        "tags": [],
        "label": "AnonymousAccessServiceContract",
        "description": [
          "\nThe contract that is used to check anonymous access for the purposes of sharing public links. The implementation is intended to be\nprovided by the security plugin."
        ],
        "path": "src/plugins/share/common/anonymous_access/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-common.AnonymousAccessServiceContract.getState",
            "type": "Function",
            "tags": [],
            "label": "getState",
            "description": [
              "\nThis function returns the current state of anonymous access."
            ],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "share",
                "scope": "common",
                "docId": "kibSharePluginApi",
                "section": "def-common.AnonymousAccessState",
                "text": "AnonymousAccessState"
              },
              ">"
            ],
            "path": "src/plugins/share/common/anonymous_access/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "share",
            "id": "def-common.AnonymousAccessServiceContract.getCapabilities",
            "type": "Function",
            "tags": [],
            "label": "getCapabilities",
            "description": [
              "\nThis function returns the capabilities of the anonymous access user."
            ],
            "signature": [
              "() => Promise<",
              "Capabilities",
              ">"
            ],
            "path": "src/plugins/share/common/anonymous_access/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-common.AnonymousAccessState",
        "type": "Interface",
        "tags": [],
        "label": "AnonymousAccessState",
        "description": [
          "\nThe state of anonymous access."
        ],
        "path": "src/plugins/share/common/anonymous_access/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-common.AnonymousAccessState.isEnabled",
            "type": "boolean",
            "tags": [],
            "label": "isEnabled",
            "description": [
              "\nWhether anonymous access is enabled or not."
            ],
            "path": "src/plugins/share/common/anonymous_access/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-common.AnonymousAccessState.accessURLParameters",
            "type": "CompoundType",
            "tags": [],
            "label": "accessURLParameters",
            "description": [
              "\nIf anonymous access is enabled, this reflects what URL parameters need to be added to a Kibana link to make it publicly accessible.\nNote that if anonymous access is the only authentication method, this will be null."
            ],
            "signature": [
              "Record<string, string> | null"
            ],
            "path": "src/plugins/share/common/anonymous_access/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-common.LocatorDefinition",
        "type": "Interface",
        "tags": [],
        "label": "LocatorDefinition",
        "description": [
          "\nA convenience interface used to define and register a locator."
        ],
        "signature": [
          {
            "pluginId": "share",
            "scope": "common",
            "docId": "kibSharePluginApi",
            "section": "def-common.LocatorDefinition",
            "text": "LocatorDefinition"
          },
          "<P> extends Partial<",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.PersistableState",
            "text": "PersistableState"
          },
          "<P>>"
        ],
        "path": "src/plugins/share/common/url_service/locators/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-common.LocatorDefinition.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nUnique ID of the locator. Should be constant and unique across Kibana."
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-common.LocatorDefinition.getLocation",
            "type": "Function",
            "tags": [],
            "label": "getLocation",
            "description": [
              "\nReturns a deep link, including location state, which can be used for\nnavigation in Kibana.\n"
            ],
            "signature": [
              "(params: P) => Promise<",
              "KibanaLocation",
              "<object>>"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorDefinition.getLocation.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [
                  "Parameters from which to generate a Kibana location."
                ],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "share",
        "id": "def-common.LocatorPublic",
        "type": "Interface",
        "tags": [],
        "label": "LocatorPublic",
        "description": [
          "\nPublic interface of a registered locator."
        ],
        "signature": [
          {
            "pluginId": "share",
            "scope": "common",
            "docId": "kibSharePluginApi",
            "section": "def-common.LocatorPublic",
            "text": "LocatorPublic"
          },
          "<P> extends ",
          {
            "pluginId": "kibanaUtils",
            "scope": "common",
            "docId": "kibKibanaUtilsPluginApi",
            "section": "def-common.PersistableState",
            "text": "PersistableState"
          },
          "<P>"
        ],
        "path": "src/plugins/share/common/url_service/locators/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "share",
            "id": "def-common.LocatorPublic.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "share",
            "id": "def-common.LocatorPublic.getLocation",
            "type": "Function",
            "tags": [],
            "label": "getLocation",
            "description": [
              "\nReturns a reference to a Kibana client-side location.\n"
            ],
            "signature": [
              "(params: P) => Promise<",
              "KibanaLocation",
              "<object>>"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorPublic.getLocation.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [
                  "URL locator parameters."
                ],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "share",
            "id": "def-common.LocatorPublic.getUrl",
            "type": "Function",
            "tags": [],
            "label": "getUrl",
            "description": [
              "\nReturns a URL as a string.\n\nYou may want to use `getRedirectUrl` instead. `getRedirectUrl` will\npreserve the location state, whereas the `getUrl` just returns the URL\nwithout the location state. Use this method if you know you don't need\nremember the location state and version of the URL locator.\n"
            ],
            "signature": [
              "(params: P, getUrlParams?: ",
              "LocatorGetUrlParams",
              " | undefined) => Promise<string>"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorPublic.getUrl.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [
                  "URL locator parameters."
                ],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorPublic.getUrl.$2",
                "type": "Object",
                "tags": [],
                "label": "getUrlParams",
                "description": [
                  "URL construction parameters."
                ],
                "signature": [
                  "LocatorGetUrlParams",
                  " | undefined"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "share",
            "id": "def-common.LocatorPublic.getRedirectUrl",
            "type": "Function",
            "tags": [],
            "label": "getRedirectUrl",
            "description": [
              "\nReturns a URL to the redirect endpoint, which will redirect the user to\nthe final destination.\n"
            ],
            "signature": [
              "(params: P, options?: ",
              "FormatSearchParamsOptions",
              " | undefined) => string"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorPublic.getRedirectUrl.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [
                  "URL locator parameters."
                ],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorPublic.getRedirectUrl.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "URL serialization options."
                ],
                "signature": [
                  "FormatSearchParamsOptions",
                  " | undefined"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "share",
            "id": "def-common.LocatorPublic.navigate",
            "type": "Function",
            "tags": [],
            "label": "navigate",
            "description": [
              "\nNavigate using the `core.application.navigateToApp()` method to a Kibana\nlocation generated by this locator. This method is available only on the\nbrowser.\n"
            ],
            "signature": [
              "(params: P, navigationParams?: ",
              "LocatorNavigationParams",
              " | undefined) => Promise<void>"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorPublic.navigate.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [
                  "URL locator parameters."
                ],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorPublic.navigate.$2",
                "type": "Object",
                "tags": [],
                "label": "navigationParams",
                "description": [
                  "Navigation parameters."
                ],
                "signature": [
                  "LocatorNavigationParams",
                  " | undefined"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "share",
            "id": "def-common.LocatorPublic.navigateSync",
            "type": "Function",
            "tags": [],
            "label": "navigateSync",
            "description": [
              "\nSynchronous fire-and-forget navigation method. Use it when you want to\nnavigate without waiting for the navigation to complete and you don't\ncare to process any async promise errors.\n"
            ],
            "signature": [
              "(params: P, navigationParams?: ",
              "LocatorNavigationParams",
              " | undefined) => void"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorPublic.navigateSync.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [
                  "URL locator parameters."
                ],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorPublic.navigateSync.$2",
                "type": "Object",
                "tags": [],
                "label": "navigationParams",
                "description": [
                  "Navigation parameters."
                ],
                "signature": [
                  "LocatorNavigationParams",
                  " | undefined"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "share",
            "id": "def-common.LocatorPublic.useUrl",
            "type": "Function",
            "tags": [],
            "label": "useUrl",
            "description": [
              "\nReact hook which returns a URL string given locator parameters. Returns\nempty string if URL is being loaded or an error happened."
            ],
            "signature": [
              "(params: P, getUrlParams?: ",
              "LocatorGetUrlParams",
              " | undefined, deps?: React.DependencyList | undefined) => string"
            ],
            "path": "src/plugins/share/common/url_service/locators/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorPublic.useUrl.$1",
                "type": "Uncategorized",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  "P"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorPublic.useUrl.$2",
                "type": "Object",
                "tags": [],
                "label": "getUrlParams",
                "description": [],
                "signature": [
                  "LocatorGetUrlParams",
                  " | undefined"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "share",
                "id": "def-common.LocatorPublic.useUrl.$3",
                "type": "Object",
                "tags": [],
                "label": "deps",
                "description": [],
                "signature": [
                  "React.DependencyList | undefined"
                ],
                "path": "src/plugins/share/common/url_service/locators/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [],
    "objects": []
  }
}