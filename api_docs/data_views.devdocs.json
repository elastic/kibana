{
  "id": "dataViews",
  "client": {
    "classes": [
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataView",
        "type": "Class",
        "tags": [],
        "label": "DataView",
        "description": [
          "\nData view class. Central kibana abstraction around multiple indices."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " implements ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewBase",
            "text": "DataViewBase"
          }
        ],
        "path": "src/plugins/data_views/common/data_views/data_view.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nSaved object id"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.title",
            "type": "string",
            "tags": [
              "deprecated"
            ],
            "label": "title",
            "description": [
              "\nTitle of data view"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/types.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/containers/detection_engine/rules/use_rule_from_timeline.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/containers/detection_engine/exceptions/get_es_query_filter.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/utils.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/store/middleware.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/get_query_filter.ts"
              },
              {
                "plugin": "timelines",
                "path": "x-pack/plugins/timelines/public/mock/index_pattern.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/mock/index_pattern.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "threatIntelligence",
                "path": "x-pack/plugins/threat_intelligence/public/common/mocks/mock_security_context.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detection_engine/rule_exceptions/components/flyout_components/alerts_actions/utils.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/expressions/kibana_context.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/expressions/kibana_context.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/expressions/kibana_context.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/build_es_query.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_combined_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_kuery.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_nested_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/build_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/exists_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/get_filter_field.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrase_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrase_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrases_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/ast/ast.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/and.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/exists.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/is.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/nested.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/not.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/or.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/range.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/node_types/function.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/utils/get_full_field_name_node.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/search_source/inspect/inspector_stats.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/tabify/response_writer.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/param_types/field.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/public/query/filter_manager/lib/get_display_value.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/public/search/errors/painless_error.tsx"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/autocomplete/providers/value_suggestion_provider.ts"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/query_string_input/fetch_index_patterns.ts"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/dataview_picker/change_dataview.tsx"
              },
              {
                "plugin": "triggersActionsUi",
                "path": "x-pack/plugins/triggers_actions_ui/public/common/lib/data_apis.ts"
              },
              {
                "plugin": "savedObjectsManagement",
                "path": "src/plugins/saved_objects_management/public/management_section/objects_table/components/flyout.tsx"
              },
              {
                "plugin": "savedObjectsManagement",
                "path": "src/plugins/saved_objects_management/public/management_section/objects_table/components/flyout.tsx"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/options_list/options_list_service.ts"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/options_list/options_list_service.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/services/field_stats/load_field_stats.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/common/utils/field_existing_utils.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/hooks/use_existing_fields.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/hooks/use_existing_fields.ts"
              },
              {
                "plugin": "lens",
                "path": "x-pack/plugins/lens/public/data_views_service/loader.ts"
              },
              {
                "plugin": "lens",
                "path": "x-pack/plugins/lens/public/app_plugin/lens_top_nav.tsx"
              },
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/application/main/components/no_results/no_results_suggestions/use_fetch_occurances_range.ts"
              },
              {
                "plugin": "aiops",
                "path": "x-pack/plugins/aiops/public/components/log_categorization/log_categorization_page.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/data_frame_analytics/index_patterns.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/job_service/new_job_caps/rollup.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/lib/alerts/alerting_service.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/data_recognizer/data_recognizer.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/log_views/resolved_log_view.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/get_fields.ts"
              },
              {
                "plugin": "apm",
                "path": "x-pack/plugins/apm/server/routes/data_view/create_static_data_view.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/utils/observability_data_views/observability_data_views.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/columns/report_definition_field.tsx"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/use_filter_values.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/columns/filter_value_btn.tsx"
              },
              {
                "plugin": "dataVisualizer",
                "path": "x-pack/plugins/data_visualizer/public/application/index_data_visualizer/hooks/use_data_visualizer_grid_data.ts"
              },
              {
                "plugin": "dataVisualizer",
                "path": "x-pack/plugins/data_visualizer/public/application/index_data_visualizer/components/index_data_visualizer_view/index_data_visualizer_view.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_details.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/datavisualizer/index_based/data_loader/data_loader.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/page.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/action_clone/clone_action_name.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/common/job_creator/job_creator.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/common/results_loader/categorization_examples_loader.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/index_or_search/preconfigured_job_redirect.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/components/pick_fields_step/components/bucket_span_estimator/estimate_bucket_span.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/components/datafeed_step/components/data_view/change_data_view.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_exploration/components/outlier_exploration/use_outlier_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_exploration/components/exploration_results_table/use_exploration_results.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/source_selection/source_selection.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/embeddables/anomaly_charts/anomaly_charts_embeddable.tsx"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "fleet",
                "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/filter_dataset.tsx"
              },
              {
                "plugin": "fleet",
                "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/filter_log_level.tsx"
              },
              {
                "plugin": "fleet",
                "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/query_bar.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/services/kibana/data_views.ts"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/services/kibana/data_views.ts"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/datasource/datasource_component.js"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.sagas.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/persistence.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/persistence.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/sourcerer/create_sourcerer_data_view.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/sourcerer/create_sourcerer_data_view.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/rules/eql_query_bar/validators.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/rules/step_define_rule/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detection_engine/rule_details_ui/pages/rule_details/index.tsx"
              },
              {
                "plugin": "timelines",
                "path": "x-pack/plugins/timelines/server/search_strategy/index_fields/index.ts"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/components/data_view_select_popover.tsx"
              },
              {
                "plugin": "synthetics",
                "path": "x-pack/plugins/synthetics/public/legacy_uptime/components/overview/filter_group/filter_group.tsx"
              },
              {
                "plugin": "synthetics",
                "path": "x-pack/plugins/synthetics/public/legacy_uptime/components/overview/alerts/monitor_expressions/filters_expression_select.tsx"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/common/filter_agg/components/filter_term_form.tsx"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/hooks/use_search_items/common.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/services/es_index_service.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/server/routes/api/transforms.ts"
              },
              {
                "plugin": "upgradeAssistant",
                "path": "x-pack/plugins/upgrade_assistant/public/application/components/es_deprecation_logs/fix_deprecation_logs/external_links.tsx"
              },
              {
                "plugin": "ux",
                "path": "x-pack/plugins/ux/public/components/app/rum_dashboard/local_uifilters/use_data_view.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.test.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.test.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/services/new_job_capabilities/remove_nested_field_children.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_kpi.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_with_reference_lines.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/test_formula_metric_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/lens_attributes/single_metric_attributes.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/lens_attributes/single_metric_attributes.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/mobile_test_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_cwv.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/common/common.test.ts"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/data_views/data_views.story.ts"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/components/scripting_help/test_script.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/field_editor.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/create_edit_field/create_edit_field.tsx"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/list_control_factory.ts"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/range_control_factory.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/server/routes/field_stats.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/server/routes/field_stats.ts"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/controls/field.tsx"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/controls/field.tsx"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/agg_select.tsx"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/test_utils/get_index_pattern_mock.ts"
              },
              {
                "plugin": "presentationUtil",
                "path": "src/plugins/presentation_util/public/services/data_views/data_views.story.ts"
              },
              {
                "plugin": "visTypeTimelion",
                "path": "src/plugins/vis_types/timelion/public/helpers/arg_value_suggestions.ts"
              },
              {
                "plugin": "visTypeTimelion",
                "path": "src/plugins/vis_types/timelion/public/helpers/arg_value_suggestions.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/components/lib/convert_series_to_datatable.ts"
              },
              {
                "plugin": "visTypeVega",
                "path": "src/plugins/vis_types/vega/public/data_model/search_api.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/agg_config.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/_terms_other_bucket_helper.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/multi_terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/multi_terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/rare_terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/public/query/filter_manager/lib/get_display_value.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/components/lib/convert_series_to_datatable.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/lib/cached_index_pattern_fetcher.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/lib/cached_index_pattern_fetcher.test.ts"
              },
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/application/main/hooks/use_text_based_query_language.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/metrics/hosts/hooks/use_data_view.test.ts"
              }
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.fieldFormatMap",
            "type": "Object",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [
              "\nMap of field formats by field name"
            ],
            "signature": [
              "{ [x: string]: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nOnly used by rollup indices, used by rollup specific endpoint to load field list."
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.fields",
            "type": "CompoundType",
            "tags": [],
            "label": "fields",
            "description": [
              "\nField list, in extended array format"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.IIndexPatternFieldList",
                "text": "IIndexPatternFieldList"
              },
              " & { toSpec: () => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              },
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [
              "\nTimestamp field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nType is used to identify rollup index patterns."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.flattenHit",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "flattenHit",
            "description": [],
            "signature": [
              "(hit: Record<string, unknown[]>, deep?: boolean | undefined) => Record<string, unknown>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
              }
            ],
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.flattenHit.$1",
                "type": "Object",
                "tags": [],
                "label": "hit",
                "description": [],
                "signature": [
                  "{ [x: string]: unknown[]; }"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.flattenHit.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "deep",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.metaFields",
            "type": "Array",
            "tags": [],
            "label": "metaFields",
            "description": [
              "\nList of meta fields by name"
            ],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.version",
            "type": "string",
            "tags": [],
            "label": "version",
            "description": [
              "\nSavedObject version"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.sourceFilters",
            "type": "Array",
            "tags": [],
            "label": "sourceFilters",
            "description": [
              "\nArray of filters - hides fields in discover"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.SourceFilter",
                "text": "SourceFilter"
              },
              "[] | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nArray of namespace ids"
            ],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.allowNoIndex",
            "type": "boolean",
            "tags": [],
            "label": "allowNoIndex",
            "description": [
              "\nPrevents errors when index pattern exists before indices"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nName of the data view. Human readable name used to differentiate data view."
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.matchedIndices",
            "type": "Array",
            "tags": [],
            "label": "matchedIndices",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [
                  "- config data and dependencies"
                ],
                "signature": [
                  "DataViewDeps"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getName",
            "type": "Function",
            "tags": [],
            "label": "getName",
            "description": [
              "\nGet name of Data View"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getIndexPattern",
            "description": [
              "\nGet index pattern"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "index pattern string"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.setIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "setIndexPattern",
            "description": [
              "\nSet index pattern"
            ],
            "signature": [
              "(indexPattern: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.setIndexPattern.$1",
                "type": "string",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getOriginalSavedObjectBody",
            "description": [
              "\nGet last saved saved object fields"
            ],
            "signature": [
              "() => { fieldAttrs?: string | undefined; title?: string | undefined; timeFieldName?: string | undefined; fields?: string | undefined; sourceFilters?: string | undefined; fieldFormatMap?: string | undefined; typeMeta?: string | undefined; type?: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.resetOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "resetOriginalSavedObjectBody",
            "description": [
              "\nReset last saved saved object fields. Used after saving."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "getFieldAttrs",
            "description": [
              "\nReturns field attributes map"
            ],
            "signature": [
              "() => { [x: string]: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getComputedFields",
            "type": "Function",
            "tags": [],
            "label": "getComputedFields",
            "description": [
              "\nReturns scripted fields"
            ],
            "signature": [
              "() => { storedFields: string[]; scriptFields: Record<string, ",
              "ScriptField",
              ">; docvalueFields: { field: string; format: string; }[]; runtimeFields: ",
              "MappingRuntimeFields",
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.isPersisted",
            "type": "Function",
            "tags": [],
            "label": "isPersisted",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [
              "\nCreates static representation of the data view."
            ],
            "signature": [
              "(includeFields?: boolean) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.toSpec.$1",
                "type": "boolean",
                "tags": [],
                "label": "includeFields",
                "description": [
                  "Whether or not to include the `fields` list as part of this spec. If not included, the list\nwill be fetched from Elasticsearch when instantiating a new Data View with this spec."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getSourceFiltering",
            "type": "Function",
            "tags": [],
            "label": "getSourceFiltering",
            "description": [
              "\nGet the source filtering configuration for that index."
            ],
            "signature": [
              "() => { excludes: string[]; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.removeScriptedField",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "removeScriptedField",
            "description": [
              "\nRemoves scripted field from field list."
            ],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/field_editor.tsx"
              }
            ],
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.removeScriptedField.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of scripted field to remove"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getNonScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getNonScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/strategies/abstract_search_strategy.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/source_filters_table/components/table/table.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/lib/fetch_fields.ts"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.isTSDBMode",
            "type": "Function",
            "tags": [],
            "label": "isTSDBMode",
            "description": [
              "\nreturns true if dataview contains TSDB fields"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.isTimeBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeBased",
            "description": [
              "\nDoes the data view have a timestamp field?"
            ],
            "signature": [
              "() => this is ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TimeBasedDataView",
                "text": "TimeBasedDataView"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.isTimeNanosBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeNanosBased",
            "description": [
              "\nDoes the data view have a timestamp field and is it a date nanos field?"
            ],
            "signature": [
              "() => this is ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TimeBasedDataView",
                "text": "TimeBasedDataView"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getTimeField",
            "type": "Function",
            "tags": [],
            "label": "getTimeField",
            "description": [
              "\nGet timestamp field as DataViewField or return undefined"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getFieldByName",
            "type": "Function",
            "tags": [],
            "label": "getFieldByName",
            "description": [
              "\nGet field by name."
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.getFieldByName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getAggregationRestrictions",
            "type": "Function",
            "tags": [],
            "label": "getAggregationRestrictions",
            "description": [
              "\nGet aggregation restrictions. Rollup fields can only perform a subset of aggregations."
            ],
            "signature": [
              "() => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.AggregationRestrictions",
                "text": "AggregationRestrictions"
              },
              "> | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getAsSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getAsSavedObjectBody",
            "description": [
              "\nReturns index pattern as saved object body for saving"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getFormatterForField",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForField",
            "description": [
              "\nProvide a field, get its formatter"
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.getFormatterForField.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [
                  "field to get formatter for"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewField",
                    "text": "DataViewField"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.addRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "addRuntimeField",
            "description": [
              "\nAdd a runtime field - Appended to existing mapped field or a new field is\ncreated as appropriate."
            ],
            "signature": [
              "(name: string, runtimeField: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ") => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.addRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.addRuntimeField.$2",
                "type": "Object",
                "tags": [],
                "label": "runtimeField",
                "description": [
                  "Runtime field definition"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.hasRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "hasRuntimeField",
            "description": [
              "\nChecks if runtime field exists"
            ],
            "signature": [
              "(name: string) => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.hasRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "getRuntimeField",
            "description": [
              "\nReturns runtime field if exists"
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              " | null"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.getRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Runtime field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getAllRuntimeFields",
            "type": "Function",
            "tags": [],
            "label": "getAllRuntimeFields",
            "description": [
              "\nGet all runtime field definitions.\nNOTE: this does not strip out runtime fields that match mapped field names"
            ],
            "signature": [
              "() => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "map of runtime field definitions by field name"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getFieldsByRuntimeFieldName",
            "type": "Function",
            "tags": [],
            "label": "getFieldsByRuntimeFieldName",
            "description": [
              "\nReturns data view fields backed by runtime fields."
            ],
            "signature": [
              "(name: string) => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "> | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.getFieldsByRuntimeFieldName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "runtime field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "map of DataViewFields (that are runtime fields) by field name"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.replaceAllRuntimeFields",
            "type": "Function",
            "tags": [],
            "label": "replaceAllRuntimeFields",
            "description": [
              "\nReplaces all existing runtime fields with new fields."
            ],
            "signature": [
              "(newFields: Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.replaceAllRuntimeFields.$1",
                "type": "Object",
                "tags": [],
                "label": "newFields",
                "description": [
                  "Map of runtime field definitions by field name"
                ],
                "signature": [
                  "Record<string, ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.removeRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "removeRuntimeField",
            "description": [
              "\nRemove a runtime field - removed from mapped field or removed unmapped\nfield as appropriate. Doesn't clear associated field attributes."
            ],
            "signature": [
              "(name: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.removeRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "- Field name to remove"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getRuntimeMappings",
            "type": "Function",
            "tags": [],
            "label": "getRuntimeMappings",
            "description": [
              "\nReturn the \"runtime_mappings\" section of the ES search query."
            ],
            "signature": [
              "() => ",
              "MappingRuntimeFields"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.getFormatterForFieldNoDefault",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForFieldNoDefault",
            "description": [
              "\nGet formatter for a given field name. Return undefined if none exists."
            ],
            "signature": [
              "(fieldname: string) => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.getFormatterForFieldNoDefault.$1",
                "type": "string",
                "tags": [],
                "label": "fieldname",
                "description": [
                  "name of field to get formatter for"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.setFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "setFieldAttrs",
            "description": [
              "\nSet field attribute"
            ],
            "signature": [
              "<K extends keyof ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              ">(fieldName: string, attrName: K, value: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "[K]) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.setFieldAttrs.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set attribute on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.setFieldAttrs.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "attrName",
                "description": [
                  "name of attribute to set"
                ],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.setFieldAttrs.$3",
                "type": "Uncategorized",
                "tags": [],
                "label": "value",
                "description": [
                  "value of attribute"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldAttrSet",
                    "text": "FieldAttrSet"
                  },
                  "[K]"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.setFieldCustomLabel",
            "type": "Function",
            "tags": [],
            "label": "setFieldCustomLabel",
            "description": [
              "\nSet field custom label"
            ],
            "signature": [
              "(fieldName: string, customLabel: string | null | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.setFieldCustomLabel.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set custom label on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.setFieldCustomLabel.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "customLabel",
                "description": [
                  "custom label value. If undefined, custom label is removed"
                ],
                "signature": [
                  "string | null | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.setFieldCount",
            "type": "Function",
            "tags": [],
            "label": "setFieldCount",
            "description": [
              "\nSet field count"
            ],
            "signature": [
              "(fieldName: string, count: number | null | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.setFieldCount.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set count on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.setFieldCount.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "count",
                "description": [
                  "count value. If undefined, count is removed"
                ],
                "signature": [
                  "number | null | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.setFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "setFieldFormat",
            "description": [
              "\nSet field formatter"
            ],
            "signature": [
              "(fieldName: string, format: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.setFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set format on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.setFieldFormat.$2",
                "type": "Object",
                "tags": [],
                "label": "format",
                "description": [
                  "field format in serialized form"
                ],
                "signature": [
                  {
                    "pluginId": "fieldFormats",
                    "scope": "common",
                    "docId": "kibFieldFormatsPluginApi",
                    "section": "def-common.SerializedFieldFormat",
                    "text": "SerializedFieldFormat"
                  },
                  "<{}, ",
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "common",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-common.SerializableRecord",
                    "text": "SerializableRecord"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataView.deleteFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "deleteFieldFormat",
            "description": [
              "\nRemove field format from the field format map."
            ],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataView.deleteFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "field name associated with the format for removal"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewField",
        "type": "Class",
        "tags": [],
        "label": "DataViewField",
        "description": [
          "\nData view field class"
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewField",
            "text": "DataViewField"
          },
          " implements ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewFieldBase",
            "text": "DataViewFieldBase"
          }
        ],
        "path": "src/plugins/data_views/common/fields/data_view_field.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.spec",
            "type": "CompoundType",
            "tags": [],
            "label": "spec",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.DataViewFieldBase",
                "text": "DataViewFieldBase"
              },
              " & { count?: number | undefined; conflictDescriptions?: Record<string, string[]> | undefined; format?: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              "> | undefined; esTypes?: string[] | undefined; searchable: boolean; aggregatable: boolean; readFromDocValues?: boolean | undefined; indexed?: boolean | undefined; customLabel?: string | undefined; runtimeField?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSpec",
                "text": "RuntimeFieldSpec"
              },
              " | undefined; fixedInterval?: string[] | undefined; timeZone?: string[] | undefined; timeSeriesDimension?: boolean | undefined; timeSeriesMetric?: \"gauge\" | \"histogram\" | \"summary\" | \"counter\" | undefined; shortDotsEnable?: boolean | undefined; isMapped?: boolean | undefined; parentName?: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.Unnamed",
            "type": "Function",
            "tags": [
              "constructor"
            ],
            "label": "Constructor",
            "description": [
              "\nDataView constructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewField.Unnamed.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "spec",
                "description": [
                  "Configuration for the field"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/data_view_field.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.count",
            "type": "number",
            "tags": [],
            "label": "count",
            "description": [
              "\nCount is used for field popularity in discover."
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.count",
            "type": "number",
            "tags": [],
            "label": "count",
            "description": [
              "\nSet count, which is used for field popularity in discover."
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.runtimeField",
            "type": "CompoundType",
            "tags": [],
            "label": "runtimeField",
            "description": [
              "\nReturns runtime field definition or undefined if field is not runtime field."
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSpec",
                "text": "RuntimeFieldSpec"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.runtimeField",
            "type": "CompoundType",
            "tags": [],
            "label": "runtimeField",
            "description": [
              "\nSets runtime field definition or unsets if undefined is provided."
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSpec",
                "text": "RuntimeFieldSpec"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.script",
            "type": "string",
            "tags": [],
            "label": "script",
            "description": [
              "\nScript field code"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.script",
            "type": "string",
            "tags": [],
            "label": "script",
            "description": [
              "\nSets scripted field painless code"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.lang",
            "type": "string",
            "tags": [],
            "label": "lang",
            "description": [
              "\nScript field language"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.lang",
            "type": "string",
            "tags": [],
            "label": "lang",
            "description": [
              "\nSets scripted field langauge."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [
              "\nReturns custom label if set, otherwise undefined."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [
              "\nSets custom label for field, or unsets if passed undefined."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.conflictDescriptions",
            "type": "Object",
            "tags": [],
            "label": "conflictDescriptions",
            "description": [
              "\nDescription of field type conflicts across different indices in the same index pattern."
            ],
            "signature": [
              "Record<string, string[]> | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.conflictDescriptions",
            "type": "Object",
            "tags": [],
            "label": "conflictDescriptions",
            "description": [
              "\nSets conflict descriptions for field."
            ],
            "signature": [
              "Record<string, string[]> | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nGet field name"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.displayName",
            "type": "string",
            "tags": [],
            "label": "displayName",
            "description": [
              "\nGets display name, calcualted based on name, custom label and shortDotsEnable."
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nGets field type"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.esTypes",
            "type": "Array",
            "tags": [],
            "label": "esTypes",
            "description": [
              "\nGets ES types as string array"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.scripted",
            "type": "boolean",
            "tags": [],
            "label": "scripted",
            "description": [
              "\nReturns true if scripted field"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.searchable",
            "type": "boolean",
            "tags": [],
            "label": "searchable",
            "description": [
              "\nReturns true if field is searchable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.aggregatable",
            "type": "boolean",
            "tags": [],
            "label": "aggregatable",
            "description": [
              "\nReturns true if field is aggregatable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.timeSeriesDimension",
            "type": "boolean",
            "tags": [],
            "label": "timeSeriesDimension",
            "description": [
              "\nreturns true if field is a TSDB dimension field"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.timeSeriesMetric",
            "type": "CompoundType",
            "tags": [],
            "label": "timeSeriesMetric",
            "description": [
              "\nreturns type of TSDB metric or undefined"
            ],
            "signature": [
              "\"gauge\" | \"histogram\" | \"summary\" | \"counter\" | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.fixedInterval",
            "type": "Array",
            "tags": [],
            "label": "fixedInterval",
            "description": [
              "\nreturns list of alloeed fixed intervals"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.isRolledUpField",
            "type": "CompoundType",
            "tags": [],
            "label": "isRolledUpField",
            "description": [
              "\nreturns true if the field is of rolled up type"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.timeZone",
            "type": "Array",
            "tags": [],
            "label": "timeZone",
            "description": [
              "\nreturn list of allowed time zones"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.readFromDocValues",
            "type": "boolean",
            "tags": [],
            "label": "readFromDocValues",
            "description": [
              "\nReturns true if field is available via doc values"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.subType",
            "type": "CompoundType",
            "tags": [],
            "label": "subType",
            "description": [
              "\nReturns field subtype, multi, nested, or undefined if neither"
            ],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.isMapped",
            "type": "CompoundType",
            "tags": [],
            "label": "isMapped",
            "description": [
              "\nIs the field part of the index mapping?"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.isRuntimeField",
            "type": "boolean",
            "tags": [],
            "label": "isRuntimeField",
            "description": [
              "\nReturns true if runtime field defined on data view"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.sortable",
            "type": "boolean",
            "tags": [],
            "label": "sortable",
            "description": [
              "\nReturns true if field is sortable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.filterable",
            "type": "boolean",
            "tags": [],
            "label": "filterable",
            "description": [
              "\nReturns true if field is filterable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.visualizable",
            "type": "boolean",
            "tags": [],
            "label": "visualizable",
            "description": [
              "\nReturns true if field is visualizable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.isSubtypeNested",
            "type": "Function",
            "tags": [],
            "label": "isSubtypeNested",
            "description": [
              "\nReturns true if field is subtype nested"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.isSubtypeMulti",
            "type": "Function",
            "tags": [],
            "label": "isSubtypeMulti",
            "description": [
              "\nReturns true if field is subtype multi"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.getSubtypeNested",
            "type": "Function",
            "tags": [],
            "label": "getSubtypeNested",
            "description": [
              "\nReturns subtype nested data if exists"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubTypeNested",
                "text": "IFieldSubTypeNested"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.getSubtypeMulti",
            "type": "Function",
            "tags": [],
            "label": "getSubtypeMulti",
            "description": [
              "\nReturns subtype multi data if exists"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubTypeMulti",
                "text": "IFieldSubTypeMulti"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.deleteCount",
            "type": "Function",
            "tags": [],
            "label": "deleteCount",
            "description": [
              "\nDeletes count value. Popularity as used by discover"
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.toJSON",
            "type": "Function",
            "tags": [],
            "label": "toJSON",
            "description": [
              "\nJSON version of field"
            ],
            "signature": [
              "() => { count: number; script: string | undefined; lang: string | undefined; conflictDescriptions: Record<string, string[]> | undefined; name: string; type: string; esTypes: string[] | undefined; scripted: boolean; searchable: boolean; aggregatable: boolean; readFromDocValues: boolean; subType: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; customLabel: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [
              "\nGet field in serialized form - fieldspec."
            ],
            "signature": [
              "(config?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.ToSpecConfig",
                "text": "ToSpecConfig"
              },
              ") => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              }
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewField.toSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [
                  "provide a method to get a field formatter"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.ToSpecConfig",
                    "text": "ToSpecConfig"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/data_view_field.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "field in serialized form - field spec"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewField.isRuntimeCompositeSubField",
            "type": "Function",
            "tags": [],
            "label": "isRuntimeCompositeSubField",
            "description": [
              "\nReturns true if composite runtime field"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewsApiClient",
        "type": "Class",
        "tags": [],
        "label": "DataViewsApiClient",
        "description": [
          "\nData Views API Client - client implementation"
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "public",
            "docId": "kibDataViewsPluginApi",
            "section": "def-public.DataViewsApiClient",
            "text": "DataViewsApiClient"
          },
          " implements ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.IDataViewsApiClient",
            "text": "IDataViewsApiClient"
          }
        ],
        "path": "src/plugins/data_views/public/data_views/data_views_api_client.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsApiClient.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/public/data_views/data_views_api_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsApiClient.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "http",
                "description": [
                  "http dependency"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-http-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreHttpBrowserPluginApi",
                    "section": "def-common.HttpSetup",
                    "text": "HttpSetup"
                  }
                ],
                "path": "src/plugins/data_views/public/data_views/data_views_api_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsApiClient.getFieldsForWildcard",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForWildcard",
            "description": [
              "\nGet field list for a given index pattern"
            ],
            "signature": [
              "(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              ") => Promise<",
              "FieldsForWildcardResponse",
              ">"
            ],
            "path": "src/plugins/data_views/public/data_views/data_views_api_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsApiClient.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "options for fields request"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  }
                ],
                "path": "src/plugins/data_views/public/data_views/data_views_api_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsApiClient.hasUserDataView",
            "type": "Function",
            "tags": [],
            "label": "hasUserDataView",
            "description": [
              "\nDoes a user created data view exist?"
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/public/data_views/data_views_api_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewSavedObjectConflictError",
        "type": "Class",
        "tags": [],
        "label": "DataViewSavedObjectConflictError",
        "description": [
          "\nError thrown when saved object has been changed when attempting to save."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSavedObjectConflictError",
            "text": "DataViewSavedObjectConflictError"
          },
          " extends Error"
        ],
        "path": "src/plugins/data_views/common/errors/data_view_saved_object_conflict.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewSavedObjectConflictError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/errors/data_view_saved_object_conflict.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewSavedObjectConflictError.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "savedObjectId",
                "description": [
                  "saved object id with conflict"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/errors/data_view_saved_object_conflict.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewsPublicPlugin",
        "type": "Class",
        "tags": [],
        "label": "DataViewsPublicPlugin",
        "description": [],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "public",
            "docId": "kibDataViewsPluginApi",
            "section": "def-public.DataViewsPublicPlugin",
            "text": "DataViewsPublicPlugin"
          },
          " implements ",
          {
            "pluginId": "@kbn/core-plugins-browser",
            "scope": "common",
            "docId": "kibKbnCorePluginsBrowserPluginApi",
            "section": "def-common.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "dataViews",
            "scope": "public",
            "docId": "kibDataViewsPluginApi",
            "section": "def-public.DataViewsPublicPluginSetup",
            "text": "DataViewsPublicPluginSetup"
          },
          ", ",
          {
            "pluginId": "dataViews",
            "scope": "public",
            "docId": "kibDataViewsPluginApi",
            "section": "def-public.DataViewsServicePublic",
            "text": "DataViewsServicePublic"
          },
          ", ",
          {
            "pluginId": "dataViews",
            "scope": "public",
            "docId": "kibDataViewsPluginApi",
            "section": "def-public.DataViewsPublicSetupDependencies",
            "text": "DataViewsPublicSetupDependencies"
          },
          ", ",
          {
            "pluginId": "dataViews",
            "scope": "public",
            "docId": "kibDataViewsPluginApi",
            "section": "def-public.DataViewsPublicStartDependencies",
            "text": "DataViewsPublicStartDependencies"
          },
          ">"
        ],
        "path": "src/plugins/data_views/public/plugin.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsPublicPlugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-browser",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                "section": "def-common.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "public",
                "docId": "kibDataViewsPluginApi",
                "section": "def-public.DataViewsPublicStartDependencies",
                "text": "DataViewsPublicStartDependencies"
              },
              ", ",
              {
                "pluginId": "dataViews",
                "scope": "public",
                "docId": "kibDataViewsPluginApi",
                "section": "def-public.DataViewsServicePublic",
                "text": "DataViewsServicePublic"
              },
              ">, { expressions }: ",
              {
                "pluginId": "dataViews",
                "scope": "public",
                "docId": "kibDataViewsPluginApi",
                "section": "def-public.DataViewsPublicSetupDependencies",
                "text": "DataViewsPublicSetupDependencies"
              },
              ") => ",
              {
                "pluginId": "dataViews",
                "scope": "public",
                "docId": "kibDataViewsPluginApi",
                "section": "def-public.DataViewsPublicPluginSetup",
                "text": "DataViewsPublicPluginSetup"
              }
            ],
            "path": "src/plugins/data_views/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsPublicPlugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                    "section": "def-common.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  {
                    "pluginId": "dataViews",
                    "scope": "public",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-public.DataViewsPublicStartDependencies",
                    "text": "DataViewsPublicStartDependencies"
                  },
                  ", ",
                  {
                    "pluginId": "dataViews",
                    "scope": "public",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-public.DataViewsServicePublic",
                    "text": "DataViewsServicePublic"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/public/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsPublicPlugin.setup.$2",
                "type": "Object",
                "tags": [],
                "label": "{ expressions }",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "public",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-public.DataViewsPublicSetupDependencies",
                    "text": "DataViewsPublicSetupDependencies"
                  }
                ],
                "path": "src/plugins/data_views/public/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsPublicPlugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-browser",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                "section": "def-common.CoreStart",
                "text": "CoreStart"
              },
              ", { fieldFormats }: ",
              {
                "pluginId": "dataViews",
                "scope": "public",
                "docId": "kibDataViewsPluginApi",
                "section": "def-public.DataViewsPublicStartDependencies",
                "text": "DataViewsPublicStartDependencies"
              },
              ") => ",
              {
                "pluginId": "dataViews",
                "scope": "public",
                "docId": "kibDataViewsPluginApi",
                "section": "def-public.DataViewsServicePublic",
                "text": "DataViewsServicePublic"
              }
            ],
            "path": "src/plugins/data_views/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsPublicPlugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleBrowserPluginApi",
                    "section": "def-common.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "src/plugins/data_views/public/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsPublicPlugin.start.$2",
                "type": "Object",
                "tags": [],
                "label": "{ fieldFormats }",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "public",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-public.DataViewsPublicStartDependencies",
                    "text": "DataViewsPublicStartDependencies"
                  }
                ],
                "path": "src/plugins/data_views/public/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsPublicPlugin.stop",
            "type": "Function",
            "tags": [],
            "label": "stop",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/public/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewsService",
        "type": "Class",
        "tags": [],
        "label": "DataViewsService",
        "description": [
          "\nData views service, providing CRUD operations for data views."
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.getCanSave",
            "type": "Function",
            "tags": [],
            "label": "getCanSave",
            "description": [
              "\nCan the user save data views?"
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nDataViewsService constructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "deps",
                "description": [
                  "Service dependencies"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewsServiceDeps",
                    "text": "DataViewsServiceDeps"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.getIds",
            "type": "Function",
            "tags": [],
            "label": "getIds",
            "description": [
              "\nGets list of index pattern ids."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.getIds.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.getTitles",
            "type": "Function",
            "tags": [],
            "label": "getTitles",
            "description": [
              "\nGets list of index pattern titles."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.getTitles.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nFind and load index patterns by title."
            ],
            "signature": [
              "(search: string, size?: number) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.find.$1",
                "type": "string",
                "tags": [],
                "label": "search",
                "description": [
                  "Search string"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.find.$2",
                "type": "number",
                "tags": [],
                "label": "size",
                "description": [
                  "Number of data views to return"
                ],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataView[]"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.getIdsWithTitle",
            "type": "Function",
            "tags": [],
            "label": "getIdsWithTitle",
            "description": [
              "\nGets list of index pattern ids with titles."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewListItem",
                "text": "DataViewListItem"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.getIdsWithTitle.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.clearCache",
            "type": "Function",
            "tags": [],
            "label": "clearCache",
            "description": [
              "\nClear index pattern saved objects cache."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.clearInstanceCache",
            "type": "Function",
            "tags": [],
            "label": "clearInstanceCache",
            "description": [
              "\nClear index pattern instance cache"
            ],
            "signature": [
              "(id?: string | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.clearInstanceCache.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.getCache",
            "type": "Function",
            "tags": [],
            "label": "getCache",
            "description": [
              "\nGet cache, contains data view saved objects."
            ],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSavedObjectAttrs",
                "text": "DataViewSavedObjectAttrs"
              },
              ">[] | null | undefined>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.getDefault",
            "type": "Function",
            "tags": [],
            "label": "getDefault",
            "description": [
              "\nGet default index pattern"
            ],
            "signature": [
              "(displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.getDefault.$1",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.getDefaultId",
            "type": "Function",
            "tags": [],
            "label": "getDefaultId",
            "description": [
              "\nGet default index pattern id"
            ],
            "signature": [
              "() => Promise<string | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.setDefault",
            "type": "Function",
            "tags": [],
            "label": "setDefault",
            "description": [
              "\nOptionally set default index pattern, unless force = true"
            ],
            "signature": [
              "(id: string | null, force?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.setDefault.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "id",
                "description": [
                  "data view id"
                ],
                "signature": [
                  "string | null"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.setDefault.$2",
                "type": "boolean",
                "tags": [],
                "label": "force",
                "description": [
                  "set default data view even if there's an existing default"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.hasUserDataView",
            "type": "Function",
            "tags": [],
            "label": "hasUserDataView",
            "description": [
              "\nChecks if current user has a user created index pattern ignoring fleet's server default index patterns."
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.getFieldsForWildcard",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForWildcard",
            "description": [
              "\nGet field list by providing { pattern }."
            ],
            "signature": [
              "(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              ") => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "options for getting field list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.getFieldsForIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForIndexPattern",
            "description": [
              "\nGet field list by providing an index patttern (or spec)."
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", options?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.getFieldsForIndexPattern.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.getFieldsForIndexPattern.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "options for getting field list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.refreshFields",
            "type": "Function",
            "tags": [],
            "label": "refreshFields",
            "description": [
              "\nRefresh field list for a given index pattern."
            ],
            "signature": [
              "(dataView: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", displayErrors?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.refreshFields.$1",
                "type": "Object",
                "tags": [],
                "label": "dataView",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.refreshFields.$2",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.fieldArrayToMap",
            "type": "Function",
            "tags": [],
            "label": "fieldArrayToMap",
            "description": [
              "\nConverts field array to map."
            ],
            "signature": [
              "(fields: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[], fieldAttrs?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrs",
                "text": "FieldAttrs"
              },
              " | undefined) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.fieldArrayToMap.$1",
                "type": "Array",
                "tags": [],
                "label": "fields",
                "description": [
                  ": FieldSpec[]"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  "[]"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.fieldArrayToMap.$2",
                "type": "Object",
                "tags": [],
                "label": "fieldAttrs",
                "description": [
                  ": FieldAttrs"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldAttrs",
                    "text": "FieldAttrs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "Record<string, FieldSpec>"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.savedObjectToSpec",
            "type": "Function",
            "tags": [],
            "label": "savedObjectToSpec",
            "description": [
              "\nConverts data view saved object to data view spec."
            ],
            "signature": [
              "(savedObject: ",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ">) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.savedObjectToSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "savedObject",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-common",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                    "section": "def-common.SavedObject",
                    "text": "SavedObject"
                  },
                  "<",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataViewSpec"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet an index pattern by id, cache optimized."
            ],
            "signature": [
              "(id: string, displayErrors?: boolean, refreshFields?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.get.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.get.$2",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.get.$3",
                "type": "boolean",
                "tags": [],
                "label": "refreshFields",
                "description": [
                  "- If set true, will fetch fields from the index pattern"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreate data view instance."
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.create.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [
                  "data view spec"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.create.$2",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "if true, will not fetch fields"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.create.$3",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataView"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.createAndSave",
            "type": "Function",
            "tags": [],
            "label": "createAndSave",
            "description": [
              "\nCreate a new data view and save it right away."
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", override?: boolean, skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.createAndSave.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [
                  "data view spec"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.createAndSave.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.createAndSave.$3",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "Whether to skip field refresh step."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.createAndSave.$4",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.createSavedObject",
            "type": "Function",
            "tags": [],
            "label": "createSavedObject",
            "description": [
              "\nSave a new data view."
            ],
            "signature": [
              "(dataView: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", override?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.createSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "dataView",
                "description": [
                  "data view instance"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.createSavedObject.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.createSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.updateSavedObject",
            "type": "Function",
            "tags": [],
            "label": "updateSavedObject",
            "description": [
              "\nSave existing data view. Will attempt to merge differences if there are conflicts."
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", saveAttempts?: number, ignoreErrors?: boolean, displayErrors?: boolean) => Promise<void | Error | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.updateSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.updateSavedObject.$2",
                "type": "number",
                "tags": [],
                "label": "saveAttempts",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.updateSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "ignoreErrors",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.updateSavedObject.$4",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDeletes an index pattern from .kibana index."
            ],
            "signature": [
              "(indexPatternId: string) => Promise<{}>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.delete.$1",
                "type": "string",
                "tags": [],
                "label": "indexPatternId",
                "description": [
                  ": Id of kibana Index Pattern to delete"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsService.getDefaultDataView",
            "type": "Function",
            "tags": [],
            "label": "getDefaultDataView",
            "description": [
              "\nReturns the default data view as an object.\nIf no default is found, or it is missing\nanother data view is selected as default and returned.\nIf no possible data view found to become a default returns null.\n"
            ],
            "signature": [
              "(refreshFields?: boolean | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsService.getDefaultDataView.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "refreshFields",
                "description": [
                  "- if true, will refresh the fields of the default data view"
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "default data view"
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewsServicePublic",
        "type": "Class",
        "tags": [],
        "label": "DataViewsServicePublic",
        "description": [
          "\nData Views public service"
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "public",
            "docId": "kibDataViewsPluginApi",
            "section": "def-public.DataViewsServicePublic",
            "text": "DataViewsServicePublic"
          },
          " extends ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewsService",
            "text": "DataViewsService"
          }
        ],
        "path": "src/plugins/data_views/public/data_views_service_public.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsServicePublic.getCanSaveSync",
            "type": "Function",
            "tags": [],
            "label": "getCanSaveSync",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/public/data_views_service_public.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsServicePublic.getIndices",
            "type": "Function",
            "tags": [],
            "label": "getIndices",
            "description": [],
            "signature": [
              "(props: { pattern: string; showAllIndices?: boolean | undefined; isRollupIndex: (indexName: string) => boolean; }) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "public",
                "docId": "kibDataViewsPluginApi",
                "section": "def-public.MatchedItem",
                "text": "MatchedItem"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/public/data_views_service_public.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsServicePublic.getIndices.$1",
                "type": "Object",
                "tags": [],
                "label": "props",
                "description": [],
                "signature": [
                  "{ pattern: string; showAllIndices?: boolean | undefined; isRollupIndex: (indexName: string) => boolean; }"
                ],
                "path": "src/plugins/data_views/public/data_views_service_public.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsServicePublic.hasData",
            "type": "Object",
            "tags": [],
            "label": "hasData",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.HasDataService",
                "text": "HasDataService"
              }
            ],
            "path": "src/plugins/data_views/public/data_views_service_public.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsServicePublic.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nConstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/public/data_views_service_public.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsServicePublic.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "deps",
                "description": [
                  "Service dependencies"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "public",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-public.DataViewsServicePublicDeps",
                    "text": "DataViewsServicePublicDeps"
                  }
                ],
                "path": "src/plugins/data_views/public/data_views_service_public.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.SavedObjectsClientPublicToCommon",
        "type": "Class",
        "tags": [],
        "label": "SavedObjectsClientPublicToCommon",
        "description": [],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "public",
            "docId": "kibDataViewsPluginApi",
            "section": "def-public.SavedObjectsClientPublicToCommon",
            "text": "SavedObjectsClientPublicToCommon"
          },
          " implements ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.SavedObjectsClientCommon",
            "text": "SavedObjectsClientCommon"
          }
        ],
        "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.SavedObjectsClientPublicToCommon.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "savedObjectClient",
                "description": [],
                "signature": [
                  "SOClient"
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.SavedObjectsClientPublicToCommon.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [],
            "signature": [
              "<T = unknown>(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.SavedObjectsClientCommonFindArgs",
                "text": "SavedObjectsClientCommonFindArgs"
              },
              ") => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<T>[]>"
            ],
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.find.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.SavedObjectsClientCommonFindArgs",
                    "text": "SavedObjectsClientCommonFindArgs"
                  }
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.SavedObjectsClientPublicToCommon.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [],
            "signature": [
              "<T = unknown>(type: string, id: string) => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<T>>"
            ],
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.get.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.get.$2",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.SavedObjectsClientPublicToCommon.update",
            "type": "Function",
            "tags": [],
            "label": "update",
            "description": [],
            "signature": [
              "(type: string, id: string, attributes: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ", options: ",
              {
                "pluginId": "@kbn/core-saved-objects-api-browser",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                "section": "def-common.SavedObjectsUpdateOptions",
                "text": "SavedObjectsUpdateOptions"
              },
              "<unknown>) => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<unknown>>"
            ],
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.update.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.update.$2",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.update.$3",
                "type": "Object",
                "tags": [],
                "label": "attributes",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  }
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.update.$4",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-api-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                    "section": "def-common.SavedObjectsUpdateOptions",
                    "text": "SavedObjectsUpdateOptions"
                  },
                  "<unknown>"
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.SavedObjectsClientPublicToCommon.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [],
            "signature": [
              "(type: string, attributes: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ", options?: ",
              {
                "pluginId": "@kbn/core-saved-objects-api-browser",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                "section": "def-common.SavedObjectsCreateOptions",
                "text": "SavedObjectsCreateOptions"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<unknown>>"
            ],
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.create.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.create.$2",
                "type": "Object",
                "tags": [],
                "label": "attributes",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  }
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.create.$3",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-api-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                    "section": "def-common.SavedObjectsCreateOptions",
                    "text": "SavedObjectsCreateOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.SavedObjectsClientPublicToCommon.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [],
            "signature": [
              "(type: string, id: string) => Promise<{}>"
            ],
            "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.delete.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientPublicToCommon.delete.$2",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/public/saved_objects_client_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.UiSettingsPublicToCommon",
        "type": "Class",
        "tags": [],
        "label": "UiSettingsPublicToCommon",
        "description": [],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "public",
            "docId": "kibDataViewsPluginApi",
            "section": "def-public.UiSettingsPublicToCommon",
            "text": "UiSettingsPublicToCommon"
          },
          " implements ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.UiSettingsCommon",
            "text": "UiSettingsCommon"
          }
        ],
        "path": "src/plugins/data_views/public/ui_settings_wrapper.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.UiSettingsPublicToCommon.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/public/ui_settings_wrapper.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.UiSettingsPublicToCommon.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "uiSettings",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-ui-settings-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreUiSettingsBrowserPluginApi",
                    "section": "def-common.IUiSettingsClient",
                    "text": "IUiSettingsClient"
                  }
                ],
                "path": "src/plugins/data_views/public/ui_settings_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.UiSettingsPublicToCommon.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [],
            "signature": [
              "<T = unknown>(key: string) => Promise<T | undefined>"
            ],
            "path": "src/plugins/data_views/public/ui_settings_wrapper.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.UiSettingsPublicToCommon.get.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/public/ui_settings_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.UiSettingsPublicToCommon.getAll",
            "type": "Function",
            "tags": [],
            "label": "getAll",
            "description": [],
            "signature": [
              "<T = unknown>() => Promise<Record<string, (",
              {
                "pluginId": "@kbn/core-ui-settings-browser",
                "scope": "common",
                "docId": "kibKbnCoreUiSettingsBrowserPluginApi",
                "section": "def-common.PublicUiSettingsParams",
                "text": "PublicUiSettingsParams"
              },
              " & ",
              {
                "pluginId": "@kbn/core-ui-settings-common",
                "scope": "common",
                "docId": "kibKbnCoreUiSettingsCommonPluginApi",
                "section": "def-common.UserProvidedValues",
                "text": "UserProvidedValues"
              },
              "<T>) | undefined>>"
            ],
            "path": "src/plugins/data_views/public/ui_settings_wrapper.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.UiSettingsPublicToCommon.set",
            "type": "Function",
            "tags": [],
            "label": "set",
            "description": [],
            "signature": [
              "(key: string, value: unknown) => Promise<void>"
            ],
            "path": "src/plugins/data_views/public/ui_settings_wrapper.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.UiSettingsPublicToCommon.set.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/public/ui_settings_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.UiSettingsPublicToCommon.set.$2",
                "type": "Unknown",
                "tags": [],
                "label": "value",
                "description": [],
                "signature": [
                  "unknown"
                ],
                "path": "src/plugins/data_views/public/ui_settings_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.UiSettingsPublicToCommon.remove",
            "type": "Function",
            "tags": [],
            "label": "remove",
            "description": [],
            "signature": [
              "(key: string) => Promise<void>"
            ],
            "path": "src/plugins/data_views/public/ui_settings_wrapper.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.UiSettingsPublicToCommon.remove.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/public/ui_settings_wrapper.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "dataViews",
        "id": "def-public.getFieldSubtypeMulti",
        "type": "Function",
        "tags": [],
        "label": "getFieldSubtypeMulti",
        "description": [],
        "signature": [
          "(field: HasSubtype) => ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.IFieldSubTypeMulti",
            "text": "IFieldSubTypeMulti"
          },
          " | undefined"
        ],
        "path": "src/plugins/data_views/common/fields/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.getFieldSubtypeMulti.$1",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "{ subType?: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/utils.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.getFieldSubtypeNested",
        "type": "Function",
        "tags": [],
        "label": "getFieldSubtypeNested",
        "description": [],
        "signature": [
          "(field: HasSubtype) => ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.IFieldSubTypeNested",
            "text": "IFieldSubTypeNested"
          },
          " | undefined"
        ],
        "path": "src/plugins/data_views/common/fields/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.getFieldSubtypeNested.$1",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "{ subType?: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/utils.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.validateDataView",
        "type": "Function",
        "tags": [],
        "label": "validateDataView",
        "description": [
          "\nValidate index pattern strings"
        ],
        "signature": [
          "(indexPattern: string) => { ILLEGAL_CHARACTERS?: string[] | undefined; CONTAINS_SPACES?: boolean | undefined; }"
        ],
        "path": "src/plugins/data_views/common/lib/validate_data_view.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.validateDataView.$1",
            "type": "string",
            "tags": [],
            "label": "indexPattern",
            "description": [
              "string to validate"
            ],
            "signature": [
              "string"
            ],
            "path": "src/plugins/data_views/common/lib/validate_data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "errors object"
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewAttributes",
        "type": "Interface",
        "tags": [],
        "label": "DataViewAttributes",
        "description": [
          "\nInterface for the data view saved object"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewAttributes.fields",
            "type": "string",
            "tags": [],
            "label": "fields",
            "description": [
              "\nFields as a serialized array of field specs"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewAttributes.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "\nData view title"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewAttributes.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nData view type, default or rollup"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewAttributes.typeMeta",
            "type": "string",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nType metadata information, serialized. Only used by rollup data views."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewAttributes.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [
              "\nTime field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewAttributes.sourceFilters",
            "type": "string",
            "tags": [],
            "label": "sourceFilters",
            "description": [
              "\nSerialized array of filters. Used by discover to hide fields."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewAttributes.fieldFormatMap",
            "type": "string",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [
              "\nSerialized map of field formats by field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewAttributes.fieldAttrs",
            "type": "string",
            "tags": [],
            "label": "fieldAttrs",
            "description": [
              "\nSerialized map of field attributes, currently field count and name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewAttributes.runtimeFieldMap",
            "type": "string",
            "tags": [],
            "label": "runtimeFieldMap",
            "description": [
              "\nSerialized map of runtime field definitions, by field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewAttributes.allowNoIndex",
            "type": "CompoundType",
            "tags": [],
            "label": "allowNoIndex",
            "description": [
              "\nPrevents errors when index pattern exists before indices"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewAttributes.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nName of the data view. Human readable name used to differentiate data view."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewListItem",
        "type": "Interface",
        "tags": [],
        "label": "DataViewListItem",
        "description": [
          "\nResult from data view search - summary data."
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewListItem.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nSaved object id (or generated id if in-memory only)"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewListItem.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nNamespace ids"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewListItem.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "\nData view title"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewListItem.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nData view type"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewListItem.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nData view type meta"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewListItem.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewsPublicSetupDependencies",
        "type": "Interface",
        "tags": [],
        "label": "DataViewsPublicSetupDependencies",
        "description": [
          "\nData views public setup dependencies"
        ],
        "path": "src/plugins/data_views/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsPublicSetupDependencies.expressions",
            "type": "Object",
            "tags": [],
            "label": "expressions",
            "description": [
              "\nExpressions"
            ],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionsServiceSetup",
                "text": "ExpressionsServiceSetup"
              }
            ],
            "path": "src/plugins/data_views/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsPublicSetupDependencies.fieldFormats",
            "type": "Object",
            "tags": [],
            "label": "fieldFormats",
            "description": [
              "\nField formats"
            ],
            "signature": [
              "{ has: (id: string) => boolean; register: (fieldFormats: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormatInstanceType",
                "text": "FieldFormatInstanceType"
              },
              "[]) => void; }"
            ],
            "path": "src/plugins/data_views/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewsPublicStartDependencies",
        "type": "Interface",
        "tags": [],
        "label": "DataViewsPublicStartDependencies",
        "description": [
          "\nData views public start dependencies"
        ],
        "path": "src/plugins/data_views/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsPublicStartDependencies.fieldFormats",
            "type": "CompoundType",
            "tags": [],
            "label": "fieldFormats",
            "description": [
              "\nField formats"
            ],
            "signature": [
              "Omit<",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormatsRegistry",
                "text": "FieldFormatsRegistry"
              },
              ", \"init\" | \"register\"> & { deserialize: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FormatFactory",
                "text": "FormatFactory"
              },
              "; }"
            ],
            "path": "src/plugins/data_views/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewsServicePublicDeps",
        "type": "Interface",
        "tags": [],
        "label": "DataViewsServicePublicDeps",
        "description": [
          "\nData Views public service dependencies"
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "public",
            "docId": "kibDataViewsPluginApi",
            "section": "def-public.DataViewsServicePublicDeps",
            "text": "DataViewsServicePublicDeps"
          },
          " extends ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewsServiceDeps",
            "text": "DataViewsServiceDeps"
          }
        ],
        "path": "src/plugins/data_views/public/data_views_service_public.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsServicePublicDeps.getCanSaveSync",
            "type": "Function",
            "tags": [],
            "label": "getCanSaveSync",
            "description": [
              "\nGet can user save data view - sync version"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/public/data_views_service_public.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsServicePublicDeps.hasData",
            "type": "Object",
            "tags": [],
            "label": "hasData",
            "description": [
              "\nHas data service"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.HasDataService",
                "text": "HasDataService"
              }
            ],
            "path": "src/plugins/data_views/public/data_views_service_public.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.DataViewsServicePublicDeps.getIndices",
            "type": "Function",
            "tags": [],
            "label": "getIndices",
            "description": [],
            "signature": [
              "(props: { pattern: string; showAllIndices?: boolean | undefined; isRollupIndex: (indexName: string) => boolean; }) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "public",
                "docId": "kibDataViewsPluginApi",
                "section": "def-public.MatchedItem",
                "text": "MatchedItem"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/public/data_views_service_public.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.DataViewsServicePublicDeps.getIndices.$1",
                "type": "Object",
                "tags": [],
                "label": "props",
                "description": [],
                "path": "src/plugins/data_views/public/data_views_service_public.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "dataViews",
                    "id": "def-public.DataViewsServicePublicDeps.getIndices.$1.pattern",
                    "type": "string",
                    "tags": [],
                    "label": "pattern",
                    "description": [],
                    "path": "src/plugins/data_views/public/data_views_service_public.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "dataViews",
                    "id": "def-public.DataViewsServicePublicDeps.getIndices.$1.showAllIndices",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "showAllIndices",
                    "description": [],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "src/plugins/data_views/public/data_views_service_public.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "dataViews",
                    "id": "def-public.DataViewsServicePublicDeps.getIndices.$1.isRollupIndex",
                    "type": "Function",
                    "tags": [],
                    "label": "isRollupIndex",
                    "description": [],
                    "signature": [
                      "(indexName: string) => boolean"
                    ],
                    "path": "src/plugins/data_views/public/data_views_service_public.ts",
                    "deprecated": false,
                    "trackAdoption": false,
                    "children": [
                      {
                        "parentPluginId": "dataViews",
                        "id": "def-public.DataViewsServicePublicDeps.getIndices.$1.isRollupIndex.$1",
                        "type": "string",
                        "tags": [],
                        "label": "indexName",
                        "description": [],
                        "signature": [
                          "string"
                        ],
                        "path": "src/plugins/data_views/public/data_views_service_public.ts",
                        "deprecated": false,
                        "trackAdoption": false,
                        "isRequired": true
                      }
                    ],
                    "returnComment": []
                  }
                ]
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.HasDataViewsResponse",
        "type": "Interface",
        "tags": [],
        "label": "HasDataViewsResponse",
        "description": [],
        "path": "src/plugins/data_views/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.HasDataViewsResponse.hasDataView",
            "type": "boolean",
            "tags": [],
            "label": "hasDataView",
            "description": [],
            "path": "src/plugins/data_views/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.HasDataViewsResponse.hasUserDataView",
            "type": "boolean",
            "tags": [],
            "label": "hasUserDataView",
            "description": [],
            "path": "src/plugins/data_views/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.IIndexPatternFieldList",
        "type": "Interface",
        "tags": [],
        "label": "IIndexPatternFieldList",
        "description": [
          "\nInterface for data view field list which _extends_ the array class."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.IIndexPatternFieldList",
            "text": "IIndexPatternFieldList"
          },
          " extends ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewField",
            "text": "DataViewField"
          },
          "[]"
        ],
        "path": "src/plugins/data_views/common/fields/field_list.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.IIndexPatternFieldList.add",
            "type": "Function",
            "tags": [],
            "label": "add",
            "description": [
              "\nAdd field to field list."
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              }
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.IIndexPatternFieldList.add.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [
                  "field spec to add field to list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "data view field instance which was added to list"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.IIndexPatternFieldList.getAll",
            "type": "Function",
            "tags": [],
            "label": "getAll",
            "description": [
              "\nReturns fields as plain array of data view field instances."
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.IIndexPatternFieldList.getByName",
            "type": "Function",
            "tags": [],
            "label": "getByName",
            "description": [
              "\nGet field by name. Optimized, uses map to find field."
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.IIndexPatternFieldList.getByName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "name of field to find"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "data view field instance if found, undefined otherwise"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.IIndexPatternFieldList.getByType",
            "type": "Function",
            "tags": [],
            "label": "getByType",
            "description": [
              "\nGet fields by field type. Optimized, uses map to find fields."
            ],
            "signature": [
              "(type: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.IIndexPatternFieldList.getByType.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "type of field to find"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "array of data view field instances if found, empty array otherwise"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.IIndexPatternFieldList.remove",
            "type": "Function",
            "tags": [],
            "label": "remove",
            "description": [
              "\nRemove field from field list"
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => void"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.IIndexPatternFieldList.remove.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [
                  "field for removal"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewField",
                    "text": "DataViewField"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.IIndexPatternFieldList.removeAll",
            "type": "Function",
            "tags": [],
            "label": "removeAll",
            "description": [
              "\nRemove all fields from field list."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.IIndexPatternFieldList.replaceAll",
            "type": "Function",
            "tags": [],
            "label": "replaceAll",
            "description": [
              "\nReplace all fields in field list with new fields."
            ],
            "signature": [
              "(specs: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]) => void"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.IIndexPatternFieldList.replaceAll.$1",
                "type": "Array",
                "tags": [],
                "label": "specs",
                "description": [
                  "array of field specs to add to list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  "[]"
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.IIndexPatternFieldList.update",
            "type": "Function",
            "tags": [],
            "label": "update",
            "description": [
              "\nUpdate a field in the list"
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => void"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.IIndexPatternFieldList.update.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [
                  "field spec to update"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.IIndexPatternFieldList.toSpec",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "toSpec",
            "description": [
              "\nField list as field spec map by name"
            ],
            "signature": [
              "(options?: ToSpecOptions | undefined) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              }
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.IIndexPatternFieldList.toSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "optionally provide a function to get field formatter for fields"
                ],
                "signature": [
                  "ToSpecOptions | undefined"
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "map of field specs by name"
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.IndicesViaSearchResponse",
        "type": "Interface",
        "tags": [],
        "label": "IndicesViaSearchResponse",
        "description": [],
        "path": "src/plugins/data_views/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.IndicesViaSearchResponse.total",
            "type": "number",
            "tags": [],
            "label": "total",
            "description": [],
            "path": "src/plugins/data_views/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.MatchedItem",
        "type": "Interface",
        "tags": [],
        "label": "MatchedItem",
        "description": [],
        "path": "src/plugins/data_views/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.MatchedItem.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "src/plugins/data_views/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.MatchedItem.tags",
            "type": "Array",
            "tags": [],
            "label": "tags",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "public",
                "docId": "kibDataViewsPluginApi",
                "section": "def-public.Tag",
                "text": "Tag"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.MatchedItem.item",
            "type": "Object",
            "tags": [],
            "label": "item",
            "description": [],
            "signature": [
              "{ name: string; backing_indices?: string[] | undefined; timestamp_field?: string | undefined; indices?: string[] | undefined; aliases?: string[] | undefined; attributes?: ",
              "ResolveIndexResponseItemIndexAttrs",
              "[] | undefined; data_stream?: string | undefined; }"
            ],
            "path": "src/plugins/data_views/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.RuntimeField",
        "type": "Interface",
        "tags": [],
        "label": "RuntimeField",
        "description": [
          "\nThis is the RuntimeField interface enhanced with Data view field\nconfiguration: field format definition, customLabel or popularity."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeField",
            "text": "RuntimeField"
          },
          " extends ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldBase",
            "text": "RuntimeFieldBase"
          },
          ",",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldConfiguration",
            "text": "FieldConfiguration"
          }
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.RuntimeField.fields",
            "type": "Object",
            "tags": [],
            "label": "fields",
            "description": [
              "\nSubfields of composite field"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSubFields",
                "text": "RuntimeFieldSubFields"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.SavedObjectsClientCommon",
        "type": "Interface",
        "tags": [],
        "label": "SavedObjectsClientCommon",
        "description": [
          "\nCommon interface for the saved objects client"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.SavedObjectsClientCommon.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nSearch for saved objects"
            ],
            "signature": [
              "<T = unknown>(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.SavedObjectsClientCommonFindArgs",
                "text": "SavedObjectsClientCommonFindArgs"
              },
              ") => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<T>[]>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientCommon.find.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- options for search"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.SavedObjectsClientCommonFindArgs",
                    "text": "SavedObjectsClientCommonFindArgs"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.SavedObjectsClientCommon.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet a single saved object by id"
            ],
            "signature": [
              "<T = unknown>(type: string, id: string) => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<T>>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientCommon.get.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "- type of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientCommon.get.$2",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "- id of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.SavedObjectsClientCommon.update",
            "type": "Function",
            "tags": [],
            "label": "update",
            "description": [
              "\nUpdate a saved object by id"
            ],
            "signature": [
              "(type: string, id: string, attributes: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ", options: ",
              {
                "pluginId": "@kbn/core-saved-objects-api-browser",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                "section": "def-common.SavedObjectsUpdateOptions",
                "text": "SavedObjectsUpdateOptions"
              },
              "<unknown>) => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<unknown>>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientCommon.update.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "- type of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientCommon.update.$2",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "- id of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientCommon.update.$3",
                "type": "Object",
                "tags": [],
                "label": "attributes",
                "description": [
                  "- attributes to update"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientCommon.update.$4",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- client options"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-api-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                    "section": "def-common.SavedObjectsUpdateOptions",
                    "text": "SavedObjectsUpdateOptions"
                  },
                  "<unknown>"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.SavedObjectsClientCommon.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreate a saved object"
            ],
            "signature": [
              "(type: string, attributes: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ", options: ",
              {
                "pluginId": "@kbn/core-saved-objects-api-browser",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                "section": "def-common.SavedObjectsCreateOptions",
                "text": "SavedObjectsCreateOptions"
              },
              ") => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<unknown>>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientCommon.create.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "- type of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientCommon.create.$2",
                "type": "Object",
                "tags": [],
                "label": "attributes",
                "description": [
                  "- attributes to set"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientCommon.create.$3",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- client options"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-api-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                    "section": "def-common.SavedObjectsCreateOptions",
                    "text": "SavedObjectsCreateOptions"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.SavedObjectsClientCommon.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDelete a saved object by id"
            ],
            "signature": [
              "(type: string, id: string) => Promise<{}>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientCommon.delete.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "- type of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-public.SavedObjectsClientCommon.delete.$2",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "- id of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.Tag",
        "type": "Interface",
        "tags": [],
        "label": "Tag",
        "description": [],
        "path": "src/plugins/data_views/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-public.Tag.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "src/plugins/data_views/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.Tag.key",
            "type": "string",
            "tags": [],
            "label": "key",
            "description": [],
            "path": "src/plugins/data_views/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-public.Tag.color",
            "type": "string",
            "tags": [],
            "label": "color",
            "description": [],
            "path": "src/plugins/data_views/public/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewType",
        "type": "Enum",
        "tags": [],
        "label": "DataViewType",
        "description": [
          "\nData View type. Default or rollup"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.INDEX_PATTERN_TYPE",
        "type": "Enum",
        "tags": [],
        "label": "INDEX_PATTERN_TYPE",
        "description": [],
        "path": "src/plugins/data_views/public/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "dataViews",
        "id": "def-public.CONTAINS_SPACES_KEY",
        "type": "string",
        "tags": [],
        "label": "CONTAINS_SPACES_KEY",
        "description": [
          "\nError code for when an index pattern contains spaces"
        ],
        "signature": [
          "\"CONTAINS_SPACES\""
        ],
        "path": "src/plugins/data_views/common/lib/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DATA_VIEW_SAVED_OBJECT_TYPE",
        "type": "string",
        "tags": [],
        "label": "DATA_VIEW_SAVED_OBJECT_TYPE",
        "description": [
          "\nData view saved object type."
        ],
        "signature": [
          "\"index-pattern\""
        ],
        "path": "src/plugins/data_views/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.DataViewSpec",
        "type": "Type",
        "tags": [],
        "label": "DataViewSpec",
        "description": [
          "\nStatic data view format\nSerialized data object, representing data view attributes and state"
        ],
        "signature": [
          "{ id?: string | undefined; version?: string | undefined; title?: string | undefined; timeFieldName?: string | undefined; sourceFilters?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.SourceFilter",
            "text": "SourceFilter"
          },
          "[] | undefined; fields?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewFieldMap",
            "text": "DataViewFieldMap"
          },
          " | undefined; typeMeta?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.TypeMeta",
            "text": "TypeMeta"
          },
          " | undefined; type?: string | undefined; fieldFormats?: Record<string, ",
          {
            "pluginId": "fieldFormats",
            "scope": "common",
            "docId": "kibFieldFormatsPluginApi",
            "section": "def-common.SerializedFieldFormat",
            "text": "SerializedFieldFormat"
          },
          "<{}, ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">> | undefined; runtimeFieldMap?: Record<string, ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldSpec",
            "text": "RuntimeFieldSpec"
          },
          "> | undefined; fieldAttrs?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldAttrs",
            "text": "FieldAttrs"
          },
          " | undefined; allowNoIndex?: boolean | undefined; namespaces?: string[] | undefined; name?: string | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.FieldSpec",
        "type": "Type",
        "tags": [],
        "label": "FieldSpec",
        "description": [
          "\nSerialized version of DataViewField"
        ],
        "signature": [
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewFieldBase",
            "text": "DataViewFieldBase"
          },
          " & { count?: number | undefined; conflictDescriptions?: Record<string, string[]> | undefined; format?: ",
          {
            "pluginId": "fieldFormats",
            "scope": "common",
            "docId": "kibFieldFormatsPluginApi",
            "section": "def-common.SerializedFieldFormat",
            "text": "SerializedFieldFormat"
          },
          "<{}, ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          "> | undefined; esTypes?: string[] | undefined; searchable: boolean; aggregatable: boolean; readFromDocValues?: boolean | undefined; indexed?: boolean | undefined; customLabel?: string | undefined; runtimeField?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldSpec",
            "text": "RuntimeFieldSpec"
          },
          " | undefined; fixedInterval?: string[] | undefined; timeZone?: string[] | undefined; timeSeriesDimension?: boolean | undefined; timeSeriesMetric?: \"gauge\" | \"histogram\" | \"summary\" | \"counter\" | undefined; shortDotsEnable?: boolean | undefined; isMapped?: boolean | undefined; parentName?: string | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.ILLEGAL_CHARACTERS",
        "type": "Array",
        "tags": [],
        "label": "ILLEGAL_CHARACTERS",
        "description": [
          "\nAll characters disallowed in index patterns."
        ],
        "signature": [
          "string[]"
        ],
        "path": "src/plugins/data_views/common/lib/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.ILLEGAL_CHARACTERS_KEY",
        "type": "string",
        "tags": [],
        "label": "ILLEGAL_CHARACTERS_KEY",
        "description": [
          "\nError code for when an index pattern contains illegal characters"
        ],
        "signature": [
          "\"ILLEGAL_CHARACTERS\""
        ],
        "path": "src/plugins/data_views/common/lib/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.ILLEGAL_CHARACTERS_VISIBLE",
        "type": "Array",
        "tags": [],
        "label": "ILLEGAL_CHARACTERS_VISIBLE",
        "description": [
          "\nCharacters disallowed in index patterns that are visible."
        ],
        "signature": [
          "string[]"
        ],
        "path": "src/plugins/data_views/common/lib/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.META_FIELDS",
        "type": "string",
        "tags": [],
        "label": "META_FIELDS",
        "description": [
          "\nUiSettings key for metaFields list."
        ],
        "signature": [
          "\"metaFields\""
        ],
        "path": "src/plugins/data_views/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.RuntimeType",
        "type": "Type",
        "tags": [],
        "label": "RuntimeType",
        "description": [
          "\nRuntime field types"
        ],
        "signature": [
          "\"boolean\" | \"date\" | \"keyword\" | \"ip\" | \"geo_point\" | \"long\" | \"double\" | \"composite\""
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-public.TypeMeta",
        "type": "Type",
        "tags": [],
        "label": "TypeMeta",
        "description": [
          "\nInterface for metadata about rollup indices"
        ],
        "signature": [
          "{ aggs?: Record<string, ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.AggregationRestrictions",
            "text": "AggregationRestrictions"
          },
          "> | undefined; params?: { rollup_index: string; } | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "dataViews",
      "id": "def-public.DataViewsPublicPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "DataViewsPublicPluginSetup",
      "description": [
        "\nData plugin public Setup contract"
      ],
      "path": "src/plugins/data_views/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "dataViews",
      "id": "def-public.DataViewsContract",
      "type": "Type",
      "tags": [],
      "label": "DataViewsContract",
      "description": [],
      "signature": [
        {
          "pluginId": "dataViews",
          "scope": "public",
          "docId": "kibDataViewsPluginApi",
          "section": "def-public.DataViewsServicePublic",
          "text": "DataViewsServicePublic"
        }
      ],
      "path": "src/plugins/data_views/public/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "dataViews",
        "id": "def-server.DataView",
        "type": "Class",
        "tags": [],
        "label": "DataView",
        "description": [
          "\nData view class. Central kibana abstraction around multiple indices."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " implements ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewBase",
            "text": "DataViewBase"
          }
        ],
        "path": "src/plugins/data_views/common/data_views/data_view.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nSaved object id"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.title",
            "type": "string",
            "tags": [
              "deprecated"
            ],
            "label": "title",
            "description": [
              "\nTitle of data view"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/types.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/containers/detection_engine/rules/use_rule_from_timeline.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/containers/detection_engine/exceptions/get_es_query_filter.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/utils.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/store/middleware.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/get_query_filter.ts"
              },
              {
                "plugin": "timelines",
                "path": "x-pack/plugins/timelines/public/mock/index_pattern.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/mock/index_pattern.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "threatIntelligence",
                "path": "x-pack/plugins/threat_intelligence/public/common/mocks/mock_security_context.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detection_engine/rule_exceptions/components/flyout_components/alerts_actions/utils.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/expressions/kibana_context.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/expressions/kibana_context.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/expressions/kibana_context.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/build_es_query.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_combined_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_kuery.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_nested_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/build_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/exists_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/get_filter_field.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrase_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrase_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrases_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/ast/ast.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/and.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/exists.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/is.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/nested.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/not.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/or.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/range.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/node_types/function.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/utils/get_full_field_name_node.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/search_source/inspect/inspector_stats.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/tabify/response_writer.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/param_types/field.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/public/query/filter_manager/lib/get_display_value.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/public/search/errors/painless_error.tsx"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/autocomplete/providers/value_suggestion_provider.ts"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/query_string_input/fetch_index_patterns.ts"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/dataview_picker/change_dataview.tsx"
              },
              {
                "plugin": "triggersActionsUi",
                "path": "x-pack/plugins/triggers_actions_ui/public/common/lib/data_apis.ts"
              },
              {
                "plugin": "savedObjectsManagement",
                "path": "src/plugins/saved_objects_management/public/management_section/objects_table/components/flyout.tsx"
              },
              {
                "plugin": "savedObjectsManagement",
                "path": "src/plugins/saved_objects_management/public/management_section/objects_table/components/flyout.tsx"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/options_list/options_list_service.ts"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/options_list/options_list_service.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/services/field_stats/load_field_stats.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/common/utils/field_existing_utils.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/hooks/use_existing_fields.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/hooks/use_existing_fields.ts"
              },
              {
                "plugin": "lens",
                "path": "x-pack/plugins/lens/public/data_views_service/loader.ts"
              },
              {
                "plugin": "lens",
                "path": "x-pack/plugins/lens/public/app_plugin/lens_top_nav.tsx"
              },
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/application/main/components/no_results/no_results_suggestions/use_fetch_occurances_range.ts"
              },
              {
                "plugin": "aiops",
                "path": "x-pack/plugins/aiops/public/components/log_categorization/log_categorization_page.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/data_frame_analytics/index_patterns.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/job_service/new_job_caps/rollup.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/lib/alerts/alerting_service.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/data_recognizer/data_recognizer.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/log_views/resolved_log_view.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/get_fields.ts"
              },
              {
                "plugin": "apm",
                "path": "x-pack/plugins/apm/server/routes/data_view/create_static_data_view.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/utils/observability_data_views/observability_data_views.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/columns/report_definition_field.tsx"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/use_filter_values.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/columns/filter_value_btn.tsx"
              },
              {
                "plugin": "dataVisualizer",
                "path": "x-pack/plugins/data_visualizer/public/application/index_data_visualizer/hooks/use_data_visualizer_grid_data.ts"
              },
              {
                "plugin": "dataVisualizer",
                "path": "x-pack/plugins/data_visualizer/public/application/index_data_visualizer/components/index_data_visualizer_view/index_data_visualizer_view.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_details.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/datavisualizer/index_based/data_loader/data_loader.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/page.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/action_clone/clone_action_name.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/common/job_creator/job_creator.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/common/results_loader/categorization_examples_loader.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/index_or_search/preconfigured_job_redirect.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/components/pick_fields_step/components/bucket_span_estimator/estimate_bucket_span.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/components/datafeed_step/components/data_view/change_data_view.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_exploration/components/outlier_exploration/use_outlier_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_exploration/components/exploration_results_table/use_exploration_results.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/source_selection/source_selection.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/embeddables/anomaly_charts/anomaly_charts_embeddable.tsx"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "fleet",
                "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/filter_dataset.tsx"
              },
              {
                "plugin": "fleet",
                "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/filter_log_level.tsx"
              },
              {
                "plugin": "fleet",
                "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/query_bar.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/services/kibana/data_views.ts"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/services/kibana/data_views.ts"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/datasource/datasource_component.js"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.sagas.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/persistence.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/persistence.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/sourcerer/create_sourcerer_data_view.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/sourcerer/create_sourcerer_data_view.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/rules/eql_query_bar/validators.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/rules/step_define_rule/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detection_engine/rule_details_ui/pages/rule_details/index.tsx"
              },
              {
                "plugin": "timelines",
                "path": "x-pack/plugins/timelines/server/search_strategy/index_fields/index.ts"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/components/data_view_select_popover.tsx"
              },
              {
                "plugin": "synthetics",
                "path": "x-pack/plugins/synthetics/public/legacy_uptime/components/overview/filter_group/filter_group.tsx"
              },
              {
                "plugin": "synthetics",
                "path": "x-pack/plugins/synthetics/public/legacy_uptime/components/overview/alerts/monitor_expressions/filters_expression_select.tsx"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/common/filter_agg/components/filter_term_form.tsx"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/hooks/use_search_items/common.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/services/es_index_service.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/server/routes/api/transforms.ts"
              },
              {
                "plugin": "upgradeAssistant",
                "path": "x-pack/plugins/upgrade_assistant/public/application/components/es_deprecation_logs/fix_deprecation_logs/external_links.tsx"
              },
              {
                "plugin": "ux",
                "path": "x-pack/plugins/ux/public/components/app/rum_dashboard/local_uifilters/use_data_view.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.test.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.test.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/services/new_job_capabilities/remove_nested_field_children.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_kpi.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_with_reference_lines.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/test_formula_metric_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/lens_attributes/single_metric_attributes.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/lens_attributes/single_metric_attributes.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/mobile_test_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_cwv.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/common/common.test.ts"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/data_views/data_views.story.ts"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/components/scripting_help/test_script.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/field_editor.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/create_edit_field/create_edit_field.tsx"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/list_control_factory.ts"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/range_control_factory.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/server/routes/field_stats.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/server/routes/field_stats.ts"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/controls/field.tsx"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/controls/field.tsx"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/agg_select.tsx"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/test_utils/get_index_pattern_mock.ts"
              },
              {
                "plugin": "presentationUtil",
                "path": "src/plugins/presentation_util/public/services/data_views/data_views.story.ts"
              },
              {
                "plugin": "visTypeTimelion",
                "path": "src/plugins/vis_types/timelion/public/helpers/arg_value_suggestions.ts"
              },
              {
                "plugin": "visTypeTimelion",
                "path": "src/plugins/vis_types/timelion/public/helpers/arg_value_suggestions.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/components/lib/convert_series_to_datatable.ts"
              },
              {
                "plugin": "visTypeVega",
                "path": "src/plugins/vis_types/vega/public/data_model/search_api.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/agg_config.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/_terms_other_bucket_helper.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/multi_terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/multi_terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/rare_terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/public/query/filter_manager/lib/get_display_value.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/components/lib/convert_series_to_datatable.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/lib/cached_index_pattern_fetcher.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/lib/cached_index_pattern_fetcher.test.ts"
              },
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/application/main/hooks/use_text_based_query_language.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/metrics/hosts/hooks/use_data_view.test.ts"
              }
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.fieldFormatMap",
            "type": "Object",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [
              "\nMap of field formats by field name"
            ],
            "signature": [
              "{ [x: string]: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nOnly used by rollup indices, used by rollup specific endpoint to load field list."
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.fields",
            "type": "CompoundType",
            "tags": [],
            "label": "fields",
            "description": [
              "\nField list, in extended array format"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.IIndexPatternFieldList",
                "text": "IIndexPatternFieldList"
              },
              " & { toSpec: () => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              },
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [
              "\nTimestamp field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nType is used to identify rollup index patterns."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.flattenHit",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "flattenHit",
            "description": [],
            "signature": [
              "(hit: Record<string, unknown[]>, deep?: boolean | undefined) => Record<string, unknown>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
              }
            ],
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.flattenHit.$1",
                "type": "Object",
                "tags": [],
                "label": "hit",
                "description": [],
                "signature": [
                  "{ [x: string]: unknown[]; }"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.flattenHit.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "deep",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.metaFields",
            "type": "Array",
            "tags": [],
            "label": "metaFields",
            "description": [
              "\nList of meta fields by name"
            ],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.version",
            "type": "string",
            "tags": [],
            "label": "version",
            "description": [
              "\nSavedObject version"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.sourceFilters",
            "type": "Array",
            "tags": [],
            "label": "sourceFilters",
            "description": [
              "\nArray of filters - hides fields in discover"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.SourceFilter",
                "text": "SourceFilter"
              },
              "[] | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nArray of namespace ids"
            ],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.allowNoIndex",
            "type": "boolean",
            "tags": [],
            "label": "allowNoIndex",
            "description": [
              "\nPrevents errors when index pattern exists before indices"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nName of the data view. Human readable name used to differentiate data view."
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.matchedIndices",
            "type": "Array",
            "tags": [],
            "label": "matchedIndices",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [
                  "- config data and dependencies"
                ],
                "signature": [
                  "DataViewDeps"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getName",
            "type": "Function",
            "tags": [],
            "label": "getName",
            "description": [
              "\nGet name of Data View"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getIndexPattern",
            "description": [
              "\nGet index pattern"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "index pattern string"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.setIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "setIndexPattern",
            "description": [
              "\nSet index pattern"
            ],
            "signature": [
              "(indexPattern: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.setIndexPattern.$1",
                "type": "string",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getOriginalSavedObjectBody",
            "description": [
              "\nGet last saved saved object fields"
            ],
            "signature": [
              "() => { fieldAttrs?: string | undefined; title?: string | undefined; timeFieldName?: string | undefined; fields?: string | undefined; sourceFilters?: string | undefined; fieldFormatMap?: string | undefined; typeMeta?: string | undefined; type?: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.resetOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "resetOriginalSavedObjectBody",
            "description": [
              "\nReset last saved saved object fields. Used after saving."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "getFieldAttrs",
            "description": [
              "\nReturns field attributes map"
            ],
            "signature": [
              "() => { [x: string]: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getComputedFields",
            "type": "Function",
            "tags": [],
            "label": "getComputedFields",
            "description": [
              "\nReturns scripted fields"
            ],
            "signature": [
              "() => { storedFields: string[]; scriptFields: Record<string, ",
              "ScriptField",
              ">; docvalueFields: { field: string; format: string; }[]; runtimeFields: ",
              "MappingRuntimeFields",
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.isPersisted",
            "type": "Function",
            "tags": [],
            "label": "isPersisted",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [
              "\nCreates static representation of the data view."
            ],
            "signature": [
              "(includeFields?: boolean) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.toSpec.$1",
                "type": "boolean",
                "tags": [],
                "label": "includeFields",
                "description": [
                  "Whether or not to include the `fields` list as part of this spec. If not included, the list\nwill be fetched from Elasticsearch when instantiating a new Data View with this spec."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getSourceFiltering",
            "type": "Function",
            "tags": [],
            "label": "getSourceFiltering",
            "description": [
              "\nGet the source filtering configuration for that index."
            ],
            "signature": [
              "() => { excludes: string[]; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.removeScriptedField",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "removeScriptedField",
            "description": [
              "\nRemoves scripted field from field list."
            ],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/field_editor.tsx"
              }
            ],
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.removeScriptedField.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of scripted field to remove"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getNonScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getNonScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/strategies/abstract_search_strategy.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/source_filters_table/components/table/table.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/lib/fetch_fields.ts"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.isTSDBMode",
            "type": "Function",
            "tags": [],
            "label": "isTSDBMode",
            "description": [
              "\nreturns true if dataview contains TSDB fields"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.isTimeBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeBased",
            "description": [
              "\nDoes the data view have a timestamp field?"
            ],
            "signature": [
              "() => this is ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TimeBasedDataView",
                "text": "TimeBasedDataView"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.isTimeNanosBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeNanosBased",
            "description": [
              "\nDoes the data view have a timestamp field and is it a date nanos field?"
            ],
            "signature": [
              "() => this is ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TimeBasedDataView",
                "text": "TimeBasedDataView"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getTimeField",
            "type": "Function",
            "tags": [],
            "label": "getTimeField",
            "description": [
              "\nGet timestamp field as DataViewField or return undefined"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getFieldByName",
            "type": "Function",
            "tags": [],
            "label": "getFieldByName",
            "description": [
              "\nGet field by name."
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.getFieldByName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getAggregationRestrictions",
            "type": "Function",
            "tags": [],
            "label": "getAggregationRestrictions",
            "description": [
              "\nGet aggregation restrictions. Rollup fields can only perform a subset of aggregations."
            ],
            "signature": [
              "() => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.AggregationRestrictions",
                "text": "AggregationRestrictions"
              },
              "> | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getAsSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getAsSavedObjectBody",
            "description": [
              "\nReturns index pattern as saved object body for saving"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getFormatterForField",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForField",
            "description": [
              "\nProvide a field, get its formatter"
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.getFormatterForField.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [
                  "field to get formatter for"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewField",
                    "text": "DataViewField"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.addRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "addRuntimeField",
            "description": [
              "\nAdd a runtime field - Appended to existing mapped field or a new field is\ncreated as appropriate."
            ],
            "signature": [
              "(name: string, runtimeField: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ") => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.addRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.addRuntimeField.$2",
                "type": "Object",
                "tags": [],
                "label": "runtimeField",
                "description": [
                  "Runtime field definition"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.hasRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "hasRuntimeField",
            "description": [
              "\nChecks if runtime field exists"
            ],
            "signature": [
              "(name: string) => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.hasRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "getRuntimeField",
            "description": [
              "\nReturns runtime field if exists"
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              " | null"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.getRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Runtime field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getAllRuntimeFields",
            "type": "Function",
            "tags": [],
            "label": "getAllRuntimeFields",
            "description": [
              "\nGet all runtime field definitions.\nNOTE: this does not strip out runtime fields that match mapped field names"
            ],
            "signature": [
              "() => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "map of runtime field definitions by field name"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getFieldsByRuntimeFieldName",
            "type": "Function",
            "tags": [],
            "label": "getFieldsByRuntimeFieldName",
            "description": [
              "\nReturns data view fields backed by runtime fields."
            ],
            "signature": [
              "(name: string) => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "> | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.getFieldsByRuntimeFieldName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "runtime field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "map of DataViewFields (that are runtime fields) by field name"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.replaceAllRuntimeFields",
            "type": "Function",
            "tags": [],
            "label": "replaceAllRuntimeFields",
            "description": [
              "\nReplaces all existing runtime fields with new fields."
            ],
            "signature": [
              "(newFields: Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.replaceAllRuntimeFields.$1",
                "type": "Object",
                "tags": [],
                "label": "newFields",
                "description": [
                  "Map of runtime field definitions by field name"
                ],
                "signature": [
                  "Record<string, ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.removeRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "removeRuntimeField",
            "description": [
              "\nRemove a runtime field - removed from mapped field or removed unmapped\nfield as appropriate. Doesn't clear associated field attributes."
            ],
            "signature": [
              "(name: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.removeRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "- Field name to remove"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getRuntimeMappings",
            "type": "Function",
            "tags": [],
            "label": "getRuntimeMappings",
            "description": [
              "\nReturn the \"runtime_mappings\" section of the ES search query."
            ],
            "signature": [
              "() => ",
              "MappingRuntimeFields"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.getFormatterForFieldNoDefault",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForFieldNoDefault",
            "description": [
              "\nGet formatter for a given field name. Return undefined if none exists."
            ],
            "signature": [
              "(fieldname: string) => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.getFormatterForFieldNoDefault.$1",
                "type": "string",
                "tags": [],
                "label": "fieldname",
                "description": [
                  "name of field to get formatter for"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.setFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "setFieldAttrs",
            "description": [
              "\nSet field attribute"
            ],
            "signature": [
              "<K extends keyof ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              ">(fieldName: string, attrName: K, value: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "[K]) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.setFieldAttrs.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set attribute on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.setFieldAttrs.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "attrName",
                "description": [
                  "name of attribute to set"
                ],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.setFieldAttrs.$3",
                "type": "Uncategorized",
                "tags": [],
                "label": "value",
                "description": [
                  "value of attribute"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldAttrSet",
                    "text": "FieldAttrSet"
                  },
                  "[K]"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.setFieldCustomLabel",
            "type": "Function",
            "tags": [],
            "label": "setFieldCustomLabel",
            "description": [
              "\nSet field custom label"
            ],
            "signature": [
              "(fieldName: string, customLabel: string | null | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.setFieldCustomLabel.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set custom label on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.setFieldCustomLabel.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "customLabel",
                "description": [
                  "custom label value. If undefined, custom label is removed"
                ],
                "signature": [
                  "string | null | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.setFieldCount",
            "type": "Function",
            "tags": [],
            "label": "setFieldCount",
            "description": [
              "\nSet field count"
            ],
            "signature": [
              "(fieldName: string, count: number | null | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.setFieldCount.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set count on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.setFieldCount.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "count",
                "description": [
                  "count value. If undefined, count is removed"
                ],
                "signature": [
                  "number | null | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.setFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "setFieldFormat",
            "description": [
              "\nSet field formatter"
            ],
            "signature": [
              "(fieldName: string, format: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.setFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set format on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.setFieldFormat.$2",
                "type": "Object",
                "tags": [],
                "label": "format",
                "description": [
                  "field format in serialized form"
                ],
                "signature": [
                  {
                    "pluginId": "fieldFormats",
                    "scope": "common",
                    "docId": "kibFieldFormatsPluginApi",
                    "section": "def-common.SerializedFieldFormat",
                    "text": "SerializedFieldFormat"
                  },
                  "<{}, ",
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "common",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-common.SerializableRecord",
                    "text": "SerializableRecord"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataView.deleteFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "deleteFieldFormat",
            "description": [
              "\nRemove field format from the field format map."
            ],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataView.deleteFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "field name associated with the format for removal"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.DataViewsServerPlugin",
        "type": "Class",
        "tags": [],
        "label": "DataViewsServerPlugin",
        "description": [],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "server",
            "docId": "kibDataViewsPluginApi",
            "section": "def-server.DataViewsServerPlugin",
            "text": "DataViewsServerPlugin"
          },
          " implements ",
          {
            "pluginId": "@kbn/core-plugins-server",
            "scope": "common",
            "docId": "kibKbnCorePluginsServerPluginApi",
            "section": "def-common.Plugin",
            "text": "Plugin"
          },
          "<",
          {
            "pluginId": "dataViews",
            "scope": "server",
            "docId": "kibDataViewsPluginApi",
            "section": "def-server.DataViewsServerPluginSetup",
            "text": "DataViewsServerPluginSetup"
          },
          ", ",
          {
            "pluginId": "dataViews",
            "scope": "server",
            "docId": "kibDataViewsPluginApi",
            "section": "def-server.DataViewsServerPluginStart",
            "text": "DataViewsServerPluginStart"
          },
          ", ",
          {
            "pluginId": "dataViews",
            "scope": "server",
            "docId": "kibDataViewsPluginApi",
            "section": "def-server.DataViewsServerPluginSetupDependencies",
            "text": "DataViewsServerPluginSetupDependencies"
          },
          ", ",
          {
            "pluginId": "dataViews",
            "scope": "server",
            "docId": "kibDataViewsPluginApi",
            "section": "def-server.DataViewsServerPluginStartDependencies",
            "text": "DataViewsServerPluginStartDependencies"
          },
          ">"
        ],
        "path": "src/plugins/data_views/server/plugin.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsServerPlugin.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsServerPlugin.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "initializerContext",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-plugins-server",
                    "scope": "common",
                    "docId": "kibKbnCorePluginsServerPluginApi",
                    "section": "def-common.PluginInitializerContext",
                    "text": "PluginInitializerContext"
                  },
                  "<unknown>"
                ],
                "path": "src/plugins/data_views/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsServerPlugin.setup",
            "type": "Function",
            "tags": [],
            "label": "setup",
            "description": [],
            "signature": [
              "(core: ",
              {
                "pluginId": "@kbn/core-lifecycle-server",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleServerPluginApi",
                "section": "def-common.CoreSetup",
                "text": "CoreSetup"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "server",
                "docId": "kibDataViewsPluginApi",
                "section": "def-server.DataViewsServerPluginStartDependencies",
                "text": "DataViewsServerPluginStartDependencies"
              },
              ", ",
              {
                "pluginId": "dataViews",
                "scope": "server",
                "docId": "kibDataViewsPluginApi",
                "section": "def-server.DataViewsServerPluginStart",
                "text": "DataViewsServerPluginStart"
              },
              ">, { expressions, usageCollection }: ",
              {
                "pluginId": "dataViews",
                "scope": "server",
                "docId": "kibDataViewsPluginApi",
                "section": "def-server.DataViewsServerPluginSetupDependencies",
                "text": "DataViewsServerPluginSetupDependencies"
              },
              ") => {}"
            ],
            "path": "src/plugins/data_views/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsServerPlugin.setup.$1",
                "type": "Object",
                "tags": [],
                "label": "core",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-server",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleServerPluginApi",
                    "section": "def-common.CoreSetup",
                    "text": "CoreSetup"
                  },
                  "<",
                  {
                    "pluginId": "dataViews",
                    "scope": "server",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-server.DataViewsServerPluginStartDependencies",
                    "text": "DataViewsServerPluginStartDependencies"
                  },
                  ", ",
                  {
                    "pluginId": "dataViews",
                    "scope": "server",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-server.DataViewsServerPluginStart",
                    "text": "DataViewsServerPluginStart"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsServerPlugin.setup.$2",
                "type": "Object",
                "tags": [],
                "label": "{ expressions, usageCollection }",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "server",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-server.DataViewsServerPluginSetupDependencies",
                    "text": "DataViewsServerPluginSetupDependencies"
                  }
                ],
                "path": "src/plugins/data_views/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsServerPlugin.start",
            "type": "Function",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "({ uiSettings, capabilities }: ",
              {
                "pluginId": "@kbn/core-lifecycle-server",
                "scope": "common",
                "docId": "kibKbnCoreLifecycleServerPluginApi",
                "section": "def-common.CoreStart",
                "text": "CoreStart"
              },
              ", { fieldFormats }: ",
              {
                "pluginId": "dataViews",
                "scope": "server",
                "docId": "kibDataViewsPluginApi",
                "section": "def-server.DataViewsServerPluginStartDependencies",
                "text": "DataViewsServerPluginStartDependencies"
              },
              ") => { dataViewsServiceFactory: (savedObjectsClient: ",
              {
                "pluginId": "@kbn/core-saved-objects-api-server",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
                "section": "def-common.SavedObjectsClientContract",
                "text": "SavedObjectsClientContract"
              },
              ", elasticsearchClient: ",
              {
                "pluginId": "@kbn/core-elasticsearch-server",
                "scope": "common",
                "docId": "kibKbnCoreElasticsearchServerPluginApi",
                "section": "def-common.ElasticsearchClient",
                "text": "ElasticsearchClient"
              },
              ", request?: ",
              {
                "pluginId": "@kbn/core-http-server",
                "scope": "common",
                "docId": "kibKbnCoreHttpServerPluginApi",
                "section": "def-common.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any> | undefined, byPassCapabilities?: boolean | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewsService",
                "text": "DataViewsService"
              },
              ">; }"
            ],
            "path": "src/plugins/data_views/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsServerPlugin.start.$1",
                "type": "Object",
                "tags": [],
                "label": "{ uiSettings, capabilities }",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-lifecycle-server",
                    "scope": "common",
                    "docId": "kibKbnCoreLifecycleServerPluginApi",
                    "section": "def-common.CoreStart",
                    "text": "CoreStart"
                  }
                ],
                "path": "src/plugins/data_views/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsServerPlugin.start.$2",
                "type": "Object",
                "tags": [],
                "label": "{ fieldFormats }",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "server",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-server.DataViewsServerPluginStartDependencies",
                    "text": "DataViewsServerPluginStartDependencies"
                  }
                ],
                "path": "src/plugins/data_views/server/plugin.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsServerPlugin.stop",
            "type": "Function",
            "tags": [],
            "label": "stop",
            "description": [],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/server/plugin.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.DataViewsService",
        "type": "Class",
        "tags": [],
        "label": "DataViewsService",
        "description": [
          "\nData views service, providing CRUD operations for data views."
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.getCanSave",
            "type": "Function",
            "tags": [],
            "label": "getCanSave",
            "description": [
              "\nCan the user save data views?"
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nDataViewsService constructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "deps",
                "description": [
                  "Service dependencies"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewsServiceDeps",
                    "text": "DataViewsServiceDeps"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.getIds",
            "type": "Function",
            "tags": [],
            "label": "getIds",
            "description": [
              "\nGets list of index pattern ids."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.getIds.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.getTitles",
            "type": "Function",
            "tags": [],
            "label": "getTitles",
            "description": [
              "\nGets list of index pattern titles."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.getTitles.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nFind and load index patterns by title."
            ],
            "signature": [
              "(search: string, size?: number) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.find.$1",
                "type": "string",
                "tags": [],
                "label": "search",
                "description": [
                  "Search string"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.find.$2",
                "type": "number",
                "tags": [],
                "label": "size",
                "description": [
                  "Number of data views to return"
                ],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataView[]"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.getIdsWithTitle",
            "type": "Function",
            "tags": [],
            "label": "getIdsWithTitle",
            "description": [
              "\nGets list of index pattern ids with titles."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewListItem",
                "text": "DataViewListItem"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.getIdsWithTitle.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.clearCache",
            "type": "Function",
            "tags": [],
            "label": "clearCache",
            "description": [
              "\nClear index pattern saved objects cache."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.clearInstanceCache",
            "type": "Function",
            "tags": [],
            "label": "clearInstanceCache",
            "description": [
              "\nClear index pattern instance cache"
            ],
            "signature": [
              "(id?: string | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.clearInstanceCache.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.getCache",
            "type": "Function",
            "tags": [],
            "label": "getCache",
            "description": [
              "\nGet cache, contains data view saved objects."
            ],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSavedObjectAttrs",
                "text": "DataViewSavedObjectAttrs"
              },
              ">[] | null | undefined>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.getDefault",
            "type": "Function",
            "tags": [],
            "label": "getDefault",
            "description": [
              "\nGet default index pattern"
            ],
            "signature": [
              "(displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.getDefault.$1",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.getDefaultId",
            "type": "Function",
            "tags": [],
            "label": "getDefaultId",
            "description": [
              "\nGet default index pattern id"
            ],
            "signature": [
              "() => Promise<string | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.setDefault",
            "type": "Function",
            "tags": [],
            "label": "setDefault",
            "description": [
              "\nOptionally set default index pattern, unless force = true"
            ],
            "signature": [
              "(id: string | null, force?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.setDefault.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "id",
                "description": [
                  "data view id"
                ],
                "signature": [
                  "string | null"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.setDefault.$2",
                "type": "boolean",
                "tags": [],
                "label": "force",
                "description": [
                  "set default data view even if there's an existing default"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.hasUserDataView",
            "type": "Function",
            "tags": [],
            "label": "hasUserDataView",
            "description": [
              "\nChecks if current user has a user created index pattern ignoring fleet's server default index patterns."
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.getFieldsForWildcard",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForWildcard",
            "description": [
              "\nGet field list by providing { pattern }."
            ],
            "signature": [
              "(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              ") => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "options for getting field list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.getFieldsForIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForIndexPattern",
            "description": [
              "\nGet field list by providing an index patttern (or spec)."
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", options?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.getFieldsForIndexPattern.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.getFieldsForIndexPattern.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "options for getting field list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.refreshFields",
            "type": "Function",
            "tags": [],
            "label": "refreshFields",
            "description": [
              "\nRefresh field list for a given index pattern."
            ],
            "signature": [
              "(dataView: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", displayErrors?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.refreshFields.$1",
                "type": "Object",
                "tags": [],
                "label": "dataView",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.refreshFields.$2",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.fieldArrayToMap",
            "type": "Function",
            "tags": [],
            "label": "fieldArrayToMap",
            "description": [
              "\nConverts field array to map."
            ],
            "signature": [
              "(fields: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[], fieldAttrs?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrs",
                "text": "FieldAttrs"
              },
              " | undefined) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.fieldArrayToMap.$1",
                "type": "Array",
                "tags": [],
                "label": "fields",
                "description": [
                  ": FieldSpec[]"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  "[]"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.fieldArrayToMap.$2",
                "type": "Object",
                "tags": [],
                "label": "fieldAttrs",
                "description": [
                  ": FieldAttrs"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldAttrs",
                    "text": "FieldAttrs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "Record<string, FieldSpec>"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.savedObjectToSpec",
            "type": "Function",
            "tags": [],
            "label": "savedObjectToSpec",
            "description": [
              "\nConverts data view saved object to data view spec."
            ],
            "signature": [
              "(savedObject: ",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ">) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.savedObjectToSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "savedObject",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-common",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                    "section": "def-common.SavedObject",
                    "text": "SavedObject"
                  },
                  "<",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataViewSpec"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet an index pattern by id, cache optimized."
            ],
            "signature": [
              "(id: string, displayErrors?: boolean, refreshFields?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.get.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.get.$2",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.get.$3",
                "type": "boolean",
                "tags": [],
                "label": "refreshFields",
                "description": [
                  "- If set true, will fetch fields from the index pattern"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreate data view instance."
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.create.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [
                  "data view spec"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.create.$2",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "if true, will not fetch fields"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.create.$3",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataView"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.createAndSave",
            "type": "Function",
            "tags": [],
            "label": "createAndSave",
            "description": [
              "\nCreate a new data view and save it right away."
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", override?: boolean, skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.createAndSave.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [
                  "data view spec"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.createAndSave.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.createAndSave.$3",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "Whether to skip field refresh step."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.createAndSave.$4",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.createSavedObject",
            "type": "Function",
            "tags": [],
            "label": "createSavedObject",
            "description": [
              "\nSave a new data view."
            ],
            "signature": [
              "(dataView: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", override?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.createSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "dataView",
                "description": [
                  "data view instance"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.createSavedObject.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.createSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.updateSavedObject",
            "type": "Function",
            "tags": [],
            "label": "updateSavedObject",
            "description": [
              "\nSave existing data view. Will attempt to merge differences if there are conflicts."
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", saveAttempts?: number, ignoreErrors?: boolean, displayErrors?: boolean) => Promise<void | Error | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.updateSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.updateSavedObject.$2",
                "type": "number",
                "tags": [],
                "label": "saveAttempts",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.updateSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "ignoreErrors",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.updateSavedObject.$4",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDeletes an index pattern from .kibana index."
            ],
            "signature": [
              "(indexPatternId: string) => Promise<{}>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.delete.$1",
                "type": "string",
                "tags": [],
                "label": "indexPatternId",
                "description": [
                  ": Id of kibana Index Pattern to delete"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsService.getDefaultDataView",
            "type": "Function",
            "tags": [],
            "label": "getDefaultDataView",
            "description": [
              "\nReturns the default data view as an object.\nIf no default is found, or it is missing\nanother data view is selected as default and returned.\nIf no possible data view found to become a default returns null.\n"
            ],
            "signature": [
              "(refreshFields?: boolean | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.DataViewsService.getDefaultDataView.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "refreshFields",
                "description": [
                  "- if true, will refresh the fields of the default data view"
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "default data view"
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.IndexPatternsFetcher",
        "type": "Class",
        "tags": [],
        "label": "IndexPatternsFetcher",
        "description": [],
        "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.IndexPatternsFetcher.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.IndexPatternsFetcher.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "elasticsearchClient",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-elasticsearch-server",
                    "scope": "common",
                    "docId": "kibKbnCoreElasticsearchServerPluginApi",
                    "section": "def-common.ElasticsearchClient",
                    "text": "ElasticsearchClient"
                  }
                ],
                "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.IndexPatternsFetcher.Unnamed.$2",
                "type": "boolean",
                "tags": [],
                "label": "allowNoIndices",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard",
            "type": "Function",
            "tags": [
              "property",
              "property",
              "return"
            ],
            "label": "getFieldsForWildcard",
            "description": [
              "\n Get a list of field objects for an index pattern that may contain wildcards\n"
            ],
            "signature": [
              "(options: { pattern: string | string[]; metaFields?: string[] | undefined; fieldCapsOptions?: { allow_no_indices: boolean; includeUnmapped?: boolean | undefined; } | undefined; type?: string | undefined; rollupIndex?: string | undefined; indexFilter?: ",
              "QueryDslQueryContainer",
              " | undefined; fields?: string[] | undefined; }) => Promise<{ fields: ",
              {
                "pluginId": "dataViews",
                "scope": "server",
                "docId": "kibDataViewsPluginApi",
                "section": "def-server.FieldDescriptor",
                "text": "FieldDescriptor"
              },
              "[]; indices: string[]; }>"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "dataViews",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.pattern",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "pattern",
                    "description": [],
                    "signature": [
                      "string | string[]"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "dataViews",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.metaFields",
                    "type": "Array",
                    "tags": [],
                    "label": "metaFields",
                    "description": [],
                    "signature": [
                      "string[] | undefined"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "dataViews",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.fieldCapsOptions",
                    "type": "Object",
                    "tags": [],
                    "label": "fieldCapsOptions",
                    "description": [],
                    "signature": [
                      "{ allow_no_indices: boolean; includeUnmapped?: boolean | undefined; } | undefined"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "dataViews",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.type",
                    "type": "string",
                    "tags": [],
                    "label": "type",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "dataViews",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.rollupIndex",
                    "type": "string",
                    "tags": [],
                    "label": "rollupIndex",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "dataViews",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.indexFilter",
                    "type": "Object",
                    "tags": [],
                    "label": "indexFilter",
                    "description": [],
                    "signature": [
                      "QueryDslQueryContainer",
                      " | undefined"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "dataViews",
                    "id": "def-server.IndexPatternsFetcher.getFieldsForWildcard.$1.fields",
                    "type": "Array",
                    "tags": [],
                    "label": "fields",
                    "description": [],
                    "signature": [
                      "string[] | undefined"
                    ],
                    "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.IndexPatternsFetcher.validatePatternListActive",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "validatePatternListActive",
            "description": [
              "\n Returns an index pattern list of only those index pattern strings in the given list that return indices\n"
            ],
            "signature": [
              "(patternList: string[]) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.IndexPatternsFetcher.validatePatternListActive.$1",
                "type": "Array",
                "tags": [],
                "label": "patternList",
                "description": [
                  "string[]"
                ],
                "signature": [
                  "string[]"
                ],
                "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "dataViews",
        "id": "def-server.dataViewsServiceFactory",
        "type": "Function",
        "tags": [],
        "label": "dataViewsServiceFactory",
        "description": [
          "\nCreates a new DataViewsService instance."
        ],
        "signature": [
          "(deps: DataViewsServiceFactoryDeps) => (savedObjectsClient: ",
          {
            "pluginId": "@kbn/core-saved-objects-api-server",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
            "section": "def-common.SavedObjectsClientContract",
            "text": "SavedObjectsClientContract"
          },
          ", elasticsearchClient: ",
          {
            "pluginId": "@kbn/core-elasticsearch-server",
            "scope": "common",
            "docId": "kibKbnCoreElasticsearchServerPluginApi",
            "section": "def-common.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          ", request?: ",
          {
            "pluginId": "@kbn/core-http-server",
            "scope": "common",
            "docId": "kibKbnCoreHttpServerPluginApi",
            "section": "def-common.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any> | undefined, byPassCapabilities?: boolean | undefined) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewsService",
            "text": "DataViewsService"
          },
          ">"
        ],
        "path": "src/plugins/data_views/server/data_views_service_factory.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.dataViewsServiceFactory.$1",
            "type": "Object",
            "tags": [],
            "label": "deps",
            "description": [
              "- Dependencies required by the DataViewsService"
            ],
            "signature": [
              "DataViewsServiceFactoryDeps"
            ],
            "path": "src/plugins/data_views/server/data_views_service_factory.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.findIndexPatternById",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "findIndexPatternById",
        "description": [],
        "signature": [
          "(savedObjectsClient: ",
          {
            "pluginId": "@kbn/core-saved-objects-api-server",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
            "section": "def-common.SavedObjectsClientContract",
            "text": "SavedObjectsClientContract"
          },
          ", index: string) => Promise<",
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObject",
            "text": "SavedObject"
          },
          "<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewAttributes",
            "text": "DataViewAttributes"
          },
          "> | undefined>"
        ],
        "path": "src/plugins/data_views/server/utils.ts",
        "deprecated": true,
        "trackAdoption": false,
        "references": [
          {
            "plugin": "unifiedSearch",
            "path": "src/plugins/unified_search/server/autocomplete/terms_enum.ts"
          },
          {
            "plugin": "unifiedSearch",
            "path": "src/plugins/unified_search/server/autocomplete/terms_enum.ts"
          },
          {
            "plugin": "unifiedSearch",
            "path": "src/plugins/unified_search/server/autocomplete/terms_agg.ts"
          },
          {
            "plugin": "unifiedSearch",
            "path": "src/plugins/unified_search/server/autocomplete/terms_agg.ts"
          }
        ],
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.findIndexPatternById.$1",
            "type": "Object",
            "tags": [],
            "label": "savedObjectsClient",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-saved-objects-api-server",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
                "section": "def-common.SavedObjectsClientContract",
                "text": "SavedObjectsClientContract"
              }
            ],
            "path": "src/plugins/data_views/server/utils.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.findIndexPatternById.$2",
            "type": "string",
            "tags": [],
            "label": "index",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/data_views/server/utils.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.getCapabilitiesForRollupIndices",
        "type": "Function",
        "tags": [],
        "label": "getCapabilitiesForRollupIndices",
        "description": [
          "\nGet rollup job capabilities"
        ],
        "signature": [
          "(indices: ",
          "RollupGetRollupIndexCapsResponse",
          ") => ",
          {
            "pluginId": "dataViews",
            "scope": "server",
            "docId": "kibDataViewsPluginApi",
            "section": "def-server.RollupIndexCapability",
            "text": "RollupIndexCapability"
          }
        ],
        "path": "src/plugins/data_views/server/fetcher/lib/map_capabilities.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.getCapabilitiesForRollupIndices.$1",
            "type": "Object",
            "tags": [],
            "label": "indices",
            "description": [
              "rollup job index capabilites"
            ],
            "signature": [
              "RollupGetRollupIndexCapsResponse"
            ],
            "path": "src/plugins/data_views/server/fetcher/lib/map_capabilities.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.getFieldByName",
        "type": "Function",
        "tags": [
          "deprecated"
        ],
        "label": "getFieldByName",
        "description": [],
        "signature": [
          "(fieldName: string, indexPattern: ",
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObject",
            "text": "SavedObject"
          },
          "<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewAttributes",
            "text": "DataViewAttributes"
          },
          ">) => ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          " | undefined"
        ],
        "path": "src/plugins/data_views/server/utils.ts",
        "deprecated": true,
        "trackAdoption": false,
        "references": [
          {
            "plugin": "unifiedSearch",
            "path": "src/plugins/unified_search/server/autocomplete/terms_enum.ts"
          },
          {
            "plugin": "unifiedSearch",
            "path": "src/plugins/unified_search/server/autocomplete/terms_enum.ts"
          },
          {
            "plugin": "unifiedSearch",
            "path": "src/plugins/unified_search/server/autocomplete/terms_agg.ts"
          },
          {
            "plugin": "unifiedSearch",
            "path": "src/plugins/unified_search/server/autocomplete/terms_agg.ts"
          }
        ],
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.getFieldByName.$1",
            "type": "string",
            "tags": [],
            "label": "fieldName",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "src/plugins/data_views/server/utils.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.getFieldByName.$2",
            "type": "Object",
            "tags": [],
            "label": "indexPattern",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ">"
            ],
            "path": "src/plugins/data_views/server/utils.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "dataViews",
        "id": "def-server.DataViewsServerPluginSetupDependencies",
        "type": "Interface",
        "tags": [],
        "label": "DataViewsServerPluginSetupDependencies",
        "description": [
          "\nData Views server setup dependencies"
        ],
        "path": "src/plugins/data_views/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsServerPluginSetupDependencies.fieldFormats",
            "type": "Object",
            "tags": [],
            "label": "fieldFormats",
            "description": [
              "\nFile formats"
            ],
            "signature": [
              {
                "pluginId": "fieldFormats",
                "scope": "server",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-server.FieldFormatsSetup",
                "text": "FieldFormatsSetup"
              }
            ],
            "path": "src/plugins/data_views/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsServerPluginSetupDependencies.expressions",
            "type": "Object",
            "tags": [],
            "label": "expressions",
            "description": [
              "\nExpressions"
            ],
            "signature": [
              {
                "pluginId": "expressions",
                "scope": "common",
                "docId": "kibExpressionsPluginApi",
                "section": "def-common.ExpressionsServiceSetup",
                "text": "ExpressionsServiceSetup"
              }
            ],
            "path": "src/plugins/data_views/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsServerPluginSetupDependencies.usageCollection",
            "type": "Object",
            "tags": [],
            "label": "usageCollection",
            "description": [
              "\nUsage collection"
            ],
            "signature": [
              {
                "pluginId": "usageCollection",
                "scope": "server",
                "docId": "kibUsageCollectionPluginApi",
                "section": "def-server.UsageCollectionSetup",
                "text": "UsageCollectionSetup"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.DataViewsServerPluginStartDependencies",
        "type": "Interface",
        "tags": [],
        "label": "DataViewsServerPluginStartDependencies",
        "description": [
          "\nData Views server start dependencies"
        ],
        "path": "src/plugins/data_views/server/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsServerPluginStartDependencies.fieldFormats",
            "type": "Object",
            "tags": [],
            "label": "fieldFormats",
            "description": [
              "\nField formats"
            ],
            "signature": [
              {
                "pluginId": "fieldFormats",
                "scope": "server",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-server.FieldFormatsStart",
                "text": "FieldFormatsStart"
              }
            ],
            "path": "src/plugins/data_views/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.DataViewsServerPluginStartDependencies.logger",
            "type": "Object",
            "tags": [],
            "label": "logger",
            "description": [
              "\nLogger"
            ],
            "signature": [
              {
                "pluginId": "@kbn/logging",
                "scope": "common",
                "docId": "kibKbnLoggingPluginApi",
                "section": "def-common.Logger",
                "text": "Logger"
              }
            ],
            "path": "src/plugins/data_views/server/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.FieldDescriptor",
        "type": "Interface",
        "tags": [],
        "label": "FieldDescriptor",
        "description": [],
        "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.FieldDescriptor.aggregatable",
            "type": "boolean",
            "tags": [],
            "label": "aggregatable",
            "description": [],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.FieldDescriptor.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.FieldDescriptor.readFromDocValues",
            "type": "boolean",
            "tags": [],
            "label": "readFromDocValues",
            "description": [],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.FieldDescriptor.searchable",
            "type": "boolean",
            "tags": [],
            "label": "searchable",
            "description": [],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.FieldDescriptor.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.FieldDescriptor.esTypes",
            "type": "Array",
            "tags": [],
            "label": "esTypes",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.FieldDescriptor.subType",
            "type": "Object",
            "tags": [],
            "label": "subType",
            "description": [],
            "signature": [
              "FieldSubType | undefined"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.FieldDescriptor.metadata_field",
            "type": "CompoundType",
            "tags": [],
            "label": "metadata_field",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.FieldDescriptor.fixedInterval",
            "type": "Array",
            "tags": [],
            "label": "fixedInterval",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.FieldDescriptor.timeZone",
            "type": "Array",
            "tags": [],
            "label": "timeZone",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.FieldDescriptor.timeSeriesMetric",
            "type": "CompoundType",
            "tags": [],
            "label": "timeSeriesMetric",
            "description": [],
            "signature": [
              "\"gauge\" | \"histogram\" | \"summary\" | \"counter\" | undefined"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.FieldDescriptor.timeSeriesDimension",
            "type": "CompoundType",
            "tags": [],
            "label": "timeSeriesDimension",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/server/fetcher/index_patterns_fetcher.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.RollupIndexCapability",
        "type": "Interface",
        "tags": [],
        "label": "RollupIndexCapability",
        "description": [
          "\nA record of capabilities (aggregations) for index rollup jobs"
        ],
        "path": "src/plugins/data_views/server/fetcher/lib/map_capabilities.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.RollupIndexCapability.Unnamed",
            "type": "IndexSignature",
            "tags": [],
            "label": "[index: string]: { aggs?: Dictionary<AggregationRestrictions> | undefined; error?: string | undefined; }",
            "description": [
              "\nA record of capabilities (aggregations) for an index rollup job"
            ],
            "signature": [
              "[index: string]:  { aggs?: ",
              "Dictionary",
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.AggregationRestrictions",
                "text": "AggregationRestrictions"
              },
              "> | undefined; error?: string | undefined; }"
            ],
            "path": "src/plugins/data_views/server/fetcher/lib/map_capabilities.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SavedObjectsClientCommon",
        "type": "Interface",
        "tags": [],
        "label": "SavedObjectsClientCommon",
        "description": [
          "\nCommon interface for the saved objects client"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-server.SavedObjectsClientCommon.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nSearch for saved objects"
            ],
            "signature": [
              "<T = unknown>(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.SavedObjectsClientCommonFindArgs",
                "text": "SavedObjectsClientCommonFindArgs"
              },
              ") => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<T>[]>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.SavedObjectsClientCommon.find.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- options for search"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.SavedObjectsClientCommonFindArgs",
                    "text": "SavedObjectsClientCommonFindArgs"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.SavedObjectsClientCommon.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet a single saved object by id"
            ],
            "signature": [
              "<T = unknown>(type: string, id: string) => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<T>>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.SavedObjectsClientCommon.get.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "- type of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.SavedObjectsClientCommon.get.$2",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "- id of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.SavedObjectsClientCommon.update",
            "type": "Function",
            "tags": [],
            "label": "update",
            "description": [
              "\nUpdate a saved object by id"
            ],
            "signature": [
              "(type: string, id: string, attributes: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ", options: ",
              {
                "pluginId": "@kbn/core-saved-objects-api-browser",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                "section": "def-common.SavedObjectsUpdateOptions",
                "text": "SavedObjectsUpdateOptions"
              },
              "<unknown>) => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<unknown>>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.SavedObjectsClientCommon.update.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "- type of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.SavedObjectsClientCommon.update.$2",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "- id of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.SavedObjectsClientCommon.update.$3",
                "type": "Object",
                "tags": [],
                "label": "attributes",
                "description": [
                  "- attributes to update"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.SavedObjectsClientCommon.update.$4",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- client options"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-api-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                    "section": "def-common.SavedObjectsUpdateOptions",
                    "text": "SavedObjectsUpdateOptions"
                  },
                  "<unknown>"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.SavedObjectsClientCommon.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreate a saved object"
            ],
            "signature": [
              "(type: string, attributes: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ", options: ",
              {
                "pluginId": "@kbn/core-saved-objects-api-browser",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                "section": "def-common.SavedObjectsCreateOptions",
                "text": "SavedObjectsCreateOptions"
              },
              ") => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<unknown>>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.SavedObjectsClientCommon.create.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "- type of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.SavedObjectsClientCommon.create.$2",
                "type": "Object",
                "tags": [],
                "label": "attributes",
                "description": [
                  "- attributes to set"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.SavedObjectsClientCommon.create.$3",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- client options"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-api-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                    "section": "def-common.SavedObjectsCreateOptions",
                    "text": "SavedObjectsCreateOptions"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-server.SavedObjectsClientCommon.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDelete a saved object by id"
            ],
            "signature": [
              "(type: string, id: string) => Promise<{}>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-server.SavedObjectsClientCommon.delete.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "- type of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-server.SavedObjectsClientCommon.delete.$2",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "- id of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "dataViews",
        "id": "def-server.DATA_VIEW_PATH",
        "type": "string",
        "tags": [],
        "label": "DATA_VIEW_PATH",
        "description": [
          "\nPath for data view creation"
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.DATA_VIEW_PATH_LEGACY",
        "type": "string",
        "tags": [],
        "label": "DATA_VIEW_PATH_LEGACY",
        "description": [
          "\nLegacy path for data view creation"
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.FieldSpec",
        "type": "Type",
        "tags": [],
        "label": "FieldSpec",
        "description": [
          "\nSerialized version of DataViewField"
        ],
        "signature": [
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewFieldBase",
            "text": "DataViewFieldBase"
          },
          " & { count?: number | undefined; conflictDescriptions?: Record<string, string[]> | undefined; format?: ",
          {
            "pluginId": "fieldFormats",
            "scope": "common",
            "docId": "kibFieldFormatsPluginApi",
            "section": "def-common.SerializedFieldFormat",
            "text": "SerializedFieldFormat"
          },
          "<{}, ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          "> | undefined; esTypes?: string[] | undefined; searchable: boolean; aggregatable: boolean; readFromDocValues?: boolean | undefined; indexed?: boolean | undefined; customLabel?: string | undefined; runtimeField?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldSpec",
            "text": "RuntimeFieldSpec"
          },
          " | undefined; fixedInterval?: string[] | undefined; timeZone?: string[] | undefined; timeSeriesDimension?: boolean | undefined; timeSeriesMetric?: \"gauge\" | \"histogram\" | \"summary\" | \"counter\" | undefined; shortDotsEnable?: boolean | undefined; isMapped?: boolean | undefined; parentName?: string | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.RUNTIME_FIELD_PATH",
        "type": "string",
        "tags": [],
        "label": "RUNTIME_FIELD_PATH",
        "description": [
          "\nPath to create runtime field"
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.RUNTIME_FIELD_PATH_LEGACY",
        "type": "string",
        "tags": [],
        "label": "RUNTIME_FIELD_PATH_LEGACY",
        "description": [
          "\nLegacy path to create runtime field"
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SCRIPTED_FIELD_PATH",
        "type": "string",
        "tags": [],
        "label": "SCRIPTED_FIELD_PATH",
        "description": [
          "\nPath to create scripted field"
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SCRIPTED_FIELD_PATH_LEGACY",
        "type": "string",
        "tags": [],
        "label": "SCRIPTED_FIELD_PATH_LEGACY",
        "description": [
          "\nLegacy path to create scripted field"
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SERVICE_KEY",
        "type": "string",
        "tags": [],
        "label": "SERVICE_KEY",
        "description": [
          "\nname of service in path form"
        ],
        "signature": [
          "\"data_view\""
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SERVICE_KEY_LEGACY",
        "type": "string",
        "tags": [],
        "label": "SERVICE_KEY_LEGACY",
        "description": [
          "\nLegacy name of service in path form"
        ],
        "signature": [
          "\"index_pattern\""
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SERVICE_KEY_TYPE",
        "type": "Type",
        "tags": [],
        "label": "SERVICE_KEY_TYPE",
        "description": [
          "\nService keys as type"
        ],
        "signature": [
          "\"index_pattern\" | \"data_view\""
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SERVICE_PATH",
        "type": "string",
        "tags": [],
        "label": "SERVICE_PATH",
        "description": [
          "\nService path for data views REST API"
        ],
        "signature": [
          "\"/api/data_views\""
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SERVICE_PATH_LEGACY",
        "type": "string",
        "tags": [],
        "label": "SERVICE_PATH_LEGACY",
        "description": [
          "\nLegacy service path for data views REST API"
        ],
        "signature": [
          "\"/api/index_patterns\""
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SPECIFIC_DATA_VIEW_PATH",
        "type": "string",
        "tags": [],
        "label": "SPECIFIC_DATA_VIEW_PATH",
        "description": [
          "\nPath for single data view"
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SPECIFIC_DATA_VIEW_PATH_LEGACY",
        "type": "string",
        "tags": [],
        "label": "SPECIFIC_DATA_VIEW_PATH_LEGACY",
        "description": [
          "\nLegacy path for single data view"
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SPECIFIC_RUNTIME_FIELD_PATH",
        "type": "string",
        "tags": [],
        "label": "SPECIFIC_RUNTIME_FIELD_PATH",
        "description": [
          "\nPath for runtime field"
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SPECIFIC_RUNTIME_FIELD_PATH_LEGACY",
        "type": "string",
        "tags": [],
        "label": "SPECIFIC_RUNTIME_FIELD_PATH_LEGACY",
        "description": [
          "\nLegacy path for runtime field"
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SPECIFIC_SCRIPTED_FIELD_PATH",
        "type": "string",
        "tags": [],
        "label": "SPECIFIC_SCRIPTED_FIELD_PATH",
        "description": [
          "\nPath for scripted field"
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-server.SPECIFIC_SCRIPTED_FIELD_PATH_LEGACY",
        "type": "string",
        "tags": [],
        "label": "SPECIFIC_SCRIPTED_FIELD_PATH_LEGACY",
        "description": [
          "\nLegacy path for scripted field"
        ],
        "path": "src/plugins/data_views/server/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "start": {
      "parentPluginId": "dataViews",
      "id": "def-server.DataViewsServerPluginStart",
      "type": "Interface",
      "tags": [],
      "label": "DataViewsServerPluginStart",
      "description": [
        "\nDataViews server plugin start api"
      ],
      "path": "src/plugins/data_views/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [
        {
          "parentPluginId": "dataViews",
          "id": "def-server.DataViewsServerPluginStart.dataViewsServiceFactory",
          "type": "Function",
          "tags": [],
          "label": "dataViewsServiceFactory",
          "description": [
            "\nReturns a DataViews service instance"
          ],
          "signature": [
            "(savedObjectsClient: ",
            {
              "pluginId": "@kbn/core-saved-objects-api-server",
              "scope": "common",
              "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
              "section": "def-common.SavedObjectsClientContract",
              "text": "SavedObjectsClientContract"
            },
            ", elasticsearchClient: ",
            {
              "pluginId": "@kbn/core-elasticsearch-server",
              "scope": "common",
              "docId": "kibKbnCoreElasticsearchServerPluginApi",
              "section": "def-common.ElasticsearchClient",
              "text": "ElasticsearchClient"
            },
            ", request?: ",
            {
              "pluginId": "@kbn/core-http-server",
              "scope": "common",
              "docId": "kibKbnCoreHttpServerPluginApi",
              "section": "def-common.KibanaRequest",
              "text": "KibanaRequest"
            },
            "<unknown, unknown, unknown, any> | undefined, byPassCapabilities?: boolean | undefined) => Promise<",
            {
              "pluginId": "dataViews",
              "scope": "common",
              "docId": "kibDataViewsPluginApi",
              "section": "def-common.DataViewsService",
              "text": "DataViewsService"
            },
            ">"
          ],
          "path": "src/plugins/data_views/server/types.ts",
          "deprecated": false,
          "trackAdoption": false,
          "returnComment": [],
          "children": [
            {
              "parentPluginId": "dataViews",
              "id": "def-server.DataViewsServerPluginStart.dataViewsServiceFactory.$1",
              "type": "Object",
              "tags": [],
              "label": "savedObjectsClient",
              "description": [],
              "signature": [
                {
                  "pluginId": "@kbn/core-saved-objects-api-server",
                  "scope": "common",
                  "docId": "kibKbnCoreSavedObjectsApiServerPluginApi",
                  "section": "def-common.SavedObjectsClientContract",
                  "text": "SavedObjectsClientContract"
                }
              ],
              "path": "src/plugins/data_views/server/types.ts",
              "deprecated": false,
              "trackAdoption": false
            },
            {
              "parentPluginId": "dataViews",
              "id": "def-server.DataViewsServerPluginStart.dataViewsServiceFactory.$2",
              "type": "Object",
              "tags": [],
              "label": "elasticsearchClient",
              "description": [],
              "signature": [
                "{ name: string | symbol; get: { <TDocument = unknown>(this: That, params: ",
                "GetRequest",
                " | ",
                "GetRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "GetResponse",
                "<TDocument>>; <TDocument = unknown>(this: That, params: ",
                "GetRequest",
                " | ",
                "GetRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "GetResponse",
                "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
                "GetRequest",
                " | ",
                "GetRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "GetResponse",
                "<TDocument>>; }; delete: { (this: That, params: ",
                "DeleteRequest",
                " | ",
                "DeleteRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "WriteResponseBase",
                ">; (this: That, params: ",
                "DeleteRequest",
                " | ",
                "DeleteRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "WriteResponseBase",
                ", unknown>>; (this: That, params: ",
                "DeleteRequest",
                " | ",
                "DeleteRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "WriteResponseBase",
                ">; }; cluster: ",
                "default",
                "; eql: ",
                "default",
                "; search: { <TDocument = unknown, TAggregations = Record<string, ",
                "AggregationsAggregate",
                ">>(this: That, params?: ",
                "SearchRequest",
                " | ",
                "SearchRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "SearchResponse",
                "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                "AggregationsAggregate",
                ">>(this: That, params?: ",
                "SearchRequest",
                " | ",
                "SearchRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "SearchResponse",
                "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                "AggregationsAggregate",
                ">>(this: That, params?: ",
                "SearchRequest",
                " | ",
                "SearchRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "SearchResponse",
                "<TDocument, TAggregations>>; }; create: { <TDocument = unknown>(this: That, params: ",
                "CreateRequest",
                "<TDocument> | ",
                "CreateRequest",
                "<TDocument>, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "WriteResponseBase",
                ">; <TDocument = unknown>(this: That, params: ",
                "CreateRequest",
                "<TDocument> | ",
                "CreateRequest",
                "<TDocument>, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "WriteResponseBase",
                ", unknown>>; <TDocument = unknown>(this: That, params: ",
                "CreateRequest",
                "<TDocument> | ",
                "CreateRequest",
                "<TDocument>, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "WriteResponseBase",
                ">; }; monitoring: ",
                "default",
                "; security: ",
                "default",
                "; index: { <TDocument = unknown>(this: That, params: ",
                "IndexRequest",
                "<TDocument> | ",
                "IndexRequest",
                "<TDocument>, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "WriteResponseBase",
                ">; <TDocument = unknown>(this: That, params: ",
                "IndexRequest",
                "<TDocument> | ",
                "IndexRequest",
                "<TDocument>, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "WriteResponseBase",
                ", unknown>>; <TDocument = unknown>(this: That, params: ",
                "IndexRequest",
                "<TDocument> | ",
                "IndexRequest",
                "<TDocument>, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "WriteResponseBase",
                ">; }; update: { <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
                "UpdateRequest",
                "<TDocument, TPartialDocument> | ",
                "UpdateRequest",
                "<TDocument, TPartialDocument>, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "UpdateResponse",
                "<TDocumentR>>; <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
                "UpdateRequest",
                "<TDocument, TPartialDocument> | ",
                "UpdateRequest",
                "<TDocument, TPartialDocument>, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "UpdateResponse",
                "<TDocumentR>, unknown>>; <TDocument = unknown, TPartialDocument = unknown, TDocumentR = unknown>(this: That, params: ",
                "UpdateRequest",
                "<TDocument, TPartialDocument> | ",
                "UpdateRequest",
                "<TDocument, TPartialDocument>, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "UpdateResponse",
                "<TDocumentR>>; }; asyncSearch: ",
                "default",
                "; [kAsyncSearch]: symbol | null; [kAutoscaling]: symbol | null; [kCat]: symbol | null; [kCcr]: symbol | null; [kCluster]: symbol | null; [kDanglingIndices]: symbol | null; [kEnrich]: symbol | null; [kEql]: symbol | null; [kFeatures]: symbol | null; [kFleet]: symbol | null; [kGraph]: symbol | null; [kIlm]: symbol | null; [kIndices]: symbol | null; [kIngest]: symbol | null; [kLicense]: symbol | null; [kLogstash]: symbol | null; [kMigration]: symbol | null; [kMl]: symbol | null; [kMonitoring]: symbol | null; [kNodes]: symbol | null; [kRollup]: symbol | null; [kSearchableSnapshots]: symbol | null; [kSecurity]: symbol | null; [kShutdown]: symbol | null; [kSlm]: symbol | null; [kSnapshot]: symbol | null; [kSql]: symbol | null; [kSsl]: symbol | null; [kTasks]: symbol | null; [kTextStructure]: symbol | null; [kTransform]: symbol | null; [kWatcher]: symbol | null; [kXpack]: symbol | null; transport: ",
                "default",
                "; helpers: ",
                "default",
                "; child: (opts: ",
                "ClientOptions",
                ") => ",
                "default",
                "; autoscaling: ",
                "default",
                "; bulk: { <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
                "BulkRequest",
                "<TDocument, TPartialDocument> | ",
                "BulkRequest",
                "<TDocument, TPartialDocument>, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "BulkResponse",
                ">; <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
                "BulkRequest",
                "<TDocument, TPartialDocument> | ",
                "BulkRequest",
                "<TDocument, TPartialDocument>, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "BulkResponse",
                ", unknown>>; <TDocument = unknown, TPartialDocument = unknown>(this: That, params: ",
                "BulkRequest",
                "<TDocument, TPartialDocument> | ",
                "BulkRequest",
                "<TDocument, TPartialDocument>, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "BulkResponse",
                ">; }; cat: ",
                "default",
                "; ccr: ",
                "default",
                "; clearScroll: { (this: That, params?: ",
                "ClearScrollRequest",
                " | ",
                "ClearScrollRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "ClearScrollResponse",
                ">; (this: That, params?: ",
                "ClearScrollRequest",
                " | ",
                "ClearScrollRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "ClearScrollResponse",
                ", unknown>>; (this: That, params?: ",
                "ClearScrollRequest",
                " | ",
                "ClearScrollRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "ClearScrollResponse",
                ">; }; closePointInTime: { (this: That, params: ",
                "ClosePointInTimeRequest",
                " | ",
                "ClosePointInTimeRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "ClosePointInTimeResponse",
                ">; (this: That, params: ",
                "ClosePointInTimeRequest",
                " | ",
                "ClosePointInTimeRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "ClosePointInTimeResponse",
                ", unknown>>; (this: That, params: ",
                "ClosePointInTimeRequest",
                " | ",
                "ClosePointInTimeRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "ClosePointInTimeResponse",
                ">; }; count: { (this: That, params?: ",
                "CountRequest",
                " | ",
                "CountRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "CountResponse",
                ">; (this: That, params?: ",
                "CountRequest",
                " | ",
                "CountRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "CountResponse",
                ", unknown>>; (this: That, params?: ",
                "CountRequest",
                " | ",
                "CountRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "CountResponse",
                ">; }; danglingIndices: ",
                "default",
                "; deleteByQuery: { (this: That, params: ",
                "DeleteByQueryRequest",
                " | ",
                "DeleteByQueryRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "DeleteByQueryResponse",
                ">; (this: That, params: ",
                "DeleteByQueryRequest",
                " | ",
                "DeleteByQueryRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "DeleteByQueryResponse",
                ", unknown>>; (this: That, params: ",
                "DeleteByQueryRequest",
                " | ",
                "DeleteByQueryRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "DeleteByQueryResponse",
                ">; }; deleteByQueryRethrottle: { (this: That, params: ",
                "DeleteByQueryRethrottleRequest",
                " | ",
                "DeleteByQueryRethrottleRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "TasksTaskListResponseBase",
                ">; (this: That, params: ",
                "DeleteByQueryRethrottleRequest",
                " | ",
                "DeleteByQueryRethrottleRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "TasksTaskListResponseBase",
                ", unknown>>; (this: That, params: ",
                "DeleteByQueryRethrottleRequest",
                " | ",
                "DeleteByQueryRethrottleRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "TasksTaskListResponseBase",
                ">; }; deleteScript: { (this: That, params: ",
                "DeleteScriptRequest",
                " | ",
                "DeleteScriptRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "AcknowledgedResponseBase",
                ">; (this: That, params: ",
                "DeleteScriptRequest",
                " | ",
                "DeleteScriptRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "AcknowledgedResponseBase",
                ", unknown>>; (this: That, params: ",
                "DeleteScriptRequest",
                " | ",
                "DeleteScriptRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "AcknowledgedResponseBase",
                ">; }; enrich: ",
                "default",
                "; exists: { (this: That, params: ",
                "ExistsRequest",
                " | ",
                "ExistsRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<boolean>; (this: That, params: ",
                "ExistsRequest",
                " | ",
                "ExistsRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<boolean, unknown>>; (this: That, params: ",
                "ExistsRequest",
                " | ",
                "ExistsRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<boolean>; }; existsSource: { (this: That, params: ",
                "ExistsSourceRequest",
                " | ",
                "ExistsSourceRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<boolean>; (this: That, params: ",
                "ExistsSourceRequest",
                " | ",
                "ExistsSourceRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<boolean, unknown>>; (this: That, params: ",
                "ExistsSourceRequest",
                " | ",
                "ExistsSourceRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<boolean>; }; explain: { <TDocument = unknown>(this: That, params: ",
                "ExplainRequest",
                " | ",
                "ExplainRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "ExplainResponse",
                "<TDocument>>; <TDocument = unknown>(this: That, params: ",
                "ExplainRequest",
                " | ",
                "ExplainRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "ExplainResponse",
                "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
                "ExplainRequest",
                " | ",
                "ExplainRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "ExplainResponse",
                "<TDocument>>; }; features: ",
                "default",
                "; fieldCaps: { (this: That, params: ",
                "FieldCapsRequest",
                " | ",
                "FieldCapsRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "FieldCapsResponse",
                ">; (this: That, params: ",
                "FieldCapsRequest",
                " | ",
                "FieldCapsRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "FieldCapsResponse",
                ", unknown>>; (this: That, params: ",
                "FieldCapsRequest",
                " | ",
                "FieldCapsRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "FieldCapsResponse",
                ">; }; fleet: ",
                "default",
                "; getScript: { (this: That, params: ",
                "GetScriptRequest",
                " | ",
                "GetScriptRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "GetScriptResponse",
                ">; (this: That, params: ",
                "GetScriptRequest",
                " | ",
                "GetScriptRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "GetScriptResponse",
                ", unknown>>; (this: That, params: ",
                "GetScriptRequest",
                " | ",
                "GetScriptRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "GetScriptResponse",
                ">; }; getScriptContext: { (this: That, params?: ",
                "GetScriptContextRequest",
                " | ",
                "GetScriptContextRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "GetScriptContextResponse",
                ">; (this: That, params?: ",
                "GetScriptContextRequest",
                " | ",
                "GetScriptContextRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "GetScriptContextResponse",
                ", unknown>>; (this: That, params?: ",
                "GetScriptContextRequest",
                " | ",
                "GetScriptContextRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "GetScriptContextResponse",
                ">; }; getScriptLanguages: { (this: That, params?: ",
                "GetScriptLanguagesRequest",
                " | ",
                "GetScriptLanguagesRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "GetScriptLanguagesResponse",
                ">; (this: That, params?: ",
                "GetScriptLanguagesRequest",
                " | ",
                "GetScriptLanguagesRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "GetScriptLanguagesResponse",
                ", unknown>>; (this: That, params?: ",
                "GetScriptLanguagesRequest",
                " | ",
                "GetScriptLanguagesRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "GetScriptLanguagesResponse",
                ">; }; getSource: { <TDocument = unknown>(this: That, params: ",
                "GetSourceRequest",
                " | ",
                "GetSourceRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<TDocument>; <TDocument = unknown>(this: That, params: ",
                "GetSourceRequest",
                " | ",
                "GetSourceRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<TDocument, unknown>>; <TDocument = unknown>(this: That, params: ",
                "GetSourceRequest",
                " | ",
                "GetSourceRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<TDocument>; }; graph: ",
                "default",
                "; ilm: ",
                "default",
                "; indices: ",
                "default",
                "; info: { (this: That, params?: ",
                "InfoRequest",
                " | ",
                "InfoRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "InfoResponse",
                ">; (this: That, params?: ",
                "InfoRequest",
                " | ",
                "InfoRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "InfoResponse",
                ", unknown>>; (this: That, params?: ",
                "InfoRequest",
                " | ",
                "InfoRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "InfoResponse",
                ">; }; ingest: ",
                "default",
                "; knnSearch: { <TDocument = unknown>(this: That, params: ",
                "KnnSearchRequest",
                " | ",
                "KnnSearchRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "KnnSearchResponse",
                "<TDocument>>; <TDocument = unknown>(this: That, params: ",
                "KnnSearchRequest",
                " | ",
                "KnnSearchRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "KnnSearchResponse",
                "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params: ",
                "KnnSearchRequest",
                " | ",
                "KnnSearchRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "KnnSearchResponse",
                "<TDocument>>; }; license: ",
                "default",
                "; logstash: ",
                "default",
                "; mget: { <TDocument = unknown>(this: That, params?: ",
                "MgetRequest",
                " | ",
                "MgetRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "MgetResponse",
                "<TDocument>>; <TDocument = unknown>(this: That, params?: ",
                "MgetRequest",
                " | ",
                "MgetRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "MgetResponse",
                "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params?: ",
                "MgetRequest",
                " | ",
                "MgetRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "MgetResponse",
                "<TDocument>>; }; migration: ",
                "default",
                "; ml: ",
                "default",
                "; msearch: { <TDocument = unknown, TAggregations = Record<string, ",
                "AggregationsAggregate",
                ">>(this: That, params: ",
                "MsearchRequest",
                " | ",
                "MsearchRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "MsearchResponse",
                "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                "AggregationsAggregate",
                ">>(this: That, params: ",
                "MsearchRequest",
                " | ",
                "MsearchRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "MsearchResponse",
                "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                "AggregationsAggregate",
                ">>(this: That, params: ",
                "MsearchRequest",
                " | ",
                "MsearchRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "MsearchResponse",
                "<TDocument, TAggregations>>; }; msearchTemplate: { <TDocument = unknown, TAggregations = Record<string, ",
                "AggregationsAggregate",
                ">>(this: That, params: ",
                "MsearchTemplateRequest",
                " | ",
                "MsearchTemplateRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "MsearchTemplateResponse",
                "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                "AggregationsAggregate",
                ">>(this: That, params: ",
                "MsearchTemplateRequest",
                " | ",
                "MsearchTemplateRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "MsearchTemplateResponse",
                "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                "AggregationsAggregate",
                ">>(this: That, params: ",
                "MsearchTemplateRequest",
                " | ",
                "MsearchTemplateRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "MsearchTemplateResponse",
                "<TDocument, TAggregations>>; }; mtermvectors: { (this: That, params?: ",
                "MtermvectorsRequest",
                " | ",
                "MtermvectorsRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "MtermvectorsResponse",
                ">; (this: That, params?: ",
                "MtermvectorsRequest",
                " | ",
                "MtermvectorsRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "MtermvectorsResponse",
                ", unknown>>; (this: That, params?: ",
                "MtermvectorsRequest",
                " | ",
                "MtermvectorsRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "MtermvectorsResponse",
                ">; }; nodes: ",
                "default",
                "; openPointInTime: { (this: That, params: ",
                "OpenPointInTimeRequest",
                " | ",
                "OpenPointInTimeRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "OpenPointInTimeResponse",
                ">; (this: That, params: ",
                "OpenPointInTimeRequest",
                " | ",
                "OpenPointInTimeRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "OpenPointInTimeResponse",
                ", unknown>>; (this: That, params: ",
                "OpenPointInTimeRequest",
                " | ",
                "OpenPointInTimeRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "OpenPointInTimeResponse",
                ">; }; ping: { (this: That, params?: ",
                "PingRequest",
                " | ",
                "PingRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<boolean>; (this: That, params?: ",
                "PingRequest",
                " | ",
                "PingRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<boolean, unknown>>; (this: That, params?: ",
                "PingRequest",
                " | ",
                "PingRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<boolean>; }; putScript: { (this: That, params: ",
                "PutScriptRequest",
                " | ",
                "PutScriptRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "AcknowledgedResponseBase",
                ">; (this: That, params: ",
                "PutScriptRequest",
                " | ",
                "PutScriptRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "AcknowledgedResponseBase",
                ", unknown>>; (this: That, params: ",
                "PutScriptRequest",
                " | ",
                "PutScriptRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "AcknowledgedResponseBase",
                ">; }; rankEval: { (this: That, params: ",
                "RankEvalRequest",
                " | ",
                "RankEvalRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "RankEvalResponse",
                ">; (this: That, params: ",
                "RankEvalRequest",
                " | ",
                "RankEvalRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "RankEvalResponse",
                ", unknown>>; (this: That, params: ",
                "RankEvalRequest",
                " | ",
                "RankEvalRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "RankEvalResponse",
                ">; }; reindex: { (this: That, params: ",
                "ReindexRequest",
                " | ",
                "ReindexRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "ReindexResponse",
                ">; (this: That, params: ",
                "ReindexRequest",
                " | ",
                "ReindexRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "ReindexResponse",
                ", unknown>>; (this: That, params: ",
                "ReindexRequest",
                " | ",
                "ReindexRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "ReindexResponse",
                ">; }; reindexRethrottle: { (this: That, params: ",
                "ReindexRethrottleRequest",
                " | ",
                "ReindexRethrottleRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "ReindexRethrottleResponse",
                ">; (this: That, params: ",
                "ReindexRethrottleRequest",
                " | ",
                "ReindexRethrottleRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "ReindexRethrottleResponse",
                ", unknown>>; (this: That, params: ",
                "ReindexRethrottleRequest",
                " | ",
                "ReindexRethrottleRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "ReindexRethrottleResponse",
                ">; }; renderSearchTemplate: { (this: That, params?: ",
                "RenderSearchTemplateRequest",
                " | ",
                "RenderSearchTemplateRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "RenderSearchTemplateResponse",
                ">; (this: That, params?: ",
                "RenderSearchTemplateRequest",
                " | ",
                "RenderSearchTemplateRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "RenderSearchTemplateResponse",
                ", unknown>>; (this: That, params?: ",
                "RenderSearchTemplateRequest",
                " | ",
                "RenderSearchTemplateRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "RenderSearchTemplateResponse",
                ">; }; rollup: ",
                "default",
                "; scriptsPainlessExecute: { <TResult = unknown>(this: That, params?: ",
                "ScriptsPainlessExecuteRequest",
                " | ",
                "ScriptsPainlessExecuteRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "ScriptsPainlessExecuteResponse",
                "<TResult>>; <TResult = unknown>(this: That, params?: ",
                "ScriptsPainlessExecuteRequest",
                " | ",
                "ScriptsPainlessExecuteRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "ScriptsPainlessExecuteResponse",
                "<TResult>, unknown>>; <TResult = unknown>(this: That, params?: ",
                "ScriptsPainlessExecuteRequest",
                " | ",
                "ScriptsPainlessExecuteRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "ScriptsPainlessExecuteResponse",
                "<TResult>>; }; scroll: { <TDocument = unknown, TAggregations = Record<string, ",
                "AggregationsAggregate",
                ">>(this: That, params: ",
                "ScrollRequest",
                " | ",
                "ScrollRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "ScrollResponse",
                "<TDocument, TAggregations>>; <TDocument = unknown, TAggregations = Record<string, ",
                "AggregationsAggregate",
                ">>(this: That, params: ",
                "ScrollRequest",
                " | ",
                "ScrollRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "ScrollResponse",
                "<TDocument, TAggregations>, unknown>>; <TDocument = unknown, TAggregations = Record<string, ",
                "AggregationsAggregate",
                ">>(this: That, params: ",
                "ScrollRequest",
                " | ",
                "ScrollRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "ScrollResponse",
                "<TDocument, TAggregations>>; }; searchMvt: { (this: That, params: ",
                "SearchMvtRequest",
                " | ",
                "SearchMvtRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<ArrayBuffer>; (this: That, params: ",
                "SearchMvtRequest",
                " | ",
                "SearchMvtRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<ArrayBuffer, unknown>>; (this: That, params: ",
                "SearchMvtRequest",
                " | ",
                "SearchMvtRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<ArrayBuffer>; }; searchShards: { (this: That, params?: ",
                "SearchShardsRequest",
                " | ",
                "SearchShardsRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "SearchShardsResponse",
                ">; (this: That, params?: ",
                "SearchShardsRequest",
                " | ",
                "SearchShardsRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "SearchShardsResponse",
                ", unknown>>; (this: That, params?: ",
                "SearchShardsRequest",
                " | ",
                "SearchShardsRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "SearchShardsResponse",
                ">; }; searchTemplate: { <TDocument = unknown>(this: That, params?: ",
                "SearchTemplateRequest",
                " | ",
                "SearchTemplateRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "SearchTemplateResponse",
                "<TDocument>>; <TDocument = unknown>(this: That, params?: ",
                "SearchTemplateRequest",
                " | ",
                "SearchTemplateRequest",
                " | undefined, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "SearchTemplateResponse",
                "<TDocument>, unknown>>; <TDocument = unknown>(this: That, params?: ",
                "SearchTemplateRequest",
                " | ",
                "SearchTemplateRequest",
                " | undefined, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "SearchTemplateResponse",
                "<TDocument>>; }; searchableSnapshots: ",
                "default",
                "; shutdown: ",
                "default",
                "; slm: ",
                "default",
                "; snapshot: ",
                "default",
                "; sql: ",
                "default",
                "; ssl: ",
                "default",
                "; tasks: ",
                "default",
                "; termsEnum: { (this: That, params: ",
                "TermsEnumRequest",
                " | ",
                "TermsEnumRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "TermsEnumResponse",
                ">; (this: That, params: ",
                "TermsEnumRequest",
                " | ",
                "TermsEnumRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "TermsEnumResponse",
                ", unknown>>; (this: That, params: ",
                "TermsEnumRequest",
                " | ",
                "TermsEnumRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "TermsEnumResponse",
                ">; }; termvectors: { <TDocument = unknown>(this: That, params: ",
                "TermvectorsRequest",
                "<TDocument> | ",
                "TermvectorsRequest",
                "<TDocument>, options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "TermvectorsResponse",
                ">; <TDocument = unknown>(this: That, params: ",
                "TermvectorsRequest",
                "<TDocument> | ",
                "TermvectorsRequest",
                "<TDocument>, options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "TermvectorsResponse",
                ", unknown>>; <TDocument = unknown>(this: That, params: ",
                "TermvectorsRequest",
                "<TDocument> | ",
                "TermvectorsRequest",
                "<TDocument>, options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "TermvectorsResponse",
                ">; }; textStructure: ",
                "default",
                "; transform: ",
                "default",
                "; updateByQuery: { (this: That, params: ",
                "UpdateByQueryRequest",
                " | ",
                "UpdateByQueryRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "UpdateByQueryResponse",
                ">; (this: That, params: ",
                "UpdateByQueryRequest",
                " | ",
                "UpdateByQueryRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "UpdateByQueryResponse",
                ", unknown>>; (this: That, params: ",
                "UpdateByQueryRequest",
                " | ",
                "UpdateByQueryRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "UpdateByQueryResponse",
                ">; }; updateByQueryRethrottle: { (this: That, params: ",
                "UpdateByQueryRethrottleRequest",
                " | ",
                "UpdateByQueryRethrottleRequest",
                ", options?: ",
                "TransportRequestOptionsWithOutMeta",
                " | undefined): Promise<",
                "UpdateByQueryRethrottleResponse",
                ">; (this: That, params: ",
                "UpdateByQueryRethrottleRequest",
                " | ",
                "UpdateByQueryRethrottleRequest",
                ", options?: ",
                "TransportRequestOptionsWithMeta",
                " | undefined): Promise<",
                "TransportResult",
                "<",
                "UpdateByQueryRethrottleResponse",
                ", unknown>>; (this: That, params: ",
                "UpdateByQueryRethrottleRequest",
                " | ",
                "UpdateByQueryRethrottleRequest",
                ", options?: ",
                "TransportRequestOptions",
                " | undefined): Promise<",
                "UpdateByQueryRethrottleResponse",
                ">; }; watcher: ",
                "default",
                "; xpack: ",
                "default",
                "; }"
              ],
              "path": "src/plugins/data_views/server/types.ts",
              "deprecated": false,
              "trackAdoption": false
            },
            {
              "parentPluginId": "dataViews",
              "id": "def-server.DataViewsServerPluginStart.dataViewsServiceFactory.$3",
              "type": "Object",
              "tags": [],
              "label": "request",
              "description": [],
              "signature": [
                {
                  "pluginId": "@kbn/core-http-server",
                  "scope": "common",
                  "docId": "kibKbnCoreHttpServerPluginApi",
                  "section": "def-common.KibanaRequest",
                  "text": "KibanaRequest"
                },
                "<unknown, unknown, unknown, any> | undefined"
              ],
              "path": "src/plugins/data_views/server/types.ts",
              "deprecated": false,
              "trackAdoption": false
            },
            {
              "parentPluginId": "dataViews",
              "id": "def-server.DataViewsServerPluginStart.dataViewsServiceFactory.$4",
              "type": "CompoundType",
              "tags": [],
              "label": "byPassCapabilities",
              "description": [],
              "signature": [
                "boolean | undefined"
              ],
              "path": "src/plugins/data_views/server/types.ts",
              "deprecated": false,
              "trackAdoption": false
            }
          ]
        }
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    },
    "setup": {
      "parentPluginId": "dataViews",
      "id": "def-server.DataViewsServerPluginSetup",
      "type": "Interface",
      "tags": [],
      "label": "DataViewsServerPluginSetup",
      "description": [
        "\nDataViews server plugin setup api"
      ],
      "path": "src/plugins/data_views/server/types.ts",
      "deprecated": false,
      "trackAdoption": false,
      "children": [],
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataView",
        "type": "Class",
        "tags": [],
        "label": "DataView",
        "description": [
          "\nData view class. Central kibana abstraction around multiple indices."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " implements ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewBase",
            "text": "DataViewBase"
          }
        ],
        "path": "src/plugins/data_views/common/data_views/data_view.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nSaved object id"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.title",
            "type": "string",
            "tags": [
              "deprecated"
            ],
            "label": "title",
            "description": [
              "\nTitle of data view"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/types.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/source/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/containers/detection_engine/rules/use_rule_from_timeline.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/containers/detection_engine/exceptions/get_es_query_filter.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/alerts_table/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/pages/detection_engine/rules/utils.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/management/pages/endpoint_hosts/store/middleware.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/server/lib/detection_engine/signals/get_query_filter.ts"
              },
              {
                "plugin": "timelines",
                "path": "x-pack/plugins/timelines/public/mock/index_pattern.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/mock/index_pattern.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "lists",
                "path": "x-pack/plugins/lists/public/exceptions/components/builder/helpers.test.ts"
              },
              {
                "plugin": "threatIntelligence",
                "path": "x-pack/plugins/threat_intelligence/public/common/mocks/mock_security_context.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detection_engine/rule_exceptions/components/flyout_components/alerts_actions/utils.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/expressions/kibana_context.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/expressions/kibana_context.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/expressions/kibana_context.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/build_es_query.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_combined_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_kuery.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/es_query/from_nested_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/build_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/exists_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/get_filter_field.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrase_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrase_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/build_filters/phrases_filter.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/filters/helpers/compare_filters.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/ast/ast.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/and.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/exists.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/is.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/nested.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/not.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/or.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/range.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/node_types/function.test.ts"
              },
              {
                "plugin": "@kbn/es-query",
                "path": "packages/kbn-es-query/src/kuery/functions/utils/get_full_field_name_node.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/search_source/inspect/inspector_stats.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/tabify/response_writer.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/param_types/field.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/public/query/filter_manager/lib/get_display_value.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/public/search/errors/painless_error.tsx"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/autocomplete/providers/value_suggestion_provider.ts"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/query_string_input/fetch_index_patterns.ts"
              },
              {
                "plugin": "unifiedSearch",
                "path": "src/plugins/unified_search/public/dataview_picker/change_dataview.tsx"
              },
              {
                "plugin": "triggersActionsUi",
                "path": "x-pack/plugins/triggers_actions_ui/public/common/lib/data_apis.ts"
              },
              {
                "plugin": "savedObjectsManagement",
                "path": "src/plugins/saved_objects_management/public/management_section/objects_table/components/flyout.tsx"
              },
              {
                "plugin": "savedObjectsManagement",
                "path": "src/plugins/saved_objects_management/public/management_section/objects_table/components/flyout.tsx"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/options_list/options_list_service.ts"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/options_list/options_list_service.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/services/field_stats/load_field_stats.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/common/utils/field_existing_utils.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/hooks/use_existing_fields.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/public/hooks/use_existing_fields.ts"
              },
              {
                "plugin": "lens",
                "path": "x-pack/plugins/lens/public/data_views_service/loader.ts"
              },
              {
                "plugin": "lens",
                "path": "x-pack/plugins/lens/public/app_plugin/lens_top_nav.tsx"
              },
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/application/main/components/no_results/no_results_suggestions/use_fetch_occurances_range.ts"
              },
              {
                "plugin": "aiops",
                "path": "x-pack/plugins/aiops/public/components/log_categorization/log_categorization_page.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/data_frame_analytics/index_patterns.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/job_service/new_job_caps/rollup.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/lib/alerts/alerting_service.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/server/models/data_recognizer/data_recognizer.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/log_views/resolved_log_view.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/get_fields.ts"
              },
              {
                "plugin": "apm",
                "path": "x-pack/plugins/apm/server/routes/data_view/create_static_data_view.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/utils/observability_data_views/observability_data_views.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/columns/report_definition_field.tsx"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/use_filter_values.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/series_editor/columns/filter_value_btn.tsx"
              },
              {
                "plugin": "dataVisualizer",
                "path": "x-pack/plugins/data_visualizer/public/application/index_data_visualizer/hooks/use_data_visualizer_grid_data.ts"
              },
              {
                "plugin": "dataVisualizer",
                "path": "x-pack/plugins/data_visualizer/public/application/index_data_visualizer/components/index_data_visualizer_view/index_data_visualizer_view.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_details.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/datavisualizer/index_based/data_loader/data_loader.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/hooks/use_index_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/components/configuration_step/configuration_step_form.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_creation/page.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/action_clone/clone_action_name.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/common/job_creator/job_creator.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/common/results_loader/categorization_examples_loader.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/index_or_search/preconfigured_job_redirect.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/components/pick_fields_step/components/bucket_span_estimator/estimate_bucket_span.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/jobs/new_job/pages/components/datafeed_step/components/data_view/change_data_view.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_exploration/components/outlier_exploration/use_outlier_data.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_exploration/components/exploration_results_table/use_exploration_results.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/data_frame_analytics/pages/analytics_management/components/source_selection/source_selection.tsx"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/embeddables/anomaly_charts/anomaly_charts_embeddable.tsx"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/logs/settings/validation_errors.ts"
              },
              {
                "plugin": "fleet",
                "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/filter_dataset.tsx"
              },
              {
                "plugin": "fleet",
                "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/filter_log_level.tsx"
              },
              {
                "plugin": "fleet",
                "path": "x-pack/plugins/fleet/public/applications/fleet/sections/agents/agent_details_page/components/agent_logs/query_bar.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.component.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/es_data_view_select/es_data_view_select.tsx"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/services/kibana/data_views.ts"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/services/kibana/data_views.ts"
              },
              {
                "plugin": "canvas",
                "path": "x-pack/plugins/canvas/public/components/datasource/datasource_component.js"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.sagas.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/persistence.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/persistence.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/sourcerer/create_sourcerer_data_view.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/common/containers/sourcerer/create_sourcerer_data_view.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/rules/eql_query_bar/validators.ts"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detections/components/rules/step_define_rule/index.tsx"
              },
              {
                "plugin": "securitySolution",
                "path": "x-pack/plugins/security_solution/public/detection_engine/rule_details_ui/pages/rule_details/index.tsx"
              },
              {
                "plugin": "timelines",
                "path": "x-pack/plugins/timelines/server/search_strategy/index_fields/index.ts"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/expressions/boundary_index_expression.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/expressions/entity_index_expression.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/geo_containment/query_builder/index.tsx"
              },
              {
                "plugin": "stackAlerts",
                "path": "x-pack/plugins/stack_alerts/public/rule_types/components/data_view_select_popover.tsx"
              },
              {
                "plugin": "synthetics",
                "path": "x-pack/plugins/synthetics/public/legacy_uptime/components/overview/filter_group/filter_group.tsx"
              },
              {
                "plugin": "synthetics",
                "path": "x-pack/plugins/synthetics/public/legacy_uptime/components/overview/alerts/monitor_expressions/filters_expression_select.tsx"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/common/filter_agg/components/filter_term_form.tsx"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/hooks/use_search_items/common.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/services/es_index_service.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/server/routes/api/transforms.ts"
              },
              {
                "plugin": "upgradeAssistant",
                "path": "x-pack/plugins/upgrade_assistant/public/application/components/es_deprecation_logs/fix_deprecation_logs/external_links.tsx"
              },
              {
                "plugin": "ux",
                "path": "x-pack/plugins/ux/public/components/app/rum_dashboard/local_uifilters/use_data_view.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.test.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/common/dependency_mocks/index_patterns.ts"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/tooltips/es_tooltip_property.test.ts"
              },
              {
                "plugin": "ml",
                "path": "x-pack/plugins/ml/public/application/services/new_job_capabilities/remove_nested_field_children.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_kpi.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_with_reference_lines.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/test_formula_metric_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/lens_attributes/single_metric_attributes.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/lens_attributes/single_metric_attributes.test.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/mobile_test_attribute.ts"
              },
              {
                "plugin": "observability",
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/test_data/sample_attribute_cwv.ts"
              },
              {
                "plugin": "transform",
                "path": "x-pack/plugins/transform/public/app/sections/create_transform/components/step_define/common/common.test.ts"
              },
              {
                "plugin": "controls",
                "path": "src/plugins/controls/public/services/data_views/data_views.story.ts"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/components/scripting_help/test_script.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/field_editor.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/create_edit_field/create_edit_field.tsx"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/list_control_factory.ts"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/control/range_control_factory.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/server/routes/field_stats.ts"
              },
              {
                "plugin": "unifiedFieldList",
                "path": "src/plugins/unified_field_list/server/routes/field_stats.ts"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/controls/field.tsx"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/controls/field.tsx"
              },
              {
                "plugin": "visDefaultEditor",
                "path": "src/plugins/vis_default_editor/public/components/agg_select.tsx"
              },
              {
                "plugin": "inputControlVis",
                "path": "src/plugins/input_control_vis/public/test_utils/get_index_pattern_mock.ts"
              },
              {
                "plugin": "presentationUtil",
                "path": "src/plugins/presentation_util/public/services/data_views/data_views.story.ts"
              },
              {
                "plugin": "visTypeTimelion",
                "path": "src/plugins/vis_types/timelion/public/helpers/arg_value_suggestions.ts"
              },
              {
                "plugin": "visTypeTimelion",
                "path": "src/plugins/vis_types/timelion/public/helpers/arg_value_suggestions.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/common/index_patterns_utils.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/components/lib/convert_series_to_datatable.ts"
              },
              {
                "plugin": "visTypeVega",
                "path": "src/plugins/vis_types/vega/public/data_model/search_api.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/agg_config.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/_terms_other_bucket_helper.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/multi_terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/multi_terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/rare_terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/common/search/aggs/buckets/terms.test.ts"
              },
              {
                "plugin": "data",
                "path": "src/plugins/data/public/query/filter_manager/lib/get_display_value.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/components/lib/convert_series_to_datatable.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/convert_to_lens/lib/datasource/datasource_info.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/lib/cached_index_pattern_fetcher.test.ts"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/lib/cached_index_pattern_fetcher.test.ts"
              },
              {
                "plugin": "discover",
                "path": "src/plugins/discover/public/application/main/hooks/use_text_based_query_language.ts"
              },
              {
                "plugin": "infra",
                "path": "x-pack/plugins/infra/public/pages/metrics/hosts/hooks/use_data_view.test.ts"
              }
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.fieldFormatMap",
            "type": "Object",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [
              "\nMap of field formats by field name"
            ],
            "signature": [
              "{ [x: string]: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nOnly used by rollup indices, used by rollup specific endpoint to load field list."
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.fields",
            "type": "CompoundType",
            "tags": [],
            "label": "fields",
            "description": [
              "\nField list, in extended array format"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.IIndexPatternFieldList",
                "text": "IIndexPatternFieldList"
              },
              " & { toSpec: () => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              },
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [
              "\nTimestamp field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nType is used to identify rollup index patterns."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.flattenHit",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "flattenHit",
            "description": [],
            "signature": [
              "(hit: Record<string, unknown[]>, deep?: boolean | undefined) => Record<string, unknown>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
              },
              {
                "plugin": "maps",
                "path": "x-pack/plugins/maps/public/classes/sources/es_search_source/es_search_source.tsx"
              }
            ],
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.flattenHit.$1",
                "type": "Object",
                "tags": [],
                "label": "hit",
                "description": [],
                "signature": [
                  "{ [x: string]: unknown[]; }"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.flattenHit.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "deep",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.metaFields",
            "type": "Array",
            "tags": [],
            "label": "metaFields",
            "description": [
              "\nList of meta fields by name"
            ],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.version",
            "type": "string",
            "tags": [],
            "label": "version",
            "description": [
              "\nSavedObject version"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.sourceFilters",
            "type": "Array",
            "tags": [],
            "label": "sourceFilters",
            "description": [
              "\nArray of filters - hides fields in discover"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.SourceFilter",
                "text": "SourceFilter"
              },
              "[] | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nArray of namespace ids"
            ],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.allowNoIndex",
            "type": "boolean",
            "tags": [],
            "label": "allowNoIndex",
            "description": [
              "\nPrevents errors when index pattern exists before indices"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nName of the data view. Human readable name used to differentiate data view."
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.matchedIndices",
            "type": "Array",
            "tags": [],
            "label": "matchedIndices",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [
                  "- config data and dependencies"
                ],
                "signature": [
                  "DataViewDeps"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getName",
            "type": "Function",
            "tags": [],
            "label": "getName",
            "description": [
              "\nGet name of Data View"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getIndexPattern",
            "description": [
              "\nGet index pattern"
            ],
            "signature": [
              "() => string"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "index pattern string"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.setIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "setIndexPattern",
            "description": [
              "\nSet index pattern"
            ],
            "signature": [
              "(indexPattern: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.setIndexPattern.$1",
                "type": "string",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getOriginalSavedObjectBody",
            "description": [
              "\nGet last saved saved object fields"
            ],
            "signature": [
              "() => { fieldAttrs?: string | undefined; title?: string | undefined; timeFieldName?: string | undefined; fields?: string | undefined; sourceFilters?: string | undefined; fieldFormatMap?: string | undefined; typeMeta?: string | undefined; type?: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.resetOriginalSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "resetOriginalSavedObjectBody",
            "description": [
              "\nReset last saved saved object fields. Used after saving."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "getFieldAttrs",
            "description": [
              "\nReturns field attributes map"
            ],
            "signature": [
              "() => { [x: string]: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getComputedFields",
            "type": "Function",
            "tags": [],
            "label": "getComputedFields",
            "description": [
              "\nReturns scripted fields"
            ],
            "signature": [
              "() => { storedFields: string[]; scriptFields: Record<string, ",
              "ScriptField",
              ">; docvalueFields: { field: string; format: string; }[]; runtimeFields: ",
              "MappingRuntimeFields",
              "; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.isPersisted",
            "type": "Function",
            "tags": [],
            "label": "isPersisted",
            "description": [],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [
              "\nCreates static representation of the data view."
            ],
            "signature": [
              "(includeFields?: boolean) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.toSpec.$1",
                "type": "boolean",
                "tags": [],
                "label": "includeFields",
                "description": [
                  "Whether or not to include the `fields` list as part of this spec. If not included, the list\nwill be fetched from Elasticsearch when instantiating a new Data View with this spec."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getSourceFiltering",
            "type": "Function",
            "tags": [],
            "label": "getSourceFiltering",
            "description": [
              "\nGet the source filtering configuration for that index."
            ],
            "signature": [
              "() => { excludes: string[]; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.removeScriptedField",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "removeScriptedField",
            "description": [
              "\nRemoves scripted field from field list."
            ],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/field_editor/field_editor.tsx"
              }
            ],
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.removeScriptedField.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of scripted field to remove"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getNonScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getNonScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/server/lib/search_strategies/strategies/abstract_search_strategy.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/state_management/datasource.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "graph",
                "path": "x-pack/plugins/graph/public/services/persistence/deserialize.test.ts"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/source_filters_table/components/table/table.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/edit_index_pattern.tsx"
              },
              {
                "plugin": "visTypeTimeseries",
                "path": "src/plugins/vis_types/timeseries/public/application/lib/fetch_fields.ts"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getScriptedFields",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "getScriptedFields",
            "description": [
              "\n"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [
              {
                "plugin": "dataViewManagement",
                "path": "src/plugins/data_view_management/public/components/edit_index_pattern/scripted_fields_table/scripted_fields_table.tsx"
              }
            ],
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.isTSDBMode",
            "type": "Function",
            "tags": [],
            "label": "isTSDBMode",
            "description": [
              "\nreturns true if dataview contains TSDB fields"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.isTimeBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeBased",
            "description": [
              "\nDoes the data view have a timestamp field?"
            ],
            "signature": [
              "() => this is ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TimeBasedDataView",
                "text": "TimeBasedDataView"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.isTimeNanosBased",
            "type": "Function",
            "tags": [],
            "label": "isTimeNanosBased",
            "description": [
              "\nDoes the data view have a timestamp field and is it a date nanos field?"
            ],
            "signature": [
              "() => this is ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TimeBasedDataView",
                "text": "TimeBasedDataView"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getTimeField",
            "type": "Function",
            "tags": [],
            "label": "getTimeField",
            "description": [
              "\nGet timestamp field as DataViewField or return undefined"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getFieldByName",
            "type": "Function",
            "tags": [],
            "label": "getFieldByName",
            "description": [
              "\nGet field by name."
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.getFieldByName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getAggregationRestrictions",
            "type": "Function",
            "tags": [],
            "label": "getAggregationRestrictions",
            "description": [
              "\nGet aggregation restrictions. Rollup fields can only perform a subset of aggregations."
            ],
            "signature": [
              "() => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.AggregationRestrictions",
                "text": "AggregationRestrictions"
              },
              "> | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getAsSavedObjectBody",
            "type": "Function",
            "tags": [],
            "label": "getAsSavedObjectBody",
            "description": [
              "\nReturns index pattern as saved object body for saving"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getFormatterForField",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForField",
            "description": [
              "\nProvide a field, get its formatter"
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.getFormatterForField.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [
                  "field to get formatter for"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewField",
                    "text": "DataViewField"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.addRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "addRuntimeField",
            "description": [
              "\nAdd a runtime field - Appended to existing mapped field or a new field is\ncreated as appropriate."
            ],
            "signature": [
              "(name: string, runtimeField: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ") => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.addRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.addRuntimeField.$2",
                "type": "Object",
                "tags": [],
                "label": "runtimeField",
                "description": [
                  "Runtime field definition"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.hasRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "hasRuntimeField",
            "description": [
              "\nChecks if runtime field exists"
            ],
            "signature": [
              "(name: string) => boolean"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.hasRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "getRuntimeField",
            "description": [
              "\nReturns runtime field if exists"
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              " | null"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.getRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Runtime field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getAllRuntimeFields",
            "type": "Function",
            "tags": [],
            "label": "getAllRuntimeFields",
            "description": [
              "\nGet all runtime field definitions.\nNOTE: this does not strip out runtime fields that match mapped field names"
            ],
            "signature": [
              "() => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": [
              "map of runtime field definitions by field name"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getFieldsByRuntimeFieldName",
            "type": "Function",
            "tags": [],
            "label": "getFieldsByRuntimeFieldName",
            "description": [
              "\nReturns data view fields backed by runtime fields."
            ],
            "signature": [
              "(name: string) => Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "> | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.getFieldsByRuntimeFieldName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "runtime field name"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "map of DataViewFields (that are runtime fields) by field name"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.replaceAllRuntimeFields",
            "type": "Function",
            "tags": [],
            "label": "replaceAllRuntimeFields",
            "description": [
              "\nReplaces all existing runtime fields with new fields."
            ],
            "signature": [
              "(newFields: Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeField",
                "text": "RuntimeField"
              },
              ">) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.replaceAllRuntimeFields.$1",
                "type": "Object",
                "tags": [],
                "label": "newFields",
                "description": [
                  "Map of runtime field definitions by field name"
                ],
                "signature": [
                  "Record<string, ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.RuntimeField",
                    "text": "RuntimeField"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.removeRuntimeField",
            "type": "Function",
            "tags": [],
            "label": "removeRuntimeField",
            "description": [
              "\nRemove a runtime field - removed from mapped field or removed unmapped\nfield as appropriate. Doesn't clear associated field attributes."
            ],
            "signature": [
              "(name: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.removeRuntimeField.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "- Field name to remove"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getRuntimeMappings",
            "type": "Function",
            "tags": [],
            "label": "getRuntimeMappings",
            "description": [
              "\nReturn the \"runtime_mappings\" section of the ES search query."
            ],
            "signature": [
              "() => ",
              "MappingRuntimeFields"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.getFormatterForFieldNoDefault",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForFieldNoDefault",
            "description": [
              "\nGet formatter for a given field name. Return undefined if none exists."
            ],
            "signature": [
              "(fieldname: string) => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.getFormatterForFieldNoDefault.$1",
                "type": "string",
                "tags": [],
                "label": "fieldname",
                "description": [
                  "name of field to get formatter for"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.setFieldAttrs",
            "type": "Function",
            "tags": [],
            "label": "setFieldAttrs",
            "description": [
              "\nSet field attribute"
            ],
            "signature": [
              "<K extends keyof ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              ">(fieldName: string, attrName: K, value: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrSet",
                "text": "FieldAttrSet"
              },
              "[K]) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.setFieldAttrs.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set attribute on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.setFieldAttrs.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "attrName",
                "description": [
                  "name of attribute to set"
                ],
                "signature": [
                  "K"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.setFieldAttrs.$3",
                "type": "Uncategorized",
                "tags": [],
                "label": "value",
                "description": [
                  "value of attribute"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldAttrSet",
                    "text": "FieldAttrSet"
                  },
                  "[K]"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.setFieldCustomLabel",
            "type": "Function",
            "tags": [],
            "label": "setFieldCustomLabel",
            "description": [
              "\nSet field custom label"
            ],
            "signature": [
              "(fieldName: string, customLabel: string | null | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.setFieldCustomLabel.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set custom label on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.setFieldCustomLabel.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "customLabel",
                "description": [
                  "custom label value. If undefined, custom label is removed"
                ],
                "signature": [
                  "string | null | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.setFieldCount",
            "type": "Function",
            "tags": [],
            "label": "setFieldCount",
            "description": [
              "\nSet field count"
            ],
            "signature": [
              "(fieldName: string, count: number | null | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.setFieldCount.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set count on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.setFieldCount.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "count",
                "description": [
                  "count value. If undefined, count is removed"
                ],
                "signature": [
                  "number | null | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.setFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "setFieldFormat",
            "description": [
              "\nSet field formatter"
            ],
            "signature": [
              "(fieldName: string, format: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.setFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "name of field to set format on"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.setFieldFormat.$2",
                "type": "Object",
                "tags": [],
                "label": "format",
                "description": [
                  "field format in serialized form"
                ],
                "signature": [
                  {
                    "pluginId": "fieldFormats",
                    "scope": "common",
                    "docId": "kibFieldFormatsPluginApi",
                    "section": "def-common.SerializedFieldFormat",
                    "text": "SerializedFieldFormat"
                  },
                  "<{}, ",
                  {
                    "pluginId": "@kbn/utility-types",
                    "scope": "common",
                    "docId": "kibKbnUtilityTypesPluginApi",
                    "section": "def-common.SerializableRecord",
                    "text": "SerializableRecord"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataView.deleteFieldFormat",
            "type": "Function",
            "tags": [],
            "label": "deleteFieldFormat",
            "description": [
              "\nRemove field format from the field format map."
            ],
            "signature": [
              "(fieldName: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataView.deleteFieldFormat.$1",
                "type": "string",
                "tags": [],
                "label": "fieldName",
                "description": [
                  "field name associated with the format for removal"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_view.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewField",
        "type": "Class",
        "tags": [],
        "label": "DataViewField",
        "description": [
          "\nData view field class"
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewField",
            "text": "DataViewField"
          },
          " implements ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewFieldBase",
            "text": "DataViewFieldBase"
          }
        ],
        "path": "src/plugins/data_views/common/fields/data_view_field.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.spec",
            "type": "CompoundType",
            "tags": [],
            "label": "spec",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.DataViewFieldBase",
                "text": "DataViewFieldBase"
              },
              " & { count?: number | undefined; conflictDescriptions?: Record<string, string[]> | undefined; format?: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              "> | undefined; esTypes?: string[] | undefined; searchable: boolean; aggregatable: boolean; readFromDocValues?: boolean | undefined; indexed?: boolean | undefined; customLabel?: string | undefined; runtimeField?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSpec",
                "text": "RuntimeFieldSpec"
              },
              " | undefined; fixedInterval?: string[] | undefined; timeZone?: string[] | undefined; timeSeriesDimension?: boolean | undefined; timeSeriesMetric?: \"gauge\" | \"histogram\" | \"summary\" | \"counter\" | undefined; shortDotsEnable?: boolean | undefined; isMapped?: boolean | undefined; parentName?: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.Unnamed",
            "type": "Function",
            "tags": [
              "constructor"
            ],
            "label": "Constructor",
            "description": [
              "\nDataView constructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewField.Unnamed.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "spec",
                "description": [
                  "Configuration for the field"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/data_view_field.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.count",
            "type": "number",
            "tags": [],
            "label": "count",
            "description": [
              "\nCount is used for field popularity in discover."
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.count",
            "type": "number",
            "tags": [],
            "label": "count",
            "description": [
              "\nSet count, which is used for field popularity in discover."
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.runtimeField",
            "type": "CompoundType",
            "tags": [],
            "label": "runtimeField",
            "description": [
              "\nReturns runtime field definition or undefined if field is not runtime field."
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSpec",
                "text": "RuntimeFieldSpec"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.runtimeField",
            "type": "CompoundType",
            "tags": [],
            "label": "runtimeField",
            "description": [
              "\nSets runtime field definition or unsets if undefined is provided."
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSpec",
                "text": "RuntimeFieldSpec"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.script",
            "type": "string",
            "tags": [],
            "label": "script",
            "description": [
              "\nScript field code"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.script",
            "type": "string",
            "tags": [],
            "label": "script",
            "description": [
              "\nSets scripted field painless code"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.lang",
            "type": "string",
            "tags": [],
            "label": "lang",
            "description": [
              "\nScript field language"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.lang",
            "type": "string",
            "tags": [],
            "label": "lang",
            "description": [
              "\nSets scripted field langauge."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [
              "\nReturns custom label if set, otherwise undefined."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [
              "\nSets custom label for field, or unsets if passed undefined."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.conflictDescriptions",
            "type": "Object",
            "tags": [],
            "label": "conflictDescriptions",
            "description": [
              "\nDescription of field type conflicts across different indices in the same index pattern."
            ],
            "signature": [
              "Record<string, string[]> | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.conflictDescriptions",
            "type": "Object",
            "tags": [],
            "label": "conflictDescriptions",
            "description": [
              "\nSets conflict descriptions for field."
            ],
            "signature": [
              "Record<string, string[]> | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nGet field name"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.displayName",
            "type": "string",
            "tags": [],
            "label": "displayName",
            "description": [
              "\nGets display name, calcualted based on name, custom label and shortDotsEnable."
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nGets field type"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.esTypes",
            "type": "Array",
            "tags": [],
            "label": "esTypes",
            "description": [
              "\nGets ES types as string array"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.scripted",
            "type": "boolean",
            "tags": [],
            "label": "scripted",
            "description": [
              "\nReturns true if scripted field"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.searchable",
            "type": "boolean",
            "tags": [],
            "label": "searchable",
            "description": [
              "\nReturns true if field is searchable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.aggregatable",
            "type": "boolean",
            "tags": [],
            "label": "aggregatable",
            "description": [
              "\nReturns true if field is aggregatable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.timeSeriesDimension",
            "type": "boolean",
            "tags": [],
            "label": "timeSeriesDimension",
            "description": [
              "\nreturns true if field is a TSDB dimension field"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.timeSeriesMetric",
            "type": "CompoundType",
            "tags": [],
            "label": "timeSeriesMetric",
            "description": [
              "\nreturns type of TSDB metric or undefined"
            ],
            "signature": [
              "\"gauge\" | \"histogram\" | \"summary\" | \"counter\" | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.fixedInterval",
            "type": "Array",
            "tags": [],
            "label": "fixedInterval",
            "description": [
              "\nreturns list of alloeed fixed intervals"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.isRolledUpField",
            "type": "CompoundType",
            "tags": [],
            "label": "isRolledUpField",
            "description": [
              "\nreturns true if the field is of rolled up type"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.timeZone",
            "type": "Array",
            "tags": [],
            "label": "timeZone",
            "description": [
              "\nreturn list of allowed time zones"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.readFromDocValues",
            "type": "boolean",
            "tags": [],
            "label": "readFromDocValues",
            "description": [
              "\nReturns true if field is available via doc values"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.subType",
            "type": "CompoundType",
            "tags": [],
            "label": "subType",
            "description": [
              "\nReturns field subtype, multi, nested, or undefined if neither"
            ],
            "signature": [
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.isMapped",
            "type": "CompoundType",
            "tags": [],
            "label": "isMapped",
            "description": [
              "\nIs the field part of the index mapping?"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.isRuntimeField",
            "type": "boolean",
            "tags": [],
            "label": "isRuntimeField",
            "description": [
              "\nReturns true if runtime field defined on data view"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.sortable",
            "type": "boolean",
            "tags": [],
            "label": "sortable",
            "description": [
              "\nReturns true if field is sortable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.filterable",
            "type": "boolean",
            "tags": [],
            "label": "filterable",
            "description": [
              "\nReturns true if field is filterable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.visualizable",
            "type": "boolean",
            "tags": [],
            "label": "visualizable",
            "description": [
              "\nReturns true if field is visualizable"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.isSubtypeNested",
            "type": "Function",
            "tags": [],
            "label": "isSubtypeNested",
            "description": [
              "\nReturns true if field is subtype nested"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.isSubtypeMulti",
            "type": "Function",
            "tags": [],
            "label": "isSubtypeMulti",
            "description": [
              "\nReturns true if field is subtype multi"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.getSubtypeNested",
            "type": "Function",
            "tags": [],
            "label": "getSubtypeNested",
            "description": [
              "\nReturns subtype nested data if exists"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubTypeNested",
                "text": "IFieldSubTypeNested"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.getSubtypeMulti",
            "type": "Function",
            "tags": [],
            "label": "getSubtypeMulti",
            "description": [
              "\nReturns subtype multi data if exists"
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubTypeMulti",
                "text": "IFieldSubTypeMulti"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.deleteCount",
            "type": "Function",
            "tags": [],
            "label": "deleteCount",
            "description": [
              "\nDeletes count value. Popularity as used by discover"
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.toJSON",
            "type": "Function",
            "tags": [],
            "label": "toJSON",
            "description": [
              "\nJSON version of field"
            ],
            "signature": [
              "() => { count: number; script: string | undefined; lang: string | undefined; conflictDescriptions: Record<string, string[]> | undefined; name: string; type: string; esTypes: string[] | undefined; scripted: boolean; searchable: boolean; aggregatable: boolean; readFromDocValues: boolean; subType: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; customLabel: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.toSpec",
            "type": "Function",
            "tags": [],
            "label": "toSpec",
            "description": [
              "\nGet field in serialized form - fieldspec."
            ],
            "signature": [
              "(config?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.ToSpecConfig",
                "text": "ToSpecConfig"
              },
              ") => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              }
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewField.toSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "config",
                "description": [
                  "provide a method to get a field formatter"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.ToSpecConfig",
                    "text": "ToSpecConfig"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/data_view_field.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "field in serialized form - field spec"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewField.isRuntimeCompositeSubField",
            "type": "Function",
            "tags": [],
            "label": "isRuntimeCompositeSubField",
            "description": [
              "\nReturns true if composite runtime field"
            ],
            "signature": [
              "() => boolean"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewInsufficientAccessError",
        "type": "Class",
        "tags": [
          "constructor"
        ],
        "label": "DataViewInsufficientAccessError",
        "description": [
          "\nError thrown when action attempted without sufficient access."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewInsufficientAccessError",
            "text": "DataViewInsufficientAccessError"
          },
          " extends Error"
        ],
        "path": "src/plugins/data_views/common/errors/insufficient_access.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewInsufficientAccessError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/errors/insufficient_access.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewInsufficientAccessError.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "savedObjectId",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data_views/common/errors/insufficient_access.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewSavedObjectConflictError",
        "type": "Class",
        "tags": [],
        "label": "DataViewSavedObjectConflictError",
        "description": [
          "\nError thrown when saved object has been changed when attempting to save."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSavedObjectConflictError",
            "text": "DataViewSavedObjectConflictError"
          },
          " extends Error"
        ],
        "path": "src/plugins/data_views/common/errors/data_view_saved_object_conflict.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewSavedObjectConflictError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/errors/data_view_saved_object_conflict.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewSavedObjectConflictError.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "savedObjectId",
                "description": [
                  "saved object id with conflict"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/errors/data_view_saved_object_conflict.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewsService",
        "type": "Class",
        "tags": [],
        "label": "DataViewsService",
        "description": [
          "\nData views service, providing CRUD operations for data views."
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.getCanSave",
            "type": "Function",
            "tags": [],
            "label": "getCanSave",
            "description": [
              "\nCan the user save data views?"
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nDataViewsService constructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "deps",
                "description": [
                  "Service dependencies"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewsServiceDeps",
                    "text": "DataViewsServiceDeps"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.getIds",
            "type": "Function",
            "tags": [],
            "label": "getIds",
            "description": [
              "\nGets list of index pattern ids."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.getIds.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.getTitles",
            "type": "Function",
            "tags": [],
            "label": "getTitles",
            "description": [
              "\nGets list of index pattern titles."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.getTitles.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nFind and load index patterns by title."
            ],
            "signature": [
              "(search: string, size?: number) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.find.$1",
                "type": "string",
                "tags": [],
                "label": "search",
                "description": [
                  "Search string"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.find.$2",
                "type": "number",
                "tags": [],
                "label": "size",
                "description": [
                  "Number of data views to return"
                ],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataView[]"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.getIdsWithTitle",
            "type": "Function",
            "tags": [],
            "label": "getIdsWithTitle",
            "description": [
              "\nGets list of index pattern ids with titles."
            ],
            "signature": [
              "(refresh?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewListItem",
                "text": "DataViewListItem"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.getIdsWithTitle.$1",
                "type": "boolean",
                "tags": [],
                "label": "refresh",
                "description": [
                  "Force refresh of index pattern list"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.clearCache",
            "type": "Function",
            "tags": [],
            "label": "clearCache",
            "description": [
              "\nClear index pattern saved objects cache."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.clearInstanceCache",
            "type": "Function",
            "tags": [],
            "label": "clearInstanceCache",
            "description": [
              "\nClear index pattern instance cache"
            ],
            "signature": [
              "(id?: string | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.clearInstanceCache.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.getCache",
            "type": "Function",
            "tags": [],
            "label": "getCache",
            "description": [
              "\nGet cache, contains data view saved objects."
            ],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSavedObjectAttrs",
                "text": "DataViewSavedObjectAttrs"
              },
              ">[] | null | undefined>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.getDefault",
            "type": "Function",
            "tags": [],
            "label": "getDefault",
            "description": [
              "\nGet default index pattern"
            ],
            "signature": [
              "(displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.getDefault.$1",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.getDefaultId",
            "type": "Function",
            "tags": [],
            "label": "getDefaultId",
            "description": [
              "\nGet default index pattern id"
            ],
            "signature": [
              "() => Promise<string | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.setDefault",
            "type": "Function",
            "tags": [],
            "label": "setDefault",
            "description": [
              "\nOptionally set default index pattern, unless force = true"
            ],
            "signature": [
              "(id: string | null, force?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.setDefault.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "id",
                "description": [
                  "data view id"
                ],
                "signature": [
                  "string | null"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.setDefault.$2",
                "type": "boolean",
                "tags": [],
                "label": "force",
                "description": [
                  "set default data view even if there's an existing default"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.hasUserDataView",
            "type": "Function",
            "tags": [],
            "label": "hasUserDataView",
            "description": [
              "\nChecks if current user has a user created index pattern ignoring fleet's server default index patterns."
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.getFieldsForWildcard",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForWildcard",
            "description": [
              "\nGet field list by providing { pattern }."
            ],
            "signature": [
              "(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              ") => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "options for getting field list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.getFieldsForIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForIndexPattern",
            "description": [
              "\nGet field list by providing an index patttern (or spec)."
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", options?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.getFieldsForIndexPattern.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.getFieldsForIndexPattern.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "options for getting field list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "FieldSpec[]"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.refreshFields",
            "type": "Function",
            "tags": [],
            "label": "refreshFields",
            "description": [
              "\nRefresh field list for a given index pattern."
            ],
            "signature": [
              "(dataView: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", displayErrors?: boolean) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.refreshFields.$1",
                "type": "Object",
                "tags": [],
                "label": "dataView",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.refreshFields.$2",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.fieldArrayToMap",
            "type": "Function",
            "tags": [],
            "label": "fieldArrayToMap",
            "description": [
              "\nConverts field array to map."
            ],
            "signature": [
              "(fields: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[], fieldAttrs?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrs",
                "text": "FieldAttrs"
              },
              " | undefined) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.fieldArrayToMap.$1",
                "type": "Array",
                "tags": [],
                "label": "fields",
                "description": [
                  ": FieldSpec[]"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  "[]"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.fieldArrayToMap.$2",
                "type": "Object",
                "tags": [],
                "label": "fieldAttrs",
                "description": [
                  ": FieldAttrs"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldAttrs",
                    "text": "FieldAttrs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "Record<string, FieldSpec>"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.savedObjectToSpec",
            "type": "Function",
            "tags": [],
            "label": "savedObjectToSpec",
            "description": [
              "\nConverts data view saved object to data view spec."
            ],
            "signature": [
              "(savedObject: ",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ">) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.savedObjectToSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "savedObject",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-common",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                    "section": "def-common.SavedObject",
                    "text": "SavedObject"
                  },
                  "<",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataViewSpec"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet an index pattern by id, cache optimized."
            ],
            "signature": [
              "(id: string, displayErrors?: boolean, refreshFields?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.get.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.get.$2",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.get.$3",
                "type": "boolean",
                "tags": [],
                "label": "refreshFields",
                "description": [
                  "- If set true, will fetch fields from the index pattern"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreate data view instance."
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.create.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [
                  "data view spec"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.create.$2",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "if true, will not fetch fields"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.create.$3",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "DataView"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.createAndSave",
            "type": "Function",
            "tags": [],
            "label": "createAndSave",
            "description": [
              "\nCreate a new data view and save it right away."
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", override?: boolean, skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.createAndSave.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [
                  "data view spec"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.createAndSave.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.createAndSave.$3",
                "type": "boolean",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "Whether to skip field refresh step."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.createAndSave.$4",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.createSavedObject",
            "type": "Function",
            "tags": [],
            "label": "createSavedObject",
            "description": [
              "\nSave a new data view."
            ],
            "signature": [
              "(dataView: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", override?: boolean, displayErrors?: boolean) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.createSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "dataView",
                "description": [
                  "data view instance"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.createSavedObject.$2",
                "type": "boolean",
                "tags": [],
                "label": "override",
                "description": [
                  "Overwrite if existing index pattern exists"
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.createSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.updateSavedObject",
            "type": "Function",
            "tags": [],
            "label": "updateSavedObject",
            "description": [
              "\nSave existing data view. Will attempt to merge differences if there are conflicts."
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", saveAttempts?: number, ignoreErrors?: boolean, displayErrors?: boolean) => Promise<void | Error | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.updateSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.updateSavedObject.$2",
                "type": "number",
                "tags": [],
                "label": "saveAttempts",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.updateSavedObject.$3",
                "type": "boolean",
                "tags": [],
                "label": "ignoreErrors",
                "description": [],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.updateSavedObject.$4",
                "type": "boolean",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDeletes an index pattern from .kibana index."
            ],
            "signature": [
              "(indexPatternId: string) => Promise<{}>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.delete.$1",
                "type": "string",
                "tags": [],
                "label": "indexPatternId",
                "description": [
                  ": Id of kibana Index Pattern to delete"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsService.getDefaultDataView",
            "type": "Function",
            "tags": [],
            "label": "getDefaultDataView",
            "description": [
              "\nReturns the default data view as an object.\nIf no default is found, or it is missing\nanother data view is selected as default and returned.\nIf no possible data view found to become a default returns null.\n"
            ],
            "signature": [
              "(refreshFields?: boolean | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsService.getDefaultDataView.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "refreshFields",
                "description": [
                  "- if true, will refresh the fields of the default data view"
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "default data view"
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DuplicateDataViewError",
        "type": "Class",
        "tags": [],
        "label": "DuplicateDataViewError",
        "description": [
          "\nError thrown when attempting to create duplicate index pattern based on title."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DuplicateDataViewError",
            "text": "DuplicateDataViewError"
          },
          " extends Error"
        ],
        "path": "src/plugins/data_views/common/errors/duplicate_index_pattern.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DuplicateDataViewError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nconstructor"
            ],
            "signature": [
              "any"
            ],
            "path": "src/plugins/data_views/common/errors/duplicate_index_pattern.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DuplicateDataViewError.Unnamed.$1",
                "type": "string",
                "tags": [],
                "label": "message",
                "description": [
                  "- Error message"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/errors/duplicate_index_pattern.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "dataViews",
        "id": "def-common.fieldList",
        "type": "Function",
        "tags": [],
        "label": "fieldList",
        "description": [],
        "signature": [
          "(specs?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "[], shortDotsEnable?: boolean) => ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.IIndexPatternFieldList",
            "text": "IIndexPatternFieldList"
          }
        ],
        "path": "src/plugins/data_views/common/fields/field_list.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.fieldList.$1",
            "type": "Array",
            "tags": [],
            "label": "specs",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.fieldList.$2",
            "type": "boolean",
            "tags": [],
            "label": "shortDotsEnable",
            "description": [],
            "signature": [
              "boolean"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.getFieldSubtypeMulti",
        "type": "Function",
        "tags": [],
        "label": "getFieldSubtypeMulti",
        "description": [],
        "signature": [
          "(field: HasSubtype) => ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.IFieldSubTypeMulti",
            "text": "IFieldSubTypeMulti"
          },
          " | undefined"
        ],
        "path": "src/plugins/data_views/common/fields/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.getFieldSubtypeMulti.$1",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "{ subType?: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/utils.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.getFieldSubtypeNested",
        "type": "Function",
        "tags": [],
        "label": "getFieldSubtypeNested",
        "description": [],
        "signature": [
          "(field: HasSubtype) => ",
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.IFieldSubTypeNested",
            "text": "IFieldSubTypeNested"
          },
          " | undefined"
        ],
        "path": "src/plugins/data_views/common/fields/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.getFieldSubtypeNested.$1",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "{ subType?: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/utils.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.getIndexPatternLoadMeta",
        "type": "Function",
        "tags": [],
        "label": "getIndexPatternLoadMeta",
        "description": [],
        "signature": [
          "() => Omit<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.IndexPatternLoadExpressionFunctionDefinition",
            "text": "IndexPatternLoadExpressionFunctionDefinition"
          },
          ", \"fn\">"
        ],
        "path": "src/plugins/data_views/common/expressions/load_index_pattern.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.isFilterable",
        "type": "Function",
        "tags": [],
        "label": "isFilterable",
        "description": [],
        "signature": [
          "(field: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewField",
            "text": "DataViewField"
          },
          ") => boolean"
        ],
        "path": "src/plugins/data_views/common/fields/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.isFilterable.$1",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              }
            ],
            "path": "src/plugins/data_views/common/fields/utils.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.isMultiField",
        "type": "Function",
        "tags": [],
        "label": "isMultiField",
        "description": [],
        "signature": [
          "(field: HasSubtype) => boolean"
        ],
        "path": "src/plugins/data_views/common/fields/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.isMultiField.$1",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "{ subType?: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/utils.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.isNestedField",
        "type": "Function",
        "tags": [],
        "label": "isNestedField",
        "description": [],
        "signature": [
          "(field: HasSubtype) => boolean"
        ],
        "path": "src/plugins/data_views/common/fields/utils.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.isNestedField.$1",
            "type": "Object",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "{ subType?: ",
              {
                "pluginId": "@kbn/es-query",
                "scope": "common",
                "docId": "kibKbnEsQueryPluginApi",
                "section": "def-common.IFieldSubType",
                "text": "IFieldSubType"
              },
              " | undefined; }"
            ],
            "path": "src/plugins/data_views/common/fields/utils.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewAttributes",
        "type": "Interface",
        "tags": [],
        "label": "DataViewAttributes",
        "description": [
          "\nInterface for the data view saved object"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewAttributes.fields",
            "type": "string",
            "tags": [],
            "label": "fields",
            "description": [
              "\nFields as a serialized array of field specs"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewAttributes.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "\nData view title"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewAttributes.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nData view type, default or rollup"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewAttributes.typeMeta",
            "type": "string",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nType metadata information, serialized. Only used by rollup data views."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewAttributes.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [
              "\nTime field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewAttributes.sourceFilters",
            "type": "string",
            "tags": [],
            "label": "sourceFilters",
            "description": [
              "\nSerialized array of filters. Used by discover to hide fields."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewAttributes.fieldFormatMap",
            "type": "string",
            "tags": [],
            "label": "fieldFormatMap",
            "description": [
              "\nSerialized map of field formats by field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewAttributes.fieldAttrs",
            "type": "string",
            "tags": [],
            "label": "fieldAttrs",
            "description": [
              "\nSerialized map of field attributes, currently field count and name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewAttributes.runtimeFieldMap",
            "type": "string",
            "tags": [],
            "label": "runtimeFieldMap",
            "description": [
              "\nSerialized map of runtime field definitions, by field name"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewAttributes.allowNoIndex",
            "type": "CompoundType",
            "tags": [],
            "label": "allowNoIndex",
            "description": [
              "\nPrevents errors when index pattern exists before indices"
            ],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewAttributes.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [
              "\nName of the data view. Human readable name used to differentiate data view."
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewListItem",
        "type": "Interface",
        "tags": [],
        "label": "DataViewListItem",
        "description": [
          "\nResult from data view search - summary data."
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewListItem.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nSaved object id (or generated id if in-memory only)"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewListItem.namespaces",
            "type": "Array",
            "tags": [],
            "label": "namespaces",
            "description": [
              "\nNamespace ids"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewListItem.title",
            "type": "string",
            "tags": [],
            "label": "title",
            "description": [
              "\nData view title"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewListItem.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nData view type"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewListItem.typeMeta",
            "type": "Object",
            "tags": [],
            "label": "typeMeta",
            "description": [
              "\nData view type meta"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewListItem.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewsServiceDeps",
        "type": "Interface",
        "tags": [],
        "label": "DataViewsServiceDeps",
        "description": [
          "\nData views API service dependencies"
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServiceDeps.uiSettings",
            "type": "Object",
            "tags": [],
            "label": "uiSettings",
            "description": [
              "\nUiSettings service instance wrapped in a common interface"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.UiSettingsCommon",
                "text": "UiSettingsCommon"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServiceDeps.savedObjectsClient",
            "type": "Object",
            "tags": [],
            "label": "savedObjectsClient",
            "description": [
              "\nSaved objects client interface wrapped in a common interface"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.SavedObjectsClientCommon",
                "text": "SavedObjectsClientCommon"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServiceDeps.apiClient",
            "type": "Object",
            "tags": [],
            "label": "apiClient",
            "description": [
              "\nWrapper around http call functionality so it can be used on client or server"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.IDataViewsApiClient",
                "text": "IDataViewsApiClient"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServiceDeps.fieldFormats",
            "type": "Object",
            "tags": [],
            "label": "fieldFormats",
            "description": [
              "\nField formats service"
            ],
            "signature": [
              "{ has: (id: string) => boolean; deserialize: ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FormatFactory",
                "text": "FormatFactory"
              },
              "; getDefaultConfig: (fieldType: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.KBN_FIELD_TYPES",
                "text": "KBN_FIELD_TYPES"
              },
              ", esTypes?: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.ES_FIELD_TYPES",
                "text": "ES_FIELD_TYPES"
              },
              "[] | undefined) => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormatConfig",
                "text": "FieldFormatConfig"
              },
              "; getType: (formatId: string) => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormatInstanceType",
                "text": "FieldFormatInstanceType"
              },
              " | undefined; getTypeWithoutMetaParams: (formatId: string) => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormatInstanceType",
                "text": "FieldFormatInstanceType"
              },
              " | undefined; getDefaultType: (fieldType: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.KBN_FIELD_TYPES",
                "text": "KBN_FIELD_TYPES"
              },
              ", esTypes?: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.ES_FIELD_TYPES",
                "text": "ES_FIELD_TYPES"
              },
              "[] | undefined) => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormatInstanceType",
                "text": "FieldFormatInstanceType"
              },
              " | undefined; getTypeNameByEsTypes: (esTypes: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.ES_FIELD_TYPES",
                "text": "ES_FIELD_TYPES"
              },
              "[] | undefined) => ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.ES_FIELD_TYPES",
                "text": "ES_FIELD_TYPES"
              },
              " | undefined; getDefaultTypeName: (fieldType: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.KBN_FIELD_TYPES",
                "text": "KBN_FIELD_TYPES"
              },
              ", esTypes?: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.ES_FIELD_TYPES",
                "text": "ES_FIELD_TYPES"
              },
              "[] | undefined) => ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.ES_FIELD_TYPES",
                "text": "ES_FIELD_TYPES"
              },
              " | ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.KBN_FIELD_TYPES",
                "text": "KBN_FIELD_TYPES"
              },
              "; getInstance: (formatId: string, params?: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              "; getDefaultInstancePlain: (fieldType: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.KBN_FIELD_TYPES",
                "text": "KBN_FIELD_TYPES"
              },
              ", esTypes?: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.ES_FIELD_TYPES",
                "text": "ES_FIELD_TYPES"
              },
              "[] | undefined, params?: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              "; getDefaultInstanceCacheResolver: (fieldType: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.KBN_FIELD_TYPES",
                "text": "KBN_FIELD_TYPES"
              },
              ", esTypes?: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.ES_FIELD_TYPES",
                "text": "ES_FIELD_TYPES"
              },
              "[] | undefined) => string; getByFieldType: (fieldType: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.KBN_FIELD_TYPES",
                "text": "KBN_FIELD_TYPES"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormatInstanceType",
                "text": "FieldFormatInstanceType"
              },
              "[]; getDefaultInstance: (fieldType: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.KBN_FIELD_TYPES",
                "text": "KBN_FIELD_TYPES"
              },
              ", esTypes?: ",
              {
                "pluginId": "@kbn/field-types",
                "scope": "common",
                "docId": "kibKbnFieldTypesPluginApi",
                "section": "def-common.ES_FIELD_TYPES",
                "text": "ES_FIELD_TYPES"
              },
              "[] | undefined, params?: ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              "; parseDefaultTypeMap: (value: Record<string, ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormatConfig",
                "text": "FieldFormatConfig"
              },
              ">) => void; }"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServiceDeps.onNotification",
            "type": "Function",
            "tags": [],
            "label": "onNotification",
            "description": [
              "\nHandler for service notifications"
            ],
            "signature": [
              "(toastInputFields: ",
              {
                "pluginId": "@kbn/core-notifications-browser",
                "scope": "common",
                "docId": "kibKbnCoreNotificationsBrowserPluginApi",
                "section": "def-common.ToastInputFields",
                "text": "ToastInputFields"
              },
              ", key: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServiceDeps.onNotification.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "toastInputFields",
                "description": [],
                "signature": [
                  "Pick<",
                  "Toast",
                  ", \"children\" | \"onError\" | \"hidden\" | \"color\" | \"className\" | \"onChange\" | \"onKeyDown\" | \"onClick\" | \"placeholder\" | \"security\" | \"defaultValue\" | \"lang\" | \"defaultChecked\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onErrorCapture\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"toastLifeTimeMs\" | \"iconType\" | \"onClose\" | \"data-test-subj\" | \"css\"> & { title?: string | ",
                  {
                    "pluginId": "@kbn/core-mount-utils-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreMountUtilsBrowserPluginApi",
                    "section": "def-common.MountPoint",
                    "text": "MountPoint"
                  },
                  "<HTMLElement> | undefined; text?: string | ",
                  {
                    "pluginId": "@kbn/core-mount-utils-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreMountUtilsBrowserPluginApi",
                    "section": "def-common.MountPoint",
                    "text": "MountPoint"
                  },
                  "<HTMLElement> | undefined; }"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServiceDeps.onNotification.$2",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServiceDeps.onError",
            "type": "Function",
            "tags": [],
            "label": "onError",
            "description": [
              "\nHandler for service errors"
            ],
            "signature": [
              "(error: Error, toastInputFields: ",
              {
                "pluginId": "@kbn/core-notifications-browser",
                "scope": "common",
                "docId": "kibKbnCoreNotificationsBrowserPluginApi",
                "section": "def-common.ErrorToastOptions",
                "text": "ErrorToastOptions"
              },
              ", key: string) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServiceDeps.onError.$1",
                "type": "Object",
                "tags": [],
                "label": "error",
                "description": [],
                "signature": [
                  "Error"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServiceDeps.onError.$2",
                "type": "Object",
                "tags": [],
                "label": "toastInputFields",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-notifications-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreNotificationsBrowserPluginApi",
                    "section": "def-common.ErrorToastOptions",
                    "text": "ErrorToastOptions"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServiceDeps.onError.$3",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false
              }
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServiceDeps.onRedirectNoIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "onRedirectNoIndexPattern",
            "description": [
              "\nRedirects when there's no data view. only used on client"
            ],
            "signature": [
              "(() => void) | undefined"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServiceDeps.getCanSave",
            "type": "Function",
            "tags": [],
            "label": "getCanSave",
            "description": [
              "\nDetermines whether the user can save data views"
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServiceDeps.getCanSaveAdvancedSettings",
            "type": "Function",
            "tags": [],
            "label": "getCanSaveAdvancedSettings",
            "description": [
              "\nDetermines whether the user can save advancedSettings (used for defaultIndex)"
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewsServicePublicMethods",
        "type": "Interface",
        "tags": [],
        "label": "DataViewsServicePublicMethods",
        "description": [
          "\nData views API service methods"
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.clearCache",
            "type": "Function",
            "tags": [],
            "label": "clearCache",
            "description": [
              "\nClear the cache of data view saved objects."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.clearInstanceCache",
            "type": "Function",
            "tags": [],
            "label": "clearInstanceCache",
            "description": [
              "\nClear the cache of data view instances."
            ],
            "signature": [
              "(id?: string | undefined) => void"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.clearInstanceCache.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [],
                "signature": [
                  "string | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreate data view based on the provided spec."
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", skipFetchFields?: boolean | undefined, displayErrors?: boolean | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.create.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [
                  "- Data view spec."
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.create.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "- If true, do not fetch fields."
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.create.$3",
                "type": "CompoundType",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.createAndSave",
            "type": "Function",
            "tags": [],
            "label": "createAndSave",
            "description": [
              "\nCreate and save data view based on provided spec."
            ],
            "signature": [
              "(spec: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", override?: boolean | undefined, skipFetchFields?: boolean | undefined, displayErrors?: boolean | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.createAndSave.$1",
                "type": "Object",
                "tags": [],
                "label": "spec",
                "description": [
                  "- Data view spec."
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.createAndSave.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "override",
                "description": [
                  "- If true, save over existing data view"
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.createAndSave.$3",
                "type": "CompoundType",
                "tags": [],
                "label": "skipFetchFields",
                "description": [
                  "- If true, do not fetch fields."
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.createAndSave.$4",
                "type": "CompoundType",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.createSavedObject",
            "type": "Function",
            "tags": [],
            "label": "createSavedObject",
            "description": [
              "\nSave data view"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", override?: boolean | undefined, displayErrors?: boolean | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.createSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.createSavedObject.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "override",
                "description": [
                  "- If true, save over existing data view"
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.createSavedObject.$3",
                "type": "CompoundType",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDelete data view"
            ],
            "signature": [
              "(indexPatternId: string) => Promise<{}>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.delete.$1",
                "type": "string",
                "tags": [],
                "label": "indexPatternId",
                "description": [
                  "- Id of the data view to delete."
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.fieldArrayToMap",
            "type": "Function",
            "tags": [
              "params"
            ],
            "label": "fieldArrayToMap",
            "description": [
              "\nTakes field array and field attributes and returns field map by name."
            ],
            "signature": [
              "(fields: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[], fieldAttrs?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrs",
                "text": "FieldAttrs"
              },
              " | undefined) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.fieldArrayToMap.$1",
                "type": "Array",
                "tags": [],
                "label": "fields",
                "description": [
                  "- Array of fieldspecs"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  "[]"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.fieldArrayToMap.$2",
                "type": "Object",
                "tags": [],
                "label": "fieldAttrs",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldAttrs",
                    "text": "FieldAttrs"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "Field map by name"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nSearch for data views based on title"
            ],
            "signature": [
              "(search: string, size?: number | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.find.$1",
                "type": "string",
                "tags": [],
                "label": "search",
                "description": [
                  "- Search string"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.find.$2",
                "type": "number",
                "tags": [],
                "label": "size",
                "description": [
                  "- Number of results to return"
                ],
                "signature": [
                  "number | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet data view by id."
            ],
            "signature": [
              "(id: string, displayErrors?: boolean | undefined, refreshFields?: boolean | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.get.$1",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "- Id of the data view to get."
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.get.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.get.$3",
                "type": "CompoundType",
                "tags": [],
                "label": "refreshFields",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.getCache",
            "type": "Function",
            "tags": [],
            "label": "getCache",
            "description": [
              "\nGet populated data view saved object cache."
            ],
            "signature": [
              "() => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSavedObjectAttrs",
                "text": "DataViewSavedObjectAttrs"
              },
              ">[] | null | undefined>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.getCanSave",
            "type": "Function",
            "tags": [],
            "label": "getCanSave",
            "description": [
              "\nIf user can save data view, return true."
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.getDefault",
            "type": "Function",
            "tags": [],
            "label": "getDefault",
            "description": [
              "\nGet default data view as data view instance."
            ],
            "signature": [
              "(displayErrors?: boolean | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.getDefault.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.getDefaultId",
            "type": "Function",
            "tags": [],
            "label": "getDefaultId",
            "description": [
              "\nGet default data view id."
            ],
            "signature": [
              "() => Promise<string | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.getDefaultDataView",
            "type": "Function",
            "tags": [],
            "label": "getDefaultDataView",
            "description": [
              "\nGet default data view, if it doesn't exist, choose and save new default data view and return it."
            ],
            "signature": [
              "(refreshFields?: boolean | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | null>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.getDefaultDataView.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "refreshFields",
                "description": [
                  "- refresh field list when true"
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.getFieldsForIndexPattern",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForIndexPattern",
            "description": [
              "\nGet fields for data view"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", options?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.getFieldsForIndexPattern.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.getFieldsForIndexPattern.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- Options for getting fields"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  },
                  " | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "FieldSpec array"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.getFieldsForWildcard",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForWildcard",
            "description": [
              "\nGet fields for index pattern string"
            ],
            "signature": [
              "(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              ") => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- options for getting fields"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.getIds",
            "type": "Function",
            "tags": [],
            "label": "getIds",
            "description": [
              "\nGet list of data view ids."
            ],
            "signature": [
              "(refresh?: boolean | undefined) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.getIds.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "refresh",
                "description": [
                  "- clear cache and fetch from server"
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.getIdsWithTitle",
            "type": "Function",
            "tags": [],
            "label": "getIdsWithTitle",
            "description": [
              "\nGet list of data view ids and title (and more) for each data view."
            ],
            "signature": [
              "(refresh?: boolean | undefined) => Promise<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewListItem",
                "text": "DataViewListItem"
              },
              "[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.getIdsWithTitle.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "refresh",
                "description": [
                  "- clear cache and fetch from server"
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.getTitles",
            "type": "Function",
            "tags": [],
            "label": "getTitles",
            "description": [
              "\nGet list of data view ids and title (and more) for each data view."
            ],
            "signature": [
              "(refresh?: boolean | undefined) => Promise<string[]>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.getTitles.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "refresh",
                "description": [
                  "- clear cache and fetch from server"
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.hasUserDataView",
            "type": "Function",
            "tags": [],
            "label": "hasUserDataView",
            "description": [
              "\nReturns true if user has access to view a data view."
            ],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.refreshFields",
            "type": "Function",
            "tags": [
              "params"
            ],
            "label": "refreshFields",
            "description": [
              "\nRefresh fields for data view instance"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", displayErrors?: boolean | undefined) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.refreshFields.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.refreshFields.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "displayErrors",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.savedObjectToSpec",
            "type": "Function",
            "tags": [
              "params",
              "params"
            ],
            "label": "savedObjectToSpec",
            "description": [
              "\nConverts data view saved object to spec"
            ],
            "signature": [
              "(savedObject: ",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ">) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.savedObjectToSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "savedObject",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-common",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                    "section": "def-common.SavedObject",
                    "text": "SavedObject"
                  },
                  "<",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.setDefault",
            "type": "Function",
            "tags": [],
            "label": "setDefault",
            "description": [
              "\nSet default data view."
            ],
            "signature": [
              "(id: string | null, force?: boolean | undefined) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.setDefault.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "id",
                "description": [
                  "- Id of the data view to set as default."
                ],
                "signature": [
                  "string | null"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.setDefault.$2",
                "type": "CompoundType",
                "tags": [],
                "label": "force",
                "description": [
                  "- Overwrite if true"
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewsServicePublicMethods.updateSavedObject",
            "type": "Function",
            "tags": [
              "oaram"
            ],
            "label": "updateSavedObject",
            "description": [
              "\nSave saved object"
            ],
            "signature": [
              "(indexPattern: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ", saveAttempts?: number | undefined, ignoreErrors?: boolean | undefined, displayErrors?: boolean | undefined) => Promise<void | Error | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataView",
                "text": "DataView"
              },
              ">"
            ],
            "path": "src/plugins/data_views/common/data_views/data_views.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.updateSavedObject.$1",
                "type": "Object",
                "tags": [],
                "label": "indexPattern",
                "description": [
                  "- data view instance"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataView",
                    "text": "DataView"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.updateSavedObject.$2",
                "type": "number",
                "tags": [],
                "label": "saveAttempts",
                "description": [
                  "- number of times to try saving"
                ],
                "signature": [
                  "number | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.updateSavedObject.$3",
                "type": "CompoundType",
                "tags": [],
                "label": "ignoreErrors",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewsServicePublicMethods.updateSavedObject.$4",
                "type": "CompoundType",
                "tags": [],
                "label": "displayErrors",
                "description": [
                  "- If set false, API consumer is responsible for displaying and handling errors."
                ],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "src/plugins/data_views/common/data_views/data_views.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.FieldConfiguration",
        "type": "Interface",
        "tags": [],
        "label": "FieldConfiguration",
        "description": [
          "\nField attributes that are user configurable"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.FieldConfiguration.format",
            "type": "CompoundType",
            "tags": [],
            "label": "format",
            "description": [
              "\nField format in serialized form"
            ],
            "signature": [
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              "> | null | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.FieldConfiguration.customLabel",
            "type": "string",
            "tags": [],
            "label": "customLabel",
            "description": [
              "\nCustom label"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.FieldConfiguration.popularity",
            "type": "number",
            "tags": [],
            "label": "popularity",
            "description": [
              "\nPopularity - used for discover"
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.GetFieldsOptions",
        "type": "Interface",
        "tags": [],
        "label": "GetFieldsOptions",
        "description": [],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.GetFieldsOptions.pattern",
            "type": "string",
            "tags": [],
            "label": "pattern",
            "description": [],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.GetFieldsOptions.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.GetFieldsOptions.lookBack",
            "type": "CompoundType",
            "tags": [],
            "label": "lookBack",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.GetFieldsOptions.metaFields",
            "type": "Array",
            "tags": [],
            "label": "metaFields",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.GetFieldsOptions.rollupIndex",
            "type": "string",
            "tags": [],
            "label": "rollupIndex",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.GetFieldsOptions.allowNoIndex",
            "type": "CompoundType",
            "tags": [],
            "label": "allowNoIndex",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.GetFieldsOptions.indexFilter",
            "type": "Object",
            "tags": [],
            "label": "indexFilter",
            "description": [],
            "signature": [
              "QueryDslQueryContainer",
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.GetFieldsOptions.includeUnmapped",
            "type": "CompoundType",
            "tags": [],
            "label": "includeUnmapped",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.GetFieldsOptions.fields",
            "type": "Array",
            "tags": [],
            "label": "fields",
            "description": [],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.HasDataService",
        "type": "Interface",
        "tags": [],
        "label": "HasDataService",
        "description": [],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.HasDataService.hasESData",
            "type": "Function",
            "tags": [],
            "label": "hasESData",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.HasDataService.hasUserDataView",
            "type": "Function",
            "tags": [],
            "label": "hasUserDataView",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.HasDataService.hasDataView",
            "type": "Function",
            "tags": [],
            "label": "hasDataView",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.IDataViewsApiClient",
        "type": "Interface",
        "tags": [],
        "label": "IDataViewsApiClient",
        "description": [],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IDataViewsApiClient.getFieldsForWildcard",
            "type": "Function",
            "tags": [],
            "label": "getFieldsForWildcard",
            "description": [],
            "signature": [
              "(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.GetFieldsOptions",
                "text": "GetFieldsOptions"
              },
              ") => Promise<",
              "FieldsForWildcardResponse",
              ">"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.IDataViewsApiClient.getFieldsForWildcard.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.GetFieldsOptions",
                    "text": "GetFieldsOptions"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IDataViewsApiClient.hasUserDataView",
            "type": "Function",
            "tags": [],
            "label": "hasUserDataView",
            "description": [],
            "signature": [
              "() => Promise<boolean>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.IIndexPatternFieldList",
        "type": "Interface",
        "tags": [],
        "label": "IIndexPatternFieldList",
        "description": [
          "\nInterface for data view field list which _extends_ the array class."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.IIndexPatternFieldList",
            "text": "IIndexPatternFieldList"
          },
          " extends ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewField",
            "text": "DataViewField"
          },
          "[]"
        ],
        "path": "src/plugins/data_views/common/fields/field_list.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IIndexPatternFieldList.add",
            "type": "Function",
            "tags": [],
            "label": "add",
            "description": [
              "\nAdd field to field list."
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              }
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.IIndexPatternFieldList.add.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [
                  "field spec to add field to list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "data view field instance which was added to list"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IIndexPatternFieldList.getAll",
            "type": "Function",
            "tags": [],
            "label": "getAll",
            "description": [
              "\nReturns fields as plain array of data view field instances."
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IIndexPatternFieldList.getByName",
            "type": "Function",
            "tags": [],
            "label": "getByName",
            "description": [
              "\nGet field by name. Optimized, uses map to find field."
            ],
            "signature": [
              "(name: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.IIndexPatternFieldList.getByName.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "name of field to find"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "data view field instance if found, undefined otherwise"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IIndexPatternFieldList.getByType",
            "type": "Function",
            "tags": [],
            "label": "getByType",
            "description": [
              "\nGet fields by field type. Optimized, uses map to find fields."
            ],
            "signature": [
              "(type: string) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              "[]"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.IIndexPatternFieldList.getByType.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "type of field to find"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": [
              "array of data view field instances if found, empty array otherwise"
            ]
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IIndexPatternFieldList.remove",
            "type": "Function",
            "tags": [],
            "label": "remove",
            "description": [
              "\nRemove field from field list"
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => void"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.IIndexPatternFieldList.remove.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [
                  "field for removal"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewField",
                    "text": "DataViewField"
                  },
                  " | ",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IIndexPatternFieldList.removeAll",
            "type": "Function",
            "tags": [],
            "label": "removeAll",
            "description": [
              "\nRemove all fields from field list."
            ],
            "signature": [
              "() => void"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IIndexPatternFieldList.replaceAll",
            "type": "Function",
            "tags": [],
            "label": "replaceAll",
            "description": [
              "\nReplace all fields in field list with new fields."
            ],
            "signature": [
              "(specs: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              "[]) => void"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.IIndexPatternFieldList.replaceAll.$1",
                "type": "Array",
                "tags": [],
                "label": "specs",
                "description": [
                  "array of field specs to add to list"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  },
                  "[]"
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IIndexPatternFieldList.update",
            "type": "Function",
            "tags": [],
            "label": "update",
            "description": [
              "\nUpdate a field in the list"
            ],
            "signature": [
              "(field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => void"
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.IIndexPatternFieldList.update.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "field",
                "description": [
                  "field spec to update"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.FieldSpec",
                    "text": "FieldSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IIndexPatternFieldList.toSpec",
            "type": "Function",
            "tags": [
              "return"
            ],
            "label": "toSpec",
            "description": [
              "\nField list as field spec map by name"
            ],
            "signature": [
              "(options?: ToSpecOptions | undefined) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              }
            ],
            "path": "src/plugins/data_views/common/fields/field_list.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.IIndexPatternFieldList.toSpec.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "optionally provide a function to get field formatter for fields"
                ],
                "signature": [
                  "ToSpecOptions | undefined"
                ],
                "path": "src/plugins/data_views/common/fields/field_list.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": [
              "map of field specs by name"
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.IndexPatternExpressionType",
        "type": "Interface",
        "tags": [],
        "label": "IndexPatternExpressionType",
        "description": [
          "\nIndex pattern expression interface"
        ],
        "path": "src/plugins/data_views/common/expressions/load_index_pattern.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IndexPatternExpressionType.type",
            "type": "string",
            "tags": [],
            "label": "type",
            "description": [
              "\nExpression type"
            ],
            "signature": [
              "\"index_pattern\""
            ],
            "path": "src/plugins/data_views/common/expressions/load_index_pattern.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.IndexPatternExpressionType.value",
            "type": "Object",
            "tags": [],
            "label": "value",
            "description": [
              "\nValue - DataViewSpec"
            ],
            "signature": [
              "{ id?: string | undefined; version?: string | undefined; title?: string | undefined; timeFieldName?: string | undefined; sourceFilters?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.SourceFilter",
                "text": "SourceFilter"
              },
              "[] | undefined; fields?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewFieldMap",
                "text": "DataViewFieldMap"
              },
              " | undefined; typeMeta?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.TypeMeta",
                "text": "TypeMeta"
              },
              " | undefined; type?: string | undefined; fieldFormats?: Record<string, ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.SerializedFieldFormat",
                "text": "SerializedFieldFormat"
              },
              "<{}, ",
              {
                "pluginId": "@kbn/utility-types",
                "scope": "common",
                "docId": "kibKbnUtilityTypesPluginApi",
                "section": "def-common.SerializableRecord",
                "text": "SerializableRecord"
              },
              ">> | undefined; runtimeFieldMap?: Record<string, ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSpec",
                "text": "RuntimeFieldSpec"
              },
              "> | undefined; fieldAttrs?: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldAttrs",
                "text": "FieldAttrs"
              },
              " | undefined; allowNoIndex?: boolean | undefined; namespaces?: string[] | undefined; name?: string | undefined; }"
            ],
            "path": "src/plugins/data_views/common/expressions/load_index_pattern.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.RuntimeField",
        "type": "Interface",
        "tags": [],
        "label": "RuntimeField",
        "description": [
          "\nThis is the RuntimeField interface enhanced with Data view field\nconfiguration: field format definition, customLabel or popularity."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeField",
            "text": "RuntimeField"
          },
          " extends ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldBase",
            "text": "RuntimeFieldBase"
          },
          ",",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldConfiguration",
            "text": "FieldConfiguration"
          }
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.RuntimeField.fields",
            "type": "Object",
            "tags": [],
            "label": "fields",
            "description": [
              "\nSubfields of composite field"
            ],
            "signature": [
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.RuntimeFieldSubFields",
                "text": "RuntimeFieldSubFields"
              },
              " | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.RuntimeFieldSubField",
        "type": "Interface",
        "tags": [],
        "label": "RuntimeFieldSubField",
        "description": [
          "\nRuntime field composite subfield"
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldSubField",
            "text": "RuntimeFieldSubField"
          },
          " extends ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldConfiguration",
            "text": "FieldConfiguration"
          }
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.RuntimeFieldSubField.type",
            "type": "CompoundType",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "\"boolean\" | \"date\" | \"keyword\" | \"ip\" | \"geo_point\" | \"long\" | \"double\""
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.SavedObjectsClientCommon",
        "type": "Interface",
        "tags": [],
        "label": "SavedObjectsClientCommon",
        "description": [
          "\nCommon interface for the saved objects client"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.SavedObjectsClientCommon.find",
            "type": "Function",
            "tags": [],
            "label": "find",
            "description": [
              "\nSearch for saved objects"
            ],
            "signature": [
              "<T = unknown>(options: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.SavedObjectsClientCommonFindArgs",
                "text": "SavedObjectsClientCommonFindArgs"
              },
              ") => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<T>[]>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.SavedObjectsClientCommon.find.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- options for search"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.SavedObjectsClientCommonFindArgs",
                    "text": "SavedObjectsClientCommonFindArgs"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.SavedObjectsClientCommon.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet a single saved object by id"
            ],
            "signature": [
              "<T = unknown>(type: string, id: string) => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<T>>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.SavedObjectsClientCommon.get.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "- type of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.SavedObjectsClientCommon.get.$2",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "- id of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.SavedObjectsClientCommon.update",
            "type": "Function",
            "tags": [],
            "label": "update",
            "description": [
              "\nUpdate a saved object by id"
            ],
            "signature": [
              "(type: string, id: string, attributes: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ", options: ",
              {
                "pluginId": "@kbn/core-saved-objects-api-browser",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                "section": "def-common.SavedObjectsUpdateOptions",
                "text": "SavedObjectsUpdateOptions"
              },
              "<unknown>) => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<unknown>>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.SavedObjectsClientCommon.update.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "- type of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.SavedObjectsClientCommon.update.$2",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "- id of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.SavedObjectsClientCommon.update.$3",
                "type": "Object",
                "tags": [],
                "label": "attributes",
                "description": [
                  "- attributes to update"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.SavedObjectsClientCommon.update.$4",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- client options"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-api-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                    "section": "def-common.SavedObjectsUpdateOptions",
                    "text": "SavedObjectsUpdateOptions"
                  },
                  "<unknown>"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.SavedObjectsClientCommon.create",
            "type": "Function",
            "tags": [],
            "label": "create",
            "description": [
              "\nCreate a saved object"
            ],
            "signature": [
              "(type: string, attributes: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewAttributes",
                "text": "DataViewAttributes"
              },
              ", options: ",
              {
                "pluginId": "@kbn/core-saved-objects-api-browser",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                "section": "def-common.SavedObjectsCreateOptions",
                "text": "SavedObjectsCreateOptions"
              },
              ") => Promise<",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObject",
                "text": "SavedObject"
              },
              "<unknown>>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.SavedObjectsClientCommon.create.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "- type of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.SavedObjectsClientCommon.create.$2",
                "type": "Object",
                "tags": [],
                "label": "attributes",
                "description": [
                  "- attributes to set"
                ],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewAttributes",
                    "text": "DataViewAttributes"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.SavedObjectsClientCommon.create.$3",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "- client options"
                ],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-api-browser",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsApiBrowserPluginApi",
                    "section": "def-common.SavedObjectsCreateOptions",
                    "text": "SavedObjectsCreateOptions"
                  }
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.SavedObjectsClientCommon.delete",
            "type": "Function",
            "tags": [],
            "label": "delete",
            "description": [
              "\nDelete a saved object by id"
            ],
            "signature": [
              "(type: string, id: string) => Promise<{}>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.SavedObjectsClientCommon.delete.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "- type of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.SavedObjectsClientCommon.delete.$2",
                "type": "string",
                "tags": [],
                "label": "id",
                "description": [
                  "- id of saved object"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.SavedObjectsClientCommonFindArgs",
        "type": "Interface",
        "tags": [],
        "label": "SavedObjectsClientCommonFindArgs",
        "description": [
          "\nSaved objects common find args"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.SavedObjectsClientCommonFindArgs.type",
            "type": "CompoundType",
            "tags": [],
            "label": "type",
            "description": [
              "\nSaved object type"
            ],
            "signature": [
              "string | string[]"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.SavedObjectsClientCommonFindArgs.fields",
            "type": "Array",
            "tags": [],
            "label": "fields",
            "description": [
              "\nSaved object fields"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.SavedObjectsClientCommonFindArgs.perPage",
            "type": "number",
            "tags": [],
            "label": "perPage",
            "description": [
              "\nResults per page"
            ],
            "signature": [
              "number | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.SavedObjectsClientCommonFindArgs.search",
            "type": "string",
            "tags": [],
            "label": "search",
            "description": [
              "\nQuery string"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.SavedObjectsClientCommonFindArgs.searchFields",
            "type": "Array",
            "tags": [],
            "label": "searchFields",
            "description": [
              "\nFields to search"
            ],
            "signature": [
              "string[] | undefined"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.TimeBasedDataView",
        "type": "Interface",
        "tags": [],
        "label": "TimeBasedDataView",
        "description": [
          "\nAn interface representing a data view that is time based."
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.TimeBasedDataView",
            "text": "TimeBasedDataView"
          },
          " extends ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          }
        ],
        "path": "src/plugins/data_views/common/data_views/data_view.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.TimeBasedDataView.timeFieldName",
            "type": "string",
            "tags": [],
            "label": "timeFieldName",
            "description": [
              "\nThe timestamp field name."
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.TimeBasedDataView.getTimeField",
            "type": "Function",
            "tags": [],
            "label": "getTimeField",
            "description": [
              "\nThe timestamp field."
            ],
            "signature": [
              "() => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/data_view.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.ToSpecConfig",
        "type": "Interface",
        "tags": [],
        "label": "ToSpecConfig",
        "description": [
          "\nOptional format getter when serializing a field"
        ],
        "path": "src/plugins/data_views/common/fields/data_view_field.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.ToSpecConfig.getFormatterForField",
            "type": "Function",
            "tags": [],
            "label": "getFormatterForField",
            "description": [
              "\nField format getter"
            ],
            "signature": [
              "((field: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewField",
                "text": "DataViewField"
              },
              " | ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.FieldSpec",
                "text": "FieldSpec"
              },
              ") => ",
              {
                "pluginId": "fieldFormats",
                "scope": "common",
                "docId": "kibFieldFormatsPluginApi",
                "section": "def-common.FieldFormat",
                "text": "FieldFormat"
              },
              ") | undefined"
            ],
            "path": "src/plugins/data_views/common/fields/data_view_field.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.UiSettingsCommon",
        "type": "Interface",
        "tags": [],
        "label": "UiSettingsCommon",
        "description": [
          "\nInterface for UiSettings common interface {@link UiSettingsClient}"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.UiSettingsCommon.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet a setting value"
            ],
            "signature": [
              "<T = unknown>(key: string) => Promise<T | undefined>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.UiSettingsCommon.get.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [
                  "name of value"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.UiSettingsCommon.getAll",
            "type": "Function",
            "tags": [],
            "label": "getAll",
            "description": [
              "\nGet all settings values"
            ],
            "signature": [
              "() => Promise<Record<string, unknown>>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.UiSettingsCommon.set",
            "type": "Function",
            "tags": [],
            "label": "set",
            "description": [
              "\nSet a setting value"
            ],
            "signature": [
              "<T = unknown>(key: string, value: T) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.UiSettingsCommon.set.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [
                  "name of value"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.UiSettingsCommon.set.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "value",
                "description": [
                  "value to set"
                ],
                "signature": [
                  "T"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.UiSettingsCommon.remove",
            "type": "Function",
            "tags": [],
            "label": "remove",
            "description": [
              "\nRemove a setting value"
            ],
            "signature": [
              "(key: string) => Promise<void>"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.UiSettingsCommon.remove.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [
                  "name of value"
                ],
                "signature": [
                  "string"
                ],
                "path": "src/plugins/data_views/common/types.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewType",
        "type": "Enum",
        "tags": [],
        "label": "DataViewType",
        "description": [
          "\nData View type. Default or rollup"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "dataViews",
        "id": "def-common.AggregationRestrictions",
        "type": "Type",
        "tags": [],
        "label": "AggregationRestrictions",
        "description": [],
        "signature": [
          "{ [x: string]: { agg?: string | undefined; interval?: number | undefined; fixed_interval?: string | undefined; calendar_interval?: string | undefined; delay?: string | undefined; time_zone?: string | undefined; }; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DATA_VIEW_SAVED_OBJECT_TYPE",
        "type": "string",
        "tags": [],
        "label": "DATA_VIEW_SAVED_OBJECT_TYPE",
        "description": [
          "\nData view saved object type."
        ],
        "signature": [
          "\"index-pattern\""
        ],
        "path": "src/plugins/data_views/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewFieldMap",
        "type": "Type",
        "tags": [],
        "label": "DataViewFieldMap",
        "description": [],
        "signature": [
          "{ [x: string]: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewSavedObjectAttrs",
        "type": "Type",
        "tags": [],
        "label": "DataViewSavedObjectAttrs",
        "description": [],
        "signature": [
          "{ name?: string | undefined; type?: string | undefined; title: string; typeMeta?: string | undefined; }"
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewsContract",
        "type": "Type",
        "tags": [],
        "label": "DataViewsContract",
        "description": [
          "\nData views service interface"
        ],
        "signature": [
          "{ get: (id: string, displayErrors?: boolean, refreshFields?: boolean) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ">; delete: (indexPatternId: string) => Promise<{}>; create: (spec: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSpec",
            "text": "DataViewSpec"
          },
          ", skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ">; find: (search: string, size?: number) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          "[]>; getCanSave: () => Promise<boolean>; getIds: (refresh?: boolean) => Promise<string[]>; getTitles: (refresh?: boolean) => Promise<string[]>; getIdsWithTitle: (refresh?: boolean) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewListItem",
            "text": "DataViewListItem"
          },
          "[]>; clearCache: () => void; clearInstanceCache: (id?: string | undefined) => void; getCache: () => Promise<",
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObject",
            "text": "SavedObject"
          },
          "<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSavedObjectAttrs",
            "text": "DataViewSavedObjectAttrs"
          },
          ">[] | null | undefined>; getDefault: (displayErrors?: boolean) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " | null>; getDefaultId: () => Promise<string | null>; setDefault: (id: string | null, force?: boolean) => Promise<void>; hasUserDataView: () => Promise<boolean>; getFieldsForWildcard: (options: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.GetFieldsOptions",
            "text": "GetFieldsOptions"
          },
          ") => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "[]>; getFieldsForIndexPattern: (indexPattern: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " | ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSpec",
            "text": "DataViewSpec"
          },
          ", options?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.GetFieldsOptions",
            "text": "GetFieldsOptions"
          },
          " | undefined) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "[]>; refreshFields: (dataView: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ", displayErrors?: boolean) => Promise<void>; fieldArrayToMap: (fields: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldSpec",
            "text": "FieldSpec"
          },
          "[], fieldAttrs?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldAttrs",
            "text": "FieldAttrs"
          },
          " | undefined) => ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewFieldMap",
            "text": "DataViewFieldMap"
          },
          "; savedObjectToSpec: (savedObject: ",
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObject",
            "text": "SavedObject"
          },
          "<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewAttributes",
            "text": "DataViewAttributes"
          },
          ">) => ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSpec",
            "text": "DataViewSpec"
          },
          "; createAndSave: (spec: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewSpec",
            "text": "DataViewSpec"
          },
          ", override?: boolean, skipFetchFields?: boolean, displayErrors?: boolean) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ">; createSavedObject: (dataView: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ", override?: boolean, displayErrors?: boolean) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ">; updateSavedObject: (indexPattern: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ", saveAttempts?: number, ignoreErrors?: boolean, displayErrors?: boolean) => Promise<void | Error | ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          ">; getDefaultDataView: (refreshFields?: boolean | undefined) => Promise<",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataView",
            "text": "DataView"
          },
          " | null>; }"
        ],
        "path": "src/plugins/data_views/common/data_views/data_views.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewSpec",
        "type": "Type",
        "tags": [],
        "label": "DataViewSpec",
        "description": [
          "\nStatic data view format\nSerialized data object, representing data view attributes and state"
        ],
        "signature": [
          "{ id?: string | undefined; version?: string | undefined; title?: string | undefined; timeFieldName?: string | undefined; sourceFilters?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.SourceFilter",
            "text": "SourceFilter"
          },
          "[] | undefined; fields?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.DataViewFieldMap",
            "text": "DataViewFieldMap"
          },
          " | undefined; typeMeta?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.TypeMeta",
            "text": "TypeMeta"
          },
          " | undefined; type?: string | undefined; fieldFormats?: Record<string, ",
          {
            "pluginId": "fieldFormats",
            "scope": "common",
            "docId": "kibFieldFormatsPluginApi",
            "section": "def-common.SerializedFieldFormat",
            "text": "SerializedFieldFormat"
          },
          "<{}, ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">> | undefined; runtimeFieldMap?: Record<string, ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldSpec",
            "text": "RuntimeFieldSpec"
          },
          "> | undefined; fieldAttrs?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldAttrs",
            "text": "FieldAttrs"
          },
          " | undefined; allowNoIndex?: boolean | undefined; namespaces?: string[] | undefined; name?: string | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.FieldAttrs",
        "type": "Type",
        "tags": [],
        "label": "FieldAttrs",
        "description": [
          "\nSet of field attributes"
        ],
        "signature": [
          "{ [key: string]: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.FieldAttrSet",
            "text": "FieldAttrSet"
          },
          "; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.FieldAttrSet",
        "type": "Type",
        "tags": [],
        "label": "FieldAttrSet",
        "description": [
          "\nField attributes that are stored on the data view"
        ],
        "signature": [
          "{ customLabel?: string | undefined; count?: number | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.FieldFormatMap",
        "type": "Type",
        "tags": [],
        "label": "FieldFormatMap",
        "description": [],
        "signature": [
          "{ [x: string]: ",
          {
            "pluginId": "fieldFormats",
            "scope": "common",
            "docId": "kibFieldFormatsPluginApi",
            "section": "def-common.SerializedFieldFormat",
            "text": "SerializedFieldFormat"
          },
          "<{}, ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.FieldSpec",
        "type": "Type",
        "tags": [],
        "label": "FieldSpec",
        "description": [
          "\nSerialized version of DataViewField"
        ],
        "signature": [
          {
            "pluginId": "@kbn/es-query",
            "scope": "common",
            "docId": "kibKbnEsQueryPluginApi",
            "section": "def-common.DataViewFieldBase",
            "text": "DataViewFieldBase"
          },
          " & { count?: number | undefined; conflictDescriptions?: Record<string, string[]> | undefined; format?: ",
          {
            "pluginId": "fieldFormats",
            "scope": "common",
            "docId": "kibFieldFormatsPluginApi",
            "section": "def-common.SerializedFieldFormat",
            "text": "SerializedFieldFormat"
          },
          "<{}, ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          "> | undefined; esTypes?: string[] | undefined; searchable: boolean; aggregatable: boolean; readFromDocValues?: boolean | undefined; indexed?: boolean | undefined; customLabel?: string | undefined; runtimeField?: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldSpec",
            "text": "RuntimeFieldSpec"
          },
          " | undefined; fixedInterval?: string[] | undefined; timeZone?: string[] | undefined; timeSeriesDimension?: boolean | undefined; timeSeriesMetric?: \"gauge\" | \"histogram\" | \"summary\" | \"counter\" | undefined; shortDotsEnable?: boolean | undefined; isMapped?: boolean | undefined; parentName?: string | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.FieldSpecConflictDescriptions",
        "type": "Type",
        "tags": [],
        "label": "FieldSpecConflictDescriptions",
        "description": [],
        "signature": [
          "{ [x: string]: string[]; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.IndexPatternLoadExpressionFunctionDefinition",
        "type": "Type",
        "tags": [],
        "label": "IndexPatternLoadExpressionFunctionDefinition",
        "description": [],
        "signature": [
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExpressionFunctionDefinition",
            "text": "ExpressionFunctionDefinition"
          },
          "<\"indexPatternLoad\", null, Arguments, Output, ",
          {
            "pluginId": "expressions",
            "scope": "common",
            "docId": "kibExpressionsPluginApi",
            "section": "def-common.ExecutionContext",
            "text": "ExecutionContext"
          },
          "<",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Adapters",
            "text": "Adapters"
          },
          ", ",
          {
            "pluginId": "@kbn/utility-types",
            "scope": "common",
            "docId": "kibKbnUtilityTypesPluginApi",
            "section": "def-common.SerializableRecord",
            "text": "SerializableRecord"
          },
          ">>"
        ],
        "path": "src/plugins/data_views/common/expressions/load_index_pattern.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.META_FIELDS",
        "type": "string",
        "tags": [],
        "label": "META_FIELDS",
        "description": [
          "\nUiSettings key for metaFields list."
        ],
        "signature": [
          "\"metaFields\""
        ],
        "path": "src/plugins/data_views/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.OnError",
        "type": "Type",
        "tags": [],
        "label": "OnError",
        "description": [
          "\nHandler for data view errors"
        ],
        "signature": [
          "(error: Error, toastInputFields: ",
          {
            "pluginId": "@kbn/core-notifications-browser",
            "scope": "common",
            "docId": "kibKbnCoreNotificationsBrowserPluginApi",
            "section": "def-common.ErrorToastOptions",
            "text": "ErrorToastOptions"
          },
          ", key: string) => void"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.OnError.$1",
            "type": "Object",
            "tags": [],
            "label": "error",
            "description": [
              "Error object"
            ],
            "signature": [
              "Error"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.OnError.$2",
            "type": "Object",
            "tags": [],
            "label": "toastInputFields",
            "description": [
              "Toast notif config"
            ],
            "signature": [
              {
                "pluginId": "@kbn/core-notifications-browser",
                "scope": "common",
                "docId": "kibKbnCoreNotificationsBrowserPluginApi",
                "section": "def-common.ErrorToastOptions",
                "text": "ErrorToastOptions"
              }
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.OnError.$3",
            "type": "string",
            "tags": [],
            "label": "key",
            "description": [
              "Used to dedupe notifs"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.OnNotification",
        "type": "Type",
        "tags": [],
        "label": "OnNotification",
        "description": [
          "\nHandler for data view notifications"
        ],
        "signature": [
          "(toastInputFields: ",
          {
            "pluginId": "@kbn/core-notifications-browser",
            "scope": "common",
            "docId": "kibKbnCoreNotificationsBrowserPluginApi",
            "section": "def-common.ToastInputFields",
            "text": "ToastInputFields"
          },
          ", key: string) => void"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.OnNotification.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "toastInputFields",
            "description": [
              "Toast notif config"
            ],
            "signature": [
              "Pick<",
              "Toast",
              ", \"children\" | \"onError\" | \"hidden\" | \"color\" | \"className\" | \"onChange\" | \"onKeyDown\" | \"onClick\" | \"placeholder\" | \"security\" | \"defaultValue\" | \"lang\" | \"defaultChecked\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onErrorCapture\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"toastLifeTimeMs\" | \"iconType\" | \"onClose\" | \"data-test-subj\" | \"css\"> & { title?: string | ",
              {
                "pluginId": "@kbn/core-mount-utils-browser",
                "scope": "common",
                "docId": "kibKbnCoreMountUtilsBrowserPluginApi",
                "section": "def-common.MountPoint",
                "text": "MountPoint"
              },
              "<HTMLElement> | undefined; text?: string | ",
              {
                "pluginId": "@kbn/core-mount-utils-browser",
                "scope": "common",
                "docId": "kibKbnCoreMountUtilsBrowserPluginApi",
                "section": "def-common.MountPoint",
                "text": "MountPoint"
              },
              "<HTMLElement> | undefined; }"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.OnNotification.$2",
            "type": "string",
            "tags": [],
            "label": "key",
            "description": [
              "Used to dedupe notifs"
            ],
            "path": "src/plugins/data_views/common/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.RuntimeFieldBase",
        "type": "Type",
        "tags": [],
        "label": "RuntimeFieldBase",
        "description": [
          "\nRuntime field definition"
        ],
        "signature": [
          "{ type: \"boolean\" | \"date\" | \"keyword\" | \"ip\" | \"geo_point\" | \"long\" | \"double\" | \"composite\"; script?: { source: string; } | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.RuntimeFieldSpec",
        "type": "Type",
        "tags": [],
        "label": "RuntimeFieldSpec",
        "description": [
          "\nThe RuntimeField that will be sent in the ES Query \"runtime_mappings\" object"
        ],
        "signature": [
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldBase",
            "text": "RuntimeFieldBase"
          },
          " & { fields?: Record<string, { type: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimePrimitiveTypes",
            "text": "RuntimePrimitiveTypes"
          },
          "; }> | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.RuntimeFieldSubFields",
        "type": "Type",
        "tags": [],
        "label": "RuntimeFieldSubFields",
        "description": [],
        "signature": [
          "{ [x: string]: ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.RuntimeFieldSubField",
            "text": "RuntimeFieldSubField"
          },
          "; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.RuntimePrimitiveTypes",
        "type": "Type",
        "tags": [],
        "label": "RuntimePrimitiveTypes",
        "description": [
          "\nRuntime field primitive types - excluding composite"
        ],
        "signature": [
          "\"boolean\" | \"date\" | \"keyword\" | \"ip\" | \"geo_point\" | \"long\" | \"double\""
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.RuntimeType",
        "type": "Type",
        "tags": [],
        "label": "RuntimeType",
        "description": [
          "\nRuntime field types"
        ],
        "signature": [
          "\"boolean\" | \"date\" | \"keyword\" | \"ip\" | \"geo_point\" | \"long\" | \"double\" | \"composite\""
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.SavedObject",
        "type": "Type",
        "tags": [
          "deprecated"
        ],
        "label": "SavedObject",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/core-saved-objects-common",
            "scope": "common",
            "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
            "section": "def-common.SavedObject",
            "text": "SavedObject"
          },
          "<T>"
        ],
        "path": "packages/core/saved-objects/core-saved-objects-common/src/saved_objects.ts",
        "deprecated": true,
        "trackAdoption": false,
        "references": [
          {
            "plugin": "@kbn/core-saved-objects-common",
            "path": "packages/core/saved-objects/core-saved-objects-common/index.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-browser",
            "path": "packages/core/saved-objects/core-saved-objects-api-browser/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/apis/base.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/apis/base.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/apis/resolve.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/apis/resolve.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/apis/update.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/apis/update.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/apis/find.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/apis/find.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_repository.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_repository.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_repository.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_repository.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-api-server",
            "path": "packages/core/saved-objects/core-saved-objects-api-server/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/saved_objects_client.ts"
          },
          {
            "plugin": "core",
            "path": "src/core/public/index.ts"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/server/services/sample_data/sample_data_registry.ts"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/server/services/sample_data/sample_data_registry.ts"
          },
          {
            "plugin": "home",
            "path": "src/plugins/home/server/services/sample_data/sample_data_registry.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/common/index.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/public/index.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/query/route_handler_context.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/query/route_handler_context.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/query/route_handler_context.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/query/route_handler_context.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/query/route_handler_context.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/query/route_handler_context.test.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/main/components/layout/__stories__/get_layout_props.ts"
          },
          {
            "plugin": "discover",
            "path": "src/plugins/discover/public/application/main/components/layout/__stories__/get_layout_props.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/public/search/session/sessions_mgmt/lib/api.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/public/search/session/sessions_mgmt/lib/api.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/public/search/session/sessions_mgmt/lib/api.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/ui_api/get_table_column_definition.tsx"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/ui_api/get_table_column_definition.tsx"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/ui_api/get_table_column_definition.tsx"
          },
          {
            "plugin": "savedObjectsFinder",
            "path": "src/plugins/saved_objects_finder/public/finder/saved_object_finder.tsx"
          },
          {
            "plugin": "savedObjectsFinder",
            "path": "src/plugins/saved_objects_finder/public/finder/saved_object_finder.tsx"
          },
          {
            "plugin": "savedObjectsFinder",
            "path": "src/plugins/saved_objects_finder/public/finder/saved_object_finder.tsx"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/common/types/models/epm.ts"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/common/types/models/epm.ts"
          },
          {
            "plugin": "fleet",
            "path": "x-pack/plugins/fleet/common/types/models/epm.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/shareable_runtime/types.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/shareable_runtime/types.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/services/kibana/workpad.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/services/kibana/workpad.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/components/home/hooks/use_upload_workpad.ts"
          },
          {
            "plugin": "canvas",
            "path": "x-pack/plugins/canvas/public/components/home/hooks/use_upload_workpad.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/packs/types.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/packs/types.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/routes/saved_queries/list/index.tsx"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/routes/saved_queries/list/index.tsx"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/assets/use_assets_status.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/assets/use_assets_status.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/assets/use_assets_status.ts"
          },
          {
            "plugin": "osquery",
            "path": "x-pack/plugins/osquery/public/assets/use_assets_status.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/dashboards/utils.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/dashboards/utils.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/dashboards/use_security_dashboards_table.tsx"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/public/common/containers/dashboards/use_security_dashboards_table.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/components/monitors_page/overview/overview/monitor_detail_flyout.tsx"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/components/monitors_page/overview/overview/monitor_detail_flyout.tsx"
          },
          {
            "plugin": "savedObjects",
            "path": "src/plugins/saved_objects/public/saved_object/helpers/find_object_by_title.test.ts"
          },
          {
            "plugin": "savedObjects",
            "path": "src/plugins/saved_objects/public/saved_object/helpers/find_object_by_title.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-mocks",
            "path": "packages/core/saved-objects/core-saved-objects-browser-mocks/src/simple_saved_object.mock.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-mocks",
            "path": "packages/core/saved-objects/core-saved-objects-browser-mocks/src/simple_saved_object.mock.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-mocks",
            "path": "packages/core/saved-objects/core-saved-objects-browser-mocks/src/simple_saved_object.mock.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-server",
            "path": "packages/core/saved-objects/core-saved-objects-server/src/extensions/security.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-server",
            "path": "packages/core/saved-objects/core-saved-objects-server/src/extensions/security.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-server",
            "path": "packages/core/saved-objects/core-saved-objects-server/src/extensions/security.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/import/errors.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/import/errors.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/import/lib/regenerate_ids.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/import/lib/regenerate_ids.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-import-export-server-internal",
            "path": "packages/core/saved-objects/core-saved-objects-import-export-server-internal/src/export/apply_export_transforms.ts"
          },
          {
            "plugin": "core",
            "path": "src/core/types/index.ts"
          },
          {
            "plugin": "apm",
            "path": "x-pack/plugins/apm/server/routes/settings/apm_indices/route.ts"
          },
          {
            "plugin": "savedObjectsTaggingOss",
            "path": "src/plugins/saved_objects_tagging_oss/public/api.ts"
          },
          {
            "plugin": "savedObjectsTaggingOss",
            "path": "src/plugins/saved_objects_tagging_oss/public/api.ts"
          },
          {
            "plugin": "savedObjectsTaggingOss",
            "path": "src/plugins/saved_objects_tagging_oss/public/api.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/types.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/types.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/so_references.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/so_references.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/so_references.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/so_references.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "lists",
            "path": "x-pack/plugins/lists/server/services/exception_lists/exception_list_client.mock.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.test.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.test.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/public/utils.test.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/risk_score/prebuilt_saved_objects/saved_object/host_risk_score_dashboards.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/risk_score/prebuilt_saved_objects/saved_object/host_risk_score_dashboards.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/risk_score/prebuilt_saved_objects/saved_object/user_risk_score_dashboards.ts"
          },
          {
            "plugin": "securitySolution",
            "path": "x-pack/plugins/security_solution/server/lib/risk_score/prebuilt_saved_objects/saved_object/user_risk_score_dashboards.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/overview/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/overview/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_details/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_details/api.ts"
          },
          {
            "plugin": "upgradeAssistant",
            "path": "x-pack/plugins/upgrade_assistant/common/types.ts"
          },
          {
            "plugin": "upgradeAssistant",
            "path": "x-pack/plugins/upgrade_assistant/common/types.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/test_utils/index.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/test_utils/index.ts"
          },
          {
            "plugin": "savedObjectsTagging",
            "path": "x-pack/plugins/saved_objects_tagging/common/test_utils/index.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/server/lib/find_relationships.test.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/server/lib/find_relationships.test.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/server/lib/find_relationships.test.ts"
          },
          {
            "plugin": "savedObjectsManagement",
            "path": "src/plugins/saved_objects_management/server/lib/find_relationships.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/search/saved_objects/search_session_migration.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/search/saved_objects/search_session_migration.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/search/saved_objects/search_session_migration.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/search/saved_objects/search_session_migration.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/search/saved_objects/search_session_migration.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/search/saved_objects/search_session_migration.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/search/saved_objects/search_session_migration.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/search/saved_objects/search_session_migration.test.ts"
          },
          {
            "plugin": "data",
            "path": "src/plugins/data/server/search/saved_objects/search_session_migration.test.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/operations/find.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/operations/find.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/operations/find.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/api.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/effects.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/effects.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/effects.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/index.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/state/monitor_list/index.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/components/settings/hooks/use_params_list.ts"
          },
          {
            "plugin": "synthetics",
            "path": "x-pack/plugins/synthetics/public/apps/synthetics/components/settings/hooks/use_params_list.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "cases",
            "path": "x-pack/plugins/cases/server/services/user_actions/test_utils.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-saved-objects-browser-internal",
            "path": "packages/core/saved-objects/core-saved-objects-browser-internal/src/simple_saved_object.test.ts"
          },
          {
            "plugin": "@kbn/core-ui-settings-server-internal",
            "path": "packages/core/ui-settings/core-ui-settings-server-internal/src/saved_objects/transforms.test.ts"
          },
          {
            "plugin": "@kbn/core-ui-settings-server-internal",
            "path": "packages/core/ui-settings/core-ui-settings-server-internal/src/saved_objects/transforms.test.ts"
          },
          {
            "plugin": "@kbn/core-ui-settings-server-internal",
            "path": "packages/core/ui-settings/core-ui-settings-server-internal/src/saved_objects/transforms.test.ts"
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.SourceFilter",
        "type": "Type",
        "tags": [],
        "label": "SourceFilter",
        "description": [],
        "signature": [
          "{ value: string; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.TypeMeta",
        "type": "Type",
        "tags": [],
        "label": "TypeMeta",
        "description": [
          "\nInterface for metadata about rollup indices"
        ],
        "signature": [
          "{ aggs?: Record<string, ",
          {
            "pluginId": "dataViews",
            "scope": "common",
            "docId": "kibDataViewsPluginApi",
            "section": "def-common.AggregationRestrictions",
            "text": "AggregationRestrictions"
          },
          "> | undefined; params?: { rollup_index: string; } | undefined; }"
        ],
        "path": "src/plugins/data_views/common/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DataViewPersistableStateService",
        "type": "Object",
        "tags": [],
        "label": "DataViewPersistableStateService",
        "description": [],
        "path": "src/plugins/data_views/common/data_views/persistable_state.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewPersistableStateService.inject",
            "type": "Function",
            "tags": [],
            "label": "inject",
            "description": [],
            "signature": [
              "(state: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ", references: ",
              {
                "pluginId": "@kbn/core-saved-objects-common",
                "scope": "common",
                "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                "section": "def-common.SavedObjectReference",
                "text": "SavedObjectReference"
              },
              "[]) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/persistable_state.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewPersistableStateService.inject.$1",
                "type": "Object",
                "tags": [],
                "label": "state",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/persistable_state.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewPersistableStateService.inject.$2",
                "type": "Array",
                "tags": [],
                "label": "references",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/core-saved-objects-common",
                    "scope": "common",
                    "docId": "kibKbnCoreSavedObjectsCommonPluginApi",
                    "section": "def-common.SavedObjectReference",
                    "text": "SavedObjectReference"
                  },
                  "[]"
                ],
                "path": "src/plugins/data_views/common/data_views/persistable_state.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewPersistableStateService.extract",
            "type": "Function",
            "tags": [],
            "label": "extract",
            "description": [],
            "signature": [
              "(state: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ") => { state: ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              "; references: never[]; }"
            ],
            "path": "src/plugins/data_views/common/data_views/persistable_state.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewPersistableStateService.extract.$1",
                "type": "Object",
                "tags": [],
                "label": "state",
                "description": [],
                "signature": [
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  }
                ],
                "path": "src/plugins/data_views/common/data_views/persistable_state.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewPersistableStateService.getAllMigrations",
            "type": "Function",
            "tags": [],
            "label": "getAllMigrations",
            "description": [],
            "signature": [
              "() => {}"
            ],
            "path": "src/plugins/data_views/common/data_views/persistable_state.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewPersistableStateService.migrateToLatest",
            "type": "Function",
            "tags": [],
            "label": "migrateToLatest",
            "description": [],
            "signature": [
              "({ state }: ",
              {
                "pluginId": "kibanaUtils",
                "scope": "common",
                "docId": "kibKibanaUtilsPluginApi",
                "section": "def-common.VersionedState",
                "text": "VersionedState"
              },
              "<",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              },
              ">) => ",
              {
                "pluginId": "dataViews",
                "scope": "common",
                "docId": "kibDataViewsPluginApi",
                "section": "def-common.DataViewSpec",
                "text": "DataViewSpec"
              }
            ],
            "path": "src/plugins/data_views/common/data_views/persistable_state.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "dataViews",
                "id": "def-common.DataViewPersistableStateService.migrateToLatest.$1",
                "type": "Object",
                "tags": [],
                "label": "{ state }",
                "description": [],
                "signature": [
                  {
                    "pluginId": "kibanaUtils",
                    "scope": "common",
                    "docId": "kibKibanaUtilsPluginApi",
                    "section": "def-common.VersionedState",
                    "text": "VersionedState"
                  },
                  "<",
                  {
                    "pluginId": "dataViews",
                    "scope": "common",
                    "docId": "kibDataViewsPluginApi",
                    "section": "def-common.DataViewSpec",
                    "text": "DataViewSpec"
                  },
                  ">"
                ],
                "path": "src/plugins/data_views/common/data_views/persistable_state.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DataViewPersistableStateService.telemetry",
            "type": "Function",
            "tags": [],
            "label": "telemetry",
            "description": [],
            "signature": [
              "() => {}"
            ],
            "path": "src/plugins/data_views/common/data_views/persistable_state.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.DEFAULT_ASSETS_TO_IGNORE",
        "type": "Object",
        "tags": [],
        "label": "DEFAULT_ASSETS_TO_IGNORE",
        "description": [
          "\nUsed to optimize on-boarding experience to determine if the instance has some user created data views or data indices/streams by filtering data sources\nthat are created by default by elastic in ese.\nWe should somehow prevent creating initial data for the users without their explicit action\ninstead of relying on these hardcoded assets"
        ],
        "path": "src/plugins/data_views/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "dataViews",
            "id": "def-common.DEFAULT_ASSETS_TO_IGNORE.DATA_STREAMS_TO_IGNORE",
            "type": "Array",
            "tags": [],
            "label": "DATA_STREAMS_TO_IGNORE",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "src/plugins/data_views/common/constants.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "dataViews",
        "id": "def-common.RUNTIME_FIELD_TYPES",
        "type": "Object",
        "tags": [],
        "label": "RUNTIME_FIELD_TYPES",
        "description": [
          "\nAll runtime field types."
        ],
        "signature": [
          "readonly [\"keyword\", \"long\", \"double\", \"date\", \"ip\", \"boolean\", \"geo_point\", \"composite\"]"
        ],
        "path": "src/plugins/data_views/common/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  }
}