{
  "id": "observability",
  "client": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "observability",
        "id": "def-public.ActionMenu",
        "type": "Function",
        "tags": [],
        "label": "ActionMenu",
        "description": [],
        "signature": [
          "(props: Props) => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ActionMenu.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "Props"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ActionMenuDivider",
        "type": "Function",
        "tags": [],
        "label": "ActionMenuDivider",
        "description": [],
        "signature": [
          "() => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.createEsParams",
        "type": "Function",
        "tags": [],
        "label": "createEsParams",
        "description": [],
        "signature": [
          "(params: T) => T"
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_es_search.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.createEsParams.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "T"
            ],
            "path": "x-pack/plugins/observability/public/hooks/use_es_search.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.createExploratoryViewUrl",
        "type": "Function",
        "tags": [],
        "label": "createExploratoryViewUrl",
        "description": [],
        "signature": [
          "({ reportType, allSeries }: { reportType: ValueOf<{ readonly dist: \"data-distribution\"; readonly kpi: \"kpi-over-time\"; readonly cwv: \"core-web-vitals\"; readonly mdd: \"device-data-distribution\"; }>; allSeries: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.AllSeries",
            "text": "AllSeries"
          },
          "; }, baseHref: string) => string"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.createExploratoryViewUrl.$1",
            "type": "Object",
            "tags": [],
            "label": "{ reportType, allSeries }",
            "description": [],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.createExploratoryViewUrl.$1.reportType",
                "type": "CompoundType",
                "tags": [],
                "label": "reportType",
                "description": [],
                "signature": [
                  "\"data-distribution\" | \"kpi-over-time\" | \"core-web-vitals\" | \"device-data-distribution\""
                ],
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.createExploratoryViewUrl.$1.allSeries",
                "type": "Array",
                "tags": [],
                "label": "allSeries",
                "description": [],
                "signature": [
                  {
                    "pluginId": "observability",
                    "scope": "public",
                    "docId": "kibObservabilityPluginApi",
                    "section": "def-public.SeriesUrl",
                    "text": "SeriesUrl"
                  },
                  "[]"
                ],
                "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.createExploratoryViewUrl.$2",
            "type": "string",
            "tags": [],
            "label": "baseHref",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.createObservabilityRuleTypeRegistryMock",
        "type": "Function",
        "tags": [],
        "label": "createObservabilityRuleTypeRegistryMock",
        "description": [],
        "signature": [
          "() => { register: (type: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityRuleTypeModel",
            "text": "ObservabilityRuleTypeModel"
          },
          "<any>) => void; getFormatter: (typeId: string) => ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityRuleTypeFormatter",
            "text": "ObservabilityRuleTypeFormatter"
          },
          " | undefined; } & { getFormatter: () => () => string; registerFormatter: () => void; }"
        ],
        "path": "x-pack/plugins/observability/public/rules/observability_rule_type_registry_mock.ts",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.FieldValueSuggestions",
        "type": "Function",
        "tags": [],
        "label": "FieldValueSuggestions",
        "description": [],
        "signature": [
          "(props: ",
          "FieldValueSuggestionsProps",
          ") => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.FieldValueSuggestions.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "FieldValueSuggestionsProps"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.FilterValueLabel",
        "type": "Function",
        "tags": [],
        "label": "FilterValueLabel",
        "description": [],
        "signature": [
          "(props: ",
          "FilterValueLabelProps",
          ") => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.FilterValueLabel.$1",
            "type": "Object",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "FilterValueLabelProps"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.getApmTraceUrl",
        "type": "Function",
        "tags": [],
        "label": "getApmTraceUrl",
        "description": [],
        "signature": [
          "({\n  traceId,\n  rangeFrom,\n  rangeTo,\n}: { traceId: string; rangeFrom: string; rangeTo: string; }) => string"
        ],
        "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.getApmTraceUrl.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  traceId,\n  rangeFrom,\n  rangeTo,\n}",
            "description": [],
            "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.getApmTraceUrl.$1.traceId",
                "type": "string",
                "tags": [],
                "label": "traceId",
                "description": [],
                "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.getApmTraceUrl.$1.rangeFrom",
                "type": "string",
                "tags": [],
                "label": "rangeFrom",
                "description": [],
                "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.getApmTraceUrl.$1.rangeTo",
                "type": "string",
                "tags": [],
                "label": "rangeTo",
                "description": [],
                "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.getCoreVitalsComponent",
        "type": "Function",
        "tags": [],
        "label": "getCoreVitalsComponent",
        "description": [],
        "signature": [
          "(props: ",
          "CoreVitalProps",
          ") => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.getCoreVitalsComponent.$1",
            "type": "Object",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "CoreVitalProps"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.HeaderMenuPortal",
        "type": "Function",
        "tags": [],
        "label": "HeaderMenuPortal",
        "description": [],
        "signature": [
          "(props: ",
          "HeaderMenuPortalProps",
          ") => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.HeaderMenuPortal.$1",
            "type": "Object",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "HeaderMenuPortalProps"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.InspectorContextProvider",
        "type": "Function",
        "tags": [],
        "label": "InspectorContextProvider",
        "description": [],
        "signature": [
          "({ children }: { children: React.ReactNode; }) => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/context/inspector/inspector_context.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.InspectorContextProvider.$1",
            "type": "Object",
            "tags": [],
            "label": "{ children }",
            "description": [],
            "path": "x-pack/plugins/observability/public/context/inspector/inspector_context.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.InspectorContextProvider.$1.children",
                "type": "CompoundType",
                "tags": [],
                "label": "children",
                "description": [],
                "signature": [
                  "string | number | boolean | {} | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | React.ReactNodeArray | React.ReactPortal | null | undefined"
                ],
                "path": "x-pack/plugins/observability/public/context/inspector/inspector_context.tsx",
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.LazyAlertsFlyout",
        "type": "Function",
        "tags": [],
        "label": "LazyAlertsFlyout",
        "description": [],
        "signature": [
          "React.ExoticComponent<Pick<AlertsFlyoutProps, \"title\" | \"type\" | \"size\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"paddingSize\" | \"data-test-subj\" | \"alert\" | \"onClose\" | \"key\" | \"css\" | \"as\" | \"ownFocus\" | \"alerts\" | \"maxWidth\" | \"hideCloseButton\" | \"closeButtonAriaLabel\" | \"closeButtonProps\" | \"closeButtonPosition\" | \"maskProps\" | \"outsideClickCloses\" | \"side\" | \"pushMinBreakpoint\" | \"isInApp\" | \"observabilityRuleTypeRegistry\" | \"selectedAlertId\"> & { ref?: React.RefObject<HTMLDivElement> | ((instance: HTMLDivElement | null) => void) | null | undefined; }> & { readonly _result: ({ alert, alerts, isInApp, observabilityRuleTypeRegistry, onClose, selectedAlertId, }: AlertsFlyoutProps) => JSX.Element | null; }"
        ],
        "path": "x-pack/plugins/observability/public/index.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.LazyAlertsFlyout.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "P"
            ],
            "path": "node_modules/@types/react/index.d.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.Section",
        "type": "Function",
        "tags": [],
        "label": "Section",
        "description": [],
        "signature": [
          "string & ",
          "StyledComponentBase",
          "<\"div\", any, {}, never> & ",
          "NonReactStatics",
          "<never, {}>"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.SectionLink",
        "type": "Function",
        "tags": [],
        "label": "SectionLink",
        "description": [],
        "signature": [
          "(props: ",
          "EuiListGroupItemProps",
          ") => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.SectionLink.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "EuiListGroupItemProps"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.SectionLinks",
        "type": "Function",
        "tags": [],
        "label": "SectionLinks",
        "description": [],
        "signature": [
          "({ children, ...props }: { children?: React.ReactNode; } & ",
          "CommonProps",
          " & Pick<React.HTMLAttributes<HTMLUListElement>, \"title\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\"> & { bordered?: boolean | undefined; flush?: boolean | undefined; gutterSize?: \"none\" | \"s\" | \"m\" | undefined; listItems?: ",
          "EuiListGroupItemProps",
          "[] | undefined; color?: \"text\" | \"primary\" | \"inherit\" | \"ghost\" | \"subdued\" | undefined; size?: \"s\" | \"m\" | \"l\" | \"xs\" | undefined; maxWidth?: string | number | boolean | undefined; showToolTips?: boolean | undefined; wrapText?: boolean | undefined; ariaLabelledby?: string | undefined; }) => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.SectionLinks.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{ children, ...props }",
            "description": [],
            "signature": [
              "{ children?: React.ReactNode; } & ",
              "CommonProps",
              " & Pick<React.HTMLAttributes<HTMLUListElement>, \"title\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\"> & { bordered?: boolean | undefined; flush?: boolean | undefined; gutterSize?: \"none\" | \"s\" | \"m\" | undefined; listItems?: ",
              "EuiListGroupItemProps",
              "[] | undefined; color?: \"text\" | \"primary\" | \"inherit\" | \"ghost\" | \"subdued\" | undefined; size?: \"s\" | \"m\" | \"l\" | \"xs\" | undefined; maxWidth?: string | number | boolean | undefined; showToolTips?: boolean | undefined; wrapText?: boolean | undefined; ariaLabelledby?: string | undefined; }"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.SectionSpacer",
        "type": "Function",
        "tags": [],
        "label": "SectionSpacer",
        "description": [],
        "signature": [
          "() => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.SectionSubtitle",
        "type": "Function",
        "tags": [],
        "label": "SectionSubtitle",
        "description": [],
        "signature": [
          "({ children }: { children?: React.ReactNode; }) => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.SectionSubtitle.$1",
            "type": "Object",
            "tags": [],
            "label": "{ children }",
            "description": [],
            "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.SectionSubtitle.$1.children",
                "type": "CompoundType",
                "tags": [],
                "label": "children",
                "description": [],
                "signature": [
                  "string | number | boolean | {} | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | React.ReactNodeArray | React.ReactPortal | null | undefined"
                ],
                "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.SectionTitle",
        "type": "Function",
        "tags": [],
        "label": "SectionTitle",
        "description": [],
        "signature": [
          "({ children }: { children?: React.ReactNode; }) => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.SectionTitle.$1",
            "type": "Object",
            "tags": [],
            "label": "{ children }",
            "description": [],
            "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.SectionTitle.$1.children",
                "type": "CompoundType",
                "tags": [],
                "label": "children",
                "description": [],
                "signature": [
                  "string | number | boolean | {} | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | React.ReactNodeArray | React.ReactPortal | null | undefined"
                ],
                "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.SelectableUrlList",
        "type": "Function",
        "tags": [],
        "label": "SelectableUrlList",
        "description": [],
        "signature": [
          "(props: ",
          "SelectableUrlListProps",
          ") => JSX.Element"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.SelectableUrlList.$1",
            "type": "Object",
            "tags": [],
            "label": "props",
            "description": [],
            "signature": [
              "SelectableUrlListProps"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.useBreadcrumbs",
        "type": "Function",
        "tags": [],
        "label": "useBreadcrumbs",
        "description": [],
        "signature": [
          "(extraCrumbs: ",
          "EuiBreadcrumb",
          "[]) => void"
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_breadcrumbs.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.useBreadcrumbs.$1",
            "type": "Array",
            "tags": [],
            "label": "extraCrumbs",
            "description": [],
            "signature": [
              "EuiBreadcrumb",
              "[]"
            ],
            "path": "x-pack/plugins/observability/public/hooks/use_breadcrumbs.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.useChartTheme",
        "type": "Function",
        "tags": [],
        "label": "useChartTheme",
        "description": [],
        "signature": [
          "() => { chartMargins: { left: number; right: number; top: number; bottom: number; }; background: { color: string; }; lineSeriesStyle: { point: { visible: boolean; }; line?: ",
          "RecursivePartial",
          "<",
          "LineStyle",
          "> | undefined; }; areaSeriesStyle: { point: { visible: boolean; }; area?: ",
          "RecursivePartial",
          "<",
          "AreaStyle",
          "> | undefined; line?: ",
          "RecursivePartial",
          "<",
          "LineStyle",
          "> | undefined; }; chartPaddings?: ",
          "RecursivePartial",
          "<",
          "PerSideDistance",
          "> | undefined; barSeriesStyle?: ",
          "RecursivePartial",
          "<",
          "BarSeriesStyle",
          "> | undefined; bubbleSeriesStyle?: ",
          "RecursivePartial",
          "<",
          "BubbleSeriesStyle",
          "> | undefined; arcSeriesStyle?: ",
          "RecursivePartial",
          "<",
          "ArcSeriesStyle",
          "> | undefined; sharedStyle?: ",
          "RecursivePartial",
          "<",
          "SharedGeometryStateStyle",
          "> | undefined; axes?: ",
          "RecursivePartial",
          "<",
          "AxisStyle",
          "> | undefined; scales?: ",
          "RecursivePartial",
          "<",
          "ScalesConfig",
          "> | undefined; colors?: ",
          "RecursivePartial",
          "<",
          "ColorConfig",
          "> | undefined; legend?: ",
          "RecursivePartial",
          "<",
          "LegendStyle",
          "> | undefined; crosshair?: ",
          "RecursivePartial",
          "<",
          "CrosshairStyle",
          "> | undefined; markSizeRatio?: number | undefined; goal?: ",
          "RecursivePartial",
          "<",
          "GoalStyles",
          "> | undefined; }"
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_chart_theme.tsx",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.useEsSearch",
        "type": "Function",
        "tags": [],
        "label": "useEsSearch",
        "description": [],
        "signature": [
          "<DocumentSource extends unknown, TParams extends ",
          "SearchRequest",
          ">(params: TParams, fnDeps: any[], options: { inspector?: ",
          {
            "pluginId": "data",
            "scope": "common",
            "docId": "kibDataSearchPluginApi",
            "section": "def-common.IInspectorInfo",
            "text": "IInspectorInfo"
          },
          " | undefined; name: string; }) => { data: ",
          "InferSearchResponseOf",
          "<DocumentSource, TParams, { restTotalHitsAsInt: false; }>; loading: boolean | undefined; }"
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_es_search.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.useEsSearch.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              "TParams"
            ],
            "path": "x-pack/plugins/observability/public/hooks/use_es_search.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.useEsSearch.$2",
            "type": "Array",
            "tags": [],
            "label": "fnDeps",
            "description": [],
            "signature": [
              "any[]"
            ],
            "path": "x-pack/plugins/observability/public/hooks/use_es_search.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.useEsSearch.$3",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "path": "x-pack/plugins/observability/public/hooks/use_es_search.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.useEsSearch.$3.inspector",
                "type": "Object",
                "tags": [],
                "label": "inspector",
                "description": [],
                "signature": [
                  {
                    "pluginId": "data",
                    "scope": "common",
                    "docId": "kibDataSearchPluginApi",
                    "section": "def-common.IInspectorInfo",
                    "text": "IInspectorInfo"
                  },
                  " | undefined"
                ],
                "path": "x-pack/plugins/observability/public/hooks/use_es_search.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.useEsSearch.$3.name",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [],
                "path": "x-pack/plugins/observability/public/hooks/use_es_search.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.useFetcher",
        "type": "Function",
        "tags": [],
        "label": "useFetcher",
        "description": [],
        "signature": [
          "(fn: ({}: { signal: AbortSignal; }) => TReturn, fnDeps: any[], options: { preservePreviousData?: boolean | undefined; }) => ",
          "FetcherResult",
          "<InferResponseType<TReturn>> & { refetch: () => void; }"
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_fetcher.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.useFetcher.$1",
            "type": "Function",
            "tags": [],
            "label": "fn",
            "description": [],
            "signature": [
              "({}: { signal: AbortSignal; }) => TReturn"
            ],
            "path": "x-pack/plugins/observability/public/hooks/use_fetcher.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.useFetcher.$2",
            "type": "Array",
            "tags": [],
            "label": "fnDeps",
            "description": [],
            "signature": [
              "any[]"
            ],
            "path": "x-pack/plugins/observability/public/hooks/use_fetcher.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.useFetcher.$3",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "path": "x-pack/plugins/observability/public/hooks/use_fetcher.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.useFetcher.$3.preservePreviousData",
                "type": "CompoundType",
                "tags": [],
                "label": "preservePreviousData",
                "description": [],
                "signature": [
                  "boolean | undefined"
                ],
                "path": "x-pack/plugins/observability/public/hooks/use_fetcher.tsx",
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.useInspectorContext",
        "type": "Function",
        "tags": [],
        "label": "useInspectorContext",
        "description": [],
        "signature": [
          "() => ",
          "InspectorContextValue"
        ],
        "path": "x-pack/plugins/observability/public/context/inspector/use_inspector_context.tsx",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.useTheme",
        "type": "Function",
        "tags": [],
        "label": "useTheme",
        "description": [],
        "signature": [
          "() => ",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          }
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_theme.tsx",
        "deprecated": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.useTrackMetric",
        "type": "Function",
        "tags": [],
        "label": "useTrackMetric",
        "description": [],
        "signature": [
          "({ app, metric, metricType = METRIC_TYPE.COUNT, delay = 0 }: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.TrackMetricOptions",
            "text": "TrackMetricOptions"
          },
          ", effectDependencies: EffectDeps) => void"
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.useTrackMetric.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{ app, metric, metricType = METRIC_TYPE.COUNT, delay = 0 }",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.TrackMetricOptions",
                "text": "TrackMetricOptions"
              }
            ],
            "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.useTrackMetric.$2",
            "type": "Array",
            "tags": [],
            "label": "effectDependencies",
            "description": [],
            "signature": [
              "EffectDeps"
            ],
            "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.useTrackPageview",
        "type": "Function",
        "tags": [],
        "label": "useTrackPageview",
        "description": [],
        "signature": [
          "({ path, ...rest }: TrackPageviewProps, effectDependencies: EffectDeps) => void"
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.useTrackPageview.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{ path, ...rest }",
            "description": [],
            "signature": [
              "TrackPageviewProps"
            ],
            "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.useTrackPageview.$2",
            "type": "Array",
            "tags": [],
            "label": "effectDependencies",
            "description": [],
            "signature": [
              "EffectDeps"
            ],
            "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.useUiTracker",
        "type": "Function",
        "tags": [],
        "label": "useUiTracker",
        "description": [],
        "signature": [
          "({\n  app: defaultApp,\n}: { app?: \"fleet\" | \"apm\" | \"synthetics\" | \"infra_metrics\" | \"infra_logs\" | \"uptime\" | \"observability-overview\" | \"stack_monitoring\" | \"ux\" | undefined; }) => ",
          "TrackEvent"
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.useUiTracker.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  app: defaultApp,\n}",
            "description": [],
            "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.useUiTracker.$1.app",
                "type": "CompoundType",
                "tags": [],
                "label": "app",
                "description": [],
                "signature": [
                  "\"fleet\" | \"apm\" | \"synthetics\" | \"infra_metrics\" | \"infra_logs\" | \"uptime\" | \"observability-overview\" | \"stack_monitoring\" | \"ux\" | undefined"
                ],
                "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "observability",
        "id": "def-public.ApmFetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "ApmFetchDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ApmFetchDataResponse",
            "text": "ApmFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ApmFetchDataResponse.stats",
            "type": "Object",
            "tags": [],
            "label": "stats",
            "description": [],
            "signature": [
              "{ services: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; transactions: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ApmFetchDataResponse.series",
            "type": "Object",
            "tags": [],
            "label": "series",
            "description": [],
            "signature": [
              "{ transactions: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Series",
                "text": "Series"
              },
              "; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.APMHasDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "APMHasDataResponse",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.APMHasDataResponse.hasData",
            "type": "boolean",
            "tags": [],
            "label": "hasData",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.APMHasDataResponse.indices",
            "type": "Object",
            "tags": [],
            "label": "indices",
            "description": [],
            "signature": [
              "ApmIndicesConfig"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ConfigSchema",
        "type": "Interface",
        "tags": [],
        "label": "ConfigSchema",
        "description": [],
        "path": "x-pack/plugins/observability/public/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ConfigSchema.unsafe",
            "type": "Object",
            "tags": [],
            "label": "unsafe",
            "description": [],
            "signature": [
              "{ alertingExperience: { enabled: boolean; }; cases: { enabled: boolean; }; }"
            ],
            "path": "x-pack/plugins/observability/public/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.Coordinates",
        "type": "Interface",
        "tags": [],
        "label": "Coordinates",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.Coordinates.x",
            "type": "number",
            "tags": [],
            "label": "x",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.Coordinates.y",
            "type": "CompoundType",
            "tags": [],
            "label": "y",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.DataHandler",
        "type": "Interface",
        "tags": [],
        "label": "DataHandler",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.DataHandler",
            "text": "DataHandler"
          },
          "<T>"
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.DataHandler.fetchData",
            "type": "Function",
            "tags": [],
            "label": "fetchData",
            "description": [],
            "signature": [
              "(fetchDataParams: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.FetchDataParams",
                "text": "FetchDataParams"
              },
              ") => Promise<",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.ObservabilityFetchDataResponse",
                "text": "ObservabilityFetchDataResponse"
              },
              "[T]>"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.DataHandler.fetchData.$1",
                "type": "Object",
                "tags": [],
                "label": "fetchDataParams",
                "description": [],
                "signature": [
                  {
                    "pluginId": "observability",
                    "scope": "public",
                    "docId": "kibObservabilityPluginApi",
                    "section": "def-public.FetchDataParams",
                    "text": "FetchDataParams"
                  }
                ],
                "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
                "deprecated": false
              }
            ]
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.DataHandler.hasData",
            "type": "Function",
            "tags": [],
            "label": "hasData",
            "description": [],
            "signature": [
              "(params?: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.HasDataParams",
                "text": "HasDataParams"
              },
              " | undefined) => Promise<",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.ObservabilityHasDataResponse",
                "text": "ObservabilityHasDataResponse"
              },
              "[T]>"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.DataHandler.hasData.$1",
                "type": "Object",
                "tags": [],
                "label": "params",
                "description": [],
                "signature": [
                  {
                    "pluginId": "observability",
                    "scope": "public",
                    "docId": "kibObservabilityPluginApi",
                    "section": "def-public.HasDataParams",
                    "text": "HasDataParams"
                  },
                  " | undefined"
                ],
                "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ExploratoryEmbeddableProps",
        "type": "Interface",
        "tags": [],
        "label": "ExploratoryEmbeddableProps",
        "description": [],
        "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/embeddable/embeddable.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ExploratoryEmbeddableProps.reportType",
            "type": "CompoundType",
            "tags": [],
            "label": "reportType",
            "description": [],
            "signature": [
              "\"data-distribution\" | \"kpi-over-time\" | \"core-web-vitals\" | \"device-data-distribution\""
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/embeddable/embeddable.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ExploratoryEmbeddableProps.attributes",
            "type": "Array",
            "tags": [],
            "label": "attributes",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.SeriesUrl",
                "text": "SeriesUrl"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/embeddable/embeddable.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ExploratoryEmbeddableProps.appendTitle",
            "type": "Object",
            "tags": [],
            "label": "appendTitle",
            "description": [],
            "signature": [
              "JSX.Element | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/embeddable/embeddable.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ExploratoryEmbeddableProps.title",
            "type": "CompoundType",
            "tags": [],
            "label": "title",
            "description": [],
            "signature": [
              "string | JSX.Element"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/embeddable/embeddable.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ExploratoryEmbeddableProps.showCalculationMethod",
            "type": "CompoundType",
            "tags": [],
            "label": "showCalculationMethod",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/embeddable/embeddable.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ExploratoryEmbeddableProps.axisTitlesVisibility",
            "type": "Object",
            "tags": [],
            "label": "axisTitlesVisibility",
            "description": [],
            "signature": [
              "AxesSettingsConfig",
              " | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/embeddable/embeddable.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ExploratoryEmbeddableProps.legendIsVisible",
            "type": "CompoundType",
            "tags": [],
            "label": "legendIsVisible",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/embeddable/embeddable.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ExploratoryEmbeddableProps.dataTypesIndexPatterns",
            "type": "Object",
            "tags": [],
            "label": "dataTypesIndexPatterns",
            "description": [],
            "signature": [
              "Record<",
              "AppDataType",
              ", string> | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/embeddable/embeddable.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.FetchDataParams",
        "type": "Interface",
        "tags": [],
        "label": "FetchDataParams",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataParams.absoluteTime",
            "type": "Object",
            "tags": [],
            "label": "absoluteTime",
            "description": [],
            "signature": [
              "{ start: number; end: number; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataParams.relativeTime",
            "type": "Object",
            "tags": [],
            "label": "relativeTime",
            "description": [],
            "signature": [
              "{ start: string; end: string; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataParams.serviceName",
            "type": "string",
            "tags": [],
            "label": "serviceName",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataParams.bucketSize",
            "type": "number",
            "tags": [],
            "label": "bucketSize",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataParams.intervalString",
            "type": "string",
            "tags": [],
            "label": "intervalString",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.FetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "FetchDataResponse",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchDataResponse.appLink",
            "type": "string",
            "tags": [],
            "label": "appLink",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.HasDataParams",
        "type": "Interface",
        "tags": [],
        "label": "HasDataParams",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.HasDataParams.absoluteTime",
            "type": "Object",
            "tags": [],
            "label": "absoluteTime",
            "description": [],
            "signature": [
              "{ start: number; end: number; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.HasDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "HasDataResponse",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.HasDataResponse.hasData",
            "type": "boolean",
            "tags": [],
            "label": "hasData",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.LogsFetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "LogsFetchDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.LogsFetchDataResponse",
            "text": "LogsFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.LogsFetchDataResponse.stats",
            "type": "Object",
            "tags": [],
            "label": "stats",
            "description": [],
            "signature": [
              "{ [x: string]: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              " & { label: string; }; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.LogsFetchDataResponse.series",
            "type": "Object",
            "tags": [],
            "label": "series",
            "description": [],
            "signature": [
              "{ [x: string]: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Series",
                "text": "Series"
              },
              " & { label: string; }; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.MetricsFetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "MetricsFetchDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.MetricsFetchDataResponse",
            "text": "MetricsFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataResponse.sort",
            "type": "Function",
            "tags": [],
            "label": "sort",
            "description": [],
            "signature": [
              "(by: string, direction: string) => Promise<",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.MetricsFetchDataResponse",
                "text": "MetricsFetchDataResponse"
              },
              ">"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.MetricsFetchDataResponse.sort.$1",
                "type": "string",
                "tags": [],
                "label": "by",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
                "deprecated": false,
                "isRequired": true
              },
              {
                "parentPluginId": "observability",
                "id": "def-public.MetricsFetchDataResponse.sort.$2",
                "type": "string",
                "tags": [],
                "label": "direction",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataResponse.series",
            "type": "Array",
            "tags": [],
            "label": "series",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.MetricsFetchDataSeries",
                "text": "MetricsFetchDataSeries"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.MetricsFetchDataSeries",
        "type": "Interface",
        "tags": [],
        "label": "MetricsFetchDataSeries",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.name",
            "type": "CompoundType",
            "tags": [],
            "label": "name",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.platform",
            "type": "CompoundType",
            "tags": [],
            "label": "platform",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.provider",
            "type": "CompoundType",
            "tags": [],
            "label": "provider",
            "description": [],
            "signature": [
              "string | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.cpu",
            "type": "CompoundType",
            "tags": [],
            "label": "cpu",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.iowait",
            "type": "CompoundType",
            "tags": [],
            "label": "iowait",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.load",
            "type": "CompoundType",
            "tags": [],
            "label": "load",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.uptime",
            "type": "CompoundType",
            "tags": [],
            "label": "uptime",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.rx",
            "type": "CompoundType",
            "tags": [],
            "label": "rx",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.tx",
            "type": "CompoundType",
            "tags": [],
            "label": "tx",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.MetricsFetchDataSeries.timeseries",
            "type": "Array",
            "tags": [],
            "label": "timeseries",
            "description": [],
            "signature": [
              "{ timestamp: number; cpu: number | null; iowait: number | null; load: number | null; rx: number | null; tx: number | null; }[]"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityFetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityFetchDataResponse",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityFetchDataResponse.apm",
            "type": "Object",
            "tags": [],
            "label": "apm",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.ApmFetchDataResponse",
                "text": "ApmFetchDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityFetchDataResponse.infra_metrics",
            "type": "Object",
            "tags": [],
            "label": "infra_metrics",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.MetricsFetchDataResponse",
                "text": "MetricsFetchDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityFetchDataResponse.infra_logs",
            "type": "Object",
            "tags": [],
            "label": "infra_logs",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.LogsFetchDataResponse",
                "text": "LogsFetchDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityFetchDataResponse.synthetics",
            "type": "Object",
            "tags": [],
            "label": "synthetics",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.UptimeFetchDataResponse",
                "text": "UptimeFetchDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityFetchDataResponse.ux",
            "type": "Object",
            "tags": [],
            "label": "ux",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.UxFetchDataResponse",
                "text": "UxFetchDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityHasDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityHasDataResponse",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityHasDataResponse.apm",
            "type": "Object",
            "tags": [],
            "label": "apm",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.APMHasDataResponse",
                "text": "APMHasDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityHasDataResponse.infra_metrics",
            "type": "boolean",
            "tags": [],
            "label": "infra_metrics",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityHasDataResponse.infra_logs",
            "type": "boolean",
            "tags": [],
            "label": "infra_logs",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityHasDataResponse.synthetics",
            "type": "Object",
            "tags": [],
            "label": "synthetics",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.SyntheticsHasDataResponse",
                "text": "SyntheticsHasDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityHasDataResponse.ux",
            "type": "Object",
            "tags": [],
            "label": "ux",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.UXHasDataResponse",
                "text": "UXHasDataResponse"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityPublicPluginsSetup",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityPublicPluginsSetup",
        "description": [],
        "path": "x-pack/plugins/observability/public/plugin.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsSetup.data",
            "type": "Object",
            "tags": [],
            "label": "data",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginSetup",
                "text": "DataPublicPluginSetup"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsSetup.triggersActionsUi",
            "type": "Object",
            "tags": [],
            "label": "triggersActionsUi",
            "description": [],
            "signature": [
              {
                "pluginId": "triggersActionsUi",
                "scope": "public",
                "docId": "kibTriggersActionsUiPluginApi",
                "section": "def-public.TriggersAndActionsUIPublicPluginSetup",
                "text": "TriggersAndActionsUIPublicPluginSetup"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsSetup.home",
            "type": "Object",
            "tags": [],
            "label": "home",
            "description": [],
            "signature": [
              {
                "pluginId": "home",
                "scope": "public",
                "docId": "kibHomePluginApi",
                "section": "def-public.HomePublicPluginSetup",
                "text": "HomePublicPluginSetup"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityPublicPluginsStart",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityPublicPluginsStart",
        "description": [],
        "path": "x-pack/plugins/observability/public/plugin.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.cases",
            "type": "Object",
            "tags": [],
            "label": "cases",
            "description": [],
            "signature": [
              {
                "pluginId": "cases",
                "scope": "public",
                "docId": "kibCasesPluginApi",
                "section": "def-public.CasesUiStart",
                "text": "CasesUiStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.embeddable",
            "type": "Object",
            "tags": [],
            "label": "embeddable",
            "description": [],
            "signature": [
              {
                "pluginId": "embeddable",
                "scope": "public",
                "docId": "kibEmbeddablePluginApi",
                "section": "def-public.EmbeddableStart",
                "text": "EmbeddableStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.home",
            "type": "Object",
            "tags": [],
            "label": "home",
            "description": [],
            "signature": [
              {
                "pluginId": "home",
                "scope": "public",
                "docId": "kibHomePluginApi",
                "section": "def-public.HomePublicPluginStart",
                "text": "HomePublicPluginStart"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.triggersActionsUi",
            "type": "Object",
            "tags": [],
            "label": "triggersActionsUi",
            "description": [],
            "signature": [
              {
                "pluginId": "triggersActionsUi",
                "scope": "public",
                "docId": "kibTriggersActionsUiPluginApi",
                "section": "def-public.TriggersAndActionsUIPublicPluginStart",
                "text": "TriggersAndActionsUIPublicPluginStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.data",
            "type": "Object",
            "tags": [],
            "label": "data",
            "description": [],
            "signature": [
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginStart",
                "text": "DataPublicPluginStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.lens",
            "type": "Object",
            "tags": [],
            "label": "lens",
            "description": [],
            "signature": [
              {
                "pluginId": "lens",
                "scope": "public",
                "docId": "kibLensPluginApi",
                "section": "def-public.LensPublicStart",
                "text": "LensPublicStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityPublicPluginsStart.discover",
            "type": "Object",
            "tags": [],
            "label": "discover",
            "description": [],
            "signature": [
              {
                "pluginId": "discover",
                "scope": "public",
                "docId": "kibDiscoverPluginApi",
                "section": "def-public.DiscoverStart",
                "text": "DiscoverStart"
              }
            ],
            "path": "x-pack/plugins/observability/public/plugin.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityRuleTypeModel",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityRuleTypeModel",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityRuleTypeModel",
            "text": "ObservabilityRuleTypeModel"
          },
          "<Params> extends ",
          {
            "pluginId": "triggersActionsUi",
            "scope": "public",
            "docId": "kibTriggersActionsUiPluginApi",
            "section": "def-public.AlertTypeModel",
            "text": "AlertTypeModel"
          },
          "<Params>"
        ],
        "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityRuleTypeModel.format",
            "type": "Function",
            "tags": [],
            "label": "format",
            "description": [],
            "signature": [
              "(options: { fields: OutputOf<",
              "Optional",
              "<{ readonly \"kibana.alert.rule.params\": { readonly type: \"keyword\"; readonly index: false; }; readonly \"kibana.alert.rule.rule_type_id\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.rule.consumer\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.rule.producer\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.space_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: true; }; readonly \"kibana.alert.uuid\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.instance.id\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.start\": { readonly type: \"date\"; }; readonly \"kibana.alert.end\": { readonly type: \"date\"; }; readonly \"kibana.alert.duration.us\": { readonly type: \"long\"; }; readonly \"kibana.alert.severity\": { readonly type: \"keyword\"; }; readonly \"kibana.alert.status\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.evaluation.threshold\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; }; readonly \"kibana.alert.evaluation.value\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; }; readonly \"kibana.version\": { readonly type: \"version\"; readonly array: false; readonly required: false; }; readonly \"ecs.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.severity\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_user\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.system_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.action_group\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.author\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.category\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.created_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.description\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.enabled\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.from\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.interval\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.license\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.name\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.note\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.references\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.risk_score_mapping\": { readonly type: \"object\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_name_override\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.severity_mapping\": { readonly type: \"object\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.to\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.type\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly '@timestamp': { readonly type: \"date\"; readonly array: false; readonly required: true; }; readonly 'event.kind': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'event.action': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; }, \"tags\" | \"event.kind\" | \"ecs.version\" | \"event.action\" | \"kibana.alert.action_group\" | \"kibana.alert.duration.us\" | \"kibana.alert.end\" | \"kibana.alert.evaluation.threshold\" | \"kibana.alert.evaluation.value\" | \"kibana.alert.reason\" | \"kibana.alert.risk_score\" | \"kibana.alert.rule.author\" | \"kibana.alert.rule.created_at\" | \"kibana.alert.rule.created_by\" | \"kibana.alert.rule.description\" | \"kibana.alert.rule.enabled\" | \"kibana.alert.rule.from\" | \"kibana.alert.rule.interval\" | \"kibana.alert.rule.license\" | \"kibana.alert.rule.note\" | \"kibana.alert.rule.params\" | \"kibana.alert.rule.references\" | \"kibana.alert.rule.risk_score\" | \"kibana.alert.rule.risk_score_mapping\" | \"kibana.alert.rule.rule_id\" | \"kibana.alert.rule.rule_name_override\" | \"kibana.alert.rule.severity\" | \"kibana.alert.rule.severity_mapping\" | \"kibana.alert.rule.tags\" | \"kibana.alert.rule.to\" | \"kibana.alert.rule.type\" | \"kibana.alert.rule.updated_at\" | \"kibana.alert.rule.updated_by\" | \"kibana.alert.rule.version\" | \"kibana.alert.start\" | \"kibana.alert.severity\" | \"kibana.alert.system_status\" | \"kibana.alert.workflow_reason\" | \"kibana.alert.workflow_status\" | \"kibana.alert.workflow_user\" | \"kibana.version\">> & Record<string, any>; formatters: { asDuration: (value: number | null | undefined, { defaultValue, extended }?: FormatterOptions) => string; asPercent: (numerator: number | null | undefined, denominator: number | undefined, fallbackResult?: string) => string; }; }) => { reason: string; link: string; }"
            ],
            "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
            "deprecated": false,
            "returnComment": [],
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-public.ObservabilityRuleTypeModel.format.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "{ fields: OutputOf<",
                  "Optional",
                  "<{ readonly \"kibana.alert.rule.params\": { readonly type: \"keyword\"; readonly index: false; }; readonly \"kibana.alert.rule.rule_type_id\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.rule.consumer\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.rule.producer\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.space_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: true; }; readonly \"kibana.alert.uuid\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.instance.id\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.start\": { readonly type: \"date\"; }; readonly \"kibana.alert.end\": { readonly type: \"date\"; }; readonly \"kibana.alert.duration.us\": { readonly type: \"long\"; }; readonly \"kibana.alert.severity\": { readonly type: \"keyword\"; }; readonly \"kibana.alert.status\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.evaluation.threshold\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; }; readonly \"kibana.alert.evaluation.value\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; }; readonly \"kibana.version\": { readonly type: \"version\"; readonly array: false; readonly required: false; }; readonly \"ecs.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.severity\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_user\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.system_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.action_group\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.author\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.category\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.created_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.description\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.enabled\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.from\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.interval\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.license\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.name\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.note\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.references\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.risk_score_mapping\": { readonly type: \"object\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_name_override\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.severity_mapping\": { readonly type: \"object\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.to\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.type\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly '@timestamp': { readonly type: \"date\"; readonly array: false; readonly required: true; }; readonly 'event.kind': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'event.action': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; }, \"tags\" | \"event.kind\" | \"ecs.version\" | \"event.action\" | \"kibana.alert.action_group\" | \"kibana.alert.duration.us\" | \"kibana.alert.end\" | \"kibana.alert.evaluation.threshold\" | \"kibana.alert.evaluation.value\" | \"kibana.alert.reason\" | \"kibana.alert.risk_score\" | \"kibana.alert.rule.author\" | \"kibana.alert.rule.created_at\" | \"kibana.alert.rule.created_by\" | \"kibana.alert.rule.description\" | \"kibana.alert.rule.enabled\" | \"kibana.alert.rule.from\" | \"kibana.alert.rule.interval\" | \"kibana.alert.rule.license\" | \"kibana.alert.rule.note\" | \"kibana.alert.rule.params\" | \"kibana.alert.rule.references\" | \"kibana.alert.rule.risk_score\" | \"kibana.alert.rule.risk_score_mapping\" | \"kibana.alert.rule.rule_id\" | \"kibana.alert.rule.rule_name_override\" | \"kibana.alert.rule.severity\" | \"kibana.alert.rule.severity_mapping\" | \"kibana.alert.rule.tags\" | \"kibana.alert.rule.to\" | \"kibana.alert.rule.type\" | \"kibana.alert.rule.updated_at\" | \"kibana.alert.rule.updated_by\" | \"kibana.alert.rule.version\" | \"kibana.alert.start\" | \"kibana.alert.severity\" | \"kibana.alert.system_status\" | \"kibana.alert.workflow_reason\" | \"kibana.alert.workflow_status\" | \"kibana.alert.workflow_user\" | \"kibana.version\">> & Record<string, any>; formatters: { asDuration: (value: number | null | undefined, { defaultValue, extended }?: FormatterOptions) => string; asPercent: (numerator: number | null | undefined, denominator: number | undefined, fallbackResult?: string) => string; }; }"
                ],
                "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.Series",
        "type": "Interface",
        "tags": [],
        "label": "Series",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.Series.coordinates",
            "type": "Array",
            "tags": [],
            "label": "coordinates",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Coordinates",
                "text": "Coordinates"
              },
              "[]"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.SeriesUrl",
        "type": "Interface",
        "tags": [],
        "label": "SeriesUrl",
        "description": [],
        "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.SeriesUrl.name",
            "type": "string",
            "tags": [],
            "label": "name",
            "description": [],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.SeriesUrl.time",
            "type": "Object",
            "tags": [],
            "label": "time",
            "description": [],
            "signature": [
              "{ to: string; from: string; }"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.SeriesUrl.breakdown",
            "type": "string",
            "tags": [],
            "label": "breakdown",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.SeriesUrl.filters",
            "type": "Array",
            "tags": [],
            "label": "filters",
            "description": [],
            "signature": [
              "UrlFilter",
              "[] | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.SeriesUrl.seriesType",
            "type": "CompoundType",
            "tags": [],
            "label": "seriesType",
            "description": [],
            "signature": [
              "\"area\" | \"line\" | \"bar\" | \"bar_horizontal\" | \"bar_stacked\" | \"bar_percentage_stacked\" | \"bar_horizontal_stacked\" | \"bar_horizontal_percentage_stacked\" | \"area_stacked\" | \"area_percentage_stacked\" | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.SeriesUrl.operationType",
            "type": "string",
            "tags": [],
            "label": "operationType",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.SeriesUrl.dataType",
            "type": "CompoundType",
            "tags": [],
            "label": "dataType",
            "description": [],
            "signature": [
              "\"mobile\" | \"apm\" | \"synthetics\" | \"infra_metrics\" | \"infra_logs\" | \"ux\""
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.SeriesUrl.reportDefinitions",
            "type": "Object",
            "tags": [],
            "label": "reportDefinitions",
            "description": [],
            "signature": [
              "Record<string, string[]> | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.SeriesUrl.selectedMetricField",
            "type": "string",
            "tags": [],
            "label": "selectedMetricField",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.SeriesUrl.hidden",
            "type": "CompoundType",
            "tags": [],
            "label": "hidden",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.SeriesUrl.color",
            "type": "string",
            "tags": [],
            "label": "color",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.Stat",
        "type": "Interface",
        "tags": [],
        "label": "Stat",
        "description": [],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.Stat.type",
            "type": "CompoundType",
            "tags": [],
            "label": "type",
            "description": [],
            "signature": [
              "\"number\" | \"percent\" | \"bytesPerSecond\""
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.Stat.value",
            "type": "number",
            "tags": [],
            "label": "value",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.SyntheticsHasDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "SyntheticsHasDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.SyntheticsHasDataResponse",
            "text": "SyntheticsHasDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.HasDataResponse",
            "text": "HasDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.SyntheticsHasDataResponse.indices",
            "type": "string",
            "tags": [],
            "label": "indices",
            "description": [],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.UptimeFetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "UptimeFetchDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.UptimeFetchDataResponse",
            "text": "UptimeFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.UptimeFetchDataResponse.stats",
            "type": "Object",
            "tags": [],
            "label": "stats",
            "description": [],
            "signature": [
              "{ monitors: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; up: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; down: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UptimeFetchDataResponse.series",
            "type": "Object",
            "tags": [],
            "label": "series",
            "description": [],
            "signature": [
              "{ up: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Series",
                "text": "Series"
              },
              "; down: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Series",
                "text": "Series"
              },
              "; }"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.UxFetchDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "UxFetchDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.UxFetchDataResponse",
            "text": "UxFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.UxFetchDataResponse.coreWebVitals",
            "type": "Object",
            "tags": [],
            "label": "coreWebVitals",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.UXMetrics",
                "text": "UXMetrics"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.UXHasDataResponse",
        "type": "Interface",
        "tags": [],
        "label": "UXHasDataResponse",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.UXHasDataResponse",
            "text": "UXHasDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.HasDataResponse",
            "text": "HasDataResponse"
          }
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.UXHasDataResponse.serviceName",
            "type": "CompoundType",
            "tags": [],
            "label": "serviceName",
            "description": [],
            "signature": [
              "string | number | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXHasDataResponse.indices",
            "type": "string",
            "tags": [],
            "label": "indices",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.UXMetrics",
        "type": "Interface",
        "tags": [],
        "label": "UXMetrics",
        "description": [],
        "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.cls",
            "type": "CompoundType",
            "tags": [],
            "label": "cls",
            "description": [],
            "signature": [
              "number | null"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.fid",
            "type": "CompoundType",
            "tags": [],
            "label": "fid",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.lcp",
            "type": "CompoundType",
            "tags": [],
            "label": "lcp",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.tbt",
            "type": "number",
            "tags": [],
            "label": "tbt",
            "description": [],
            "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.fcp",
            "type": "CompoundType",
            "tags": [],
            "label": "fcp",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.coreVitalPages",
            "type": "number",
            "tags": [],
            "label": "coreVitalPages",
            "description": [],
            "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.lcpRanks",
            "type": "Array",
            "tags": [],
            "label": "lcpRanks",
            "description": [],
            "signature": [
              "number[]"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.fidRanks",
            "type": "Array",
            "tags": [],
            "label": "fidRanks",
            "description": [],
            "signature": [
              "number[]"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-public.UXMetrics.clsRanks",
            "type": "Array",
            "tags": [],
            "label": "clsRanks",
            "description": [],
            "signature": [
              "number[]"
            ],
            "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "parentPluginId": "observability",
        "id": "def-public.FETCH_STATUS",
        "type": "Enum",
        "tags": [],
        "label": "FETCH_STATUS",
        "description": [],
        "path": "x-pack/plugins/observability/public/hooks/use_fetcher.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.METRIC_TYPE",
        "type": "Enum",
        "tags": [],
        "label": "METRIC_TYPE",
        "description": [],
        "path": "node_modules/@kbn/analytics/target_types/metrics/index.d.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "parentPluginId": "observability",
        "id": "def-public.AddInspectorRequest",
        "type": "Type",
        "tags": [],
        "label": "AddInspectorRequest",
        "description": [],
        "signature": [
          "(result: ",
          "FetcherResult",
          "<{ mainStatisticsData?: { _inspect?: ",
          "InspectResponse",
          " | undefined; } | undefined; _inspect?: ",
          "InspectResponse",
          " | undefined; }>) => void"
        ],
        "path": "x-pack/plugins/observability/public/context/inspector/inspector_context.tsx",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.AddInspectorRequest.$1",
            "type": "Object",
            "tags": [],
            "label": "result",
            "description": [],
            "signature": [
              "FetcherResult",
              "<{ mainStatisticsData?: { _inspect?: ",
              "InspectResponse",
              " | undefined; } | undefined; _inspect?: ",
              "InspectResponse",
              " | undefined; }>"
            ],
            "path": "x-pack/plugins/observability/public/context/inspector/inspector_context.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ALL_VALUES_SELECTED",
        "type": "string",
        "tags": [],
        "label": "ALL_VALUES_SELECTED",
        "description": [],
        "signature": [
          "\"ALL_VALUES\""
        ],
        "path": "x-pack/plugins/observability/public/components/shared/field_value_suggestions/field_value_combobox.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.AllSeries",
        "type": "Type",
        "tags": [],
        "label": "AllSeries",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.SeriesUrl",
            "text": "SeriesUrl"
          },
          "[]"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/hooks/use_series_storage.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.DragHandleProps",
        "type": "Type",
        "tags": [],
        "label": "DragHandleProps",
        "description": [],
        "signature": [
          "DraggableProvidedDragHandleProps",
          " | undefined"
        ],
        "path": "x-pack/plugins/observability/public/typings/eui_draggable/index.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.DropResult",
        "type": "Type",
        "tags": [],
        "label": "DropResult",
        "description": [],
        "signature": [
          "DropResult"
        ],
        "path": "x-pack/plugins/observability/public/typings/eui_draggable/index.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.enableComparisonByDefault",
        "type": "string",
        "tags": [],
        "label": "enableComparisonByDefault",
        "description": [],
        "signature": [
          "\"observability:enableComparisonByDefault\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.enableInspectEsQueries",
        "type": "string",
        "tags": [],
        "label": "enableInspectEsQueries",
        "description": [],
        "signature": [
          "\"observability:enableInspectEsQueries\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.FetchData",
        "type": "Type",
        "tags": [],
        "label": "FetchData",
        "description": [],
        "signature": [
          "(fetchDataParams: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataParams",
            "text": "FetchDataParams"
          },
          ") => Promise<T>"
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.FetchData.$1",
            "type": "Object",
            "tags": [],
            "label": "fetchDataParams",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.FetchDataParams",
                "text": "FetchDataParams"
              }
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.HasData",
        "type": "Type",
        "tags": [],
        "label": "HasData",
        "description": [],
        "signature": [
          "(params?: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.HasDataParams",
            "text": "HasDataParams"
          },
          " | undefined) => Promise<",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityHasDataResponse",
            "text": "ObservabilityHasDataResponse"
          },
          "[T]>"
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.HasData.$1",
            "type": "Object",
            "tags": [],
            "label": "params",
            "description": [],
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.HasDataParams",
                "text": "HasDataParams"
              },
              " | undefined"
            ],
            "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.LazyObservabilityPageTemplateProps",
        "type": "Type",
        "tags": [],
        "label": "LazyObservabilityPageTemplateProps",
        "description": [],
        "signature": [
          "Pick<",
          {
            "pluginId": "kibanaReact",
            "scope": "public",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-public.KibanaPageTemplateProps",
            "text": "KibanaPageTemplateProps"
          },
          ", \"children\" | \"paddingSize\" | \"data-test-subj\" | \"restrictWidth\" | \"template\" | \"pageHeader\" | \"isEmptyState\" | \"noDataConfig\" | \"pageBodyProps\" | \"pageContentProps\" | \"pageContentBodyProps\"> & { showSolutionNav?: boolean | undefined; }"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/page_template/lazy_page_template.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.NumberOrNull",
        "type": "Type",
        "tags": [],
        "label": "NumberOrNull",
        "description": [],
        "signature": [
          "number | null"
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityFetchDataPlugins",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityFetchDataPlugins",
        "description": [],
        "signature": [
          "\"apm\" | \"synthetics\" | \"infra_metrics\" | \"infra_logs\" | \"ux\""
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityRuleTypeFormatter",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityRuleTypeFormatter",
        "description": [],
        "signature": [
          "(options: { fields: OutputOf<",
          "Optional",
          "<{ readonly \"kibana.alert.rule.params\": { readonly type: \"keyword\"; readonly index: false; }; readonly \"kibana.alert.rule.rule_type_id\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.rule.consumer\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.rule.producer\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.space_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: true; }; readonly \"kibana.alert.uuid\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.instance.id\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.start\": { readonly type: \"date\"; }; readonly \"kibana.alert.end\": { readonly type: \"date\"; }; readonly \"kibana.alert.duration.us\": { readonly type: \"long\"; }; readonly \"kibana.alert.severity\": { readonly type: \"keyword\"; }; readonly \"kibana.alert.status\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.evaluation.threshold\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; }; readonly \"kibana.alert.evaluation.value\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; }; readonly \"kibana.version\": { readonly type: \"version\"; readonly array: false; readonly required: false; }; readonly \"ecs.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.severity\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_user\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.system_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.action_group\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.author\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.category\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.created_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.description\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.enabled\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.from\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.interval\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.license\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.name\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.note\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.references\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.risk_score_mapping\": { readonly type: \"object\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_name_override\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.severity_mapping\": { readonly type: \"object\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.to\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.type\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly '@timestamp': { readonly type: \"date\"; readonly array: false; readonly required: true; }; readonly 'event.kind': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'event.action': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; }, \"tags\" | \"event.kind\" | \"ecs.version\" | \"event.action\" | \"kibana.alert.action_group\" | \"kibana.alert.duration.us\" | \"kibana.alert.end\" | \"kibana.alert.evaluation.threshold\" | \"kibana.alert.evaluation.value\" | \"kibana.alert.reason\" | \"kibana.alert.risk_score\" | \"kibana.alert.rule.author\" | \"kibana.alert.rule.created_at\" | \"kibana.alert.rule.created_by\" | \"kibana.alert.rule.description\" | \"kibana.alert.rule.enabled\" | \"kibana.alert.rule.from\" | \"kibana.alert.rule.interval\" | \"kibana.alert.rule.license\" | \"kibana.alert.rule.note\" | \"kibana.alert.rule.params\" | \"kibana.alert.rule.references\" | \"kibana.alert.rule.risk_score\" | \"kibana.alert.rule.risk_score_mapping\" | \"kibana.alert.rule.rule_id\" | \"kibana.alert.rule.rule_name_override\" | \"kibana.alert.rule.severity\" | \"kibana.alert.rule.severity_mapping\" | \"kibana.alert.rule.tags\" | \"kibana.alert.rule.to\" | \"kibana.alert.rule.type\" | \"kibana.alert.rule.updated_at\" | \"kibana.alert.rule.updated_by\" | \"kibana.alert.rule.version\" | \"kibana.alert.start\" | \"kibana.alert.severity\" | \"kibana.alert.system_status\" | \"kibana.alert.workflow_reason\" | \"kibana.alert.workflow_status\" | \"kibana.alert.workflow_user\" | \"kibana.version\">> & Record<string, any>; formatters: { asDuration: (value: number | null | undefined, { defaultValue, extended }?: FormatterOptions) => string; asPercent: (numerator: number | null | undefined, denominator: number | undefined, fallbackResult?: string) => string; }; }) => { reason: string; link: string; }"
        ],
        "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.ObservabilityRuleTypeFormatter.$1",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "{ fields: OutputOf<",
              "Optional",
              "<{ readonly \"kibana.alert.rule.params\": { readonly type: \"keyword\"; readonly index: false; }; readonly \"kibana.alert.rule.rule_type_id\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.rule.consumer\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.rule.producer\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.space_ids\": { readonly type: \"keyword\"; readonly array: true; readonly required: true; }; readonly \"kibana.alert.uuid\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.instance.id\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.start\": { readonly type: \"date\"; }; readonly \"kibana.alert.end\": { readonly type: \"date\"; }; readonly \"kibana.alert.duration.us\": { readonly type: \"long\"; }; readonly \"kibana.alert.severity\": { readonly type: \"keyword\"; }; readonly \"kibana.alert.status\": { readonly type: \"keyword\"; readonly required: true; }; readonly \"kibana.alert.evaluation.threshold\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; }; readonly \"kibana.alert.evaluation.value\": { readonly type: \"scaled_float\"; readonly scaling_factor: 100; }; readonly \"kibana.version\": { readonly type: \"version\"; readonly array: false; readonly required: false; }; readonly \"ecs.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.severity\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.risk_score\": { readonly type: \"float\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_user\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.workflow_reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.system_status\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.action_group\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.reason\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.author\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.category\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.uuid\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.created_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.created_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.description\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.enabled\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.from\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.interval\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.license\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.name\": { readonly type: \"keyword\"; readonly array: false; readonly required: true; }; readonly \"kibana.alert.rule.note\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.references\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.risk_score_mapping\": { readonly type: \"object\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_id\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.rule_name_override\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.severity_mapping\": { readonly type: \"object\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.tags\": { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly \"kibana.alert.rule.to\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.type\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_at\": { readonly type: \"date\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.updated_by\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly \"kibana.alert.rule.version\": { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly '@timestamp': { readonly type: \"date\"; readonly array: false; readonly required: true; }; readonly 'event.kind': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'event.action': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; }, \"tags\" | \"event.kind\" | \"ecs.version\" | \"event.action\" | \"kibana.alert.action_group\" | \"kibana.alert.duration.us\" | \"kibana.alert.end\" | \"kibana.alert.evaluation.threshold\" | \"kibana.alert.evaluation.value\" | \"kibana.alert.reason\" | \"kibana.alert.risk_score\" | \"kibana.alert.rule.author\" | \"kibana.alert.rule.created_at\" | \"kibana.alert.rule.created_by\" | \"kibana.alert.rule.description\" | \"kibana.alert.rule.enabled\" | \"kibana.alert.rule.from\" | \"kibana.alert.rule.interval\" | \"kibana.alert.rule.license\" | \"kibana.alert.rule.note\" | \"kibana.alert.rule.params\" | \"kibana.alert.rule.references\" | \"kibana.alert.rule.risk_score\" | \"kibana.alert.rule.risk_score_mapping\" | \"kibana.alert.rule.rule_id\" | \"kibana.alert.rule.rule_name_override\" | \"kibana.alert.rule.severity\" | \"kibana.alert.rule.severity_mapping\" | \"kibana.alert.rule.tags\" | \"kibana.alert.rule.to\" | \"kibana.alert.rule.type\" | \"kibana.alert.rule.updated_at\" | \"kibana.alert.rule.updated_by\" | \"kibana.alert.rule.version\" | \"kibana.alert.start\" | \"kibana.alert.severity\" | \"kibana.alert.system_status\" | \"kibana.alert.workflow_reason\" | \"kibana.alert.workflow_status\" | \"kibana.alert.workflow_user\" | \"kibana.version\">> & Record<string, any>; formatters: { asDuration: (value: number | null | undefined, { defaultValue, extended }?: FormatterOptions) => string; asPercent: (numerator: number | null | undefined, denominator: number | undefined, fallbackResult?: string) => string; }; }"
            ],
            "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.ObservabilityRuleTypeRegistry",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityRuleTypeRegistry",
        "description": [],
        "signature": [
          "{ register: (type: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityRuleTypeModel",
            "text": "ObservabilityRuleTypeModel"
          },
          "<any>) => void; getFormatter: (typeId: string) => ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityRuleTypeFormatter",
            "text": "ObservabilityRuleTypeFormatter"
          },
          " | undefined; }"
        ],
        "path": "x-pack/plugins/observability/public/rules/create_observability_rule_type_registry.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.SectionLinkProps",
        "type": "Type",
        "tags": [],
        "label": "SectionLinkProps",
        "description": [],
        "signature": [
          "CommonProps",
          " & Pick<(",
          "DisambiguateSet",
          "<(",
          "DisambiguateSet",
          "<React.ButtonHTMLAttributes<HTMLButtonElement>, Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">> & Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">) | (",
          "DisambiguateSet",
          "<Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">, React.ButtonHTMLAttributes<HTMLButtonElement>> & React.ButtonHTMLAttributes<HTMLButtonElement>), React.HTMLAttributes<HTMLSpanElement>> & React.HTMLAttributes<HTMLSpanElement>) | (",
          "DisambiguateSet",
          "<React.HTMLAttributes<HTMLSpanElement>, (",
          "DisambiguateSet",
          "<React.ButtonHTMLAttributes<HTMLButtonElement>, Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">> & Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">) | (",
          "DisambiguateSet",
          "<Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">, React.ButtonHTMLAttributes<HTMLButtonElement>> & React.ButtonHTMLAttributes<HTMLButtonElement>)> & ",
          "DisambiguateSet",
          "<React.ButtonHTMLAttributes<HTMLButtonElement>, Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">> & Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">) | (",
          "DisambiguateSet",
          "<React.HTMLAttributes<HTMLSpanElement>, (",
          "DisambiguateSet",
          "<React.ButtonHTMLAttributes<HTMLButtonElement>, Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">> & Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">) | (",
          "DisambiguateSet",
          "<Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">, React.ButtonHTMLAttributes<HTMLButtonElement>> & React.ButtonHTMLAttributes<HTMLButtonElement>)> & ",
          "DisambiguateSet",
          "<Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"color\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">, React.ButtonHTMLAttributes<HTMLButtonElement>> & React.ButtonHTMLAttributes<HTMLButtonElement>), \"name\" | \"title\" | \"type\" | \"id\" | \"onChange\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"placeholder\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"autoFocus\" | \"disabled\" | \"form\" | \"formAction\" | \"formEncType\" | \"formMethod\" | \"formNoValidate\" | \"formTarget\" | \"value\" | \"media\" | \"download\" | \"ping\" | \"hrefLang\" | \"referrerPolicy\"> & { size?: \"s\" | \"m\" | \"l\" | \"xs\" | undefined; color?: \"text\" | \"primary\" | \"inherit\" | \"ghost\" | \"subdued\" | undefined; label: React.ReactNode; isActive?: boolean | undefined; isDisabled?: boolean | undefined; href?: string | undefined; target?: string | undefined; rel?: string | undefined; iconType?: string | React.ComponentClass<{}, any> | React.FunctionComponent<{}> | undefined; iconProps?: Pick<",
          "EuiIconProps",
          ", \"string\" | \"name\" | \"title\" | \"version\" | \"filter\" | \"from\" | \"size\" | \"id\" | \"format\" | \"order\" | \"d\" | \"y\" | \"onChange\" | \"className\" | \"lang\" | \"style\" | \"tabIndex\" | \"role\" | \"color\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"children\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDown\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClick\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"data-test-subj\" | \"height\" | \"max\" | \"media\" | \"method\" | \"min\" | \"target\" | \"width\" | \"crossOrigin\" | \"accentHeight\" | \"accumulate\" | \"additive\" | \"alignmentBaseline\" | \"allowReorder\" | \"alphabetic\" | \"amplitude\" | \"arabicForm\" | \"ascent\" | \"attributeName\" | \"attributeType\" | \"autoReverse\" | \"azimuth\" | \"baseFrequency\" | \"baselineShift\" | \"baseProfile\" | \"bbox\" | \"begin\" | \"bias\" | \"by\" | \"calcMode\" | \"capHeight\" | \"clip\" | \"clipPath\" | \"clipPathUnits\" | \"clipRule\" | \"colorInterpolation\" | \"colorInterpolationFilters\" | \"colorProfile\" | \"colorRendering\" | \"contentScriptType\" | \"contentStyleType\" | \"cursor\" | \"cx\" | \"cy\" | \"decelerate\" | \"descent\" | \"diffuseConstant\" | \"direction\" | \"display\" | \"divisor\" | \"dominantBaseline\" | \"dur\" | \"dx\" | \"dy\" | \"edgeMode\" | \"elevation\" | \"enableBackground\" | \"end\" | \"exponent\" | \"externalResourcesRequired\" | \"fill\" | \"fillOpacity\" | \"fillRule\" | \"filterRes\" | \"filterUnits\" | \"floodColor\" | \"floodOpacity\" | \"focusable\" | \"fontFamily\" | \"fontSize\" | \"fontSizeAdjust\" | \"fontStretch\" | \"fontStyle\" | \"fontVariant\" | \"fontWeight\" | \"fx\" | \"fy\" | \"g1\" | \"g2\" | \"glyphName\" | \"glyphOrientationHorizontal\" | \"glyphOrientationVertical\" | \"glyphRef\" | \"gradientTransform\" | \"gradientUnits\" | \"hanging\" | \"horizAdvX\" | \"horizOriginX\" | \"href\" | \"ideographic\" | \"imageRendering\" | \"in2\" | \"in\" | \"intercept\" | \"k1\" | \"k2\" | \"k3\" | \"k4\" | \"k\" | \"kernelMatrix\" | \"kernelUnitLength\" | \"kerning\" | \"keyPoints\" | \"keySplines\" | \"keyTimes\" | \"lengthAdjust\" | \"letterSpacing\" | \"lightingColor\" | \"limitingConeAngle\" | \"local\" | \"markerEnd\" | \"markerHeight\" | \"markerMid\" | \"markerStart\" | \"markerUnits\" | \"markerWidth\" | \"mask\" | \"maskContentUnits\" | \"maskUnits\" | \"mathematical\" | \"mode\" | \"numOctaves\" | \"offset\" | \"opacity\" | \"operator\" | \"orient\" | \"orientation\" | \"origin\" | \"overflow\" | \"overlinePosition\" | \"overlineThickness\" | \"paintOrder\" | \"panose1\" | \"path\" | \"pathLength\" | \"patternContentUnits\" | \"patternTransform\" | \"patternUnits\" | \"pointerEvents\" | \"points\" | \"pointsAtX\" | \"pointsAtY\" | \"pointsAtZ\" | \"preserveAlpha\" | \"preserveAspectRatio\" | \"primitiveUnits\" | \"r\" | \"radius\" | \"refX\" | \"refY\" | \"renderingIntent\" | \"repeatCount\" | \"repeatDur\" | \"requiredExtensions\" | \"requiredFeatures\" | \"restart\" | \"result\" | \"rotate\" | \"rx\" | \"ry\" | \"scale\" | \"seed\" | \"shapeRendering\" | \"slope\" | \"spacing\" | \"specularConstant\" | \"specularExponent\" | \"speed\" | \"spreadMethod\" | \"startOffset\" | \"stdDeviation\" | \"stemh\" | \"stemv\" | \"stitchTiles\" | \"stopColor\" | \"stopOpacity\" | \"strikethroughPosition\" | \"strikethroughThickness\" | \"stroke\" | \"strokeDasharray\" | \"strokeDashoffset\" | \"strokeLinecap\" | \"strokeLinejoin\" | \"strokeMiterlimit\" | \"strokeOpacity\" | \"strokeWidth\" | \"surfaceScale\" | \"systemLanguage\" | \"tableValues\" | \"targetX\" | \"targetY\" | \"textAnchor\" | \"textDecoration\" | \"textLength\" | \"textRendering\" | \"to\" | \"transform\" | \"u1\" | \"u2\" | \"underlinePosition\" | \"underlineThickness\" | \"unicode\" | \"unicodeBidi\" | \"unicodeRange\" | \"unitsPerEm\" | \"vAlphabetic\" | \"values\" | \"vectorEffect\" | \"vertAdvY\" | \"vertOriginX\" | \"vertOriginY\" | \"vHanging\" | \"vIdeographic\" | \"viewBox\" | \"viewTarget\" | \"visibility\" | \"vMathematical\" | \"widths\" | \"wordSpacing\" | \"writingMode\" | \"x1\" | \"x2\" | \"x\" | \"xChannelSelector\" | \"xHeight\" | \"xlinkActuate\" | \"xlinkArcrole\" | \"xlinkHref\" | \"xlinkRole\" | \"xlinkShow\" | \"xlinkTitle\" | \"xlinkType\" | \"xmlBase\" | \"xmlLang\" | \"xmlns\" | \"xmlnsXlink\" | \"xmlSpace\" | \"y1\" | \"y2\" | \"yChannelSelector\" | \"z\" | \"zoomAndPan\" | \"titleId\" | \"onIconLoad\"> | undefined; icon?: React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)> | null) | (new (props: any) => React.Component<any, any, any>)> | undefined; showToolTip?: boolean | undefined; extraAction?: ({ type?: \"reset\" | \"button\" | \"submit\" | undefined; } & ",
          "EuiButtonIconProps",
          " & { onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined; } & React.ButtonHTMLAttributes<HTMLButtonElement> & { buttonRef?: ((instance: HTMLButtonElement | null) => void) | React.RefObject<HTMLButtonElement> | null | undefined; } & { alwaysShow?: boolean | undefined; }) | undefined; onClick?: ((event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined; wrapText?: boolean | undefined; buttonRef?: ((instance: HTMLButtonElement | null) => void) | React.RefObject<HTMLButtonElement> | null | undefined; }"
        ],
        "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.StringOrNull",
        "type": "Type",
        "tags": [],
        "label": "StringOrNull",
        "description": [],
        "signature": [
          "string | null"
        ],
        "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.TrackMetricOptions",
        "type": "Type",
        "tags": [],
        "label": "TrackMetricOptions",
        "description": [],
        "signature": [
          "TrackOptions & { metric: string; }"
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-public.UiTracker",
        "type": "Type",
        "tags": [],
        "label": "UiTracker",
        "description": [],
        "signature": [
          "(options: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.TrackMetricOptions",
            "text": "TrackMetricOptions"
          },
          ") => void"
        ],
        "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-public.UiTracker.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "TrackOptions & { metric: string; }"
            ],
            "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "observability",
      "id": "def-public.ObservabilityPublicSetup",
      "type": "Type",
      "tags": [],
      "label": "ObservabilityPublicSetup",
      "description": [],
      "signature": [
        "{ dashboard: { register: <T extends \"apm\" | \"synthetics\" | \"infra_metrics\" | \"infra_logs\" | \"ux\">({ appName, fetchData, hasData, }: { appName: T; } & ",
        {
          "pluginId": "observability",
          "scope": "public",
          "docId": "kibObservabilityPluginApi",
          "section": "def-public.DataHandler",
          "text": "DataHandler"
        },
        "<T>) => void; }; observabilityRuleTypeRegistry: { register: (type: ",
        {
          "pluginId": "observability",
          "scope": "public",
          "docId": "kibObservabilityPluginApi",
          "section": "def-public.ObservabilityRuleTypeModel",
          "text": "ObservabilityRuleTypeModel"
        },
        "<any>) => void; getFormatter: (typeId: string) => ",
        {
          "pluginId": "observability",
          "scope": "public",
          "docId": "kibObservabilityPluginApi",
          "section": "def-public.ObservabilityRuleTypeFormatter",
          "text": "ObservabilityRuleTypeFormatter"
        },
        " | undefined; }; isAlertingExperienceEnabled: () => boolean; navigation: { registerSections: (sections$: ",
        "Observable",
        "<",
        "NavigationSection",
        "[]>) => void; }; }"
      ],
      "path": "x-pack/plugins/observability/public/plugin.ts",
      "deprecated": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "parentPluginId": "observability",
      "id": "def-public.ObservabilityPublicStart",
      "type": "Type",
      "tags": [],
      "label": "ObservabilityPublicStart",
      "description": [],
      "signature": [
        "{ navigation: { PageTemplate: (pageTemplateProps: ",
        "WrappedPageTemplateProps",
        ") => JSX.Element; }; createExploratoryViewUrl: ({ reportType, allSeries }: { reportType: ValueOf<{ readonly dist: \"data-distribution\"; readonly kpi: \"kpi-over-time\"; readonly cwv: \"core-web-vitals\"; readonly mdd: \"device-data-distribution\"; }>; allSeries: ",
        {
          "pluginId": "observability",
          "scope": "public",
          "docId": "kibObservabilityPluginApi",
          "section": "def-public.AllSeries",
          "text": "AllSeries"
        },
        "; }, baseHref?: string) => string; ExploratoryViewEmbeddable: (props: ",
        {
          "pluginId": "observability",
          "scope": "public",
          "docId": "kibObservabilityPluginApi",
          "section": "def-public.ExploratoryEmbeddableProps",
          "text": "ExploratoryEmbeddableProps"
        },
        ") => JSX.Element; }"
      ],
      "path": "x-pack/plugins/observability/public/plugin.ts",
      "deprecated": false,
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "parentPluginId": "observability",
        "id": "def-server.WrappedElasticsearchClientError",
        "type": "Class",
        "tags": [],
        "label": "WrappedElasticsearchClientError",
        "description": [],
        "signature": [
          "WrappedElasticsearchClientError",
          " extends Error"
        ],
        "path": "x-pack/plugins/observability/common/utils/unwrap_es_response.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.WrappedElasticsearchClientError.originalError",
            "type": "Object",
            "tags": [],
            "label": "originalError",
            "description": [],
            "signature": [
              "ElasticsearchClientError"
            ],
            "path": "x-pack/plugins/observability/common/utils/unwrap_es_response.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.WrappedElasticsearchClientError.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "x-pack/plugins/observability/common/utils/unwrap_es_response.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.WrappedElasticsearchClientError.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "originalError",
                "description": [],
                "signature": [
                  "ElasticsearchClientError"
                ],
                "path": "x-pack/plugins/observability/common/utils/unwrap_es_response.ts",
                "deprecated": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "observability",
        "id": "def-server.createOrUpdateIndex",
        "type": "Function",
        "tags": [],
        "label": "createOrUpdateIndex",
        "description": [],
        "signature": [
          "({\n  index,\n  mappings,\n  client,\n  logger,\n}: { index: string; mappings: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.Mappings",
            "text": "Mappings"
          },
          "; client: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          "; logger: ",
          {
            "pluginId": "@kbn/logging",
            "scope": "server",
            "docId": "kibKbnLoggingPluginApi",
            "section": "def-server.Logger",
            "text": "Logger"
          },
          "; }) => Promise<void>"
        ],
        "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.createOrUpdateIndex.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  index,\n  mappings,\n  client,\n  logger,\n}",
            "description": [],
            "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.createOrUpdateIndex.$1.index",
                "type": "string",
                "tags": [],
                "label": "index",
                "description": [],
                "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.createOrUpdateIndex.$1.mappings",
                "type": "CompoundType",
                "tags": [],
                "label": "mappings",
                "description": [],
                "signature": [
                  "(",
                  "MappingTypeMapping",
                  " & { date_detection?: boolean | undefined; dynamic?: boolean | \"true\" | \"false\" | \"strict\" | \"runtime\" | undefined; dynamic_date_formats?: string[] | undefined; dynamic_templates?: Record<string, ",
                  "MappingDynamicTemplate",
                  "> | Record<string, ",
                  "MappingDynamicTemplate",
                  ">[] | undefined; _field_names?: ",
                  "MappingFieldNamesField",
                  " | undefined; _meta?: Record<string, any> | undefined; numeric_detection?: boolean | undefined; properties?: Record<string, ",
                  "MappingProperty",
                  "> | undefined; _routing?: ",
                  "MappingRoutingField",
                  " | undefined; _source?: ",
                  "MappingSourceField",
                  " | undefined; runtime?: Record<string, ",
                  "MappingRuntimeField",
                  "> | undefined; }) | (Record<string, ",
                  "MappingTypeMapping",
                  "> & { date_detection?: boolean | undefined; dynamic?: boolean | \"true\" | \"false\" | \"strict\" | \"runtime\" | undefined; dynamic_date_formats?: string[] | undefined; dynamic_templates?: Record<string, ",
                  "MappingDynamicTemplate",
                  "> | Record<string, ",
                  "MappingDynamicTemplate",
                  ">[] | undefined; _field_names?: ",
                  "MappingFieldNamesField",
                  " | undefined; _meta?: Record<string, any> | undefined; numeric_detection?: boolean | undefined; properties?: Record<string, ",
                  "MappingProperty",
                  "> | undefined; _routing?: ",
                  "MappingRoutingField",
                  " | undefined; _source?: ",
                  "MappingSourceField",
                  " | undefined; runtime?: Record<string, ",
                  "MappingRuntimeField",
                  "> | undefined; })"
                ],
                "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.createOrUpdateIndex.$1.client",
                "type": "CompoundType",
                "tags": [],
                "label": "client",
                "description": [],
                "signature": [
                  "Pick<",
                  "KibanaClient",
                  ", \"name\" | \"create\" | \"index\" | \"delete\" | \"get\" | \"update\" | \"closePointInTime\" | \"search\" | \"security\" | \"transform\" | \"eql\" | \"helpers\" | \"asyncSearch\" | \"autoscaling\" | \"bulk\" | \"cat\" | \"ccr\" | \"clearScroll\" | \"cluster\" | \"count\" | \"danglingIndices\" | \"deleteByQuery\" | \"deleteByQueryRethrottle\" | \"deleteScript\" | \"enrich\" | \"exists\" | \"existsSource\" | \"explain\" | \"features\" | \"fieldCaps\" | \"fleet\" | \"getScript\" | \"getScriptContext\" | \"getScriptLanguages\" | \"getSource\" | \"graph\" | \"ilm\" | \"indices\" | \"info\" | \"ingest\" | \"knnSearch\" | \"license\" | \"logstash\" | \"mget\" | \"migration\" | \"ml\" | \"monitoring\" | \"msearch\" | \"msearchTemplate\" | \"mtermvectors\" | \"nodes\" | \"openPointInTime\" | \"ping\" | \"putScript\" | \"rankEval\" | \"reindex\" | \"reindexRethrottle\" | \"renderSearchTemplate\" | \"rollup\" | \"scriptsPainlessExecute\" | \"scroll\" | \"searchMvt\" | \"searchShards\" | \"searchTemplate\" | \"searchableSnapshots\" | \"shutdown\" | \"slm\" | \"snapshot\" | \"sql\" | \"ssl\" | \"tasks\" | \"termsEnum\" | \"termvectors\" | \"textStructure\" | \"updateByQuery\" | \"updateByQueryRethrottle\" | \"watcher\" | \"xpack\"> & { transport: { request<TResponse = unknown>(params: ",
                  "TransportRequestParams",
                  ", options?: ",
                  "TransportRequestOptions",
                  " | undefined): Promise<",
                  "TransportResult",
                  "<TResponse, unknown>>; }; }"
                ],
                "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.createOrUpdateIndex.$1.logger",
                "type": "Object",
                "tags": [],
                "label": "logger",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/logging",
                    "scope": "server",
                    "docId": "kibKbnLoggingPluginApi",
                    "section": "def-server.Logger",
                    "text": "Logger"
                  }
                ],
                "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.getInspectResponse",
        "type": "Function",
        "tags": [],
        "label": "getInspectResponse",
        "description": [
          "\nCreate a formatted response to be sent in the _inspect key for use in the\ninspector."
        ],
        "signature": [
          "({\n  esError,\n  esRequestParams,\n  esRequestStatus,\n  esResponse,\n  kibanaRequest,\n  operationName,\n  startTime,\n}: { esError: ",
          "WrappedElasticsearchClientError",
          " | null; esRequestParams: Record<string, any>; esRequestStatus: ",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.RequestStatus",
            "text": "RequestStatus"
          },
          "; esResponse: any; kibanaRequest: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCoreHttpPluginApi",
            "section": "def-server.KibanaRequest",
            "text": "KibanaRequest"
          },
          "<unknown, unknown, unknown, any>; operationName: string; startTime: number; }) => ",
          {
            "pluginId": "inspector",
            "scope": "common",
            "docId": "kibInspectorPluginApi",
            "section": "def-common.Request",
            "text": "Request"
          }
        ],
        "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.getInspectResponse.$1",
            "type": "Object",
            "tags": [],
            "label": "{\n  esError,\n  esRequestParams,\n  esRequestStatus,\n  esResponse,\n  kibanaRequest,\n  operationName,\n  startTime,\n}",
            "description": [],
            "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
            "deprecated": false,
            "children": [
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.esError",
                "type": "CompoundType",
                "tags": [],
                "label": "esError",
                "description": [],
                "signature": [
                  "WrappedElasticsearchClientError",
                  " | null"
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.esRequestParams",
                "type": "Object",
                "tags": [],
                "label": "esRequestParams",
                "description": [],
                "signature": [
                  "{ [x: string]: any; }"
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.esRequestStatus",
                "type": "Enum",
                "tags": [],
                "label": "esRequestStatus",
                "description": [],
                "signature": [
                  {
                    "pluginId": "inspector",
                    "scope": "common",
                    "docId": "kibInspectorPluginApi",
                    "section": "def-common.RequestStatus",
                    "text": "RequestStatus"
                  }
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.esResponse",
                "type": "Any",
                "tags": [],
                "label": "esResponse",
                "description": [],
                "signature": [
                  "any"
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.kibanaRequest",
                "type": "Object",
                "tags": [],
                "label": "kibanaRequest",
                "description": [],
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCoreHttpPluginApi",
                    "section": "def-server.KibanaRequest",
                    "text": "KibanaRequest"
                  },
                  "<unknown, unknown, unknown, any>"
                ],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.operationName",
                "type": "string",
                "tags": [],
                "label": "operationName",
                "description": [],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false
              },
              {
                "parentPluginId": "observability",
                "id": "def-server.getInspectResponse.$1.startTime",
                "type": "number",
                "tags": [],
                "label": "startTime",
                "description": [],
                "path": "x-pack/plugins/observability/common/utils/get_inspect_response.ts",
                "deprecated": false
              }
            ]
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.kqlQuery",
        "type": "Function",
        "tags": [],
        "label": "kqlQuery",
        "description": [],
        "signature": [
          "(kql: string) => ",
          "QueryDslQueryContainer",
          "[]"
        ],
        "path": "x-pack/plugins/observability/server/utils/queries.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.kqlQuery.$1",
            "type": "string",
            "tags": [],
            "label": "kql",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.rangeQuery",
        "type": "Function",
        "tags": [],
        "label": "rangeQuery",
        "description": [],
        "signature": [
          "(start: number | undefined, end: number | undefined, field: string) => ",
          "QueryDslQueryContainer",
          "[]"
        ],
        "path": "x-pack/plugins/observability/server/utils/queries.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.rangeQuery.$1",
            "type": "number",
            "tags": [],
            "label": "start",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "isRequired": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.rangeQuery.$2",
            "type": "number",
            "tags": [],
            "label": "end",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "isRequired": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.rangeQuery.$3",
            "type": "string",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "string"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.termQuery",
        "type": "Function",
        "tags": [],
        "label": "termQuery",
        "description": [],
        "signature": [
          "(field: T, value: string | undefined) => { term: Record<T, string>; }[]"
        ],
        "path": "x-pack/plugins/observability/server/utils/queries.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.termQuery.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "field",
            "description": [],
            "signature": [
              "T"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "isRequired": true
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.termQuery.$2",
            "type": "string",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "x-pack/plugins/observability/server/utils/queries.ts",
            "deprecated": false,
            "isRequired": false
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.unwrapEsResponse",
        "type": "Function",
        "tags": [],
        "label": "unwrapEsResponse",
        "description": [],
        "signature": [
          "(responsePromise: T) => Promise<",
          "PromiseType",
          "<T>[\"body\"]>"
        ],
        "path": "x-pack/plugins/observability/common/utils/unwrap_es_response.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.unwrapEsResponse.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "responsePromise",
            "description": [],
            "signature": [
              "T"
            ],
            "path": "x-pack/plugins/observability/common/utils/unwrap_es_response.ts",
            "deprecated": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "observability",
        "id": "def-server.ObservabilityRouteCreateOptions",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityRouteCreateOptions",
        "description": [],
        "path": "x-pack/plugins/observability/server/routes/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.ObservabilityRouteCreateOptions.options",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              "{ tags: string[]; }"
            ],
            "path": "x-pack/plugins/observability/server/routes/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.ObservabilityRouteHandlerResources",
        "type": "Interface",
        "tags": [],
        "label": "ObservabilityRouteHandlerResources",
        "description": [],
        "path": "x-pack/plugins/observability/server/routes/types.ts",
        "deprecated": false,
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-server.ObservabilityRouteHandlerResources.core",
            "type": "Object",
            "tags": [],
            "label": "core",
            "description": [],
            "signature": [
              "{ start: () => Promise<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreStart",
                "text": "CoreStart"
              },
              ">; setup: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreSetup",
                "text": "CoreSetup"
              },
              "<object, unknown>; }"
            ],
            "path": "x-pack/plugins/observability/server/routes/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.ObservabilityRouteHandlerResources.ruleDataService",
            "type": "Object",
            "tags": [],
            "label": "ruleDataService",
            "description": [],
            "signature": [
              {
                "pluginId": "ruleRegistry",
                "scope": "server",
                "docId": "kibRuleRegistryPluginApi",
                "section": "def-server.IRuleDataService",
                "text": "IRuleDataService"
              }
            ],
            "path": "x-pack/plugins/observability/server/routes/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.ObservabilityRouteHandlerResources.request",
            "type": "Object",
            "tags": [],
            "label": "request",
            "description": [],
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ],
            "path": "x-pack/plugins/observability/server/routes/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.ObservabilityRouteHandlerResources.context",
            "type": "Object",
            "tags": [],
            "label": "context",
            "description": [],
            "signature": [
              "ObservabilityRequestHandlerContext"
            ],
            "path": "x-pack/plugins/observability/server/routes/types.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-server.ObservabilityRouteHandlerResources.logger",
            "type": "Object",
            "tags": [],
            "label": "logger",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/logging",
                "scope": "server",
                "docId": "kibKbnLoggingPluginApi",
                "section": "def-server.Logger",
                "text": "Logger"
              }
            ],
            "path": "x-pack/plugins/observability/server/routes/types.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "observability",
        "id": "def-server.AbstractObservabilityServerRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "AbstractObservabilityServerRouteRepository",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.ServerRouteRepository",
            "text": "ServerRouteRepository"
          },
          "<",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          ", ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          ", Record<string, ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.ServerRoute",
            "text": "ServerRoute"
          },
          "<string, ",
          "Mixed",
          " | undefined, ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          ", any, ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          ">>>"
        ],
        "path": "x-pack/plugins/observability/server/routes/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.Mappings",
        "type": "Type",
        "tags": [],
        "label": "Mappings",
        "description": [],
        "signature": [
          "(",
          "MappingTypeMapping",
          " & { date_detection?: boolean | undefined; dynamic?: boolean | \"true\" | \"false\" | \"strict\" | \"runtime\" | undefined; dynamic_date_formats?: string[] | undefined; dynamic_templates?: Record<string, ",
          "MappingDynamicTemplate",
          "> | Record<string, ",
          "MappingDynamicTemplate",
          ">[] | undefined; _field_names?: ",
          "MappingFieldNamesField",
          " | undefined; _meta?: Record<string, any> | undefined; numeric_detection?: boolean | undefined; properties?: Record<string, ",
          "MappingProperty",
          "> | undefined; _routing?: ",
          "MappingRoutingField",
          " | undefined; _source?: ",
          "MappingSourceField",
          " | undefined; runtime?: Record<string, ",
          "MappingRuntimeField",
          "> | undefined; }) | (Record<string, ",
          "MappingTypeMapping",
          "> & { date_detection?: boolean | undefined; dynamic?: boolean | \"true\" | \"false\" | \"strict\" | \"runtime\" | undefined; dynamic_date_formats?: string[] | undefined; dynamic_templates?: Record<string, ",
          "MappingDynamicTemplate",
          "> | Record<string, ",
          "MappingDynamicTemplate",
          ">[] | undefined; _field_names?: ",
          "MappingFieldNamesField",
          " | undefined; _meta?: Record<string, any> | undefined; numeric_detection?: boolean | undefined; properties?: Record<string, ",
          "MappingProperty",
          "> | undefined; _routing?: ",
          "MappingRoutingField",
          " | undefined; _source?: ",
          "MappingSourceField",
          " | undefined; runtime?: Record<string, ",
          "MappingRuntimeField",
          "> | undefined; })"
        ],
        "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.ObservabilityAPIReturnType",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityAPIReturnType",
        "description": [],
        "signature": [
          "TEndpoint extends \"GET /api/observability/rules/alerts/dynamic_index_pattern\" ? { \"GET /api/observability/rules/alerts/dynamic_index_pattern\": ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /api/observability/rules/alerts/dynamic_index_pattern\", ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ registrationContexts: ",
          "ArrayC",
          "<",
          "StringC",
          ">; namespace: ",
          "StringC",
          "; }>; }>, ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          ", string[], ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          ">; }[TEndpoint] extends ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.ServerRoute",
            "text": "ServerRoute"
          },
          "<any, any, any, infer TReturnType, Record<string, any>> ? TReturnType : never : never"
        ],
        "path": "x-pack/plugins/observability/server/routes/types.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.ObservabilityConfig",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityConfig",
        "description": [],
        "signature": [
          "any"
        ],
        "path": "x-pack/plugins/observability/server/index.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.ObservabilityServerRouteRepository",
        "type": "Type",
        "tags": [],
        "label": "ObservabilityServerRouteRepository",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.ServerRouteRepository",
            "text": "ServerRouteRepository"
          },
          "<",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          ", ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          ", { \"GET /api/observability/rules/alerts/dynamic_index_pattern\": ",
          {
            "pluginId": "@kbn/server-route-repository",
            "scope": "server",
            "docId": "kibKbnServerRouteRepositoryPluginApi",
            "section": "def-server.ServerRoute",
            "text": "ServerRoute"
          },
          "<\"GET /api/observability/rules/alerts/dynamic_index_pattern\", ",
          "TypeC",
          "<{ query: ",
          "TypeC",
          "<{ registrationContexts: ",
          "ArrayC",
          "<",
          "StringC",
          ">; namespace: ",
          "StringC",
          "; }>; }>, ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          ", string[], ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          ">; }>"
        ],
        "path": "x-pack/plugins/observability/server/routes/get_global_observability_server_route_repository.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-server.ScopedAnnotationsClient",
        "type": "Type",
        "tags": [],
        "label": "ScopedAnnotationsClient",
        "description": [],
        "signature": [
          "{ readonly index: string; create: (createParams: { annotation: { type: string; }; '@timestamp': string; message: string; } & { tags?: string[] | undefined; service?: { name?: string | undefined; environment?: string | undefined; version?: string | undefined; } | undefined; }) => Promise<{ _id: string; _index: string; _source: ",
          "Annotation",
          "; }>; getById: (getByIdParams: { id: string; }) => Promise<",
          "GetResponse",
          "<unknown>>; delete: (deleteParams: { id: string; }) => Promise<",
          "DeleteResponse",
          ">; }"
        ],
        "path": "x-pack/plugins/observability/server/lib/annotations/bootstrap_annotations.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "parentPluginId": "observability",
      "id": "def-server.ObservabilityPluginSetup",
      "type": "Type",
      "tags": [],
      "label": "ObservabilityPluginSetup",
      "description": [],
      "signature": [
        "{ getScopedAnnotationsClient: (requestContext: ",
        {
          "pluginId": "core",
          "scope": "server",
          "docId": "kibCorePluginApi",
          "section": "def-server.RequestHandlerContext",
          "text": "RequestHandlerContext"
        },
        " & { licensing: ",
        {
          "pluginId": "licensing",
          "scope": "server",
          "docId": "kibLicensingPluginApi",
          "section": "def-server.LicensingApiRequestHandlerContext",
          "text": "LicensingApiRequestHandlerContext"
        },
        "; }, request: ",
        {
          "pluginId": "core",
          "scope": "server",
          "docId": "kibCoreHttpPluginApi",
          "section": "def-server.KibanaRequest",
          "text": "KibanaRequest"
        },
        "<unknown, unknown, unknown, any>) => Promise<{ readonly index: string; create: (createParams: { annotation: { type: string; }; '@timestamp': string; message: string; } & { tags?: string[] | undefined; service?: { name?: string | undefined; environment?: string | undefined; version?: string | undefined; } | undefined; }) => Promise<{ _id: string; _index: string; _source: ",
        "Annotation",
        "; }>; getById: (getByIdParams: { id: string; }) => Promise<",
        "GetResponse",
        "<unknown>>; delete: (deleteParams: { id: string; }) => Promise<",
        "DeleteResponse",
        ">; } | undefined>; }"
      ],
      "path": "x-pack/plugins/observability/server/plugin.ts",
      "deprecated": false,
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "observability",
        "id": "def-common.AsDuration",
        "type": "Type",
        "tags": [],
        "label": "AsDuration",
        "description": [],
        "signature": [
          "(value: number | null | undefined, { defaultValue, extended }?: FormatterOptions) => string"
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.AsDuration.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "value",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.AsDuration.$2",
            "type": "Object",
            "tags": [],
            "label": "__1",
            "description": [],
            "signature": [
              "FormatterOptions"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/duration.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.AsPercent",
        "type": "Type",
        "tags": [],
        "label": "AsPercent",
        "description": [],
        "signature": [
          "(numerator: number | null | undefined, denominator: number | undefined, fallbackResult?: string) => string"
        ],
        "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
        "deprecated": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "observability",
            "id": "def-common.AsPercent.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "numerator",
            "description": [],
            "signature": [
              "number | null | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.AsPercent.$2",
            "type": "number",
            "tags": [],
            "label": "denominator",
            "description": [],
            "signature": [
              "number | undefined"
            ],
            "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
            "deprecated": false
          },
          {
            "parentPluginId": "observability",
            "id": "def-common.AsPercent.$3",
            "type": "string",
            "tags": [],
            "label": "fallbackResult",
            "description": [],
            "path": "x-pack/plugins/observability/common/utils/formatters/formatters.ts",
            "deprecated": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.casesFeatureId",
        "type": "string",
        "tags": [],
        "label": "casesFeatureId",
        "description": [],
        "signature": [
          "\"observabilityCases\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.enableComparisonByDefault",
        "type": "string",
        "tags": [],
        "label": "enableComparisonByDefault",
        "description": [],
        "signature": [
          "\"observability:enableComparisonByDefault\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.enableInspectEsQueries",
        "type": "string",
        "tags": [],
        "label": "enableInspectEsQueries",
        "description": [],
        "signature": [
          "\"observability:enableInspectEsQueries\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.maxSuggestions",
        "type": "string",
        "tags": [],
        "label": "maxSuggestions",
        "description": [],
        "signature": [
          "\"observability:maxSuggestions\""
        ],
        "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.observabilityAppId",
        "type": "string",
        "tags": [],
        "label": "observabilityAppId",
        "description": [],
        "signature": [
          "\"observability-overview\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "observability",
        "id": "def-common.observabilityFeatureId",
        "type": "string",
        "tags": [],
        "label": "observabilityFeatureId",
        "description": [],
        "signature": [
          "\"observability\""
        ],
        "path": "x-pack/plugins/observability/common/index.ts",
        "deprecated": false,
        "initialIsOpen": false
      }
    ],
    "objects": []
  }
}