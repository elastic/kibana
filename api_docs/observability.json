{
  "id": "observability",
  "client": {
    "classes": [
      {
        "id": "def-public.FormatterRuleRegistry",
        "type": "Class",
        "tags": [],
        "label": "FormatterRuleRegistry",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FormatterRuleRegistry",
            "text": "FormatterRuleRegistry"
          },
          "<TFieldMap> extends ",
          {
            "pluginId": "ruleRegistry",
            "scope": "public",
            "docId": "kibRuleRegistryPluginApi",
            "section": "def-public.RuleRegistry",
            "text": "RuleRegistry"
          },
          "<TFieldMap, FormattableRuleType<TFieldMap>>"
        ],
        "children": [],
        "source": {
          "path": "x-pack/plugins/observability/public/rules/formatter_rule_registry.ts",
          "lineNumber": 27
        },
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "id": "def-public.ActionMenu",
        "type": "Function",
        "label": "ActionMenu",
        "signature": [
          "(props: Props) => JSX.Element"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.ActionMenu.$1",
            "type": "CompoundType",
            "label": "props",
            "isRequired": true,
            "signature": [
              "Props"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
              "lineNumber": 74
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
          "lineNumber": 74
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ActionMenuDivider",
        "type": "Function",
        "label": "ActionMenuDivider",
        "signature": [
          "() => JSX.Element"
        ],
        "description": [],
        "children": [],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
          "lineNumber": 70
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.createExploratoryViewUrl",
        "type": "Function",
        "label": "createExploratoryViewUrl",
        "signature": [
          "(allSeries: Record<string, ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.SeriesUrl",
            "text": "SeriesUrl"
          },
          ">, baseHref: string) => string"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.createExploratoryViewUrl.$1",
            "type": "Object",
            "label": "allSeries",
            "isRequired": true,
            "signature": [
              "Record<string, ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.SeriesUrl",
                "text": "SeriesUrl"
              },
              ">"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts",
              "lineNumber": 38
            }
          },
          {
            "id": "def-public.createExploratoryViewUrl.$2",
            "type": "string",
            "label": "baseHref",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts",
              "lineNumber": 38
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/configurations/utils.ts",
          "lineNumber": 38
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.FieldValueSuggestions",
        "type": "Function",
        "label": "FieldValueSuggestions",
        "signature": [
          "(props: ",
          "FieldValueSuggestionsProps",
          ") => JSX.Element"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.FieldValueSuggestions.$1",
            "type": "CompoundType",
            "label": "props",
            "isRequired": true,
            "signature": [
              "FieldValueSuggestionsProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
              "lineNumber": 34
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
          "lineNumber": 34
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.getApmTraceUrl",
        "type": "Function",
        "label": "getApmTraceUrl",
        "signature": [
          "({\n  traceId,\n  rangeFrom,\n  rangeTo,\n}: { traceId: string; rangeFrom: string; rangeTo: string; }) => string"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.getApmTraceUrl.$1.traceIdrangeFromrangeTo",
            "type": "Object",
            "label": "{\n  traceId,\n  rangeFrom,\n  rangeTo,\n}",
            "tags": [],
            "description": [],
            "children": [
              {
                "tags": [],
                "id": "def-public.getApmTraceUrl.$1.traceIdrangeFromrangeTo.traceId",
                "type": "string",
                "label": "traceId",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
                  "lineNumber": 13
                }
              },
              {
                "tags": [],
                "id": "def-public.getApmTraceUrl.$1.traceIdrangeFromrangeTo.rangeFrom",
                "type": "string",
                "label": "rangeFrom",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
                  "lineNumber": 14
                }
              },
              {
                "tags": [],
                "id": "def-public.getApmTraceUrl.$1.traceIdrangeFromrangeTo.rangeTo",
                "type": "string",
                "label": "rangeTo",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
                  "lineNumber": 15
                }
              }
            ],
            "source": {
              "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
              "lineNumber": 12
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/utils/get_apm_trace_url.ts",
          "lineNumber": 8
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.getCoreVitalsComponent",
        "type": "Function",
        "label": "getCoreVitalsComponent",
        "signature": [
          "(props: ",
          "CoreVitalProps",
          ") => JSX.Element"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.getCoreVitalsComponent.$1",
            "type": "Object",
            "label": "props",
            "isRequired": true,
            "signature": [
              "CoreVitalProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
              "lineNumber": 14
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
          "lineNumber": 14
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.HeaderMenuPortal",
        "type": "Function",
        "label": "HeaderMenuPortal",
        "signature": [
          "(props: ",
          "HeaderMenuPortalProps",
          ") => JSX.Element"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.HeaderMenuPortal.$1",
            "type": "Object",
            "label": "props",
            "isRequired": true,
            "signature": [
              "HeaderMenuPortalProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
              "lineNumber": 24
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/index.tsx",
          "lineNumber": 24
        },
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-public.Section",
        "type": "Function",
        "label": "Section",
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
          "lineNumber": 58
        },
        "signature": [
          "StyledComponent",
          "<\"div\", any, {}, never>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.SectionLink",
        "type": "Function",
        "label": "SectionLink",
        "signature": [
          "(props: ",
          "EuiListGroupItemProps",
          ") => JSX.Element"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.SectionLink.$1",
            "type": "CompoundType",
            "label": "props",
            "isRequired": true,
            "signature": [
              "EuiListGroupItemProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
              "lineNumber": 66
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
          "lineNumber": 66
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SectionLinks",
        "type": "Function",
        "label": "SectionLinks",
        "signature": [
          "({ children, ...props }: { children?: React.ReactNode; } & ",
          "CommonProps",
          " & Pick<React.HTMLAttributes<HTMLUListElement>, \"children\" | \"onClick\" | \"onChange\" | \"onKeyDown\" | \"title\" | \"id\" | \"placeholder\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"css\"> & { bordered?: boolean | undefined; flush?: boolean | undefined; gutterSize?: \"m\" | \"s\" | \"none\" | undefined; listItems?: ",
          "EuiListGroupItemProps",
          "[] | undefined; color?: \"text\" | \"primary\" | \"inherit\" | \"ghost\" | \"subdued\" | undefined; size?: \"m\" | \"s\" | \"l\" | \"xs\" | undefined; maxWidth?: string | number | boolean | undefined; showToolTips?: boolean | undefined; wrapText?: boolean | undefined; ariaLabelledby?: string | undefined; }) => JSX.Element"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.SectionLinks.$1",
            "type": "CompoundType",
            "label": "{ children, ...props }",
            "isRequired": true,
            "signature": [
              "{ children?: React.ReactNode; } & ",
              "CommonProps",
              " & Pick<React.HTMLAttributes<HTMLUListElement>, \"children\" | \"onClick\" | \"onChange\" | \"onKeyDown\" | \"title\" | \"id\" | \"placeholder\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"css\"> & { bordered?: boolean | undefined; flush?: boolean | undefined; gutterSize?: \"m\" | \"s\" | \"none\" | undefined; listItems?: ",
              "EuiListGroupItemProps",
              "[] | undefined; color?: \"text\" | \"primary\" | \"inherit\" | \"ghost\" | \"subdued\" | undefined; size?: \"m\" | \"s\" | \"l\" | \"xs\" | undefined; maxWidth?: string | number | boolean | undefined; showToolTips?: boolean | undefined; wrapText?: boolean | undefined; ariaLabelledby?: string | undefined; }"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
              "lineNumber": 46
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
          "lineNumber": 46
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SectionSpacer",
        "type": "Function",
        "label": "SectionSpacer",
        "signature": [
          "() => JSX.Element"
        ],
        "description": [],
        "children": [],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
          "lineNumber": 54
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SectionSubtitle",
        "type": "Function",
        "label": "SectionSubtitle",
        "signature": [
          "({ children }: { children?: React.ReactNode; }) => JSX.Element"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.SectionSubtitle.$1.children",
            "type": "Object",
            "label": "{ children }",
            "tags": [],
            "description": [],
            "children": [
              {
                "tags": [],
                "id": "def-public.SectionSubtitle.$1.children.children",
                "type": "CompoundType",
                "label": "children",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
                  "lineNumber": 35
                },
                "signature": [
                  "React.ReactNode"
                ]
              }
            ],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
              "lineNumber": 35
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
          "lineNumber": 35
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SectionTitle",
        "type": "Function",
        "label": "SectionTitle",
        "signature": [
          "({ children }: { children?: React.ReactNode; }) => JSX.Element"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.SectionTitle.$1.children",
            "type": "Object",
            "label": "{ children }",
            "tags": [],
            "description": [],
            "children": [
              {
                "tags": [],
                "id": "def-public.SectionTitle.$1.children.children",
                "type": "CompoundType",
                "label": "children",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
                  "lineNumber": 24
                },
                "signature": [
                  "React.ReactNode"
                ]
              }
            ],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
              "lineNumber": 24
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
          "lineNumber": 24
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.useChartTheme",
        "type": "Function",
        "label": "useChartTheme",
        "signature": [
          "() => { chartMargins: { left: number; right: number; top: number; bottom: number; }; background: { color: string; }; lineSeriesStyle: { point: { visible: boolean; }; line?: ",
          "RecursivePartial",
          "<",
          "LineStyle",
          "> | undefined; }; areaSeriesStyle: { point: { visible: boolean; }; area?: ",
          "RecursivePartial",
          "<",
          "AreaStyle",
          "> | undefined; line?: ",
          "RecursivePartial"
        ],
        "description": [],
        "children": [],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/hooks/use_chart_theme.tsx",
          "lineNumber": 11
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.useFetcher",
        "type": "Function",
        "label": "useFetcher",
        "signature": [
          "(fn: ({}: { signal: AbortSignal; }) => TReturn, fnDeps: any[], options: { preservePreviousData?: boolean | undefined; }) => ",
          "FetcherResult",
          "<InferResponseType<TReturn>> & { refetch: () => void; }"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.useFetcher.$1",
            "type": "Function",
            "label": "fn",
            "isRequired": true,
            "signature": [
              "({}: { signal: AbortSignal; }) => TReturn"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/hooks/use_fetcher.tsx",
              "lineNumber": 31
            }
          },
          {
            "id": "def-public.useFetcher.$2",
            "type": "Array",
            "label": "fnDeps",
            "isRequired": true,
            "signature": [
              "any[]"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/hooks/use_fetcher.tsx",
              "lineNumber": 32
            }
          },
          {
            "id": "def-public.useFetcher.$3.options",
            "type": "Object",
            "label": "options",
            "tags": [],
            "description": [],
            "children": [
              {
                "tags": [],
                "id": "def-public.useFetcher.$3.options.preservePreviousData",
                "type": "CompoundType",
                "label": "preservePreviousData",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/observability/public/hooks/use_fetcher.tsx",
                  "lineNumber": 34
                },
                "signature": [
                  "boolean | undefined"
                ]
              }
            ],
            "source": {
              "path": "x-pack/plugins/observability/public/hooks/use_fetcher.tsx",
              "lineNumber": 33
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/hooks/use_fetcher.tsx",
          "lineNumber": 30
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.useTheme",
        "type": "Function",
        "label": "useTheme",
        "signature": [
          "() => ",
          {
            "pluginId": "kibanaReact",
            "scope": "common",
            "docId": "kibKibanaReactPluginApi",
            "section": "def-common.EuiTheme",
            "text": "EuiTheme"
          }
        ],
        "description": [],
        "children": [],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/hooks/use_theme.tsx",
          "lineNumber": 12
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.useTrackMetric",
        "type": "Function",
        "label": "useTrackMetric",
        "signature": [
          "({ app, metric, metricType = METRIC_TYPE.COUNT, delay = 0 }: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.TrackMetricOptions",
            "text": "TrackMetricOptions"
          },
          ", effectDependencies: EffectDeps) => void"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.useTrackMetric.$1",
            "type": "CompoundType",
            "label": "{ app, metric, metricType = METRIC_TYPE.COUNT, delay = 0 }",
            "isRequired": true,
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.TrackMetricOptions",
                "text": "TrackMetricOptions"
              }
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
              "lineNumber": 53
            }
          },
          {
            "id": "def-public.useTrackMetric.$2",
            "type": "Array",
            "label": "effectDependencies",
            "isRequired": true,
            "signature": [
              "EffectDeps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
              "lineNumber": 54
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
          "lineNumber": 52
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.useTrackPageview",
        "type": "Function",
        "label": "useTrackPageview",
        "signature": [
          "({ path, ...rest }: TrackPageviewProps, effectDependencies: EffectDeps) => void"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.useTrackPageview.$1",
            "type": "CompoundType",
            "label": "{ path, ...rest }",
            "isRequired": true,
            "signature": [
              "TrackPageviewProps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
              "lineNumber": 88
            }
          },
          {
            "id": "def-public.useTrackPageview.$2",
            "type": "Array",
            "label": "effectDependencies",
            "isRequired": true,
            "signature": [
              "EffectDeps"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
              "lineNumber": 89
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
          "lineNumber": 87
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.useUiTracker",
        "type": "Function",
        "label": "useUiTracker",
        "signature": [
          "({\n  app: defaultApp,\n}: { app?: \"apm\" | \"uptime\" | \"fleet\" | \"infra_metrics\" | \"infra_logs\" | \"synthetics\" | \"observability-overview\" | \"stack_monitoring\" | \"ux\" | undefined; }) => ({ app, metric, metricType }: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.TrackMetricOptions",
            "text": "TrackMetricOptions"
          },
          ") => void"
        ],
        "description": [],
        "children": [
          {
            "id": "def-public.useUiTracker.$1.appdefaultApp",
            "type": "Object",
            "label": "{\n  app: defaultApp,\n}",
            "tags": [],
            "description": [],
            "children": [
              {
                "tags": [],
                "id": "def-public.useUiTracker.$1.appdefaultApp.app",
                "type": "CompoundType",
                "label": "app",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
                  "lineNumber": 40
                },
                "signature": [
                  "\"apm\" | \"uptime\" | \"fleet\" | \"infra_metrics\" | \"infra_logs\" | \"synthetics\" | \"observability-overview\" | \"stack_monitoring\" | \"ux\" | undefined"
                ]
              }
            ],
            "source": {
              "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
              "lineNumber": 40
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
          "lineNumber": 38
        },
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "id": "def-public.ApmFetchDataResponse",
        "type": "Interface",
        "label": "ApmFetchDataResponse",
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ApmFetchDataResponse",
            "text": "ApmFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.ApmFetchDataResponse.stats",
            "type": "Object",
            "label": "stats",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 115
            },
            "signature": [
              "{ services: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; transactions: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; }"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ApmFetchDataResponse.series",
            "type": "Object",
            "label": "series",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 119
            },
            "signature": [
              "{ transactions: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Series",
                "text": "Series"
              },
              "; }"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 114
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ConfigSchema",
        "type": "Interface",
        "label": "ConfigSchema",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.ConfigSchema.unsafe",
            "type": "Object",
            "label": "unsafe",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/index.ts",
              "lineNumber": 25
            },
            "signature": [
              "{ alertingExperience: { enabled: boolean; }; }"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/index.ts",
          "lineNumber": 24
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.Coordinates",
        "type": "Interface",
        "label": "Coordinates",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.Coordinates.x",
            "type": "number",
            "label": "x",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 16
            }
          },
          {
            "tags": [],
            "id": "def-public.Coordinates.y",
            "type": "CompoundType",
            "label": "y",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 17
            },
            "signature": [
              "number | null | undefined"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 15
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.DataHandler",
        "type": "Interface",
        "label": "DataHandler",
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.DataHandler",
            "text": "DataHandler"
          },
          "<T>"
        ],
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.DataHandler.fetchData",
            "type": "Function",
            "label": "fetchData",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 60
            },
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.FetchData",
                "text": "FetchData"
              },
              "<",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.ObservabilityFetchDataResponse",
                "text": "ObservabilityFetchDataResponse"
              },
              "[T]>"
            ]
          },
          {
            "tags": [],
            "id": "def-public.DataHandler.hasData",
            "type": "Function",
            "label": "hasData",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 61
            },
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.HasData",
                "text": "HasData"
              },
              "<T>"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 57
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.FetchDataParams",
        "type": "Interface",
        "label": "FetchDataParams",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.FetchDataParams.absoluteTime",
            "type": "Object",
            "label": "absoluteTime",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 25
            },
            "signature": [
              "{ start: number; end: number; }"
            ]
          },
          {
            "tags": [],
            "id": "def-public.FetchDataParams.relativeTime",
            "type": "Object",
            "label": "relativeTime",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 26
            },
            "signature": [
              "{ start: string; end: string; }"
            ]
          },
          {
            "tags": [],
            "id": "def-public.FetchDataParams.bucketSize",
            "type": "string",
            "label": "bucketSize",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 27
            }
          },
          {
            "tags": [],
            "id": "def-public.FetchDataParams.serviceName",
            "type": "string",
            "label": "serviceName",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 28
            },
            "signature": [
              "string | undefined"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 24
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.FetchDataResponse",
        "type": "Interface",
        "label": "FetchDataResponse",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.FetchDataResponse.appLink",
            "type": "string",
            "label": "appLink",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 65
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 64
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.HasDataParams",
        "type": "Interface",
        "label": "HasDataParams",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.HasDataParams.absoluteTime",
            "type": "Object",
            "label": "absoluteTime",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 32
            },
            "signature": [
              "{ start: number; end: number; }"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 31
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.HasDataResponse",
        "type": "Interface",
        "label": "HasDataResponse",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.HasDataResponse.hasData",
            "type": "boolean",
            "label": "hasData",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 36
            }
          },
          {
            "tags": [],
            "id": "def-public.HasDataResponse.indices",
            "type": "string",
            "label": "indices",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 37
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 35
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.LogsFetchDataResponse",
        "type": "Interface",
        "label": "LogsFetchDataResponse",
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.LogsFetchDataResponse",
            "text": "LogsFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.LogsFetchDataResponse.stats",
            "type": "Object",
            "label": "stats",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 69
            },
            "signature": [
              "Record<string, ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              " & { label: string; }>"
            ]
          },
          {
            "tags": [],
            "id": "def-public.LogsFetchDataResponse.series",
            "type": "Object",
            "label": "series",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 70
            },
            "signature": [
              "Record<string, ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Series",
                "text": "Series"
              },
              " & { label: string; }>"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 68
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.MetricsFetchDataResponse",
        "type": "Interface",
        "label": "MetricsFetchDataResponse",
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.MetricsFetchDataResponse",
            "text": "MetricsFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataResponse.sort",
            "type": "Function",
            "label": "sort",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 98
            },
            "signature": [
              "(by: string, direction: string) => Promise<",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.MetricsFetchDataResponse",
                "text": "MetricsFetchDataResponse"
              },
              ">"
            ]
          },
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataResponse.series",
            "type": "Array",
            "label": "series",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 99
            },
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.MetricsFetchDataSeries",
                "text": "MetricsFetchDataSeries"
              },
              "[]"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 97
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.MetricsFetchDataSeries",
        "type": "Interface",
        "label": "MetricsFetchDataSeries",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataSeries.id",
            "type": "string",
            "label": "id",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 77
            }
          },
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataSeries.name",
            "type": "CompoundType",
            "label": "name",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 78
            },
            "signature": [
              "string | null"
            ]
          },
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataSeries.platform",
            "type": "CompoundType",
            "label": "platform",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 79
            },
            "signature": [
              "string | null"
            ]
          },
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataSeries.provider",
            "type": "CompoundType",
            "label": "provider",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 80
            },
            "signature": [
              "string | null"
            ]
          },
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataSeries.cpu",
            "type": "CompoundType",
            "label": "cpu",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 81
            },
            "signature": [
              "number | null"
            ]
          },
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataSeries.iowait",
            "type": "CompoundType",
            "label": "iowait",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 82
            },
            "signature": [
              "number | null"
            ]
          },
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataSeries.load",
            "type": "CompoundType",
            "label": "load",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 83
            },
            "signature": [
              "number | null"
            ]
          },
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataSeries.uptime",
            "type": "CompoundType",
            "label": "uptime",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 84
            },
            "signature": [
              "number | null"
            ]
          },
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataSeries.rx",
            "type": "CompoundType",
            "label": "rx",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 85
            },
            "signature": [
              "number | null"
            ]
          },
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataSeries.tx",
            "type": "CompoundType",
            "label": "tx",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 86
            },
            "signature": [
              "number | null"
            ]
          },
          {
            "tags": [],
            "id": "def-public.MetricsFetchDataSeries.timeseries",
            "type": "Array",
            "label": "timeseries",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 87
            },
            "signature": [
              "{ timestamp: number; cpu: number | null; iowait: number | null; load: number | null; rx: number | null; tx: number | null; }[]"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 76
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ObservabilityFetchDataResponse",
        "type": "Interface",
        "label": "ObservabilityFetchDataResponse",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.ObservabilityFetchDataResponse.apm",
            "type": "Object",
            "label": "apm",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 129
            },
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.ApmFetchDataResponse",
                "text": "ApmFetchDataResponse"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.ObservabilityFetchDataResponse.infra_metrics",
            "type": "Object",
            "label": "infra_metrics",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 130
            },
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.MetricsFetchDataResponse",
                "text": "MetricsFetchDataResponse"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.ObservabilityFetchDataResponse.infra_logs",
            "type": "Object",
            "label": "infra_logs",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 131
            },
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.LogsFetchDataResponse",
                "text": "LogsFetchDataResponse"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.ObservabilityFetchDataResponse.synthetics",
            "type": "Object",
            "label": "synthetics",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 132
            },
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.UptimeFetchDataResponse",
                "text": "UptimeFetchDataResponse"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.ObservabilityFetchDataResponse.ux",
            "type": "Object",
            "label": "ux",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 133
            },
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.UxFetchDataResponse",
                "text": "UxFetchDataResponse"
              }
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 128
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ObservabilityHasDataResponse",
        "type": "Interface",
        "label": "ObservabilityHasDataResponse",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.ObservabilityHasDataResponse.apm",
            "type": "boolean",
            "label": "apm",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 137
            }
          },
          {
            "tags": [],
            "id": "def-public.ObservabilityHasDataResponse.infra_metrics",
            "type": "boolean",
            "label": "infra_metrics",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 138
            }
          },
          {
            "tags": [],
            "id": "def-public.ObservabilityHasDataResponse.infra_logs",
            "type": "boolean",
            "label": "infra_logs",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 139
            }
          },
          {
            "tags": [],
            "id": "def-public.ObservabilityHasDataResponse.synthetics",
            "type": "Object",
            "label": "synthetics",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 140
            },
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.HasDataResponse",
                "text": "HasDataResponse"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.ObservabilityHasDataResponse.ux",
            "type": "Object",
            "label": "ux",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 141
            },
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.UXHasDataResponse",
                "text": "UXHasDataResponse"
              }
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 136
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ObservabilityPublicPluginsSetup",
        "type": "Interface",
        "label": "ObservabilityPublicPluginsSetup",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.ObservabilityPublicPluginsSetup.data",
            "type": "Object",
            "label": "data",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/plugin.ts",
              "lineNumber": 41
            },
            "signature": [
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginSetup",
                "text": "DataPublicPluginSetup"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.ObservabilityPublicPluginsSetup.ruleRegistry",
            "type": "Object",
            "label": "ruleRegistry",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/plugin.ts",
              "lineNumber": 42
            },
            "signature": [
              "{ registry: ",
              {
                "pluginId": "ruleRegistry",
                "scope": "public",
                "docId": "kibRuleRegistryPluginApi",
                "section": "def-public.RuleRegistry",
                "text": "RuleRegistry"
              },
              "<{ readonly 'kibana.rac.producer': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.uuid': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.id': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.start': { readonly type: \"date\"; }; readonly 'kibana.rac.alert.end': { readonly type: \"date\"; }; readonly 'kibana.rac.alert.duration.us': { readonly type: \"long\"; }; readonly 'kibana.rac.alert.severity.level': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.severity.value': { readonly type: \"long\"; }; readonly 'kibana.rac.alert.status': { readonly type: \"keyword\"; }; readonly '@timestamp': { readonly type: \"date\"; readonly array: false; readonly required: true; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly 'event.kind': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'event.action': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.uuid': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.id': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.name': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.category': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; }, ",
              {
                "pluginId": "triggersActionsUi",
                "scope": "public",
                "docId": "kibTriggersActionsUiPluginApi",
                "section": "def-public.AlertTypeModel",
                "text": "AlertTypeModel"
              },
              "<Record<string, unknown>>>; }"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ObservabilityPublicPluginsSetup.home",
            "type": "Object",
            "label": "home",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/plugin.ts",
              "lineNumber": 43
            },
            "signature": [
              {
                "pluginId": "home",
                "scope": "public",
                "docId": "kibHomePluginApi",
                "section": "def-public.HomePublicPluginSetup",
                "text": "HomePublicPluginSetup"
              },
              " | undefined"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/plugin.ts",
          "lineNumber": 40
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.ObservabilityPublicPluginsStart",
        "type": "Interface",
        "label": "ObservabilityPublicPluginsStart",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.ObservabilityPublicPluginsStart.home",
            "type": "Object",
            "label": "home",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/plugin.ts",
              "lineNumber": 47
            },
            "signature": [
              {
                "pluginId": "home",
                "scope": "public",
                "docId": "kibHomePluginApi",
                "section": "def-public.HomePublicPluginStart",
                "text": "HomePublicPluginStart"
              },
              " | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.ObservabilityPublicPluginsStart.data",
            "type": "Object",
            "label": "data",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/plugin.ts",
              "lineNumber": 48
            },
            "signature": [
              {
                "pluginId": "data",
                "scope": "public",
                "docId": "kibDataPluginApi",
                "section": "def-public.DataPublicPluginStart",
                "text": "DataPublicPluginStart"
              }
            ]
          },
          {
            "tags": [],
            "id": "def-public.ObservabilityPublicPluginsStart.lens",
            "type": "Object",
            "label": "lens",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/plugin.ts",
              "lineNumber": 49
            },
            "signature": [
              {
                "pluginId": "lens",
                "scope": "public",
                "docId": "kibLensPluginApi",
                "section": "def-public.LensPublicStart",
                "text": "LensPublicStart"
              }
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/plugin.ts",
          "lineNumber": 46
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.Series",
        "type": "Interface",
        "label": "Series",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.Series.coordinates",
            "type": "Array",
            "label": "coordinates",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 21
            },
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Coordinates",
                "text": "Coordinates"
              },
              "[]"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 20
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.SeriesUrl",
        "type": "Interface",
        "label": "SeriesUrl",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.SeriesUrl.time",
            "type": "Object",
            "label": "time",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
              "lineNumber": 74
            },
            "signature": [
              "{ to: string; from: string; }"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SeriesUrl.breakdown",
            "type": "string",
            "label": "breakdown",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
              "lineNumber": 78
            },
            "signature": [
              "string | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SeriesUrl.filters",
            "type": "Array",
            "label": "filters",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
              "lineNumber": 79
            },
            "signature": [
              "UrlFilter",
              "[] | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SeriesUrl.seriesType",
            "type": "CompoundType",
            "label": "seriesType",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
              "lineNumber": 80
            },
            "signature": [
              "\"area\" | \"line\" | \"bar\" | \"bar_horizontal\" | \"bar_stacked\" | \"bar_percentage_stacked\" | \"bar_horizontal_stacked\" | \"bar_horizontal_percentage_stacked\" | \"area_stacked\" | \"area_percentage_stacked\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SeriesUrl.reportType",
            "type": "CompoundType",
            "label": "reportType",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
              "lineNumber": 81
            },
            "signature": [
              "\"logs\" | \"cpu\" | \"pld\" | \"kpi\" | \"upd\" | \"upp\" | \"svl\" | \"tpt\" | \"mem\" | \"nwk\""
            ]
          },
          {
            "tags": [],
            "id": "def-public.SeriesUrl.operationType",
            "type": "CompoundType",
            "label": "operationType",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
              "lineNumber": 82
            },
            "signature": [
              "\"range\" | \"filters\" | \"count\" | \"max\" | \"min\" | \"date_histogram\" | \"sum\" | \"average\" | \"percentile\" | \"terms\" | \"median\" | \"cumulative_sum\" | \"moving_average\" | \"counter_rate\" | \"differences\" | \"unique_count\" | \"last_value\" | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SeriesUrl.dataType",
            "type": "CompoundType",
            "label": "dataType",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
              "lineNumber": 83
            },
            "signature": [
              "AppDataType"
            ]
          },
          {
            "tags": [],
            "id": "def-public.SeriesUrl.reportDefinitions",
            "type": "Object",
            "label": "reportDefinitions",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
              "lineNumber": 84
            },
            "signature": [
              "Record<string, string[]> | undefined"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/exploratory_view/types.ts",
          "lineNumber": 73
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.Stat",
        "type": "Interface",
        "label": "Stat",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.Stat.type",
            "type": "CompoundType",
            "label": "type",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 11
            },
            "signature": [
              "\"number\" | \"percent\" | \"bytesPerSecond\""
            ]
          },
          {
            "tags": [],
            "id": "def-public.Stat.value",
            "type": "number",
            "label": "value",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 12
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 10
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.UptimeFetchDataResponse",
        "type": "Interface",
        "label": "UptimeFetchDataResponse",
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.UptimeFetchDataResponse",
            "text": "UptimeFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.UptimeFetchDataResponse.stats",
            "type": "Object",
            "label": "stats",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 103
            },
            "signature": [
              "{ monitors: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; up: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; down: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Stat",
                "text": "Stat"
              },
              "; }"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UptimeFetchDataResponse.series",
            "type": "Object",
            "label": "series",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 108
            },
            "signature": [
              "{ up: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Series",
                "text": "Series"
              },
              "; down: ",
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.Series",
                "text": "Series"
              },
              "; }"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 102
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.UxFetchDataResponse",
        "type": "Interface",
        "label": "UxFetchDataResponse",
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.UxFetchDataResponse",
            "text": "UxFetchDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataResponse",
            "text": "FetchDataResponse"
          }
        ],
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.UxFetchDataResponse.coreWebVitals",
            "type": "Object",
            "label": "coreWebVitals",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 125
            },
            "signature": [
              {
                "pluginId": "observability",
                "scope": "public",
                "docId": "kibObservabilityPluginApi",
                "section": "def-public.UXMetrics",
                "text": "UXMetrics"
              }
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 124
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.UXHasDataResponse",
        "type": "Interface",
        "label": "UXHasDataResponse",
        "signature": [
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.UXHasDataResponse",
            "text": "UXHasDataResponse"
          },
          " extends ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.HasDataResponse",
            "text": "HasDataResponse"
          }
        ],
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.UXHasDataResponse.serviceName",
            "type": "CompoundType",
            "label": "serviceName",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
              "lineNumber": 41
            },
            "signature": [
              "string | number | undefined"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 40
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.UXMetrics",
        "type": "Interface",
        "label": "UXMetrics",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-public.UXMetrics.cls",
            "type": "CompoundType",
            "label": "cls",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
              "lineNumber": 24
            },
            "signature": [
              "number | null"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UXMetrics.fid",
            "type": "CompoundType",
            "label": "fid",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
              "lineNumber": 25
            },
            "signature": [
              "number | null | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UXMetrics.lcp",
            "type": "CompoundType",
            "label": "lcp",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
              "lineNumber": 26
            },
            "signature": [
              "number | null | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UXMetrics.tbt",
            "type": "number",
            "label": "tbt",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
              "lineNumber": 27
            }
          },
          {
            "tags": [],
            "id": "def-public.UXMetrics.fcp",
            "type": "CompoundType",
            "label": "fcp",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
              "lineNumber": 28
            },
            "signature": [
              "number | null | undefined"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UXMetrics.coreVitalPages",
            "type": "number",
            "label": "coreVitalPages",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
              "lineNumber": 29
            }
          },
          {
            "tags": [],
            "id": "def-public.UXMetrics.lcpRanks",
            "type": "Array",
            "label": "lcpRanks",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
              "lineNumber": 30
            },
            "signature": [
              "number[]"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UXMetrics.fidRanks",
            "type": "Array",
            "label": "fidRanks",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
              "lineNumber": 31
            },
            "signature": [
              "number[]"
            ]
          },
          {
            "tags": [],
            "id": "def-public.UXMetrics.clsRanks",
            "type": "Array",
            "label": "clsRanks",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
              "lineNumber": 32
            },
            "signature": [
              "number[]"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/core_web_vitals/index.tsx",
          "lineNumber": 23
        },
        "initialIsOpen": false
      }
    ],
    "enums": [
      {
        "id": "def-public.FETCH_STATUS",
        "type": "Enum",
        "label": "FETCH_STATUS",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/public/hooks/use_fetcher.tsx",
          "lineNumber": 10
        },
        "initialIsOpen": false
      },
      {
        "id": "def-public.METRIC_TYPE",
        "type": "Enum",
        "label": "METRIC_TYPE",
        "tags": [],
        "description": [],
        "source": {
          "path": "node_modules/@kbn/analytics/target/types/metrics/index.d.ts",
          "lineNumber": 10
        },
        "signature": [
          "METRIC_TYPE"
        ],
        "initialIsOpen": false
      }
    ],
    "misc": [
      {
        "id": "def-public.DragHandleProps",
        "type": "Type",
        "label": "DragHandleProps",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/eui_draggable/index.ts",
          "lineNumber": 15
        },
        "signature": [
          "undefined | ",
          "DraggableProvidedDragHandleProps"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.DropResult",
        "type": "Type",
        "label": "DropResult",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/eui_draggable/index.ts",
          "lineNumber": 18
        },
        "signature": [
          "DropResult"
        ],
        "initialIsOpen": false
      },
      {
        "tags": [],
        "id": "def-public.enableInspectEsQueries",
        "type": "string",
        "label": "enableInspectEsQueries",
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/common/ui_settings_keys.ts",
          "lineNumber": 8
        },
        "signature": [
          "\"observability:enableInspectEsQueries\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.FetchData",
        "type": "Type",
        "label": "FetchData",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 44
        },
        "signature": [
          "(fetchDataParams: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.FetchDataParams",
            "text": "FetchDataParams"
          },
          ") => Promise<T>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.HasData",
        "type": "Type",
        "label": "HasData",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 48
        },
        "signature": [
          "(params: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.HasDataParams",
            "text": "HasDataParams"
          },
          " | undefined) => Promise<",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.ObservabilityHasDataResponse",
            "text": "ObservabilityHasDataResponse"
          },
          "[T]>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.NumberOrNull",
        "type": "Type",
        "label": "NumberOrNull",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 74
        },
        "signature": [
          "null | number"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.ObservabilityFetchDataPlugins",
        "type": "Type",
        "label": "ObservabilityFetchDataPlugins",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 52
        },
        "signature": [
          "\"apm\" | \"infra_metrics\" | \"infra_logs\" | \"synthetics\" | \"ux\""
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.SectionLinkProps",
        "type": "Type",
        "label": "SectionLinkProps",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/public/components/shared/action_menu/index.tsx",
          "lineNumber": 65
        },
        "signature": [
          "CommonProps",
          " & Pick<(",
          "DisambiguateSet",
          "<(",
          "DisambiguateSet",
          "<React.ButtonHTMLAttributes<HTMLButtonElement>, Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"children\" | \"type\" | \"onClick\" | \"onChange\" | \"color\" | \"onKeyDown\" | \"title\" | \"id\" | \"placeholder\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"css\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">> & Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"children\" | \"type\" | \"onClick\" | \"onChange\" | \"color\" | \"onKeyDown\" | \"title\" | \"id\" | \"placeholder\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"css\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">) | (",
          "DisambiguateSet",
          "<Pick<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"children\" | \"type\" | \"onClick\" | \"onChange\" | \"color\" | \"onKeyDown\" | \"title\" | \"id\" | \"placeholder\" | \"defaultChecked\" | \"defaultValue\" | \"suppressContentEditableWarning\" | \"suppressHydrationWarning\" | \"accessKey\" | \"className\" | \"contentEditable\" | \"contextMenu\" | \"dir\" | \"draggable\" | \"hidden\" | \"lang\" | \"slot\" | \"spellCheck\" | \"style\" | \"tabIndex\" | \"translate\" | \"radioGroup\" | \"role\" | \"about\" | \"datatype\" | \"inlist\" | \"prefix\" | \"property\" | \"resource\" | \"typeof\" | \"vocab\" | \"autoCapitalize\" | \"autoCorrect\" | \"autoSave\" | \"itemProp\" | \"itemScope\" | \"itemType\" | \"itemID\" | \"itemRef\" | \"results\" | \"security\" | \"unselectable\" | \"inputMode\" | \"is\" | \"aria-activedescendant\" | \"aria-atomic\" | \"aria-autocomplete\" | \"aria-busy\" | \"aria-checked\" | \"aria-colcount\" | \"aria-colindex\" | \"aria-colspan\" | \"aria-controls\" | \"aria-current\" | \"aria-describedby\" | \"aria-details\" | \"aria-disabled\" | \"aria-dropeffect\" | \"aria-errormessage\" | \"aria-expanded\" | \"aria-flowto\" | \"aria-grabbed\" | \"aria-haspopup\" | \"aria-hidden\" | \"aria-invalid\" | \"aria-keyshortcuts\" | \"aria-label\" | \"aria-labelledby\" | \"aria-level\" | \"aria-live\" | \"aria-modal\" | \"aria-multiline\" | \"aria-multiselectable\" | \"aria-orientation\" | \"aria-owns\" | \"aria-placeholder\" | \"aria-posinset\" | \"aria-pressed\" | \"aria-readonly\" | \"aria-relevant\" | \"aria-required\" | \"aria-roledescription\" | \"aria-rowcount\" | \"aria-rowindex\" | \"aria-rowspan\" | \"aria-selected\" | \"aria-setsize\" | \"aria-sort\" | \"aria-valuemax\" | \"aria-valuemin\" | \"aria-valuenow\" | \"aria-valuetext\" | \"dangerouslySetInnerHTML\" | \"onCopy\" | \"onCopyCapture\" | \"onCut\" | \"onCutCapture\" | \"onPaste\" | \"onPasteCapture\" | \"onCompositionEnd\" | \"onCompositionEndCapture\" | \"onCompositionStart\" | \"onCompositionStartCapture\" | \"onCompositionUpdate\" | \"onCompositionUpdateCapture\" | \"onFocus\" | \"onFocusCapture\" | \"onBlur\" | \"onBlurCapture\" | \"onChangeCapture\" | \"onBeforeInput\" | \"onBeforeInputCapture\" | \"onInput\" | \"onInputCapture\" | \"onReset\" | \"onResetCapture\" | \"onSubmit\" | \"onSubmitCapture\" | \"onInvalid\" | \"onInvalidCapture\" | \"onLoad\" | \"onLoadCapture\" | \"onError\" | \"onErrorCapture\" | \"onKeyDownCapture\" | \"onKeyPress\" | \"onKeyPressCapture\" | \"onKeyUp\" | \"onKeyUpCapture\" | \"onAbort\" | \"onAbortCapture\" | \"onCanPlay\" | \"onCanPlayCapture\" | \"onCanPlayThrough\" | \"onCanPlayThroughCapture\" | \"onDurationChange\" | \"onDurationChangeCapture\" | \"onEmptied\" | \"onEmptiedCapture\" | \"onEncrypted\" | \"onEncryptedCapture\" | \"onEnded\" | \"onEndedCapture\" | \"onLoadedData\" | \"onLoadedDataCapture\" | \"onLoadedMetadata\" | \"onLoadedMetadataCapture\" | \"onLoadStart\" | \"onLoadStartCapture\" | \"onPause\" | \"onPauseCapture\" | \"onPlay\" | \"onPlayCapture\" | \"onPlaying\" | \"onPlayingCapture\" | \"onProgress\" | \"onProgressCapture\" | \"onRateChange\" | \"onRateChangeCapture\" | \"onSeeked\" | \"onSeekedCapture\" | \"onSeeking\" | \"onSeekingCapture\" | \"onStalled\" | \"onStalledCapture\" | \"onSuspend\" | \"onSuspendCapture\" | \"onTimeUpdate\" | \"onTimeUpdateCapture\" | \"onVolumeChange\" | \"onVolumeChangeCapture\" | \"onWaiting\" | \"onWaitingCapture\" | \"onAuxClick\" | \"onAuxClickCapture\" | \"onClickCapture\" | \"onContextMenu\" | \"onContextMenuCapture\" | \"onDoubleClick\" | \"onDoubleClickCapture\" | \"onDrag\" | \"onDragCapture\" | \"onDragEnd\" | \"onDragEndCapture\" | \"onDragEnter\" | \"onDragEnterCapture\" | \"onDragExit\" | \"onDragExitCapture\" | \"onDragLeave\" | \"onDragLeaveCapture\" | \"onDragOver\" | \"onDragOverCapture\" | \"onDragStart\" | \"onDragStartCapture\" | \"onDrop\" | \"onDropCapture\" | \"onMouseDown\" | \"onMouseDownCapture\" | \"onMouseEnter\" | \"onMouseLeave\" | \"onMouseMove\" | \"onMouseMoveCapture\" | \"onMouseOut\" | \"onMouseOutCapture\" | \"onMouseOver\" | \"onMouseOverCapture\" | \"onMouseUp\" | \"onMouseUpCapture\" | \"onSelect\" | \"onSelectCapture\" | \"onTouchCancel\" | \"onTouchCancelCapture\" | \"onTouchEnd\" | \"onTouchEndCapture\" | \"onTouchMove\" | \"onTouchMoveCapture\" | \"onTouchStart\" | \"onTouchStartCapture\" | \"onPointerDown\" | \"onPointerDownCapture\" | \"onPointerMove\" | \"onPointerMoveCapture\" | \"onPointerUp\" | \"onPointerUpCapture\" | \"onPointerCancel\" | \"onPointerCancelCapture\" | \"onPointerEnter\" | \"onPointerEnterCapture\" | \"onPointerLeave\" | \"onPointerLeaveCapture\" | \"onPointerOver\" | \"onPointerOverCapture\" | \"onPointerOut\" | \"onPointerOutCapture\" | \"onGotPointerCapture\" | \"onGotPointerCaptureCapture\" | \"onLostPointerCapture\" | \"onLostPointerCaptureCapture\" | \"onScroll\" | \"onScrollCapture\" | \"onWheel\" | \"onWheelCapture\" | \"onAnimationStart\" | \"onAnimationStartCapture\" | \"onAnimationEnd\" | \"onAnimationEndCapture\" | \"onAnimationIteration\" | \"onAnimationIterationCapture\" | \"onTransitionEnd\" | \"onTransitionEndCapture\" | \"css\" | \"media\" | \"target\" | \"download\" | \"ping\" | \"hrefLang\" | \"rel\" | \"referrerPolicy\">, React.ButtonHTMLAttributes<HTMLButtonElement>> & React.ButtonHTMLAttributes<HTMLButtonElement>), React.HTMLAttributes<HTMLSpanElement>> & React.HTMLAttributes<HTMLSpanElement>) | (",
          "DisambiguateSet"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.StringOrNull",
        "type": "Type",
        "label": "StringOrNull",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/public/typings/fetch_overview_data/index.ts",
          "lineNumber": 73
        },
        "signature": [
          "null | string"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.TrackMetricOptions",
        "type": "Type",
        "label": "TrackMetricOptions",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
          "lineNumber": 33
        },
        "signature": [
          "TrackOptions & { metric: string; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-public.UiTracker",
        "type": "Type",
        "label": "UiTracker",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/public/hooks/use_track_metric.tsx",
          "lineNumber": 34
        },
        "signature": [
          "(__0: ",
          {
            "pluginId": "observability",
            "scope": "public",
            "docId": "kibObservabilityPluginApi",
            "section": "def-public.TrackMetricOptions",
            "text": "TrackMetricOptions"
          },
          ") => void"
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "id": "def-public.ObservabilityPublicSetup",
      "type": "Type",
      "label": "ObservabilityPublicSetup",
      "tags": [],
      "description": [],
      "source": {
        "path": "x-pack/plugins/observability/public/plugin.ts",
        "lineNumber": 37
      },
      "signature": [
        "{ dashboard: { register: typeof registerDataHandler; }; ruleRegistry: FormatterRuleRegistry<{ readonly 'kibana.rac.producer': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.uuid': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.id': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.start': { readonly type: \"date\"; }; readonly 'kibana.rac.alert.end': { readonly type: \"date\"; }; readonly 'kibana.rac.alert.duration.us': { readonly type: \"long\"; }; readonly 'kibana.rac.alert.severity.level': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.severity.value': { readonly type: \"long\"; }; readonly 'kibana.rac.alert.status': { readonly type: \"keyword\"; }; readonly '@timestamp': { readonly type: \"date\"; readonly array: false; readonly required: true; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly 'event.kind': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'event.action': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.uuid': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.id': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.name': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.category': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; } & { 'kibana.observability.evaluation.value': { type: \"scaled_float\"; scaling_factor: number; }; 'kibana.observability.evaluation.threshold': { type: \"scaled_float\"; scaling_factor: number; }; 'host.name': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; 'service.name': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; }>; isAlertingExperienceEnabled: () => boolean; }"
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    },
    "start": {
      "id": "def-public.ObservabilityPublicStart",
      "type": "Type",
      "label": "ObservabilityPublicStart",
      "tags": [],
      "description": [],
      "source": {
        "path": "x-pack/plugins/observability/public/plugin.ts",
        "lineNumber": 52
      },
      "signature": [
        "void"
      ],
      "lifecycle": "start",
      "initialIsOpen": true
    }
  },
  "server": {
    "classes": [
      {
        "id": "def-server.WrappedElasticsearchClientError",
        "type": "Class",
        "tags": [],
        "label": "WrappedElasticsearchClientError",
        "description": [],
        "signature": [
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.WrappedElasticsearchClientError",
            "text": "WrappedElasticsearchClientError"
          },
          " extends Error"
        ],
        "children": [
          {
            "tags": [],
            "id": "def-server.WrappedElasticsearchClientError.originalError",
            "type": "Object",
            "label": "originalError",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/server/utils/unwrap_es_response.ts",
              "lineNumber": 12
            },
            "signature": [
              "ElasticsearchClientError"
            ]
          },
          {
            "id": "def-server.WrappedElasticsearchClientError.Unnamed",
            "type": "Function",
            "label": "Constructor",
            "signature": [
              "any"
            ],
            "description": [],
            "children": [
              {
                "id": "def-server.WrappedElasticsearchClientError.Unnamed.$1",
                "type": "Object",
                "label": "originalError",
                "isRequired": true,
                "signature": [
                  "ElasticsearchClientError"
                ],
                "description": [],
                "source": {
                  "path": "x-pack/plugins/observability/server/utils/unwrap_es_response.ts",
                  "lineNumber": 13
                }
              }
            ],
            "tags": [],
            "returnComment": [],
            "source": {
              "path": "x-pack/plugins/observability/server/utils/unwrap_es_response.ts",
              "lineNumber": 13
            }
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/server/utils/unwrap_es_response.ts",
          "lineNumber": 11
        },
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "id": "def-server.createOrUpdateIndex",
        "type": "Function",
        "label": "createOrUpdateIndex",
        "signature": [
          "({\n  index,\n  mappings,\n  client,\n  logger,\n}: { index: string; mappings: ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.Mappings",
            "text": "Mappings"
          },
          "; client: ",
          {
            "pluginId": "core",
            "scope": "server",
            "docId": "kibCorePluginApi",
            "section": "def-server.ElasticsearchClient",
            "text": "ElasticsearchClient"
          },
          "; logger: ",
          "Logger",
          "; }) => Promise<void>"
        ],
        "description": [],
        "children": [
          {
            "id": "def-server.createOrUpdateIndex.$1.indexmappingsclientlogger",
            "type": "Object",
            "label": "{\n  index,\n  mappings,\n  client,\n  logger,\n}",
            "tags": [],
            "description": [],
            "children": [
              {
                "tags": [],
                "id": "def-server.createOrUpdateIndex.$1.indexmappingsclientlogger.index",
                "type": "string",
                "label": "index",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
                  "lineNumber": 20
                }
              },
              {
                "tags": [],
                "id": "def-server.createOrUpdateIndex.$1.indexmappingsclientlogger.mappings",
                "type": "CompoundType",
                "label": "mappings",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
                  "lineNumber": 21
                },
                "signature": [
                  {
                    "pluginId": "observability",
                    "scope": "server",
                    "docId": "kibObservabilityPluginApi",
                    "section": "def-server.Mappings",
                    "text": "Mappings"
                  }
                ]
              },
              {
                "tags": [],
                "id": "def-server.createOrUpdateIndex.$1.indexmappingsclientlogger.client",
                "type": "CompoundType",
                "label": "client",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
                  "lineNumber": 22
                },
                "signature": [
                  {
                    "pluginId": "core",
                    "scope": "server",
                    "docId": "kibCorePluginApi",
                    "section": "def-server.ElasticsearchClient",
                    "text": "ElasticsearchClient"
                  }
                ]
              },
              {
                "tags": [],
                "id": "def-server.createOrUpdateIndex.$1.indexmappingsclientlogger.logger",
                "type": "Object",
                "label": "logger",
                "description": [],
                "source": {
                  "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
                  "lineNumber": 23
                },
                "signature": [
                  "Logger"
                ]
              }
            ],
            "source": {
              "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
              "lineNumber": 19
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
          "lineNumber": 14
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.kqlQuery",
        "type": "Function",
        "label": "kqlQuery",
        "signature": [
          "(kql: string | undefined) => ",
          "QueryContainer",
          "[]"
        ],
        "description": [],
        "children": [
          {
            "id": "def-server.kqlQuery.$1",
            "type": "string",
            "label": "kql",
            "isRequired": false,
            "signature": [
              "string | undefined"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/server/utils/queries.ts",
              "lineNumber": 25
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/server/utils/queries.ts",
          "lineNumber": 25
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.rangeQuery",
        "type": "Function",
        "label": "rangeQuery",
        "signature": [
          "(start: number, end: number, field: string) => ",
          "QueryContainer",
          "[]"
        ],
        "description": [],
        "children": [
          {
            "id": "def-server.rangeQuery.$1",
            "type": "number",
            "label": "start",
            "isRequired": true,
            "signature": [
              "number"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/server/utils/queries.ts",
              "lineNumber": 11
            }
          },
          {
            "id": "def-server.rangeQuery.$2",
            "type": "number",
            "label": "end",
            "isRequired": true,
            "signature": [
              "number"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/server/utils/queries.ts",
              "lineNumber": 11
            }
          },
          {
            "id": "def-server.rangeQuery.$3",
            "type": "string",
            "label": "field",
            "isRequired": true,
            "signature": [
              "string"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/server/utils/queries.ts",
              "lineNumber": 11
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/server/utils/queries.ts",
          "lineNumber": 11
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.unwrapEsResponse",
        "type": "Function",
        "label": "unwrapEsResponse",
        "signature": [
          "(responsePromise: T) => Promise<",
          "PromiseType",
          "<T>[\"body\"]>"
        ],
        "description": [],
        "children": [
          {
            "id": "def-server.unwrapEsResponse.$1",
            "type": "Uncategorized",
            "label": "responsePromise",
            "isRequired": true,
            "signature": [
              "T"
            ],
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/server/utils/unwrap_es_response.ts",
              "lineNumber": 40
            }
          }
        ],
        "tags": [],
        "returnComment": [],
        "source": {
          "path": "x-pack/plugins/observability/server/utils/unwrap_es_response.ts",
          "lineNumber": 39
        },
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "id": "def-server.ObservabilityRouteCreateOptions",
        "type": "Interface",
        "label": "ObservabilityRouteCreateOptions",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-server.ObservabilityRouteCreateOptions.options",
            "type": "Object",
            "label": "options",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/server/routes/types.ts",
              "lineNumber": 34
            },
            "signature": [
              "{ tags: string[]; }"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/server/routes/types.ts",
          "lineNumber": 33
        },
        "initialIsOpen": false
      },
      {
        "id": "def-server.ObservabilityRouteHandlerResources",
        "type": "Interface",
        "label": "ObservabilityRouteHandlerResources",
        "description": [],
        "tags": [],
        "children": [
          {
            "tags": [],
            "id": "def-server.ObservabilityRouteHandlerResources.core",
            "type": "Object",
            "label": "core",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/server/routes/types.ts",
              "lineNumber": 23
            },
            "signature": [
              "{ start: () => Promise<",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreStart",
                "text": "CoreStart"
              },
              ">; setup: ",
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCorePluginApi",
                "section": "def-server.CoreSetup",
                "text": "CoreSetup"
              },
              "<object, unknown>; }"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ObservabilityRouteHandlerResources.ruleRegistry",
            "type": "Object",
            "label": "ruleRegistry",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/server/routes/types.ts",
              "lineNumber": 27
            },
            "signature": [
              "RuleRegistry",
              "<{ readonly 'kibana.rac.producer': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.uuid': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.id': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.start': { readonly type: \"date\"; }; readonly 'kibana.rac.alert.end': { readonly type: \"date\"; }; readonly 'kibana.rac.alert.duration.us': { readonly type: \"long\"; }; readonly 'kibana.rac.alert.severity.level': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.severity.value': { readonly type: \"long\"; }; readonly 'kibana.rac.alert.status': { readonly type: \"keyword\"; }; readonly '@timestamp': { readonly type: \"date\"; readonly array: false; readonly required: true; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly 'event.kind': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'event.action': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.uuid': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.id': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.name': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.category': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; } & { 'kibana.observability.evaluation.value': { type: \"scaled_float\"; scaling_factor: number; }; 'kibana.observability.evaluation.threshold': { type: \"scaled_float\"; scaling_factor: number; }; 'host.name': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; 'service.name': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; }>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ObservabilityRouteHandlerResources.request",
            "type": "Object",
            "label": "request",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/server/routes/types.ts",
              "lineNumber": 28
            },
            "signature": [
              {
                "pluginId": "core",
                "scope": "server",
                "docId": "kibCoreHttpPluginApi",
                "section": "def-server.KibanaRequest",
                "text": "KibanaRequest"
              },
              "<unknown, unknown, unknown, any>"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ObservabilityRouteHandlerResources.context",
            "type": "Object",
            "label": "context",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/server/routes/types.ts",
              "lineNumber": 29
            },
            "signature": [
              "ObservabilityRequestHandlerContext"
            ]
          },
          {
            "tags": [],
            "id": "def-server.ObservabilityRouteHandlerResources.logger",
            "type": "Object",
            "label": "logger",
            "description": [],
            "source": {
              "path": "x-pack/plugins/observability/server/routes/types.ts",
              "lineNumber": 30
            },
            "signature": [
              "Logger"
            ]
          }
        ],
        "source": {
          "path": "x-pack/plugins/observability/server/routes/types.ts",
          "lineNumber": 22
        },
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "id": "def-server.AbstractObservabilityServerRouteRepository",
        "type": "Type",
        "label": "AbstractObservabilityServerRouteRepository",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/server/routes/types.ts",
          "lineNumber": 39
        },
        "signature": [
          "ServerRouteRepository<ObservabilityRouteHandlerResources, ObservabilityRouteCreateOptions, Record<string, ServerRoute<string, t.Mixed | undefined, ObservabilityRouteHandlerResources, any, ObservabilityRouteCreateOptions>>>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.Mappings",
        "type": "Type",
        "label": "Mappings",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/server/utils/create_or_update_index.ts",
          "lineNumber": 11
        },
        "signature": [
          "TypeMapping",
          " & { all_field?: ",
          "AllField",
          " | undefined; date_detection?: boolean | undefined; dynamic?: boolean | \"strict\" | undefined; dynamic_date_formats?: string[] | undefined; dynamic_templates?: Record<string, ",
          "DynamicTemplate",
          "> | Record<string, ",
          "DynamicTemplate",
          ">[] | undefined; field_names_field?: ",
          "FieldNamesField"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ObservabilityAPIReturnType",
        "type": "Type",
        "label": "ObservabilityAPIReturnType",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/server/routes/types.ts",
          "lineNumber": 54
        },
        "signature": [
          "TEndpoint extends \"GET /api/observability/rules/alerts/top\" | \"GET /api/observability/rules/alerts/dynamic_index_pattern\" ? ({ \"GET /api/observability/rules/alerts/top\": ServerRoute<\"GET /api/observability/rules/alerts/top\", t.TypeC<{ query: t.IntersectionC<[t.TypeC<{ start: t.Type<number, string, unknown>; end: t.Type<number, string, unknown>; }>, t.PartialC<{ kuery: t.StringC; size: t.Type<number, unknown, unknown>; }>]>; }>, ObservabilityRouteHandlerResources, any, ObservabilityRouteCreateOptions>; } & { \"GET /api/observability/rules/alerts/dynamic_index_pattern\": ServerRoute<\"GET /api/observability/rules/alerts/dynamic_index_pattern\", undefined, ObservabilityRouteHandlerResources, { title: string; timeFieldName: string; fields: ",
          "IndexPatternFieldDescriptor",
          "[]; }, ObservabilityRouteCreateOptions>; })[TEndpoint] extends ServerRoute<any, any, any, infer TReturnType, Record<string, any>> ? TReturnType : never : never"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ObservabilityConfig",
        "type": "Type",
        "label": "ObservabilityConfig",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/server/index.ts",
          "lineNumber": 34
        },
        "signature": [
          "{ readonly enabled: boolean; readonly annotations: Readonly<{} & { enabled: boolean; index: string; }>; readonly unsafe: Readonly<{} & { alertingExperience: Readonly<{} & { enabled: boolean; }>; }>; }"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ObservabilityRuleRegistryClient",
        "type": "Type",
        "label": "ObservabilityRuleRegistryClient",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/server/types.ts",
          "lineNumber": 35
        },
        "signature": [
          "ScopedRuleRegistryClient<{ readonly 'kibana.rac.producer': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.uuid': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.id': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.start': { readonly type: \"date\"; }; readonly 'kibana.rac.alert.end': { readonly type: \"date\"; }; readonly 'kibana.rac.alert.duration.us': { readonly type: \"long\"; }; readonly 'kibana.rac.alert.severity.level': { readonly type: \"keyword\"; }; readonly 'kibana.rac.alert.severity.value': { readonly type: \"long\"; }; readonly 'kibana.rac.alert.status': { readonly type: \"keyword\"; }; readonly '@timestamp': { readonly type: \"date\"; readonly array: false; readonly required: true; }; readonly tags: { readonly type: \"keyword\"; readonly array: true; readonly required: false; }; readonly 'event.kind': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'event.action': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.uuid': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.id': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.name': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; readonly 'rule.category': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; } & { 'kibana.observability.evaluation.value': { type: \"scaled_float\"; scaling_factor: number; }; 'kibana.observability.evaluation.threshold': { type: \"scaled_float\"; scaling_factor: number; }; 'host.name': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; 'service.name': { readonly type: \"keyword\"; readonly array: false; readonly required: false; }; }>"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ObservabilityServerRouteRepository",
        "type": "Type",
        "label": "ObservabilityServerRouteRepository",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/server/routes/get_global_observability_server_route_repository.ts",
          "lineNumber": 13
        },
        "signature": [
          "ServerRouteRepository",
          "<",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteHandlerResources",
            "text": "ObservabilityRouteHandlerResources"
          },
          ", ",
          {
            "pluginId": "observability",
            "scope": "server",
            "docId": "kibObservabilityPluginApi",
            "section": "def-server.ObservabilityRouteCreateOptions",
            "text": "ObservabilityRouteCreateOptions"
          },
          ", { \"GET /api/observability/rules/alerts/top\": ",
          "ServerRoute",
          "<\"GET /api/observability/rules/alerts/top\", ",
          "TypeC"
        ],
        "initialIsOpen": false
      },
      {
        "id": "def-server.ScopedAnnotationsClient",
        "type": "Type",
        "label": "ScopedAnnotationsClient",
        "tags": [],
        "description": [],
        "source": {
          "path": "x-pack/plugins/observability/server/lib/annotations/bootstrap_annotations.ts",
          "lineNumber": 29
        },
        "signature": [
          "{ readonly index: string; create: (createParams: { annotation: { type: string; }; '@timestamp': string; message: string; } & { tags?: string[] | undefined; service?: { name?: string | undefined; environment?: string | undefined; version?: string | undefined; } | undefined; }) => Promise<{ _id: string; _index: string; _source: ",
          "Annotation",
          "; }>; getById: (getByIdParams: { id: string; }) => Promise<",
          "GetResponse",
          "<unknown>>; delete: (deleteParams: { id: string; }) => Promise<",
          "DeleteResponse",
          ">; }"
        ],
        "initialIsOpen": false
      }
    ],
    "objects": [],
    "setup": {
      "id": "def-server.ObservabilityPluginSetup",
      "type": "Type",
      "label": "ObservabilityPluginSetup",
      "tags": [],
      "description": [],
      "source": {
        "path": "x-pack/plugins/observability/server/plugin.ts",
        "lineNumber": 22
      },
      "signature": [
        "{ getScopedAnnotationsClient: (requestContext: ",
        {
          "pluginId": "core",
          "scope": "server",
          "docId": "kibCorePluginApi",
          "section": "def-server.RequestHandlerContext",
          "text": "RequestHandlerContext"
        },
        " & { licensing: ",
        {
          "pluginId": "licensing",
          "scope": "server",
          "docId": "kibLicensingPluginApi",
          "section": "def-server.LicensingApiRequestHandlerContext",
          "text": "LicensingApiRequestHandlerContext"
        },
        "; }, request: ",
        {
          "pluginId": "core",
          "scope": "server",
          "docId": "kibCorePluginApi",
          "section": "def-server.KibanaRequest",
          "text": "KibanaRequest"
        },
        "<unknown, unknown, unknown, any>) => Promise<{ readonly index: string; create: (createParams: { annotation: { type: string; }; '@timestamp': string; message: string; } & { tags?: string[] | undefined; service?: { name?: string | undefined; environment?: string | undefined; version?: string | undefined; } | undefined; }) => Promise<{ _id: string; _index: string; _source: ",
        "Annotation",
        "; }>; getById: (getByIdParams: { id: string; }) => Promise<",
        "GetResponse"
      ],
      "lifecycle": "setup",
      "initialIsOpen": true
    }
  },
  "common": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  }
}