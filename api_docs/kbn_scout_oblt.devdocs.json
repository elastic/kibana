{
  "id": "@kbn/scout-oblt",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.Client",
        "type": "Class",
        "tags": [],
        "label": "Client",
        "description": [],
        "signature": [
          "default",
          " extends ",
          "default"
        ],
        "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Client.diagnostic",
            "type": "Object",
            "tags": [],
            "label": "diagnostic",
            "description": [],
            "signature": [
              "default"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Client.name",
            "type": "CompoundType",
            "tags": [],
            "label": "name",
            "description": [],
            "signature": [
              "string | symbol"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Client.connectionPool",
            "type": "Object",
            "tags": [],
            "label": "connectionPool",
            "description": [],
            "signature": [
              "default"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Client.transport",
            "type": "Object",
            "tags": [],
            "label": "transport",
            "description": [],
            "signature": [
              "default"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Client.serializer",
            "type": "Object",
            "tags": [],
            "label": "serializer",
            "description": [],
            "signature": [
              "default"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Client.helpers",
            "type": "Object",
            "tags": [],
            "label": "helpers",
            "description": [],
            "signature": [
              "default"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Client.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Client.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "opts",
                "description": [],
                "signature": [
                  "ClientOptions"
                ],
                "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Client.child",
            "type": "Function",
            "tags": [
              "see"
            ],
            "label": "child",
            "description": [
              "\nCreates a child client instance that shared its connection pool with the parent client"
            ],
            "signature": [
              "(opts: ",
              "ClientOptions",
              ") => ",
              "default"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Client.child.$1",
                "type": "Object",
                "tags": [],
                "label": "opts",
                "description": [],
                "signature": [
                  "ClientOptions"
                ],
                "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Client.close",
            "type": "Function",
            "tags": [],
            "label": "close",
            "description": [
              "\nCloses all connections in the connection pool. Connections shared with any parent or child instances will also be closed."
            ],
            "signature": [
              "() => Promise<void>"
            ],
            "path": "node_modules/@elastic/elasticsearch/lib/client.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.KbnClient",
        "type": "Class",
        "tags": [],
        "label": "KbnClient",
        "description": [],
        "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KbnClient.status",
            "type": "Object",
            "tags": [],
            "label": "status",
            "description": [],
            "signature": [
              "KbnClientStatus"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KbnClient.plugins",
            "type": "Object",
            "tags": [],
            "label": "plugins",
            "description": [],
            "signature": [
              "KbnClientPlugins"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KbnClient.version",
            "type": "Object",
            "tags": [],
            "label": "version",
            "description": [],
            "signature": [
              "KbnClientVersion"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KbnClient.savedObjects",
            "type": "Object",
            "tags": [],
            "label": "savedObjects",
            "description": [],
            "signature": [
              "KbnClientSavedObjects"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KbnClient.spaces",
            "type": "Object",
            "tags": [],
            "label": "spaces",
            "description": [],
            "signature": [
              "KbnClientSpaces"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KbnClient.uiSettings",
            "type": "Object",
            "tags": [],
            "label": "uiSettings",
            "description": [],
            "signature": [
              "KbnClientUiSettings"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KbnClient.importExport",
            "type": "Object",
            "tags": [],
            "label": "importExport",
            "description": [],
            "signature": [
              "KbnClientImportExport"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KbnClient.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [
              "\nBasic Kibana server client that implements common behaviors for talking\nto the Kibana server from dev tooling."
            ],
            "signature": [
              "any"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.KbnClient.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  {
                    "pluginId": "@kbn/test",
                    "scope": "common",
                    "docId": "kibKbnTestPluginApi",
                    "section": "def-common.KbnClientOptions",
                    "text": "KbnClientOptions"
                  }
                ],
                "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KbnClient.request",
            "type": "Function",
            "tags": [],
            "label": "request",
            "description": [
              "\nMake a direct request to the Kibana server"
            ],
            "signature": [
              "<T>(options: ",
              "ReqOptions",
              ") => Promise<",
              "AxiosResponse",
              "<T, any>>"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.KbnClient.request.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "ReqOptions"
                ],
                "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KbnClient.resolveUrl",
            "type": "Function",
            "tags": [],
            "label": "resolveUrl",
            "description": [],
            "signature": [
              "(relativeUrl: string) => string"
            ],
            "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.KbnClient.resolveUrl.$1",
                "type": "string",
                "tags": [],
                "label": "relativeUrl",
                "description": [],
                "signature": [
                  "string"
                ],
                "path": "packages/kbn-test/src/kbn_client/kbn_client.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.KibanaUrl",
        "type": "Class",
        "tags": [],
        "label": "KibanaUrl",
        "description": [],
        "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KibanaUrl.baseUrl",
            "type": "Object",
            "tags": [],
            "label": "#baseUrl",
            "description": [],
            "signature": [
              "URL"
            ],
            "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KibanaUrl.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.KibanaUrl.Unnamed.$1",
                "type": "Object",
                "tags": [],
                "label": "baseUrl",
                "description": [],
                "signature": [
                  "URL"
                ],
                "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KibanaUrl.get",
            "type": "Function",
            "tags": [],
            "label": "get",
            "description": [
              "\nGet an absolute URL based on Kibana's URL"
            ],
            "signature": [
              "(rel?: string | undefined, options?: ",
              "PathOptions",
              " | undefined) => string"
            ],
            "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.KibanaUrl.get.$1",
                "type": "string",
                "tags": [],
                "label": "rel",
                "description": [
                  "relative url, resolved relative to Kibana's url"
                ],
                "signature": [
                  "string | undefined"
                ],
                "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.KibanaUrl.get.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [
                  "optional modifications to apply to the URL"
                ],
                "signature": [
                  "PathOptions",
                  " | undefined"
                ],
                "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KibanaUrl.domain",
            "type": "Function",
            "tags": [],
            "label": "domain",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KibanaUrl.app",
            "type": "Function",
            "tags": [],
            "label": "app",
            "description": [
              "\nGet the URL for an app"
            ],
            "signature": [
              "(appName: string, options?: { space?: string | undefined; pathOptions?: ",
              "PathOptions",
              " | undefined; } | undefined) => string"
            ],
            "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.KibanaUrl.app.$1",
                "type": "string",
                "tags": [],
                "label": "appName",
                "description": [
                  "name of the app to get the URL for"
                ],
                "signature": [
                  "string"
                ],
                "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.KibanaUrl.app.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.KibanaUrl.app.$2.space",
                    "type": "string",
                    "tags": [],
                    "label": "space",
                    "description": [],
                    "signature": [
                      "string | undefined"
                    ],
                    "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.KibanaUrl.app.$2.pathOptions",
                    "type": "Object",
                    "tags": [],
                    "label": "pathOptions",
                    "description": [],
                    "signature": [
                      "PathOptions",
                      " | undefined"
                    ],
                    "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.KibanaUrl.toString",
            "type": "Function",
            "tags": [],
            "label": "toString",
            "description": [],
            "signature": [
              "() => string"
            ],
            "path": "packages/kbn-scout/src/common/services/kibana_url.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.ScoutLogger",
        "type": "Class",
        "tags": [],
        "label": "ScoutLogger",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutLogger",
            "text": "ScoutLogger"
          },
          " extends ",
          {
            "pluginId": "@kbn/tooling-log",
            "scope": "common",
            "docId": "kibKbnToolingLogPluginApi",
            "section": "def-common.ToolingLog",
            "text": "ToolingLog"
          }
        ],
        "path": "packages/kbn-scout/src/common/services/logger.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutLogger.Unnamed",
            "type": "Function",
            "tags": [],
            "label": "Constructor",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "packages/kbn-scout/src/common/services/logger.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutLogger.serviceLoaded",
            "type": "Function",
            "tags": [],
            "label": "serviceLoaded",
            "description": [
              "\nUsed to log when a service/fixture is loaded"
            ],
            "signature": [
              "(name: string) => void"
            ],
            "path": "packages/kbn-scout/src/common/services/logger.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.ScoutLogger.serviceLoaded.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "unique name of the service"
                ],
                "signature": [
                  "string"
                ],
                "path": "packages/kbn-scout/src/common/services/logger.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      }
    ],
    "functions": [
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.createLazyPageObject",
        "type": "Function",
        "tags": [],
        "label": "createLazyPageObject",
        "description": [
          "\nCreates a lazily instantiated proxy for a Page Object class, deferring the creation of the instance until\na property or method is accessed. It helps avoiding instantiation of page objects that may not be used\nin certain test scenarios.\n"
        ],
        "signature": [
          "(PageObjectClass: new (page: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutPage",
            "text": "ScoutPage"
          },
          ", ...args: Args) => T, scoutPage: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutPage",
            "text": "ScoutPage"
          },
          ", constructorArgs: Args) => T"
        ],
        "path": "packages/kbn-scout/src/playwright/page_objects/utils/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.createLazyPageObject.$1",
            "type": "Object",
            "tags": [],
            "label": "PageObjectClass",
            "description": [
              "- The page object class to be instantiated lazily."
            ],
            "signature": [
              "new (page: ",
              {
                "pluginId": "@kbn/scout",
                "scope": "common",
                "docId": "kibKbnScoutPluginApi",
                "section": "def-common.ScoutPage",
                "text": "ScoutPage"
              },
              ", ...args: Args) => T"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/utils/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.createLazyPageObject.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "scoutPage",
            "description": [
              "- ScoutPage instance, that extends the Playwright `page` fixture and passed to the page object class constructor."
            ],
            "signature": [
              {
                "pluginId": "@kbn/scout",
                "scope": "common",
                "docId": "kibKbnScoutPluginApi",
                "section": "def-common.ScoutPage",
                "text": "ScoutPage"
              }
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/utils/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.createLazyPageObject.$3",
            "type": "Uncategorized",
            "tags": [],
            "label": "constructorArgs",
            "description": [
              "- Additional arguments to be passed to the page object class constructor."
            ],
            "signature": [
              "Args"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/utils/index.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [
          "A proxy object that behaves like an instance of the page object class, instantiating it on demand."
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.createPlaywrightConfig",
        "type": "Function",
        "tags": [],
        "label": "createPlaywrightConfig",
        "description": [],
        "signature": [
          "(options: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutPlaywrightOptions",
            "text": "ScoutPlaywrightOptions"
          },
          ") => ",
          "PlaywrightTestConfig",
          "<{}, {}>"
        ],
        "path": "packages/kbn-scout/src/playwright/config/create_config.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.createPlaywrightConfig.$1",
            "type": "Object",
            "tags": [],
            "label": "options",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/scout",
                "scope": "common",
                "docId": "kibKbnScoutPluginApi",
                "section": "def-common.ScoutPlaywrightOptions",
                "text": "ScoutPlaywrightOptions"
              }
            ],
            "path": "packages/kbn-scout/src/playwright/config/create_config.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.expect",
        "type": "Function",
        "tags": [],
        "label": "expect",
        "description": [],
        "signature": [
          "{ <T = unknown>(actual: T, messageOrOptions?: string | { message?: string | undefined; } | undefined): MakeMatchers<void, T, {}>; soft: <T = unknown>(actual: T, messageOrOptions?: string | { message?: string | undefined; } | undefined) => MakeMatchers<void, T, {}>; poll: <T = unknown>(actual: () => T | Promise<T>, messageOrOptions?: string | { message?: string | undefined; timeout?: number | undefined; intervals?: number[] | undefined; } | undefined) => PollMatchers<Promise<void>, T, {}>; extend<MoreMatchers extends Record<string, (this: ",
          "ExpectMatcherState",
          ", receiver: any, ...args: any[]) => ",
          "MatcherReturnType",
          " | Promise<",
          "MatcherReturnType",
          ">>>(matchers: MoreMatchers): ",
          "Expect",
          "<{} & MoreMatchers>; configure: (configuration: { message?: string | undefined; timeout?: number | undefined; soft?: boolean | undefined; }) => ",
          "Expect",
          "<{}>; getState(): unknown; not: Omit<AsymmetricMatchers, \"any\" | \"anything\">; } & AsymmetricMatchers"
        ],
        "path": "packages/kbn-scout/src/playwright/expect.ts",
        "deprecated": false,
        "trackAdoption": false,
        "returnComment": [],
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.expect.$1",
            "type": "Uncategorized",
            "tags": [],
            "label": "actual",
            "description": [],
            "signature": [
              "T"
            ],
            "path": "node_modules/playwright/types/test.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.expect.$2",
            "type": "CompoundType",
            "tags": [],
            "label": "messageOrOptions",
            "description": [],
            "signature": [
              "string | { message?: string | undefined; } | undefined"
            ],
            "path": "node_modules/playwright/types/test.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.ingestTestDataHook",
        "type": "Function",
        "tags": [],
        "label": "ingestTestDataHook",
        "description": [],
        "signature": [
          "(config: ",
          "FullConfig",
          "<{}, {}>, archives: string[]) => Promise<void>"
        ],
        "path": "packages/kbn-scout/src/playwright/global_hooks/data_ingestion.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ingestTestDataHook.$1",
            "type": "Object",
            "tags": [],
            "label": "config",
            "description": [],
            "signature": [
              "FullConfig",
              "<{}, {}>"
            ],
            "path": "packages/kbn-scout/src/playwright/global_hooks/data_ingestion.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ingestTestDataHook.$2",
            "type": "Array",
            "tags": [],
            "label": "archives",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "packages/kbn-scout/src/playwright/global_hooks/data_ingestion.ts",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.spaceTest",
        "type": "Function",
        "tags": [],
        "label": "spaceTest",
        "description": [
          "\nShould be used test spec files, running in parallel in isolated spaces agaist the same Kibana instance."
        ],
        "signature": [
          "TestType",
          "<",
          "PlaywrightTestArgs",
          " & ",
          "PlaywrightTestOptions",
          " & { browserAuth: ",
          "BrowserAuthFixture",
          "; } & { page: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutPage",
            "text": "ScoutPage"
          },
          "; } & { pageObjects: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.PageObjects",
            "text": "PageObjects"
          },
          "; } & { validateTags: void; } & ",
          {
            "pluginId": "@kbn/scout-oblt",
            "scope": "common",
            "docId": "kibKbnScoutObltPluginApi",
            "section": "def-common.ObltParallelTestFixtures",
            "text": "ObltParallelTestFixtures"
          },
          ", ",
          "PlaywrightWorkerArgs",
          " & ",
          "PlaywrightWorkerOptions",
          " & { log: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutLogger",
            "text": "ScoutLogger"
          },
          "; config: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutTestConfig",
            "text": "ScoutTestConfig"
          },
          "; kbnUrl: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.KibanaUrl",
            "text": "KibanaUrl"
          },
          "; esClient: ",
          "default",
          "; kbnClient: ",
          {
            "pluginId": "@kbn/test",
            "scope": "common",
            "docId": "kibKbnTestPluginApi",
            "section": "def-common.KbnClient",
            "text": "KbnClient"
          },
          "; samlAuth: ",
          {
            "pluginId": "@kbn/test",
            "scope": "common",
            "docId": "kibKbnTestPluginApi",
            "section": "def-common.SamlSessionManager",
            "text": "SamlSessionManager"
          },
          "; } & { scoutSpace: ",
          "ScoutSpaceParallelFixture",
          "; } & { fleetApi: ",
          "FleetApiFixture",
          "; } & { log: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutLogger",
            "text": "ScoutLogger"
          },
          "; kbnUrl: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.KibanaUrl",
            "text": "KibanaUrl"
          },
          "; scoutSpace: ",
          "ScoutSpaceParallelFixture",
          "; } & { scoutSpace: ",
          "ScoutSpaceParallelFixture",
          "; } & ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutParallelWorkerFixtures",
            "text": "ScoutParallelWorkerFixtures"
          },
          ">"
        ],
        "path": "x-pack/solutions/observability/packages/kbn-scout-oblt/src/playwright/fixtures/parallel_run_fixtures.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.test",
        "type": "Function",
        "tags": [],
        "label": "test",
        "description": [
          "\nShould be used for the test spec files executed seqentially."
        ],
        "signature": [
          "TestType",
          "<",
          "PlaywrightTestArgs",
          " & ",
          "PlaywrightTestOptions",
          " & { browserAuth: ",
          "BrowserAuthFixture",
          "; } & { page: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutPage",
            "text": "ScoutPage"
          },
          "; log: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutLogger",
            "text": "ScoutLogger"
          },
          "; } & { pageObjects: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.PageObjects",
            "text": "PageObjects"
          },
          "; } & { validateTags: void; } & ",
          {
            "pluginId": "@kbn/scout-oblt",
            "scope": "common",
            "docId": "kibKbnScoutObltPluginApi",
            "section": "def-common.ObltTestFixtures",
            "text": "ObltTestFixtures"
          },
          ", ",
          "PlaywrightWorkerArgs",
          " & ",
          "PlaywrightWorkerOptions",
          " & { log: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutLogger",
            "text": "ScoutLogger"
          },
          "; config: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutTestConfig",
            "text": "ScoutTestConfig"
          },
          "; kbnUrl: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.KibanaUrl",
            "text": "KibanaUrl"
          },
          "; esClient: ",
          "default",
          "; kbnClient: ",
          {
            "pluginId": "@kbn/test",
            "scope": "common",
            "docId": "kibKbnTestPluginApi",
            "section": "def-common.KbnClient",
            "text": "KbnClient"
          },
          "; samlAuth: ",
          {
            "pluginId": "@kbn/test",
            "scope": "common",
            "docId": "kibKbnTestPluginApi",
            "section": "def-common.SamlSessionManager",
            "text": "SamlSessionManager"
          },
          "; } & { esArchiver: ",
          "EsArchiverFixture",
          "; } & { uiSettings: ",
          "UiSettingsFixture",
          "; } & { fleetApi: ",
          "FleetApiFixture",
          "; } & { kbnUrl: ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.KibanaUrl",
            "text": "KibanaUrl"
          },
          "; } & ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutWorkerFixtures",
            "text": "ScoutWorkerFixtures"
          },
          ">"
        ],
        "path": "x-pack/solutions/observability/packages/kbn-scout-oblt/src/playwright/fixtures/single_thread_fixtures.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.Locator",
        "type": "Interface",
        "tags": [],
        "label": "Locator",
        "description": [
          "\nLocators are the central piece of Playwright's auto-waiting and retry-ability. In a nutshell, locators represent a\nway to find element(s) on the page at any moment. A locator can be created with the\n[page.locator(selector[, options])](https://playwright.dev/docs/api/class-page#page-locator) method.\n\n[Learn more about locators](https://playwright.dev/docs/locators)."
        ],
        "signature": [
          "Locator"
        ],
        "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.evaluate",
            "type": "Function",
            "tags": [],
            "label": "evaluate",
            "description": [
              "\nExecute JavaScript code in the page, taking the matching element as an argument.\n\n**Details**\n\nReturns the return value of\n[`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-option-expression), called with the\nmatching element as a first argument, and\n[`arg`](https://playwright.dev/docs/api/class-locator#locator-evaluate-option-arg) as a second argument.\n\nIf [`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-option-expression) returns a\n[Promise], this method will wait for the promise to resolve and return its value.\n\nIf [`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-option-expression) throws or\nrejects, this method throws.\n\n**Usage**\n\n```js\nconst tweets = page.locator('.tweet .retweets');\nexpect(await tweets.evaluate(node => node.innerText)).toBe('10 retweets');\n```\n"
            ],
            "signature": [
              "{ <R, Arg, E extends HTMLElement | SVGElement = HTMLElement | SVGElement>(pageFunction: ",
              "PageFunctionOn",
              "<E, Arg, R>, arg: Arg, options?: { timeout?: number | undefined; } | undefined): Promise<R>; <R, E extends HTMLElement | SVGElement = HTMLElement | SVGElement>(pageFunction: ",
              "PageFunctionOn",
              "<E, void, R>, options?: { timeout?: number | undefined; } | undefined): Promise<R>; }"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.evaluate.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "pageFunction",
                "description": [
                  "Function to be evaluated in the page context."
                ],
                "signature": [
                  "PageFunctionOn",
                  "<E, Arg, R>"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.evaluate.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "arg",
                "description": [
                  "Optional argument to pass to\n[`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-option-expression)."
                ],
                "signature": [
                  "Arg"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.evaluate.$3",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.evaluate.$3.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.evaluate",
            "type": "Function",
            "tags": [],
            "label": "evaluate",
            "description": [
              "\nExecute JavaScript code in the page, taking the matching element as an argument.\n\n**Details**\n\nReturns the return value of\n[`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-option-expression), called with the\nmatching element as a first argument, and\n[`arg`](https://playwright.dev/docs/api/class-locator#locator-evaluate-option-arg) as a second argument.\n\nIf [`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-option-expression) returns a\n[Promise], this method will wait for the promise to resolve and return its value.\n\nIf [`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-option-expression) throws or\nrejects, this method throws.\n\n**Usage**\n\n```js\nconst tweets = page.locator('.tweet .retweets');\nexpect(await tweets.evaluate(node => node.innerText)).toBe('10 retweets');\n```\n"
            ],
            "signature": [
              "{ <R, Arg, E extends HTMLElement | SVGElement = HTMLElement | SVGElement>(pageFunction: ",
              "PageFunctionOn",
              "<E, Arg, R>, arg: Arg, options?: { timeout?: number | undefined; } | undefined): Promise<R>; <R, E extends HTMLElement | SVGElement = HTMLElement | SVGElement>(pageFunction: ",
              "PageFunctionOn",
              "<E, void, R>, options?: { timeout?: number | undefined; } | undefined): Promise<R>; }"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.evaluate.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "pageFunction",
                "description": [
                  "Function to be evaluated in the page context."
                ],
                "signature": [
                  "PageFunctionOn",
                  "<E, void, R>"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.evaluate.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.evaluate.$2.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.evaluateHandle",
            "type": "Function",
            "tags": [],
            "label": "evaluateHandle",
            "description": [
              "\nExecute JavaScript code in the page, taking the matching element as an argument, and return a\n[JSHandle](https://playwright.dev/docs/api/class-jshandle) with the result.\n\n**Details**\n\nReturns the return value of\n[`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle-option-expression) as\na[JSHandle](https://playwright.dev/docs/api/class-jshandle), called with the matching element as a first argument,\nand [`arg`](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle-option-arg) as a second argument.\n\nThe only difference between\n[locator.evaluate(pageFunction[, arg, options])](https://playwright.dev/docs/api/class-locator#locator-evaluate)\nand\n[locator.evaluateHandle(pageFunction[, arg, options])](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle)\nis that\n[locator.evaluateHandle(pageFunction[, arg, options])](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle)\nreturns [JSHandle](https://playwright.dev/docs/api/class-jshandle).\n\nIf [`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle-option-expression)\nreturns a [Promise], this method will wait for the promise to resolve and return its value.\n\nIf [`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle-option-expression) throws\nor rejects, this method throws.\n\nSee [page.evaluateHandle(pageFunction[, arg])](https://playwright.dev/docs/api/class-page#page-evaluate-handle) for\nmore details."
            ],
            "signature": [
              "{ <R, Arg, E extends HTMLElement | SVGElement = HTMLElement | SVGElement>(pageFunction: ",
              "PageFunctionOn",
              "<E, Arg, R>, arg: Arg): Promise<",
              "SmartHandle",
              "<R>>; <R, E extends HTMLElement | SVGElement = HTMLElement | SVGElement>(pageFunction: ",
              "PageFunctionOn",
              "<E, void, R>): Promise<",
              "SmartHandle",
              "<R>>; }"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.evaluateHandle.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "pageFunction",
                "description": [
                  "Function to be evaluated in the page context."
                ],
                "signature": [
                  "PageFunctionOn",
                  "<E, Arg, R>"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.evaluateHandle.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "arg",
                "description": [
                  "Optional argument to pass to\n[`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle-option-expression)."
                ],
                "signature": [
                  "Arg"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.evaluateHandle",
            "type": "Function",
            "tags": [],
            "label": "evaluateHandle",
            "description": [
              "\nExecute JavaScript code in the page, taking the matching element as an argument, and return a\n[JSHandle](https://playwright.dev/docs/api/class-jshandle) with the result.\n\n**Details**\n\nReturns the return value of\n[`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle-option-expression) as\na[JSHandle](https://playwright.dev/docs/api/class-jshandle), called with the matching element as a first argument,\nand [`arg`](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle-option-arg) as a second argument.\n\nThe only difference between\n[locator.evaluate(pageFunction[, arg, options])](https://playwright.dev/docs/api/class-locator#locator-evaluate)\nand\n[locator.evaluateHandle(pageFunction[, arg, options])](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle)\nis that\n[locator.evaluateHandle(pageFunction[, arg, options])](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle)\nreturns [JSHandle](https://playwright.dev/docs/api/class-jshandle).\n\nIf [`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle-option-expression)\nreturns a [Promise], this method will wait for the promise to resolve and return its value.\n\nIf [`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-handle-option-expression) throws\nor rejects, this method throws.\n\nSee [page.evaluateHandle(pageFunction[, arg])](https://playwright.dev/docs/api/class-page#page-evaluate-handle) for\nmore details."
            ],
            "signature": [
              "{ <R, Arg, E extends HTMLElement | SVGElement = HTMLElement | SVGElement>(pageFunction: ",
              "PageFunctionOn",
              "<E, Arg, R>, arg: Arg): Promise<",
              "SmartHandle",
              "<R>>; <R, E extends HTMLElement | SVGElement = HTMLElement | SVGElement>(pageFunction: ",
              "PageFunctionOn",
              "<E, void, R>): Promise<",
              "SmartHandle",
              "<R>>; }"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.evaluateHandle.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "pageFunction",
                "description": [
                  "Function to be evaluated in the page context."
                ],
                "signature": [
                  "PageFunctionOn",
                  "<E, void, R>"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.evaluateAll",
            "type": "Function",
            "tags": [],
            "label": "evaluateAll",
            "description": [
              "\nExecute JavaScript code in the page, taking all matching elements as an argument.\n\n**Details**\n\nReturns the return value of\n[`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-all-option-expression), called with\nan array of all matching elements as a first argument, and\n[`arg`](https://playwright.dev/docs/api/class-locator#locator-evaluate-all-option-arg) as a second argument.\n\nIf [`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-all-option-expression) returns a\n[Promise], this method will wait for the promise to resolve and return its value.\n\nIf [`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-all-option-expression) throws or\nrejects, this method throws.\n\n**Usage**\n\n```js\nconst locator = page.locator('div');\nconst moreThanTen = await locator.evaluateAll((divs, min) => divs.length > min, 10);\n```\n"
            ],
            "signature": [
              "{ <R, Arg, E extends HTMLElement | SVGElement = HTMLElement | SVGElement>(pageFunction: ",
              "PageFunctionOn",
              "<E[], Arg, R>, arg: Arg): Promise<R>; <R, E extends HTMLElement | SVGElement = HTMLElement | SVGElement>(pageFunction: ",
              "PageFunctionOn",
              "<E[], void, R>): Promise<R>; }"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.evaluateAll.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "pageFunction",
                "description": [
                  "Function to be evaluated in the page context."
                ],
                "signature": [
                  "PageFunctionOn",
                  "<E[], Arg, R>"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.evaluateAll.$2",
                "type": "Uncategorized",
                "tags": [],
                "label": "arg",
                "description": [
                  "Optional argument to pass to\n[`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-all-option-expression)."
                ],
                "signature": [
                  "Arg"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.evaluateAll",
            "type": "Function",
            "tags": [],
            "label": "evaluateAll",
            "description": [
              "\nExecute JavaScript code in the page, taking all matching elements as an argument.\n\n**Details**\n\nReturns the return value of\n[`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-all-option-expression), called with\nan array of all matching elements as a first argument, and\n[`arg`](https://playwright.dev/docs/api/class-locator#locator-evaluate-all-option-arg) as a second argument.\n\nIf [`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-all-option-expression) returns a\n[Promise], this method will wait for the promise to resolve and return its value.\n\nIf [`pageFunction`](https://playwright.dev/docs/api/class-locator#locator-evaluate-all-option-expression) throws or\nrejects, this method throws.\n\n**Usage**\n\n```js\nconst locator = page.locator('div');\nconst moreThanTen = await locator.evaluateAll((divs, min) => divs.length > min, 10);\n```\n"
            ],
            "signature": [
              "{ <R, Arg, E extends HTMLElement | SVGElement = HTMLElement | SVGElement>(pageFunction: ",
              "PageFunctionOn",
              "<E[], Arg, R>, arg: Arg): Promise<R>; <R, E extends HTMLElement | SVGElement = HTMLElement | SVGElement>(pageFunction: ",
              "PageFunctionOn",
              "<E[], void, R>): Promise<R>; }"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.evaluateAll.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "pageFunction",
                "description": [
                  "Function to be evaluated in the page context."
                ],
                "signature": [
                  "PageFunctionOn",
                  "<E[], void, R>"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.elementHandle",
            "type": "Function",
            "tags": [],
            "label": "elementHandle",
            "description": [
              "\n**NOTE** Always prefer using [Locator](https://playwright.dev/docs/api/class-locator)s and web assertions over\n[ElementHandle](https://playwright.dev/docs/api/class-elementhandle)s because latter are inherently racy.\n\nResolves given locator to the first matching DOM element. If there are no matching elements, waits for one. If\nmultiple elements match the locator, throws."
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<",
              "ElementHandle",
              "<HTMLElement | SVGElement> | null>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.elementHandle.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.elementHandle.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.all",
            "type": "Function",
            "tags": [],
            "label": "all",
            "description": [
              "\nWhen the locator points to a list of elements, this returns an array of locators, pointing to their respective\nelements.\n\n**NOTE** [locator.all()](https://playwright.dev/docs/api/class-locator#locator-all) does not wait for elements to\nmatch the locator, and instead immediately returns whatever is present in the page.\n\nWhen the list of elements changes dynamically,\n[locator.all()](https://playwright.dev/docs/api/class-locator#locator-all) will produce unpredictable and flaky\nresults.\n\nWhen the list of elements is stable, but loaded dynamically, wait for the full list to finish loading before\ncalling [locator.all()](https://playwright.dev/docs/api/class-locator#locator-all).\n\n**Usage**\n\n```js\nfor (const li of await page.getByRole('listitem').all())\n  await li.click();\n```\n"
            ],
            "signature": [
              "() => Promise<",
              "Locator",
              "[]>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.allInnerTexts",
            "type": "Function",
            "tags": [],
            "label": "allInnerTexts",
            "description": [
              "\nReturns an array of `node.innerText` values for all matching nodes.\n\n**NOTE** If you need to assert text on the page, prefer\n[expect(locator).toHaveText(expected[, options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-have-text)\nwith\n[`useInnerText`](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-have-text-option-use-inner-text)\noption to avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n\n**Usage**\n\n```js\nconst texts = await page.getByRole('link').allInnerTexts();\n```\n"
            ],
            "signature": [
              "() => Promise<string[]>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.allTextContents",
            "type": "Function",
            "tags": [],
            "label": "allTextContents",
            "description": [
              "\nReturns an array of `node.textContent` values for all matching nodes.\n\n**NOTE** If you need to assert text on the page, prefer\n[expect(locator).toHaveText(expected[, options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-have-text)\nto avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n\n**Usage**\n\n```js\nconst texts = await page.getByRole('link').allTextContents();\n```\n"
            ],
            "signature": [
              "() => Promise<string[]>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.and",
            "type": "Function",
            "tags": [],
            "label": "and",
            "description": [
              "\nCreates a locator that matches both this locator and the argument locator.\n\n**Usage**\n\nThe following example finds a button with a specific title.\n\n```js\nconst button = page.getByRole('button').and(page.getByTitle('Subscribe'));\n```\n"
            ],
            "signature": [
              "(locator: ",
              "Locator",
              ") => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.and.$1",
                "type": "Object",
                "tags": [],
                "label": "locator",
                "description": [
                  "Additional locator to match."
                ],
                "signature": [
                  "Locator"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.ariaSnapshot",
            "type": "Function",
            "tags": [],
            "label": "ariaSnapshot",
            "description": [
              "\nCaptures the aria snapshot of the given element. Read more about [aria snapshots](https://playwright.dev/docs/aria-snapshots) and\n[expect(locator).toMatchAriaSnapshot(expected[, options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-match-aria-snapshot)\nfor the corresponding assertion.\n\n**Usage**\n\n```js\nawait page.getByRole('link').ariaSnapshot();\n```\n\n**Details**\n\nThis method captures the aria snapshot of the given element. The snapshot is a string that represents the state of\nthe element and its children. The snapshot can be used to assert the state of the element in the test, or to\ncompare it to state in the future.\n\nThe ARIA snapshot is represented using [YAML](https://yaml.org/spec/1.2.2/) markup language:\n- The keys of the objects are the roles and optional accessible names of the elements.\n- The values are either text content or an array of child elements.\n- Generic static text can be represented with the `text` key.\n\nBelow is the HTML markup and the respective ARIA snapshot:\n\n```html\n<ul aria-label=\"Links\">\n  <li><a href=\"/\">Home</a></li>\n  <li><a href=\"/about\">About</a></li>\n<ul>\n```\n\n```yml\n- list \"Links\":\n  - listitem:\n    - link \"Home\"\n  - listitem:\n    - link \"About\"\n```\n"
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<string>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.ariaSnapshot.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.ariaSnapshot.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.blur",
            "type": "Function",
            "tags": [],
            "label": "blur",
            "description": [
              "\nCalls [blur](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/blur) on the element."
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.blur.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.blur.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.boundingBox",
            "type": "Function",
            "tags": [],
            "label": "boundingBox",
            "description": [
              "\nThis method returns the bounding box of the element matching the locator, or `null` if the element is not visible.\nThe bounding box is calculated relative to the main frame viewport - which is usually the same as the browser\nwindow.\n\n**Details**\n\nScrolling affects the returned bounding box, similarly to\n[Element.getBoundingClientRect](https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect).\nThat means `x` and/or `y` may be negative.\n\nElements from child frames return the bounding box relative to the main frame, unlike the\n[Element.getBoundingClientRect](https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect).\n\nAssuming the page is static, it is safe to use bounding box coordinates to perform input. For example, the\nfollowing snippet should click the center of the element.\n\n**Usage**\n\n```js\nconst box = await page.getByRole('button').boundingBox();\nawait page.mouse.click(box.x + box.width / 2, box.y + box.height / 2);\n```\n"
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<{ x: number; y: number; width: number; height: number; } | null>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.boundingBox.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.boundingBox.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.check",
            "type": "Function",
            "tags": [],
            "label": "check",
            "description": [
              "\nEnsure that checkbox or radio element is checked.\n\n**Details**\n\nPerforms the following steps:\n1. Ensure that element is a checkbox or a radio input. If not, this method throws. If the element is already\n   checked, this method returns immediately.\n1. Wait for [actionability](https://playwright.dev/docs/actionability) checks on the element, unless\n   [`force`](https://playwright.dev/docs/api/class-locator#locator-check-option-force) option is set.\n1. Scroll the element into view if needed.\n1. Use [page.mouse](https://playwright.dev/docs/api/class-page#page-mouse) to click in the center of the\n   element.\n1. Ensure that the element is now checked. If not, this method throws.\n\nIf the element is detached from the DOM at any moment during the action, this method throws.\n\nWhen all steps combined have not finished during the specified\n[`timeout`](https://playwright.dev/docs/api/class-locator#locator-check-option-timeout), this method throws a\n[TimeoutError](https://playwright.dev/docs/api/class-timeouterror). Passing zero timeout disables this.\n\n**Usage**\n\n```js\nawait page.getByRole('checkbox').check();\n```\n"
            ],
            "signature": [
              "(options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.check.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.check.$1.force",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "force",
                    "description": [
                      "\nWhether to bypass the [actionability](https://playwright.dev/docs/actionability) checks. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.check.$1.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.check.$1.position",
                    "type": "Object",
                    "tags": [],
                    "label": "position",
                    "description": [
                      "\nA point to use relative to the top-left corner of element padding box. If not specified, uses some visible point of\nthe element."
                    ],
                    "signature": [
                      "{ x: number; y: number; } | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.check.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.check.$1.trial",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "trial",
                    "description": [
                      "\nWhen set, this method only performs the [actionability](https://playwright.dev/docs/actionability) checks and skips the action. Defaults\nto `false`. Useful to wait until the element is ready for the action without performing it."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.clear",
            "type": "Function",
            "tags": [],
            "label": "clear",
            "description": [
              "\nClear the input field.\n\n**Details**\n\nThis method waits for [actionability](https://playwright.dev/docs/actionability) checks, focuses the element, clears it and triggers an\n`input` event after clearing.\n\nIf the target element is not an `<input>`, `<textarea>` or `[contenteditable]` element, this method throws an\nerror. However, if the element is inside the `<label>` element that has an associated\n[control](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control), the control will be cleared\ninstead.\n\n**Usage**\n\n```js\nawait page.getByRole('textbox').clear();\n```\n"
            ],
            "signature": [
              "(options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.clear.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.clear.$1.force",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "force",
                    "description": [
                      "\nWhether to bypass the [actionability](https://playwright.dev/docs/actionability) checks. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.clear.$1.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.clear.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.click",
            "type": "Function",
            "tags": [],
            "label": "click",
            "description": [
              "\nClick an element.\n\n**Details**\n\nThis method clicks the element by performing the following steps:\n1. Wait for [actionability](https://playwright.dev/docs/actionability) checks on the element, unless\n   [`force`](https://playwright.dev/docs/api/class-locator#locator-click-option-force) option is set.\n1. Scroll the element into view if needed.\n1. Use [page.mouse](https://playwright.dev/docs/api/class-page#page-mouse) to click in the center of the\n   element, or the specified\n   [`position`](https://playwright.dev/docs/api/class-locator#locator-click-option-position).\n1. Wait for initiated navigations to either succeed or fail, unless\n   [`noWaitAfter`](https://playwright.dev/docs/api/class-locator#locator-click-option-no-wait-after) option is\n   set.\n\nIf the element is detached from the DOM at any moment during the action, this method throws.\n\nWhen all steps combined have not finished during the specified\n[`timeout`](https://playwright.dev/docs/api/class-locator#locator-click-option-timeout), this method throws a\n[TimeoutError](https://playwright.dev/docs/api/class-timeouterror). Passing zero timeout disables this.\n\n**Usage**\n\nClick a button:\n\n```js\nawait page.getByRole('button').click();\n```\n\nShift-right-click at a specific position on a canvas:\n\n```js\nawait page.locator('canvas').click({\n  button: 'right',\n  modifiers: ['Shift'],\n  position: { x: 23, y: 32 },\n});\n```\n"
            ],
            "signature": [
              "(options?: { button?: \"right\" | \"left\" | \"middle\" | undefined; clickCount?: number | undefined; delay?: number | undefined; force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.click.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.click.$1.button",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "button",
                    "description": [
                      "\nDefaults to `left`."
                    ],
                    "signature": [
                      "\"right\" | \"left\" | \"middle\" | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.click.$1.clickCount",
                    "type": "number",
                    "tags": [],
                    "label": "clickCount",
                    "description": [
                      "\ndefaults to 1. See [UIEvent.detail]."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.click.$1.delay",
                    "type": "number",
                    "tags": [],
                    "label": "delay",
                    "description": [
                      "\nTime to wait between `mousedown` and `mouseup` in milliseconds. Defaults to 0."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.click.$1.force",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "force",
                    "description": [
                      "\nWhether to bypass the [actionability](https://playwright.dev/docs/actionability) checks. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.click.$1.modifiers",
                    "type": "Array",
                    "tags": [],
                    "label": "modifiers",
                    "description": [
                      "\nModifier keys to press. Ensures that only these modifiers are pressed during the operation, and then restores\ncurrent modifiers back. If not specified, currently pressed modifiers are used. \"ControlOrMeta\" resolves to\n\"Control\" on Windows and Linux and to \"Meta\" on macOS."
                    ],
                    "signature": [
                      "(\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.click.$1.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nActions that initiate navigations are waiting for these navigations to happen and for pages to start loading. You\ncan opt out of waiting via setting this flag. You would only need this option in the exceptional cases such as\nnavigating to inaccessible pages. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.click.$1.position",
                    "type": "Object",
                    "tags": [],
                    "label": "position",
                    "description": [
                      "\nA point to use relative to the top-left corner of element padding box. If not specified, uses some visible point of\nthe element."
                    ],
                    "signature": [
                      "{ x: number; y: number; } | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.click.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.click.$1.trial",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "trial",
                    "description": [
                      "\nWhen set, this method only performs the [actionability](https://playwright.dev/docs/actionability) checks and skips the action. Defaults\nto `false`. Useful to wait until the element is ready for the action without performing it. Note that keyboard\n`modifiers` will be pressed regardless of `trial` to allow testing elements which are only visible when those keys\nare pressed."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.contentFrame",
            "type": "Function",
            "tags": [],
            "label": "contentFrame",
            "description": [
              "\nReturns a [FrameLocator](https://playwright.dev/docs/api/class-framelocator) object pointing to the same `iframe`\nas this locator.\n\nUseful when you have a [Locator](https://playwright.dev/docs/api/class-locator) object obtained somewhere, and\nlater on would like to interact with the content inside the frame.\n\nFor a reverse operation, use\n[frameLocator.owner()](https://playwright.dev/docs/api/class-framelocator#frame-locator-owner).\n\n**Usage**\n\n```js\nconst locator = page.locator('iframe[name=\"embedded\"]');\n// ...\nconst frameLocator = locator.contentFrame();\nawait frameLocator.getByRole('button').click();\n```\n"
            ],
            "signature": [
              "() => ",
              "FrameLocator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.count",
            "type": "Function",
            "tags": [],
            "label": "count",
            "description": [
              "\nReturns the number of elements matching the locator.\n\n**NOTE** If you need to assert the number of elements on the page, prefer\n[expect(locator).toHaveCount(count[, options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-have-count)\nto avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n\n**Usage**\n\n```js\nconst count = await page.getByRole('listitem').count();\n```\n"
            ],
            "signature": [
              "() => Promise<number>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.dblclick",
            "type": "Function",
            "tags": [],
            "label": "dblclick",
            "description": [
              "\nDouble-click an element.\n\n**Details**\n\nThis method double clicks the element by performing the following steps:\n1. Wait for [actionability](https://playwright.dev/docs/actionability) checks on the element, unless\n   [`force`](https://playwright.dev/docs/api/class-locator#locator-dblclick-option-force) option is set.\n1. Scroll the element into view if needed.\n1. Use [page.mouse](https://playwright.dev/docs/api/class-page#page-mouse) to double click in the center of the\n   element, or the specified\n   [`position`](https://playwright.dev/docs/api/class-locator#locator-dblclick-option-position).\n\nIf the element is detached from the DOM at any moment during the action, this method throws.\n\nWhen all steps combined have not finished during the specified\n[`timeout`](https://playwright.dev/docs/api/class-locator#locator-dblclick-option-timeout), this method throws a\n[TimeoutError](https://playwright.dev/docs/api/class-timeouterror). Passing zero timeout disables this.\n\n**NOTE** `element.dblclick()` dispatches two `click` events and a single `dblclick` event.\n"
            ],
            "signature": [
              "(options?: { button?: \"right\" | \"left\" | \"middle\" | undefined; delay?: number | undefined; force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.dblclick.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dblclick.$1.button",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "button",
                    "description": [
                      "\nDefaults to `left`."
                    ],
                    "signature": [
                      "\"right\" | \"left\" | \"middle\" | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dblclick.$1.delay",
                    "type": "number",
                    "tags": [],
                    "label": "delay",
                    "description": [
                      "\nTime to wait between `mousedown` and `mouseup` in milliseconds. Defaults to 0."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dblclick.$1.force",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "force",
                    "description": [
                      "\nWhether to bypass the [actionability](https://playwright.dev/docs/actionability) checks. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dblclick.$1.modifiers",
                    "type": "Array",
                    "tags": [],
                    "label": "modifiers",
                    "description": [
                      "\nModifier keys to press. Ensures that only these modifiers are pressed during the operation, and then restores\ncurrent modifiers back. If not specified, currently pressed modifiers are used. \"ControlOrMeta\" resolves to\n\"Control\" on Windows and Linux and to \"Meta\" on macOS."
                    ],
                    "signature": [
                      "(\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dblclick.$1.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dblclick.$1.position",
                    "type": "Object",
                    "tags": [],
                    "label": "position",
                    "description": [
                      "\nA point to use relative to the top-left corner of element padding box. If not specified, uses some visible point of\nthe element."
                    ],
                    "signature": [
                      "{ x: number; y: number; } | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dblclick.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dblclick.$1.trial",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "trial",
                    "description": [
                      "\nWhen set, this method only performs the [actionability](https://playwright.dev/docs/actionability) checks and skips the action. Defaults\nto `false`. Useful to wait until the element is ready for the action without performing it. Note that keyboard\n`modifiers` will be pressed regardless of `trial` to allow testing elements which are only visible when those keys\nare pressed."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.dispatchEvent",
            "type": "Function",
            "tags": [],
            "label": "dispatchEvent",
            "description": [
              "\nProgrammatically dispatch an event on the matching element.\n\n**Usage**\n\n```js\nawait locator.dispatchEvent('click');\n```\n\n**Details**\n\nThe snippet above dispatches the `click` event on the element. Regardless of the visibility state of the element,\n`click` is dispatched. This is equivalent to calling\n[element.click()](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/click).\n\nUnder the hood, it creates an instance of an event based on the given\n[`type`](https://playwright.dev/docs/api/class-locator#locator-dispatch-event-option-type), initializes it with\n[`eventInit`](https://playwright.dev/docs/api/class-locator#locator-dispatch-event-option-event-init) properties\nand dispatches it on the element. Events are `composed`, `cancelable` and bubble by default.\n\nSince [`eventInit`](https://playwright.dev/docs/api/class-locator#locator-dispatch-event-option-event-init) is\nevent-specific, please refer to the events documentation for the lists of initial properties:\n- [DeviceMotionEvent](https://developer.mozilla.org/en-US/docs/Web/API/DeviceMotionEvent/DeviceMotionEvent)\n- [DeviceOrientationEvent](https://developer.mozilla.org/en-US/docs/Web/API/DeviceOrientationEvent/DeviceOrientationEvent)\n- [DragEvent](https://developer.mozilla.org/en-US/docs/Web/API/DragEvent/DragEvent)\n- [Event](https://developer.mozilla.org/en-US/docs/Web/API/Event/Event)\n- [FocusEvent](https://developer.mozilla.org/en-US/docs/Web/API/FocusEvent/FocusEvent)\n- [KeyboardEvent](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/KeyboardEvent)\n- [MouseEvent](https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/MouseEvent)\n- [PointerEvent](https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/PointerEvent)\n- [TouchEvent](https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/TouchEvent)\n- [WheelEvent](https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/WheelEvent)\n\nYou can also specify [JSHandle](https://playwright.dev/docs/api/class-jshandle) as the property value if you want\nlive objects to be passed into the event:\n\n```js\n// Note you can only create DataTransfer in Chromium and Firefox\nconst dataTransfer = await page.evaluateHandle(() => new DataTransfer());\nawait locator.dispatchEvent('dragstart', { dataTransfer });\n```\n"
            ],
            "signature": [
              "(type: string, eventInit?: ",
              "EvaluationArgument",
              " | undefined, options?: { timeout?: number | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.dispatchEvent.$1",
                "type": "string",
                "tags": [],
                "label": "type",
                "description": [
                  "DOM event type: `\"click\"`, `\"dragstart\"`, etc."
                ],
                "signature": [
                  "string"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.dispatchEvent.$2",
                "type": "Object",
                "tags": [],
                "label": "eventInit",
                "description": [
                  "Optional event-specific initialization properties."
                ],
                "signature": [
                  "EvaluationArgument",
                  " | undefined"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.dispatchEvent.$3",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dispatchEvent.$3.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.dragTo",
            "type": "Function",
            "tags": [],
            "label": "dragTo",
            "description": [
              "\nDrag the source element towards the target element and drop it.\n\n**Details**\n\nThis method drags the locator to another target locator or target position. It will first move to the source\nelement, perform a `mousedown`, then move to the target element or position and perform a `mouseup`.\n\n**Usage**\n\n```js\nconst source = page.locator('#source');\nconst target = page.locator('#target');\n\nawait source.dragTo(target);\n// or specify exact positions relative to the top-left corners of the elements:\nawait source.dragTo(target, {\n  sourcePosition: { x: 34, y: 7 },\n  targetPosition: { x: 10, y: 20 },\n});\n```\n"
            ],
            "signature": [
              "(target: ",
              "Locator",
              ", options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; sourcePosition?: { x: number; y: number; } | undefined; targetPosition?: { x: number; y: number; } | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.dragTo.$1",
                "type": "Object",
                "tags": [],
                "label": "target",
                "description": [
                  "Locator of the element to drag to."
                ],
                "signature": [
                  "Locator"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.dragTo.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dragTo.$2.force",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "force",
                    "description": [
                      "\nWhether to bypass the [actionability](https://playwright.dev/docs/actionability) checks. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dragTo.$2.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dragTo.$2.sourcePosition",
                    "type": "Object",
                    "tags": [],
                    "label": "sourcePosition",
                    "description": [
                      "\nClicks on the source element at this point relative to the top-left corner of the element's padding box. If not\nspecified, some visible point of the element is used."
                    ],
                    "signature": [
                      "{ x: number; y: number; } | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dragTo.$2.targetPosition",
                    "type": "Object",
                    "tags": [],
                    "label": "targetPosition",
                    "description": [
                      "\nDrops on the target element at this point relative to the top-left corner of the element's padding box. If not\nspecified, some visible point of the element is used."
                    ],
                    "signature": [
                      "{ x: number; y: number; } | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dragTo.$2.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.dragTo.$2.trial",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "trial",
                    "description": [
                      "\nWhen set, this method only performs the [actionability](https://playwright.dev/docs/actionability) checks and skips the action. Defaults\nto `false`. Useful to wait until the element is ready for the action without performing it."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.elementHandles",
            "type": "Function",
            "tags": [],
            "label": "elementHandles",
            "description": [
              "\n**NOTE** Always prefer using [Locator](https://playwright.dev/docs/api/class-locator)s and web assertions over\n[ElementHandle](https://playwright.dev/docs/api/class-elementhandle)s because latter are inherently racy.\n\nResolves given locator to all matching DOM elements. If there are no matching elements, returns an empty list."
            ],
            "signature": [
              "() => Promise<",
              "ElementHandle",
              "<Node>[]>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.fill",
            "type": "Function",
            "tags": [],
            "label": "fill",
            "description": [
              "\nSet a value to the input field.\n\n**Usage**\n\n```js\nawait page.getByRole('textbox').fill('example value');\n```\n\n**Details**\n\nThis method waits for [actionability](https://playwright.dev/docs/actionability) checks, focuses the element, fills it and triggers an\n`input` event after filling. Note that you can pass an empty string to clear the input field.\n\nIf the target element is not an `<input>`, `<textarea>` or `[contenteditable]` element, this method throws an\nerror. However, if the element is inside the `<label>` element that has an associated\n[control](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control), the control will be filled\ninstead.\n\nTo send fine-grained keyboard events, use\n[locator.pressSequentially(text[, options])](https://playwright.dev/docs/api/class-locator#locator-press-sequentially)."
            ],
            "signature": [
              "(value: string, options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.fill.$1",
                "type": "string",
                "tags": [],
                "label": "value",
                "description": [
                  "Value to set for the `<input>`, `<textarea>` or `[contenteditable]` element."
                ],
                "signature": [
                  "string"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.fill.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.fill.$2.force",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "force",
                    "description": [
                      "\nWhether to bypass the [actionability](https://playwright.dev/docs/actionability) checks. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.fill.$2.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.fill.$2.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.filter",
            "type": "Function",
            "tags": [],
            "label": "filter",
            "description": [
              "\nThis method narrows existing locator according to the options, for example filters by text. It can be chained to\nfilter multiple times.\n\n**Usage**\n\n```js\nconst rowLocator = page.locator('tr');\n// ...\nawait rowLocator\n    .filter({ hasText: 'text in column 1' })\n    .filter({ has: page.getByRole('button', { name: 'column 2 button' }) })\n    .screenshot();\n```\n"
            ],
            "signature": [
              "(options?: { has?: ",
              "Locator",
              " | undefined; hasNot?: ",
              "Locator",
              " | undefined; hasNotText?: string | RegExp | undefined; hasText?: string | RegExp | undefined; } | undefined) => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.filter.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.filter.$1.has",
                    "type": "Object",
                    "tags": [],
                    "label": "has",
                    "description": [
                      "\nNarrows down the results of the method to those which contain elements matching this relative locator. For example,\n`article` that has `text=Playwright` matches `<article><div>Playwright</div></article>`.\n\nInner locator **must be relative** to the outer locator and is queried starting with the outer locator match, not\nthe document root. For example, you can find `content` that has `div` in\n`<article><content><div>Playwright</div></content></article>`. However, looking for `content` that has `article\ndiv` will fail, because the inner locator must be relative and should not use any elements outside the `content`.\n\nNote that outer and inner locators must belong to the same frame. Inner locator must not contain\n[FrameLocator](https://playwright.dev/docs/api/class-framelocator)s."
                    ],
                    "signature": [
                      "Locator",
                      " | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.filter.$1.hasNot",
                    "type": "Object",
                    "tags": [],
                    "label": "hasNot",
                    "description": [
                      "\nMatches elements that do not contain an element that matches an inner locator. Inner locator is queried against the\nouter one. For example, `article` that does not have `div` matches `<article><span>Playwright</span></article>`.\n\nNote that outer and inner locators must belong to the same frame. Inner locator must not contain\n[FrameLocator](https://playwright.dev/docs/api/class-framelocator)s."
                    ],
                    "signature": [
                      "Locator",
                      " | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.filter.$1.hasNotText",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "hasNotText",
                    "description": [
                      "\nMatches elements that do not contain specified text somewhere inside, possibly in a child or a descendant element.\nWhen passed a [string], matching is case-insensitive and searches for a substring."
                    ],
                    "signature": [
                      "string | RegExp | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.filter.$1.hasText",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "hasText",
                    "description": [
                      "\nMatches elements containing specified text somewhere inside, possibly in a child or a descendant element. When\npassed a [string], matching is case-insensitive and searches for a substring. For example, `\"Playwright\"` matches\n`<article><div>Playwright</div></article>`."
                    ],
                    "signature": [
                      "string | RegExp | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.first",
            "type": "Function",
            "tags": [],
            "label": "first",
            "description": [
              "\nReturns locator to the first matching element."
            ],
            "signature": [
              "() => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.focus",
            "type": "Function",
            "tags": [],
            "label": "focus",
            "description": [
              "\nCalls [focus](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus) on the matching element."
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.focus.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.focus.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.frameLocator",
            "type": "Function",
            "tags": [],
            "label": "frameLocator",
            "description": [
              "\nWhen working with iframes, you can create a frame locator that will enter the iframe and allow locating elements in\nthat iframe:\n\n**Usage**\n\n```js\nconst locator = page.frameLocator('iframe').getByText('Submit');\nawait locator.click();\n```\n"
            ],
            "signature": [
              "(selector: string) => ",
              "FrameLocator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.frameLocator.$1",
                "type": "string",
                "tags": [],
                "label": "selector",
                "description": [
                  "A selector to use when resolving DOM element."
                ],
                "signature": [
                  "string"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.getAttribute",
            "type": "Function",
            "tags": [],
            "label": "getAttribute",
            "description": [
              "\nReturns the matching element's attribute value.\n\n**NOTE** If you need to assert an element's attribute, prefer\n[expect(locator).toHaveAttribute(name, value[, options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-have-attribute)\nto avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n"
            ],
            "signature": [
              "(name: string, options?: { timeout?: number | undefined; } | undefined) => Promise<string | null>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getAttribute.$1",
                "type": "string",
                "tags": [],
                "label": "name",
                "description": [
                  "Attribute name to get the value for."
                ],
                "signature": [
                  "string"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getAttribute.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getAttribute.$2.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.getByAltText",
            "type": "Function",
            "tags": [],
            "label": "getByAltText",
            "description": [
              "\nAllows locating elements by their alt text.\n\n**Usage**\n\nFor example, this method will find the image by alt text \"Playwright logo\":\n\n```html\n<img alt='Playwright logo'>\n```\n\n```js\nawait page.getByAltText('Playwright logo').click();\n```\n"
            ],
            "signature": [
              "(text: string | RegExp, options?: { exact?: boolean | undefined; } | undefined) => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByAltText.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "text",
                "description": [
                  "Text to locate the element for."
                ],
                "signature": [
                  "string | RegExp"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByAltText.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByAltText.$2.exact",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "exact",
                    "description": [
                      "\nWhether to find an exact match: case-sensitive and whole-string. Default to false. Ignored when locating by a\nregular expression. Note that exact match still trims whitespace."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.getByLabel",
            "type": "Function",
            "tags": [],
            "label": "getByLabel",
            "description": [
              "\nAllows locating input elements by the text of the associated `<label>` or `aria-labelledby` element, or by the\n`aria-label` attribute.\n\n**Usage**\n\nFor example, this method will find inputs by label \"Username\" and \"Password\" in the following DOM:\n\n```html\n<input aria-label=\"Username\">\n<label for=\"password-input\">Password:</label>\n<input id=\"password-input\">\n```\n\n```js\nawait page.getByLabel('Username').fill('john');\nawait page.getByLabel('Password').fill('secret');\n```\n"
            ],
            "signature": [
              "(text: string | RegExp, options?: { exact?: boolean | undefined; } | undefined) => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByLabel.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "text",
                "description": [
                  "Text to locate the element for."
                ],
                "signature": [
                  "string | RegExp"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByLabel.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByLabel.$2.exact",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "exact",
                    "description": [
                      "\nWhether to find an exact match: case-sensitive and whole-string. Default to false. Ignored when locating by a\nregular expression. Note that exact match still trims whitespace."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.getByPlaceholder",
            "type": "Function",
            "tags": [],
            "label": "getByPlaceholder",
            "description": [
              "\nAllows locating input elements by the placeholder text.\n\n**Usage**\n\nFor example, consider the following DOM structure.\n\n```html\n<input type=\"email\" placeholder=\"name@example.com\" />\n```\n\nYou can fill the input after locating it by the placeholder text:\n\n```js\nawait page\n    .getByPlaceholder('name@example.com')\n    .fill('playwright@microsoft.com');\n```\n"
            ],
            "signature": [
              "(text: string | RegExp, options?: { exact?: boolean | undefined; } | undefined) => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByPlaceholder.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "text",
                "description": [
                  "Text to locate the element for."
                ],
                "signature": [
                  "string | RegExp"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByPlaceholder.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByPlaceholder.$2.exact",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "exact",
                    "description": [
                      "\nWhether to find an exact match: case-sensitive and whole-string. Default to false. Ignored when locating by a\nregular expression. Note that exact match still trims whitespace."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.getByRole",
            "type": "Function",
            "tags": [],
            "label": "getByRole",
            "description": [
              "\nAllows locating elements by their [ARIA role](https://www.w3.org/TR/wai-aria-1.2/#roles),\n[ARIA attributes](https://www.w3.org/TR/wai-aria-1.2/#aria-attributes) and\n[accessible name](https://w3c.github.io/accname/#dfn-accessible-name).\n\n**Usage**\n\nConsider the following DOM structure.\n\n```html\n<h3>Sign up</h3>\n<label>\n  <input type=\"checkbox\" /> Subscribe\n</label>\n<br/>\n<button>Submit</button>\n```\n\nYou can locate each element by it's implicit role:\n\n```js\nawait expect(page.getByRole('heading', { name: 'Sign up' })).toBeVisible();\n\nawait page.getByRole('checkbox', { name: 'Subscribe' }).check();\n\nawait page.getByRole('button', { name: /submit/i }).click();\n```\n\n**Details**\n\nRole selector **does not replace** accessibility audits and conformance tests, but rather gives early feedback\nabout the ARIA guidelines.\n\nMany html elements have an implicitly [defined role](https://w3c.github.io/html-aam/#html-element-role-mappings)\nthat is recognized by the role selector. You can find all the\n[supported roles here](https://www.w3.org/TR/wai-aria-1.2/#role_definitions). ARIA guidelines **do not recommend**\nduplicating implicit roles and attributes by setting `role` and/or `aria-*` attributes to default values."
            ],
            "signature": [
              "(role: \"log\" | \"search\" | \"link\" | \"none\" | \"list\" | \"alert\" | \"application\" | \"form\" | \"grid\" | \"group\" | \"status\" | \"code\" | \"main\" | \"article\" | \"blockquote\" | \"button\" | \"caption\" | \"dialog\" | \"figure\" | \"img\" | \"menu\" | \"menuitem\" | \"meter\" | \"option\" | \"strong\" | \"table\" | \"time\" | \"switch\" | \"alertdialog\" | \"banner\" | \"cell\" | \"checkbox\" | \"columnheader\" | \"combobox\" | \"complementary\" | \"contentinfo\" | \"definition\" | \"directory\" | \"document\" | \"feed\" | \"gridcell\" | \"heading\" | \"listbox\" | \"listitem\" | \"marquee\" | \"math\" | \"menubar\" | \"menuitemcheckbox\" | \"menuitemradio\" | \"navigation\" | \"note\" | \"presentation\" | \"progressbar\" | \"radio\" | \"radiogroup\" | \"region\" | \"row\" | \"rowgroup\" | \"rowheader\" | \"scrollbar\" | \"searchbox\" | \"separator\" | \"slider\" | \"spinbutton\" | \"tab\" | \"tablist\" | \"tabpanel\" | \"term\" | \"textbox\" | \"timer\" | \"toolbar\" | \"tooltip\" | \"tree\" | \"treegrid\" | \"treeitem\" | \"generic\" | \"deletion\" | \"emphasis\" | \"insertion\" | \"paragraph\" | \"subscript\" | \"superscript\", options?: { checked?: boolean | undefined; disabled?: boolean | undefined; exact?: boolean | undefined; expanded?: boolean | undefined; includeHidden?: boolean | undefined; level?: number | undefined; name?: string | RegExp | undefined; pressed?: boolean | undefined; selected?: boolean | undefined; } | undefined) => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByRole.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "role",
                "description": [
                  "Required aria role."
                ],
                "signature": [
                  "\"log\" | \"search\" | \"link\" | \"none\" | \"list\" | \"alert\" | \"application\" | \"form\" | \"grid\" | \"group\" | \"status\" | \"code\" | \"main\" | \"article\" | \"blockquote\" | \"button\" | \"caption\" | \"dialog\" | \"figure\" | \"img\" | \"menu\" | \"menuitem\" | \"meter\" | \"option\" | \"strong\" | \"table\" | \"time\" | \"switch\" | \"alertdialog\" | \"banner\" | \"cell\" | \"checkbox\" | \"columnheader\" | \"combobox\" | \"complementary\" | \"contentinfo\" | \"definition\" | \"directory\" | \"document\" | \"feed\" | \"gridcell\" | \"heading\" | \"listbox\" | \"listitem\" | \"marquee\" | \"math\" | \"menubar\" | \"menuitemcheckbox\" | \"menuitemradio\" | \"navigation\" | \"note\" | \"presentation\" | \"progressbar\" | \"radio\" | \"radiogroup\" | \"region\" | \"row\" | \"rowgroup\" | \"rowheader\" | \"scrollbar\" | \"searchbox\" | \"separator\" | \"slider\" | \"spinbutton\" | \"tab\" | \"tablist\" | \"tabpanel\" | \"term\" | \"textbox\" | \"timer\" | \"toolbar\" | \"tooltip\" | \"tree\" | \"treegrid\" | \"treeitem\" | \"generic\" | \"deletion\" | \"emphasis\" | \"insertion\" | \"paragraph\" | \"subscript\" | \"superscript\""
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByRole.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByRole.$2.checked",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "checked",
                    "description": [
                      "\nAn attribute that is usually set by `aria-checked` or native `<input type=checkbox>` controls.\n\nLearn more about [`aria-checked`](https://www.w3.org/TR/wai-aria-1.2/#aria-checked)."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByRole.$2.disabled",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "disabled",
                    "description": [
                      "\nAn attribute that is usually set by `aria-disabled` or `disabled`.\n\n**NOTE** Unlike most other attributes, `disabled` is inherited through the DOM hierarchy. Learn more about\n[`aria-disabled`](https://www.w3.org/TR/wai-aria-1.2/#aria-disabled).\n"
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByRole.$2.exact",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "exact",
                    "description": [
                      "\nWhether [`name`](https://playwright.dev/docs/api/class-locator#locator-get-by-role-option-name) is matched exactly:\ncase-sensitive and whole-string. Defaults to false. Ignored when\n[`name`](https://playwright.dev/docs/api/class-locator#locator-get-by-role-option-name) is a regular expression.\nNote that exact match still trims whitespace."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByRole.$2.expanded",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "expanded",
                    "description": [
                      "\nAn attribute that is usually set by `aria-expanded`.\n\nLearn more about [`aria-expanded`](https://www.w3.org/TR/wai-aria-1.2/#aria-expanded)."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByRole.$2.includeHidden",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "includeHidden",
                    "description": [
                      "\nOption that controls whether hidden elements are matched. By default, only non-hidden elements, as\n[defined by ARIA](https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion), are matched by role selector.\n\nLearn more about [`aria-hidden`](https://www.w3.org/TR/wai-aria-1.2/#aria-hidden)."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByRole.$2.level",
                    "type": "number",
                    "tags": [],
                    "label": "level",
                    "description": [
                      "\nA number attribute that is usually present for roles `heading`, `listitem`, `row`, `treeitem`, with default values\nfor `<h1>-<h6>` elements.\n\nLearn more about [`aria-level`](https://www.w3.org/TR/wai-aria-1.2/#aria-level)."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByRole.$2.name",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "name",
                    "description": [
                      "\nOption to match the [accessible name](https://w3c.github.io/accname/#dfn-accessible-name). By default, matching is\ncase-insensitive and searches for a substring, use\n[`exact`](https://playwright.dev/docs/api/class-locator#locator-get-by-role-option-exact) to control this behavior.\n\nLearn more about [accessible name](https://w3c.github.io/accname/#dfn-accessible-name)."
                    ],
                    "signature": [
                      "string | RegExp | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByRole.$2.pressed",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "pressed",
                    "description": [
                      "\nAn attribute that is usually set by `aria-pressed`.\n\nLearn more about [`aria-pressed`](https://www.w3.org/TR/wai-aria-1.2/#aria-pressed)."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByRole.$2.selected",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "selected",
                    "description": [
                      "\nAn attribute that is usually set by `aria-selected`.\n\nLearn more about [`aria-selected`](https://www.w3.org/TR/wai-aria-1.2/#aria-selected)."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.getByTestId",
            "type": "Function",
            "tags": [],
            "label": "getByTestId",
            "description": [
              "\nLocate element by the test id.\n\n**Usage**\n\nConsider the following DOM structure.\n\n```html\n<button data-testid=\"directions\">Itinéraire</button>\n```\n\nYou can locate the element by it's test id:\n\n```js\nawait page.getByTestId('directions').click();\n```\n\n**Details**\n\nBy default, the `data-testid` attribute is used as a test id. Use\n[selectors.setTestIdAttribute(attributeName)](https://playwright.dev/docs/api/class-selectors#selectors-set-test-id-attribute)\nto configure a different test id attribute if necessary.\n\n```js\n// Set custom test id attribute from @playwright/test config:\nimport { defineConfig } from '@playwright/test';\n\nexport default defineConfig({\n  use: {\n    testIdAttribute: 'data-pw'\n  },\n});\n```\n"
            ],
            "signature": [
              "(testId: string | RegExp) => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByTestId.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "testId",
                "description": [
                  "Id to locate the element by."
                ],
                "signature": [
                  "string | RegExp"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.getByText",
            "type": "Function",
            "tags": [],
            "label": "getByText",
            "description": [
              "\nAllows locating elements that contain given text.\n\nSee also [locator.filter([options])](https://playwright.dev/docs/api/class-locator#locator-filter) that allows to\nmatch by another criteria, like an accessible role, and then filter by the text content.\n\n**Usage**\n\nConsider the following DOM structure:\n\n```html\n<div>Hello <span>world</span></div>\n<div>Hello</div>\n```\n\nYou can locate by text substring, exact string, or a regular expression:\n\n```js\n// Matches <span>\npage.getByText('world');\n\n// Matches first <div>\npage.getByText('Hello world');\n\n// Matches second <div>\npage.getByText('Hello', { exact: true });\n\n// Matches both <div>s\npage.getByText(/Hello/);\n\n// Matches second <div>\npage.getByText(/^hello$/i);\n```\n\n**Details**\n\nMatching by text always normalizes whitespace, even with exact match. For example, it turns multiple spaces into\none, turns line breaks into spaces and ignores leading and trailing whitespace.\n\nInput elements of the type `button` and `submit` are matched by their `value` instead of the text content. For\nexample, locating by text `\"Log in\"` matches `<input type=button value=\"Log in\">`."
            ],
            "signature": [
              "(text: string | RegExp, options?: { exact?: boolean | undefined; } | undefined) => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByText.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "text",
                "description": [
                  "Text to locate the element for."
                ],
                "signature": [
                  "string | RegExp"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByText.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByText.$2.exact",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "exact",
                    "description": [
                      "\nWhether to find an exact match: case-sensitive and whole-string. Default to false. Ignored when locating by a\nregular expression. Note that exact match still trims whitespace."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.getByTitle",
            "type": "Function",
            "tags": [],
            "label": "getByTitle",
            "description": [
              "\nAllows locating elements by their title attribute.\n\n**Usage**\n\nConsider the following DOM structure.\n\n```html\n<span title='Issues count'>25 issues</span>\n```\n\nYou can check the issues count after locating it by the title text:\n\n```js\nawait expect(page.getByTitle('Issues count')).toHaveText('25 issues');\n```\n"
            ],
            "signature": [
              "(text: string | RegExp, options?: { exact?: boolean | undefined; } | undefined) => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByTitle.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "text",
                "description": [
                  "Text to locate the element for."
                ],
                "signature": [
                  "string | RegExp"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.getByTitle.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.getByTitle.$2.exact",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "exact",
                    "description": [
                      "\nWhether to find an exact match: case-sensitive and whole-string. Default to false. Ignored when locating by a\nregular expression. Note that exact match still trims whitespace."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.highlight",
            "type": "Function",
            "tags": [],
            "label": "highlight",
            "description": [
              "\nHighlight the corresponding element(s) on the screen. Useful for debugging, don't commit the code that uses\n[locator.highlight()](https://playwright.dev/docs/api/class-locator#locator-highlight)."
            ],
            "signature": [
              "() => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.hover",
            "type": "Function",
            "tags": [],
            "label": "hover",
            "description": [
              "\nHover over the matching element.\n\n**Usage**\n\n```js\nawait page.getByRole('link').hover();\n```\n\n**Details**\n\nThis method hovers over the element by performing the following steps:\n1. Wait for [actionability](https://playwright.dev/docs/actionability) checks on the element, unless\n   [`force`](https://playwright.dev/docs/api/class-locator#locator-hover-option-force) option is set.\n1. Scroll the element into view if needed.\n1. Use [page.mouse](https://playwright.dev/docs/api/class-page#page-mouse) to hover over the center of the\n   element, or the specified\n   [`position`](https://playwright.dev/docs/api/class-locator#locator-hover-option-position).\n\nIf the element is detached from the DOM at any moment during the action, this method throws.\n\nWhen all steps combined have not finished during the specified\n[`timeout`](https://playwright.dev/docs/api/class-locator#locator-hover-option-timeout), this method throws a\n[TimeoutError](https://playwright.dev/docs/api/class-timeouterror). Passing zero timeout disables this."
            ],
            "signature": [
              "(options?: { force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.hover.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.hover.$1.force",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "force",
                    "description": [
                      "\nWhether to bypass the [actionability](https://playwright.dev/docs/actionability) checks. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.hover.$1.modifiers",
                    "type": "Array",
                    "tags": [],
                    "label": "modifiers",
                    "description": [
                      "\nModifier keys to press. Ensures that only these modifiers are pressed during the operation, and then restores\ncurrent modifiers back. If not specified, currently pressed modifiers are used. \"ControlOrMeta\" resolves to\n\"Control\" on Windows and Linux and to \"Meta\" on macOS."
                    ],
                    "signature": [
                      "(\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.hover.$1.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.hover.$1.position",
                    "type": "Object",
                    "tags": [],
                    "label": "position",
                    "description": [
                      "\nA point to use relative to the top-left corner of element padding box. If not specified, uses some visible point of\nthe element."
                    ],
                    "signature": [
                      "{ x: number; y: number; } | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.hover.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.hover.$1.trial",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "trial",
                    "description": [
                      "\nWhen set, this method only performs the [actionability](https://playwright.dev/docs/actionability) checks and skips the action. Defaults\nto `false`. Useful to wait until the element is ready for the action without performing it. Note that keyboard\n`modifiers` will be pressed regardless of `trial` to allow testing elements which are only visible when those keys\nare pressed."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.innerHTML",
            "type": "Function",
            "tags": [],
            "label": "innerHTML",
            "description": [
              "\nReturns the [`element.innerHTML`](https://developer.mozilla.org/en-US/docs/Web/API/Element/innerHTML)."
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<string>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.innerHTML.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.innerHTML.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.innerText",
            "type": "Function",
            "tags": [],
            "label": "innerText",
            "description": [
              "\nReturns the [`element.innerText`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/innerText).\n\n**NOTE** If you need to assert text on the page, prefer\n[expect(locator).toHaveText(expected[, options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-have-text)\nwith\n[`useInnerText`](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-have-text-option-use-inner-text)\noption to avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n"
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<string>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.innerText.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.innerText.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.inputValue",
            "type": "Function",
            "tags": [],
            "label": "inputValue",
            "description": [
              "\nReturns the value for the matching `<input>` or `<textarea>` or `<select>` element.\n\n**NOTE** If you need to assert input value, prefer\n[expect(locator).toHaveValue(value[, options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-have-value)\nto avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n\n**Usage**\n\n```js\nconst value = await page.getByRole('textbox').inputValue();\n```\n\n**Details**\n\nThrows elements that are not an input, textarea or a select. However, if the element is inside the `<label>`\nelement that has an associated\n[control](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control), returns the value of the\ncontrol."
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<string>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.inputValue.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.inputValue.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.isChecked",
            "type": "Function",
            "tags": [],
            "label": "isChecked",
            "description": [
              "\nReturns whether the element is checked. Throws if the element is not a checkbox or radio input.\n\n**NOTE** If you need to assert that checkbox is checked, prefer\n[expect(locator).toBeChecked([options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-be-checked)\nto avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n\n**Usage**\n\n```js\nconst checked = await page.getByRole('checkbox').isChecked();\n```\n"
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<boolean>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.isChecked.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.isChecked.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.isDisabled",
            "type": "Function",
            "tags": [],
            "label": "isDisabled",
            "description": [
              "\nReturns whether the element is disabled, the opposite of [enabled](https://playwright.dev/docs/actionability#enabled).\n\n**NOTE** If you need to assert that an element is disabled, prefer\n[expect(locator).toBeDisabled([options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-be-disabled)\nto avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n\n**Usage**\n\n```js\nconst disabled = await page.getByRole('button').isDisabled();\n```\n"
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<boolean>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.isDisabled.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.isDisabled.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.isEditable",
            "type": "Function",
            "tags": [],
            "label": "isEditable",
            "description": [
              "\nReturns whether the element is [editable](https://playwright.dev/docs/actionability#editable).\n\n**NOTE** If you need to assert that an element is editable, prefer\n[expect(locator).toBeEditable([options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-be-editable)\nto avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n\n**Usage**\n\n```js\nconst editable = await page.getByRole('textbox').isEditable();\n```\n"
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<boolean>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.isEditable.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.isEditable.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.isEnabled",
            "type": "Function",
            "tags": [],
            "label": "isEnabled",
            "description": [
              "\nReturns whether the element is [enabled](https://playwright.dev/docs/actionability#enabled).\n\n**NOTE** If you need to assert that an element is enabled, prefer\n[expect(locator).toBeEnabled([options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-be-enabled)\nto avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n\n**Usage**\n\n```js\nconst enabled = await page.getByRole('button').isEnabled();\n```\n"
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<boolean>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.isEnabled.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.isEnabled.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.isHidden",
            "type": "Function",
            "tags": [],
            "label": "isHidden",
            "description": [
              "\nReturns whether the element is hidden, the opposite of [visible](https://playwright.dev/docs/actionability#visible).\n\n**NOTE** If you need to assert that element is hidden, prefer\n[expect(locator).toBeHidden([options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-be-hidden)\nto avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n\n**Usage**\n\n```js\nconst hidden = await page.getByRole('button').isHidden();\n```\n"
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<boolean>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.isHidden.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.isHidden.$1.timeout",
                    "type": "number",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "timeout",
                    "description": [],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.isVisible",
            "type": "Function",
            "tags": [],
            "label": "isVisible",
            "description": [
              "\nReturns whether the element is [visible](https://playwright.dev/docs/actionability#visible).\n\n**NOTE** If you need to assert that element is visible, prefer\n[expect(locator).toBeVisible([options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-be-visible)\nto avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n\n**Usage**\n\n```js\nconst visible = await page.getByRole('button').isVisible();\n```\n"
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<boolean>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.isVisible.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.isVisible.$1.timeout",
                    "type": "number",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "timeout",
                    "description": [],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.last",
            "type": "Function",
            "tags": [],
            "label": "last",
            "description": [
              "\nReturns locator to the last matching element.\n\n**Usage**\n\n```js\nconst banana = await page.getByRole('listitem').last();\n```\n"
            ],
            "signature": [
              "() => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.locator",
            "type": "Function",
            "tags": [],
            "label": "locator",
            "description": [
              "\nThe method finds an element matching the specified selector in the locator's subtree. It also accepts filter\noptions, similar to [locator.filter([options])](https://playwright.dev/docs/api/class-locator#locator-filter)\nmethod.\n\n[Learn more about locators](https://playwright.dev/docs/locators)."
            ],
            "signature": [
              "(selectorOrLocator: string | ",
              "Locator",
              ", options?: { has?: ",
              "Locator",
              " | undefined; hasNot?: ",
              "Locator",
              " | undefined; hasNotText?: string | RegExp | undefined; hasText?: string | RegExp | undefined; } | undefined) => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.locator.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "selectorOrLocator",
                "description": [
                  "A selector or locator to use when resolving DOM element."
                ],
                "signature": [
                  "string | ",
                  "Locator"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.locator.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.locator.$2.has",
                    "type": "Object",
                    "tags": [],
                    "label": "has",
                    "description": [
                      "\nNarrows down the results of the method to those which contain elements matching this relative locator. For example,\n`article` that has `text=Playwright` matches `<article><div>Playwright</div></article>`.\n\nInner locator **must be relative** to the outer locator and is queried starting with the outer locator match, not\nthe document root. For example, you can find `content` that has `div` in\n`<article><content><div>Playwright</div></content></article>`. However, looking for `content` that has `article\ndiv` will fail, because the inner locator must be relative and should not use any elements outside the `content`.\n\nNote that outer and inner locators must belong to the same frame. Inner locator must not contain\n[FrameLocator](https://playwright.dev/docs/api/class-framelocator)s."
                    ],
                    "signature": [
                      "Locator",
                      " | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.locator.$2.hasNot",
                    "type": "Object",
                    "tags": [],
                    "label": "hasNot",
                    "description": [
                      "\nMatches elements that do not contain an element that matches an inner locator. Inner locator is queried against the\nouter one. For example, `article` that does not have `div` matches `<article><span>Playwright</span></article>`.\n\nNote that outer and inner locators must belong to the same frame. Inner locator must not contain\n[FrameLocator](https://playwright.dev/docs/api/class-framelocator)s."
                    ],
                    "signature": [
                      "Locator",
                      " | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.locator.$2.hasNotText",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "hasNotText",
                    "description": [
                      "\nMatches elements that do not contain specified text somewhere inside, possibly in a child or a descendant element.\nWhen passed a [string], matching is case-insensitive and searches for a substring."
                    ],
                    "signature": [
                      "string | RegExp | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.locator.$2.hasText",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "hasText",
                    "description": [
                      "\nMatches elements containing specified text somewhere inside, possibly in a child or a descendant element. When\npassed a [string], matching is case-insensitive and searches for a substring. For example, `\"Playwright\"` matches\n`<article><div>Playwright</div></article>`."
                    ],
                    "signature": [
                      "string | RegExp | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.nth",
            "type": "Function",
            "tags": [],
            "label": "nth",
            "description": [
              "\nReturns locator to the n-th matching element. It's zero based, `nth(0)` selects the first element.\n\n**Usage**\n\n```js\nconst banana = await page.getByRole('listitem').nth(2);\n```\n"
            ],
            "signature": [
              "(index: number) => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.nth.$1",
                "type": "number",
                "tags": [],
                "label": "index",
                "description": [],
                "signature": [
                  "number"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.or",
            "type": "Function",
            "tags": [],
            "label": "or",
            "description": [
              "\nCreates a locator matching all elements that match one or both of the two locators.\n\nNote that when both locators match something, the resulting locator will have multiple matches and violate\n[locator strictness](https://playwright.dev/docs/locators#strictness) guidelines.\n\n**Usage**\n\nConsider a scenario where you'd like to click on a \"New email\" button, but sometimes a security settings dialog\nshows up instead. In this case, you can wait for either a \"New email\" button, or a dialog and act accordingly.\n\n```js\nconst newEmail = page.getByRole('button', { name: 'New' });\nconst dialog = page.getByText('Confirm security settings');\nawait expect(newEmail.or(dialog)).toBeVisible();\nif (await dialog.isVisible())\n  await page.getByRole('button', { name: 'Dismiss' }).click();\nawait newEmail.click();\n```\n"
            ],
            "signature": [
              "(locator: ",
              "Locator",
              ") => ",
              "Locator"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.or.$1",
                "type": "Object",
                "tags": [],
                "label": "locator",
                "description": [
                  "Alternative locator to match."
                ],
                "signature": [
                  "Locator"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.page",
            "type": "Function",
            "tags": [],
            "label": "page",
            "description": [
              "\nA page this locator belongs to."
            ],
            "signature": [
              "() => ",
              "Page"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.press",
            "type": "Function",
            "tags": [],
            "label": "press",
            "description": [
              "\nFocuses the matching element and presses a combination of the keys.\n\n**Usage**\n\n```js\nawait page.getByRole('textbox').press('Backspace');\n```\n\n**Details**\n\nFocuses the element, and then uses\n[keyboard.down(key)](https://playwright.dev/docs/api/class-keyboard#keyboard-down) and\n[keyboard.up(key)](https://playwright.dev/docs/api/class-keyboard#keyboard-up).\n\n[`key`](https://playwright.dev/docs/api/class-locator#locator-press-option-key) can specify the intended\n[keyboardEvent.key](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key) value or a single character\nto generate the text for. A superset of the\n[`key`](https://playwright.dev/docs/api/class-locator#locator-press-option-key) values can be found\n[here](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/key/Key_Values). Examples of the keys are:\n\n`F1` - `F12`, `Digit0`- `Digit9`, `KeyA`- `KeyZ`, `Backquote`, `Minus`, `Equal`, `Backslash`, `Backspace`, `Tab`,\n`Delete`, `Escape`, `ArrowDown`, `End`, `Enter`, `Home`, `Insert`, `PageDown`, `PageUp`, `ArrowRight`, `ArrowUp`,\netc.\n\nFollowing modification shortcuts are also supported: `Shift`, `Control`, `Alt`, `Meta`, `ShiftLeft`,\n`ControlOrMeta`. `ControlOrMeta` resolves to `Control` on Windows and Linux and to `Meta` on macOS.\n\nHolding down `Shift` will type the text that corresponds to the\n[`key`](https://playwright.dev/docs/api/class-locator#locator-press-option-key) in the upper case.\n\nIf [`key`](https://playwright.dev/docs/api/class-locator#locator-press-option-key) is a single character, it is\ncase-sensitive, so the values `a` and `A` will generate different respective texts.\n\nShortcuts such as `key: \"Control+o\"`, `key: \"Control++` or `key: \"Control+Shift+T\"` are supported as well. When\nspecified with the modifier, modifier is pressed and being held while the subsequent key is being pressed."
            ],
            "signature": [
              "(key: string, options?: { delay?: number | undefined; noWaitAfter?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.press.$1",
                "type": "string",
                "tags": [],
                "label": "key",
                "description": [
                  "Name of the key to press or a character to generate, such as `ArrowLeft` or `a`."
                ],
                "signature": [
                  "string"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.press.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.press.$2.delay",
                    "type": "number",
                    "tags": [],
                    "label": "delay",
                    "description": [
                      "\nTime to wait between `keydown` and `keyup` in milliseconds. Defaults to 0."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.press.$2.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nActions that initiate navigations are waiting for these navigations to happen and for pages to start loading. You\ncan opt out of waiting via setting this flag. You would only need this option in the exceptional cases such as\nnavigating to inaccessible pages. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.press.$2.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.pressSequentially",
            "type": "Function",
            "tags": [],
            "label": "pressSequentially",
            "description": [
              "\n**NOTE** In most cases, you should use\n[locator.fill(value[, options])](https://playwright.dev/docs/api/class-locator#locator-fill) instead. You only need\nto press keys one by one if there is special keyboard handling on the page.\n\nFocuses the element, and then sends a `keydown`, `keypress`/`input`, and `keyup` event for each character in the\ntext.\n\nTo press a special key, like `Control` or `ArrowDown`, use\n[locator.press(key[, options])](https://playwright.dev/docs/api/class-locator#locator-press).\n\n**Usage**\n\n```js\nawait locator.pressSequentially('Hello'); // Types instantly\nawait locator.pressSequentially('World', { delay: 100 }); // Types slower, like a user\n```\n\nAn example of typing into a text field and then submitting the form:\n\n```js\nconst locator = page.getByLabel('Password');\nawait locator.pressSequentially('my password');\nawait locator.press('Enter');\n```\n"
            ],
            "signature": [
              "(text: string, options?: { delay?: number | undefined; noWaitAfter?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.pressSequentially.$1",
                "type": "string",
                "tags": [],
                "label": "text",
                "description": [
                  "String of characters to sequentially press into a focused element."
                ],
                "signature": [
                  "string"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.pressSequentially.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.pressSequentially.$2.delay",
                    "type": "number",
                    "tags": [],
                    "label": "delay",
                    "description": [
                      "\nTime to wait between key presses in milliseconds. Defaults to 0."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.pressSequentially.$2.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.pressSequentially.$2.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.screenshot",
            "type": "Function",
            "tags": [],
            "label": "screenshot",
            "description": [
              "\nTake a screenshot of the element matching the locator.\n\n**Usage**\n\n```js\nawait page.getByRole('link').screenshot();\n```\n\nDisable animations and save screenshot to a file:\n\n```js\nawait page.getByRole('link').screenshot({ animations: 'disabled', path: 'link.png' });\n```\n\n**Details**\n\nThis method captures a screenshot of the page, clipped to the size and position of a particular element matching\nthe locator. If the element is covered by other elements, it will not be actually visible on the screenshot. If the\nelement is a scrollable container, only the currently scrolled content will be visible on the screenshot.\n\nThis method waits for the [actionability](https://playwright.dev/docs/actionability) checks, then scrolls element into view before taking\na screenshot. If the element is detached from DOM, the method throws an error.\n\nReturns the buffer with the captured screenshot."
            ],
            "signature": [
              "(options?: ",
              "LocatorScreenshotOptions",
              " | undefined) => Promise<Buffer>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.screenshot.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "signature": [
                  "LocatorScreenshotOptions",
                  " | undefined"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.scrollIntoViewIfNeeded",
            "type": "Function",
            "tags": [],
            "label": "scrollIntoViewIfNeeded",
            "description": [
              "\nThis method waits for [actionability](https://playwright.dev/docs/actionability) checks, then tries to scroll element into view, unless\nit is completely visible as defined by\n[IntersectionObserver](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API)'s `ratio`.\n\nSee [scrolling](https://playwright.dev/docs/input#scrolling) for alternative ways to scroll."
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.scrollIntoViewIfNeeded.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.scrollIntoViewIfNeeded.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.selectOption",
            "type": "Function",
            "tags": [],
            "label": "selectOption",
            "description": [
              "\nSelects option or options in `<select>`.\n\n**Details**\n\nThis method waits for [actionability](https://playwright.dev/docs/actionability) checks, waits until all specified options are present in\nthe `<select>` element and selects these options.\n\nIf the target element is not a `<select>` element, this method throws an error. However, if the element is inside\nthe `<label>` element that has an associated\n[control](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control), the control will be used\ninstead.\n\nReturns the array of option values that have been successfully selected.\n\nTriggers a `change` and `input` event once all the provided options have been selected.\n\n**Usage**\n\n```html\n<select multiple>\n  <option value=\"red\">Red</div>\n  <option value=\"green\">Green</div>\n  <option value=\"blue\">Blue</div>\n</select>\n```\n\n```js\n// single selection matching the value or label\nelement.selectOption('blue');\n\n// single selection matching the label\nelement.selectOption({ label: 'Blue' });\n\n// multiple selection for red, green and blue options\nelement.selectOption(['red', 'green', 'blue']);\n```\n"
            ],
            "signature": [
              "(values: string | readonly string[] | ",
              "ElementHandle",
              "<Node> | { value?: string | undefined; label?: string | undefined; index?: number | undefined; } | readonly ",
              "ElementHandle",
              "<Node>[] | readonly { value?: string | undefined; label?: string | undefined; index?: number | undefined; }[] | null, options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<string[]>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.selectOption.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "values",
                "description": [
                  "Options to select. If the `<select>` has the `multiple` attribute, all matching options are selected, otherwise\nonly the first option matching one of the passed options is selected. String values are matching both values and\nlabels. Option is considered matching if all specified properties match."
                ],
                "signature": [
                  "string | readonly string[] | ",
                  "ElementHandle",
                  "<Node> | { value?: string | undefined; label?: string | undefined; index?: number | undefined; } | readonly ",
                  "ElementHandle",
                  "<Node>[] | readonly { value?: string | undefined; label?: string | undefined; index?: number | undefined; }[] | null"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": false
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.selectOption.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.selectOption.$2.force",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "force",
                    "description": [
                      "\nWhether to bypass the [actionability](https://playwright.dev/docs/actionability) checks. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.selectOption.$2.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.selectOption.$2.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.selectText",
            "type": "Function",
            "tags": [],
            "label": "selectText",
            "description": [
              "\nThis method waits for [actionability](https://playwright.dev/docs/actionability) checks, then focuses the element and selects all its\ntext content.\n\nIf the element is inside the `<label>` element that has an associated\n[control](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control), focuses and selects text in\nthe control instead."
            ],
            "signature": [
              "(options?: { force?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.selectText.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.selectText.$1.force",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "force",
                    "description": [
                      "\nWhether to bypass the [actionability](https://playwright.dev/docs/actionability) checks. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.selectText.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.setChecked",
            "type": "Function",
            "tags": [],
            "label": "setChecked",
            "description": [
              "\nSet the state of a checkbox or a radio element.\n\n**Usage**\n\n```js\nawait page.getByRole('checkbox').setChecked(true);\n```\n\n**Details**\n\nThis method checks or unchecks an element by performing the following steps:\n1. Ensure that matched element is a checkbox or a radio input. If not, this method throws.\n1. If the element already has the right checked state, this method returns immediately.\n1. Wait for [actionability](https://playwright.dev/docs/actionability) checks on the matched element, unless\n   [`force`](https://playwright.dev/docs/api/class-locator#locator-set-checked-option-force) option is set. If\n   the element is detached during the checks, the whole action is retried.\n1. Scroll the element into view if needed.\n1. Use [page.mouse](https://playwright.dev/docs/api/class-page#page-mouse) to click in the center of the\n   element.\n1. Ensure that the element is now checked or unchecked. If not, this method throws.\n\nWhen all steps combined have not finished during the specified\n[`timeout`](https://playwright.dev/docs/api/class-locator#locator-set-checked-option-timeout), this method throws a\n[TimeoutError](https://playwright.dev/docs/api/class-timeouterror). Passing zero timeout disables this."
            ],
            "signature": [
              "(checked: boolean, options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.setChecked.$1",
                "type": "boolean",
                "tags": [],
                "label": "checked",
                "description": [
                  "Whether to check or uncheck the checkbox."
                ],
                "signature": [
                  "boolean"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.setChecked.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.setChecked.$2.force",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "force",
                    "description": [
                      "\nWhether to bypass the [actionability](https://playwright.dev/docs/actionability) checks. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.setChecked.$2.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.setChecked.$2.position",
                    "type": "Object",
                    "tags": [],
                    "label": "position",
                    "description": [
                      "\nA point to use relative to the top-left corner of element padding box. If not specified, uses some visible point of\nthe element."
                    ],
                    "signature": [
                      "{ x: number; y: number; } | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.setChecked.$2.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.setChecked.$2.trial",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "trial",
                    "description": [
                      "\nWhen set, this method only performs the [actionability](https://playwright.dev/docs/actionability) checks and skips the action. Defaults\nto `false`. Useful to wait until the element is ready for the action without performing it."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.setInputFiles",
            "type": "Function",
            "tags": [],
            "label": "setInputFiles",
            "description": [
              "\nUpload file or multiple files into `<input type=file>`. For inputs with a `[webkitdirectory]` attribute, only a\nsingle directory path is supported.\n\n**Usage**\n\n```js\n// Select one file\nawait page.getByLabel('Upload file').setInputFiles(path.join(__dirname, 'myfile.pdf'));\n\n// Select multiple files\nawait page.getByLabel('Upload files').setInputFiles([\n  path.join(__dirname, 'file1.txt'),\n  path.join(__dirname, 'file2.txt'),\n]);\n\n// Select a directory\nawait page.getByLabel('Upload directory').setInputFiles(path.join(__dirname, 'mydir'));\n\n// Remove all the selected files\nawait page.getByLabel('Upload file').setInputFiles([]);\n\n// Upload buffer from memory\nawait page.getByLabel('Upload file').setInputFiles({\n  name: 'file.txt',\n  mimeType: 'text/plain',\n  buffer: Buffer.from('this is test')\n});\n```\n\n**Details**\n\nSets the value of the file input to these file paths or files. If some of the `filePaths` are relative paths, then\nthey are resolved relative to the current working directory. For empty array, clears the selected files.\n\nThis method expects [Locator](https://playwright.dev/docs/api/class-locator) to point to an\n[input element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input). However, if the element is inside\nthe `<label>` element that has an associated\n[control](https://developer.mozilla.org/en-US/docs/Web/API/HTMLLabelElement/control), targets the control instead."
            ],
            "signature": [
              "(files: string | readonly string[] | { name: string; mimeType: string; buffer: Buffer; } | readonly { name: string; mimeType: string; buffer: Buffer; }[], options?: { noWaitAfter?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.setInputFiles.$1",
                "type": "CompoundType",
                "tags": [],
                "label": "files",
                "description": [],
                "signature": [
                  "string | readonly string[] | { name: string; mimeType: string; buffer: Buffer; } | readonly { name: string; mimeType: string; buffer: Buffer; }[]"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.setInputFiles.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.setInputFiles.$2.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.setInputFiles.$2.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.tap",
            "type": "Function",
            "tags": [],
            "label": "tap",
            "description": [
              "\nPerform a tap gesture on the element matching the locator.\n\n**Details**\n\nThis method taps the element by performing the following steps:\n1. Wait for [actionability](https://playwright.dev/docs/actionability) checks on the element, unless\n   [`force`](https://playwright.dev/docs/api/class-locator#locator-tap-option-force) option is set.\n1. Scroll the element into view if needed.\n1. Use [page.touchscreen](https://playwright.dev/docs/api/class-page#page-touchscreen) to tap the center of the\n   element, or the specified\n   [`position`](https://playwright.dev/docs/api/class-locator#locator-tap-option-position).\n\nIf the element is detached from the DOM at any moment during the action, this method throws.\n\nWhen all steps combined have not finished during the specified\n[`timeout`](https://playwright.dev/docs/api/class-locator#locator-tap-option-timeout), this method throws a\n[TimeoutError](https://playwright.dev/docs/api/class-timeouterror). Passing zero timeout disables this.\n\n**NOTE** `element.tap()` requires that the `hasTouch` option of the browser context be set to true.\n"
            ],
            "signature": [
              "(options?: { force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.tap.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.tap.$1.force",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "force",
                    "description": [
                      "\nWhether to bypass the [actionability](https://playwright.dev/docs/actionability) checks. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.tap.$1.modifiers",
                    "type": "Array",
                    "tags": [],
                    "label": "modifiers",
                    "description": [
                      "\nModifier keys to press. Ensures that only these modifiers are pressed during the operation, and then restores\ncurrent modifiers back. If not specified, currently pressed modifiers are used. \"ControlOrMeta\" resolves to\n\"Control\" on Windows and Linux and to \"Meta\" on macOS."
                    ],
                    "signature": [
                      "(\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.tap.$1.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.tap.$1.position",
                    "type": "Object",
                    "tags": [],
                    "label": "position",
                    "description": [
                      "\nA point to use relative to the top-left corner of element padding box. If not specified, uses some visible point of\nthe element."
                    ],
                    "signature": [
                      "{ x: number; y: number; } | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.tap.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.tap.$1.trial",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "trial",
                    "description": [
                      "\nWhen set, this method only performs the [actionability](https://playwright.dev/docs/actionability) checks and skips the action. Defaults\nto `false`. Useful to wait until the element is ready for the action without performing it. Note that keyboard\n`modifiers` will be pressed regardless of `trial` to allow testing elements which are only visible when those keys\nare pressed."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.textContent",
            "type": "Function",
            "tags": [],
            "label": "textContent",
            "description": [
              "\nReturns the [`node.textContent`](https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent).\n\n**NOTE** If you need to assert text on the page, prefer\n[expect(locator).toHaveText(expected[, options])](https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-have-text)\nto avoid flakiness. See [assertions guide](https://playwright.dev/docs/test-assertions) for more details.\n"
            ],
            "signature": [
              "(options?: { timeout?: number | undefined; } | undefined) => Promise<string | null>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.textContent.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.textContent.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.type",
            "type": "Function",
            "tags": [
              "deprecated"
            ],
            "label": "type",
            "description": [
              "\nFocuses the element, and then sends a `keydown`, `keypress`/`input`, and `keyup` event for each character in the\ntext.\n\nTo press a special key, like `Control` or `ArrowDown`, use\n[locator.press(key[, options])](https://playwright.dev/docs/api/class-locator#locator-press).\n\n**Usage**"
            ],
            "signature": [
              "(text: string, options?: { delay?: number | undefined; noWaitAfter?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": true,
            "trackAdoption": false,
            "references": [],
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.type.$1",
                "type": "string",
                "tags": [],
                "label": "text",
                "description": [
                  "A text to type into a focused element."
                ],
                "signature": [
                  "string"
                ],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "isRequired": true
              },
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.type.$2",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.type.$2.delay",
                    "type": "number",
                    "tags": [],
                    "label": "delay",
                    "description": [
                      "\nTime to wait between key presses in milliseconds. Defaults to 0."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.type.$2.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.type.$2.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.uncheck",
            "type": "Function",
            "tags": [],
            "label": "uncheck",
            "description": [
              "\nEnsure that checkbox or radio element is unchecked.\n\n**Usage**\n\n```js\nawait page.getByRole('checkbox').uncheck();\n```\n\n**Details**\n\nThis method unchecks the element by performing the following steps:\n1. Ensure that element is a checkbox or a radio input. If not, this method throws. If the element is already\n   unchecked, this method returns immediately.\n1. Wait for [actionability](https://playwright.dev/docs/actionability) checks on the element, unless\n   [`force`](https://playwright.dev/docs/api/class-locator#locator-uncheck-option-force) option is set.\n1. Scroll the element into view if needed.\n1. Use [page.mouse](https://playwright.dev/docs/api/class-page#page-mouse) to click in the center of the\n   element.\n1. Ensure that the element is now unchecked. If not, this method throws.\n\nIf the element is detached from the DOM at any moment during the action, this method throws.\n\nWhen all steps combined have not finished during the specified\n[`timeout`](https://playwright.dev/docs/api/class-locator#locator-uncheck-option-timeout), this method throws a\n[TimeoutError](https://playwright.dev/docs/api/class-timeouterror). Passing zero timeout disables this."
            ],
            "signature": [
              "(options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.uncheck.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.uncheck.$1.force",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "force",
                    "description": [
                      "\nWhether to bypass the [actionability](https://playwright.dev/docs/actionability) checks. Defaults to `false`."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.uncheck.$1.noWaitAfter",
                    "type": "CompoundType",
                    "tags": [
                      "deprecated"
                    ],
                    "label": "noWaitAfter",
                    "description": [
                      "\nThis option has no effect."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": true,
                    "trackAdoption": false,
                    "references": []
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.uncheck.$1.position",
                    "type": "Object",
                    "tags": [],
                    "label": "position",
                    "description": [
                      "\nA point to use relative to the top-left corner of element padding box. If not specified, uses some visible point of\nthe element."
                    ],
                    "signature": [
                      "{ x: number; y: number; } | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.uncheck.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.uncheck.$1.trial",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "trial",
                    "description": [
                      "\nWhen set, this method only performs the [actionability](https://playwright.dev/docs/actionability) checks and skips the action. Defaults\nto `false`. Useful to wait until the element is ready for the action without performing it."
                    ],
                    "signature": [
                      "boolean | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.Locator.waitFor",
            "type": "Function",
            "tags": [],
            "label": "waitFor",
            "description": [
              "\nReturns when element specified by locator satisfies the\n[`state`](https://playwright.dev/docs/api/class-locator#locator-wait-for-option-state) option.\n\nIf target element already satisfies the condition, the method returns immediately. Otherwise, waits for up to\n[`timeout`](https://playwright.dev/docs/api/class-locator#locator-wait-for-option-timeout) milliseconds until the\ncondition is met.\n\n**Usage**\n\n```js\nconst orderSent = page.locator('#order-sent');\nawait orderSent.waitFor();\n```\n"
            ],
            "signature": [
              "(options?: { state?: \"hidden\" | \"visible\" | \"detached\" | \"attached\" | undefined; timeout?: number | undefined; } | undefined) => Promise<void>"
            ],
            "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
            "deprecated": false,
            "trackAdoption": false,
            "children": [
              {
                "parentPluginId": "@kbn/scout-oblt",
                "id": "def-common.Locator.waitFor.$1",
                "type": "Object",
                "tags": [],
                "label": "options",
                "description": [],
                "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                "deprecated": false,
                "trackAdoption": false,
                "children": [
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.waitFor.$1.state",
                    "type": "CompoundType",
                    "tags": [],
                    "label": "state",
                    "description": [
                      "\nDefaults to `'visible'`. Can be either:\n- `'attached'` - wait for element to be present in DOM.\n- `'detached'` - wait for element to not be present in DOM.\n- `'visible'` - wait for element to have non-empty bounding box and no `visibility:hidden`. Note that element\n  without any content or with `display:none` has an empty bounding box and is not considered visible.\n- `'hidden'` - wait for element to be either detached from DOM, or have an empty bounding box or\n  `visibility:hidden`. This is opposite to the `'visible'` option."
                    ],
                    "signature": [
                      "\"hidden\" | \"visible\" | \"detached\" | \"attached\" | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  },
                  {
                    "parentPluginId": "@kbn/scout-oblt",
                    "id": "def-common.Locator.waitFor.$1.timeout",
                    "type": "number",
                    "tags": [],
                    "label": "timeout",
                    "description": [
                      "\nMaximum time in milliseconds. Defaults to `0` - no timeout. The default value can be changed via `actionTimeout`\noption in the config, or by using the\n[browserContext.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-browsercontext#browser-context-set-default-timeout)\nor [page.setDefaultTimeout(timeout)](https://playwright.dev/docs/api/class-page#page-set-default-timeout) methods."
                    ],
                    "signature": [
                      "number | undefined"
                    ],
                    "path": "node_modules/playwright/node_modules/playwright-core/types/types.d.ts",
                    "deprecated": false,
                    "trackAdoption": false
                  }
                ]
              }
            ],
            "returnComment": []
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.ObltPageObjects",
        "type": "Interface",
        "tags": [],
        "label": "ObltPageObjects",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/scout-oblt",
            "scope": "common",
            "docId": "kibKbnScoutObltPluginApi",
            "section": "def-common.ObltPageObjects",
            "text": "ObltPageObjects"
          },
          " extends ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.PageObjects",
            "text": "PageObjects"
          }
        ],
        "path": "x-pack/solutions/observability/packages/kbn-scout-oblt/src/playwright/page_objects/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ObltPageObjects.onboardingHome",
            "type": "Object",
            "tags": [],
            "label": "onboardingHome",
            "description": [],
            "signature": [
              "OnboardingHomePage"
            ],
            "path": "x-pack/solutions/observability/packages/kbn-scout-oblt/src/playwright/page_objects/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ObltPageObjects.customLogs",
            "type": "Object",
            "tags": [],
            "label": "customLogs",
            "description": [],
            "signature": [
              "CustomLogsPage"
            ],
            "path": "x-pack/solutions/observability/packages/kbn-scout-oblt/src/playwright/page_objects/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.ObltParallelTestFixtures",
        "type": "Interface",
        "tags": [],
        "label": "ObltParallelTestFixtures",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/scout-oblt",
            "scope": "common",
            "docId": "kibKbnScoutObltPluginApi",
            "section": "def-common.ObltParallelTestFixtures",
            "text": "ObltParallelTestFixtures"
          },
          " extends ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutParallelTestFixtures",
            "text": "ScoutParallelTestFixtures"
          }
        ],
        "path": "x-pack/solutions/observability/packages/kbn-scout-oblt/src/playwright/fixtures/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ObltParallelTestFixtures.pageObjects",
            "type": "Object",
            "tags": [],
            "label": "pageObjects",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/scout-oblt",
                "scope": "common",
                "docId": "kibKbnScoutObltPluginApi",
                "section": "def-common.ObltPageObjects",
                "text": "ObltPageObjects"
              }
            ],
            "path": "x-pack/solutions/observability/packages/kbn-scout-oblt/src/playwright/fixtures/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.ObltTestFixtures",
        "type": "Interface",
        "tags": [],
        "label": "ObltTestFixtures",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/scout-oblt",
            "scope": "common",
            "docId": "kibKbnScoutObltPluginApi",
            "section": "def-common.ObltTestFixtures",
            "text": "ObltTestFixtures"
          },
          " extends ",
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutTestFixtures",
            "text": "ScoutTestFixtures"
          }
        ],
        "path": "x-pack/solutions/observability/packages/kbn-scout-oblt/src/playwright/fixtures/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ObltTestFixtures.pageObjects",
            "type": "Object",
            "tags": [],
            "label": "pageObjects",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/scout-oblt",
                "scope": "common",
                "docId": "kibKbnScoutObltPluginApi",
                "section": "def-common.ObltPageObjects",
                "text": "ObltPageObjects"
              }
            ],
            "path": "x-pack/solutions/observability/packages/kbn-scout-oblt/src/playwright/fixtures/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.PageObjects",
        "type": "Interface",
        "tags": [],
        "label": "PageObjects",
        "description": [],
        "path": "packages/kbn-scout/src/playwright/page_objects/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.PageObjects.datePicker",
            "type": "Object",
            "tags": [],
            "label": "datePicker",
            "description": [],
            "signature": [
              "DatePicker"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.PageObjects.discover",
            "type": "Object",
            "tags": [],
            "label": "discover",
            "description": [],
            "signature": [
              "DiscoverApp"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.PageObjects.dashboard",
            "type": "Object",
            "tags": [],
            "label": "dashboard",
            "description": [],
            "signature": [
              "DashboardApp"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.PageObjects.filterBar",
            "type": "Object",
            "tags": [],
            "label": "filterBar",
            "description": [],
            "signature": [
              "FilterBar"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.PageObjects.maps",
            "type": "Object",
            "tags": [],
            "label": "maps",
            "description": [],
            "signature": [
              "MapsPage"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.PageObjects.renderable",
            "type": "Object",
            "tags": [],
            "label": "renderable",
            "description": [],
            "signature": [
              "RenderablePage"
            ],
            "path": "packages/kbn-scout/src/playwright/page_objects/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.ScoutPlaywrightOptions",
        "type": "Interface",
        "tags": [],
        "label": "ScoutPlaywrightOptions",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutPlaywrightOptions",
            "text": "ScoutPlaywrightOptions"
          },
          " extends Pick<",
          "PlaywrightTestConfig",
          "<{}, {}>, \"workers\" | \"testDir\" | \"globalSetup\">"
        ],
        "path": "packages/kbn-scout/src/playwright/types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutPlaywrightOptions.testDir",
            "type": "string",
            "tags": [],
            "label": "testDir",
            "description": [],
            "path": "packages/kbn-scout/src/playwright/types/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutPlaywrightOptions.workers",
            "type": "CompoundType",
            "tags": [],
            "label": "workers",
            "description": [],
            "signature": [
              "2 | 1 | 3 | undefined"
            ],
            "path": "packages/kbn-scout/src/playwright/types/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutPlaywrightOptions.globalSetup",
            "type": "string",
            "tags": [],
            "label": "globalSetup",
            "description": [],
            "signature": [
              "string | undefined"
            ],
            "path": "packages/kbn-scout/src/playwright/types/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.ScoutServerConfig",
        "type": "Interface",
        "tags": [],
        "label": "ScoutServerConfig",
        "description": [],
        "path": "packages/kbn-scout/src/types/server_config.d.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutServerConfig.serverless",
            "type": "CompoundType",
            "tags": [],
            "label": "serverless",
            "description": [],
            "signature": [
              "boolean | undefined"
            ],
            "path": "packages/kbn-scout/src/types/server_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutServerConfig.servers",
            "type": "Object",
            "tags": [],
            "label": "servers",
            "description": [],
            "signature": [
              "{ kibana: ",
              {
                "pluginId": "@kbn/test",
                "scope": "common",
                "docId": "kibKbnTestPluginApi",
                "section": "def-common.UrlParts",
                "text": "UrlParts"
              },
              "; elasticsearch: ",
              {
                "pluginId": "@kbn/test",
                "scope": "common",
                "docId": "kibKbnTestPluginApi",
                "section": "def-common.UrlParts",
                "text": "UrlParts"
              },
              "; fleet?: ",
              {
                "pluginId": "@kbn/test",
                "scope": "common",
                "docId": "kibKbnTestPluginApi",
                "section": "def-common.UrlParts",
                "text": "UrlParts"
              },
              " | undefined; }"
            ],
            "path": "packages/kbn-scout/src/types/server_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutServerConfig.dockerServers",
            "type": "Any",
            "tags": [],
            "label": "dockerServers",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "packages/kbn-scout/src/types/server_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutServerConfig.esTestCluster",
            "type": "Object",
            "tags": [],
            "label": "esTestCluster",
            "description": [],
            "signature": [
              "{ from: string; license?: string | undefined; files: string[]; serverArgs: string[]; ssl: boolean; }"
            ],
            "path": "packages/kbn-scout/src/types/server_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutServerConfig.kbnTestServer",
            "type": "Object",
            "tags": [],
            "label": "kbnTestServer",
            "description": [],
            "signature": [
              "{ env: any; buildArgs: string[]; sourceArgs: string[]; serverArgs: string[]; useDedicatedTestRunner?: boolean | undefined; }"
            ],
            "path": "packages/kbn-scout/src/types/server_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.ScoutTestConfig",
        "type": "Interface",
        "tags": [],
        "label": "ScoutTestConfig",
        "description": [],
        "path": "packages/kbn-scout/src/types/test_config.d.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutTestConfig.serverless",
            "type": "boolean",
            "tags": [],
            "label": "serverless",
            "description": [],
            "path": "packages/kbn-scout/src/types/test_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutTestConfig.projectType",
            "type": "CompoundType",
            "tags": [],
            "label": "projectType",
            "description": [],
            "signature": [
              {
                "pluginId": "@kbn/es",
                "scope": "common",
                "docId": "kibKbnEsPluginApi",
                "section": "def-common.ServerlessProjectType",
                "text": "ServerlessProjectType"
              },
              " | undefined"
            ],
            "path": "packages/kbn-scout/src/types/test_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutTestConfig.isCloud",
            "type": "boolean",
            "tags": [],
            "label": "isCloud",
            "description": [],
            "path": "packages/kbn-scout/src/types/test_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutTestConfig.license",
            "type": "string",
            "tags": [],
            "label": "license",
            "description": [],
            "path": "packages/kbn-scout/src/types/test_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutTestConfig.cloudUsersFilePath",
            "type": "string",
            "tags": [],
            "label": "cloudUsersFilePath",
            "description": [],
            "path": "packages/kbn-scout/src/types/test_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutTestConfig.hosts",
            "type": "Object",
            "tags": [],
            "label": "hosts",
            "description": [],
            "signature": [
              "{ kibana: string; elasticsearch: string; }"
            ],
            "path": "packages/kbn-scout/src/types/test_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutTestConfig.auth",
            "type": "Object",
            "tags": [],
            "label": "auth",
            "description": [],
            "signature": [
              "{ username: string; password: string; }"
            ],
            "path": "packages/kbn-scout/src/types/test_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutTestConfig.metadata",
            "type": "Any",
            "tags": [],
            "label": "metadata",
            "description": [],
            "signature": [
              "any"
            ],
            "path": "packages/kbn-scout/src/types/test_config.d.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.ScoutTestOptions",
        "type": "Interface",
        "tags": [],
        "label": "ScoutTestOptions",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutTestOptions",
            "text": "ScoutTestOptions"
          },
          " extends ",
          "PlaywrightTestOptions"
        ],
        "path": "packages/kbn-scout/src/playwright/types/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutTestOptions.serversConfigDir",
            "type": "string",
            "tags": [],
            "label": "serversConfigDir",
            "description": [],
            "path": "packages/kbn-scout/src/playwright/types/index.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.ScoutTestOptions.VALID_CONFIG_MARKER",
            "type": "boolean",
            "tags": [],
            "label": "[VALID_CONFIG_MARKER]",
            "description": [],
            "path": "packages/kbn-scout/src/playwright/types/index.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.ObltParallelWorkerFixtures",
        "type": "Type",
        "tags": [],
        "label": "ObltParallelWorkerFixtures",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutParallelWorkerFixtures",
            "text": "ScoutParallelWorkerFixtures"
          }
        ],
        "path": "x-pack/solutions/observability/packages/kbn-scout-oblt/src/playwright/fixtures/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.ObltWorkerFixtures",
        "type": "Type",
        "tags": [],
        "label": "ObltWorkerFixtures",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/scout",
            "scope": "common",
            "docId": "kibKbnScoutPluginApi",
            "section": "def-common.ScoutWorkerFixtures",
            "text": "ScoutWorkerFixtures"
          }
        ],
        "path": "x-pack/solutions/observability/packages/kbn-scout-oblt/src/playwright/fixtures/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.ScoutPage",
        "type": "Type",
        "tags": [],
        "label": "ScoutPage",
        "description": [
          "\nExtends the Playwright 'Page' interface with methods specific to Kibana.\nReasons to use 'ReturnType' instead of Explicit Typings:\n- DRY Principle: automatically stays in sync with the Playwright API, reducing maintenance overhead.\n- Future-Proofing: If Playwright changes the return type of methods, these types will update accordingly.\nRecommendation: define Explicit Types as return types only if methods (e.g. 'typeWithDelay')\nhave any additional logic or Kibana-specific behavior."
        ],
        "signature": [
          "Page",
          " & { gotoApp: (appName: string, pathOptions?: ",
          "PathOptions",
          " | undefined) => Promise<",
          "Response",
          " | null>; waitForLoadingIndicatorHidden: () => Promise<",
          "ElementHandle",
          "<HTMLElement | SVGElement> | null>; testSubj: { check: (selector: string, options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; strict?: boolean | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>; click: (selector: string, options?: { button?: \"right\" | \"left\" | \"middle\" | undefined; clickCount?: number | undefined; delay?: number | undefined; force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; strict?: boolean | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>; dblclick: (selector: string, options?: { button?: \"right\" | \"left\" | \"middle\" | undefined; delay?: number | undefined; force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; strict?: boolean | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>; fill: (selector: string, value: string, options?: { force?: boolean | undefined; noWaitAfter?: boolean | undefined; strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>; focus: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<void>; getAttribute: (selector: string, name: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<string | null>; hover: (selector: string, options?: { force?: boolean | undefined; modifiers?: (\"Alt\" | \"Control\" | \"Meta\" | \"Shift\" | \"ControlOrMeta\")[] | undefined; noWaitAfter?: boolean | undefined; position?: { x: number; y: number; } | undefined; strict?: boolean | undefined; timeout?: number | undefined; trial?: boolean | undefined; } | undefined) => Promise<void>; innerText: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<string>; isEnabled: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<boolean>; isChecked: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<boolean>; isHidden: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<boolean>; isVisible: (selector: string, options?: { strict?: boolean | undefined; timeout?: number | undefined; } | undefined) => Promise<boolean>; locator: (selector: string, options?: { has?: ",
          "Locator",
          " | undefined; hasNot?: ",
          "Locator",
          " | undefined; hasNotText?: string | RegExp | undefined; hasText?: string | RegExp | undefined; } | undefined) => ",
          "Locator",
          "; waitForSelector: (selector: string, options?: PageWaitForSelectorOptions | undefined) => Promise<",
          "ElementHandle",
          "<HTMLElement | SVGElement> | null>; typeWithDelay: (selector: string, text: string, options?: { delay: number; } | undefined) => Promise<void>; clearInput: (selector: string) => Promise<void>; }; }"
        ],
        "path": "packages/kbn-scout/src/playwright/fixtures/test/scout_page/index.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "@kbn/scout-oblt",
        "id": "def-common.tags",
        "type": "Object",
        "tags": [],
        "label": "tags",
        "description": [],
        "path": "packages/kbn-scout/src/playwright/tags.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.tags.ESS_ONLY",
            "type": "Array",
            "tags": [],
            "label": "ESS_ONLY",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "packages/kbn-scout/src/playwright/tags.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.tags.SERVERLESS_ONLY",
            "type": "Array",
            "tags": [],
            "label": "SERVERLESS_ONLY",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "packages/kbn-scout/src/playwright/tags.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/scout-oblt",
            "id": "def-common.tags.DEPLOYMENT_AGNOSTIC",
            "type": "Array",
            "tags": [],
            "label": "DEPLOYMENT_AGNOSTIC",
            "description": [],
            "signature": [
              "string[]"
            ],
            "path": "packages/kbn-scout/src/playwright/tags.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ]
  }
}