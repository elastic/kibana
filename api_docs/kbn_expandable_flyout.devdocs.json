{
  "id": "@kbn/expandable-flyout",
  "client": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "server": {
    "classes": [],
    "functions": [],
    "interfaces": [],
    "enums": [],
    "misc": [],
    "objects": []
  },
  "common": {
    "classes": [],
    "functions": [
      {
        "parentPluginId": "@kbn/expandable-flyout",
        "id": "def-common.ExpandableFlyout",
        "type": "Function",
        "tags": [],
        "label": "ExpandableFlyout",
        "description": [
          "\nExpandable flyout UI React component.\nDisplays 3 sections (right, left, preview) depending on the panels in the context.\n\nThe behavior expects that the left and preview sections should only be displayed is a right section\nis already rendered."
        ],
        "signature": [
          "{ ({ registeredPanels, ...flyoutProps }: React.PropsWithChildren<",
          {
            "pluginId": "@kbn/expandable-flyout",
            "scope": "common",
            "docId": "kibKbnExpandableFlyoutPluginApi",
            "section": "def-common.ExpandableFlyoutProps",
            "text": "ExpandableFlyoutProps"
          },
          ">): JSX.Element | null; displayName: string | undefined; }"
        ],
        "path": "packages/kbn-expandable-flyout/src/index.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/expandable-flyout",
            "id": "def-common.ExpandableFlyout.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  registeredPanels,\n  ...flyoutProps\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<",
              {
                "pluginId": "@kbn/expandable-flyout",
                "scope": "common",
                "docId": "kibKbnExpandableFlyoutPluginApi",
                "section": "def-common.ExpandableFlyoutProps",
                "text": "ExpandableFlyoutProps"
              },
              ">"
            ],
            "path": "packages/kbn-expandable-flyout/src/index.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/expandable-flyout",
        "id": "def-common.ExpandableFlyoutProvider",
        "type": "Function",
        "tags": [],
        "label": "ExpandableFlyoutProvider",
        "description": [
          "\nWrap your plugin with this context for the ExpandableFlyout React component.\nStorage property allows you to specify how the flyout state works internally.\nWith \"url\", it will be persisted into url and thus allow for deep linking & will survive webpage reloads.\n\"memory\" is based on useReducer hook. The state is saved internally to the package. which means it will not be\npersisted when sharing url or reloading browser pages."
        ],
        "signature": [
          "({ children, storage, }: React.PropsWithChildren<React.PropsWithChildren<ExpandableFlyoutProviderProps>>) => JSX.Element"
        ],
        "path": "packages/kbn-expandable-flyout/src/provider.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/expandable-flyout",
            "id": "def-common.ExpandableFlyoutProvider.$1",
            "type": "CompoundType",
            "tags": [],
            "label": "{\n  children,\n  storage = 'url',\n}",
            "description": [],
            "signature": [
              "React.PropsWithChildren<React.PropsWithChildren<ExpandableFlyoutProviderProps>>"
            ],
            "path": "packages/kbn-expandable-flyout/src/provider.tsx",
            "deprecated": false,
            "trackAdoption": false,
            "isRequired": true
          }
        ],
        "returnComment": [],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/expandable-flyout",
        "id": "def-common.useExpandableFlyoutContext",
        "type": "Function",
        "tags": [],
        "label": "useExpandableFlyoutContext",
        "description": [
          "\nRetrieve context's properties"
        ],
        "signature": [
          "() => ",
          "ExpandableFlyoutContextValue"
        ],
        "path": "packages/kbn-expandable-flyout/src/context.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [],
        "returnComment": [],
        "initialIsOpen": false
      }
    ],
    "interfaces": [
      {
        "parentPluginId": "@kbn/expandable-flyout",
        "id": "def-common.ExpandableFlyoutProps",
        "type": "Interface",
        "tags": [],
        "label": "ExpandableFlyoutProps",
        "description": [],
        "signature": [
          {
            "pluginId": "@kbn/expandable-flyout",
            "scope": "common",
            "docId": "kibKbnExpandableFlyoutPluginApi",
            "section": "def-common.ExpandableFlyoutProps",
            "text": "ExpandableFlyoutProps"
          },
          " extends Omit<",
          "EuiFlyoutProps",
          "<\"div\">, \"onClose\">"
        ],
        "path": "packages/kbn-expandable-flyout/src/index.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/expandable-flyout",
            "id": "def-common.ExpandableFlyoutProps.registeredPanels",
            "type": "Array",
            "tags": [],
            "label": "registeredPanels",
            "description": [
              "\nList of all registered panels available for render"
            ],
            "signature": [
              "Panel",
              "[]"
            ],
            "path": "packages/kbn-expandable-flyout/src/index.tsx",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/expandable-flyout",
        "id": "def-common.FlyoutPanelProps",
        "type": "Interface",
        "tags": [],
        "label": "FlyoutPanelProps",
        "description": [],
        "path": "packages/kbn-expandable-flyout/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/expandable-flyout",
            "id": "def-common.FlyoutPanelProps.id",
            "type": "string",
            "tags": [],
            "label": "id",
            "description": [
              "\nUnique key to identify the panel"
            ],
            "path": "packages/kbn-expandable-flyout/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/expandable-flyout",
            "id": "def-common.FlyoutPanelProps.params",
            "type": "Object",
            "tags": [],
            "label": "params",
            "description": [
              "\nAny parameters necessary for the initial requests within the flyout"
            ],
            "signature": [
              "Record<string, unknown> | undefined"
            ],
            "path": "packages/kbn-expandable-flyout/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/expandable-flyout",
            "id": "def-common.FlyoutPanelProps.path",
            "type": "Object",
            "tags": [],
            "label": "path",
            "description": [
              "\nTracks the path for what to show in a panel, such as activated tab and subtab"
            ],
            "signature": [
              {
                "pluginId": "@kbn/expandable-flyout",
                "scope": "common",
                "docId": "kibKbnExpandableFlyoutPluginApi",
                "section": "def-common.PanelPath",
                "text": "PanelPath"
              },
              " | undefined"
            ],
            "path": "packages/kbn-expandable-flyout/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/expandable-flyout",
            "id": "def-common.FlyoutPanelProps.state",
            "type": "Object",
            "tags": [],
            "label": "state",
            "description": [
              "\nTracks visual state such as whether the panel is collapsed"
            ],
            "signature": [
              "Record<string, unknown> | undefined"
            ],
            "path": "packages/kbn-expandable-flyout/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      },
      {
        "parentPluginId": "@kbn/expandable-flyout",
        "id": "def-common.PanelPath",
        "type": "Interface",
        "tags": [],
        "label": "PanelPath",
        "description": [],
        "path": "packages/kbn-expandable-flyout/src/types.ts",
        "deprecated": false,
        "trackAdoption": false,
        "children": [
          {
            "parentPluginId": "@kbn/expandable-flyout",
            "id": "def-common.PanelPath.tab",
            "type": "string",
            "tags": [],
            "label": "tab",
            "description": [
              "\nTop level tab that to be displayed"
            ],
            "path": "packages/kbn-expandable-flyout/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          },
          {
            "parentPluginId": "@kbn/expandable-flyout",
            "id": "def-common.PanelPath.subTab",
            "type": "string",
            "tags": [],
            "label": "subTab",
            "description": [
              "\nOptional secondary level to be displayed under top level tab"
            ],
            "signature": [
              "string | undefined"
            ],
            "path": "packages/kbn-expandable-flyout/src/types.ts",
            "deprecated": false,
            "trackAdoption": false
          }
        ],
        "initialIsOpen": false
      }
    ],
    "enums": [],
    "misc": [
      {
        "parentPluginId": "@kbn/expandable-flyout",
        "id": "def-common.EXPANDABLE_FLYOUT_URL_KEY",
        "type": "string",
        "tags": [],
        "label": "EXPANDABLE_FLYOUT_URL_KEY",
        "description": [],
        "signature": [
          "\"eventFlyout\""
        ],
        "path": "packages/kbn-expandable-flyout/src/constants.ts",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ],
    "objects": [
      {
        "parentPluginId": "@kbn/expandable-flyout",
        "id": "def-common.ExpandableFlyoutContext",
        "type": "Object",
        "tags": [],
        "label": "ExpandableFlyoutContext",
        "description": [],
        "signature": [
          "React.Context<",
          "ExpandableFlyoutContextValue",
          " | undefined>"
        ],
        "path": "packages/kbn-expandable-flyout/src/context.tsx",
        "deprecated": false,
        "trackAdoption": false,
        "initialIsOpen": false
      }
    ]
  }
}